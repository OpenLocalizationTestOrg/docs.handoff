{"content":"---\ntitle: \"Code Access Security Policy Compatibility and Migration\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"policy migration, compatibility\"\n  - \"CLR policy migration\"\nms.assetid: 19cb4d39-e38a-4262-b507-458915303115\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n\n# Code Access Security Policy Compatibility and Migration\n\n[!INCLUDE[net_security_note](../../../includes/net-security-note-md.md)]\n\nThe policy portion of code access security (CAS) has been made obsolete in the [!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]. As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members [explicitly](#explicit_use) or [implicitly](#implicit_use) (through other types and members).\n\nYou can avoid the warnings and errors by either:\n\n- [Migrating](#migration) to the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] replacements for the obsolete calls.\n\n   \\- or -\n\n- Using the [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) to opt into the legacy CAS policy behavior.\n\nThis topic contains the following sections:\n\n- [Explicit Use](#explicit_use)\n\n- [Implicit Use](#implicit_use)\n\n- [Errors and Warnings](#errors_and_warnings)\n\n- [Migration: Replacement for Obsolete Calls](#migration)\n\n- [Compatibility: Using the CAS Policy Legacy Option](#compatibility)\n\n<a name=\"explicit_use\"></a>\n\n## Explicit Use\n\nMembers that directly manipulate security policy or require CAS policy to sandbox are obsolete and will produce errors by default.\n\nExamples of these are:\n\n- <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.HostSecurityManager.DomainPolicy%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.Policy.PolicyLevel.CreateAppDomainLevel%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.LoadPolicyLevelFromString%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.LoadPolicyLevelFromFile%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.ResolveSystemPolicy%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.ResolvePolicyGroups%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=nameWithType>\n\n- <xref:System.Security.SecurityManager.SavePolicy%2A?displayProperty=nameWithType>\n\n<a name=\"implicit_use\"></a>\n\n## Implicit Use\n\nSeveral assembly loading overloads produce errors because of their implicit use of CAS policy. These overloads take an <xref:System.Security.Policy.Evidence> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly.\n\nHere are some examples. The obsolete overloads are those that take <xref:System.Security.Policy.Evidence> as a parameter:\n\n- <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.CreateInstanceFrom%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.ExecuteAssemblyByName%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.Load%2A?displayProperty=nameWithType>\n\n- <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>\n\n- <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>\n\n- <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>\n\n<a name=\"errors_and_warnings\"></a>\n\n## Errors and Warnings\n\nThe obsolete types and members produce the following error messages when they are used. Note that the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> type itself is not obsolete.\n\nCompile-time warning:\n\n`warning CS0618: '<API Name>' is obsolete: 'This method is obsolete and will be removed in a future release of the .NET Framework. Please use <suggested alternate API>. See <link> for more information.'`\n\nRun-time exception:\n\n<xref:System.NotSupportedException>: `This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the <NetFx40_LegacySecurityPolicy> configuration switch. Please see <link> for more information.`\n\n<a name=\"migration\"></a>\n\n## Migration: Replacement for Obsolete Calls\n\n### Determining an Assembly’s Trust Level\n\nCAS policy is often used to determine an assembly’s or application domain’s permission grant set or trust level. The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes the following useful properties that do not need to resolve security policy:\n\n- <xref:System.Reflection.Assembly.PermissionSet%2A?displayProperty=nameWithType>\n\n- <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.PermissionSet%2A?displayProperty=nameWithType>\n\n- <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType>\n\n### Application Domain Sandboxing\n\nThe <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=nameWithType> method is typically used for sandboxing the assemblies in an application domain. The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes members that do not have to use <xref:System.Security.Policy.PolicyLevel> for this purpose. For more information, see [How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).\n\n### Determining a Safe or Reasonable Permission Set for Partially Trusted Code\n\nHosts often need to determine the permissions that are appropriate for sandboxing hosted code. Before the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], CAS policy provided a way to do this with the <xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=nameWithType> method. As a replacement, [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] provides the <xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=nameWithType> method, which returns a safe, standard permission set for the provided evidence.\n\n### Non-Sandboxing Scenarios: Overloads for Assembly Loads\n\nThe reason for using an assembly load overload might be to use parameters that are not otherwise available, instead of sandboxing the assembly. Starting with the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], assembly load overloads that do not require a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object as a parameter, for example, <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=nameWithType>, enable this scenario.\n\nIf you want to sandbox an assembly, use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> overload.\n\n<a name=\"compatibility\"></a>\n\n## Compatibility: Using the CAS Policy Legacy Option\n\nThe [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) lets you specify that a process or library uses legacy CAS policy. When you enable this element, the policy and evidence overloads will work as they did in previous versions of the framework.\n\n> [!NOTE]\n> CAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.\n\n```xml\n<configuration>\n   <runtime>\n      <NetFx40_LegacySecurityPolicy enabled=\"true\"/>\n   </runtime>\n</configuration>\n```\n\n## See also\n\n- [How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)\n- [Secure Coding Guidelines](../../standard/security/secure-coding-guidelines.md)\n","nodes":[{"pos":[4,262],"embed":true,"restype":"x-metadata","content":"title: \"Code Access Security Policy Compatibility and Migration\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"policy migration, compatibility\"\n  - \"CLR policy migration\"\nms.assetid: 19cb4d39-e38a-4262-b507-458915303115\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"Code Access Security Policy Compatibility and Migration","nodes":[{"pos":[0,55],"content":"Code Access Security Policy Compatibility and Migration","nodes":[{"content":"Code Access Security Policy Compatibility and Migration","pos":[0,55]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[270,325],"content":"Code Access Security Policy Compatibility and Migration","linkify":"Code Access Security Policy Compatibility and Migration","nodes":[{"content":"Code Access Security Policy Compatibility and Migration","pos":[0,55]}]},{"content":"The policy portion of code access security (CAS) has been made obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>.","pos":[401,543],"source":"The policy portion of code access security (CAS) has been made obsolete in the [!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]."},{"content":"As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members <bpt id=\"p1\">[</bpt>explicitly<ept id=\"p1\">](#explicit_use)</ept> or <bpt id=\"p2\">[</bpt>implicitly<ept id=\"p2\">](#implicit_use)</ept> (through other types and members).","pos":[544,762],"source":" As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members [explicitly](#explicit_use) or [implicitly](#implicit_use) (through other types and members)."},{"content":"You can avoid the warnings and errors by either:","pos":[764,812]},{"pos":[816,948],"content":"<bpt id=\"p1\">[</bpt>Migrating<ept id=\"p1\">](#migration)</ept> to the <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> replacements for the obsolete calls.","source":"[Migrating](#migration) to the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] replacements for the obsolete calls."},{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[953,960],"source":"\\- or -"},{"pos":[964,1172],"content":"Using the <bpt id=\"p1\">[</bpt>&lt;NetFx40_LegacySecurityPolicy&gt; configuration element<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept> to opt into the legacy CAS policy behavior.","source":"Using the [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) to opt into the legacy CAS policy behavior."},{"content":"This topic contains the following sections:","pos":[1174,1217]},{"pos":[1221,1250],"content":"<bpt id=\"p1\">[</bpt>Explicit Use<ept id=\"p1\">](#explicit_use)</ept>","source":"[Explicit Use](#explicit_use)"},{"pos":[1254,1283],"content":"<bpt id=\"p1\">[</bpt>Implicit Use<ept id=\"p1\">](#implicit_use)</ept>","source":"[Implicit Use](#implicit_use)"},{"pos":[1287,1330],"content":"<bpt id=\"p1\">[</bpt>Errors and Warnings<ept id=\"p1\">](#errors_and_warnings)</ept>","source":"[Errors and Warnings](#errors_and_warnings)"},{"pos":[1334,1389],"content":"<bpt id=\"p1\">[</bpt>Migration: Replacement for Obsolete Calls<ept id=\"p1\">](#migration)</ept>","source":"[Migration: Replacement for Obsolete Calls](#migration)"},{"pos":[1393,1460],"content":"<bpt id=\"p1\">[</bpt>Compatibility: Using the CAS Policy Legacy Option<ept id=\"p1\">](#compatibility)</ept>","source":"[Compatibility: Using the CAS Policy Legacy Option](#compatibility)"},{"pos":[1494,1506],"content":"Explicit Use","linkify":"Explicit Use","nodes":[{"content":"Explicit Use","pos":[0,12]}]},{"content":"Members that directly manipulate security policy or require CAS policy to sandbox are obsolete and will produce errors by default.","pos":[1508,1638]},{"content":"Examples of these are:","pos":[1640,1662]},{"pos":[2612,2624],"content":"Implicit Use","linkify":"Implicit Use","nodes":[{"content":"Implicit Use","pos":[0,12]}]},{"content":"Several assembly loading overloads produce errors because of their implicit use of CAS policy.","pos":[2626,2720]},{"content":"These overloads take an <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly.","pos":[2721,2880],"source":" These overloads take an <xref:System.Security.Policy.Evidence> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly."},{"content":"Here are some examples.","pos":[2882,2905]},{"content":"The obsolete overloads are those that take <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> as a parameter:","pos":[2906,3003],"source":" The obsolete overloads are those that take <xref:System.Security.Policy.Evidence> as a parameter:"},{"pos":[3739,3758],"content":"Errors and Warnings","linkify":"Errors and Warnings","nodes":[{"content":"Errors and Warnings","pos":[0,19]}]},{"content":"The obsolete types and members produce the following error messages when they are used.","pos":[3760,3847]},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence?displayProperty=nameWithType&gt;</ph> type itself is not obsolete.","pos":[3848,3958],"source":" Note that the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> type itself is not obsolete."},{"content":"Compile-time warning:","pos":[3960,3981]},{"content":"Run-time exception:","pos":[4188,4207]},{"pos":[4209,4489],"content":"<ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph>: <ph id=\"ph2\">`This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the &lt;NetFx40_LegacySecurityPolicy&gt; configuration switch. Please see &lt;link&gt; for more information.`</ph>","source":"<xref:System.NotSupportedException>: `This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the <NetFx40_LegacySecurityPolicy> configuration switch. Please see <link> for more information.`"},{"pos":[4520,4561],"content":"Migration: Replacement for Obsolete Calls","linkify":"Migration: Replacement for Obsolete Calls","nodes":[{"content":"Migration: Replacement for Obsolete Calls","pos":[0,41]}]},{"pos":[4567,4604],"content":"Determining an Assembly’s Trust Level","linkify":"Determining an Assembly’s Trust Level","nodes":[{"content":"Determining an Assembly’s Trust Level","pos":[0,37]}]},{"content":"CAS policy is often used to determine an assembly’s or application domain’s permission grant set or trust level.","pos":[4606,4718]},{"content":"The <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> exposes the following useful properties that do not need to resolve security policy:","pos":[4719,4872],"source":" The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes the following useful properties that do not need to resolve security policy:"},{"pos":[5192,5221],"content":"Application Domain Sandboxing","linkify":"Application Domain Sandboxing","nodes":[{"content":"Application Domain Sandboxing","pos":[0,29]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=nameWithType&gt;</ph> method is typically used for sandboxing the assemblies in an application domain.","pos":[5223,5382],"source":"The <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=nameWithType> method is typically used for sandboxing the assemblies in an application domain."},{"content":"The <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> exposes members that do not have to use <ph id=\"ph2\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> for this purpose.","pos":[5383,5551],"source":" The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes members that do not have to use <xref:System.Security.Policy.PolicyLevel> for this purpose."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id=\"p1\">](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>.","pos":[5552,5708],"source":" For more information, see [How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)."},{"pos":[5714,5788],"content":"Determining a Safe or Reasonable Permission Set for Partially Trusted Code","linkify":"Determining a Safe or Reasonable Permission Set for Partially Trusted Code","nodes":[{"content":"Determining a Safe or Reasonable Permission Set for Partially Trusted Code","pos":[0,74]}]},{"content":"Hosts often need to determine the permissions that are appropriate for sandboxing hosted code.","pos":[5790,5884]},{"content":"Before the <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, CAS policy provided a way to do this with the <ph id=\"ph2\">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=nameWithType&gt;</ph> method.","pos":[5885,6100],"source":" Before the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], CAS policy provided a way to do this with the <xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=nameWithType> method."},{"content":"As a replacement, <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> provides the <ph id=\"ph2\">&lt;xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=nameWithType&gt;</ph> method, which returns a safe, standard permission set for the provided evidence.","pos":[6101,6367],"source":" As a replacement, [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] provides the <xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=nameWithType> method, which returns a safe, standard permission set for the provided evidence."},{"pos":[6373,6427],"content":"Non-Sandboxing Scenarios: Overloads for Assembly Loads","linkify":"Non-Sandboxing Scenarios: Overloads for Assembly Loads","nodes":[{"content":"Non-Sandboxing Scenarios: Overloads for Assembly Loads","pos":[0,54]}]},{"content":"The reason for using an assembly load overload might be to use parameters that are not otherwise available, instead of sandboxing the assembly.","pos":[6429,6572]},{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, assembly load overloads that do not require a <ph id=\"ph2\">&lt;xref:System.Security.Policy.Evidence?displayProperty=nameWithType&gt;</ph> object as a parameter, for example, <ph id=\"ph3\">&lt;xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=nameWithType&gt;</ph>, enable this scenario.","pos":[6573,7015],"source":" Starting with the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], assembly load overloads that do not require a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object as a parameter, for example, <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=nameWithType>, enable this scenario."},{"pos":[7017,7287],"content":"If you want to sandbox an assembly, use the <ph id=\"ph1\">&lt;xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType&gt;</ph> overload.","source":"If you want to sandbox an assembly, use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> overload."},{"pos":[7322,7371],"content":"Compatibility: Using the CAS Policy Legacy Option","linkify":"Compatibility: Using the CAS Policy Legacy Option","nodes":[{"content":"Compatibility: Using the CAS Policy Legacy Option","pos":[0,49]}]},{"content":"The <bpt id=\"p1\">[</bpt>&lt;NetFx40_LegacySecurityPolicy&gt; configuration element<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept> lets you specify that a process or library uses legacy CAS policy.","pos":[7373,7598],"source":"The [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) lets you specify that a process or library uses legacy CAS policy."},{"content":"When you enable this element, the policy and evidence overloads will work as they did in previous versions of the framework.","pos":[7599,7723]},{"pos":[7727,7896],"content":"[!NOTE]\nCAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.","leadings":["","> "],"nodes":[{"content":"CAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.","pos":[8,167]}]},{"pos":[8026,8034],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[8038,8167],"content":"<bpt id=\"p1\">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id=\"p1\">](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>","source":"[How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)"},{"pos":[8170,8249],"content":"<bpt id=\"p1\">[</bpt>Secure Coding Guidelines<ept id=\"p1\">](../../standard/security/secure-coding-guidelines.md)</ept>","source":"[Secure Coding Guidelines](../../standard/security/secure-coding-guidelines.md)"}]}