{"content":"---\ntitle: \"How to: Customize a Time-Based Cache Policy\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"time-based cache policies\"\n  - \"customizing time-based cache policies\"\n  - \"cache [.NET Framework], time-based policies\"\nms.assetid: 8d84f936-2376-4356-9264-03162e0f9279\n---\n# How to: Customize a Time-Based Cache Policy\nWhen creating a time-based cache policy, you can customize caching behavior by specifying values for maximum age, minimum freshness, maximum staleness, or cache synchronization date. The <xref:System.Net.Cache.HttpRequestCachePolicy> object provides several constructors that allow you to specify valid combinations of these values.  \n  \n### To create a time-based cache policy that uses a cache synchronization date  \n  \n-   Create a time-based cache policy that uses a cache synchronization date by passing a <xref:System.DateTime> object to the <xref:System.Net.Cache.HttpRequestCachePolicy> constructor.  \n  \n    ```csharp  \n    public static HttpRequestCachePolicy CreateLastSyncPolicy(DateTime when)  \n    {  \n        HttpRequestCachePolicy policy =   \n            new HttpRequestCachePolicy(when);  \n        Console.WriteLine(\"When: {0}\", when);  \n        Console.WriteLine(policy.ToString());  \n        return policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Function CreateLastSyncPolicy([when] As DateTime) As HttpRequestCachePolicy  \n        Dim policy As New HttpRequestCachePolicy([when])  \n        Console.WriteLine(\"When: {0}\", [when])  \n        Console.WriteLine(policy.ToString())  \n        Return policy  \n    End Function  \n    ```  \n  \n The output is similar to the following:  \n  \n```  \nWhen: 1/14/2004 8:07:30 AM  \nLevel:Default CacheSyncDate:1/14/2004 8:07:30 AM  \n```  \n  \n### To create a time-based cache policy that is based on minimum freshness  \n  \n-   Create a time-based cache policy that is based on minimum freshness by specifying <xref:System.Net.Cache.HttpCacheAgeControl.MinFresh> as the `cacheAgeControl` parameter value and passing a <xref:System.TimeSpan> object to the <xref:System.Net.Cache.HttpRequestCachePolicy> constructor.  \n  \n    ```csharp  \n    public static HttpRequestCachePolicy CreateMinFreshPolicy(TimeSpan span)  \n    {  \n        HttpRequestCachePolicy policy =   \n            new HttpRequestCachePolicy(HttpCacheAgeControl.MinFresh, span);  \n        Console.WriteLine(policy.ToString());  \n        return policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Function CreateMinFreshPolicy(span As TimeSpan) As HttpRequestCachePolicy  \n        Dim policy As New HttpRequestCachePolicy(HttpCacheAgeControl.MinFresh, span)  \n        Console.WriteLine(policy.ToString())  \n        Return policy  \n    End Function  \n    ```  \n  \n For the following invocation:  \n  \n```  \nCreateMinFreshPolicy(new TimeSpan(1,0,0));  \n```  \n  \n```  \nLevel:Default MinFresh:3600  \n```  \n  \n### To create a time-based cache policy that is based on minimum freshness and maximum age  \n  \n-   Create a time-based cache policy that is based on minimum freshness and maximum age by specifying <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh> as the `cacheAgeControl` parameter value and passing two <xref:System.TimeSpan> objects to the <xref:System.Net.Cache.HttpRequestCachePolicy> constructor, one to specify the maximum age for resources and a second to specify the minimum freshness permitted for an object returned from the cache.  \n  \n    ```csharp  \n    public static HttpRequestCachePolicy CreateFreshAndAgePolicy(TimeSpan freshMinimum, TimeSpan ageMaximum)  \n    {  \n        HttpRequestCachePolicy policy =   \n        new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAgeAndMinFresh, ageMaximum, freshMinimum);  \n        Console.WriteLine(policy.ToString());  \n        return policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Function CreateFreshAndAgePolicy(freshMinimum As TimeSpan, ageMaximum As TimeSpan) As HttpRequestCachePolicy  \n        Dim policy As New HttpRequestCachePolicy(HttpCacheAgeControl.MaxAgeAndMinFresh, ageMaximum, freshMinimum)  \n        Console.WriteLine(policy.ToString())  \n        Return policy  \n    End Function  \n    ```  \n  \n For the following invocation:  \n  \n```  \nCreateFreshAndAgePolicy(new TimeSpan(5,0,0), new TimeSpan(10,0,0));  \n```  \n  \n```  \nLevel:Default MaxAge:36000 MinFresh:18000  \n```  \n  \n## See also\n\n- [Cache Management for Network Applications](../../../docs/framework/network-programming/cache-management-for-network-applications.md)\n- [Cache Policy](../../../docs/framework/network-programming/cache-policy.md)\n- [Location-Based Cache Policies](../../../docs/framework/network-programming/location-based-cache-policies.md)\n- [Time-Based Cache Policies](../../../docs/framework/network-programming/time-based-cache-policies.md)\n- [\\<requestCaching> Element (Network Settings)](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)\n","nodes":[{"pos":[4,309],"embed":true,"restype":"x-metadata","content":"title: \"How to: Customize a Time-Based Cache Policy\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"time-based cache policies\"\n  - \"customizing time-based cache policies\"\n  - \"cache [.NET Framework], time-based policies\"\nms.assetid: 8d84f936-2376-4356-9264-03162e0f9279","nodes":[{"content":"How to: Customize a Time-Based Cache Policy","nodes":[{"pos":[0,43],"content":"How to: Customize a Time-Based Cache Policy","nodes":[{"content":"How to: Customize a Time-Based Cache Policy","pos":[0,43]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[316,359],"content":"How to: Customize a Time-Based Cache Policy","linkify":"How to: Customize a Time-Based Cache Policy","nodes":[{"content":"How to: Customize a Time-Based Cache Policy","pos":[0,43]}]},{"content":"When creating a time-based cache policy, you can customize caching behavior by specifying values for maximum age, minimum freshness, maximum staleness, or cache synchronization date.","pos":[360,542]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object provides several constructors that allow you to specify valid combinations of these values.","pos":[543,692],"source":" The <xref:System.Net.Cache.HttpRequestCachePolicy> object provides several constructors that allow you to specify valid combinations of these values."},{"pos":[702,776],"content":"To create a time-based cache policy that uses a cache synchronization date","linkify":"To create a time-based cache policy that uses a cache synchronization date","nodes":[{"content":"To create a time-based cache policy that uses a cache synchronization date","pos":[0,74]}]},{"pos":[786,967],"content":"Create a time-based cache policy that uses a cache synchronization date by passing a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object to the <ph id=\"ph2\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> constructor.","source":"Create a time-based cache policy that uses a cache synchronization date by passing a <xref:System.DateTime> object to the <xref:System.Net.Cache.HttpRequestCachePolicy> constructor."},{"content":"The output is similar to the following:","pos":[1629,1668]},{"pos":[1773,1843],"content":"To create a time-based cache policy that is based on minimum freshness","linkify":"To create a time-based cache policy that is based on minimum freshness","nodes":[{"content":"To create a time-based cache policy that is based on minimum freshness","pos":[0,70]}]},{"pos":[1853,2139],"content":"Create a time-based cache policy that is based on minimum freshness by specifying <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpCacheAgeControl.MinFresh&gt;</ph> as the <ph id=\"ph2\">`cacheAgeControl`</ph> parameter value and passing a <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph> object to the <ph id=\"ph4\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> constructor.","source":"Create a time-based cache policy that is based on minimum freshness by specifying <xref:System.Net.Cache.HttpCacheAgeControl.MinFresh> as the `cacheAgeControl` parameter value and passing a <xref:System.TimeSpan> object to the <xref:System.Net.Cache.HttpRequestCachePolicy> constructor."},{"content":"For the following invocation:","pos":[2760,2789]},{"pos":[2904,2990],"content":"To create a time-based cache policy that is based on minimum freshness and maximum age","linkify":"To create a time-based cache policy that is based on minimum freshness and maximum age","nodes":[{"content":"To create a time-based cache policy that is based on minimum freshness and maximum age","pos":[0,86]}]},{"pos":[3000,3454],"content":"Create a time-based cache policy that is based on minimum freshness and maximum age by specifying <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh&gt;</ph> as the <ph id=\"ph2\">`cacheAgeControl`</ph> parameter value and passing two <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph> objects to the <ph id=\"ph4\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> constructor, one to specify the maximum age for resources and a second to specify the minimum freshness permitted for an object returned from the cache.","source":"Create a time-based cache policy that is based on minimum freshness and maximum age by specifying <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh> as the `cacheAgeControl` parameter value and passing two <xref:System.TimeSpan> objects to the <xref:System.Net.Cache.HttpRequestCachePolicy> constructor, one to specify the maximum age for resources and a second to specify the minimum freshness permitted for an object returned from the cache."},{"content":"For the following invocation:","pos":[4196,4225]},{"pos":[4378,4386],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4390,4523],"content":"<bpt id=\"p1\">[</bpt>Cache Management for Network Applications<ept id=\"p1\">](../../../docs/framework/network-programming/cache-management-for-network-applications.md)</ept>","source":"[Cache Management for Network Applications](../../../docs/framework/network-programming/cache-management-for-network-applications.md)"},{"pos":[4526,4601],"content":"<bpt id=\"p1\">[</bpt>Cache Policy<ept id=\"p1\">](../../../docs/framework/network-programming/cache-policy.md)</ept>","source":"[Cache Policy](../../../docs/framework/network-programming/cache-policy.md)"},{"pos":[4604,4713],"content":"<bpt id=\"p1\">[</bpt>Location-Based Cache Policies<ept id=\"p1\">](../../../docs/framework/network-programming/location-based-cache-policies.md)</ept>","source":"[Location-Based Cache Policies](../../../docs/framework/network-programming/location-based-cache-policies.md)"},{"pos":[4716,4817],"content":"<bpt id=\"p1\">[</bpt>Time-Based Cache Policies<ept id=\"p1\">](../../../docs/framework/network-programming/time-based-cache-policies.md)</ept>","source":"[Time-Based Cache Policies](../../../docs/framework/network-programming/time-based-cache-policies.md)"},{"pos":[4820,4969],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>requestCaching&gt; Element (Network Settings)<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)</ept>","source":"[\\<requestCaching> Element (Network Settings)](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)"}]}