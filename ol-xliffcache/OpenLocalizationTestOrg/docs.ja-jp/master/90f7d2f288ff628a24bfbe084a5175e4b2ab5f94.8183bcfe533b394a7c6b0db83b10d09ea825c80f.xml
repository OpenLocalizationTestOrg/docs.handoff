{"content":"---\ntitle: \"XElement Class Overview (C#)\"\nms.date: 07/20/2015\nms.assetid: 2b9f0cd8-a1d1-4037-accf-0f38a410fa11\n---\n# XElement Class Overview (C#)\nThe <xref:System.Xml.Linq.XElement> class is one of the fundamental classes in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]. It represents an XML element. You can use this class to create elements; change the content of the element; add, change, or delete child elements; add attributes to an element; or serialize the contents of an element in text form. You can also interoperate with other classes in <xref:System.Xml?displayProperty=nameWithType>, such as <xref:System.Xml.XmlReader>, <xref:System.Xml.XmlWriter>, and <xref:System.Xml.Xsl.XslCompiledTransform>.  \n  \n## XElement Functionality  \n This topic describes the functionality provided by the <xref:System.Xml.Linq.XElement> class.  \n  \n### Constructing XML Trees  \n You can construct XML trees in a variety of ways, including the following:  \n  \n-   You can construct an XML tree in code. For more information, see [Creating XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/creating-xml-trees.md).  \n  \n-   You can parse XML from various sources, including a <xref:System.IO.TextReader>, text files, or a Web address (URL). For more information, see [Parsing XML (C#)](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md).  \n  \n-   You can use an <xref:System.Xml.XmlReader> to populate the tree. For more information, see <xref:System.Xml.Linq.XNode.ReadFrom%2A>.  \n  \n-   If you have a module that can write content to an <xref:System.Xml.XmlWriter>, you can use the <xref:System.Xml.Linq.XContainer.CreateWriter%2A> method to create a writer, pass the writer to the module, and then use the content that is written to the <xref:System.Xml.XmlWriter> to populate the XML tree.  \n  \n However, the most common way to create an XML tree is as follows:  \n  \n```csharp  \nXElement contacts =  \n    new XElement(\"Contacts\",  \n        new XElement(\"Contact\",  \n            new XElement(\"Name\", \"Patrick Hines\"),   \n            new XElement(\"Phone\", \"206-555-0144\"),  \n            new XElement(\"Address\",  \n                new XElement(\"Street1\", \"123 Main St\"),  \n                new XElement(\"City\", \"Mercer Island\"),  \n                new XElement(\"State\", \"WA\"),  \n                new XElement(\"Postal\", \"68042\")  \n            )  \n        )  \n    );  \n```  \n  \n Another very common technique for creating an XML tree involves using the results of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query to populate an XML tree, as shown in the following example:  \n  \n```csharp  \nXElement srcTree = new XElement(\"Root\",  \n    new XElement(\"Element\", 1),  \n    new XElement(\"Element\", 2),  \n    new XElement(\"Element\", 3),  \n    new XElement(\"Element\", 4),  \n    new XElement(\"Element\", 5)  \n);  \nXElement xmlTree = new XElement(\"Root\",  \n    new XElement(\"Child\", 1),  \n    new XElement(\"Child\", 2),  \n    from el in srcTree.Elements()  \n    where (int)el > 2  \n    select el  \n);  \nConsole.WriteLine(xmlTree);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <Child>1</Child>  \n  <Child>2</Child>  \n  <Element>3</Element>  \n  <Element>4</Element>  \n  <Element>5</Element>  \n</Root>  \n```  \n  \n### Serializing XML Trees  \n You can serialize the XML tree to a <xref:System.IO.File>, a <xref:System.IO.TextWriter>, or an <xref:System.Xml.XmlWriter>.  \n  \n For more information, see [Serializing XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/serializing-xml-trees.md).  \n  \n### Retrieving XML Data via Axis Methods  \n You can use axis methods to retrieve attributes, child elements, descendant elements, and ancestor elements. [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] queries operate on axis methods, and provide several flexible and powerful ways to navigate through and process an XML tree.  \n  \n For more information, see [LINQ to XML Axes (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-axes.md).  \n  \n### Querying XML Trees  \n You can write [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] queries that extract data from an XML tree.  \n  \n For more information, see [Querying XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/querying-xml-trees.md).  \n  \n### Modifying XML Trees  \n You can modify an element in a variety of ways, including changing its content or attributes. You can also remove an element from its parent.  \n  \n For more information, see [Modifying XML Trees (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md).  \n  \n## See also\n\n- [LINQ to XML Programming Overview (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)\n","nodes":[{"pos":[4,110],"embed":true,"restype":"x-metadata","content":"title: \"XElement Class Overview (C#)\"\nms.date: 07/20/2015\nms.assetid: 2b9f0cd8-a1d1-4037-accf-0f38a410fa11","nodes":[{"content":"XElement Class Overview (C#)","nodes":[{"pos":[0,28],"content":"XElement Class Overview (C#)","nodes":[{"content":"XElement Class Overview (C#)","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[117,145],"content":"XElement Class Overview (C#)","linkify":"XElement Class Overview (C#)","nodes":[{"content":"XElement Class Overview (C#)","pos":[0,28]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class is one of the fundamental classes in <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>.","pos":[146,279],"source":"The <xref:System.Xml.Linq.XElement> class is one of the fundamental classes in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]."},{"content":"It represents an XML element.","pos":[280,309]},{"content":"You can use this class to create elements; change the content of the element; add, change, or delete child elements; add attributes to an element; or serialize the contents of an element in text form.","pos":[310,510]},{"content":"You can also interoperate with other classes in <ph id=\"ph1\">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph>, such as <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph>.","pos":[511,720],"source":" You can also interoperate with other classes in <xref:System.Xml?displayProperty=nameWithType>, such as <xref:System.Xml.XmlReader>, <xref:System.Xml.XmlWriter>, and <xref:System.Xml.Xsl.XslCompiledTransform>."},{"pos":[729,751],"content":"XElement Functionality","linkify":"XElement Functionality","nodes":[{"content":"XElement Functionality","pos":[0,22]}]},{"pos":[755,848],"content":"This topic describes the functionality provided by the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class.","source":"This topic describes the functionality provided by the <xref:System.Xml.Linq.XElement> class."},{"pos":[858,880],"content":"Constructing XML Trees","linkify":"Constructing XML Trees","nodes":[{"content":"Constructing XML Trees","pos":[0,22]}]},{"content":"You can construct XML trees in a variety of ways, including the following:","pos":[884,958]},{"content":"You can construct an XML tree in code.","pos":[968,1006]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating XML Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/creating-xml-trees.md)</ept>.","pos":[1007,1133],"source":" For more information, see [Creating XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/creating-xml-trees.md)."},{"content":"You can parse XML from various sources, including a <ph id=\"ph1\">&lt;xref:System.IO.TextReader&gt;</ph>, text files, or a Web address (URL).","pos":[1143,1259],"source":"You can parse XML from various sources, including a <xref:System.IO.TextReader>, text files, or a Web address (URL)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Parsing XML (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md)</ept>.","pos":[1260,1372],"source":" For more information, see [Parsing XML (C#)](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md)."},{"content":"You can use an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> to populate the tree.","pos":[1382,1446],"source":"You can use an <xref:System.Xml.XmlReader> to populate the tree."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode.ReadFrom%2A&gt;</ph>.","pos":[1447,1514],"source":" For more information, see <xref:System.Xml.Linq.XNode.ReadFrom%2A>."},{"pos":[1524,1828],"content":"If you have a module that can write content to an <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you can use the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph> method to create a writer, pass the writer to the module, and then use the content that is written to the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to populate the XML tree.","source":"If you have a module that can write content to an <xref:System.Xml.XmlWriter>, you can use the <xref:System.Xml.Linq.XContainer.CreateWriter%2A> method to create a writer, pass the writer to the module, and then use the content that is written to the <xref:System.Xml.XmlWriter> to populate the XML tree."},{"content":"However, the most common way to create an XML tree is as follows:","pos":[1835,1900]},{"pos":[2409,2611],"content":"Another very common technique for creating an XML tree involves using the results of a <ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to populate an XML tree, as shown in the following example:","source":"Another very common technique for creating an XML tree involves using the results of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query to populate an XML tree, as shown in the following example:"},{"content":"This example produces the following output:","pos":[3072,3115]},{"pos":[3279,3300],"content":"Serializing XML Trees","linkify":"Serializing XML Trees","nodes":[{"content":"Serializing XML Trees","pos":[0,21]}]},{"pos":[3304,3428],"content":"You can serialize the XML tree to a <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph>, a <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph>, or an <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","source":"You can serialize the XML tree to a <xref:System.IO.File>, a <xref:System.IO.TextWriter>, or an <xref:System.Xml.XmlWriter>."},{"pos":[3435,3567],"content":"For more information, see <bpt id=\"p1\">[</bpt>Serializing XML Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/serializing-xml-trees.md)</ept>.","source":"For more information, see [Serializing XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/serializing-xml-trees.md)."},{"pos":[3577,3613],"content":"Retrieving XML Data via Axis Methods","linkify":"Retrieving XML Data via Axis Methods","nodes":[{"content":"Retrieving XML Data via Axis Methods","pos":[0,36]}]},{"content":"You can use axis methods to retrieve attributes, child elements, descendant elements, and ancestor elements.","pos":[3617,3725]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> queries operate on axis methods, and provide several flexible and powerful ways to navigate through and process an XML tree.","pos":[3726,3900],"source":"[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] queries operate on axis methods, and provide several flexible and powerful ways to navigate through and process an XML tree."},{"pos":[3907,4029],"content":"For more information, see <bpt id=\"p1\">[</bpt>LINQ to XML Axes (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept>.","source":"For more information, see [LINQ to XML Axes (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-axes.md)."},{"pos":[4039,4057],"content":"Querying XML Trees","linkify":"Querying XML Trees","nodes":[{"content":"Querying XML Trees","pos":[0,18]}]},{"pos":[4061,4168],"content":"You can write <ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> queries that extract data from an XML tree.","source":"You can write [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] queries that extract data from an XML tree."},{"pos":[4175,4301],"content":"For more information, see <bpt id=\"p1\">[</bpt>Querying XML Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/querying-xml-trees.md)</ept>.","source":"For more information, see [Querying XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/querying-xml-trees.md)."},{"pos":[4311,4330],"content":"Modifying XML Trees","linkify":"Modifying XML Trees","nodes":[{"content":"Modifying XML Trees","pos":[0,19]}]},{"content":"You can modify an element in a variety of ways, including changing its content or attributes.","pos":[4334,4427]},{"content":"You can also remove an element from its parent.","pos":[4428,4475]},{"pos":[4482,4636],"content":"For more information, see <bpt id=\"p1\">[</bpt>Modifying XML Trees (LINQ to XML) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept>.","source":"For more information, see [Modifying XML Trees (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)."},{"pos":[4645,4653],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4657,4784],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML Programming Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept>","source":"[LINQ to XML Programming Overview (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)"}]}