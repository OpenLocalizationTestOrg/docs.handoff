{"content":"---\ntitle: \"ICLRMetaHost Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRMetaHost\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRMetaHost\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICLRMetaHost interface [.NET Framework hosting]\"\nms.assetid: c627fcdd-fc4f-4b1c-8e91-df8536f627d8\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 28\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICLRMetaHost Interface\nProvides methods that return a specific version of the common language runtime (CLR) based on its version number, list all installed CLRs, list all runtimes that are loaded in a specified process, discover the CLR version used to compile an assembly, exit a process with a clean runtime shutdown, and query legacy API binding.  \n  \n## Methods  \n  \n|Method|Description|  \n|------------|-----------------|  \n|[EnumerateInstalledRuntimes Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-enumerateinstalledruntimes-method.md)|Returns an enumeration that contains a valid [ICLRRuntimeInfo](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md) interface pointer for each CLR version that is installed on a computer.|  \n|[EnumerateLoadedRuntimes Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-enumerateloadedruntimes-method.md)|Returns an enumeration that contains a valid [ICLRRuntimeInfo](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md) interface pointer for each CLR that is loaded in a given process. This method supersedes [GetVersionFromProcess](../../../../docs/framework/unmanaged-api/hosting/getversionfromprocess-function.md).|  \n|[ExitProcess Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-exitprocess-method.md)|Attempts to shut down all loaded runtimes gracefully and then terminates the process. Supersedes the [CorExitProcess](../../../../docs/framework/unmanaged-api/hosting/corexitprocess-function.md) function.|  \n|[GetRuntime Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-getruntime-method.md)|Gets the [ICLRRuntimeInfo](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md) interface that corresponds to a particular CLR version. This method supersedes the [CorBindToRuntimeEx](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md) function used with the [STARTUP_LOADER_SAFEMODE](../../../../docs/framework/unmanaged-api/hosting/startup-flags-enumeration.md) flag.|  \n|[GetVersionFromFile Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-getversionfromfile-method.md)|Gets the assembly's original .NET Framework compilation version (stored in the metadata), given its file path. This method supersedes [GetFileVersion](../../../../docs/framework/unmanaged-api/hosting/getfileversion-function.md).|  \n|[QueryLegacyV2RuntimeBinding Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-querylegacyv2runtimebinding-method.md)|Returns an interface that represents a runtime to which legacy activation policy has been bound, for example by using the `useLegacyV2RuntimeActivationPolicy` attribute on the [\\<startup> Element](../../../../docs/framework/configure-apps/file-schema/startup/startup-element.md) configuration file entry, by direct use of the legacy activation APIs, or by calling the [ICLRRuntimeInfo::BindAsLegacyV2Runtime](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-bindaslegacyv2runtime-method.md) method.|  \n|[RequestRuntimeLoadedNotification Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-requestruntimeloadednotification-method.md)|Guarantees a callback to the specified function pointer when a CLR version is first loaded, but not yet started. This method supersedes [LockClrVersion](../../../../docs/framework/unmanaged-api/hosting/lockclrversion-function.md)|  \n  \n## Remarks  \n The only way to get an instance of this interface is by calling the [CLRCreateInstance](../../../../docs/framework/unmanaged-api/hosting/clrcreateinstance-function.md) function as follows:  \n  \n```  \nICLRMetaHost *pMetaHost = NULL;  \nHRESULT hr = CLRCreateInstance(CLSID_CLRMetaHost,  \n                   IID_ICLRMetaHost, (LPVOID*)&pMetaHost);  \n```  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MetaHost.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See Also  \n [Hosting Interfaces](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md)   \n [Hosting](../../../../docs/framework/unmanaged-api/hosting/index.md)","nodes":[{"pos":[12,51],"content":"ICLRMetaHost Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICLRMetaHost Interface | Microsoft Docs","pos":[0,39]}]},{"pos":[598,620],"content":"ICLRMetaHost Interface","linkify":"ICLRMetaHost Interface","nodes":[{"content":"ICLRMetaHost Interface","pos":[0,22]}]},{"content":"Provides methods that return a specific version of the common language runtime (CLR) based on its version number, list all installed CLRs, list all runtimes that are loaded in a specified process, discover the CLR version used to compile an assembly, exit a process with a clean runtime shutdown, and query legacy API binding.","pos":[621,947]},{"pos":[956,963],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[970,976]},{"content":"Description","pos":[977,988]},{"pos":[1028,1163],"content":"<bpt id=\"p1\">[</bpt>EnumerateInstalledRuntimes Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-enumerateinstalledruntimes-method.md)</ept>","source":"[EnumerateInstalledRuntimes Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-enumerateinstalledruntimes-method.md)"},{"pos":[1164,1377],"content":"Returns an enumeration that contains a valid <bpt id=\"p1\">[</bpt>ICLRRuntimeInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md)</ept> interface pointer for each CLR version that is installed on a computer.","source":"Returns an enumeration that contains a valid [ICLRRuntimeInfo](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md) interface pointer for each CLR version that is installed on a computer."},{"pos":[1382,1511],"content":"<bpt id=\"p1\">[</bpt>EnumerateLoadedRuntimes Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-enumerateloadedruntimes-method.md)</ept>","source":"[EnumerateLoadedRuntimes Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-enumerateloadedruntimes-method.md)"},{"content":"Returns an enumeration that contains a valid <bpt id=\"p1\">[</bpt>ICLRRuntimeInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md)</ept> interface pointer for each CLR that is loaded in a given process.","pos":[1512,1719],"source":"Returns an enumeration that contains a valid [ICLRRuntimeInfo](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md) interface pointer for each CLR that is loaded in a given process."},{"content":"This method supersedes <bpt id=\"p1\">[</bpt>GetVersionFromProcess<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/getversionfromprocess-function.md)</ept>.","pos":[1720,1851],"source":" This method supersedes [GetVersionFromProcess](../../../../docs/framework/unmanaged-api/hosting/getversionfromprocess-function.md)."},{"pos":[1856,1961],"content":"<bpt id=\"p1\">[</bpt>ExitProcess Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-exitprocess-method.md)</ept>","source":"[ExitProcess Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-exitprocess-method.md)"},{"content":"Attempts to shut down all loaded runtimes gracefully and then terminates the process.","pos":[1962,2047]},{"content":"Supersedes the <bpt id=\"p1\">[</bpt>CorExitProcess<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corexitprocess-function.md)</ept> function.","pos":[2048,2166],"source":" Supersedes the [CorExitProcess](../../../../docs/framework/unmanaged-api/hosting/corexitprocess-function.md) function."},{"pos":[2171,2274],"content":"<bpt id=\"p1\">[</bpt>GetRuntime Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-getruntime-method.md)</ept>","source":"[GetRuntime Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-getruntime-method.md)"},{"content":"Gets the <bpt id=\"p1\">[</bpt>ICLRRuntimeInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md)</ept> interface that corresponds to a particular CLR version.","pos":[2275,2436],"source":"Gets the [ICLRRuntimeInfo](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-interface.md) interface that corresponds to a particular CLR version."},{"content":"This method supersedes the <bpt id=\"p1\">[</bpt>CorBindToRuntimeEx<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md)</ept> function used with the <bpt id=\"p2\">[</bpt>STARTUP_LOADER_SAFEMODE<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/hosting/startup-flags-enumeration.md)</ept> flag.","pos":[2437,2699],"source":" This method supersedes the [CorBindToRuntimeEx](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md) function used with the [STARTUP_LOADER_SAFEMODE](../../../../docs/framework/unmanaged-api/hosting/startup-flags-enumeration.md) flag."},{"pos":[2704,2823],"content":"<bpt id=\"p1\">[</bpt>GetVersionFromFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-getversionfromfile-method.md)</ept>","source":"[GetVersionFromFile Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-getversionfromfile-method.md)"},{"content":"Gets the assembly's original .NET Framework compilation version (stored in the metadata), given its file path.","pos":[2824,2934]},{"content":"This method supersedes <bpt id=\"p1\">[</bpt>GetFileVersion<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/getfileversion-function.md)</ept>.","pos":[2935,3052],"source":" This method supersedes [GetFileVersion](../../../../docs/framework/unmanaged-api/hosting/getfileversion-function.md)."},{"pos":[3057,3194],"content":"<bpt id=\"p1\">[</bpt>QueryLegacyV2RuntimeBinding Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-querylegacyv2runtimebinding-method.md)</ept>","source":"[QueryLegacyV2RuntimeBinding Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-querylegacyv2runtimebinding-method.md)"},{"pos":[3195,3709],"content":"Returns an interface that represents a runtime to which legacy activation policy has been bound, for example by using the <ph id=\"ph1\">`useLegacyV2RuntimeActivationPolicy`</ph> attribute on the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>startup&gt; Element<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/startup/startup-element.md)</ept> configuration file entry, by direct use of the legacy activation APIs, or by calling the <bpt id=\"p2\">[</bpt>ICLRRuntimeInfo::BindAsLegacyV2Runtime<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-bindaslegacyv2runtime-method.md)</ept> method.","source":"Returns an interface that represents a runtime to which legacy activation policy has been bound, for example by using the `useLegacyV2RuntimeActivationPolicy` attribute on the [\\<startup> Element](../../../../docs/framework/configure-apps/file-schema/startup/startup-element.md) configuration file entry, by direct use of the legacy activation APIs, or by calling the [ICLRRuntimeInfo::BindAsLegacyV2Runtime](../../../../docs/framework/unmanaged-api/hosting/iclrruntimeinfo-bindaslegacyv2runtime-method.md) method."},{"pos":[3714,3861],"content":"<bpt id=\"p1\">[</bpt>RequestRuntimeLoadedNotification Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-requestruntimeloadednotification-method.md)</ept>","source":"[RequestRuntimeLoadedNotification Method](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-requestruntimeloadednotification-method.md)"},{"content":"Guarantees a callback to the specified function pointer when a CLR version is first loaded, but not yet started.","pos":[3862,3974]},{"content":"This method supersedes <bpt id=\"p1\">[</bpt>LockClrVersion<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/lockclrversion-function.md)</ept>","pos":[3975,4091],"source":" This method supersedes [LockClrVersion](../../../../docs/framework/unmanaged-api/hosting/lockclrversion-function.md)"},{"pos":[4101,4108],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4112,4300],"content":"The only way to get an instance of this interface is by calling the <bpt id=\"p1\">[</bpt>CLRCreateInstance<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/clrcreateinstance-function.md)</ept> function as follows:","source":"The only way to get an instance of this interface is by calling the [CLRCreateInstance](../../../../docs/framework/unmanaged-api/hosting/clrcreateinstance-function.md) function as follows:"},{"pos":[4471,4483],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4487,4591],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[4598,4620],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MetaHost.h","source":"**Header:** MetaHost.h"},{"pos":[4627,4677],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[4684,4792],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[4801,4809],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hosting Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md)</ept><ph id=\"ph1\"> </ph>","pos":[4813,4906],"source":"[Hosting Interfaces](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hosting<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/index.md)</ept>","pos":[4909,4978],"source":" [Hosting](../../../../docs/framework/unmanaged-api/hosting/index.md)"}]}