{"content":"---\ntitle: \"How to: Join Content from Dissimilar Files (LINQ) (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: e7530857-c467-41ea-9730-84e6b1065a4d\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)\nThis example shows how to join data from two comma-delimited files that share a common value that is used as a matching key. This technique can be useful if you have to combine data from two spreadsheets, or from a spreadsheet and from a file that has another format, into a new file. You can modify the example to work with any kind of structured text.  \n  \n### To create the data files  \n  \n1.  Copy the following lines into a file that is named scores.csv and save it to your project folder. The file represents spreadsheet data. Column 1 is the student's ID, and columns 2 through 5 are test scores.  \n  \n    ```  \n    111, 97, 92, 81, 60  \n    112, 75, 84, 91, 39  \n    113, 88, 94, 65, 91  \n    114, 97, 89, 85, 82  \n    115, 35, 72, 91, 70  \n    116, 99, 86, 90, 94  \n    117, 93, 92, 80, 87  \n    118, 92, 90, 83, 78  \n    119, 68, 79, 88, 92  \n    120, 99, 82, 81, 79  \n    121, 96, 85, 91, 60  \n    122, 94, 92, 91, 91  \n    ```  \n  \n2.  Copy the following lines into a file that is named names.csv and save it to your project folder. The file represents a spreadsheet that contains the student's last name, first name, and student ID.  \n  \n    ```  \n    Omelchenko,Svetlana,111  \n    O'Donnell,Claire,112  \n    Mortensen,Sven,113  \n    Garcia,Cesar,114  \n    Garcia,Debra,115  \n    Fakhouri,Fadi,116  \n    Feng,Hanying,117  \n    Garcia,Hugo,118  \n    Tucker,Lance,119  \n    Adams,Terry,120  \n    Zabokritski,Eugene,121  \n    Tucker,Michael,122  \n    ```  \n  \n## Example  \n  \n```vb  \nClass JoinStrings  \n  \n    Shared Sub Main()  \n  \n        ' Join content from spreadsheet files that contain  \n        ' related information. names.csv contains the student name  \n        ' plus an ID number. scores.csv contains the ID and a   \n        ' set of four test scores. The following query joins  \n        ' the scores to the student names by using ID as a  \n        ' matching key.  \n  \n        Dim names As String() = System.IO.File.ReadAllLines(\"../../../names.csv\")  \n        Dim scores As String() = System.IO.File.ReadAllLines(\"../../../scores.csv\")  \n  \n        ' Name:    Last[0],       First[1],  ID[2],     Grade Level[3]  \n        '          Omelchenko,    Svetlana,  111,       2  \n        ' Score:   StudentID[0],  Exam1[1]   Exam2[2],  Exam3[3],  Exam4[4]  \n        '          111,           97,        92,        81,        60  \n  \n        ' This query joins two dissimilar spreadsheets based on common ID value.  \n        ' Multiple from clauses are used instead of a join clause  \n        ' in order to store results of id.Split.  \n        Dim scoreQuery1 = From name In names   \n                         Let n = name.Split(New Char() {\",\"})   \n                            From id In scores   \n                            Let n2 = id.Split(New Char() {\",\"})   \n                            Where n(2) = n2(0)   \n                            Select n(0) & \",\" & n(1) & \",\" & n2(0) & \",\" & n2(1) & \",\" &  \n                              n2(2) & \",\" & n2(3)  \n  \n        ' Pass a query variable to a Sub and execute it there.  \n        ' The query itself is unchanged.  \n        OutputQueryResults(scoreQuery1, \"Merge two spreadsheets:\")  \n  \n        ' Keep console window open in debug mode.  \n        Console.WriteLine(\"Press any key to exit.\")  \n        Console.ReadKey()  \n    End Sub  \n  \n    Shared Sub OutputQueryResults(ByVal query As IEnumerable(Of String), ByVal message As String)  \n  \n        Console.WriteLine(System.Environment.NewLine & message)  \n        For Each item As String In query  \n            Console.WriteLine(item)  \n        Next  \n        Console.WriteLine(query.Count & \" total names in list\")  \n  \n    End Sub  \nEnd Class  \n' Output:  \n'Merge two spreadsheets:  \n'Adams,Terry,120, 99, 82, 81  \n'Fakhouri,Fadi,116, 99, 86, 90  \n'Feng,Hanying,117, 93, 92, 80  \n'Garcia,Cesar,114, 97, 89, 85  \n'Garcia,Debra,115, 35, 72, 91  \n'Garcia,Hugo,118, 92, 90, 83  \n'Mortensen,Sven,113, 88, 94, 65  \n'O'Donnell,Claire,112, 75, 84, 91  \n'Omelchenko,Svetlana,111, 97, 92, 81  \n'Tucker,Lance,119, 68, 79, 88  \n'Tucker,Michael,122, 94, 92, 91  \n'Zabokritski,Eugene,121, 96, 85, 91  \n'12 total names in list  \n```  \n  \n## Compiling the Code  \n Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a `Imports` statement for the System.Linq namespace.  \n  \n## See Also  \n [LINQ and Strings (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)   \n [LINQ and File Directories (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)","nodes":[{"pos":[12,93],"content":"How to: Join Content from Dissimilar Files (LINQ) (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Join Content from Dissimilar Files (LINQ) (Visual Basic) | Microsoft Docs","pos":[0,81]}]},{"pos":[474,538],"content":"How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)","linkify":"How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)","nodes":[{"content":"How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)","pos":[0,64]}]},{"content":"This example shows how to join data from two comma-delimited files that share a common value that is used as a matching key.","pos":[539,663]},{"content":"This technique can be useful if you have to combine data from two spreadsheets, or from a spreadsheet and from a file that has another format, into a new file.","pos":[664,823]},{"content":"You can modify the example to work with any kind of structured text.","pos":[824,892]},{"pos":[902,926],"content":"To create the data files","linkify":"To create the data files","nodes":[{"content":"To create the data files","pos":[0,24]}]},{"content":"Copy the following lines into a file that is named scores.csv and save it to your project folder.","pos":[936,1033]},{"content":"The file represents spreadsheet data.","pos":[1034,1071]},{"content":"Column 1 is the student's ID, and columns 2 through 5 are test scores.","pos":[1072,1142]},{"content":"Copy the following lines into a file that is named names.csv and save it to your project folder.","pos":[1487,1583]},{"content":"The file represents a spreadsheet that contains the student's last name, first name, and student ID.","pos":[1584,1684]},{"pos":[2012,2019],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4689,4707],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[4711,4874],"content":"Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <ph id=\"ph1\">`Imports`</ph> statement for the System.Linq namespace.","source":"Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a `Imports` statement for the System.Linq namespace."},{"pos":[4883,4891],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>LINQ and Strings (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id=\"ph1\"> </ph>","pos":[4895,5007],"source":"[LINQ and Strings (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md) "},{"content":"<bpt id=\"p1\"> [</bpt>LINQ and File Directories (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)</ept>","pos":[5010,5140],"source":" [LINQ and File Directories (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)"}]}