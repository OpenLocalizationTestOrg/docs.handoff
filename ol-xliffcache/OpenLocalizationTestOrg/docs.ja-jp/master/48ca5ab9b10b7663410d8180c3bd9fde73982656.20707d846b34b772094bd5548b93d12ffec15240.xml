{"content":"---\ntitle: \"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: cd5674d1-5c54-4efc-ba68-e23b2875295f\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#)\nOne way to populate an XML tree is to use <xref:System.Xml.Linq.XContainer.CreateWriter%2A> to create an <xref:System.Xml.XmlWriter>, and then write to the <xref:System.Xml.XmlWriter>. The XML tree is populated with all nodes that are written to the <xref:System.Xml.XmlWriter>.  \n  \n You would typically use this method when you use [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] with another class that expects to write to an <xref:System.Xml.XmlWriter>, such as <xref:System.Xml.Xsl.XslCompiledTransform>.  \n  \n## Example  \n One possible use for <xref:System.Xml.Linq.XContainer.CreateWriter%2A> is when invoking an XSLT transformation. This example creates an XML tree, creates an <xref:System.Xml.XmlReader> from the XML tree, creates a new document, and then creates an <xref:System.Xml.XmlWriter> to write into the new document. It then invokes the XSLT transformation, passing in <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>. After the transformation successfully completes, the new XML tree is populated with the results of the transformation.  \n  \n```csharp  \nstring xslMarkup = @\"<?xml version='1.0'?>  \n<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  \n    <xsl:template match='/Parent'>  \n        <Root>  \n            <C1>  \n            <xsl:value-of select='Child1'/>  \n            </C1>  \n            <C2>  \n            <xsl:value-of select='Child2'/>  \n            </C2>  \n        </Root>  \n    </xsl:template>  \n</xsl:stylesheet>\";  \n  \nXDocument xmlTree = new XDocument(  \n    new XElement(\"Parent\",  \n        new XElement(\"Child1\", \"Child1 data\"),  \n        new XElement(\"Child2\", \"Child2 data\")  \n    )  \n);  \n  \nXDocument newTree = new XDocument();  \nusing (XmlWriter writer = newTree.CreateWriter())  \n{  \n    // Load the style sheet.  \n    XslCompiledTransform xslt = new XslCompiledTransform();  \n    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  \n  \n    // Execute the transformation and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateReader(), writer);  \n}  \n  \nConsole.WriteLine(newTree);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <C1>Child1 data</C1>  \n  <C2>Child2 data</C2>  \n</Root>  \n```  \n  \n## See Also  \n <xref:System.Xml.Linq.XContainer.CreateWriter%2A>   \n <xref:System.Xml.XmlWriter>   \n <xref:System.Xml.Xsl.XslCompiledTransform>   \n [Creating XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/creating-xml-trees.md)","nodes":[{"pos":[4,446],"nodes":[{"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#) | Microsoft Docs","nodes":[{"pos":[0,82],"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#) | Microsoft Docs","nodes":[{"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#) | Microsoft Docs","pos":[0,82]}]}],"pos":[6,91],"yaml":true}],"content":"title: \"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: cd5674d1-5c54-4efc-ba68-e23b2875295f\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[453,518],"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#)","linkify":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#)","nodes":[{"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (C#)","pos":[0,65]}]},{"content":"One way to populate an XML tree is to use <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph> to create an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, and then write to the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[519,703],"source":"One way to populate an XML tree is to use <xref:System.Xml.Linq.XContainer.CreateWriter%2A> to create an <xref:System.Xml.XmlWriter>, and then write to the <xref:System.Xml.XmlWriter>."},{"content":"The XML tree is populated with all nodes that are written to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[704,797],"source":" The XML tree is populated with all nodes that are written to the <xref:System.Xml.XmlWriter>."},{"pos":[804,1083],"content":"You would typically use this method when you use <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> with another class that expects to write to an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, such as <ph id=\"ph3\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph>.","source":"You would typically use this method when you use [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] with another class that expects to write to an <xref:System.Xml.XmlWriter>, such as <xref:System.Xml.Xsl.XslCompiledTransform>."},{"pos":[1092,1099],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"One possible use for <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph> is when invoking an XSLT transformation.","pos":[1103,1214],"source":"One possible use for <xref:System.Xml.Linq.XContainer.CreateWriter%2A> is when invoking an XSLT transformation."},{"content":"This example creates an XML tree, creates an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, creates a new document, and then creates an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to write into the new document.","pos":[1215,1410],"source":" This example creates an XML tree, creates an <xref:System.Xml.XmlReader> from the XML tree, creates a new document, and then creates an <xref:System.Xml.XmlWriter> to write into the new document."},{"content":"It then invokes the XSLT transformation, passing in <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[1411,1523],"source":" It then invokes the XSLT transformation, passing in <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>."},{"content":"After the transformation successfully completes, the new XML tree is populated with the results of the transformation.","pos":[1524,1642]},{"content":"This example produces the following output:","pos":[2683,2726]},{"pos":[2822,2830],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph>","pos":[2834,2883],"source":"<xref:System.Xml.Linq.XContainer.CreateWriter%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>","pos":[2888,2915],"source":"<xref:System.Xml.XmlWriter> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph>","pos":[2920,2962],"source":"<xref:System.Xml.Xsl.XslCompiledTransform> "},{"content":"<bpt id=\"p1\">[</bpt>Creating XML Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/creating-xml-trees.md)</ept>","pos":[2967,3066],"source":"[Creating XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/creating-xml-trees.md)"}]}