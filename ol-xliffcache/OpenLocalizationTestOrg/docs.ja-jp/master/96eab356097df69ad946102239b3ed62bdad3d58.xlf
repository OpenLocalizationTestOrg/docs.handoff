<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="securing-clients.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96eab356097df69ad946102239b3ed62bdad3d58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\securing-clients.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b4144513245913e44431b232cba3d5e24cf3313</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3251ef7e830587b1355c43576a4620b0c3059f8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Securing Clients | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Securing Clients</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph>, the service dictates the security requirements for clients.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>That is, the service specifies what security mode to use, and whether or not the client must provide a credential.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The process of securing a client, therefore, is simple: use the metadata obtained from the service (if it is published) and build a client.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The metadata specifies how to configure the client.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the service requires that the client supply a credential, then you must obtain a credential that fits the requirement.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic discusses the process in further detail.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> creating a secure service, see <bpt id="p1">[</bpt>Securing Services<ept id="p1">](../../../docs/framework/wcf/securing-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Service Specifies Security</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> bindings have security features enabled.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(The exception is the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.) Therefore, if the service was created using <ph id="ph2">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph>, there is a greater chance that it will implement security to ensure authentication, confidentiality, and integrity.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In that case, the metadata the service provides will indicate what it requires to establish a secure communication channel.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the service metadata does not include any security requirements, there is no way to impose a security scheme, such as Secure Sockets Layer (SSL) over HTTP, on a service.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If, however, the service requires the client to supply a credential, then the client developer, deployer, or administrator must supply the actual credential that the client will use to authenticate itself to the service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Obtaining Metadata</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When creating a client, the first step is to obtain the metadata for the service that the client will communicate with.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This can be done in two ways.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>First, if the service publishes a metadata exchange (MEX) endpoint or makes its metadata available over HTTP or HTTPS, you can download the metadata using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>, which generates both code files for a client as well as a configuration file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> using the tool, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>.) If the service does not publish a MEX endpoint and also does not make its metadata available over HTTP or HTTPS, you must contact the service creator for documentation that describes the security requirements and the metadata.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is recommended that the metadata come from a trusted source and that it not be tampered with.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Metadata retrieved using the HTTP protocol is sent in clear text and can be tampered with.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the service uses the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A&gt;</ph> properties, use the URL the service creator supplied to download the data using the HTTPS protocol.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Validating Security</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Metadata sources can be divided into two broad categories: trust sources and untrusted sources.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you trust a source and have downloaded the client code and other metadata from that source's secure MEX endpoint, then you can build the client, supply it with the right credentials, and run it with no other concerns.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, if you elect to download a client and metadata from a source that you know little about, be sure to validate the security measures the code uses.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, you must not simply create a client that sends your personal or financial information to a service unless the service demands confidentiality and integrity (at the very least).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You should trust the owner of the service to the extent that you are willing to disclose such information because such information will be visible to him or her.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>As a rule, therefore, when using code and metadata from an untrusted source, check the code and metadata to ensure that it meets the security level that you require.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Setting a Client Credential</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Setting a client credential on a client consists of two steps:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Determine the <bpt id="p1">*</bpt>client credential type<ept id="p1">*</ept> the service requires.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This is accomplished by one of two methods.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>First, if you have documentation from the service creator, it should specify the client credential type (if any) the service requires.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Second, if you have only a configuration file generated by the Svcutil.exe tool, you can examine the individual bindings to determine what credential type is required.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Specify an actual client credential.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The actual client credential is called a <bpt id="p1">*</bpt>client credential value<ept id="p1">*</ept> to distinguish it from the type.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, if the client credential type specifies a certificate, you must supply an X.509 certificate that is issued by a certification authority the service trusts.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Determining the Client Credential Type</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you have the configuration file the Svcutil.exe tool generated, examine the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>bindings&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)</ept> section to determine what client credential type is required.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Within the section are binding elements that specify the security requirements.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifically, examine the <ph id="ph1">\&lt;</ph>security&gt; Element of each binding.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>That element includes the <ph id="ph1">`mode`</ph> attribute, which you can set to one of three possible values (<ph id="ph2">`Message`</ph>, <ph id="ph3">`Transport`</ph>, or <ph id="ph4">`TransportWithMessageCredential`</ph>).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of the attribute determines the mode, and the mode determines which of the child elements is significant.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;security&gt;`</ph> element can contain either a <ph id="ph2">`&lt;transport&gt;`</ph> or <ph id="ph3">`&lt;message&gt;`</ph> element, or both.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The significant element is the one that matches the security mode.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, the following code specifies that the security mode is <ph id="ph1">`"Message"`</ph>, and the client credential type for the <ph id="ph2">`&lt;message&gt;`</ph> element is <ph id="ph3">`"Certificate"`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">`&lt;transport&gt;`</ph> element can be ignored.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>However, the <ph id="ph1">`&lt;message&gt;`</ph> element specifies that an X.509 certificate must be supplied.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note that if the <ph id="ph1">`clientCredentialType`</ph> attribute is set to <ph id="ph2">`"Windows"`</ph>, as shown in the following example, you do not need to supply an actual credential value.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is because the Windows integrated security provides the actual credential (a Kerberos token) of the person who is running the client.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Setting the Client Credential Value</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If it is determined that the client must supply a credential, use the appropriate method to configure the client.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, to set a client certificate, use the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A common form of credential is the X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can supply the credential in two ways:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>By programming it in your client code (using the <ph id="ph1">`SetCertificate`</ph> method).</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>By adding a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behaviors&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)</ept> section of the configuration file for the client and using the <ph id="ph2">`clientCredentials`</ph> element (shown below).</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Setting a <ph id="ph1">\&lt;</ph>clientCredentials&gt; Value in Code</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To set a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>clientCredentials&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md)</ept> value in code, you must access the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The property returns a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object that allows access to various credential types, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>ClientCredential Property</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Notes</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Represents an X.509 certificate provided by the client to authenticate itself to the service.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref:System.ServiceModel.Security.HttpDigestClientCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Represents an HTTP digest credential.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The credential is a hash of the user name and password.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Represents a custom security token issued by a Security Token Service, commonly used in federation scenarios.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref:System.ServiceModel.Security.PeerCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Represents a Peer credential for participation in a Peer mesh on a Windows domain.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Represents an X.509 certificate provided by the service in an out-of-band negotiation.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref:System.ServiceModel.Security.UserNamePasswordClientCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Represents a user name and password pair.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential&gt;</ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Represents a Windows client credential (a Kerberos credential).</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The properties of the class are read-only.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Setting a <ph id="ph1">\&lt;</ph>clientCredentials&gt; Value in Configuration</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Credential values are specified by using an endpoint behavior as child elements of the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>clientCredentials&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The element used depends on the client credential type.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, the following example shows the configuration to set an X.509 certificate using the &lt;<bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>clientCertificate&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-clientcredentials-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To set the client credential in configuration, add an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>endpointBehaviors&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> element to the configuration file.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Additionally, the added behavior element must be linked to the service's endpoint using the <ph id="ph1">`behaviorConfiguration`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>endpoint&gt;<ept id="p1">](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`behaviorConfiguration`</ph> attribute must match the value of the behavior <ph id="ph2">`name`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Some of the client credential values cannot be set using application configuration files, for example, user name and password, or Windows user and password values.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Such credential values can be specified only in code.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>setting the client credential, see <bpt id="p1">[</bpt>How to: Specify Client Credential Values<ept id="p1">](../../../docs/framework/wcf/how-to-specify-client-credential-values.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ClientCredentialType`</ph> is ignored when <ph id="ph2">`SecurityMode`</ph> is set to <ph id="ph3">`"TransportWithMessageCredential",`</ph> as shown in the following sample configuration.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>bindings&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)</ept><ph id="ph2"> </ph></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuration Editor Tool (SvcConfigEditor.exe)<ept id="p1">](../../../docs/framework/wcf/configuration-editor-tool-svcconfigeditor-exe.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing Services<ept id="p1">](../../../docs/framework/wcf/securing-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Specify Client Credential Values<ept id="p1">](../../../docs/framework/wcf/how-to-specify-client-credential-values.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Specify the Client Credential Type<ept id="p1">](../../../docs/framework/wcf/how-to-specify-the-client-credential-type.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>