{"content":"---\ntitle: \"Using Conversion Operators (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"conversions [C#], operators\"\n  - \"conversion operators [C#]\"\n  - \"operators [C#], conversion\"\n  - \"user-defined conversions [C#]\"\n  - \"implicit conversion operators [C#]\"\n  - \"explicit conversion operators [C#]\"\nms.assetid: caf36e89-c6c0-4b87-9f9e-85780a45c9a4\ncaps.latest.revision: 20\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using Conversion Operators (C# Programming Guide)\nYou can use `implicit` conversion operators, which are easier to use, or `explicit` conversion operators, which clearly indicate to anyone reading the code that you're converting a type. This topic demonstrates both types of conversion operator.  \n  \n> [!NOTE]\n>  For information about simple type conversions, see [How to: Convert a String to a Number](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md), [How to: Convert a byte Array to an int](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md), [How to: Convert Between Hexadecimal Strings and Numeric Types](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md), or <xref:System.Convert>.  \n  \n## Example  \n This is an example of an explicit conversion operator. This operator converts from the type <xref:System.Byte> to a value type called `Digit`. Because not all bytes can be converted to a digit, the conversion is explicit, meaning that a cast must be used, as shown in the `Main` method.  \n  \n [!code-cs[csProgGuideStatements#11](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/using-conversion-operators_1.cs)]  \n  \n## Example  \n This example demonstrates an implicit conversion operator by defining a conversion operator that undoes what the previous example did: it converts from a value class called `Digit` to the integral <xref:System.Byte> type. Because any digit can be converted to a <xref:System.Byte>, there's no need to force users to be explicit about the conversion.  \n  \n [!code-cs[csProgGuideStatements#12](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/using-conversion-operators_2.cs)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Conversion Operators](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md)   \n [is](../../../csharp/language-reference/keywords/is.md)","nodes":[{"pos":[4,738],"embed":true,"restype":"x-metadata","content":"title: \"Using Conversion Operators (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"conversions [C#], operators\"\n  - \"conversion operators [C#]\"\n  - \"operators [C#], conversion\"\n  - \"user-defined conversions [C#]\"\n  - \"implicit conversion operators [C#]\"\n  - \"explicit conversion operators [C#]\"\nms.assetid: caf36e89-c6c0-4b87-9f9e-85780a45c9a4\ncaps.latest.revision: 20\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"Using Conversion Operators (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,66],"content":"Using Conversion Operators (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"Using Conversion Operators (C# Programming Guide) | Microsoft Docs","pos":[0,66]}]}],"path":["title"]}],"yml":true},{"pos":[745,794],"content":"Using Conversion Operators (C# Programming Guide)","linkify":"Using Conversion Operators (C# Programming Guide)","nodes":[{"content":"Using Conversion Operators (C# Programming Guide)","pos":[0,49]}]},{"content":"You can use <ph id=\"ph1\">`implicit`</ph> conversion operators, which are easier to use, or <ph id=\"ph2\">`explicit`</ph> conversion operators, which clearly indicate to anyone reading the code that you're converting a type.","pos":[795,981],"source":"You can use `implicit` conversion operators, which are easier to use, or `explicit` conversion operators, which clearly indicate to anyone reading the code that you're converting a type."},{"content":"This topic demonstrates both types of conversion operator.","pos":[982,1040]},{"pos":[1048,1549],"content":"[!NOTE]\n For information about simple type conversions, see [How to: Convert a String to a Number](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md), [How to: Convert a byte Array to an int](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md), [How to: Convert Between Hexadecimal Strings and Numeric Types](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md), or <xref:System.Convert>.","leadings":["","> "],"nodes":[{"content":"For information about simple type conversions, see <bpt id=\"p1\">[</bpt>How to: Convert a String to a Number<ept id=\"p1\">](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md)</ept>, <bpt id=\"p2\">[</bpt>How to: Convert a byte Array to an int<ept id=\"p2\">](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md)</ept>, <bpt id=\"p3\">[</bpt>How to: Convert Between Hexadecimal Strings and Numeric Types<ept id=\"p3\">](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md)</ept>, or <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph>.","pos":[9,499],"source":"For information about simple type conversions, see [How to: Convert a String to a Number](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md), [How to: Convert a byte Array to an int](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md), [How to: Convert Between Hexadecimal Strings and Numeric Types](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md), or <xref:System.Convert>."}]},{"pos":[1558,1565],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This is an example of an explicit conversion operator.","pos":[1569,1623]},{"content":"This operator converts from the type <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph> to a value type called <ph id=\"ph2\">`Digit`</ph>.","pos":[1624,1711],"source":" This operator converts from the type <xref:System.Byte> to a value type called `Digit`."},{"content":"Because not all bytes can be converted to a digit, the conversion is explicit, meaning that a cast must be used, as shown in the <ph id=\"ph1\">`Main`</ph> method.","pos":[1712,1855],"source":" Because not all bytes can be converted to a digit, the conversion is explicit, meaning that a cast must be used, as shown in the `Main` method."},{"pos":[2013,2020],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example demonstrates an implicit conversion operator by defining a conversion operator that undoes what the previous example did: it converts from a value class called <ph id=\"ph1\">`Digit`</ph> to the integral <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph> type.","pos":[2024,2245],"source":"This example demonstrates an implicit conversion operator by defining a conversion operator that undoes what the previous example did: it converts from a value class called `Digit` to the integral <xref:System.Byte> type."},{"content":"Because any digit can be converted to a <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, there's no need to force users to be explicit about the conversion.","pos":[2246,2373],"source":" Because any digit can be converted to a <xref:System.Byte>, there's no need to force users to be explicit about the conversion."},{"pos":[2531,2539],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2543,2603],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2607,2674],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Conversion Operators<ept id=\"p1\">](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md)</ept><ph id=\"ph1\"> </ph>","pos":[2678,2793],"source":"[Conversion Operators](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md) "},{"content":"<bpt id=\"p1\">[</bpt>is<ept id=\"p1\">](../../../csharp/language-reference/keywords/is.md)</ept>","pos":[2797,2852],"source":"[is](../../../csharp/language-reference/keywords/is.md)"}]}