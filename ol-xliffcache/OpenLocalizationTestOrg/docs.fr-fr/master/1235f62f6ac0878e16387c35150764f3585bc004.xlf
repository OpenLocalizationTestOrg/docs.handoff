<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1235f62f6ac0878e16387c35150764f3585bc004</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\creating-and-using-components.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c023d4eba8f925c77859a276697f95857b991e4e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ef40504fc5ea1121e152a58bce5fdb86fa47c54</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating and Using Components in Visual Basic | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating and Using Components in Visual Basic</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>component<ept id="p1">*</ept> is a class that implements the <ph id="ph1">&lt;xref:System.ComponentModel.IComponent?displayProperty=fullName&gt;</ph> interface or that derives directly or indirectly from a class that implements <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> component is an object that is reusable, can interact with other objects, and provides control over external resources and design-time support.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An important feature of components is that they are designable, which means that a class that is a component can be used in the <ph id="ph1">[!INCLUDE[vsprvs](../../csharp/includes/vsprvs_md.md)]</ph> Integrated Development Environment.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A component can be added to the Toolbox, dragged and dropped onto a form, and manipulated on a design surface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Notice that base design-time support for components is built into the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>; a component developer does not have to do any additional work to take advantage of the base design-time functionality.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>control<ept id="p1">*</ept> is similar to a component, as both are designable.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, a control provides a user interface, while a component does not.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A control must derive from one of the base control classes: <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When to Create a Component</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If your class will be used on a design surface (such as the Windows Forms or Web Forms Designer) but has no user interface, it should be a component and implement <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, or derive from a class that directly or indirectly implements <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> classes are base implementations of the <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The main difference between these classes is that the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> class is marshaled by reference, while <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> is marshaled by value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following list provides broad guidelines for implementers.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your component needs to be marshaled by reference, derive from <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If your component needs to be marshaled by value, derive from <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If your component cannot derive from one of the base implementations due to single inheritance, implement <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about design-time support, see <bpt id="p1">[</bpt>Design-Time Attributes for Components<ept id="p1">](http://msdn.microsoft.com/library/12050fe3-9327-4509-9e21-4ee2494b95c3)</ept> and <bpt id="p2">[</bpt>Extending Design-Time Support<ept id="p2">](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Component Classes</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel&gt;</ph> namespace provides classes that are used to implement the run-time and design-time behavior of components and controls.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This namespace includes the base classes and interfaces for implementing attributes and type converters, binding to data sources, and licensing components.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The core component classes are:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A base implementation for the <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This class enables object sharing between applications.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A base implementation for the <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The base implementation for the <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This class encapsulates zero or more components.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Some of the classes used for component licensing are:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.License&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The abstract base class for all licenses.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A license is granted to a specific instance of a component.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Provides properties and methods to add a license to a component and to manage a <ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The abstract base class for implementing a license provider.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.LicenseProviderAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph> class to use with a class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Classes commonly used for describing and persisting components.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Provides information about an event.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Provides information about a property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Class vs. Component vs. Control<ept id="p1">](http://msdn.microsoft.com/library/db8b842e-44d9-40cc-a0f8-70fd189632c3)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Defines <bpt id="p1">*</bpt>component<ept id="p1">*</ept> and <bpt id="p2">*</bpt>control<ept id="p2">*</ept>, and discusses the differences between them and classes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Component Authoring<ept id="p1">](http://msdn.microsoft.com/library/4a5a5e49-0378-4a31-83bc-24da0f1a727d)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Roadmap for getting started with components.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Component Authoring Walkthroughs<ept id="p1">](http://msdn.microsoft.com/library/c414cca9-2489-4208-8b38-954586d91c13)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Links to topics that provide step-by-step instruction for component programming.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Component Classes<ept id="p1">](http://msdn.microsoft.com/library/ce2e5647-e673-4c2b-8125-ffebbd9d71bc)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Describes what makes a class a component, ways to expose component functionality, controlling access to components, and controlling how component instances are created.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Troubleshooting Control and Component Authoring<ept id="p1">](../../framework/winforms/controls/troubleshooting-control-and-component-authoring.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Explains how to fix common problems.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Access Design-Time Support in Windows Forms<ept id="p1">](http://msdn.microsoft.com/library/a84f8579-1f47-41b9-ba37-69030b0aff09)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Extend the Appearance and Behavior of Controls in Design Mode<ept id="p1">](http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Perform Custom Initialization for Controls in Design Mode<ept id="p1">](http://msdn.microsoft.com/library/914eaa03-092f-4556-9160-b8a2a40641d9)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>