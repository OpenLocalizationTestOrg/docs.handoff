<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-modify-xml-literals.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">003715b04f3a5c0fb41e846beb189f117378ea58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\how-to-modify-xml-literals.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cef19213ebdb1b64a819e2e0b10ed61a1a3daf86</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d6f7657b3591a073f6511a329011c27675feb58</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Modify XML Literals (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Modify XML Literals (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual Basic provides convenient ways to modify XML literals.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can add or delete elements and attributes, and you can also replace an existing element with a new XML element.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic provides several examples of how to modify an existing XML literal.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To modify the value of an XML literal</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To modify the value of an XML literal, obtain a reference to the XML literal and set the <ph id="ph1">`Value`</ph> property to the desired value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code example updates the value of all the <ph id="ph1">\&lt;</ph>Price&gt; elements in an XML document.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Source XML:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Modified XML:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Value`</ph> property refers to the first XML element in a collection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If there is more than one element that has the same name in a collection, setting the <ph id="ph1">`Value`</ph> property affects only the first element in the collection.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To add an attribute to an XML literal</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To add an attribute to an XML literal, first obtain a reference to the XML literal.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can then add an attribute by adding a new XML attribute axis property.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also add a new <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> object to the XML literal by using the <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example shows both options.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Source XML:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Modified XML:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information about XML attribute axis properties, see <bpt id="p1">[</bpt>XML Attribute Axis Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To add an element to an XML literal</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To add an element to an XML literal, first obtain a reference to the XML literal.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can then add a new <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the last sub-element of the element by using the <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can add a new <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first sub-element by using the <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.AddFirst%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To add a new element in a specific location relative to other sub-elements, first obtain a reference to an adjacent sub-element.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can then add the new <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object before the adjacent sub-element by using the <ph id="ph2">&lt;xref:System.Xml.Linq.XNode.AddBeforeSelf%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also add the new <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object after the adjacent sub-element by using the <ph id="ph2">&lt;xref:System.Xml.Linq.XNode.AddAfterSelf%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example shows examples of each of these techniques.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Source XML:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Modified XML:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To remove an element or attribute from an XML literal</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To remove an element or an attribute from an XML literal, obtain a reference to the element or attribute and call the <ph id="ph1">`Remove`</ph> method, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Source XML:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Modified XML:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To remove all elements or attributes from an XML literal, obtain a reference to the XML literal and call the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAll%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To modify an XML literal</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To change the name of an XML element, first obtain a reference to the element.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can then create a new <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object that has a new name and pass the new <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Xml.Linq.XNode.ReplaceWith%2A&gt;</ph> method of the existing <ph id="ph4">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the element that you are replacing has sub-elements that must be preserved, set the value of the new <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph> property of the existing element.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This will set the value of the new element to the inner XML of the existing element.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Otherwise, you can set the value of the new element to the <ph id="ph1">`Value`</ph> property of the existing element.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following code example replaces all <ph id="ph1">\&lt;</ph>Description&gt; elements with an <ph id="ph2">\&lt;</ph>Abstract&gt; element.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The content of the <ph id="ph1">\&lt;</ph>Description&gt; element is preserved in the new <ph id="ph2">\&lt;</ph>Abstract&gt; element by using the <ph id="ph3">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph> property of the <ph id="ph4">\&lt;</ph>Description&gt; <ph id="ph5">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Source XML:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Modified XML:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulating XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Load XML from a File, String, or Stream<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>