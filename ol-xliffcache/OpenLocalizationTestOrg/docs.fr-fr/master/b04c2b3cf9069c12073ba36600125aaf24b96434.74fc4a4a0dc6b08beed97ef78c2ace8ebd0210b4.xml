{"content":"---\ntitle: \"ascending - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"ascending\"\n  - \"ascending_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"ascending keyword [C#]\"\nms.assetid: 57fbb619-8187-481c-b68e-3a91996fde69\n---\n# ascending (C# Reference)\nThe `ascending` contextual keyword is used in the [orderby clause](../../../csharp/language-reference/keywords/orderby-clause.md) in query expressions to specify that the sort order is from smallest to largest. Because `ascending` is the default sort order, you do not have to specify it.  \n  \n## Example  \n The following example shows the use of `ascending` in an [orderby clause](../../../csharp/language-reference/keywords/orderby-clause.md).  \n  \n[!code-csharp[csrefKeywordsContextual#14](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsContextual/CS/csrefKeywordsContextual.cs#14)]\n  \n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)\n- [descending](../../../csharp/language-reference/keywords/descending.md)\n","nodes":[{"pos":[4,238],"embed":true,"restype":"x-metadata","content":"title: \"ascending - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"ascending\"\n  - \"ascending_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"ascending keyword [C#]\"\nms.assetid: 57fbb619-8187-481c-b68e-3a91996fde69","nodes":[{"content":"ascending - C# Reference","nodes":[{"pos":[0,24],"content":"ascending - C# Reference","nodes":[{"content":"ascending - C# Reference","pos":[0,24]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[245,269],"content":"ascending (C# Reference)","linkify":"ascending (C# Reference)","nodes":[{"content":"ascending (C# Reference)","pos":[0,24]}]},{"content":"The <ph id=\"ph1\">`ascending`</ph> contextual keyword is used in the <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../csharp/language-reference/keywords/orderby-clause.md)</ept> in query expressions to specify that the sort order is from smallest to largest.","pos":[270,480],"source":"The `ascending` contextual keyword is used in the [orderby clause](../../../csharp/language-reference/keywords/orderby-clause.md) in query expressions to specify that the sort order is from smallest to largest."},{"content":"Because <ph id=\"ph1\">`ascending`</ph> is the default sort order, you do not have to specify it.","pos":[481,558],"source":" Because `ascending` is the default sort order, you do not have to specify it."},{"pos":[567,574],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[578,715],"content":"The following example shows the use of <ph id=\"ph1\">`ascending`</ph> in an <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.","source":"The following example shows the use of `ascending` in an [orderby clause](../../../csharp/language-reference/keywords/orderby-clause.md)."},{"pos":[875,883],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[887,946],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[949,1040],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)"},{"pos":[1043,1114],"content":"<bpt id=\"p1\">[</bpt>descending<ept id=\"p1\">](../../../csharp/language-reference/keywords/descending.md)</ept>","source":"[descending](../../../csharp/language-reference/keywords/descending.md)"}]}