{"content":"---\ntitle: \"AutoResetEvent | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"threading [.NET Framework], AutoResetEvent class\"\n  - \"AutoResetEvent class\"\nms.assetid: 6d39c48d-6b37-4a9b-8631-f2924cfd9c18\ncaps.latest.revision: 9\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# AutoResetEvent\nThe <xref:System.Threading.AutoResetEvent> class represents a local wait handle event that resets automatically when signaled, after releasing a single waiting thread. This class represents a special case of its base class, <xref:System.Threading.EventWaitHandle>. See the [EventWaitHandle](../../../docs/standard/threading/eventwaithandle.md) conceptual documentation for the use and features of automatic reset events.  \n  \n An <xref:System.Threading.AutoResetEvent> object is automatically reset to non-signaled by the system after a single waiting thread has been released. If no threads are waiting, the event object's state remains signaled. <xref:System.Threading.AutoResetEvent> corresponds to a Win32 `CreateEvent` call, specifying `false` for the `bManualReset` argument.  \n  \n For an example that uses <xref:System.Threading.AutoResetEvent>, see [Monitor](http://msdn.microsoft.com/library/33fe4aef-b44b-42fd-9e72-c908e39e75db).  \n  \n## See Also  \n <xref:System.Threading.ManualResetEvent>   \n <xref:System.Threading.Monitor>   \n [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](../../../docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md)   \n [Threading](../../../docs/standard/threading/index.md)   \n [Threading Objects and Features](../../../docs/standard/threading/threading-objects-and-features.md)   \n [Wait Handles](http://msdn.microsoft.com/library/48d10b6f-5fd7-407c-86ab-0179aef72489)","nodes":[{"pos":[4,431],"nodes":[{"content":"AutoResetEvent | Microsoft Docs","nodes":[{"pos":[0,31],"content":"AutoResetEvent | Microsoft Docs","nodes":[{"content":"AutoResetEvent | Microsoft Docs","pos":[0,31]}]}],"pos":[6,40],"yaml":true}],"content":"title: \"AutoResetEvent | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"threading [.NET Framework], AutoResetEvent class\"\n  - \"AutoResetEvent class\"\nms.assetid: 6d39c48d-6b37-4a9b-8631-f2924cfd9c18\ncaps.latest.revision: 9\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[438,452],"content":"AutoResetEvent","linkify":"AutoResetEvent","nodes":[{"content":"AutoResetEvent","pos":[0,14]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.AutoResetEvent&gt;</ph> class represents a local wait handle event that resets automatically when signaled, after releasing a single waiting thread.","pos":[453,620],"source":"The <xref:System.Threading.AutoResetEvent> class represents a local wait handle event that resets automatically when signaled, after releasing a single waiting thread."},{"content":"This class represents a special case of its base class, <ph id=\"ph1\">&lt;xref:System.Threading.EventWaitHandle&gt;</ph>.","pos":[621,717],"source":" This class represents a special case of its base class, <xref:System.Threading.EventWaitHandle>."},{"content":"See the <bpt id=\"p1\">[</bpt>EventWaitHandle<ept id=\"p1\">](../../../docs/standard/threading/eventwaithandle.md)</ept> conceptual documentation for the use and features of automatic reset events.","pos":[718,873],"source":" See the [EventWaitHandle](../../../docs/standard/threading/eventwaithandle.md) conceptual documentation for the use and features of automatic reset events."},{"content":"An <ph id=\"ph1\">&lt;xref:System.Threading.AutoResetEvent&gt;</ph> object is automatically reset to non-signaled by the system after a single waiting thread has been released.","pos":[880,1030],"source":"An <xref:System.Threading.AutoResetEvent> object is automatically reset to non-signaled by the system after a single waiting thread has been released."},{"content":"If no threads are waiting, the event object's state remains signaled.","pos":[1031,1100]},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.AutoResetEvent&gt;</ph> corresponds to a Win32 <ph id=\"ph2\">`CreateEvent`</ph> call, specifying <ph id=\"ph3\">`false`</ph> for the <ph id=\"ph4\">`bManualReset`</ph> argument.","pos":[1101,1234],"source":" <xref:System.Threading.AutoResetEvent> corresponds to a Win32 `CreateEvent` call, specifying `false` for the `bManualReset` argument."},{"pos":[1241,1392],"content":"For an example that uses <ph id=\"ph1\">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, see <bpt id=\"p1\">[</bpt>Monitor<ept id=\"p1\">](http://msdn.microsoft.com/library/33fe4aef-b44b-42fd-9e72-c908e39e75db)</ept>.","source":"For an example that uses <xref:System.Threading.AutoResetEvent>, see [Monitor](http://msdn.microsoft.com/library/33fe4aef-b44b-42fd-9e72-c908e39e75db)."},{"pos":[1401,1409],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>","pos":[1413,1453],"source":"<xref:System.Threading.ManualResetEvent> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.Monitor&gt;</ph>","pos":[1458,1489],"source":"<xref:System.Threading.Monitor> "},{"content":"<bpt id=\"p1\">[</bpt>EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent<ept id=\"p1\">](../../../docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md)</ept><ph id=\"ph1\"> </ph>","pos":[1494,1662],"source":"[EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](../../../docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md) "},{"content":"<bpt id=\"p1\">[</bpt>Threading<ept id=\"p1\">](../../../docs/standard/threading/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1666,1721],"source":"[Threading](../../../docs/standard/threading/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Threading Objects and Features<ept id=\"p1\">](../../../docs/standard/threading/threading-objects-and-features.md)</ept><ph id=\"ph1\"> </ph>","pos":[1725,1826],"source":"[Threading Objects and Features](../../../docs/standard/threading/threading-objects-and-features.md) "},{"content":"<bpt id=\"p1\">[</bpt>Wait Handles<ept id=\"p1\">](http://msdn.microsoft.com/library/48d10b6f-5fd7-407c-86ab-0179aef72489)</ept>","pos":[1830,1916],"source":"[Wait Handles](http://msdn.microsoft.com/library/48d10b6f-5fd7-407c-86ab-0179aef72489)"}]}