<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerinfo3-interface.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b523c5819994e6da0332188311b4b631e3f9072</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerinfo3-interface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3ba766874d51400fee151f6d44f124e3bd32957</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f661a7a300d5d3b609181366b08c96b93b0579a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerInfo3 Interface</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerInfo3 Interface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides methods that code profilers use to communicate with the common language runtime (CLR) to control event monitoring and to request information.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ICorProfilerInfo3`</ph> interface is an extension of the <bpt id="p1">[</bpt>ICorProfilerInfo2<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-interface.md)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It provides new methods supported in the <ph id="ph1">[!INCLUDE[net_v40_long](../../../../includes/net-v40-long-md.md)]</ph> and later versions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>EnumJITedFunctions Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-enumjitedfunctions-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for all previously JIT-compiled functions.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>EnumModules Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-enummodules-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that provides methods to sequentially iterate through a collection of managed modules that are loaded into the application.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetAppDomainsContainingModule Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getappdomainscontainingmodule-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the identifiers of the application domains in which the given module has been loaded.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetFunctionEnter3Info Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides the stack frame and argument information of the function that is being reported to the profiler by the <bpt id="p1">[</bpt>FunctionEnter3WithInfo<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md)</ept> function; can be called only during the <ph id="ph1">`FunctionEnter3WithInfo`</ph> callback.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetFunctionLeave3Info Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionleave3info-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provides the stack frame and return value of the function that is being reported to the profiler by the <bpt id="p1">[</bpt>FunctionLeave3WithInfo function<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md)</ept> function; can be called only during the <ph id="ph1">`FunctionLeave3WithInfo`</ph> callback.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetFunctionTailcall3Info Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Provides the stack frame of the function that is being reported to the profiler by the <bpt id="p1">[</bpt>FunctionTailcall3WithInfo<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3withinfo-function.md)</ept> function; can be called only during the <ph id="ph1">`FunctionTailcall3WithInfo`</ph> callback.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetModuleInfo2 Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getmoduleinfo2-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Given a module ID, returns the file name of the module, the ID of the module's parent assembly, and a bitmask that describes the properties of the module.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetRuntimeInformation Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getruntimeinformation-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Provides version information about the runtime that is being profiled.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetStringLayout2 Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getstringlayout2-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets information about the layout of a string object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetThreadStaticAddress2 Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getthreadstaticaddress2-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the address of the specified thread-static field that is in the scope of the specified thread and application domain.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RequestProfilerDetach Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-requestprofilerdetach-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Instructs the runtime to detach the profiler.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetEnterLeaveFunctionHooks3 Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies the profiler-implemented functions that will be called on the <bpt id="p1">[</bpt>FunctionEnter3<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md)</ept>, <bpt id="p2">[</bpt>FunctionLeave3<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md)</ept>, and <bpt id="p3">[</bpt>FunctionTailcall3<ept id="p3">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md)</ept> functions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetEnterLeaveFunctionHooks3WithInfo Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies the profiler-implemented functions that will be called on the <bpt id="p1">[</bpt>FunctionEnter3WithInfo<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md)</ept>, <bpt id="p2">[</bpt>FunctionLeave3WithInfo<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md)</ept>, and <bpt id="p3">[</bpt>FunctionTailcall3WithInfo<ept id="p3">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3withinfo-function.md)</ept> hooks of managed functions.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetFunctionIDMapper2 Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setfunctionidmapper2-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies the profiler-implemented function that will be called to map <ph id="ph1">`FunctionID`</ph> values to alternative values, which are passed to the profiler's function entry/exit hooks.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method extends <bpt id="p1">[</bpt>ICorProfilerInfo::SetFunctionIDMapper<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setfunctionidmapper-method.md)</ept> with a parameter that profilers may use to disambiguate among runtimes.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The CLR implements the methods of the <ph id="ph1">`ICorProfilerInfo3`</ph> interface by using the free-threaded model.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Each method returns an HRESULT to indicate success or failure.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For a list of possible return codes, see the CorError.h file.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The CLR passes an <ph id="ph1">`ICorProfilerInfo3`</ph> interface to each code profiler during initialization, using the profiler's implementation of the <bpt id="p1">[</bpt>ICorProfilerCallback::Initialize<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)</ept> or <bpt id="p2">[</bpt>ICorProfilerCallback3::InitializeForAttach<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback3-initializeforattach-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A code profiler can then call the <ph id="ph1">`ICorProfilerInfo3`</ph> methods to get information about managed code that is being executed under the control of the CLR.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>