{"content":"---\ntitle: \"Aggregation Operations (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 6fc035e5-7639-48b8-bc7f-b093dd31b039\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Aggregation Operations (C#)\nAn aggregation operation computes a single value from a collection of values. An example of an aggregation operation is calculating the average daily temperature from a month's worth of daily temperature values.  \n  \n The following illustration shows the results of two different aggregation operations on a sequence of numbers. The first operation sums the numbers. The second operation returns the maximum value in the sequence.  \n  \n ![LINQ Aggregation Operations](../../../../csharp/programming-guide/concepts/linq/media/linq_aggregation.png \"LINQ_Aggregation\")  \n  \n The standard query operator methods that perform aggregation operations are listed in the following section.  \n  \n## Methods  \n  \n|Method Name|Description|C# Query Expression Syntax|More Information|  \n|-----------------|-----------------|---------------------------------|----------------------|  \n|Aggregate|Performs a custom aggregation operation on the values of a collection.|Not applicable.|<xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Aggregate%2A?displayProperty=fullName>|  \n|Average|Calculates the average value of a collection of values.|Not applicable.|<xref:System.Linq.Enumerable.Average%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Average%2A?displayProperty=fullName>|  \n|Count|Counts the elements in a collection, optionally only those elements that satisfy a predicate function.|Not applicable.|<xref:System.Linq.Enumerable.Count%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Count%2A?displayProperty=fullName>|  \n|LongCount|Counts the elements in a large collection, optionally only those elements that satisfy a predicate function.|Not applicable.|<xref:System.Linq.Enumerable.LongCount%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.LongCount%2A?displayProperty=fullName>|  \n|Max|Determines the maximum value in a collection.|Not applicable.|<xref:System.Linq.Enumerable.Max%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Max%2A?displayProperty=fullName>|  \n|Min|Determines the minimum value in a collection.|Not applicable.|<xref:System.Linq.Enumerable.Min%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Min%2A?displayProperty=fullName>|  \n|Sum|Calculates the sum of the values in a collection.|Not applicable.|<xref:System.Linq.Enumerable.Sum%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Sum%2A?displayProperty=fullName>|  \n  \n## See Also  \n <xref:System.Linq>   \n [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)   \n [How to: Compute Column Values in a CSV Text File (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)   \n [How to: Query for the Largest File or Files in a Directory Tree (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree-linq.md)   \n [How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders-linq.md)","nodes":[{"pos":[4,408],"embed":true,"restype":"x-metadata","content":"title: \"Aggregation Operations (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 6fc035e5-7639-48b8-bc7f-b093dd31b039\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","nodes":[{"content":"Aggregation Operations (C#) | Microsoft Docs","nodes":[{"pos":[0,44],"content":"Aggregation Operations (C#) | Microsoft Docs","nodes":[{"content":"Aggregation Operations (C#) | Microsoft Docs","pos":[0,44]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[415,442],"content":"Aggregation Operations (C#)","linkify":"Aggregation Operations (C#)","nodes":[{"content":"Aggregation Operations (C#)","pos":[0,27]}]},{"content":"An aggregation operation computes a single value from a collection of values.","pos":[443,520]},{"content":"An example of an aggregation operation is calculating the average daily temperature from a month's worth of daily temperature values.","pos":[521,654]},{"content":"The following illustration shows the results of two different aggregation operations on a sequence of numbers.","pos":[661,771]},{"content":"The first operation sums the numbers.","pos":[772,809]},{"content":"The second operation returns the maximum value in the sequence.","pos":[810,873]},{"pos":[880,1008],"content":"<bpt id=\"p1\">![</bpt>LINQ Aggregation Operations<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../csharp/programming-guide/concepts/linq/media/linq_aggregation.png \"</bpt>LINQ_Aggregation<ept id=\"p2\">\")</ept>","source":"![LINQ Aggregation Operations](../../../../csharp/programming-guide/concepts/linq/media/linq_aggregation.png \"LINQ_Aggregation\")"},{"content":"The standard query operator methods that perform aggregation operations are listed in the following section.","pos":[1015,1123]},{"pos":[1132,1139],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method Name","pos":[1146,1157]},{"content":"Description","pos":[1158,1169]},{"content":"C# Query Expression Syntax","pos":[1170,1196]},{"content":"More Information","pos":[1197,1213]},{"content":"Aggregate","pos":[1315,1324]},{"content":"Performs a custom aggregation operation on the values of a collection.","pos":[1325,1395]},{"content":"Not applicable.","pos":[1396,1411]},{"content":"Average","pos":[1563,1570]},{"content":"Calculates the average value of a collection of values.","pos":[1571,1626]},{"content":"Not applicable.","pos":[1627,1642]},{"content":"Count","pos":[1790,1795]},{"content":"Counts the elements in a collection, optionally only those elements that satisfy a predicate function.","pos":[1796,1898]},{"content":"Not applicable.","pos":[1899,1914]},{"content":"LongCount","pos":[2058,2067]},{"content":"Counts the elements in a large collection, optionally only those elements that satisfy a predicate function.","pos":[2068,2176]},{"content":"Not applicable.","pos":[2177,2192]},{"content":"Max","pos":[2344,2347]},{"content":"Determines the maximum value in a collection.","pos":[2348,2393]},{"content":"Not applicable.","pos":[2394,2409]},{"content":"Min","pos":[2549,2552]},{"content":"Determines the minimum value in a collection.","pos":[2553,2598]},{"content":"Not applicable.","pos":[2599,2614]},{"content":"Sum","pos":[2754,2757]},{"content":"Calculates the sum of the values in a collection.","pos":[2758,2807]},{"content":"Not applicable.","pos":[2808,2823]},{"pos":[2968,2976],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[3003,3133],"source":"[Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Compute Column Values in a CSV Text File (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)</ept><ph id=\"ph1\"> </ph>","pos":[3137,3308],"source":"[How to: Compute Column Values in a CSV Text File (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Query for the Largest File or Files in a Directory Tree (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree-linq.md)</ept><ph id=\"ph1\"> </ph>","pos":[3312,3513],"source":"[How to: Query for the Largest File or Files in a Directory Tree (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree-linq.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders-linq.md)</ept>","pos":[3517,3717],"source":"[How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders-linq.md)"}]}