{"content":"---\ntitle: \"/target (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"target compiler options [Visual Basic]\"\n  - \"-target compiler options [Visual Basic]\"\n  - \"/target compiler options [Visual Basic]\"\nms.assetid: e0954147-548b-461f-9c4b-a8f88845616c\ncaps.latest.revision: 29\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /target (Visual Basic)\nSpecifies the format of compiler output.  \n  \n## Syntax  \n  \n```  \n/target:{exe | library | module | winexe | appcontainerexe | winmdobj}  \n```  \n  \n## Remarks  \n The following table summarizes the effect of the `/target` option.  \n  \n|**Option**|**Behavior**|  \n|----------------|------------------|  \n|`/target:exe`|Causes the compiler to create an executable console application.<br /><br /> This is the default option when no `/target` option is specified. The executable file is created with an .exe extension.<br /><br /> Unless otherwise specified with the `/out` option, the output file name takes the name of the input file that contains the `Sub Main` procedure.<br /><br /> Only one `Sub Main` procedure is required in the source-code files that are compiled into an .exe file. Use the `/main` compiler option to specify which class contains the `Sub Main` procedure.|  \n|`/target:library`|Causes the compiler to create a dynamic-link library (DLL).<br /><br /> The dynamic-link library file is created with a .dll extension.<br /><br /> Unless otherwise specified with the `/out` option, the output file name takes the name of the first input file.<br /><br /> When building a DLL, a `Sub Main` procedure is not required.|  \n|`/target:module`|Causes the compiler to generate a module that can be added to an assembly.<br /><br /> The output file is created with an extension of .netmodule.<br /><br /> The .NET common language runtime cannot load a file that does not have an assembly. However, you can incorporate such a file into the assembly manifest of an assembly by using `/reference`.<br /><br /> When code in one module references internal types in another module, both modules must be incorporated into an assembly manifest by using `/reference`.<br /><br /> The [/addmodule](../../../visual-basic/reference/command-line-compiler/addmodule.md) option imports metadata from a module.|  \n|`/target:winexe`|Causes the compiler to create an executable Windows-based application.<br /><br /> The executable file is created with an .exe extension. A Windows-based application is one that provides a user interface from either the [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)] class library or with the Win32 APIs.<br /><br /> Unless otherwise specified with the `/out` option, the output file name takes the name of the input file that contains the `Sub Main` procedure.<br /><br /> Only one `Sub Main` procedure is required in the source-code files that are compiled into an .exe file. In cases where your code has more than one class that has a `Sub Main` procedure, use the `/main` compiler option to specify which class contains the `Sub Main` procedure|  \n|`/target:appcontainerexe`|Causes the compiler to create an executable Windows-based application that must be run in an app container. This setting is designed to be used for [!INCLUDE[win8_appname_long](../../../csharp/includes/win8_appname_long_md.md)] applications.<br /><br /> The **appcontainerexe** setting sets a bit in the Characteristics field of the [Portable Executable](http://go.microsoft.com/fwlink/p/?LinkId=236960) file. This bit indicates that the app must be run in an app container. When this bit is set, an error occurs if the `CreateProcess` method tries to launch the application outside of an app container. Aside from this bit setting, **/target:appcontainerexe** is equivalent to **/target:winexe**.<br /><br /> The executable file is created with an .exe extension.<br /><br /> Unless you specify otherwise by using the `/out` option, the output file name takes the name of the input file that contains the `Sub Main` procedure.<br /><br /> Only one `Sub Main` procedure is required in the source-code files that are compiled into an .exe file. If your code contains more than one class that has a `Sub Main` procedure, use the `/main` compiler option to specify which class contains the `Sub Main` procedure|  \n|`/target:winmdobj`|Causes the compiler to create an intermediate file that you can convert to a Windows Runtime binary (.winmd) file. The .winmd file can be consumed by JavaScript and C++ programs, in addition to managed language programs.<br /><br /> The intermediate file is created with a .winmdobj extension.<br /><br /> Unless you specify otherwise by using the `/out` option, the output file name takes the name of the first input file. A `Sub Main` procedure isnâ€™t required.<br /><br /> The .winmdobj file is designed to be used as input for the <xref:Microsoft.Build.Tasks.WinMDExp> export tool to produce a Windows metadata (WinMD) file. The WinMD file has a .winmd extension and contains both the code from the original library and the WinMD definitions that JavaScript, C++, and  the Windows Runtime use.|  \n  \n Unless you specify `/target:module`, `/target` causes a [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)] assembly manifest to be added to an output file.  \n  \n Each instance of Vbc.exe produces, at most, one output file. If you specify a compiler option such as `/out` or `/target` more than one time, the last one the compiler processes is put into effect. Information about all files in a compilation is added to the manifest. All output files except those created with `/target:module` contain assembly metadata in the manifest. Use [Ildasm.exe (IL Disassembler)](https://msdn.microsoft.com/library/f7dy01k1) to view the metadata in an output file.  \n  \n The short form of `/target` is `/t`.  \n  \n### To set /target in the Visual Studio IDE  \n  \n1.  Have a project selected in **Solution Explorer**. On the **Project** menu, click **Properties**. For more information, see [Introduction to the Project Designer](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7).  \n  \n2.  Click the **Application** tab.  \n  \n3.  Modify the value in the **Application Type** box.  \n  \n## Example  \n The following code compiles `in.vb`, creating `in.dll`:  \n  \n```  \nvbc /target:library in.vb  \n```  \n  \n## See Also  \n [Visual Basic Command-Line Compiler](../../../visual-basic/reference/command-line-compiler/index.md)   \n [/main](../../../visual-basic/reference/command-line-compiler/main.md)   \n [/out (Visual Basic)](../../../visual-basic/reference/command-line-compiler/out.md)   \n [/reference (Visual Basic)](../../../visual-basic/reference/command-line-compiler/reference.md)   \n [/addmodule](../../../visual-basic/reference/command-line-compiler/addmodule.md)   \n [/moduleassemblyname](../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)   \n [Assemblies and the Global Assembly Cache](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)   \n [Sample Compilation Command Lines](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)","nodes":[{"pos":[12,51],"content":"/target (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"/target (Visual Basic) | Microsoft Docs","pos":[0,39]}]},{"pos":[670,692],"content":"/target (Visual Basic)","linkify":"/target (Visual Basic)","nodes":[{"content":"/target (Visual Basic)","pos":[0,22]}]},{"content":"Specifies the format of compiler output.","pos":[693,733]},{"pos":[742,748],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[845,852],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[856,922],"content":"The following table summarizes the effect of the <ph id=\"ph1\">`/target`</ph> option.","source":"The following table summarizes the effect of the `/target` option."},{"pos":[929,939],"content":"<bpt id=\"p1\">**</bpt>Option<ept id=\"p1\">**</ept>","source":"**Option**"},{"pos":[940,952],"content":"<bpt id=\"p1\">**</bpt>Behavior<ept id=\"p1\">**</ept>","source":"**Behavior**"},{"content":"Causes the compiler to create an executable console application.","pos":[1011,1075]},{"content":"This is the default option when no <ph id=\"ph1\">`/target`</ph> option is specified.","pos":[1088,1153],"source":" This is the default option when no `/target` option is specified."},{"content":"The executable file is created with an .exe extension.","pos":[1154,1208]},{"content":"Unless otherwise specified with the <ph id=\"ph1\">`/out`</ph> option, the output file name takes the name of the input file that contains the <ph id=\"ph2\">`Sub Main`</ph> procedure.","pos":[1221,1365],"source":" Unless otherwise specified with the `/out` option, the output file name takes the name of the input file that contains the `Sub Main` procedure."},{"content":"Only one <ph id=\"ph1\">`Sub Main`</ph> procedure is required in the source-code files that are compiled into an .exe file.","pos":[1378,1481],"source":" Only one `Sub Main` procedure is required in the source-code files that are compiled into an .exe file."},{"content":"Use the <ph id=\"ph1\">`/main`</ph> compiler option to specify which class contains the <ph id=\"ph2\">`Sub Main`</ph> procedure.","pos":[1482,1571],"source":" Use the `/main` compiler option to specify which class contains the `Sub Main` procedure."},{"content":"Causes the compiler to create a dynamic-link library (DLL).","pos":[1594,1653]},{"content":"The dynamic-link library file is created with a .dll extension.","pos":[1666,1729]},{"content":"Unless otherwise specified with the <ph id=\"ph1\">`/out`</ph> option, the output file name takes the name of the first input file.","pos":[1742,1853],"source":" Unless otherwise specified with the `/out` option, the output file name takes the name of the first input file."},{"content":"When building a DLL, a <ph id=\"ph1\">`Sub Main`</ph> procedure is not required.","pos":[1866,1926],"source":" When building a DLL, a `Sub Main` procedure is not required."},{"content":"Causes the compiler to generate a module that can be added to an assembly.","pos":[1948,2022]},{"content":"The output file is created with an extension of .netmodule.","pos":[2035,2094]},{"content":"The .NET common language runtime cannot load a file that does not have an assembly.","pos":[2107,2190]},{"content":"However, you can incorporate such a file into the assembly manifest of an assembly by using <ph id=\"ph1\">`/reference`</ph>.","pos":[2191,2296],"source":" However, you can incorporate such a file into the assembly manifest of an assembly by using `/reference`."},{"content":"When code in one module references internal types in another module, both modules must be incorporated into an assembly manifest by using <ph id=\"ph1\">`/reference`</ph>.","pos":[2309,2460],"source":" When code in one module references internal types in another module, both modules must be incorporated into an assembly manifest by using `/reference`."},{"content":"The <bpt id=\"p1\">[</bpt>/addmodule<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept> option imports metadata from a module.","pos":[2473,2596],"source":" The [/addmodule](../../../visual-basic/reference/command-line-compiler/addmodule.md) option imports metadata from a module."},{"content":"Causes the compiler to create an executable Windows-based application.","pos":[2618,2688]},{"content":"The executable file is created with an .exe extension.","pos":[2701,2755]},{"content":"A Windows-based application is one that provides a user interface from either the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> class library or with the Win32 APIs.","pos":[2756,2959],"source":" A Windows-based application is one that provides a user interface from either the [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)] class library or with the Win32 APIs."},{"content":"Unless otherwise specified with the <ph id=\"ph1\">`/out`</ph> option, the output file name takes the name of the input file that contains the <ph id=\"ph2\">`Sub Main`</ph> procedure.","pos":[2972,3116],"source":" Unless otherwise specified with the `/out` option, the output file name takes the name of the input file that contains the `Sub Main` procedure."},{"content":"Only one <ph id=\"ph1\">`Sub Main`</ph> procedure is required in the source-code files that are compiled into an .exe file.","pos":[3129,3232],"source":" Only one `Sub Main` procedure is required in the source-code files that are compiled into an .exe file."},{"content":"In cases where your code has more than one class that has a <ph id=\"ph1\">`Sub Main`</ph> procedure, use the <ph id=\"ph2\">`/main`</ph> compiler option to specify which class contains the <ph id=\"ph3\">`Sub Main`</ph> procedure","pos":[3233,3403],"source":" In cases where your code has more than one class that has a `Sub Main` procedure, use the `/main` compiler option to specify which class contains the `Sub Main` procedure"},{"content":"Causes the compiler to create an executable Windows-based application that must be run in an app container.","pos":[3434,3541]},{"content":"This setting is designed to be used for <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../../csharp/includes/win8_appname_long_md.md)]</ph> applications.","pos":[3542,3675],"source":" This setting is designed to be used for [!INCLUDE[win8_appname_long](../../../csharp/includes/win8_appname_long_md.md)] applications."},{"content":"The <bpt id=\"p1\">**</bpt>appcontainerexe<ept id=\"p1\">**</ept> setting sets a bit in the Characteristics field of the <bpt id=\"p2\">[</bpt>Portable Executable<ept id=\"p2\">](http://go.microsoft.com/fwlink/p/?LinkId=236960)</ept> file.","pos":[3688,3843],"source":" The **appcontainerexe** setting sets a bit in the Characteristics field of the [Portable Executable](http://go.microsoft.com/fwlink/p/?LinkId=236960) file."},{"content":"This bit indicates that the app must be run in an app container.","pos":[3844,3908]},{"content":"When this bit is set, an error occurs if the <ph id=\"ph1\">`CreateProcess`</ph> method tries to launch the application outside of an app container.","pos":[3909,4037],"source":" When this bit is set, an error occurs if the `CreateProcess` method tries to launch the application outside of an app container."},{"content":"Aside from this bit setting, <bpt id=\"p1\">**</bpt>/target:appcontainerexe<ept id=\"p1\">**</ept> is equivalent to <bpt id=\"p2\">**</bpt>/target:winexe<ept id=\"p2\">**</ept>.","pos":[4038,4131],"source":" Aside from this bit setting, **/target:appcontainerexe** is equivalent to **/target:winexe**."},{"content":"The executable file is created with an .exe extension.","pos":[4144,4198]},{"content":"Unless you specify otherwise by using the <ph id=\"ph1\">`/out`</ph> option, the output file name takes the name of the input file that contains the <ph id=\"ph2\">`Sub Main`</ph> procedure.","pos":[4211,4361],"source":" Unless you specify otherwise by using the `/out` option, the output file name takes the name of the input file that contains the `Sub Main` procedure."},{"content":"Only one <ph id=\"ph1\">`Sub Main`</ph> procedure is required in the source-code files that are compiled into an .exe file.","pos":[4374,4477],"source":" Only one `Sub Main` procedure is required in the source-code files that are compiled into an .exe file."},{"content":"If your code contains more than one class that has a <ph id=\"ph1\">`Sub Main`</ph> procedure, use the <ph id=\"ph2\">`/main`</ph> compiler option to specify which class contains the <ph id=\"ph3\">`Sub Main`</ph> procedure","pos":[4478,4641],"source":" If your code contains more than one class that has a `Sub Main` procedure, use the `/main` compiler option to specify which class contains the `Sub Main` procedure"},{"content":"Causes the compiler to create an intermediate file that you can convert to a Windows Runtime binary (.winmd) file.","pos":[4665,4779]},{"content":"The .winmd file can be consumed by JavaScript and C++ programs, in addition to managed language programs.","pos":[4780,4885]},{"content":"The intermediate file is created with a .winmdobj extension.","pos":[4898,4958]},{"content":"Unless you specify otherwise by using the <ph id=\"ph1\">`/out`</ph> option, the output file name takes the name of the first input file.","pos":[4971,5088],"source":" Unless you specify otherwise by using the `/out` option, the output file name takes the name of the first input file."},{"content":"A <ph id=\"ph1\">`Sub Main`</ph> procedure isnâ€™t required.","pos":[5089,5127],"source":" A `Sub Main` procedure isnâ€™t required."},{"content":"The .winmdobj file is designed to be used as input for the <ph id=\"ph1\">&lt;xref:Microsoft.Build.Tasks.WinMDExp&gt;</ph> export tool to produce a Windows metadata (WinMD) file.","pos":[5140,5292],"source":" The .winmdobj file is designed to be used as input for the <xref:Microsoft.Build.Tasks.WinMDExp> export tool to produce a Windows metadata (WinMD) file."},{"content":"The WinMD file has a .winmd extension and contains both the code from the original library and the WinMD definitions that JavaScript, C++, and  the Windows Runtime use.","pos":[5293,5461]},{"pos":[5469,5657],"content":"Unless you specify <ph id=\"ph1\">`/target:module`</ph>, <ph id=\"ph2\">`/target`</ph> causes a <ph id=\"ph3\">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> assembly manifest to be added to an output file.","source":"Unless you specify `/target:module`, `/target` causes a [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)] assembly manifest to be added to an output file."},{"content":"Each instance of Vbc.exe produces, at most, one output file.","pos":[5664,5724]},{"content":"If you specify a compiler option such as <ph id=\"ph1\">`/out`</ph> or <ph id=\"ph2\">`/target`</ph> more than one time, the last one the compiler processes is put into effect.","pos":[5725,5861],"source":" If you specify a compiler option such as `/out` or `/target` more than one time, the last one the compiler processes is put into effect."},{"content":"Information about all files in a compilation is added to the manifest.","pos":[5862,5932]},{"content":"All output files except those created with <ph id=\"ph1\">`/target:module`</ph> contain assembly metadata in the manifest.","pos":[5933,6035],"source":" All output files except those created with `/target:module` contain assembly metadata in the manifest."},{"content":"Use <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](https://msdn.microsoft.com/library/f7dy01k1)</ept> to view the metadata in an output file.","pos":[6036,6155],"source":" Use [Ildasm.exe (IL Disassembler)](https://msdn.microsoft.com/library/f7dy01k1) to view the metadata in an output file."},{"pos":[6162,6198],"content":"The short form of <ph id=\"ph1\">`/target`</ph> is <ph id=\"ph2\">`/t`</ph>.","source":"The short form of `/target` is `/t`."},{"pos":[6208,6247],"content":"To set /target in the Visual Studio IDE","linkify":"To set /target in the Visual Studio IDE","nodes":[{"content":"To set /target in the Visual Studio IDE","pos":[0,39]}]},{"content":"Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","pos":[6257,6306],"source":"Have a project selected in **Solution Explorer**."},{"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.","pos":[6307,6353],"source":" On the **Project** menu, click **Properties**."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Introduction to the Project Designer<ept id=\"p1\">](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7)</ept>.","pos":[6354,6489],"source":" For more information, see [Introduction to the Project Designer](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7)."},{"pos":[6499,6529],"content":"Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","source":"Click the **Application** tab."},{"pos":[6539,6588],"content":"Modify the value in the <bpt id=\"p1\">**</bpt>Application Type<ept id=\"p1\">**</ept> box.","source":"Modify the value in the **Application Type** box."},{"pos":[6597,6604],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6608,6663],"content":"The following code compiles <ph id=\"ph1\">`in.vb`</ph>, creating <ph id=\"ph2\">`in.dll`</ph>:","source":"The following code compiles `in.vb`, creating `in.dll`:"},{"pos":[6715,6723],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Visual Basic Command-Line Compiler<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[6727,6828],"source":"[Visual Basic Command-Line Compiler](../../../visual-basic/reference/command-line-compiler/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>/main<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/main.md)</ept><ph id=\"ph1\"> </ph>","pos":[6831,6903],"source":" [/main](../../../visual-basic/reference/command-line-compiler/main.md) "},{"content":"<bpt id=\"p1\"> [</bpt>/out (Visual Basic)<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/out.md)</ept><ph id=\"ph1\"> </ph>","pos":[6906,6991],"source":" [/out (Visual Basic)](../../../visual-basic/reference/command-line-compiler/out.md) "},{"content":"<bpt id=\"p1\"> [</bpt>/reference (Visual Basic)<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[6994,7091],"source":" [/reference (Visual Basic)](../../../visual-basic/reference/command-line-compiler/reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>/addmodule<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept><ph id=\"ph1\"> </ph>","pos":[7094,7176],"source":" [/addmodule](../../../visual-basic/reference/command-line-compiler/addmodule.md) "},{"content":"<bpt id=\"p1\"> [</bpt>/moduleassemblyname<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept><ph id=\"ph1\"> </ph>","pos":[7179,7279],"source":" [/moduleassemblyname](../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Assemblies and the Global Assembly Cache<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[7282,7400],"source":" [Assemblies and the Global Assembly Cache](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Sample Compilation Command Lines<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)</ept>","pos":[7403,7529],"source":" [Sample Compilation Command Lines](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)"}]}