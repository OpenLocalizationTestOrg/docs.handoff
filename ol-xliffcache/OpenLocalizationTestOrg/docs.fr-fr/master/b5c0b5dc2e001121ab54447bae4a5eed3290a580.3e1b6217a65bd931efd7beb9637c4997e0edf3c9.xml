{"content":"---\ntitle: \"How to: Build a Single-File Assembly\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"assembly manifest, single-file assemblies\"\n  - \"library assemblies\"\n  - \"command-line compilers\"\n  - \"assemblies [.NET Framework], single-file\"\n  - \"output file name for assemblies\"\n  - \"code modules\"\n  - \"single-file assemblies\"\nms.assetid: a6063221-43a5-4d3e-814c-288a4ec69aec\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# How to: Build a Single-File Assembly\n\nA single-file assembly, which is the simplest type of assembly, contains type information and implementation, as well as the [assembly manifest](../../../docs/framework/app-domains/assembly-manifest.md). You can use command-line compilers or Visual Studio to create a single-file assembly. By default, the compiler creates an assembly file with an .exe extension.\n\n> [!NOTE]\n> Visual Studio for C# and Visual Basic can be used only to create single-file assemblies. If you want to create multifile assemblies, you must use command-line compilers or Visual C++.\n\nThe following procedures show how to create single-file assemblies using command-line compilers.\n\n## To create an assembly with an .exe extension\n\n1.  At the command prompt, type the following command:\n\n     \\<*compiler command*> \\<*module name*>\n\n     In this command, *compiler command* is the compiler command for the language used in your code module, and *module name* is the name of the code module to compile into the assembly.\n\n The following example creates an assembly named `myCode.exe` from a code module called `myCode`.\n\n```console\ncsc myCode.cs\n```\n\n```console\nvbc myCode.vb\n```\n\n### To create an assembly with an .exe extension and specify the output file name\n\n1.  At the command prompt, type the following command:\n\n     \\<*compiler command*> **/out:**\\<*file name*> \\<*module name*>\n\n     In this command, *compiler command* is the compiler command for the language used in your code module, *file name* is the output file name, and *module name* is the name of the code module to compile into the assembly.\n\n The following example creates an assembly named `myAssembly.exe` from a code module called `myCode`.\n\n```console\ncsc -out:myAssembly.exe myCode.cs\n```\n\n```console\nvbc -out:myAssembly.exe myCode.vb\n```\n\n## Creating Library Assemblies\n A library assembly is similar to a class library. It contains types that will be referenced by other assemblies, but it has no entry point to begin execution.\n\n### To create a library assembly\n\n1.  At the command prompt, type the following command:\n\n     \\<*compiler command*> **-t:library** \\<*module name*>\n\n     In this command, *compiler command* is the compiler command for the language used in your code module, and *module name* is the name of the code module to compile into the assembly. You can also use other compiler options, such as the **-out:** option.\n\n The following example creates a library assembly named `myCodeAssembly.dll` from a code module called `myCode`.\n\n```console\ncsc -out:myCodeLibrary.dll -t:library myCode.cs\n```\n\n```console\nvbc -out:myCodeLibrary.dll -t:library myCode.vb\n```\n\n## See also\n\n- [Creating Assemblies](../../../docs/framework/app-domains/create-assemblies.md)\n- [Multifile Assemblies](../../../docs/framework/app-domains/multifile-assemblies.md)\n- [How to: Build a Multifile Assembly](../../../docs/framework/app-domains/how-to-build-a-multifile-assembly.md)\n- [Programming with Assemblies](../../../docs/framework/app-domains/programming-with-assemblies.md)","nodes":[{"pos":[4,449],"embed":true,"restype":"x-metadata","content":"title: \"How to: Build a Single-File Assembly\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"assembly manifest, single-file assemblies\"\n  - \"library assemblies\"\n  - \"command-line compilers\"\n  - \"assemblies [.NET Framework], single-file\"\n  - \"output file name for assemblies\"\n  - \"code modules\"\n  - \"single-file assemblies\"\nms.assetid: a6063221-43a5-4d3e-814c-288a4ec69aec\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"How to: Build a Single-File Assembly","nodes":[{"pos":[0,36],"content":"How to: Build a Single-File Assembly","nodes":[{"content":"How to: Build a Single-File Assembly","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[456,492],"content":"How to: Build a Single-File Assembly","linkify":"How to: Build a Single-File Assembly","nodes":[{"content":"How to: Build a Single-File Assembly","pos":[0,36]}]},{"content":"A single-file assembly, which is the simplest type of assembly, contains type information and implementation, as well as the <bpt id=\"p1\">[</bpt>assembly manifest<ept id=\"p1\">](../../../docs/framework/app-domains/assembly-manifest.md)</ept>.","pos":[494,697],"source":"A single-file assembly, which is the simplest type of assembly, contains type information and implementation, as well as the [assembly manifest](../../../docs/framework/app-domains/assembly-manifest.md)."},{"content":"You can use command-line compilers or Visual Studio to create a single-file assembly.","pos":[698,783]},{"content":"By default, the compiler creates an assembly file with an .exe extension.","pos":[784,857]},{"pos":[861,1054],"content":"[!NOTE]\nVisual Studio for C# and Visual Basic can be used only to create single-file assemblies. If you want to create multifile assemblies, you must use command-line compilers or Visual C++.","leadings":["","> "],"nodes":[{"content":"Visual Studio for C# and Visual Basic can be used only to create single-file assemblies. If you want to create multifile assemblies, you must use command-line compilers or Visual C++.","pos":[8,191],"nodes":[{"content":"Visual Studio for C# and Visual Basic can be used only to create single-file assemblies.","pos":[0,88]},{"content":"If you want to create multifile assemblies, you must use command-line compilers or Visual C++.","pos":[89,183]}]}]},{"content":"The following procedures show how to create single-file assemblies using command-line compilers.","pos":[1056,1152]},{"pos":[1157,1201],"content":"To create an assembly with an .exe extension","linkify":"To create an assembly with an .exe extension","nodes":[{"content":"To create an assembly with an .exe extension","pos":[0,44]}]},{"content":"At the command prompt, type the following command:","pos":[1207,1257]},{"pos":[1264,1302],"content":"<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept><ph id=\"ph2\">&gt; </ph><ph id=\"ph3\">\\&lt;</ph><bpt id=\"p2\">*</bpt>module name<ept id=\"p2\">*</ept><ph id=\"ph4\">&gt;</ph>","source":"\\<*compiler command*> \\<*module name*>"},{"pos":[1309,1490],"content":"In this command, <bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept> is the compiler command for the language used in your code module, and <bpt id=\"p2\">*</bpt>module name<ept id=\"p2\">*</ept> is the name of the code module to compile into the assembly.","source":"In this command, *compiler command* is the compiler command for the language used in your code module, and *module name* is the name of the code module to compile into the assembly."},{"pos":[1493,1589],"content":"The following example creates an assembly named <ph id=\"ph1\">`myCode.exe`</ph> from a code module called <ph id=\"ph2\">`myCode`</ph>.","source":"The following example creates an assembly named `myCode.exe` from a code module called `myCode`."},{"pos":[1655,1732],"content":"To create an assembly with an .exe extension and specify the output file name","linkify":"To create an assembly with an .exe extension and specify the output file name","nodes":[{"content":"To create an assembly with an .exe extension and specify the output file name","pos":[0,77]}]},{"content":"At the command prompt, type the following command:","pos":[1738,1788]},{"pos":[1795,1857],"content":"<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept><ph id=\"ph2\">&gt; </ph><bpt id=\"p2\">**</bpt>/out:<ept id=\"p2\">**</ept><ph id=\"ph3\">\\&lt;</ph><bpt id=\"p3\">*</bpt>file name<ept id=\"p3\">*</ept><ph id=\"ph4\">&gt; </ph><ph id=\"ph5\">\\&lt;</ph><bpt id=\"p4\">*</bpt>module name<ept id=\"p4\">*</ept><ph id=\"ph6\">&gt;</ph>","source":"\\<*compiler command*> **/out:**\\<*file name*> \\<*module name*>"},{"pos":[1864,2082],"content":"In this command, <bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept> is the compiler command for the language used in your code module, <bpt id=\"p2\">*</bpt>file name<ept id=\"p2\">*</ept> is the output file name, and <bpt id=\"p3\">*</bpt>module name<ept id=\"p3\">*</ept> is the name of the code module to compile into the assembly.","source":"In this command, *compiler command* is the compiler command for the language used in your code module, *file name* is the output file name, and *module name* is the name of the code module to compile into the assembly."},{"pos":[2085,2185],"content":"The following example creates an assembly named <ph id=\"ph1\">`myAssembly.exe`</ph> from a code module called <ph id=\"ph2\">`myCode`</ph>.","source":"The following example creates an assembly named `myAssembly.exe` from a code module called `myCode`."},{"pos":[2290,2317],"content":"Creating Library Assemblies","linkify":"Creating Library Assemblies","nodes":[{"content":"Creating Library Assemblies","pos":[0,27]}]},{"content":"A library assembly is similar to a class library.","pos":[2319,2368]},{"content":"It contains types that will be referenced by other assemblies, but it has no entry point to begin execution.","pos":[2369,2477]},{"pos":[2483,2511],"content":"To create a library assembly","linkify":"To create a library assembly","nodes":[{"content":"To create a library assembly","pos":[0,28]}]},{"content":"At the command prompt, type the following command:","pos":[2517,2567]},{"pos":[2574,2627],"content":"<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept><ph id=\"ph2\">&gt; </ph><bpt id=\"p2\">**</bpt>-t:library<ept id=\"p2\">**</ept> <ph id=\"ph3\">\\&lt;</ph><bpt id=\"p3\">*</bpt>module name<ept id=\"p3\">*</ept><ph id=\"ph4\">&gt;</ph>","source":"\\<*compiler command*> **-t:library** \\<*module name*>"},{"content":"In this command, <bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept> is the compiler command for the language used in your code module, and <bpt id=\"p2\">*</bpt>module name<ept id=\"p2\">*</ept> is the name of the code module to compile into the assembly.","pos":[2634,2815],"source":"In this command, *compiler command* is the compiler command for the language used in your code module, and *module name* is the name of the code module to compile into the assembly."},{"content":"You can also use other compiler options, such as the <bpt id=\"p1\">**</bpt>-out:<ept id=\"p1\">**</ept> option.","pos":[2816,2886],"source":" You can also use other compiler options, such as the **-out:** option."},{"pos":[2889,3000],"content":"The following example creates a library assembly named <ph id=\"ph1\">`myCodeAssembly.dll`</ph> from a code module called <ph id=\"ph2\">`myCode`</ph>.","source":"The following example creates a library assembly named `myCodeAssembly.dll` from a code module called `myCode`."},{"pos":[3133,3141],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3145,3224],"content":"<bpt id=\"p1\">[</bpt>Creating Assemblies<ept id=\"p1\">](../../../docs/framework/app-domains/create-assemblies.md)</ept>","source":"[Creating Assemblies](../../../docs/framework/app-domains/create-assemblies.md)"},{"pos":[3227,3310],"content":"<bpt id=\"p1\">[</bpt>Multifile Assemblies<ept id=\"p1\">](../../../docs/framework/app-domains/multifile-assemblies.md)</ept>","source":"[Multifile Assemblies](../../../docs/framework/app-domains/multifile-assemblies.md)"},{"pos":[3313,3423],"content":"<bpt id=\"p1\">[</bpt>How to: Build a Multifile Assembly<ept id=\"p1\">](../../../docs/framework/app-domains/how-to-build-a-multifile-assembly.md)</ept>","source":"[How to: Build a Multifile Assembly](../../../docs/framework/app-domains/how-to-build-a-multifile-assembly.md)"},{"pos":[3426,3523],"content":"<bpt id=\"p1\">[</bpt>Programming with Assemblies<ept id=\"p1\">](../../../docs/framework/app-domains/programming-with-assemblies.md)</ept>","source":"[Programming with Assemblies](../../../docs/framework/app-domains/programming-with-assemblies.md)"}]}