{"content":"---\ntitle: \"Metadata Store Programmability | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 5b613661-f3f9-4e07-8e88-28c9ea2fd8f8\ncaps.latest.revision: 15\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Metadata Store Programmability\nThe metadata store is a [!INCLUDE[wfd1](../../../../includes/wfd1-md.md)] feature that allows for the association of arbitrary metadata, in the form of CLR attributes, to types at runtime. This allows for a loose coupling between the run-time components and their design-time counterparts, as well as the ability to change the design-time components without affecting the runtime. The sample shows how to program against the metadata store by applying attributes to a run-time type, the source for which we have no control over. The terminology typically used is that a hosting application registers the metadata for a set of types.  \n  \n Within the output, you may notice an additional, unexpected attribute, <!--zz <xref:System.Runtime.InteropServices.GUIDAttribute> --> `System.Runtime.InteropServices.GUIDAttribute`. This is added when using the Metadata API and has no impact on the running of the sample.  \n  \n This sample demonstrates:  \n  \n## Demonstrates  \n  \n-   Attribute injection using the metadata store API.  \n  \n-   Using a callback mechanism to defer metadata registration.  \n  \n#### To set up, build, and run the sample  \n  \n1.  Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the ProgrammingMetadataStore.sln solution file.  \n  \n2.  To build the solution, press CTRL+SHIFT+B.  \n  \n3.  To run the solution, press F5.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Basic\\CustomActivities\\CustomActivityDesigners\\MetadataStore`  \n  \n## See Also","nodes":[{"pos":[4,318],"embed":true,"restype":"x-metadata","content":"title: \"Metadata Store Programmability | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 5b613661-f3f9-4e07-8e88-28c9ea2fd8f8\ncaps.latest.revision: 15\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"Metadata Store Programmability | Microsoft Docs","nodes":[{"pos":[0,47],"content":"Metadata Store Programmability | Microsoft Docs","nodes":[{"content":"Metadata Store Programmability | Microsoft Docs","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[325,355],"content":"Metadata Store Programmability","linkify":"Metadata Store Programmability","nodes":[{"content":"Metadata Store Programmability","pos":[0,30]}]},{"content":"The metadata store is a <ph id=\"ph1\">[!INCLUDE[wfd1](../../../../includes/wfd1-md.md)]</ph> feature that allows for the association of arbitrary metadata, in the form of CLR attributes, to types at runtime.","pos":[356,544],"source":"The metadata store is a [!INCLUDE[wfd1](../../../../includes/wfd1-md.md)] feature that allows for the association of arbitrary metadata, in the form of CLR attributes, to types at runtime."},{"content":"This allows for a loose coupling between the run-time components and their design-time counterparts, as well as the ability to change the design-time components without affecting the runtime.","pos":[545,736]},{"content":"The sample shows how to program against the metadata store by applying attributes to a run-time type, the source for which we have no control over.","pos":[737,884]},{"content":"The terminology typically used is that a hosting application registers the metadata for a set of types.","pos":[885,988]},{"content":"Within the output, you may notice an additional, unexpected attribute,","pos":[995,1065]},{"content":"<ph id=\"ph1\">`System.Runtime.InteropServices.GUIDAttribute`</ph>.","pos":[1129,1176],"source":"`System.Runtime.InteropServices.GUIDAttribute`."},{"content":"This is added when using the Metadata API and has no impact on the running of the sample.","pos":[1177,1266]},{"content":"This sample demonstrates:","pos":[1273,1298]},{"pos":[1307,1319],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"content":"Attribute injection using the metadata store API.","pos":[1329,1378]},{"content":"Using a callback mechanism to defer metadata registration.","pos":[1388,1446]},{"pos":[1457,1493],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[1503,1616],"content":"Using <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the ProgrammingMetadataStore.sln solution file.","source":"Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the ProgrammingMetadataStore.sln solution file."},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[1626,1668]},{"content":"To run the solution, press F5.","pos":[1678,1708]},{"pos":[1716,1848],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[1902,2228],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[2229,2279]},{"pos":[2395,2403],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}