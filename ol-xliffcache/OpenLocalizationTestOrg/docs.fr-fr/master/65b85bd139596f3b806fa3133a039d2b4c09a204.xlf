<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65b85bd139596f3b806fa3133a039d2b4c09a204</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\execute-a-workflow-in-an-imperative-transactionscope.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b3c2fcb42c85a70dcbea22a1bcb646cbaad028f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f57597c82b7ad620a0bb02655e31d4293117f92</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Execute a Workflow in an Imperative TransactionScope | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Execute a Workflow in an Imperative TransactionScope</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample shows how to execute a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> under a <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> from imperative C# code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sample Details</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In imperative C# code, the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> is used to encapsulate a set of work that executes under the same transaction.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> works by creating an ambient transaction and initializing the <ph id="ph2">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> property, which can then be accessed by any work being executed on that thread.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To get equivalent behavior in workflow, the runtime has to do the extra work of initializing <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> before executing each activity because a workflow does not maintain thread affinity between activities.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With this runtime support, the resulting behavior is that when executing a workflow with <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> inside a <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph>, all activities are guaranteed to run under the context of the ambient transaction created by the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A workflow can have only a single ambient transaction for each workflow instance; nested transactions are not available.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Even if the workflow contains a <ph id="ph1">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph> activity, this does not create a new inner transaction.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Instead, this reuses the ambient transaction that was created outside the workflow.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The sample begins a new <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph>, prints the transaction ID and begins a workflow using <ph id="ph2">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The workflow prints the transaction ID again, showing that it is the same transaction, then runs a <ph id="ph1">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph>, then completes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph> call on <ph id="ph2">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> is synchronous so the original thread blocks until the workflow completes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Once the workflow is complete, the transaction is completed and resources disposed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the ImperativeTransactionSample.sln solution file.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To build the solution, press CTRL+SHIFT+B.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To run the solution, press F5.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>