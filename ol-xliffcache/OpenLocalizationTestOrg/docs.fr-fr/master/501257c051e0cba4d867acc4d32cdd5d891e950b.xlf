<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-read-from-binary-files.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">501257c051e0cba4d867acc4d32cdd5d891e950b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\programming\drives-directories-files\how-to-read-from-binary-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e84eb75fd78538a2ff36b2c8dacc1a1ce719f402</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">603f16c02745d3de50ab85997a2e4ca23b37cae0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Read From Binary Files in Visual Basic | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Read From Binary Files in Visual Basic</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.FileSystem`</ph> object provides the <ph id="ph2">`ReadAllBytes`</ph> method for reading from binary files.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To read from a binary file</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`ReadAllBytes`</ph> method, which returns the contents of a file as a byte array.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This example reads from the file <ph id="ph1">`C:/Documents and Settings/selfportrait.jpg`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For large binary files, you can use the <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object to read from the file only a specified amount at a time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can then limit how much of the file is loaded into memory for each read operation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following code example copies a file and allows the caller to specify how much of the file is read into memory per read operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following conditions may cause an exception to be thrown:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The path is not valid for one of the following reasons: it is a zero-length string, it contains only white space, it contains invalid characters, or it is a device path (<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The path is not valid because it is <ph id="ph1">`Nothing`</ph> (<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The file does not exist (<ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The file is in use by another process, or an I/O error occurs (<ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The path exceeds the system-defined maximum length (<ph id="ph1">&lt;xref:System.IO.PathTooLongException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A file or directory name in the path contains a colon (:) or is in an invalid format (<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>There is not enough memory to write the string to buffer (<ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The user lacks necessary permissions to view the path (<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Do not make decisions about the contents of the file based on the name of the file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, the file Form1.vb may not be a Visual Basic source file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Verify all inputs before using the data in your application.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The contents of the file may not be what is expected, and methods to read from the file may fail.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reading from Files<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Storing Data to and Reading from the Clipboard<ept id="p1">](../../../../visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>