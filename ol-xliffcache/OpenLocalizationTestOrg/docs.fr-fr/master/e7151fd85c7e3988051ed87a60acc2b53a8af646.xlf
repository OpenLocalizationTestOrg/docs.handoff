<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="query-expression-syntax-examples-aggregate-operators.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7151fd85c7e3988051ed87a60acc2b53a8af646</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\query-expression-syntax-examples-aggregate-operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44035bd05a0420f4cc34bde297f2ed3fa295ff3c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b65058fc352c95aabfa6b84ad5a7c56cdaf0a35a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Query Expression Syntax Examples: Aggregate Operators (LINQ to DataSet)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Expression Syntax Examples: Aggregate Operators (LINQ to DataSet)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The examples in this topic demonstrate how to use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Count%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.Max%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Min%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Linq.Enumerable.Sum%2A&gt;</ph> methods to query a <ph id="ph6">&lt;xref:System.Data.DataSet&gt;</ph> and aggregate data using query expression syntax.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FillDataSet`</ph> method used in these examples is specified in <bpt id="p1">[</bpt>Loading Data Into a DataSet<ept id="p1">](../../../../docs/framework/data/adonet/loading-data-into-a-dataset.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The examples in this topic use the Contact, Address, Product, SalesOrderHeader, and SalesOrderDetail tables in the AdventureWorks sample database.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The examples in this topic use the following <ph id="ph1">`using`</ph><ph id="ph2">/</ph><ph id="ph3">`Imports`</ph> statements:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a LINQ to DataSet Project In Visual Studio<ept id="p1">](../../../../docs/framework/data/adonet/how-to-create-a-linq-to-dataset-project-in-vs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Average</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A&gt;</ph> method to find the average list price of the products of each style.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example uses <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A&gt;</ph> to get the average total due for each contact ID.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example uses <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A&gt;</ph> to get the orders with the average <ph id="ph2">`TotalDue`</ph> for each contact.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Count</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This example uses <ph id="ph1">&lt;xref:System.Linq.Enumerable.Count%2A&gt;</ph> to return a list of contact IDs and how many orders each has.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example groups products by color and uses <ph id="ph1">&lt;xref:System.Linq.Enumerable.Count%2A&gt;</ph> to return the number of products in each color group.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Max</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Max%2A&gt;</ph> method to get the largest total due for each contact ID.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Max%2A&gt;</ph> method to get the orders with the largest <ph id="ph2">`TotalDue`</ph> for each contact ID.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Min</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Min%2A&gt;</ph> method to get the smallest total due for each contact ID.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Min%2A&gt;</ph> method to get the orders with the smallest total due for each contact.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Sum</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Sum%2A&gt;</ph> method to get the total due for each contact ID.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loading Data Into a DataSet<ept id="p1">](../../../../docs/framework/data/adonet/loading-data-into-a-dataset.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to DataSet Examples<ept id="p1">](../../../../docs/framework/data/adonet/linq-to-dataset-examples.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Query Operators Overview (C#)<ept id="p1">](../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Query Operators Overview (Visual Basic)<ept id="p1">](../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>