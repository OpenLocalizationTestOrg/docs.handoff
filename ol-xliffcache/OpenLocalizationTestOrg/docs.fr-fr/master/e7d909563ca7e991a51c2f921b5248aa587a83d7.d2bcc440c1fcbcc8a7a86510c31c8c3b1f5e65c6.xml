{"content":"---\ntitle: \"How to: Read Application Settings in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"reading application settings\"\n  - \"My.Settings object [Visual Basic], reading application settings\"\n  - \"application settings [Visual Basic], reading\"\nms.assetid: eb3428ef-115e-49a8-a878-e0613183fee0\n---\n# How to: Read Application Settings in Visual Basic\nYou can read a user setting by accessing the setting's property on the `My.Settings` object.  \n  \n The `My.Settings` object exposes each setting as a property. The property name is the same as the setting name, and the property type is the same as the setting type. The setting's **Scope** indicates if the property is read-only; the property for an **Application** scope setting is read-only, while the property for a **User** scope setting is read-write. For more information, see [My.Settings Object](../../../../visual-basic/language-reference/objects/my-settings-object.md).  \n  \n## Example  \n This example displays the value of the `Nickname` setting.  \n  \n [!code-vb[VbVbalrMyResources#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#14)]  \n  \n For this example to work, your application must have a `Nickname` setting, of type `String`. For more information, see [Managing Application Settings (.NET)](/visualstudio/ide/managing-application-settings-dotnet).  \n  \n## See also\n\n- [My.Settings Object](../../../../visual-basic/language-reference/objects/my-settings-object.md)\n- [How to: Change User Settings in Visual Basic](../../../../visual-basic/developing-apps/programming/app-settings/how-to-change-user-settings.md)\n- [How to: Persist User Settings in Visual Basic](../../../../visual-basic/developing-apps/programming/app-settings/how-to-persist-user-settings.md)\n- [How to: Create Property Grids for User Settings in Visual Basic](../../../../visual-basic/developing-apps/programming/app-settings/how-to-create-property-grids-for-user-settings.md)\n- [Managing Application Settings (.NET)](/visualstudio/ide/managing-application-settings-dotnet)\n","nodes":[{"pos":[4,309],"embed":true,"restype":"x-metadata","content":"title: \"How to: Read Application Settings in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"reading application settings\"\n  - \"My.Settings object [Visual Basic], reading application settings\"\n  - \"application settings [Visual Basic], reading\"\nms.assetid: eb3428ef-115e-49a8-a878-e0613183fee0","nodes":[{"content":"How to: Read Application Settings in Visual Basic","nodes":[{"pos":[0,49],"content":"How to: Read Application Settings in Visual Basic","nodes":[{"content":"How to: Read Application Settings in Visual Basic","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[316,365],"content":"How to: Read Application Settings in Visual Basic","linkify":"How to: Read Application Settings in Visual Basic","nodes":[{"content":"How to: Read Application Settings in Visual Basic","pos":[0,49]}]},{"pos":[366,458],"content":"You can read a user setting by accessing the setting's property on the <ph id=\"ph1\">`My.Settings`</ph> object.","source":"You can read a user setting by accessing the setting's property on the `My.Settings` object."},{"content":"The <ph id=\"ph1\">`My.Settings`</ph> object exposes each setting as a property.","pos":[465,525],"source":"The `My.Settings` object exposes each setting as a property."},{"content":"The property name is the same as the setting name, and the property type is the same as the setting type.","pos":[526,631]},{"content":"The setting's <bpt id=\"p1\">**</bpt>Scope<ept id=\"p1\">**</ept> indicates if the property is read-only; the property for an <bpt id=\"p2\">**</bpt>Application<ept id=\"p2\">**</ept> scope setting is read-only, while the property for a <bpt id=\"p3\">**</bpt>User<ept id=\"p3\">**</ept> scope setting is read-write.","pos":[632,822],"source":" The setting's **Scope** indicates if the property is read-only; the property for an **Application** scope setting is read-only, while the property for a **User** scope setting is read-write."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>My.Settings Object<ept id=\"p1\">](../../../../visual-basic/language-reference/objects/my-settings-object.md)</ept>.","pos":[823,945],"source":" For more information, see [My.Settings Object](../../../../visual-basic/language-reference/objects/my-settings-object.md)."},{"pos":[954,961],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[965,1023],"content":"This example displays the value of the <ph id=\"ph1\">`Nickname`</ph> setting.","source":"This example displays the value of the `Nickname` setting."},{"content":"For this example to work, your application must have a <ph id=\"ph1\">`Nickname`</ph> setting, of type <ph id=\"ph2\">`String`</ph>.","pos":[1157,1249],"source":"For this example to work, your application must have a `Nickname` setting, of type `String`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Managing Application Settings (.NET)<ept id=\"p1\">](/visualstudio/ide/managing-application-settings-dotnet)</ept>.","pos":[1250,1371],"source":" For more information, see [Managing Application Settings (.NET)](/visualstudio/ide/managing-application-settings-dotnet)."},{"pos":[1380,1388],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1392,1487],"content":"<bpt id=\"p1\">[</bpt>My.Settings Object<ept id=\"p1\">](../../../../visual-basic/language-reference/objects/my-settings-object.md)</ept>","source":"[My.Settings Object](../../../../visual-basic/language-reference/objects/my-settings-object.md)"},{"pos":[1490,1634],"content":"<bpt id=\"p1\">[</bpt>How to: Change User Settings in Visual Basic<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/app-settings/how-to-change-user-settings.md)</ept>","source":"[How to: Change User Settings in Visual Basic](../../../../visual-basic/developing-apps/programming/app-settings/how-to-change-user-settings.md)"},{"pos":[1637,1783],"content":"<bpt id=\"p1\">[</bpt>How to: Persist User Settings in Visual Basic<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/app-settings/how-to-persist-user-settings.md)</ept>","source":"[How to: Persist User Settings in Visual Basic](../../../../visual-basic/developing-apps/programming/app-settings/how-to-persist-user-settings.md)"},{"pos":[1786,1968],"content":"<bpt id=\"p1\">[</bpt>How to: Create Property Grids for User Settings in Visual Basic<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/app-settings/how-to-create-property-grids-for-user-settings.md)</ept>","source":"[How to: Create Property Grids for User Settings in Visual Basic](../../../../visual-basic/developing-apps/programming/app-settings/how-to-create-property-grids-for-user-settings.md)"},{"pos":[1971,2065],"content":"<bpt id=\"p1\">[</bpt>Managing Application Settings (.NET)<ept id=\"p1\">](/visualstudio/ide/managing-application-settings-dotnet)</ept>","source":"[Managing Application Settings (.NET)](/visualstudio/ide/managing-application-settings-dotnet)"}]}