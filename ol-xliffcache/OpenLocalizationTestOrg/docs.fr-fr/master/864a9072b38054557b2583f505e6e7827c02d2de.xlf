<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="handling-dataadapter-events.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">864a9072b38054557b2583f505e6e7827c02d2de</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\handling-dataadapter-events.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">523b87881ac197c2d1fbdefa855616628a5e37c7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">834a4aeb866e4f06fcd13fddc194a0e7c864667d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Handling DataAdapter Events</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Handling DataAdapter Events</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The ADO.NET <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> exposes three events that you can use to respond to changes made to data at the data source.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following table shows the <ph id="ph1">`DataAdapter`</ph> events.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Event</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An UPDATE, INSERT, or DELETE operation on a row (by a call to one of the <ph id="ph1">`Update`</ph> methods) is about to begin.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An UPDATE, INSERT, or DELETE operation on a row (by a call to one of the <ph id="ph1">`Update`</ph> methods) is complete.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An error has occurred during a <ph id="ph1">`Fill`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>RowUpdating and RowUpdated</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RowUpdating`</ph> is raised before any update to a row from the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> has been processed at the data source.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RowUpdated`</ph> is raised after any update to a row from the <ph id="ph2">`DataSet`</ph> has been processed at the data source.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As a result, you can use <ph id="ph1">`RowUpdating`</ph> to modify update behavior before it happens, to provide additional handling when an update will occur, to retain a reference to an updated row, to cancel the current update and schedule it for a batch process to be processed later, and so on.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RowUpdated`</ph> is useful for responding to errors and exceptions that occur during the update.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can add error information to the <ph id="ph1">`DataSet`</ph>, as well as retry logic, and so on.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.RowUpdatingEventArgs&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> arguments passed to the <ph id="ph3">`RowUpdating`</ph> and <ph id="ph4">`RowUpdated`</ph> events include the following: a <ph id="ph5">`Command`</ph> property that references the <ph id="ph6">`Command`</ph> object being used to perform the update; a <ph id="ph7">`Row`</ph> property that references the <ph id="ph8">`DataRow`</ph> object containing the updated information; a <ph id="ph9">`StatementType`</ph> property for what type of update is being performed; the <ph id="ph10">`TableMapping`</ph>, if applicable; and the <ph id="ph11">`Status`</ph> of the operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`Status`</ph> property to determine if an error has occurred during the operation and, if desired, to control the actions against the current and resulting rows.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the event occurs, the <ph id="ph1">`Status`</ph> property equals either <ph id="ph2">`Continue`</ph> or <ph id="ph3">`ErrorsOccurred`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following table shows the values to which you can set the <ph id="ph1">`Status`</ph> property in order to control later actions during the update.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Status</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Continue the update operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Abort the update operation and throw an exception.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Ignore the current row and continue the update operation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Abort the update operation but do not throw an exception.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">`Status`</ph> property to <ph id="ph2">`ErrorsOccurred`</ph> causes an exception to be thrown.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can control which exception is thrown by setting the <ph id="ph1">`Errors`</ph> property to the desired exception.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using one of the other values for <ph id="ph1">`Status`</ph> prevents an exception from being thrown.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`ContinueUpdateOnError`</ph> property to handle errors for updated rows.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`DataAdapter.ContinueUpdateOnError`</ph> is <ph id="ph2">`true`</ph>, when an update to a row results in an exception being thrown, the text of the exception is placed into the <ph id="ph3">`RowError`</ph> information of the particular row, and processing continues without throwing an exception.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This enables you to respond to errors when the <ph id="ph1">`Update`</ph> is complete, in contrast to the <ph id="ph2">`RowUpdated`</ph> event, which enables you to respond to errors when the error is encountered.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following code sample shows how to both add and remove event handlers.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RowUpdating`</ph> event handler writes a log of all deleted records with a time stamp.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RowUpdated`</ph> event handler adds error information to the <ph id="ph2">`RowError`</ph> property of the row in the <ph id="ph3">`DataSet`</ph>, suppresses the exception, and continues processing (mirroring the behavior of <ph id="ph4">`ContinueUpdateOnError`</ph><ph id="ph5"> = </ph><ph id="ph6">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>FillError</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataAdapter`</ph> issues the <ph id="ph2">`FillError`</ph> event when an error occurs during a <ph id="ph3">`Fill`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This type of error commonly occurs when the data in the row being added could not be converted to a .NET Framework type without some loss of precision.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If an error occurs during a <ph id="ph1">`Fill`</ph> operation, the current row is not added to the <ph id="ph2">`DataTable`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FillError`</ph> event enables you to resolve the error and add the row, or to ignore the excluded row and continue the <ph id="ph2">`Fill`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FillErrorEventArgs`</ph> passed to the <ph id="ph2">`FillError`</ph> event can contain several properties that enable you to respond to and resolve errors.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following table shows the properties of the <ph id="ph1">`FillErrorEventArgs`</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Exception`</ph> that occurred.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataTable`</ph> object being filled when the error occurred.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the values of the row being added when the error occurred.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ordinal references of the <ph id="ph1">`Values`</ph> array correspond to the ordinal references of the columns of the row being added.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Values[0]`</ph> is the value that was being added as the first column of the row.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Allows you to choose whether or not to throw an exception.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">`Continue`</ph> property to <ph id="ph2">`false`</ph> will halt the current <ph id="ph3">`Fill`</ph> operation, and an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Setting <ph id="ph1">`Continue`</ph> to <ph id="ph2">`true`</ph> continues the <ph id="ph3">`Fill`</ph> operation despite the error.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following code example adds an event handler for the <ph id="ph1">`FillError`</ph> event of the <ph id="ph2">`DataAdapter`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`FillError`</ph> event code, the example determines if there is the potential for precision loss, providing the opportunity to respond to the exception.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataAdapters and DataReaders<ept id="p1">](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Handling DataSet Events<ept id="p1">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/handling-dataset-events.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Events<ept id="p1">](../../../../docs/standard/events/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>