{"content":"---\ntitle: \"IHostMemoryManager::RegisterMemoryNotificationCallback Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostMemoryManager.RegisterMemoryNotificationCallback\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::RegisterMemoryNotificationCallback\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::RegisterMemoryNotificationCallback method [.NET Framework hosting]\"\n  - \"RegisterMemoryNotificationCallback method [.NET Framework hosting]\"\nms.assetid: 65d301f6-4dbb-4b5f-8eff-82540e2b6465\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# IHostMemoryManager::RegisterMemoryNotificationCallback Method\nRegisters a pointer to a callback function that the host invokes to notify the common language runtime (CLR) of the current memory load on the computer.  \n  \n## Syntax  \n  \n```  \nHRESULT RegisterMemoryNotificationCallback (  \n    [in] ICLRMemoryNotificationCallback* pCallback  \n);  \n```  \n  \n## Parameters  \n `pCallback`  \n [in] An interface pointer to an [ICLRMemoryNotificationCallback](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-interface.md) instance that is implemented by the CLR.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`RegisterMemoryNotificationCallback` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n Because the `ICLRMemoryNotificationCallback` interface defines only one method ([ICLRMemoryNotificationCallback::OnMemoryNotification](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-onmemorynotification-method.md)), and because `pCallback` is a pointer to an `ICLRMemoryNotificationCallback` instance provided by the CLR, the registration is effectively for the callback function itself. The host invokes `OnMemoryNotification` to report memory pressure conditions, rather than using the standard Win32 `CreateMemoryResourceNotification` function. For more information, see the Windows Platform documentation.  \n  \n> [!NOTE]\n>  Calls to `OnMemoryNotification` never block. They always return immediately.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [ICLRMemoryNotificationCallback Interface](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-interface.md)\n- [IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)\n","nodes":[{"pos":[4,599],"embed":true,"restype":"x-metadata","content":"title: \"IHostMemoryManager::RegisterMemoryNotificationCallback Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostMemoryManager.RegisterMemoryNotificationCallback\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::RegisterMemoryNotificationCallback\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::RegisterMemoryNotificationCallback method [.NET Framework hosting]\"\n  - \"RegisterMemoryNotificationCallback method [.NET Framework hosting]\"\nms.assetid: 65d301f6-4dbb-4b5f-8eff-82540e2b6465\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"IHostMemoryManager::RegisterMemoryNotificationCallback Method","nodes":[{"pos":[0,61],"content":"IHostMemoryManager::RegisterMemoryNotificationCallback Method","nodes":[{"content":"IHostMemoryManager::RegisterMemoryNotificationCallback Method","pos":[0,61]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[606,667],"content":"IHostMemoryManager::RegisterMemoryNotificationCallback Method","linkify":"IHostMemoryManager::RegisterMemoryNotificationCallback Method","nodes":[{"content":"IHostMemoryManager::RegisterMemoryNotificationCallback Method","pos":[0,61]}]},{"content":"Registers a pointer to a callback function that the host invokes to notify the common language runtime (CLR) of the current memory load on the computer.","pos":[668,820]},{"pos":[829,835],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[964,974],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] An interface pointer to an <bpt id=\"p1\">[</bpt>ICLRMemoryNotificationCallback<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-interface.md)</ept> instance that is implemented by the CLR.","pos":[993,1192],"source":"[in] An interface pointer to an [ICLRMemoryNotificationCallback](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-interface.md) instance that is implemented by the CLR."},{"pos":[1201,1213],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1220,1227]},{"content":"Description","pos":[1228,1239]},{"content":"S_OK","pos":[1280,1284]},{"pos":[1285,1344],"content":"<ph id=\"ph1\">`RegisterMemoryNotificationCallback`</ph> returned successfully.","source":"`RegisterMemoryNotificationCallback` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1349,1371]},{"content":"The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1372,1510]},{"content":"HOST_E_TIMEOUT","pos":[1515,1529]},{"content":"The call timed out.","pos":[1530,1549]},{"content":"HOST_E_NOT_OWNER","pos":[1554,1570]},{"content":"The caller does not own the lock.","pos":[1571,1604]},{"content":"HOST_E_ABANDONED","pos":[1609,1625]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1626,1698]},{"content":"E_FAIL","pos":[1703,1709]},{"content":"An unknown catastrophic failure occurred.","pos":[1710,1751]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1752,1829]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1830,1896]},{"pos":[1906,1913],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because the <ph id=\"ph1\">`ICLRMemoryNotificationCallback`</ph> interface defines only one method (<bpt id=\"p1\">[</bpt>ICLRMemoryNotificationCallback::OnMemoryNotification<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-onmemorynotification-method.md)</ept>), and because <ph id=\"ph2\">`pCallback`</ph> is a pointer to an <ph id=\"ph3\">`ICLRMemoryNotificationCallback`</ph> instance provided by the CLR, the registration is effectively for the callback function itself.","pos":[1917,2337],"source":"Because the `ICLRMemoryNotificationCallback` interface defines only one method ([ICLRMemoryNotificationCallback::OnMemoryNotification](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-onmemorynotification-method.md)), and because `pCallback` is a pointer to an `ICLRMemoryNotificationCallback` instance provided by the CLR, the registration is effectively for the callback function itself."},{"content":"The host invokes <ph id=\"ph1\">`OnMemoryNotification`</ph> to report memory pressure conditions, rather than using the standard Win32 <ph id=\"ph2\">`CreateMemoryResourceNotification`</ph> function.","pos":[2338,2497],"source":" The host invokes `OnMemoryNotification` to report memory pressure conditions, rather than using the standard Win32 `CreateMemoryResourceNotification` function."},{"content":"For more information, see the Windows Platform documentation.","pos":[2498,2559]},{"pos":[2567,2654],"content":"[!NOTE]\n Calls to `OnMemoryNotification` never block. They always return immediately.","leadings":["","> "],"nodes":[{"content":"Calls to `OnMemoryNotification` never block. They always return immediately.","pos":[9,85],"nodes":[{"content":"Calls to <ph id=\"ph1\">`OnMemoryNotification`</ph> never block.","pos":[0,44],"source":"Calls to `OnMemoryNotification` never block."},{"content":"They always return immediately.","pos":[45,76]}]}]},{"pos":[2663,2675],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2679,2783],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2790,2811],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2818,2868],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2875,2983],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2992,3000],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3004,3140],"content":"<bpt id=\"p1\">[</bpt>ICLRMemoryNotificationCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-interface.md)</ept>","source":"[ICLRMemoryNotificationCallback Interface](../../../../docs/framework/unmanaged-api/hosting/iclrmemorynotificationcallback-interface.md)"},{"pos":[3143,3255],"content":"<bpt id=\"p1\">[</bpt>IHostMemoryManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)</ept>","source":"[IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)"}]}