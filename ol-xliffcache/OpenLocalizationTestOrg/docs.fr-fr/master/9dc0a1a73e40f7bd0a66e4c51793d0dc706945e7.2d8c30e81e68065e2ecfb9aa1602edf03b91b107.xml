{"content":"---\ntitle: \"ICLRStrongName::StrongNameSignatureVerification Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRStrongName.StrongNameSignatureVerification\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRStrongName::StrongNameSignatureVerification\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICLRStrongName::StrongNameSignatureVerification method [.NET Framework hosting]\"\n  - \"StrongNameSignatureVerification method, ICLRStrongName interface [.NET Framework hosting]\"\nms.assetid: 734dc4d1-0a76-4736-b5ac-cb4253b3dd49\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICLRStrongName::StrongNameSignatureVerification Method\nGets a value that indicates whether the assembly manifest at the supplied path contains a strong name signature, which is verified according to the specified flags.  \n  \n## Syntax  \n  \n```  \nHRESULT StrongNameSignatureVerification (  \n    [in]  LPCWSTR   wszFilePath,  \n    [in]  DWORD     dwInFlags,  \n    [out] DWORD     *pdwOutFlags  \n);  \n```  \n  \n#### Parameters  \n `wszFilePath`  \n [in] The path to the portable executable (.dll or .exe) file for the assembly to verify.  \n  \n `dwInFlags`  \n [in] Flags to modify the verification behavior. The following values are supported:  \n  \n-   `SN_INFLAG_FORCE_VER` (0x00000001) - Forces verification even if it is necessary to override registry settings.  \n  \n-   `SN_INFLAG_INSTALL` (0x00000002) - Specifies that this is the first time the manifest is verified.  \n  \n-   `SN_INFLAG_ADMIN_ACCESS` (0x00000004) - Specifies that the cache will allow access only to users who have administrative privileges.  \n  \n-   `SN_INFLAG_USER_ACCESS` (0x00000008) - Specifies that the assembly will be accessible only to the current user.  \n  \n-   `SN_INFLAG_ALL_ACCESS` (0x00000010) - Specifies that the cache will provide no guarantees of access restriction.  \n  \n-   `SN_INFLAG_RUNTIME` (0x80000000) - Reserved for internal debugging.  \n  \n `pdwOutFlags`  \n [out] Flags indicating whether the strong name signature was verified. The following value is supported:  \n  \n-   `SN_OUTFLAG_WAS_VERIFIED` (0x00000001) - This value is set to `false` to specify that the verification succeeded due to registry settings.  \n  \n## Return Value  \n `S_OK` if the method completed successfully; otherwise, an HRESULT value that indicates failure (see [Common HRESULT Values](http://go.microsoft.com/fwlink/?LinkId=213878) for a list).  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MetaHost.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See Also  \n [StrongNameSignatureVerificationEx Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamesignatureverificationex-method.md)   \n [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)","nodes":[{"pos":[12,83],"content":"ICLRStrongName::StrongNameSignatureVerification Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICLRStrongName::StrongNameSignatureVerification Method | Microsoft Docs","pos":[0,71]}]},{"pos":[826,880],"content":"ICLRStrongName::StrongNameSignatureVerification Method","linkify":"ICLRStrongName::StrongNameSignatureVerification Method","nodes":[{"content":"ICLRStrongName::StrongNameSignatureVerification Method","pos":[0,54]}]},{"content":"Gets a value that indicates whether the assembly manifest at the supplied path contains a strong name signature, which is verified according to the specified flags.","pos":[881,1045]},{"pos":[1054,1060],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1238,1248],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The path to the portable executable (.dll or .exe) file for the assembly to verify.","pos":[1269,1357]},{"content":"[in] Flags to modify the verification behavior.","pos":[1379,1426]},{"content":"The following values are supported:","pos":[1427,1462]},{"pos":[1472,1583],"content":"<ph id=\"ph1\">`SN_INFLAG_FORCE_VER`</ph> (0x00000001) - Forces verification even if it is necessary to override registry settings.","source":"`SN_INFLAG_FORCE_VER` (0x00000001) - Forces verification even if it is necessary to override registry settings."},{"pos":[1593,1691],"content":"<ph id=\"ph1\">`SN_INFLAG_INSTALL`</ph> (0x00000002) - Specifies that this is the first time the manifest is verified.","source":"`SN_INFLAG_INSTALL` (0x00000002) - Specifies that this is the first time the manifest is verified."},{"pos":[1701,1833],"content":"<ph id=\"ph1\">`SN_INFLAG_ADMIN_ACCESS`</ph> (0x00000004) - Specifies that the cache will allow access only to users who have administrative privileges.","source":"`SN_INFLAG_ADMIN_ACCESS` (0x00000004) - Specifies that the cache will allow access only to users who have administrative privileges."},{"pos":[1843,1954],"content":"<ph id=\"ph1\">`SN_INFLAG_USER_ACCESS`</ph> (0x00000008) - Specifies that the assembly will be accessible only to the current user.","source":"`SN_INFLAG_USER_ACCESS` (0x00000008) - Specifies that the assembly will be accessible only to the current user."},{"pos":[1964,2076],"content":"<ph id=\"ph1\">`SN_INFLAG_ALL_ACCESS`</ph> (0x00000010) - Specifies that the cache will provide no guarantees of access restriction.","source":"`SN_INFLAG_ALL_ACCESS` (0x00000010) - Specifies that the cache will provide no guarantees of access restriction."},{"pos":[2086,2153],"content":"<ph id=\"ph1\">`SN_INFLAG_RUNTIME`</ph> (0x80000000) - Reserved for internal debugging.","source":"`SN_INFLAG_RUNTIME` (0x80000000) - Reserved for internal debugging."},{"pos":[2160,2281],"content":"`pdwOutFlags`  \n[out] Flags indicating whether the strong name signature was verified. The following value is supported:","leadings":[""," "],"nodes":[{"content":"[out] Flags indicating whether the strong name signature was verified. The following value is supported:","pos":[16,120],"nodes":[{"content":"[out] Flags indicating whether the strong name signature was verified.","pos":[0,70]},{"content":"The following value is supported:","pos":[71,104]}]}]},{"pos":[2291,2429],"content":"<ph id=\"ph1\">`SN_OUTFLAG_WAS_VERIFIED`</ph> (0x00000001) - This value is set to <ph id=\"ph2\">`false`</ph> to specify that the verification succeeded due to registry settings.","source":"`SN_OUTFLAG_WAS_VERIFIED` (0x00000001) - This value is set to `false` to specify that the verification succeeded due to registry settings."},{"pos":[2438,2450],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2454,2638],"content":"<ph id=\"ph1\">`S_OK`</ph> if the method completed successfully; otherwise, an HRESULT value that indicates failure (see <bpt id=\"p1\">[</bpt>Common HRESULT Values<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=213878)</ept> for a list).","source":"`S_OK` if the method completed successfully; otherwise, an HRESULT value that indicates failure (see [Common HRESULT Values](http://go.microsoft.com/fwlink/?LinkId=213878) for a list)."},{"pos":[2647,2659],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2663,2767],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2774,2796],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MetaHost.h","source":"**Header:** MetaHost.h"},{"pos":[2803,2853],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2860,2968],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[2977,2985],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>StrongNameSignatureVerificationEx Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamesignatureverificationex-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[2989,3141],"source":"[StrongNameSignatureVerificationEx Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamesignatureverificationex-method.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ICLRStrongName Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)</ept>","pos":[3144,3249],"source":" [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)"}]}