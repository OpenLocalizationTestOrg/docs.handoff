{"content":"---\ntitle: \"ICorProfilerInfo3::GetFunctionEnter3Info Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerInfo3.GetFunctionEnter3Info Method\"\napi_location: \n  - \"Mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo3::GetFunctionEnter3Info\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetFunctionEnter3Info method [.NET Framework profiling]\"\n  - \"ICorProfilerInfo3::GetFunctionEnter3Info method [.NET Framework profiling]\"\nms.assetid: 542c7c65-dd56-4651-b76f-5db2465e4a15\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 15\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerInfo3::GetFunctionEnter3Info Method\nProvides the stack frame and argument information of the function that is being reported to the profiler by the [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md) function. This method can be called only during the `FunctionEnter3WithInfo` callback.  \n  \n## Syntax  \n  \n```  \nHRESULT GetFunctionEnter3Info(  \n            [in]  FunctionID functionId,   \n            [in]  COR_PRF_ELT_INFO eltInfo,  \n            [out] COR_PRF_FRAME_INFO *pFrameInfo,  \n            [in, out] ULONG *pcbArgumentInfo,  \n            [out, size_is(*pcbArgumentInfo)]  \n                  COR_PRF_FUNCTION_ARGUMENT_INFO *pArgumentInfo);  \n```  \n  \n#### Parameters  \n `functionId`  \n [in] The `FunctionID` of the function that is being entered.  \n  \n `eltInfo`  \n [in] An opaque handle that represents information about a given stack frame. The profiler should provide the same `eltInfo` that it was given by the [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md) function.  \n  \n `pFrameInfo`  \n [out] An opaque handle that represents generics information about a given stack frame. This handle is valid only during the `FunctionEnter3WithInfo` callback in which the profiler called the `GetFunctionEnter3Info` method.  \n  \n `pcbArgumentInfo`  \n [in, out] A pointer to the total size, in bytes, of the [COR_PRF_FUNCTION_ARGUMENT_INFO](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md) structure (plus any additional [COR_PRF_FUNCTION_ARGUMENT_RANGE](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-range-structure.md) structures for the argument ranges pointed to by `pArgumentInfo`). If the specified size is not enough, ERROR_INSUFFICIENT_BUFFER is returned and the expected size is stored in `pcbArgumentInfo`. To call `GetFunctionEnter3Info` just to retrieve the expected value for `*pcbArgumentInfo`, set `*pcbArgumentInfo`=0 and `pArgumentInfo`=NULL.  \n  \n `pArgumentInfo`  \n [out] A pointer to a [COR_PRF_FUNCTION_ARGUMENT_INFO](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md) structure that describes the locations of the function's arguments in memory, in left-to-right order.  \n  \n## Remarks  \n The profiler must allocate sufficient space for the `COR_PRF_FUNCTION_ARGUMENT_INFO` structure of the function that is being inspected, and must indicate the size in the `pcbArgumentInfo` parameter.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See Also  \n [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md)   \n [FunctionLeave3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md)   \n [FunctionTailcall3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3withinfo-function.md)   \n [ICorProfilerInfo3 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-interface.md)   \n [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)   \n [Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)","nodes":[{"pos":[12,76],"content":"ICorProfilerInfo3::GetFunctionEnter3Info Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorProfilerInfo3::GetFunctionEnter3Info Method | Microsoft Docs","pos":[0,64]}]},{"pos":[772,819],"content":"ICorProfilerInfo3::GetFunctionEnter3Info Method","linkify":"ICorProfilerInfo3::GetFunctionEnter3Info Method","nodes":[{"content":"ICorProfilerInfo3::GetFunctionEnter3Info Method","pos":[0,47]}]},{"content":"Provides the stack frame and argument information of the function that is being reported to the profiler by the <bpt id=\"p1\">[</bpt>FunctionEnter3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md)</ept> function.","pos":[820,1053],"source":"Provides the stack frame and argument information of the function that is being reported to the profiler by the [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md) function."},{"content":"This method can be called only during the <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> callback.","pos":[1054,1130],"source":" This method can be called only during the `FunctionEnter3WithInfo` callback."},{"pos":[1139,1145],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1509,1519],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The <ph id=\"ph1\">`FunctionID`</ph> of the function that is being entered.","pos":[1539,1599],"source":" [in] The `FunctionID` of the function that is being entered."},{"content":"[in] An opaque handle that represents information about a given stack frame.","pos":[1619,1695]},{"content":"The profiler should provide the same <ph id=\"ph1\">`eltInfo`</ph> that it was given by the <bpt id=\"p1\">[</bpt>FunctionEnter3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md)</ept> function.","pos":[1696,1889],"source":" The profiler should provide the same `eltInfo` that it was given by the [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md) function."},{"content":"[out] An opaque handle that represents generics information about a given stack frame.","pos":[1912,1998]},{"content":"This handle is valid only during the <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> callback in which the profiler called the <ph id=\"ph2\">`GetFunctionEnter3Info`</ph> method.","pos":[1999,2134],"source":" This handle is valid only during the `FunctionEnter3WithInfo` callback in which the profiler called the `GetFunctionEnter3Info` method."},{"content":"[in, out] A pointer to the total size, in bytes, of the <bpt id=\"p1\">[</bpt>COR_PRF_FUNCTION_ARGUMENT_INFO<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md)</ept> structure (plus any additional <bpt id=\"p2\">[</bpt>COR_PRF_FUNCTION_ARGUMENT_RANGE<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-range-structure.md)</ept> structures for the argument ranges pointed to by <ph id=\"ph1\">`pArgumentInfo`</ph>).","pos":[2162,2575],"source":" [in, out] A pointer to the total size, in bytes, of the [COR_PRF_FUNCTION_ARGUMENT_INFO](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md) structure (plus any additional [COR_PRF_FUNCTION_ARGUMENT_RANGE](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-range-structure.md) structures for the argument ranges pointed to by `pArgumentInfo`)."},{"content":"If the specified size is not enough, ERROR_INSUFFICIENT_BUFFER is returned and the expected size is stored in <ph id=\"ph1\">`pcbArgumentInfo`</ph>.","pos":[2576,2704],"source":" If the specified size is not enough, ERROR_INSUFFICIENT_BUFFER is returned and the expected size is stored in `pcbArgumentInfo`."},{"content":"To call <ph id=\"ph1\">`GetFunctionEnter3Info`</ph> just to retrieve the expected value for <ph id=\"ph2\">`*pcbArgumentInfo`</ph>, set <ph id=\"ph3\">`*pcbArgumentInfo`</ph>=0 and <ph id=\"ph4\">`pArgumentInfo`</ph>=NULL.","pos":[2705,2847],"source":" To call `GetFunctionEnter3Info` just to retrieve the expected value for `*pcbArgumentInfo`, set `*pcbArgumentInfo`=0 and `pArgumentInfo`=NULL."},{"content":"[out] A pointer to a <bpt id=\"p1\">[</bpt>COR_PRF_FUNCTION_ARGUMENT_INFO<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md)</ept> structure that describes the locations of the function's arguments in memory, in left-to-right order.","pos":[2873,3124],"source":" [out] A pointer to a [COR_PRF_FUNCTION_ARGUMENT_INFO](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md) structure that describes the locations of the function's arguments in memory, in left-to-right order."},{"pos":[3133,3140],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3144,3342],"content":"The profiler must allocate sufficient space for the <ph id=\"ph1\">`COR_PRF_FUNCTION_ARGUMENT_INFO`</ph> structure of the function that is being inspected, and must indicate the size in the <ph id=\"ph2\">`pcbArgumentInfo`</ph> parameter.","source":"The profiler must allocate sufficient space for the `COR_PRF_FUNCTION_ARGUMENT_INFO` structure of the function that is being inspected, and must indicate the size in the `pcbArgumentInfo` parameter."},{"pos":[3351,3363],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3367,3471],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3478,3512],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[3519,3544],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3551,3659],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[3668,3676],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>FunctionEnter3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3680,3792],"source":"[FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionenter3withinfo-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>FunctionLeave3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3795,3908],"source":" [FunctionLeave3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>FunctionTailcall3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3withinfo-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3911,4030],"source":" [FunctionTailcall3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3withinfo-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ICorProfilerInfo3 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[4033,4147],"source":" [ICorProfilerInfo3 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Profiling Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept><ph id=\"ph1\"> </ph>","pos":[4150,4250],"source":" [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Profiling<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept>","pos":[4253,4326],"source":" [Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)"}]}