{"content":"---\ntitle: \"How to: Create XML Literals (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"XML literals [Visual Basic], creating\"\nms.assetid: 573a6db5-b14d-4e42-b356-8cc7e2d77745\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Create XML Literals (Visual Basic)\nYou can create an XML document, fragment, or element directly in code by using an XML literal. The examples in this topic demonstrate how to create an XML element that has three child elements, and how to create an XML document.  \n  \n You can also use the [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] APIs to create [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] objects. For more information, see <xref:System.Xml.Linq.XElement>.  \n  \n### To create an XML element  \n  \n-   Create the XML inline by using the XML literal syntax, which is the same as the actual XML syntax.  \n  \n     [!code-vb[VbXMLSamples#5](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-xml-literals_1.vb)]  \n  \n     Run the code. The output of this code is:  \n  \n     `<contact>`  \n  \n     `<name>Patrick Hines</name>`  \n  \n     `<phone type=\"home\">206-555-0144</phone>`  \n  \n     `<phone type=\"work\">425-555-0145</phone>`  \n  \n     `</contact>`  \n  \n### To create an XML document  \n  \n-   Create the XML document inline. The following code creates an XML document that has literal syntax, an XML declaration, a processing instruction, a comment, and an element that contains another element.  \n  \n     [!code-vb[VbXMLSamples#30](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-xml-literals_2.vb)]  \n  \n     Run the code. The output of this code is:  \n  \n     `<?xml-stylesheet type=\"text/xsl\" href=\"show_book.xsl\"?>`  \n  \n     `<!-- Tests that the application works. -->`  \n  \n     `<books>`  \n  \n     `<book/>`  \n  \n     `</books>`  \n  \n## See Also  \n [XML](../../../../visual-basic/programming-guide/language-features/xml/index.md)   \n [Creating XML in Visual Basic](../../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)   \n [XML Element Literal](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)   \n [XML Document Literal](../../../../visual-basic/language-reference/xml-literals/xml-document-literal.md)","nodes":[{"pos":[12,71],"content":"How to: Create XML Literals (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create XML Literals (Visual Basic) | Microsoft Docs","pos":[0,59]}]},{"pos":[627,669],"content":"How to: Create XML Literals (Visual Basic)","linkify":"How to: Create XML Literals (Visual Basic)","nodes":[{"content":"How to: Create XML Literals (Visual Basic)","pos":[0,42]}]},{"content":"You can create an XML document, fragment, or element directly in code by using an XML literal.","pos":[670,764]},{"content":"The examples in this topic demonstrate how to create an XML element that has three child elements, and how to create an XML document.","pos":[765,898]},{"content":"You can also use the <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> APIs to create <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> objects.","pos":[905,1155],"source":"You can also use the [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] APIs to create [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] objects."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.","pos":[1156,1214],"source":" For more information, see <xref:System.Xml.Linq.XElement>."},{"pos":[1224,1248],"content":"To create an XML element","linkify":"To create an XML element","nodes":[{"content":"To create an XML element","pos":[0,24]}]},{"content":"Create the XML inline by using the XML literal syntax, which is the same as the actual XML syntax.","pos":[1258,1356]},{"pos":[1367,1504],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbXMLSamples#5<ept id=\"p2\">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-xml-literals_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbXMLSamples#5](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-xml-literals_1.vb)]"},{"content":"Run the code.","pos":[1515,1528]},{"content":"The output of this code is:","pos":[1529,1556]},{"pos":[1754,1779],"content":"To create an XML document","linkify":"To create an XML document","nodes":[{"content":"To create an XML document","pos":[0,25]}]},{"content":"Create the XML document inline.","pos":[1789,1820]},{"content":"The following code creates an XML document that has literal syntax, an XML declaration, a processing instruction, a comment, and an element that contains another element.","pos":[1821,1991]},{"pos":[2002,2140],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbXMLSamples#30<ept id=\"p2\">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-xml-literals_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbXMLSamples#30](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-xml-literals_2.vb)]"},{"content":"Run the code.","pos":[2151,2164]},{"content":"The output of this code is:","pos":[2165,2192]},{"pos":[2385,2393],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>XML<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2397,2478],"source":"[XML](../../../../visual-basic/programming-guide/language-features/xml/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Creating XML in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[2481,2595],"source":" [Creating XML in Visual Basic](../../../../visual-basic/programming-guide/language-features/xml/creating-xml.md) "},{"content":"<bpt id=\"p1\"> [</bpt>XML Element Literal<ept id=\"p1\">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept><ph id=\"ph1\"> </ph>","pos":[2598,2702],"source":" [XML Element Literal](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md) "},{"content":"<bpt id=\"p1\"> [</bpt>XML Document Literal<ept id=\"p1\">](../../../../visual-basic/language-reference/xml-literals/xml-document-literal.md)</ept>","pos":[2705,2810],"source":" [XML Document Literal](../../../../visual-basic/language-reference/xml-literals/xml-document-literal.md)"}]}