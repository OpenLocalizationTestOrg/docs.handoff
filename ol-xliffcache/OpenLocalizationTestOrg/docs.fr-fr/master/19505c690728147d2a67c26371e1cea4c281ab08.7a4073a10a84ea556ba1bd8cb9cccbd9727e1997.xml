{"content":"---\ntitle: \"How to: Share Bound Data Across Forms Using the BindingSource Component\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"examples [Windows Forms], BindingSource component\"\n  - \"data binding [Windows Forms], sharing data across forms\"\n  - \"BindingSource component [Windows Forms], examples\"\n  - \"BindingSource [Windows Forms], using with multiple forms\"\nms.assetid: a1a49630-db9c-4485-b888-1f62a373a4f7\n---\n# How to: Share Bound Data Across Forms Using the BindingSource Component\nYou can easily share data across forms using the <xref:System.Windows.Forms.BindingSource> component. For example, you may want to display one read-only form that summarizes the data-source data and another editable form that contains detailed information about the currently selected item in the data source. This example demonstrates this scenario.  \n  \n## Example  \n The following code example demonstrates how to share a <xref:System.Windows.Forms.BindingSource> and its bound data across forms. In this example, the shared <xref:System.Windows.Forms.BindingSource> is passed to the constructor of the child form. The child form allows the user to edit the data for the currently selected item in the main form.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.BindingSource.BindingComplete> event for the <xref:System.Windows.Forms.BindingSource> component is handled in the example to ensure that the two forms remain synchronized. For more information about why this is done, see [How to: Ensure Multiple Controls Bound to the Same Data Source Remain Synchronized](../multiple-controls-bound-to-data-source-synchronized.md).  \n  \n [!code-csharp[System.Windows.Forms.BindingSourceMultipleForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleForms/CS/Form1.cs#1)]\n [!code-vb[System.Windows.Forms.BindingSourceMultipleForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleForms/VB/Form1.vb#1)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Windows.Forms, System.Drawing, System.Data, and System.Xml assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- [BindingSource Component](bindingsource-component.md)\n- [Windows Forms Data Binding](../windows-forms-data-binding.md)\n- [How to: Handle Errors and Exceptions that Occur with Databinding](how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)\n","nodes":[{"pos":[4,448],"embed":true,"restype":"x-metadata","content":"title: \"How to: Share Bound Data Across Forms Using the BindingSource Component\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"examples [Windows Forms], BindingSource component\"\n  - \"data binding [Windows Forms], sharing data across forms\"\n  - \"BindingSource component [Windows Forms], examples\"\n  - \"BindingSource [Windows Forms], using with multiple forms\"\nms.assetid: a1a49630-db9c-4485-b888-1f62a373a4f7","nodes":[{"content":"How to: Share Bound Data Across Forms Using the BindingSource Component","nodes":[{"pos":[0,71],"content":"How to: Share Bound Data Across Forms Using the BindingSource Component","nodes":[{"content":"How to: Share Bound Data Across Forms Using the BindingSource Component","pos":[0,71]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[455,526],"content":"How to: Share Bound Data Across Forms Using the BindingSource Component","linkify":"How to: Share Bound Data Across Forms Using the BindingSource Component","nodes":[{"content":"How to: Share Bound Data Across Forms Using the BindingSource Component","pos":[0,71]}]},{"content":"You can easily share data across forms using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.","pos":[527,628],"source":"You can easily share data across forms using the <xref:System.Windows.Forms.BindingSource> component."},{"content":"For example, you may want to display one read-only form that summarizes the data-source data and another editable form that contains detailed information about the currently selected item in the data source.","pos":[629,836]},{"content":"This example demonstrates this scenario.","pos":[837,877]},{"pos":[886,893],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to share a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> and its bound data across forms.","pos":[897,1026],"source":"The following code example demonstrates how to share a <xref:System.Windows.Forms.BindingSource> and its bound data across forms."},{"content":"In this example, the shared <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> is passed to the constructor of the child form.","pos":[1027,1144],"source":" In this example, the shared <xref:System.Windows.Forms.BindingSource> is passed to the constructor of the child form."},{"content":"The child form allows the user to edit the data for the currently selected item in the main form.","pos":[1145,1242]},{"pos":[1250,1658],"content":"[!NOTE]\n The <xref:System.Windows.Forms.BindingSource.BindingComplete> event for the <xref:System.Windows.Forms.BindingSource> component is handled in the example to ensure that the two forms remain synchronized. For more information about why this is done, see [How to: Ensure Multiple Controls Bound to the Same Data Source Remain Synchronized](../multiple-controls-bound-to-data-source-synchronized.md).","leadings":["","> "],"nodes":[{"content":"The <xref:System.Windows.Forms.BindingSource.BindingComplete> event for the <xref:System.Windows.Forms.BindingSource> component is handled in the example to ensure that the two forms remain synchronized. For more information about why this is done, see [How to: Ensure Multiple Controls Bound to the Same Data Source Remain Synchronized](../multiple-controls-bound-to-data-source-synchronized.md).","pos":[9,406],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource.BindingComplete&gt;</ph> event for the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component is handled in the example to ensure that the two forms remain synchronized.","pos":[0,203],"source":"The <xref:System.Windows.Forms.BindingSource.BindingComplete> event for the <xref:System.Windows.Forms.BindingSource> component is handled in the example to ensure that the two forms remain synchronized."},{"content":"For more information about why this is done, see <bpt id=\"p1\">[</bpt>How to: Ensure Multiple Controls Bound to the Same Data Source Remain Synchronized<ept id=\"p1\">](../multiple-controls-bound-to-data-source-synchronized.md)</ept>.","pos":[204,397],"source":" For more information about why this is done, see [How to: Ensure Multiple Controls Bound to the Same Data Source Remain Synchronized](../multiple-controls-bound-to-data-source-synchronized.md)."}]}]},{"pos":[2027,2045],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[2049,2071]},{"content":"References to the System, System.Windows.Forms, System.Drawing, System.Data, and System.Xml assemblies.","pos":[2081,2184]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2191,2545],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[2546,2634]},{"pos":[2643,2651],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2655,2708],"content":"<bpt id=\"p1\">[</bpt>BindingSource Component<ept id=\"p1\">](bindingsource-component.md)</ept>","source":"[BindingSource Component](bindingsource-component.md)"},{"pos":[2711,2773],"content":"<bpt id=\"p1\">[</bpt>Windows Forms Data Binding<ept id=\"p1\">](../windows-forms-data-binding.md)</ept>","source":"[Windows Forms Data Binding](../windows-forms-data-binding.md)"},{"pos":[2776,2910],"content":"<bpt id=\"p1\">[</bpt>How to: Handle Errors and Exceptions that Occur with Databinding<ept id=\"p1\">](how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)</ept>","source":"[How to: Handle Errors and Exceptions that Occur with Databinding](how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)"}]}