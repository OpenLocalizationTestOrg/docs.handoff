<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="user-defined-functions-and-variables.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2ce474dac44de1ac72811ecd3bc294ba57ce40a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\user-defined-functions-and-variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da9200309b1f7aa1bee93ba92f6e334795f81a60</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9b15dd48d4d922770a225a1b85b4dcab492b0fa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>User Defined Functions and Variables</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>User Defined Functions and Variables</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class provides a set of methods that are used to interact with <ph id="ph2">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can supplement the standard XPath functions by implementing extension functions and variables for use by XPath query expressions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathExpression.SetContext%2A&gt;</ph> method can accept a user defined context derived from <ph id="ph2">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>User defined functions are resolved by the custom context.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Extension functions and variables can be useful in prevention of XML injection attacks.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In these scenarios user input is assigned to custom variables and processed by extension functions, not as raw input concatenated with processing instructions.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Extension functions and variables contain user input so that it only acts on XML data as intended by the designer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To use extensions you implement a custom <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph> class along with the interfaces <ph id="ph2">&lt;xref:System.Xml.Xsl.IXsltContextFunction&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Xsl.IXsltContextVariable&gt;</ph> that support extension functions and variables.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XPath.XPathExpression&gt;</ph> adds user input with its <ph id="ph2">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> to the custom <ph id="ph3">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathExpression&gt;</ph> represents a compiled query that <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> uses to find and process the nodes identified by the expression.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example shows implementation of a custom context class derived from <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Comments in the code describe class members and their use in custom functions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Function and variable implementations and a sample application that uses these implementations follow this code segment.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code implements <ph id="ph1">&lt;xref:System.Xml.Xsl.IXsltContextFunction&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The class that implements <ph id="ph1">&lt;xref:System.Xml.Xsl.IXsltContextFunction&gt;</ph> resolves and executes user-defined functions.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example uses the function identified by the declaration: <ph id="ph1">`private int CountChar(string title, char charTocount)`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Code comments describe class members.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following code implements <ph id="ph1">&lt;xref:System.Xml.Xsl.IXsltContextVariable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This class resolves references to user-defined variables in XPath query expressions at run time.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An instance of this class is created and returned by the overridden <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltContext.ResolveVariable%2A&gt;</ph> method of the custom <ph id="ph2">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Code comments describe the class members.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>With the previous class definitions in scope, the following code uses the custom function to count characters in the elements of the <ph id="ph1">`Tasks.xml`</ph> document.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Comments in the code describe the code that compiles the custom function and runs it against the <ph id="ph1">`Tasks.xml`</ph> document.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example uses the following XML data.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>