{"content":"---\ntitle: \"&gt;&gt; Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \">>_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \">> operator [C#]\"\n  - \"right shift operator (>>) [C#]\"\nms.assetid: a07f8679-d318-4ef8-b38b-65903efb8056\ncaps.latest.revision: 15\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &gt;&gt; Operator (C# Reference)\nThe right-shift operator (`>>`) shifts its first operand right by the number of bits specified by its second operand.  \n  \n## Remarks  \n If the first operand is an [int](../../../csharp/language-reference/keywords/int.md) or [uint](../../../csharp/language-reference/keywords/uint.md) (32-bit quantity), the shift count is given by the low-order five bits of the second operand (second operand & 0x1f).  \n  \n If the first operand is a [long](../../../csharp/language-reference/keywords/long.md) or [ulong](../../../csharp/language-reference/keywords/ulong.md) (64-bit quantity), the shift count is given by the low-order six bits of the second operand (second operand & 0x3f).  \n  \n If the first operand is an [int](../../../csharp/language-reference/keywords/int.md) or [long](../../../csharp/language-reference/keywords/long.md), the right-shift is an arithmetic shift (high-order empty bits are set to the sign bit). If the first operand is of type [uint](../../../csharp/language-reference/keywords/uint.md) or [ulong](../../../csharp/language-reference/keywords/ulong.md), the right-shift is a logical shift (high-order bits are zero-filled).  \n  \n User-defined types can overload the `>>` operator; the type of the first operand must be the user-defined type, and the type of the second operand must be [int](../../../csharp/language-reference/keywords/int.md). For more information, see [operator](../../../csharp/language-reference/keywords/operator.md). When a binary operator is overloaded, the corresponding assignment operator, if any, is also implicitly overloaded.  \n  \n## Example  \n [!code-cs[csRefOperators#26](../../../csharp/language-reference/operators/codesnippet/CSharp/right-shift-operator_1.cs)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)","nodes":[{"pos":[12,61],"content":"&gt;&gt; Operator (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;gt;</ph><ph id=\"ph2\">&amp;gt;</ph> Operator (C# Reference) | Microsoft Docs","pos":[0,49],"source":"&gt;&gt; Operator (C# Reference) | Microsoft Docs"}]},{"pos":[603,635],"content":"&gt;&gt; Operator (C# Reference)","linkify":"&gt;&gt; Operator (C# Reference)","nodes":[{"content":"<ph id=\"ph1\">&amp;gt;</ph><ph id=\"ph2\">&amp;gt;</ph> Operator (C# Reference)","pos":[0,32],"source":"&gt;&gt; Operator (C# Reference)"}]},{"pos":[636,753],"content":"The right-shift operator (<ph id=\"ph1\">`&gt;&gt;`</ph>) shifts its first operand right by the number of bits specified by its second operand.","source":"The right-shift operator (`>>`) shifts its first operand right by the number of bits specified by its second operand."},{"pos":[762,769],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[773,1038],"content":"If the first operand is an <bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept> or <bpt id=\"p2\">[</bpt>uint<ept id=\"p2\">](../../../csharp/language-reference/keywords/uint.md)</ept> (32-bit quantity), the shift count is given by the low-order five bits of the second operand (second operand &amp; 0x1f).","source":"If the first operand is an [int](../../../csharp/language-reference/keywords/int.md) or [uint](../../../csharp/language-reference/keywords/uint.md) (32-bit quantity), the shift count is given by the low-order five bits of the second operand (second operand & 0x1f)."},{"pos":[1045,1312],"content":"If the first operand is a <bpt id=\"p1\">[</bpt>long<ept id=\"p1\">](../../../csharp/language-reference/keywords/long.md)</ept> or <bpt id=\"p2\">[</bpt>ulong<ept id=\"p2\">](../../../csharp/language-reference/keywords/ulong.md)</ept> (64-bit quantity), the shift count is given by the low-order six bits of the second operand (second operand &amp; 0x3f).","source":"If the first operand is a [long](../../../csharp/language-reference/keywords/long.md) or [ulong](../../../csharp/language-reference/keywords/ulong.md) (64-bit quantity), the shift count is given by the low-order six bits of the second operand (second operand & 0x3f)."},{"content":"If the first operand is an <bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept> or <bpt id=\"p2\">[</bpt>long<ept id=\"p2\">](../../../csharp/language-reference/keywords/long.md)</ept>, the right-shift is an arithmetic shift (high-order empty bits are set to the sign bit).","pos":[1319,1555],"source":"If the first operand is an [int](../../../csharp/language-reference/keywords/int.md) or [long](../../../csharp/language-reference/keywords/long.md), the right-shift is an arithmetic shift (high-order empty bits are set to the sign bit)."},{"content":"If the first operand is of type <bpt id=\"p1\">[</bpt>uint<ept id=\"p1\">](../../../csharp/language-reference/keywords/uint.md)</ept> or <bpt id=\"p2\">[</bpt>ulong<ept id=\"p2\">](../../../csharp/language-reference/keywords/ulong.md)</ept>, the right-shift is a logical shift (high-order bits are zero-filled).","pos":[1556,1783],"source":" If the first operand is of type [uint](../../../csharp/language-reference/keywords/uint.md) or [ulong](../../../csharp/language-reference/keywords/ulong.md), the right-shift is a logical shift (high-order bits are zero-filled)."},{"content":"User-defined types can overload the <ph id=\"ph1\">`&gt;&gt;`</ph> operator; the type of the first operand must be the user-defined type, and the type of the second operand must be <bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept>.","pos":[1790,2003],"source":"User-defined types can overload the `>>` operator; the type of the first operand must be the user-defined type, and the type of the second operand must be [int](../../../csharp/language-reference/keywords/int.md)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>operator<ept id=\"p1\">](../../../csharp/language-reference/keywords/operator.md)</ept>.","pos":[2004,2098],"source":" For more information, see [operator](../../../csharp/language-reference/keywords/operator.md)."},{"content":"When a binary operator is overloaded, the corresponding assignment operator, if any, is also implicitly overloaded.","pos":[2099,2214]},{"pos":[2223,2230],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2234,2354],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#26<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/right-shift-operator_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#26](../../../csharp/language-reference/operators/codesnippet/CSharp/right-shift-operator_1.cs)]"},{"pos":[2363,2371],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2375,2435],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2438,2506],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","pos":[2509,2579],"source":" [C# Operators](../../../csharp/language-reference/operators/index.md)"}]}