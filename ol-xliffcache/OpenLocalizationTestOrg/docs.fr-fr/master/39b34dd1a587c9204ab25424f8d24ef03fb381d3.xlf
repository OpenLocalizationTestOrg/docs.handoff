<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39b34dd1a587c9204ab25424f8d24ef03fb381d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\transactions\interoperability-with-enterprise-services-and-com-transactions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcfe73d7444cf1b6f4f79281e971f2259949e6b2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f6620ab7308233e379eb552dc76fcfa0133614f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Interoperability with Enterprise Services and COM+ Transactions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Interoperability with Enterprise Services and COM+ Transactions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace supports interoperability between transaction objects created using this namespace and transactions created through COM+.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration when you create a new <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> instance to specify the level of interoperability with COM+.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, when your application code checks the static <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> attempts to look for a transaction that is otherwise current, or a <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object that dictates that <ph id="ph4">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If it cannot find either one of these, <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> queries the COM+ context for a transaction.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Note that even though <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> may find a transaction from the COM+ context, it still favors transactions that are native to <ph id="ph2">&lt;xref:System.Transactions&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Interoperability levels</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration defines the following levels of interoperabilityâ€”<ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, <ph id="ph3">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> and <ph id="ph4">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class provides constructors that accept <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> as a parameter.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, as the name implies, implies that there is no interoperability between <ph id="ph2">&lt;xref:System.EnterpriseServices&gt;</ph> contexts and transaction scopes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>After creating a <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object with <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, any changes to <ph id="ph3">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> are not reflected in the COM+ context.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Similarly, changes to the transaction in the COM+ context are not reflected in <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is the fastest mode of operation for <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> because there is no extra synchronization required.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> is the default value used by <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> with all constructors that do not accept <ph id="ph3">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> as a parameter.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you do want to combine <ph id="ph1">&lt;xref:System.EnterpriseServices&gt;</ph> transactions with your ambient transaction, you need to use either <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> or <ph id="ph3">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Both of these values rely on a feature called services without components, and therefore you should be running on Windows XP Service Pack 2 or Windows Server 2003 when using them.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> specifies that the ambient transactions for <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> and <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph> are always the same.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It results in creating a new <ph id="ph1">&lt;xref:System.EnterpriseServices&gt;</ph> transactional context and applying the transaction that is current for the <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> to be current for that context.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As such, the transaction in <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> is completely in synchronization with the transaction in <ph id="ph2">&lt;xref:System.EnterpriseServices.ContextUtil.Transaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This value introduces a performance penalty because new COM+ contexts may need to be created.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> specifies the following requirements:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> is checked, <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> should support transactions in the COM+ context if it detects that it is running in a context other than the default context.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that the default context cannot contain a transaction.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, in the default context, even with <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, the transaction stored in the thread local storage used by <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> is returned for <ph id="ph3">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If a new <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object is created and the creation occurs in a context other than the default context, the transaction that is current for the <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object should be reflected in COM+.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> behaves like <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> in that it creates a new COM+ context.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In addition when <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> is set in both <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> and <ph id="ph3">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, both of these modes imply that <ph id="ph4">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> cannot be set directly.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Any attempt to set <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> directly other than creating a <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> results in an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration value is inherited by new transaction scopes that do not explicitly specify which value to use.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if you create a new <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object with <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, and then create a second <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object but do not specify an <ph id="ph4">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> value, the second <ph id="ph5">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object also has a <ph id="ph6">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In summary, the following rules apply when creating a new transaction scope:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> is checked to see if there is a transaction.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This check results in:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A check to see if there is a scope.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If there is a scope, the value of the <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration passed in when the scope was initially created is checked.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration is set to <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, the COM+ transaction (<ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph> Transaction) takes precedence over the <ph id="ph4">&lt;xref:System.Transactions&gt;</ph> transaction in managed thread local storage.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the value is set to <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> transaction in managed thread local storage takes precedence.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the value is <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>, there is only one transaction and it is a COM+ transaction.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref:System.Transactions.TransactionScopeOption&gt;</ph> enumeration passed in by the <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> constructor is checked.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This determines if a new transaction must be created.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If a new transaction is to be created, the following values of <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> result in:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>:  a transaction associated with a COM+ context is created.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>: a <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> transaction is created.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph>: if there is a COM+ context, a transaction is created and attached to the context.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following table illustrates the Enterprise Services (ES) context and a transactional scope that requires a transaction using the <ph id="ph1">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>ES Context</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Automatic</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Full</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Default context</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Default context</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Default context</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Create new</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>transactional context</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Non-default context</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Maintain client's context</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Create new transactional context</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Create new transactional context</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following table illustrates what the ambient transaction is, given a particular <ph id="ph1">&lt;xref:System.EnterpriseServices&gt;</ph> context, and a transactional scope that requires a transaction using the <ph id="ph2">&lt;xref:System.Transactions.EnterpriseServicesInteropOption&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ES Context</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Automatic</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Full</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Default context</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>ST</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>ST</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>ES</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Non-default context</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>ST</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>ES</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>ES</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the preceding table:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>ST means that the scope's ambient transaction is managed by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, separate from any <ph id="ph2">&lt;xref:System.EnterpriseServices&gt;</ph> context's transaction that may be present.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>ES means that the scope's ambient transaction is same as the <ph id="ph1">&lt;xref:System.EnterpriseServices&gt;</ph> context's transaction.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>