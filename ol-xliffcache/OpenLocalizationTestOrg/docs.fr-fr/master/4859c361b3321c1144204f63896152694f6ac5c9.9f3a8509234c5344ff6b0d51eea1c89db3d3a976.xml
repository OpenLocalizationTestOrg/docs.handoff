{"content":"---\ntitle: \"namespace keyword - C# Reference\"\nms.custom: seoapril2019\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"namespace_CSharpKeyword\"\n  - \"namespace\"\nhelpviewer_keywords: \n  - \"namespace keyword [C#]\"\n  - \"scope [C#]\"\nms.assetid: 0a788423-9110-42e0-97d9-bda41ca4870f\n---\n# namespace (C# Reference)\n\nThe `namespace` keyword is used to declare a scope that contains a set of related objects. You can use a namespace to organize code elements and to create globally unique types.\n\n[!code-csharp[csrefKeywordsNamespace#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsNamespace/CS/csrefKeywordsNamespace.cs#1)]\n\n## Remarks\n\nWithin a namespace, you can declare zero or more of the following types:\n\n- another namespace\n\n- [class](class.md)\n\n- [interface](interface.md)\n\n- [struct](struct.md)\n\n- [enum](enum.md)\n\n- [delegate](delegate.md)\n\nWhether or not you explicitly declare a namespace in a C# source file, the compiler adds a default namespace. This unnamed namespace, sometimes referred to as the global namespace, is present in every file. Any identifier in the global namespace is available for use in a named namespace.\n\nNamespaces implicitly have public access and this is not modifiable. For a discussion of the access modifiers you can assign to elements in a namespace, see [Access Modifiers](access-modifiers.md).\n\nIt is possible to define a namespace in two or more declarations. For example, the following example defines two classes as part of the `MyCompany` namespace:\n\n[!code-csharp[csrefKeywordsNamespace#2](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsNamespace/CS/csrefKeywordsNamespace.cs#2)]\n\n## Example\n\nThe following example shows how to call a static method in a nested namespace.\n\n[!code-csharp[csrefKeywordsNamespace#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsNamespace/CS/csrefKeywordsNamespace.cs#3)]\n\n## Related resources\n\nFor more information about using namespaces, see the following topics:\n\n- [Namespaces](../../programming-guide/namespaces/index.md)\n\n- [Using Namespaces](../../programming-guide/namespaces/using-namespaces.md)\n\n- [How to: Use the Global Namespace Alias](../../programming-guide/namespaces/how-to-use-the-global-namespace-alias.md)\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../../language-reference/index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Namespace Keywords](namespace-keywords.md)\n- [using](using-directive.md)\n- [using static](using-static.md)","nodes":[{"pos":[4,267],"embed":true,"restype":"x-metadata","content":"title: \"namespace keyword - C# Reference\"\nms.custom: seoapril2019\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"namespace_CSharpKeyword\"\n  - \"namespace\"\nhelpviewer_keywords: \n  - \"namespace keyword [C#]\"\n  - \"scope [C#]\"\nms.assetid: 0a788423-9110-42e0-97d9-bda41ca4870f","nodes":[{"content":"namespace keyword - C# Reference","nodes":[{"pos":[0,32],"content":"namespace keyword - C# Reference","nodes":[{"content":"namespace keyword - C# Reference","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[274,298],"content":"namespace (C# Reference)","linkify":"namespace (C# Reference)","nodes":[{"content":"namespace (C# Reference)","pos":[0,24]}]},{"content":"The <ph id=\"ph1\">`namespace`</ph> keyword is used to declare a scope that contains a set of related objects.","pos":[300,390],"source":"The `namespace` keyword is used to declare a scope that contains a set of related objects."},{"content":"You can use a namespace to organize code elements and to create globally unique types.","pos":[391,477]},{"pos":[626,633],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Within a namespace, you can declare zero or more of the following types:","pos":[635,707]},{"content":"another namespace","pos":[711,728]},{"pos":[732,749],"content":"<bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](class.md)</ept>","source":"[class](class.md)"},{"pos":[753,778],"content":"<bpt id=\"p1\">[</bpt>interface<ept id=\"p1\">](interface.md)</ept>","source":"[interface](interface.md)"},{"pos":[782,801],"content":"<bpt id=\"p1\">[</bpt>struct<ept id=\"p1\">](struct.md)</ept>","source":"[struct](struct.md)"},{"pos":[805,820],"content":"<bpt id=\"p1\">[</bpt>enum<ept id=\"p1\">](enum.md)</ept>","source":"[enum](enum.md)"},{"pos":[824,847],"content":"<bpt id=\"p1\">[</bpt>delegate<ept id=\"p1\">](delegate.md)</ept>","source":"[delegate](delegate.md)"},{"content":"Whether or not you explicitly declare a namespace in a C# source file, the compiler adds a default namespace.","pos":[849,958]},{"content":"This unnamed namespace, sometimes referred to as the global namespace, is present in every file.","pos":[959,1055]},{"content":"Any identifier in the global namespace is available for use in a named namespace.","pos":[1056,1137]},{"content":"Namespaces implicitly have public access and this is not modifiable.","pos":[1139,1207]},{"content":"For a discussion of the access modifiers you can assign to elements in a namespace, see <bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](access-modifiers.md)</ept>.","pos":[1208,1336],"source":" For a discussion of the access modifiers you can assign to elements in a namespace, see [Access Modifiers](access-modifiers.md)."},{"content":"It is possible to define a namespace in two or more declarations.","pos":[1338,1403]},{"content":"For example, the following example defines two classes as part of the <ph id=\"ph1\">`MyCompany`</ph> namespace:","pos":[1404,1496],"source":" For example, the following example defines two classes as part of the `MyCompany` namespace:"},{"pos":[1645,1652],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to call a static method in a nested namespace.","pos":[1654,1732]},{"pos":[1881,1898],"content":"Related resources","linkify":"Related resources","nodes":[{"content":"Related resources","pos":[0,17]}]},{"content":"For more information about using namespaces, see the following topics:","pos":[1900,1970]},{"pos":[1974,2031],"content":"<bpt id=\"p1\">[</bpt>Namespaces<ept id=\"p1\">](../../programming-guide/namespaces/index.md)</ept>","source":"[Namespaces](../../programming-guide/namespaces/index.md)"},{"pos":[2035,2109],"content":"<bpt id=\"p1\">[</bpt>Using Namespaces<ept id=\"p1\">](../../programming-guide/namespaces/using-namespaces.md)</ept>","source":"[Using Namespaces](../../programming-guide/namespaces/using-namespaces.md)"},{"pos":[2113,2230],"content":"<bpt id=\"p1\">[</bpt>How to: Use the Global Namespace Alias<ept id=\"p1\">](../../programming-guide/namespaces/how-to-use-the-global-namespace-alias.md)</ept>","source":"[How to: Use the Global Namespace Alias](../../programming-guide/namespaces/how-to-use-the-global-namespace-alias.md)"},{"pos":[2235,2260],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[2326,2334],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2338,2387],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../language-reference/index.md)</ept>","source":"[C# Reference](../../language-reference/index.md)"},{"pos":[2390,2446],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[2449,2472],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2475,2518],"content":"<bpt id=\"p1\">[</bpt>Namespace Keywords<ept id=\"p1\">](namespace-keywords.md)</ept>","source":"[Namespace Keywords](namespace-keywords.md)"},{"pos":[2521,2548],"content":"<bpt id=\"p1\">[</bpt>using<ept id=\"p1\">](using-directive.md)</ept>","source":"[using](using-directive.md)"},{"pos":[2551,2582],"content":"<bpt id=\"p1\">[</bpt>using static<ept id=\"p1\">](using-static.md)</ept>","source":"[using static](using-static.md)"}]}