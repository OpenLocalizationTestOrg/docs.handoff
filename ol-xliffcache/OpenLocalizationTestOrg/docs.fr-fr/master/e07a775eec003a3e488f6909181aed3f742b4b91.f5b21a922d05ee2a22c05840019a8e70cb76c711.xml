{"content":"---\ntitle: \"IsNot Operator (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.isnot\"\nhelpviewer_keywords: \n  - \"IsNot operator [Visual Basic]\"\nms.assetid: 8dd2bcdb-0166-48a2-9094-60dfb448f36c\n---\n# IsNot Operator (Visual Basic)\nCompares two object reference variables.  \n  \n## Syntax  \n  \n```  \nresult = object1 IsNot object2  \n```  \n  \n## Parts  \n `result`  \n Required. A `Boolean` value.  \n  \n `object1`  \n Required. Any `Object` variable or expression.  \n  \n `object2`  \n Required. Any `Object` variable or expression.  \n  \n## Remarks  \n The `IsNot` operator determines if two object references refer to different objects. However, it does not perform value comparisons. If `object1` and `object2` both refer to the exact same object instance, `result` is `False`; if they do not, `result` is `True`.  \n  \n `IsNot` is the opposite of the `Is` operator. The advantage of `IsNot` is that you can avoid awkward syntax with `Not` and `Is`, which can be difficult to read.  \n  \n You can use the `Is` and `IsNot` operators to test both early-bound and late-bound objects.  \n  \n> [!NOTE]\n>  The `IsNot` operator cannot be used to compare expressions returned from the `TypeOf` operator. Instead, you must use the `Not` and `Is` operators.  \n  \n## Example  \n The following code example uses both the `Is` operator and the `IsNot` operator to accomplish the same comparison.  \n  \n [!code-vb[VbVbalrOperators#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrOperators/VB/Class1.vb#29)]  \n  \n## See also\n\n- [Is Operator](../../../visual-basic/language-reference/operators/is-operator.md)\n- [TypeOf Operator](../../../visual-basic/language-reference/operators/typeof-operator.md)\n- [Operator Precedence in Visual Basic](../../../visual-basic/language-reference/operators/operator-precedence.md)\n- [How to: Test Whether Two Objects Are the Same](../../../visual-basic/programming-guide/language-features/operators-and-expressions/how-to-test-whether-two-objects-are-the-same.md)\n","nodes":[{"pos":[4,198],"embed":true,"restype":"x-metadata","content":"title: \"IsNot Operator (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.isnot\"\nhelpviewer_keywords: \n  - \"IsNot operator [Visual Basic]\"\nms.assetid: 8dd2bcdb-0166-48a2-9094-60dfb448f36c","nodes":[{"content":"IsNot Operator (Visual Basic)","nodes":[{"pos":[0,29],"content":"IsNot Operator (Visual Basic)","nodes":[{"content":"IsNot Operator (Visual Basic)","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[205,234],"content":"IsNot Operator (Visual Basic)","linkify":"IsNot Operator (Visual Basic)","nodes":[{"content":"IsNot Operator (Visual Basic)","pos":[0,29]}]},{"content":"Compares two object reference variables.","pos":[235,275]},{"pos":[284,290],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[347,352],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[368,377]},{"content":"A <ph id=\"ph1\">`Boolean`</ph> value.","pos":[378,396],"source":" A `Boolean` value."},{"content":"Required.","pos":[416,425]},{"content":"Any <ph id=\"ph1\">`Object`</ph> variable or expression.","pos":[426,462],"source":" Any `Object` variable or expression."},{"content":"Required.","pos":[482,491]},{"content":"Any <ph id=\"ph1\">`Object`</ph> variable or expression.","pos":[492,528],"source":" Any `Object` variable or expression."},{"pos":[537,544],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`IsNot`</ph> operator determines if two object references refer to different objects.","pos":[548,632],"source":"The `IsNot` operator determines if two object references refer to different objects."},{"content":"However, it does not perform value comparisons.","pos":[633,680]},{"content":"If <ph id=\"ph1\">`object1`</ph> and <ph id=\"ph2\">`object2`</ph> both refer to the exact same object instance, <ph id=\"ph3\">`result`</ph> is <ph id=\"ph4\">`False`</ph>; if they do not, <ph id=\"ph5\">`result`</ph> is <ph id=\"ph6\">`True`</ph>.","pos":[681,810],"source":" If `object1` and `object2` both refer to the exact same object instance, `result` is `False`; if they do not, `result` is `True`."},{"content":"<ph id=\"ph1\">`IsNot`</ph> is the opposite of the <ph id=\"ph2\">`Is`</ph> operator.","pos":[817,862],"source":"`IsNot` is the opposite of the `Is` operator."},{"content":"The advantage of <ph id=\"ph1\">`IsNot`</ph> is that you can avoid awkward syntax with <ph id=\"ph2\">`Not`</ph> and <ph id=\"ph3\">`Is`</ph>, which can be difficult to read.","pos":[863,977],"source":" The advantage of `IsNot` is that you can avoid awkward syntax with `Not` and `Is`, which can be difficult to read."},{"pos":[984,1075],"content":"You can use the <ph id=\"ph1\">`Is`</ph> and <ph id=\"ph2\">`IsNot`</ph> operators to test both early-bound and late-bound objects.","source":"You can use the `Is` and `IsNot` operators to test both early-bound and late-bound objects."},{"pos":[1083,1241],"content":"[!NOTE]\n The `IsNot` operator cannot be used to compare expressions returned from the `TypeOf` operator. Instead, you must use the `Not` and `Is` operators.","leadings":["","> "],"nodes":[{"content":"The `IsNot` operator cannot be used to compare expressions returned from the `TypeOf` operator. Instead, you must use the `Not` and `Is` operators.","pos":[9,156],"nodes":[{"content":"The <ph id=\"ph1\">`IsNot`</ph> operator cannot be used to compare expressions returned from the <ph id=\"ph2\">`TypeOf`</ph> operator.","pos":[0,95],"source":"The `IsNot` operator cannot be used to compare expressions returned from the `TypeOf` operator."},{"content":"Instead, you must use the <ph id=\"ph1\">`Not`</ph> and <ph id=\"ph2\">`Is`</ph> operators.","pos":[96,147],"source":" Instead, you must use the `Not` and `Is` operators."}]}]},{"pos":[1250,1257],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1261,1375],"content":"The following code example uses both the <ph id=\"ph1\">`Is`</ph> operator and the <ph id=\"ph2\">`IsNot`</ph> operator to accomplish the same comparison.","source":"The following code example uses both the `Is` operator and the `IsNot` operator to accomplish the same comparison."},{"pos":[1508,1516],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1520,1600],"content":"<bpt id=\"p1\">[</bpt>Is Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/is-operator.md)</ept>","source":"[Is Operator](../../../visual-basic/language-reference/operators/is-operator.md)"},{"pos":[1603,1691],"content":"<bpt id=\"p1\">[</bpt>TypeOf Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/typeof-operator.md)</ept>","source":"[TypeOf Operator](../../../visual-basic/language-reference/operators/typeof-operator.md)"},{"pos":[1694,1806],"content":"<bpt id=\"p1\">[</bpt>Operator Precedence in Visual Basic<ept id=\"p1\">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept>","source":"[Operator Precedence in Visual Basic](../../../visual-basic/language-reference/operators/operator-precedence.md)"},{"pos":[1809,1989],"content":"<bpt id=\"p1\">[</bpt>How to: Test Whether Two Objects Are the Same<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/how-to-test-whether-two-objects-are-the-same.md)</ept>","source":"[How to: Test Whether Two Objects Are the Same](../../../visual-basic/programming-guide/language-features/operators-and-expressions/how-to-test-whether-two-objects-are-the-same.md)"}]}