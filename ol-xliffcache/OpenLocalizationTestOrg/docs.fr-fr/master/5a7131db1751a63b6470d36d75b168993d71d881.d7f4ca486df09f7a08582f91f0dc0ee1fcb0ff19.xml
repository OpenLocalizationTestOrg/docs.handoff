{"content":"---\ntitle: \"&#39;On Error&#39; statements are not valid within &#39;Using&#39; statements | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36013\"\n  - \"bc36013\"\nhelpviewer_keywords: \n  - \"BC36013\"\nms.assetid: 5b399bf9-6595-46e0-a808-378f6c28568b\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# &#39;On Error&#39; statements are not valid within &#39;Using&#39; statements\nAn `On Error` statement appears within a `Using` statement but is not valid in that context.  \n  \n **Error ID:** BC36013  \n  \n## To correct this error  \n  \n-   Use structured error handling, such as a `Try…Catch` block, in place of the `On Error` statement.  \n  \n## See Also  \n [Structured Exception Handling Overview for Visual Basic](http://msdn.microsoft.com/en-us/bb81af80-a735-4873-9711-6151a48e418a)   \n [Choosing When to Use Structured and Unstructured Exception Handling (Visual Basic)](http://msdn.microsoft.com/en-us/e897d7ca-07e8-45dd-8a6d-a5b2a2fc9b9a)   \n [On Error Statement](../../visual-basic/language-reference/statements/on-error-statement.md)   \n [How to: Test Code with a Try…Catch Block in Visual Basic](http://msdn.microsoft.com/en-us/8368e205-ed73-4185-a247-af84fb4fafa9)   \n [Try...Catch...Finally Statement](../../visual-basic/language-reference/statements/try-catch-finally-statement.md)","nodes":[{"pos":[12,106],"content":"&#39;On Error&#39; statements are not valid within &#39;Using&#39; statements | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"&amp;#39;On Error&amp;#39; statements are not valid within &amp;#39;Using&amp;#39; statements | Microsoft Docs","pos":[0,94],"source":"&#39;On Error&#39; statements are not valid within &#39;Using&#39; statements | Microsoft Docs"}]},{"pos":[623,700],"content":"&#39;On Error&#39; statements are not valid within &#39;Using&#39; statements","linkify":"&#39;On Error&#39; statements are not valid within &#39;Using&#39; statements","nodes":[{"content":"&amp;#39;On Error&amp;#39; statements are not valid within &amp;#39;Using&amp;#39; statements","pos":[0,77],"source":"&#39;On Error&#39; statements are not valid within &#39;Using&#39; statements"}]},{"pos":[701,793],"content":"An <ph id=\"ph1\">`On Error`</ph> statement appears within a <ph id=\"ph2\">`Using`</ph> statement but is not valid in that context.","source":"An `On Error` statement appears within a `Using` statement but is not valid in that context."},{"pos":[800,821],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36013","source":"**Error ID:** BC36013"},{"pos":[830,851],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[861,958],"content":"Use structured error handling, such as a <ph id=\"ph1\">`Try…Catch`</ph> block, in place of the <ph id=\"ph2\">`On Error`</ph> statement.","source":"Use structured error handling, such as a `Try…Catch` block, in place of the `On Error` statement."},{"pos":[967,975],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Structured Exception Handling Overview for Visual Basic<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bb81af80-a735-4873-9711-6151a48e418a)</ept><ph id=\"ph1\"> </ph>","pos":[979,1107],"source":"[Structured Exception Handling Overview for Visual Basic](http://msdn.microsoft.com/en-us/bb81af80-a735-4873-9711-6151a48e418a) "},{"content":"<bpt id=\"p1\"> [</bpt>Choosing When to Use Structured and Unstructured Exception Handling (Visual Basic)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e897d7ca-07e8-45dd-8a6d-a5b2a2fc9b9a)</ept><ph id=\"ph1\"> </ph>","pos":[1110,1266],"source":" [Choosing When to Use Structured and Unstructured Exception Handling (Visual Basic)](http://msdn.microsoft.com/en-us/e897d7ca-07e8-45dd-8a6d-a5b2a2fc9b9a) "},{"content":"<bpt id=\"p1\"> [</bpt>On Error Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/on-error-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[1269,1363],"source":" [On Error Statement](../../visual-basic/language-reference/statements/on-error-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Test Code with a Try…Catch Block in Visual Basic<ept id=\"p1\">](http://msdn.microsoft.com/en-us/8368e205-ed73-4185-a247-af84fb4fafa9)</ept><ph id=\"ph1\"> </ph>","pos":[1366,1496],"source":" [How to: Test Code with a Try…Catch Block in Visual Basic](http://msdn.microsoft.com/en-us/8368e205-ed73-4185-a247-af84fb4fafa9) "},{"content":"<bpt id=\"p1\"> [</bpt>Try...Catch...Finally Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>","pos":[1499,1614],"source":" [Try...Catch...Finally Statement](../../visual-basic/language-reference/statements/try-catch-finally-statement.md)"}]}