{"content":"---\ntitle: \"ICLRMetaHost::RequestRuntimeLoadedNotification Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRMetaHost.RequestRuntimeLoadedNotification\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRMetaHost::RequestRuntimeLoadedNotification\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"RequestRuntimeLoadedNotification method [.NET Framework hosting]\"\n  - \"ICLRMetaHost::RequestRuntimeLoadedNotification method [.NET Framework hosting]\"\nms.assetid: 0d5ccc4d-0193-41f5-af54-45d7b70d5321\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 21\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICLRMetaHost::RequestRuntimeLoadedNotification Method\nProvides a callback function that is guaranteed to be called when a common language runtime (CLR) version is first loaded, but not yet started. This method supersedes the [LockClrVersion](../../../../docs/framework/unmanaged-api/hosting/lockclrversion-function.md) function.  \n  \n## Syntax  \n  \n```  \nHRESULT RequestRuntimeLoadedNotification (  \n    [in] RuntimeLoadedCallbackFnPtr pCallbackFunction);  \n```  \n  \n#### Parameters  \n `pCallbackFunction`  \n [in] The callback function that is invoked when a new runtime has been loaded.  \n  \n## Return Value  \n This method returns the following specific HRESULTs as well as HRESULT errors that indicate method failure.  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|The method completed successfully.|  \n|E_POINTER|`pCallbackFunction` is null.|  \n  \n## Remarks  \n The callback works in the following way:  \n  \n-   The callback is invoked only when a runtime is loaded for the first time.  \n  \n-   The callback is not invoked for reentrant loads of the same runtime.  \n  \n-   For non-reentrant runtime loads, calls to the callback function are serialized.  \n  \n The callback function has the following prototype:  \n  \n```  \ntypedef void (__stdcall *RuntimeLoadedCallbackFnPtr)(  \n                     ICLRRuntimeInfo *pRuntimeInfo,  \n                     CallbackThreadSetFnPtr pfnCallbackThreadSet,  \n                     CallbackThreadUnsetFnPtr pfnCallbackThreadUnset);  \n```  \n  \n The callback function prototypes are as follows:  \n  \n-   `pfnCallbackThreadSet`:  \n  \n    ```  \n    typedef HRESULT (__stdcall *CallbackThreadSetFnPtr)();  \n    ```  \n  \n-   `pfnCallbackThreadUnset`:  \n  \n    ```  \n    typedef HRESULT (__stdcall *CallbackThreadUnsetFnPtr)();  \n    ```  \n  \n If the host intends to load or cause another runtime to be loaded in a reentrant manner, the `pfnCallbackThreadSet` and `pfnCallbackThreadUnset` parameters that are provided in the callback function must be used in the following way:  \n  \n-   `pfnCallbackThreadSet` must be called by the thread that might cause a runtime load before such a load is attempted.  \n  \n-   `pfnCallbackThreadUnset` must be called when the thread will no longer cause such a runtime load (and before returning from the initial callback).  \n  \n-   `pfnCallbackThreadSet` and `pfnCallbackThreadUnset` are both non-reentrant.  \n  \n> [!NOTE]\n>  Host applications must not call `pfnCallbackThreadSet` and `pfnCallbackThreadUnset` outside the scope of the `pCallbackFunction` parameter.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MetaHost.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See Also  \n [ICLRMetaHost Interface](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-interface.md)   \n [Hosting](../../../../docs/framework/unmanaged-api/hosting/index.md)","nodes":[{"pos":[4,791],"nodes":[{"content":"ICLRMetaHost::RequestRuntimeLoadedNotification Method | Microsoft Docs","nodes":[{"pos":[0,70],"content":"ICLRMetaHost::RequestRuntimeLoadedNotification Method | Microsoft Docs","nodes":[{"content":"ICLRMetaHost::RequestRuntimeLoadedNotification Method | Microsoft Docs","pos":[0,70]}]}],"pos":[6,79],"yaml":true}],"content":"title: \"ICLRMetaHost::RequestRuntimeLoadedNotification Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRMetaHost.RequestRuntimeLoadedNotification\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRMetaHost::RequestRuntimeLoadedNotification\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"RequestRuntimeLoadedNotification method [.NET Framework hosting]\"\n  - \"ICLRMetaHost::RequestRuntimeLoadedNotification method [.NET Framework hosting]\"\nms.assetid: 0d5ccc4d-0193-41f5-af54-45d7b70d5321\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 21\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[798,851],"content":"ICLRMetaHost::RequestRuntimeLoadedNotification Method","linkify":"ICLRMetaHost::RequestRuntimeLoadedNotification Method","nodes":[{"content":"ICLRMetaHost::RequestRuntimeLoadedNotification Method","pos":[0,53]}]},{"content":"Provides a callback function that is guaranteed to be called when a common language runtime (CLR) version is first loaded, but not yet started.","pos":[852,995]},{"content":"This method supersedes the <bpt id=\"p1\">[</bpt>LockClrVersion<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/lockclrversion-function.md)</ept> function.","pos":[996,1126],"source":" This method supersedes the [LockClrVersion](../../../../docs/framework/unmanaged-api/hosting/lockclrversion-function.md) function."},{"pos":[1135,1141],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1270,1280],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The callback function that is invoked when a new runtime has been loaded.","pos":[1307,1385]},{"pos":[1394,1406],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"This method returns the following specific HRESULTs as well as HRESULT errors that indicate method failure.","pos":[1410,1517]},{"content":"HRESULT","pos":[1524,1531]},{"content":"Description","pos":[1532,1543]},{"content":"S_OK","pos":[1584,1588]},{"content":"The method completed successfully.","pos":[1589,1623]},{"content":"E_POINTER","pos":[1628,1637]},{"pos":[1638,1666],"content":"<ph id=\"ph1\">`pCallbackFunction`</ph> is null.","source":"`pCallbackFunction` is null."},{"pos":[1676,1683],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The callback works in the following way:","pos":[1687,1727]},{"content":"The callback is invoked only when a runtime is loaded for the first time.","pos":[1737,1810]},{"content":"The callback is not invoked for reentrant loads of the same runtime.","pos":[1820,1888]},{"content":"For non-reentrant runtime loads, calls to the callback function are serialized.","pos":[1898,1977]},{"content":"The callback function has the following prototype:","pos":[1984,2034]},{"content":"The callback function prototypes are as follows:","pos":[2307,2355]},{"pos":[2365,2388],"content":"<ph id=\"ph1\">`pfnCallbackThreadSet`</ph>:","source":"`pfnCallbackThreadSet`:"},{"pos":[2482,2507],"content":"<ph id=\"ph1\">`pfnCallbackThreadUnset`</ph>:","source":"`pfnCallbackThreadUnset`:"},{"pos":[2600,2833],"content":"If the host intends to load or cause another runtime to be loaded in a reentrant manner, the <ph id=\"ph1\">`pfnCallbackThreadSet`</ph> and <ph id=\"ph2\">`pfnCallbackThreadUnset`</ph> parameters that are provided in the callback function must be used in the following way:","source":"If the host intends to load or cause another runtime to be loaded in a reentrant manner, the `pfnCallbackThreadSet` and `pfnCallbackThreadUnset` parameters that are provided in the callback function must be used in the following way:"},{"pos":[2843,2959],"content":"<ph id=\"ph1\">`pfnCallbackThreadSet`</ph> must be called by the thread that might cause a runtime load before such a load is attempted.","source":"`pfnCallbackThreadSet` must be called by the thread that might cause a runtime load before such a load is attempted."},{"pos":[2969,3115],"content":"<ph id=\"ph1\">`pfnCallbackThreadUnset`</ph> must be called when the thread will no longer cause such a runtime load (and before returning from the initial callback).","source":"`pfnCallbackThreadUnset` must be called when the thread will no longer cause such a runtime load (and before returning from the initial callback)."},{"pos":[3125,3200],"content":"<ph id=\"ph1\">`pfnCallbackThreadSet`</ph> and <ph id=\"ph2\">`pfnCallbackThreadUnset`</ph> are both non-reentrant.","source":"`pfnCallbackThreadSet` and `pfnCallbackThreadUnset` are both non-reentrant."},{"pos":[3208,3358],"content":"[!NOTE]\n Host applications must not call `pfnCallbackThreadSet` and `pfnCallbackThreadUnset` outside the scope of the `pCallbackFunction` parameter.","leadings":["","> "],"nodes":[{"content":"Host applications must not call <ph id=\"ph1\">`pfnCallbackThreadSet`</ph> and <ph id=\"ph2\">`pfnCallbackThreadUnset`</ph> outside the scope of the <ph id=\"ph3\">`pCallbackFunction`</ph> parameter.","pos":[9,148],"source":"Host applications must not call `pfnCallbackThreadSet` and `pfnCallbackThreadUnset` outside the scope of the `pCallbackFunction` parameter."}]},{"pos":[3367,3379],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3383,3487],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3494,3516],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MetaHost.h","source":"**Header:** MetaHost.h"},{"pos":[3523,3573],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[3580,3688],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[3697,3705],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICLRMetaHost Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3709,3810],"source":"[ICLRMetaHost Interface](../../../../docs/framework/unmanaged-api/hosting/iclrmetahost-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Hosting<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/index.md)</ept>","pos":[3814,3882],"source":"[Hosting](../../../../docs/framework/unmanaged-api/hosting/index.md)"}]}