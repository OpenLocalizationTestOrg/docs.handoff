{"content":"---\ntitle: \"'<typename>' is a delegate type\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc32008\"\n  - \"vbc32008\"\nhelpviewer_keywords: \n  - \"BC32008\"\nms.assetid: dc6abba0-a9ad-450f-8899-87265bc84abc\n---\n# '\\<typename>' is a delegate type\n'\\<typename>' is a delegate type. Delegate construction permits only a single AddressOf expression as an argument list. Often an AddressOf expression can be used instead of a delegate construction.  \n  \n A `New` clause creating an instance of a delegate class supplies an invalid argument list to the delegate constructor.  \n  \n You can supply only a single `AddressOf` expression when creating a new delegate instance.  \n  \n This error can result if you do not pass any arguments to the delegate constructor, if you pass more than one argument, or if you pass a single argument that is not a valid `AddressOf` expression.  \n  \n **Error ID:** BC32008  \n  \n## To correct this error  \n  \n-   Use a single `AddressOf` expression in the argument list for the delegate class in the `New` clause.  \n  \n## See also\n\n- [New Operator](../../../visual-basic/language-reference/operators/new-operator.md)\n- [AddressOf Operator](../../../visual-basic/language-reference/operators/addressof-operator.md)\n- [Delegates](../../../visual-basic/programming-guide/language-features/delegates/index.md)\n- [How to: Invoke a Delegate Method](../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)\n","nodes":[{"pos":[4,192],"embed":true,"restype":"x-metadata","content":"title: \"'<typename>' is a delegate type\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc32008\"\n  - \"vbc32008\"\nhelpviewer_keywords: \n  - \"BC32008\"\nms.assetid: dc6abba0-a9ad-450f-8899-87265bc84abc","nodes":[{"content":"'<typename>' is a delegate type","nodes":[{"pos":[0,31],"content":"'<ph id=\"ph1\">&lt;typename&gt;</ph>' is a delegate type","source":"'<typename>' is a delegate type"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[199,231],"content":"'\\<typename>' is a delegate type","linkify":"'\\<typename>' is a delegate type","nodes":[{"content":"'<ph id=\"ph1\">\\&lt;</ph>typename&gt;' is a delegate type","pos":[0,32],"source":"'\\<typename>' is a delegate type"}]},{"content":"'<ph id=\"ph1\">\\&lt;</ph>typename&gt;' is a delegate type.","pos":[232,265],"source":"'\\<typename>' is a delegate type."},{"content":"Delegate construction permits only a single AddressOf expression as an argument list.","pos":[266,351]},{"content":"Often an AddressOf expression can be used instead of a delegate construction.","pos":[352,429]},{"pos":[436,554],"content":"A <ph id=\"ph1\">`New`</ph> clause creating an instance of a delegate class supplies an invalid argument list to the delegate constructor.","source":"A `New` clause creating an instance of a delegate class supplies an invalid argument list to the delegate constructor."},{"pos":[561,651],"content":"You can supply only a single <ph id=\"ph1\">`AddressOf`</ph> expression when creating a new delegate instance.","source":"You can supply only a single `AddressOf` expression when creating a new delegate instance."},{"pos":[658,854],"content":"This error can result if you do not pass any arguments to the delegate constructor, if you pass more than one argument, or if you pass a single argument that is not a valid <ph id=\"ph1\">`AddressOf`</ph> expression.","source":"This error can result if you do not pass any arguments to the delegate constructor, if you pass more than one argument, or if you pass a single argument that is not a valid `AddressOf` expression."},{"pos":[861,882],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32008","source":"**Error ID:** BC32008"},{"pos":[891,912],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[922,1022],"content":"Use a single <ph id=\"ph1\">`AddressOf`</ph> expression in the argument list for the delegate class in the <ph id=\"ph2\">`New`</ph> clause.","source":"Use a single `AddressOf` expression in the argument list for the delegate class in the `New` clause."},{"pos":[1031,1039],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1043,1125],"content":"<bpt id=\"p1\">[</bpt>New Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/new-operator.md)</ept>","source":"[New Operator](../../../visual-basic/language-reference/operators/new-operator.md)"},{"pos":[1128,1222],"content":"<bpt id=\"p1\">[</bpt>AddressOf Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept>","source":"[AddressOf Operator](../../../visual-basic/language-reference/operators/addressof-operator.md)"},{"pos":[1225,1314],"content":"<bpt id=\"p1\">[</bpt>Delegates<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept>","source":"[Delegates](../../../visual-basic/programming-guide/language-features/delegates/index.md)"},{"pos":[1317,1455],"content":"<bpt id=\"p1\">[</bpt>How to: Invoke a Delegate Method<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)</ept>","source":"[How to: Invoke a Delegate Method](../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)"}]}