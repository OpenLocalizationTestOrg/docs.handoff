<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-use-metadataexchangeclient-to-retrieve-metadata.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec4177e71c7d46dc5c908f01a051dc5a0df6baa4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-use-metadataexchangeclient-to-retrieve-metadata.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bc1bc9a7eb98cddf9b28f641f487d2a0be57e8b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcbbc7fbcc4763737feb8aae5856d0096430e660</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Use MetadataExchangeClient to Retrieve Metadata</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use MetadataExchangeClient to Retrieve Metadata</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> class to download metadata using the WS-MetadataExchange (MEX) protocol.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The retrieved metadata files are returned as a <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataSet&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The returned <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataSet&gt;</ph> object contains a collection of <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSection&gt;</ph> objects, each of which contains a specific metadata dialect and an identifier.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can write the returned metadata to files or, if the returned metadata contains Web Services Description Language (WSDL) documents, you can import the metadata using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> constructors that take an address use the binding on the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExchangeBindings&gt;</ph> static class that matches the Uniform Resource Identifier (URI) scheme of the address.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can alternatively use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> constructor that allows you to explicitly specify the binding to use.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The specified binding is used to resolve all metadata references.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Just like any other Windows Communication Foundation (WCF) client, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> type provides a constructor for loading client endpoint configurations using the endpoint configuration name.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The specified endpoint configuration must specify the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IMetadataExchange&gt;</ph> contract.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The address in the endpoint configuration is not loaded, so you must use one of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A&gt;</ph> overloads that take an address.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you specify the metadata address using an <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> instance, the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> assumes that the address points to a MEX endpoint.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you specify the metadata address as a URL, then you need to also specify which <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode&gt;</ph> to use, MEX or HTTP GET.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> resolves all references for you, including WSDL and XML Schema imports and includes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can disable this functionality by setting the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can control the maximum number of references to resolve using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use this property in conjunction with the <ph id="ph1">`MaxReceivedMessageSize`</ph> property on the binding to control how much metadata is retrieved.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To use MetadataExchangeClient to obtain metadata</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create a new <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> object by explicitly specifying a binding, an endpoint configuration name, or the address of the metadata.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Configure the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> to suit your needs.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, you can specify credentials to use when requesting metadata, control how metadata references are resolved, and set the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout%2A&gt;</ph> property to control how long the metadata request has to return before it times out.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Obtain the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataSet&gt;</ph> object that contains the retrieved metadata by calling one of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that you can only use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A&gt;</ph> overload that takes no arguments if you explicitly specified an address when constructing the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient&gt;</ph> to download and enumerate metadata files.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To compile this code example, you must reference the System.ServiceModel.dll assembly and import the <ph id="ph1">&lt;xref:System.ServiceModel.Description&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>