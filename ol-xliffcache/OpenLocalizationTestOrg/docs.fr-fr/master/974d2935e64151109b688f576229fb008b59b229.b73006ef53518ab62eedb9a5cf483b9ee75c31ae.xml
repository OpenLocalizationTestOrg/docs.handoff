{"content":"---\ntitle: \"Type parameters cannot be used as qualifiers\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32098\"\n  - \"bc32098\"\nhelpviewer_keywords: \n  - \"BC32098\"\nms.assetid: bab05325-dde8-4621-a5f6-368b5b7b2d76\n---\n# Type parameters cannot be used as qualifiers\nA programming element is qualified with a qualification string that includes a type parameter.  \n  \n A type parameter represents a requirement for a type that is to be supplied when the generic type is constructed. It does not represent a specific defined type. A qualification string must include only elements that are defined at compile time.  \n  \n The following statements can generate this error.  \n  \n```  \nPublic Function checkText(Of c As System.Windows.Forms.Control)(  \n    ByVal badText As String) As Boolean  \n  \n    Dim saveText As c.Text  \n    ' Insert code to look for badText within saveText.  \nEnd Function  \n```  \n  \n **Error ID:** BC32098  \n  \n## To correct this error  \n  \n1.  Remove the type parameter from the qualification string, or replace it with a defined type.  \n  \n2.  If you need to use a constructed type to locate the programming element being qualified, you must use additional program logic.  \n  \n## See also\n\n- [References to Declared Elements](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)\n- [Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../../visual-basic/language-reference/statements/type-list.md)\n","nodes":[{"pos":[4,205],"embed":true,"restype":"x-metadata","content":"title: \"Type parameters cannot be used as qualifiers\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32098\"\n  - \"bc32098\"\nhelpviewer_keywords: \n  - \"BC32098\"\nms.assetid: bab05325-dde8-4621-a5f6-368b5b7b2d76","nodes":[{"content":"Type parameters cannot be used as qualifiers","nodes":[{"pos":[0,44],"content":"Type parameters cannot be used as qualifiers","nodes":[{"content":"Type parameters cannot be used as qualifiers","pos":[0,44]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[212,256],"content":"Type parameters cannot be used as qualifiers","linkify":"Type parameters cannot be used as qualifiers","nodes":[{"content":"Type parameters cannot be used as qualifiers","pos":[0,44]}]},{"content":"A programming element is qualified with a qualification string that includes a type parameter.","pos":[257,351]},{"content":"A type parameter represents a requirement for a type that is to be supplied when the generic type is constructed.","pos":[358,471]},{"content":"It does not represent a specific defined type.","pos":[472,518]},{"content":"A qualification string must include only elements that are defined at compile time.","pos":[519,602]},{"content":"The following statements can generate this error.","pos":[609,658]},{"pos":[893,914],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32098","source":"**Error ID:** BC32098"},{"pos":[923,944],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Remove the type parameter from the qualification string, or replace it with a defined type.","pos":[954,1045]},{"content":"If you need to use a constructed type to locate the programming element being qualified, you must use additional program logic.","pos":[1055,1182]},{"pos":[1191,1199],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1203,1348],"content":"<bpt id=\"p1\">[</bpt>References to Declared Elements<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>","source":"[References to Declared Elements](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)"},{"pos":[1351,1469],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[1472,1549],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../../visual-basic/language-reference/statements/type-list.md)"}]}