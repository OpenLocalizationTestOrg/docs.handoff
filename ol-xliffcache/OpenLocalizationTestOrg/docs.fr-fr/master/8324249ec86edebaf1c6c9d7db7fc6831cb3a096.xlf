<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-expose-a-contract-to-soap-and-web-clients.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8324249ec86edebaf1c6c9d7db7fc6831cb3a096</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-expose-a-contract-to-soap-and-web-clients.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12b2e4e47f225e615b02613c480a9ac42c153adc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8abd66b157c221a0fdd75949369a1ef229d76983</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Expose a Contract to SOAP and Web Clients | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Expose a Contract to SOAP and Web Clients</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> makes endpoints available only to SOAP clients.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">[</bpt>How to: Create a Basic WCF Web HTTP Service<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-basic-wcf-web-http-service.md)</ept>, an endpoint is made available to non-SOAP clients.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There may be times when you want to make the same contract available both ways, as a Web endpoint and as a SOAP endpoint.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic shows an example of how to do this.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To define the service contract</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Define a service contract using an interface marked with the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> and the <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> attributes, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> maps POST calls to the operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can, however, specify the method to map to the operation by specifying a "method=" parameter.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> does not have a "method=" parameter and only maps GET calls to the service operation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Implement the service contract, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To host the service</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> with <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> for the SOAP endpoint, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> with <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> for the non-SOAP endpoint and add the <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> to the endpoint, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Open()`</ph> on a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance to open the service host, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To call service operations mapped to GET in Internet Explorer</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Open Internet Explorer and type "<ph id="ph1">`http://localhost:8000/Web/EchoWithGet?s=Hello, world!`</ph>" and press ENTER.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The URL contains the base address of the service ("http://localhost:8000/"), the relative address of the endpoint (""), the service operation to call ("EchoWithGet"), and a question mark followed by a list of named parameters separated by an ampersand (&amp;).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To call service operations on the Web endpoint in code</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebChannelFactory%601&gt;</ph> within a <ph id="ph2">`using`</ph> block, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Close()`</ph> is automatically called on the channel at the end of the <ph id="ph2">`using`</ph> block.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create the channel and call the service, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To call service operations on the SOAP endpoint</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> within a <ph id="ph2">`using`</ph> block, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create the channel and call the service, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To close the service host</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Close the service host, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following is the full code listing for this topic.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When compiling Service.cs, reference System.ServiceModel.dll and System.ServiceModel.Web.dll.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Web HTTP Programming Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>