{"content":"---\ntitle: \"How to: Trigger Menu Events for Toolbar Buttons | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"examples [Windows Forms], toolbars\"\n  - \"ToolBar control [Windows Forms], click event handlers\"\n  - \"ToolBar control [Windows Forms], coding button click events\"\n  - \"toolbars [Windows Forms], click event handlers\"\nms.assetid: 98374f70-993d-4ca4-89fb-48fea6ce5b45\ncaps.latest.revision: 16\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Trigger Menu Events for Toolbar Buttons\n> [!NOTE]\n>  The <xref:System.Windows.Forms.ToolStrip> control replaces and adds functionality to the <xref:System.Windows.Forms.ToolBar> control; however, the <xref:System.Windows.Forms.ToolBar> control is retained for both backward compatibility and future use, if you choose.  \n  \n If your Windows Form features a <xref:System.Windows.Forms.ToolBar> control with toolbar buttons, you will want to know which button the user clicks.  \n  \n On the <xref:System.Windows.Forms.ToolBar.ButtonClick> event of the <xref:System.Windows.Forms.ToolBar> control, you can evaluate the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> property of the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> class. In the example below, a message box is shown, indicating which button was clicked. For details, see <xref:System.Windows.Forms.MessageBox>.  \n  \n The example below assumes a <xref:System.Windows.Forms.ToolBar> control has been added to a Windows Form.  \n  \n### To handle the Click event on a toolbar  \n  \n1.  In a procedure, add toolbar buttons to the <xref:System.Windows.Forms.ToolBar> control.  \n  \n    ```vb  \n    Public Sub ToolBarConfig()  \n    ' Instantiate the toolbar buttons, set their Text properties  \n    ' and add them to the ToolBar control.  \n       ToolBar1.Buttons.Add(New ToolBarButton(\"One\"))  \n       ToolBar1.Buttons.Add(New ToolBarButton(\"Two\"))  \n       ToolBar1.Buttons.Add(New ToolBarButton(\"Three\"))  \n    ' Add the event handler delegate.  \n       AddHandler ToolBar1.ButtonClick, AddressOf Me.ToolBar1_ButtonClick  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    public void ToolBarConfig()   \n    {  \n       toolBar1.Buttons.Add(new ToolBarButton(\"One\"));  \n       toolBar1.Buttons.Add(new ToolBarButton(\"Two\"));  \n       toolBar1.Buttons.Add(new ToolBarButton(\"Three\"));  \n  \n       toolBar1.ButtonClick +=   \n          new ToolBarButtonClickEventHandler(this.toolBar1_ButtonClick);  \n    }  \n  \n    ```  \n  \n    ```cpp  \n    public:  \n       void ToolBarConfig()  \n       {  \n          toolBar1->Buttons->Add(gcnew ToolBarButton(\"One\"));  \n          toolBar1->Buttons->Add(gcnew ToolBarButton(\"Two\"));  \n          toolBar1->Buttons->Add(gcnew ToolBarButton(\"Three\"));  \n  \n          toolBar1->ButtonClick +=   \n             gcnew ToolBarButtonClickEventHandler(this,  \n             &Form1::toolBar1_ButtonClick);  \n       }  \n    ```  \n  \n2.  Add an event handler for the <xref:System.Windows.Forms.ToolBar> control's <xref:System.Windows.Forms.ToolBar.ButtonClick> event. Use a case switching statement and the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> class to determine the toolbar button that was clicked. Based on this, show an appropriate message box.  \n  \n    > [!NOTE]\n    >  A message box is being used solely as a placeholder in this example. Feel free to add other code to execute when the toolbar buttons are clicked.  \n  \n    ```vb  \n    Protected Sub ToolBar1_ButtonClick(ByVal sender As Object, _  \n    ByVal e As ToolBarButtonClickEventArgs)  \n    ' Evaluate the Button property of the ToolBarButtonClickEventArgs  \n    ' to determine which button was clicked.  \n       Select Case ToolBar1.Buttons.IndexOf(e.Button)  \n         Case 0  \n           MessageBox.Show(\"First toolbar button clicked\")  \n         Case 1  \n           MessageBox.Show(\"Second toolbar button clicked\")  \n         Case 2  \n           MessageBox.Show(\"Third toolbar button clicked\")  \n       End Select  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    protected void toolBar1_ButtonClick(object sender,  \n    ToolBarButtonClickEventArgs e)  \n    {  \n       // Evaluate the Button property of the ToolBarButtonClickEventArgs  \n       // to determine which button was clicked.  \n       switch (toolBar1.Buttons.IndexOf(e.Button))  \n       {  \n          case 0 :  \n             MessageBox.Show(\"First toolbar button clicked\");  \n             break;  \n          case 1 :  \n             MessageBox.Show(\"Second toolbar button clicked\");  \n             break;  \n          case 2 :  \n             MessageBox.Show(\"Third toolbar button clicked\");  \n             break;  \n       }  \n    }  \n  \n    ```  \n  \n    ```cpp  \n    protected:  \n       void toolBar1_ButtonClick(System::Object ^ sender,  \n          ToolBarButtonClickEventArgs ^ e)  \n       {  \n         // Evaluate the Button property of the ToolBarButtonClickEventArgs  \n         // to determine which button was clicked.  \n          switch (toolBar1->Buttons->IndexOf(e->Button))  \n          {  \n             case 0 :  \n                MessageBox::Show(\"First toolbar button clicked\");  \n                break;  \n             case 1 :  \n                MessageBox::Show(\"Second toolbar button clicked\");  \n                break;  \n             case 2 :  \n                MessageBox::Show(\"Third toolbar button clicked\");  \n                break;  \n          }  \n       }  \n    ```  \n  \n## See Also  \n <xref:System.Windows.Forms.ToolBar>   \n [How to: Add Buttons to a ToolBar Control](../../../../docs/framework/winforms/controls/how-to-add-buttons-to-a-toolbar-control.md)   \n [How to: Define an Icon for a ToolBar Button](../../../../docs/framework/winforms/controls/how-to-define-an-icon-for-a-toolbar-button.md)   \n [ToolBar Control](../../../../docs/framework/winforms/controls/toolbar-control-windows-forms.md)","nodes":[{"pos":[12,76],"content":"How to: Trigger Menu Events for Toolbar Buttons | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Trigger Menu Events for Toolbar Buttons | Microsoft Docs","pos":[0,64]}]},{"pos":[656,703],"content":"How to: Trigger Menu Events for Toolbar Buttons","linkify":"How to: Trigger Menu Events for Toolbar Buttons","nodes":[{"content":"How to: Trigger Menu Events for Toolbar Buttons","pos":[0,47]}]},{"pos":[706,982],"content":"[!NOTE]\n The <xref:System.Windows.Forms.ToolStrip> control replaces and adds functionality to the <xref:System.Windows.Forms.ToolBar> control; however, the <xref:System.Windows.Forms.ToolBar> control is retained for both backward compatibility and future use, if you choose.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control replaces and adds functionality to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control; however, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control is retained for both backward compatibility and future use, if you choose.","pos":[9,274],"source":" The <xref:System.Windows.Forms.ToolStrip> control replaces and adds functionality to the <xref:System.Windows.Forms.ToolBar> control; however, the <xref:System.Windows.Forms.ToolBar> control is retained for both backward compatibility and future use, if you choose."}]},{"content":"If your Windows Form features a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control with toolbar buttons, you will want to know which button the user clicks.","pos":[989,1138],"source":"If your Windows Form features a <xref:System.Windows.Forms.ToolBar> control with toolbar buttons, you will want to know which button the user clicks."},{"content":"On the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar.ButtonClick&gt;</ph> event of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control, you can evaluate the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.ToolBarButtonClickEventArgs&gt;</ph> class.","pos":[1145,1423],"source":"On the <xref:System.Windows.Forms.ToolBar.ButtonClick> event of the <xref:System.Windows.Forms.ToolBar> control, you can evaluate the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> property of the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> class."},{"content":"In the example below, a message box is shown, indicating which button was clicked.","pos":[1424,1506]},{"content":"For details, see <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.","pos":[1507,1563],"source":" For details, see <xref:System.Windows.Forms.MessageBox>."},{"content":"The example below assumes a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control has been added to a Windows Form.","pos":[1570,1675],"source":"The example below assumes a <xref:System.Windows.Forms.ToolBar> control has been added to a Windows Form."},{"pos":[1685,1723],"content":"To handle the Click event on a toolbar","linkify":"To handle the Click event on a toolbar","nodes":[{"content":"To handle the Click event on a toolbar","pos":[0,38]}]},{"content":"In a procedure, add toolbar buttons to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control.","pos":[1733,1820],"source":"In a procedure, add toolbar buttons to the <xref:System.Windows.Forms.ToolBar> control."},{"content":"Add an event handler for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ToolBar.ButtonClick&gt;</ph> event.","pos":[3102,3231],"source":"Add an event handler for the <xref:System.Windows.Forms.ToolBar> control's <xref:System.Windows.Forms.ToolBar.ButtonClick> event."},{"content":"Use a case switching statement and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBarButtonClickEventArgs&gt;</ph> class to determine the toolbar button that was clicked.","pos":[3232,3382],"source":" Use a case switching statement and the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> class to determine the toolbar button that was clicked."},{"content":"Based on this, show an appropriate message box.","pos":[3383,3430]},{"pos":[3442,3602],"content":"[!NOTE]\nA message box is being used solely as a placeholder in this example. Feel free to add other code to execute when the toolbar buttons are clicked.","leadings":["","    >  "],"nodes":[{"content":"A message box is being used solely as a placeholder in this example. Feel free to add other code to execute when the toolbar buttons are clicked.","pos":[8,153],"nodes":[{"content":"A message box is being used solely as a placeholder in this example.","pos":[0,68]},{"content":"Feel free to add other code to execute when the toolbar buttons are clicked.","pos":[69,145]}]}]},{"pos":[5605,5613],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>How to: Add Buttons to a ToolBar Control<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-add-buttons-to-a-toolbar-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[5656,5789],"source":" [How to: Add Buttons to a ToolBar Control](../../../../docs/framework/winforms/controls/how-to-add-buttons-to-a-toolbar-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Define an Icon for a ToolBar Button<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-define-an-icon-for-a-toolbar-button.md)</ept><ph id=\"ph1\"> </ph>","pos":[5792,5931],"source":" [How to: Define an Icon for a ToolBar Button](../../../../docs/framework/winforms/controls/how-to-define-an-icon-for-a-toolbar-button.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ToolBar Control<ept id=\"p1\">](../../../../docs/framework/winforms/controls/toolbar-control-windows-forms.md)</ept>","pos":[5934,6031],"source":" [ToolBar Control](../../../../docs/framework/winforms/controls/toolbar-control-windows-forms.md)"}]}