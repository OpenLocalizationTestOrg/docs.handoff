<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbc649109c652cbca95e2eadbc42f06786064509</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\migrating-wse-3-0-web-services-to-wcf.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab55978e385228324498096fc6b6f6ffc16cc1ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44d36c16694246a968031c7e5efc3b919a564904</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrating WSE 3.0 Web Services to WCF | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Migrating WSE 3.0 Web Services to WCF</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The benefits of migrating WSE 3.0 Web services to <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> include improved performance and the support of additional transports, additional security scenarios, and WS-* specifications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A Web service that is migrated from WSE 3.0 to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> can experience up to a 200% to 400% performance improvement.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about the transports supported by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see <bpt id="p1">[</bpt>Choosing a Transport<ept id="p1">](../../../../docs/framework/wcf/feature-details/choosing-a-transport.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For a list of the scenarios supported by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see <bpt id="p1">[</bpt>Common Security Scenarios<ept id="p1">](../../../../docs/framework/wcf/feature-details/common-security-scenarios.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For a list of the specifications that are supported by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see <bpt id="p1">[</bpt>Web Services Protocols Interoperability Guide<ept id="p1">](../../../../docs/framework/wcf/feature-details/web-services-protocols-interoperability-guide.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following sections provide guidance on how to migrate a specific feature of a WSE 3.0 Web service to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>General</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>WSE 3.0 and <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications include wire-level interoperability and a common set of terminology.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>WSE 3.0 and <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications are wire-level interoperable based on the set of WS-* specifications that they both support.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When a WSE 3.0 or <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> application is developed there is a common set of terminology, such as the names of the turnkey security assertions in WSE and the authentication modes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Although there are many similar aspects between the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> and ASP.NET or WSE 3.0 programming models, they are different.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For details about the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> programming model, see <bpt id="p1">[</bpt>Basic Programming Lifecycle<ept id="p1">](../../../../docs/framework/wcf/basic-programming-lifecycle.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To migrate a WSE Web service to WCF the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool can be used to generate a client.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>That client however contains interfaces and classes that can be used as a starting point for a WCF service too.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The interfaces that are generated have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute applied to the members of the contract with the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> property set to <ph id="ph3">`*`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When a WSE client calls a Web service with this setting, the following exception is thrown: <bpt id="p1">**</bpt>Web.Services3.ResponseProcessingException: WSE910: An error happened during the processing of a response message, and you can find the error in the inner exception<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To mitigate this, set the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to a non-<ph id="ph3">`null`</ph> value, such as <ph id="ph4">`http://Microsoft.WCF.Documentation/ResponseToOCAMethod`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Security</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Web services that are secured using a policy file</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services can use a configuration file to secure a service and that mechanism is similar to a WSE 3.0 policy file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In WSE 3.0 when securing a Web service using a policy file, you use either a turnkey security assertion or a custom policy assertion.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The turnkey security assertions map closely to the authentication mode of a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security binding element.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Not only are the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> authentication modes and WSE 3.0 turnkey security assertions named the same or similarly, they secure the messages using the same credential types.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For instance, the <ph id="ph1">`usernameForCertificate`</ph> turnkey security assertion in WSE 3.0 maps to the <ph id="ph2">`UsernameForCertificate`</ph> authentication mode in <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code examples demonstrate how a minimal policy that uses the <ph id="ph1">`usernameForCertificate`</ph> turnkey security assertion in WSE 3.0 maps to a <ph id="ph2">`UsernameForCertificate`</ph> authentication mode in <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> in a custom binding.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WSE 3.0<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WCF<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To migrate the security settings of a WSE 3.0 Web service that are specified in a policy file to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, a custom binding must be created in a configuration file and the turnkey security assertion must be set to its equivalent authentication mode.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Additionally, the custom binding must be configured to use the August 2004 WS-Addressing specification when WSE 3.0 clients communicate with the service.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When the migrated <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service does not require communication with WSE 3.0 clients and must only maintain security parity, consider using the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> system-defined bindings with appropriate security settings instead of creating a custom binding.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping between a WSE 3.0 policy file and the equivalent custom binding in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Turnkey Security Assertion</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>WCF custom binding configuration</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>usernameOverTransportSecurity /&gt;</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>mutualCertificate10Security /&gt;</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>usernameForCertificateSecurity /&gt;</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>anonymousForCertificateSecurity /&gt;</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>kerberosSecurity /&gt;</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>mutualCertificate11Security /&gt;</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about creating custom bindings in WCF, see <bpt id="p1">[</bpt>Custom Bindings<ept id="p1">](../../../../docs/framework/wcf/extending/custom-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Web services that are secured using application code</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Whether WSE 3.0 or <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> is used, the security requirements can be specified in application code instead of in configuration.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In WSE 3.0, this is accomplished by creating a class that derives from the <ph id="ph1">`Policy`</ph> class and then by adding the requirements by calling the <ph id="ph2">`Add`</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more details about specifying the security requirements in code, see <bpt id="p1">[</bpt>How to: Secure a Web Service Without Using a Policy File<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73747)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, to specify security requirements in code, create an instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> class and add an instance of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> to the <ph id="ph4">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The security assertion requirements are set using the static authentication mode helper methods of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more details about specifying security requirements in code using <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see <bpt id="p1">[</bpt>How to: Create a Custom Binding Using the SecurityBindingElement<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)</ept> and <bpt id="p2">[</bpt>How to: Create a SecurityBindingElement for a Specified Authentication Mode<ept id="p2">](../../../../docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Custom Policy Assertion</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In WSE 3.0 there are two types of custom policy assertions: those that secure a SOAP message and those that do not secure a SOAP message.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Policy assertions that secure SOAP messages derive from WSE 3.0 <ph id="ph1">`SecurityPolicyAssertion`</ph> class and the conceptual equivalent in <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> is the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An important point to note is that the WSE 3.0 turnkey security assertions are a subset of the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> authentication modes.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you have created a custom policy assertion in WSE 3.0, there may be an equivalent <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> authentication mode.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, WSE 3.0 does not provide a CertificateOverTransport security assertion that is the equivalent to <ph id="ph1">`UsernameOverTransport`</ph> turnkey security assertion, but uses an X.509 certificate for client authentication purposes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you have defined your own custom policy assertion for this scenario, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> makes the migration straightforward.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> defines an authentication mode for this scenario, so you can take advantage of the static authentication mode helper methods to configure a <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph><ph id="ph3">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When there is not a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> authentication mode that is equivalent to a custom policy assertion that secures SOAP messages, derive a class from <ph id="ph2">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement&gt;</ph><ph id="ph5">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> classes and specify the equivalent binding element.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more details, see <bpt id="p1">[</bpt>How to: Create a Custom Binding Using the SecurityBindingElement<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To convert a custom policy assertion that does not secure a SOAP message, see <bpt id="p1">[</bpt>Filtering<ept id="p1">](../../../../docs/framework/wcf/feature-details/filtering.md)</ept> and the sample <bpt id="p2">[</bpt>Custom Message Interceptor<ept id="p2">](../../../../docs/framework/wcf/samples/custom-message-interceptor.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Custom Security Token</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> programming model for creating a custom token is different than WSE 3.0.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For details about creating a custom token in WSE, see <bpt id="p1">[</bpt>Creating Custom Security Tokens<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73750)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For details about creating a custom token in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see <bpt id="p1">[</bpt>How to: Create a Custom Token<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-token.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Custom Token Manager</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The programming model for creating a custom token manager is different in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> than WSE 3.0.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For details about how to create a custom token manager and the other components that are required for a custom security token, see <bpt id="p1">[</bpt>How to: Create a Custom Token<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-token.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you have created a custom <ph id="ph1">`UsernameToken`</ph> security token manager, <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides an easier mechanism to specify the authentication logic than creating a custom security token manager.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more details, see <bpt id="p1">[</bpt>How to: Use a Custom User Name and Password Validator<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-use-a-custom-user-name-and-password-validator.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Web services that use MTOM encoded SOAP messages</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Like a WSE 3 application, a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> application can specify the MTOM message encoding in configuration.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To migrate this setting, add the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>mtomMessageEncoding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/mtommessageencoding.md)</ept> to the binding for the service.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how MTOM encoding is specified in WSE 3.0 for a service that is equivalent in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WSE 3.0<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WCF<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Messaging</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>WSE 3.0 Applications that use the WSE Messaging API</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When the WSE Messaging API is used to gain direct access to the XML that is communicated between the client and Web service, the application can be converted to use "Plain Old XML" (POX).</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more details about POX, see <bpt id="p1">[</bpt>Interoperability with POX Applications<ept id="p1">](../../../../docs/framework/wcf/feature-details/interoperability-with-pox-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more details about the WSE Messaging API, see <bpt id="p1">[</bpt>Sending and Receiving SOAP Messages Using WSE Messaging API<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73755)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Transports</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>TCP</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>By default, WSE 3.0 clients and Web services that send SOAP messages using the TCP transport do not interoperate with <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> clients and Web services.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This incompatibility is due to differences in the framing used in the TCP protocol and for performance reasons.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>However, a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> sample details how to implement a custom TCP session that interoperates with WSE 3.0.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For details about this sample, see <bpt id="p1">[</bpt>Transport: WSE 3.0 TCP Interoperability<ept id="p1">](../../../../docs/framework/wcf/samples/transport-wse-3-0-tcp-interoperability.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To specify that a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> application uses the TCP transport, use the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>netTcpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/nettcpbinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Custom Transport</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The equivalent of a WSE 3.0 custom transport in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> is a channel extension.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For details about creating a channel extension, see <bpt id="p1">[</bpt>Extending the Channel Layer<ept id="p1">](../../../../docs/framework/wcf/extending/extending-the-channel-layer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic Programming Lifecycle<ept id="p1">](../../../../docs/framework/wcf/basic-programming-lifecycle.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom Bindings<ept id="p1">](../../../../docs/framework/wcf/extending/custom-bindings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Custom Binding Using the SecurityBindingElement<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a SecurityBindingElement for a Specified Authentication Mode<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>