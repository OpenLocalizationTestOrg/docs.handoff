{"content":"---\ntitle: \"loadFromContext MDA\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"MDAs (managed debugging assistants), LoadFrom context\"\n  - \"managed debugging assistants (MDAs), LoadFrom context\"\n  - \"LoadFrom context\"\n  - \"LoadFromContext MDA\"\nms.assetid: a9b14db1-d3a9-4150-a767-dcf3aea0071a\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# loadFromContext MDA\nThe `loadFromContext` managed debugging assistant (MDA) is activated if an assembly is loaded into the `LoadFrom` context. This situation can occur as a result of calling <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> or other similar methods.  \n  \n## Symptoms  \n The use of some loader methods can result in assemblies being loaded in the `LoadFrom` context. The use of this context can result in unexpected behavior for serialization, casting, and dependency resolution. In general, it is recommended that assemblies be loaded into the `Load` context to avoid these problems. It is difficult to determine which context an assembly has been loaded into without this MDA.  \n  \n## Cause  \n Generally, an assembly was loaded into the `LoadFrom` context if it was loaded from a path outside the `Load` context, such as the global assembly cache or the <xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType> property.  \n  \n## Resolution  \n Configure applications such that <xref:System.Reflection.Assembly.LoadFrom%2A> calls are no longer needed. You can use the following techniques for doing so:  \n  \n-   Install assemblies in the global assembly cache.  \n  \n-   Place assemblies in the <xref:System.AppDomainSetup.ApplicationBase%2A> directory for the <xref:System.AppDomain>. In the case of the default domain, the <xref:System.AppDomainSetup.ApplicationBase%2A> directory is the one that contains the executable file that started the process. This might also require creating a new <xref:System.AppDomain> if it is not convenient to move the assembly.  \n  \n-   Add a probing path to your application configuration (.config) file or to secondary  application domains if dependent assemblies are in child directories relative to the executable.  \n  \n In each case, the code can be changed to use the <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.  \n  \n## Effect on the Runtime  \n The MDA does not have any effect on the CLR. It reports the context that was used as a result of a load request.  \n  \n## Output  \n The MDA reports that the assembly was loaded into the `LoadFrom` context. It specifies the simple name of the assembly and the path. It also suggests mitigations to avoid using the `LoadFrom` context.  \n  \n## Configuration  \n  \n```xml  \n<mdaConfig>  \n  <assistants>  \n    <loadFromContext />  \n  </assistants>  \n</mdaConfig>  \n```  \n  \n## Example  \n The following code example demonstrates a situation that can activate this MDA:  \n  \n```csharp\nusing System.Reflection;  \nnamespace ConsoleApplication1  \n{  \n    class Program  \n    {  \n        static void Main(string[] args)  \n        {  \n            // The following call caused the LoadFrom context to be used  \n            // because the assembly is loaded using LoadFrom and the path is   \n            // located outside of the Load context probing path.   \n            Assembly.LoadFrom(@\"C:\\Text\\Test.dll\");  \n        }  \n    }  \n}  \n```  \n  \n## See also\n\n- [Diagnosing Errors with Managed Debugging Assistants](../../../docs/framework/debug-trace-profile/diagnosing-errors-with-managed-debugging-assistants.md)\n","nodes":[{"pos":[4,331],"embed":true,"restype":"x-metadata","content":"title: \"loadFromContext MDA\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"MDAs (managed debugging assistants), LoadFrom context\"\n  - \"managed debugging assistants (MDAs), LoadFrom context\"\n  - \"LoadFrom context\"\n  - \"LoadFromContext MDA\"\nms.assetid: a9b14db1-d3a9-4150-a767-dcf3aea0071a\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"loadFromContext MDA","nodes":[{"pos":[0,19],"content":"loadFromContext MDA","nodes":[{"content":"loadFromContext MDA","pos":[0,19]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[338,357],"content":"loadFromContext MDA","linkify":"loadFromContext MDA","nodes":[{"content":"loadFromContext MDA","pos":[0,19]}]},{"content":"The <ph id=\"ph1\">`loadFromContext`</ph> managed debugging assistant (MDA) is activated if an assembly is loaded into the <ph id=\"ph2\">`LoadFrom`</ph> context.","pos":[358,480],"source":"The `loadFromContext` managed debugging assistant (MDA) is activated if an assembly is loaded into the `LoadFrom` context."},{"content":"This situation can occur as a result of calling <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> or other similar methods.","pos":[481,629],"source":" This situation can occur as a result of calling <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> or other similar methods."},{"pos":[638,646],"content":"Symptoms","linkify":"Symptoms","nodes":[{"content":"Symptoms","pos":[0,8]}]},{"content":"The use of some loader methods can result in assemblies being loaded in the <ph id=\"ph1\">`LoadFrom`</ph> context.","pos":[650,745],"source":"The use of some loader methods can result in assemblies being loaded in the `LoadFrom` context."},{"content":"The use of this context can result in unexpected behavior for serialization, casting, and dependency resolution.","pos":[746,858]},{"content":"In general, it is recommended that assemblies be loaded into the <ph id=\"ph1\">`Load`</ph> context to avoid these problems.","pos":[859,963],"source":" In general, it is recommended that assemblies be loaded into the `Load` context to avoid these problems."},{"content":"It is difficult to determine which context an assembly has been loaded into without this MDA.","pos":[964,1057]},{"pos":[1066,1071],"content":"Cause","linkify":"Cause","nodes":[{"content":"Cause","pos":[0,5]}]},{"pos":[1075,1321],"content":"Generally, an assembly was loaded into the <ph id=\"ph1\">`LoadFrom`</ph> context if it was loaded from a path outside the <ph id=\"ph2\">`Load`</ph> context, such as the global assembly cache or the <ph id=\"ph3\">&lt;xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType&gt;</ph> property.","source":"Generally, an assembly was loaded into the `LoadFrom` context if it was loaded from a path outside the `Load` context, such as the global assembly cache or the <xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType> property."},{"pos":[1330,1340],"content":"Resolution","linkify":"Resolution","nodes":[{"content":"Resolution","pos":[0,10]}]},{"content":"Configure applications such that <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFrom%2A&gt;</ph> calls are no longer needed.","pos":[1344,1450],"source":"Configure applications such that <xref:System.Reflection.Assembly.LoadFrom%2A> calls are no longer needed."},{"content":"You can use the following techniques for doing so:","pos":[1451,1501]},{"content":"Install assemblies in the global assembly cache.","pos":[1511,1559]},{"content":"Place assemblies in the <ph id=\"ph1\">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> directory for the <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[1569,1683],"source":"Place assemblies in the <xref:System.AppDomainSetup.ApplicationBase%2A> directory for the <xref:System.AppDomain>."},{"content":"In the case of the default domain, the <ph id=\"ph1\">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> directory is the one that contains the executable file that started the process.","pos":[1684,1851],"source":" In the case of the default domain, the <xref:System.AppDomainSetup.ApplicationBase%2A> directory is the one that contains the executable file that started the process."},{"content":"This might also require creating a new <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> if it is not convenient to move the assembly.","pos":[1852,1960],"source":" This might also require creating a new <xref:System.AppDomain> if it is not convenient to move the assembly."},{"content":"Add a probing path to your application configuration (.config) file or to secondary  application domains if dependent assemblies are in child directories relative to the executable.","pos":[1970,2151]},{"pos":[2158,2285],"content":"In each case, the code can be changed to use the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType&gt;</ph> method.","source":"In each case, the code can be changed to use the <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method."},{"pos":[2294,2315],"content":"Effect on the Runtime","linkify":"Effect on the Runtime","nodes":[{"content":"Effect on the Runtime","pos":[0,21]}]},{"content":"The MDA does not have any effect on the CLR.","pos":[2319,2363]},{"content":"It reports the context that was used as a result of a load request.","pos":[2364,2431]},{"pos":[2440,2446],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"content":"The MDA reports that the assembly was loaded into the <ph id=\"ph1\">`LoadFrom`</ph> context.","pos":[2450,2523],"source":"The MDA reports that the assembly was loaded into the `LoadFrom` context."},{"content":"It specifies the simple name of the assembly and the path.","pos":[2524,2582]},{"content":"It also suggests mitigations to avoid using the <ph id=\"ph1\">`LoadFrom`</ph> context.","pos":[2583,2650],"source":" It also suggests mitigations to avoid using the `LoadFrom` context."},{"pos":[2659,2672],"content":"Configuration","linkify":"Configuration","nodes":[{"content":"Configuration","pos":[0,13]}]},{"pos":[2789,2796],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates a situation that can activate this MDA:","pos":[2800,2879]},{"pos":[3353,3361],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3365,3518],"content":"<bpt id=\"p1\">[</bpt>Diagnosing Errors with Managed Debugging Assistants<ept id=\"p1\">](../../../docs/framework/debug-trace-profile/diagnosing-errors-with-managed-debugging-assistants.md)</ept>","source":"[Diagnosing Errors with Managed Debugging Assistants](../../../docs/framework/debug-trace-profile/diagnosing-errors-with-managed-debugging-assistants.md)"}]}