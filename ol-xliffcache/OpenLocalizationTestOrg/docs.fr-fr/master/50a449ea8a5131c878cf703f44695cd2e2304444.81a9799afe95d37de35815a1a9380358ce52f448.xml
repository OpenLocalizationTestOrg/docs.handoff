{"content":"---\ntitle: \"Handles Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"Handles\"\n  - \"vb.Handles\"\nhelpviewer_keywords: \n  - \"Handles keyword [Visual Basic]\"\nms.assetid: 1b051c0e-f499-42f6-acb5-6f4f27824b40\n---\n# Handles Clause (Visual Basic)\nDeclares that a procedure handles a specified event.  \n  \n## Syntax  \n  \n```  \nproceduredeclaration Handles eventlist  \n```  \n  \n## Parts  \n `proceduredeclaration`  \n The `Sub` procedure declaration for the procedure that will handle the event.  \n  \n `eventlist`  \n List of the events for `proceduredeclaration` to handle, separated by commas. The events must be raised by either the base class for the current class, or by an object declared using the `WithEvents` keyword.  \n  \n## Remarks  \n Use the `Handles` keyword at the end of a procedure declaration to cause it to handle events raised by an object variable declared using the `WithEvents` keyword. The `Handles` keyword can also be used in a derived class to handle events from a base class.  \n  \n The `Handles` keyword and the `AddHandler` statement both allow you to specify that particular procedures handle particular events, but there are differences. Use the `Handles` keyword when defining a procedure to specify that it handles a particular event. The `AddHandler` statement connects procedures to events at run time. For more information, see [AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md).  \n  \n For custom events, the application invokes the event's `AddHandler` accessor when it adds the procedure as an event handler. For more information on custom events, see [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md).  \n  \n## Example  \n [!code-vb[VbVbalrEvents#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrEvents/VB/Class1.vb#2)]  \n  \n The following example demonstrates how a derived class can use the `Handles` statement to handle an event from a base class.  \n  \n [!code-vb[VbVbalrEvents#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrEvents/VB/Class1.vb#3)]  \n  \n## Example  \n The following example contains two button event handlers for a **WPF Application** project.  \n  \n [!code-vb[VbVbalrEvents#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrEvents/VB/class3.vb#41)]  \n  \n## Example  \n The following example is equivalent to the previous example. The `eventlist` in the `Handles` clause contains the events for both buttons.  \n  \n [!code-vb[VbVbalrEvents#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrEvents/VB/class3.vb#42)]  \n  \n## See also\n\n- [WithEvents](../../../visual-basic/language-reference/modifiers/withevents.md)\n- [AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md)\n- [RemoveHandler Statement](../../../visual-basic/language-reference/statements/removehandler-statement.md)\n- [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)\n- [RaiseEvent Statement](../../../visual-basic/language-reference/statements/raiseevent-statement.md)\n- [Events](../../../visual-basic/programming-guide/language-features/events/index.md)\n","nodes":[{"pos":[4,215],"embed":true,"restype":"x-metadata","content":"title: \"Handles Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"Handles\"\n  - \"vb.Handles\"\nhelpviewer_keywords: \n  - \"Handles keyword [Visual Basic]\"\nms.assetid: 1b051c0e-f499-42f6-acb5-6f4f27824b40","nodes":[{"content":"Handles Clause (Visual Basic)","nodes":[{"pos":[0,29],"content":"Handles Clause (Visual Basic)","nodes":[{"content":"Handles Clause (Visual Basic)","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[222,251],"content":"Handles Clause (Visual Basic)","linkify":"Handles Clause (Visual Basic)","nodes":[{"content":"Handles Clause (Visual Basic)","pos":[0,29]}]},{"content":"Declares that a procedure handles a specified event.","pos":[252,304]},{"pos":[313,319],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[384,389],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"The <ph id=\"ph1\">`Sub`</ph> procedure declaration for the procedure that will handle the event.","pos":[419,496],"source":"The `Sub` procedure declaration for the procedure that will handle the event."},{"content":"List of the events for <ph id=\"ph1\">`proceduredeclaration`</ph> to handle, separated by commas.","pos":[518,595],"source":"List of the events for `proceduredeclaration` to handle, separated by commas."},{"content":"The events must be raised by either the base class for the current class, or by an object declared using the <ph id=\"ph1\">`WithEvents`</ph> keyword.","pos":[596,726],"source":" The events must be raised by either the base class for the current class, or by an object declared using the `WithEvents` keyword."},{"pos":[735,742],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the <ph id=\"ph1\">`Handles`</ph> keyword at the end of a procedure declaration to cause it to handle events raised by an object variable declared using the <ph id=\"ph2\">`WithEvents`</ph> keyword.","pos":[746,908],"source":"Use the `Handles` keyword at the end of a procedure declaration to cause it to handle events raised by an object variable declared using the `WithEvents` keyword."},{"content":"The <ph id=\"ph1\">`Handles`</ph> keyword can also be used in a derived class to handle events from a base class.","pos":[909,1002],"source":" The `Handles` keyword can also be used in a derived class to handle events from a base class."},{"content":"The <ph id=\"ph1\">`Handles`</ph> keyword and the <ph id=\"ph2\">`AddHandler`</ph> statement both allow you to specify that particular procedures handle particular events, but there are differences.","pos":[1009,1167],"source":"The `Handles` keyword and the `AddHandler` statement both allow you to specify that particular procedures handle particular events, but there are differences."},{"content":"Use the <ph id=\"ph1\">`Handles`</ph> keyword when defining a procedure to specify that it handles a particular event.","pos":[1168,1266],"source":" Use the `Handles` keyword when defining a procedure to specify that it handles a particular event."},{"content":"The <ph id=\"ph1\">`AddHandler`</ph> statement connects procedures to events at run time.","pos":[1267,1336],"source":" The `AddHandler` statement connects procedures to events at run time."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>AddHandler Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept>.","pos":[1337,1463],"source":" For more information, see [AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md)."},{"content":"For custom events, the application invokes the event's <ph id=\"ph1\">`AddHandler`</ph> accessor when it adds the procedure as an event handler.","pos":[1470,1594],"source":"For custom events, the application invokes the event's `AddHandler` accessor when it adds the procedure as an event handler."},{"content":"For more information on custom events, see <bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.","pos":[1595,1728],"source":" For more information on custom events, see [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)."},{"pos":[1737,1744],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1864,1988],"content":"The following example demonstrates how a derived class can use the <ph id=\"ph1\">`Handles`</ph> statement to handle an event from a base class.","source":"The following example demonstrates how a derived class can use the `Handles` statement to handle an event from a base class."},{"pos":[2113,2120],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2124,2215],"content":"The following example contains two button event handlers for a <bpt id=\"p1\">**</bpt>WPF Application<ept id=\"p1\">**</ept> project.","source":"The following example contains two button event handlers for a **WPF Application** project."},{"pos":[2342,2349],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example is equivalent to the previous example.","pos":[2353,2413]},{"content":"The <ph id=\"ph1\">`eventlist`</ph> in the <ph id=\"ph2\">`Handles`</ph> clause contains the events for both buttons.","pos":[2414,2491],"source":" The `eventlist` in the `Handles` clause contains the events for both buttons."},{"pos":[2618,2626],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2630,2708],"content":"<bpt id=\"p1\">[</bpt>WithEvents<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept>","source":"[WithEvents](../../../visual-basic/language-reference/modifiers/withevents.md)"},{"pos":[2711,2810],"content":"<bpt id=\"p1\">[</bpt>AddHandler Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept>","source":"[AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md)"},{"pos":[2813,2918],"content":"<bpt id=\"p1\">[</bpt>RemoveHandler Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept>","source":"[RemoveHandler Statement](../../../visual-basic/language-reference/statements/removehandler-statement.md)"},{"pos":[2921,3010],"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>","source":"[Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)"},{"pos":[3013,3112],"content":"<bpt id=\"p1\">[</bpt>RaiseEvent Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept>","source":"[RaiseEvent Statement](../../../visual-basic/language-reference/statements/raiseevent-statement.md)"},{"pos":[3115,3198],"content":"<bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept>","source":"[Events](../../../visual-basic/programming-guide/language-features/events/index.md)"}]}