<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bc33034.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">297d5a613d66cde15f3bd5eb64d1a57c15fc859b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc33034.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9f77d84fe325e11a8fdbeff805e413422c28e69</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c7f16f6b2e42387d169ba5a29bd80e7ff41390b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Return and parameter types of '<ph id="ph1">&lt;logicaloperator&gt;</ph>' must be '<ph id="ph2">&lt;typename&gt;</ph>' to be used in a '<ph id="ph3">&lt;shortcircuitoperator&gt;</ph>' expression</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Return and parameter types of '<ph id="ph1">\&lt;</ph>logicaloperator&gt;' must be '<ph id="ph2">\&lt;</ph>typename&gt;' to be used in a '<ph id="ph3">\&lt;</ph>shortcircuitoperator&gt;' expression</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`And`</ph> operator or an <ph id="ph2">`Or`</ph> operator is declared with unsuitable parameters or return type for use in an <bpt id="p1">[</bpt>AndAlso Operator<ept id="p1">](../../visual-basic/language-reference/operators/andalso-operator.md)</ept> or an <bpt id="p2">[</bpt>OrElse Operator<ept id="p2">](../../visual-basic/language-reference/operators/orelse-operator.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because you do not define a short-circuiting operator (<ph id="ph1">`AndAlso`</ph> or <ph id="ph2">`OrElse`</ph>) directly, you must define the corresponding logical and determinant operators.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following table shows the required operators.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Short-circuiting operator</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Logical operator</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Determinant operator</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>And Operator<ept id="p1">](../../visual-basic/language-reference/operators/and-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsFalse Operator<ept id="p1">](../../visual-basic/language-reference/operators/isfalse-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Or Operator<ept id="p1">](../../visual-basic/language-reference/operators/or-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsTrue Operator<ept id="p1">](../../visual-basic/language-reference/operators/istrue-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Visual Basic uses these logical and determinant operators to construct the short-circuiting logic for <ph id="ph1">`AndAlso`</ph> or <ph id="ph2">`OrElse`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For this to work properly, both operands and the return value of your <ph id="ph1">`And`</ph> or <ph id="ph2">`Or`</ph> definition must be of the containing type, that is, the type of the class or structure in which you are defining <ph id="ph3">`And`</ph> or <ph id="ph4">`Or`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC33034</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Change the type of both operands and the return value to the type of the class or structure in which you are defining this operator.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Do not use the corresponding short-circuiting operator (<ph id="ph1">`AndAlso`</ph> or <ph id="ph2">`OrElse`</ph>) with operands of the type of the class or structure in which you are defining this <ph id="ph3">`And`</ph> or <ph id="ph4">`Or`</ph> operator.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Statement<ept id="p1">](../../visual-basic/language-reference/statements/operator-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define an Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Conversion Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Logical and Bitwise Operators in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>