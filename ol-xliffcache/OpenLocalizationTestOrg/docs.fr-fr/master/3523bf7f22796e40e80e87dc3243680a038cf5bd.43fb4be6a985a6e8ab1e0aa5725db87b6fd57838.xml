{"content":"---\ntitle: \"Non-Generic ForEach | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 576cd07a-d58d-4536-b514-77bad60bff38\ncaps.latest.revision: 12\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Non-Generic ForEach\n[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)] ships in its toolbox a set of Control Flow activities, including <xref:System.Activities.Statements.ForEach%601>, which allows iterating through <!--zz <xref:System.Collections.IEnumerable%601> --> `System.Collections.IEnumerable` collections.  \n  \n <xref:System.Activities.Statements.ForEach%601> requires its <xref:System.Activities.Statements.ForEach%601.Values%2A> property to be of type <!--zz <xref:System.Collections.IEnumerable%601> --> `System.Collections.IEnumerable`. This precludes users from iterating over data structures that implement <!--zz <xref:System.Collections.IEnumerable%601> --> `System.Collections.IEnumerable` interface (for example, <xref:System.Collections.ArrayList>). The non-generic version of <xref:System.Activities.Statements.ForEach%601> overcomes this requirement, at the expense of more run-time complexity for ensuring the compatibility of the types of the values in the collection.  \n  \n This sample shows how to implement a non-generic <xref:System.Activities.Statements.ForEach%601> activity and its designer. This activity can be used to iterate through <xref:System.Collections.ArrayList>.  \n  \n## ForEach Activity  \n The C#/VB `foreach` statement enumerates the elements of a collection, executing an embedded statement for each element of the collection. The [!INCLUDE[wf1](../../../../includes/wf1-md.md)] equivalent activities of `foreach` are <xref:System.Activities.Statements.ForEach%601> and <xref:System.Activities.Statements.ParallelForEach%601>. The <xref:System.Activities.Statements.ForEach%601> activity contains a list of values and a body. At runtime, the list is iterated and the body is executed for each value in the list.  \n  \n For most cases, the generic version of the activity should be the preferred solution, because it covers most of the scenarios in which it would be used, and provides type checking at compile time. The non-generic version can be used for iterating through types that implement the non-generic <xref:System.Collections.IEnumerable> interface.  \n  \n## Class Definition  \n The following code example shows the definition of a non-generic `ForEach` activity.  \n  \n```  \n[ContentProperty(\"Body\")]  \npublic class ForEach : NativeActivity  \n{  \n    [RequiredArgument]  \n    [DefaultValue(null)]  \n    InArgument<IEnumerable> Values { get; set; }  \n  \n    [DefaultValue(null)]  \n    [DependsOn(\"Values\")]  \n    ActivityAction<object> Body { get; set; }   \n}  \n```  \n  \n Body (optional)  \n The <xref:System.Activities.ActivityAction> of type <xref:System.Object>, which is executed for each element in the collection. Each individual element is passed into the Body through its `Argument` property.  \n  \n Values (optional)  \n The collection of elements that are iterated over. Ensuring that all elements of the collection are of compatible types is done at run-time.  \n  \n## Example of Using ForEach  \n The following code demonstrates how to use the ForEach activity in an application.  \n  \n```  \nstring[] names = { \"bill\", \"steve\", \"ray\" };  \n  \nDelegateInArgument<object> iterationVariable = new DelegateInArgument<object>() { Name = \"iterationVariable\" };  \n  \nActivity sampleUsage =  \n    new ForEach  \n    {  \n       Values = new InArgument<IEnumerable>(c=> names),  \n       Body = new ActivityAction<object>   \n       {                          \n           Argument = iterationVariable,  \n           Handler = new WriteLine  \n           {  \n               Text = new InArgument<string>(env => string.Format(\"Hello {0}\",                                                               iterationVariable.Get(env)))  \n           }  \n       }  \n   };  \n```  \n  \n|Condition|Message|Severity|Exception Type|  \n|---------------|-------------|--------------|--------------------|  \n|Values is `null`|Value for a required activity argument 'Values' was not supplied.|Error|<xref:System.InvalidOperationException>|  \n  \n## ForEach Designer  \n The activity designer for the sample is similar in appearance to the designer provided for the built-in <xref:System.Activities.Statements.ForEach%601> activity. The designer appears in the toolbox in the **Samples**, **Non-Generic Activities** category. The designer is named **ForEachWithBodyFactory** in the toolbox, because the activity exposes an <xref:System.Activities.Presentation.IActivityTemplateFactory> in the toolbox, which creates the activity with a properly configured <xref:System.Activities.ActivityAction>.  \n  \n```  \npublic sealed class ForEachWithBodyFactory : IActivityTemplateFactory  \n{  \n    public Activity Create(DependencyObject target)  \n    {  \n        return new Microsoft.Samples.Activities.Statements.ForEach()  \n        {  \n            Body = new ActivityAction<object>()  \n            {  \n                Argument = new DelegateInArgument<object>()  \n                {  \n                    Name = \"item\"  \n                }  \n            }  \n        };  \n    }  \n}  \n```  \n  \n#### To run this sample  \n  \n1.  Set the project of your choice as the start-up project of the solution:  \n  \n    1.  **CodeTestClient** shows how to use the activity using code.  \n  \n    2.  **DesignerTestClient** shows how to use the activity within the designer.  \n  \n2.  Build and run the project.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Scenario\\ActivityLibrary\\NonGenericForEach`\n","nodes":[{"pos":[12,48],"content":"Non-Generic ForEach | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Non-Generic ForEach | Microsoft Docs","pos":[0,36]}]},{"pos":[314,333],"content":"Non-Generic ForEach","linkify":"Non-Generic ForEach","nodes":[{"content":"Non-Generic ForEach","pos":[0,19]}]},{"pos":[334,655],"content":"<ph id=\"ph1\">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph> ships in its toolbox a set of Control Flow activities, including <ph id=\"ph2\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph>, which allows iterating through <ph id=\"ph3\">&lt;!--zz &lt;xref:System.Collections.IEnumerable%601&gt; --&gt;</ph> <ph id=\"ph4\">`System.Collections.IEnumerable`</ph> collections.","source":"[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)] ships in its toolbox a set of Control Flow activities, including <xref:System.Activities.Statements.ForEach%601>, which allows iterating through <!--zz <xref:System.Collections.IEnumerable%601> --> `System.Collections.IEnumerable` collections."},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> requires its <ph id=\"ph2\">&lt;xref:System.Activities.Statements.ForEach%601.Values%2A&gt;</ph> property to be of type <ph id=\"ph3\">&lt;!--zz &lt;xref:System.Collections.IEnumerable%601&gt; --&gt;</ph> <ph id=\"ph4\">`System.Collections.IEnumerable`</ph>.","pos":[662,890],"source":"<xref:System.Activities.Statements.ForEach%601> requires its <xref:System.Activities.Statements.ForEach%601.Values%2A> property to be of type <!--zz <xref:System.Collections.IEnumerable%601> --> `System.Collections.IEnumerable`."},{"content":"This precludes users from iterating over data structures that implement <ph id=\"ph1\">&lt;!--zz &lt;xref:System.Collections.IEnumerable%601&gt; --&gt;</ph> <ph id=\"ph2\">`System.Collections.IEnumerable`</ph> interface (for example, <ph id=\"ph3\">&lt;xref:System.Collections.ArrayList&gt;</ph>).","pos":[891,1110],"source":" This precludes users from iterating over data structures that implement <!--zz <xref:System.Collections.IEnumerable%601> --> `System.Collections.IEnumerable` interface (for example, <xref:System.Collections.ArrayList>)."},{"content":"The non-generic version of <ph id=\"ph1\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> overcomes this requirement, at the expense of more run-time complexity for ensuring the compatibility of the types of the values in the collection.","pos":[1111,1333],"source":" The non-generic version of <xref:System.Activities.Statements.ForEach%601> overcomes this requirement, at the expense of more run-time complexity for ensuring the compatibility of the types of the values in the collection."},{"content":"This sample shows how to implement a non-generic <ph id=\"ph1\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> activity and its designer.","pos":[1340,1463],"source":"This sample shows how to implement a non-generic <xref:System.Activities.Statements.ForEach%601> activity and its designer."},{"content":"This activity can be used to iterate through <ph id=\"ph1\">&lt;xref:System.Collections.ArrayList&gt;</ph>.","pos":[1464,1545],"source":" This activity can be used to iterate through <xref:System.Collections.ArrayList>."},{"pos":[1554,1570],"content":"ForEach Activity","linkify":"ForEach Activity","nodes":[{"content":"ForEach Activity","pos":[0,16]}]},{"content":"The C#/VB <ph id=\"ph1\">`foreach`</ph> statement enumerates the elements of a collection, executing an embedded statement for each element of the collection.","pos":[1574,1712],"source":"The C#/VB `foreach` statement enumerates the elements of a collection, executing an embedded statement for each element of the collection."},{"content":"The <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> equivalent activities of <ph id=\"ph2\">`foreach`</ph> are <ph id=\"ph3\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Activities.Statements.ParallelForEach%601&gt;</ph>.","pos":[1713,1912],"source":" The [!INCLUDE[wf1](../../../../includes/wf1-md.md)] equivalent activities of `foreach` are <xref:System.Activities.Statements.ForEach%601> and <xref:System.Activities.Statements.ParallelForEach%601>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> activity contains a list of values and a body.","pos":[1913,2011],"source":" The <xref:System.Activities.Statements.ForEach%601> activity contains a list of values and a body."},{"content":"At runtime, the list is iterated and the body is executed for each value in the list.","pos":[2012,2097]},{"content":"For most cases, the generic version of the activity should be the preferred solution, because it covers most of the scenarios in which it would be used, and provides type checking at compile time.","pos":[2104,2300]},{"content":"The non-generic version can be used for iterating through types that implement the non-generic <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.","pos":[2301,2444],"source":" The non-generic version can be used for iterating through types that implement the non-generic <xref:System.Collections.IEnumerable> interface."},{"pos":[2453,2469],"content":"Class Definition","linkify":"Class Definition","nodes":[{"content":"Class Definition","pos":[0,16]}]},{"pos":[2473,2557],"content":"The following code example shows the definition of a non-generic <ph id=\"ph1\">`ForEach`</ph> activity.","source":"The following code example shows the definition of a non-generic `ForEach` activity."},{"content":"Body (optional)","pos":[2865,2880]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.ActivityAction&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>, which is executed for each element in the collection.","pos":[2884,3011],"source":" The <xref:System.Activities.ActivityAction> of type <xref:System.Object>, which is executed for each element in the collection."},{"content":"Each individual element is passed into the Body through its <ph id=\"ph1\">`Argument`</ph> property.","pos":[3012,3092],"source":" Each individual element is passed into the Body through its `Argument` property."},{"content":"Values (optional)","pos":[3099,3116]},{"content":"The collection of elements that are iterated over.","pos":[3120,3170]},{"content":"Ensuring that all elements of the collection are of compatible types is done at run-time.","pos":[3171,3260]},{"pos":[3269,3293],"content":"Example of Using ForEach","linkify":"Example of Using ForEach","nodes":[{"content":"Example of Using ForEach","pos":[0,24]}]},{"content":"The following code demonstrates how to use the ForEach activity in an application.","pos":[3297,3379]},{"content":"Condition","pos":[4057,4066]},{"content":"Message","pos":[4067,4074]},{"content":"Severity","pos":[4075,4083]},{"content":"Exception Type","pos":[4084,4098]},{"pos":[4173,4189],"content":"Values is <ph id=\"ph1\">`null`</ph>","source":"Values is `null`"},{"content":"Value for a required activity argument 'Values' was not supplied.","pos":[4190,4255]},{"content":"Error","pos":[4256,4261]},{"pos":[4311,4327],"content":"ForEach Designer","linkify":"ForEach Designer","nodes":[{"content":"ForEach Designer","pos":[0,16]}]},{"content":"The activity designer for the sample is similar in appearance to the designer provided for the built-in <ph id=\"ph1\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> activity.","pos":[4331,4492],"source":"The activity designer for the sample is similar in appearance to the designer provided for the built-in <xref:System.Activities.Statements.ForEach%601> activity."},{"content":"The designer appears in the toolbox in the <bpt id=\"p1\">**</bpt>Samples<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Non-Generic Activities<ept id=\"p2\">**</ept> category.","pos":[4493,4585],"source":" The designer appears in the toolbox in the **Samples**, **Non-Generic Activities** category."},{"content":"The designer is named <bpt id=\"p1\">**</bpt>ForEachWithBodyFactory<ept id=\"p1\">**</ept> in the toolbox, because the activity exposes an <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.IActivityTemplateFactory&gt;</ph> in the toolbox, which creates the activity with a properly configured <ph id=\"ph2\">&lt;xref:System.Activities.ActivityAction&gt;</ph>.","pos":[4586,4856],"source":" The designer is named **ForEachWithBodyFactory** in the toolbox, because the activity exposes an <xref:System.Activities.Presentation.IActivityTemplateFactory> in the toolbox, which creates the activity with a properly configured <xref:System.Activities.ActivityAction>."},{"pos":[5348,5366],"content":"To run this sample","linkify":"To run this sample","nodes":[{"content":"To run this sample","pos":[0,18]}]},{"content":"Set the project of your choice as the start-up project of the solution:","pos":[5376,5447]},{"pos":[5461,5521],"content":"<bpt id=\"p1\">**</bpt>CodeTestClient<ept id=\"p1\">**</ept> shows how to use the activity using code.","source":"**CodeTestClient** shows how to use the activity using code."},{"pos":[5535,5608],"content":"<bpt id=\"p1\">**</bpt>DesignerTestClient<ept id=\"p1\">**</ept> shows how to use the activity within the designer.","source":"**DesignerTestClient** shows how to use the activity within the designer."},{"content":"Build and run the project.","pos":[5618,5644]},{"pos":[5652,5784],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[5838,6164],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[6165,6215]}]}