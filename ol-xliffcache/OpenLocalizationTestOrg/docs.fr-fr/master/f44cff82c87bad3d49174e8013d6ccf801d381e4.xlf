<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f44cff82c87bad3d49174e8013d6ccf801d381e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\discover-a-service-with-unique-listen-uri-mode-sample.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93c66d416d2c5d455f147db7b00d022dfafb6ded</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94be2f43f0696618a9badb5a0fb682cad5b84fc5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Discover a Service with Unique Listen Uri Mode Sample | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Discover a Service with Unique Listen Uri Mode Sample</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to discover a service that has the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingContext.ListenUriMode%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.ServiceModel.Description.ListenUriMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingContext.ListenUriMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.ServiceModel.Description.ListenUriMode&gt;</ph>, the ListenUri is ensured to be unique by either setting the port to be unique or for the path to be unique by appending a GUID.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Features on the Service</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingContext.ListenUriMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.ServiceModel.Description.ListenUriMode&gt;</ph> for the TCP endpoint.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The service is then made discoverable over a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> endpoint.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Features on the Client</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This client connects to the service using the correct <ph id="ph1">`Via.Uri`</ph> by using the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindResponse&gt;</ph> that is returned from the method is then queried for whether it contains a valid <ph id="ph2">&lt;xref:System.ServiceModel.Endpoint.ListenUri%2A&gt;</ph> and whether it is different than <ph id="ph3">`Address.Uri`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The appropriate information is then passed to the <ph id="ph1">`InvokeCalculatorService`</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`InvokeCalculatorService`</ph> method, the <ph id="ph2">&lt;xref:System.ServiceModel.Endpoint.ListenUri%2A&gt;</ph> was passed in by the caller, then a <ph id="ph3">`ClientViaBehavior`</ph> with the correct <ph id="ph4">`Via.Uri`</ph> is added to the client’s endpoint.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph>, open UniqueListenUriMode.sln.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To build the solution, press CTRL+SHIFT+B.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Run the service application, which is generated in the [solution base directory]\service\bin\debug folder.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Run the client application, which is generated in the [solution base directory]\Client\bin\debug folder.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The client locates the running service and writes to the console the metadata published by the service’s endpoint.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>