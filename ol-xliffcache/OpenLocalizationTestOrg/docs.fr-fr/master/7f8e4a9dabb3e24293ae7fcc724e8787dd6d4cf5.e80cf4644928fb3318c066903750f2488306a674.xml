{"content":"---\ntitle: \"Integral types table - C# Reference\"\nms.custom: seodec18\n\ndescription: \"Overview of the built-in C# integral types\"\nms.date: 08/20/2018\nhelpviewer_keywords: \n  - \"integral types, C#\"\n  - \"Visual C#, integral types\"\n  - \"types [C#], integral types\"\n  - \"ranges of integral types [C#]\"\nms.assetid: 62e86126-46ff-40b0-9028-e61d7558268c\n---\n# Integral types table (C# Reference)\n\nThe following table shows the sizes and ranges of the integral types, which constitute a subset of simple types.  \n  \n|Type|Range|Size|  \n|----------|-----------|----------|  \n|[sbyte](sbyte.md)|-128 to 127|Signed 8-bit integer|  \n|[byte](byte.md)|0 to 255|Unsigned 8-bit integer|  \n|[char](char.md)|U+0000 to U+ffff|Unicode 16-bit character|  \n|[short](short.md)|-32,768 to 32,767|Signed 16-bit integer|  \n|[ushort](ushort.md)|0 to 65,535|Unsigned 16-bit integer|  \n|[int](int.md)|-2,147,483,648 to 2,147,483,647|Signed 32-bit integer|  \n|[uint](uint.md)|0 to 4,294,967,295|Unsigned 32-bit integer|  \n|[long](long.md)|-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807|Signed 64-bit integer|  \n|[ulong](ulong.md)|0 to 18,446,744,073,709,551,615|Unsigned 64-bit integer|  \n\n## Remarks\n  \nIf the value represented by an integer literal exceeds <xref:System.UInt64.MaxValue?displayProperty=nameWithType>, a compiler error [CS1021](../../misc/cs1021.md) occurs.\n\nUse the <xref:System.Numerics.BigInteger?displayProperty=nameWithType> structure to represent an arbitrarily large signed integer.\n  \n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Reference tables for types](reference-tables-for-types.md)\n- [Floating-point types table](floating-point-types-table.md)\n- [Default values table](default-values-table.md)\n- [Formatting numeric results table](formatting-numeric-results-table.md)\n- [Built-in types table](built-in-types-table.md)\n- [Numerics in .NET](../../../standard/numerics.md)\n","nodes":[{"pos":[4,344],"embed":true,"restype":"x-metadata","content":"title: \"Integral types table - C# Reference\"\nms.custom: seodec18\n\ndescription: \"Overview of the built-in C# integral types\"\nms.date: 08/20/2018\nhelpviewer_keywords: \n  - \"integral types, C#\"\n  - \"Visual C#, integral types\"\n  - \"types [C#], integral types\"\n  - \"ranges of integral types [C#]\"\nms.assetid: 62e86126-46ff-40b0-9028-e61d7558268c","nodes":[{"content":"Integral types table - C# Reference","nodes":[{"pos":[0,35],"content":"Integral types table - C# Reference","nodes":[{"content":"Integral types table - C# Reference","pos":[0,35]}]}],"path":["title"],"nosxs":false},{"content":"Overview of the built-in C# integral types","nodes":[{"pos":[0,42],"content":"Overview of the built-in C# integral types","nodes":[{"content":"Overview of the built-in C# integral types","pos":[0,42]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[351,386],"content":"Integral types table (C# Reference)","linkify":"Integral types table (C# Reference)","nodes":[{"content":"Integral types table (C# Reference)","pos":[0,35]}]},{"content":"The following table shows the sizes and ranges of the integral types, which constitute a subset of simple types.","pos":[388,500]},{"content":"Type","pos":[507,511]},{"content":"Range","pos":[512,517]},{"content":"Size","pos":[518,522]},{"pos":[565,582],"content":"<bpt id=\"p1\">[</bpt>sbyte<ept id=\"p1\">](sbyte.md)</ept>","source":"[sbyte](sbyte.md)"},{"content":"-128 to 127","pos":[583,594]},{"content":"Signed 8-bit integer","pos":[595,615]},{"pos":[620,635],"content":"<bpt id=\"p1\">[</bpt>byte<ept id=\"p1\">](byte.md)</ept>","source":"[byte](byte.md)"},{"content":"0 to 255","pos":[636,644]},{"content":"Unsigned 8-bit integer","pos":[645,667]},{"pos":[672,687],"content":"<bpt id=\"p1\">[</bpt>char<ept id=\"p1\">](char.md)</ept>","source":"[char](char.md)"},{"content":"U+0000 to U+ffff","pos":[688,704]},{"content":"Unicode 16-bit character","pos":[705,729]},{"pos":[734,751],"content":"<bpt id=\"p1\">[</bpt>short<ept id=\"p1\">](short.md)</ept>","source":"[short](short.md)"},{"content":"-32,768 to 32,767","pos":[752,769]},{"content":"Signed 16-bit integer","pos":[770,791]},{"pos":[796,815],"content":"<bpt id=\"p1\">[</bpt>ushort<ept id=\"p1\">](ushort.md)</ept>","source":"[ushort](ushort.md)"},{"content":"0 to 65,535","pos":[816,827]},{"content":"Unsigned 16-bit integer","pos":[828,851]},{"pos":[856,869],"content":"<bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](int.md)</ept>","source":"[int](int.md)"},{"content":"-2,147,483,648 to 2,147,483,647","pos":[870,901]},{"content":"Signed 32-bit integer","pos":[902,923]},{"pos":[928,943],"content":"<bpt id=\"p1\">[</bpt>uint<ept id=\"p1\">](uint.md)</ept>","source":"[uint](uint.md)"},{"content":"0 to 4,294,967,295","pos":[944,962]},{"content":"Unsigned 32-bit integer","pos":[963,986]},{"pos":[991,1006],"content":"<bpt id=\"p1\">[</bpt>long<ept id=\"p1\">](long.md)</ept>","source":"[long](long.md)"},{"content":"-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807","pos":[1007,1062]},{"content":"Signed 64-bit integer","pos":[1063,1084]},{"pos":[1089,1106],"content":"<bpt id=\"p1\">[</bpt>ulong<ept id=\"p1\">](ulong.md)</ept>","source":"[ulong](ulong.md)"},{"content":"0 to 18,446,744,073,709,551,615","pos":[1107,1138]},{"content":"Unsigned 64-bit integer","pos":[1139,1162]},{"pos":[1170,1177],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1181,1351],"content":"If the value represented by an integer literal exceeds <ph id=\"ph1\">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph>, a compiler error <bpt id=\"p1\">[</bpt>CS1021<ept id=\"p1\">](../../misc/cs1021.md)</ept> occurs.","source":"If the value represented by an integer literal exceeds <xref:System.UInt64.MaxValue?displayProperty=nameWithType>, a compiler error [CS1021](../../misc/cs1021.md) occurs."},{"pos":[1353,1483],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Numerics.BigInteger?displayProperty=nameWithType&gt;</ph> structure to represent an arbitrarily large signed integer.","source":"Use the <xref:System.Numerics.BigInteger?displayProperty=nameWithType> structure to represent an arbitrarily large signed integer."},{"pos":[1490,1498],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1502,1529],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1532,1588],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1591,1614],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1617,1676],"content":"<bpt id=\"p1\">[</bpt>Reference tables for types<ept id=\"p1\">](reference-tables-for-types.md)</ept>","source":"[Reference tables for types](reference-tables-for-types.md)"},{"pos":[1679,1738],"content":"<bpt id=\"p1\">[</bpt>Floating-point types table<ept id=\"p1\">](floating-point-types-table.md)</ept>","source":"[Floating-point types table](floating-point-types-table.md)"},{"pos":[1741,1788],"content":"<bpt id=\"p1\">[</bpt>Default values table<ept id=\"p1\">](default-values-table.md)</ept>","source":"[Default values table](default-values-table.md)"},{"pos":[1791,1862],"content":"<bpt id=\"p1\">[</bpt>Formatting numeric results table<ept id=\"p1\">](formatting-numeric-results-table.md)</ept>","source":"[Formatting numeric results table](formatting-numeric-results-table.md)"},{"pos":[1865,1912],"content":"<bpt id=\"p1\">[</bpt>Built-in types table<ept id=\"p1\">](built-in-types-table.md)</ept>","source":"[Built-in types table](built-in-types-table.md)"},{"pos":[1915,1964],"content":"<bpt id=\"p1\">[</bpt>Numerics in .NET<ept id=\"p1\">](../../../standard/numerics.md)</ept>","source":"[Numerics in .NET](../../../standard/numerics.md)"}]}