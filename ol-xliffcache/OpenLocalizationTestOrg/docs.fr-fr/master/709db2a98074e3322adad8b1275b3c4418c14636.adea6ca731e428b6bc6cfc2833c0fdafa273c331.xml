{"content":"---\ntitle: \"How to: Handle Errors and Exceptions that Occur with Databinding\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"error handling [Windows Forms], examples\"\n  - \"data binding [Windows Forms], examples\"\n  - \"examples [Windows Forms], error handling\"\n  - \"error handling [Windows Forms], data binding\"\n  - \"data binding [Windows Forms], error handling\"\n  - \"BindingSource component [Windows Forms], handling errors and exceptions\"\nms.assetid: eddc5bad-9513-47df-ab28-f02d8dff7892\n---\n# How to: Handle Errors and Exceptions that Occur with Databinding\nOftentimes exceptions and errors occur on the underlying business objects when you bind them to controls. You can intercept these errors and exceptions and then either recover or pass the error information to the user by handling the <xref:System.Windows.Forms.Binding.BindingComplete> event for a particular <xref:System.Windows.Forms.Binding>, <xref:System.Windows.Forms.BindingSource>, or <xref:System.Windows.Forms.CurrencyManager> component.  \n  \n## Example  \n This code example demonstrates how to handle errors and exceptions that occur during a data-binding operation. It demonstrates how to intercept errors by handling the <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> event of the <xref:System.Windows.Forms.Binding> objects. In order to intercept errors and exceptions by handling this event, you must enable formatting for the binding. You can enable formatting when the binding is constructed or added to the binding collection, or by setting the <xref:System.Windows.Forms.Binding.FormattingEnabled%2A> property to `true`.  \n  \n [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]\n [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]\n [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  \n  \n When the code is running and an empty string is entered for the part name or a value less than 100 is entered for the part number, a message box appears. This is a result of handling the <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> event for these textbox bindings.  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType>\n- <xref:System.Windows.Forms.BindingSource.BindingComplete?displayProperty=nameWithType>\n- [BindingSource Component](bindingsource-component.md)\n","nodes":[{"pos":[4,533],"embed":true,"restype":"x-metadata","content":"title: \"How to: Handle Errors and Exceptions that Occur with Databinding\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"error handling [Windows Forms], examples\"\n  - \"data binding [Windows Forms], examples\"\n  - \"examples [Windows Forms], error handling\"\n  - \"error handling [Windows Forms], data binding\"\n  - \"data binding [Windows Forms], error handling\"\n  - \"BindingSource component [Windows Forms], handling errors and exceptions\"\nms.assetid: eddc5bad-9513-47df-ab28-f02d8dff7892","nodes":[{"content":"How to: Handle Errors and Exceptions that Occur with Databinding","nodes":[{"pos":[0,64],"content":"How to: Handle Errors and Exceptions that Occur with Databinding","nodes":[{"content":"How to: Handle Errors and Exceptions that Occur with Databinding","pos":[0,64]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[540,604],"content":"How to: Handle Errors and Exceptions that Occur with Databinding","linkify":"How to: Handle Errors and Exceptions that Occur with Databinding","nodes":[{"content":"How to: Handle Errors and Exceptions that Occur with Databinding","pos":[0,64]}]},{"content":"Oftentimes exceptions and errors occur on the underlying business objects when you bind them to controls.","pos":[605,710]},{"content":"You can intercept these errors and exceptions and then either recover or pass the error information to the user by handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Binding.BindingComplete&gt;</ph> event for a particular <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Binding&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> component.","pos":[711,1051],"source":" You can intercept these errors and exceptions and then either recover or pass the error information to the user by handling the <xref:System.Windows.Forms.Binding.BindingComplete> event for a particular <xref:System.Windows.Forms.Binding>, <xref:System.Windows.Forms.BindingSource>, or <xref:System.Windows.Forms.CurrencyManager> component."},{"pos":[1060,1067],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This code example demonstrates how to handle errors and exceptions that occur during a data-binding operation.","pos":[1071,1181]},{"content":"It demonstrates how to intercept errors by handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType&gt;</ph> event of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects.","pos":[1182,1376],"source":" It demonstrates how to intercept errors by handling the <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> event of the <xref:System.Windows.Forms.Binding> objects."},{"content":"In order to intercept errors and exceptions by handling this event, you must enable formatting for the binding.","pos":[1377,1488]},{"content":"You can enable formatting when the binding is constructed or added to the binding collection, or by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Binding.FormattingEnabled%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[1489,1677],"source":" You can enable formatting when the binding is constructed or added to the binding collection, or by setting the <xref:System.Windows.Forms.Binding.FormattingEnabled%2A> property to `true`."},{"content":"When the code is running and an empty string is entered for the part name or a value less than 100 is entered for the part number, a message box appears.","pos":[2229,2382]},{"content":"This is a result of handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType&gt;</ph> event for these textbox bindings.","pos":[2383,2530],"source":" This is a result of handling the <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> event for these textbox bindings."},{"pos":[2539,2557],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[2561,2583]},{"content":"References to the System, System.Drawing and System.Windows.Forms assemblies.","pos":[2593,2670]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2677,3031],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[3032,3120]},{"pos":[3129,3137],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3313,3366],"content":"<bpt id=\"p1\">[</bpt>BindingSource Component<ept id=\"p1\">](bindingsource-component.md)</ept>","source":"[BindingSource Component](bindingsource-component.md)"}]}