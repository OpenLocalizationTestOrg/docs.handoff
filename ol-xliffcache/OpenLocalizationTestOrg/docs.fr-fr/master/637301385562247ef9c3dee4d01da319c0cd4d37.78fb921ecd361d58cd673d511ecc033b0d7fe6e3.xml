{"content":"---\ntitle: \"Synchronous Server Socket Example\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"synchronous server sockets\"\n  - \"sockets, code examples\"\n  - \"sockets, synchronous server sockets\"\nms.assetid: 5916c764-879f-4716-99fb-1d21c6237f1c\n---\n# Synchronous Server Socket Example\nThe following example program creates a server that receives connection requests from clients. The server is built with a synchronous socket, so execution of the server application is suspended while it waits for a connection from a client. The application receives a string from the client, displays the string on the console, and then echoes the string back to the client. The string from the client must contain the string \"\\<EOF>\" to signal the end of the message.  \n  \n```vb  \nImports System  \nImports System.Net  \nImports System.Net.Sockets  \nImports System.Text  \nImports Microsoft.VisualBasic  \n  \nPublic Class SynchronousSocketListener  \n  \n    ' Incoming data from the client.  \n    Public Shared data As String = Nothing  \n  \n    Public Shared Sub Main()  \n        ' Data buffer for incoming data.  \n        Dim bytes() As Byte = New [Byte](1024) {}  \n  \n        ' Establish the local endpoint for the socket.  \n        ' Dns.GetHostName returns the name of the   \n        ' host running the application.  \n        Dim ipHostInfo As IPHostEntry = Dns.GetHostEntry(Dns.GetHostName())  \n        Dim ipAddress As IPAddress = ipHostInfo.AddressList(0)  \n        Dim localEndPoint As New IPEndPoint(ipAddress, 11000)  \n  \n        ' Create a TCP/IP socket.  \n        Dim listener As New Socket(ipAddress.AddressFamily, _  \n            SocketType.Stream, ProtocolType.Tcp)  \n  \n        ' Bind the socket to the local endpoint and   \n        ' listen for incoming connections.  \n  \n        listener.Bind(localEndPoint)  \n        listener.Listen(10)  \n  \n        ' Start listening for connections.  \n        While True  \n            Console.WriteLine(\"Waiting for a connection...\")  \n            ' Program is suspended while waiting for an incoming connection.  \n            Dim handler As Socket = listener.Accept()  \n            data = Nothing  \n  \n            ' An incoming connection needs to be processed.  \n            While True  \n                Dim bytesRec As Integer = handler.Receive(bytes)  \n                data += Encoding.ASCII.GetString(bytes, 0, bytesRec)  \n                If data.IndexOf(\"<EOF>\") > -1 Then  \n                    Exit While  \n                End If  \n            End While  \n            ' Show the data on the console.  \n            Console.WriteLine(\"Text received : {0}\", data)  \n            ' Echo the data back to the client.  \n            Dim msg As Byte() = Encoding.ASCII.GetBytes(data)  \n            handler.Send(msg)  \n            handler.Shutdown(SocketShutdown.Both)  \n            handler.Close()  \n        End While  \n    End Sub  \n  \nEnd Class 'SynchronousSocketListener  \n```  \n  \n```csharp  \nusing System;  \nusing System.Net;  \nusing System.Net.Sockets;  \nusing System.Text;  \n  \npublic class SynchronousSocketListener {  \n  \n    // Incoming data from the client.  \n    public static string data = null;  \n  \n    public static void StartListening() {  \n        // Data buffer for incoming data.  \n        byte[] bytes = new Byte[1024];  \n  \n        // Establish the local endpoint for the socket.  \n        // Dns.GetHostName returns the name of the   \n        // host running the application.  \n        IPHostEntry ipHostInfo = Dns.GetHostEntry(Dns.GetHostName());  \n        IPAddress ipAddress = ipHostInfo.AddressList[0];  \n        IPEndPoint localEndPoint = new IPEndPoint(ipAddress, 11000);  \n  \n        // Create a TCP/IP socket.  \n        Socket listener = new Socket(ipAddress.AddressFamily,  \n            SocketType.Stream, ProtocolType.Tcp );  \n  \n        // Bind the socket to the local endpoint and   \n        // listen for incoming connections.  \n        try {  \n            listener.Bind(localEndPoint);  \n            listener.Listen(10);  \n  \n            // Start listening for connections.  \n            while (true) {  \n                Console.WriteLine(\"Waiting for a connection...\");  \n                // Program is suspended while waiting for an incoming connection.  \n                Socket handler = listener.Accept();  \n                data = null;  \n  \n                // An incoming connection needs to be processed.  \n                while (true) {  \n                    int bytesRec = handler.Receive(bytes);  \n                    data += Encoding.ASCII.GetString(bytes,0,bytesRec);  \n                    if (data.IndexOf(\"<EOF>\") > -1) {  \n                        break;  \n                    }  \n                }  \n  \n                // Show the data on the console.  \n                Console.WriteLine( \"Text received : {0}\", data);  \n  \n                // Echo the data back to the client.  \n                byte[] msg = Encoding.ASCII.GetBytes(data);  \n  \n                handler.Send(msg);  \n                handler.Shutdown(SocketShutdown.Both);  \n                handler.Close();  \n            }  \n  \n        } catch (Exception e) {  \n            Console.WriteLine(e.ToString());  \n        }  \n  \n        Console.WriteLine(\"\\nPress ENTER to continue...\");  \n        Console.Read();  \n  \n    }  \n  \n    public static int Main(String[] args) {  \n        StartListening();  \n        return 0;  \n    }  \n}  \n```  \n  \n## See also\n\n- [Synchronous Client Socket Example](../../../docs/framework/network-programming/synchronous-client-socket-example.md)\n- [Using a Synchronous Server Socket](../../../docs/framework/network-programming/using-a-synchronous-server-socket.md)\n- [Socket Code Examples](../../../docs/framework/network-programming/socket-code-examples.md)\n","nodes":[{"pos":[4,277],"embed":true,"restype":"x-metadata","content":"title: \"Synchronous Server Socket Example\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"synchronous server sockets\"\n  - \"sockets, code examples\"\n  - \"sockets, synchronous server sockets\"\nms.assetid: 5916c764-879f-4716-99fb-1d21c6237f1c","nodes":[{"content":"Synchronous Server Socket Example","nodes":[{"pos":[0,33],"content":"Synchronous Server Socket Example","nodes":[{"content":"Synchronous Server Socket Example","pos":[0,33]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[284,317],"content":"Synchronous Server Socket Example","linkify":"Synchronous Server Socket Example","nodes":[{"content":"Synchronous Server Socket Example","pos":[0,33]}]},{"content":"The following example program creates a server that receives connection requests from clients.","pos":[318,412]},{"content":"The server is built with a synchronous socket, so execution of the server application is suspended while it waits for a connection from a client.","pos":[413,558]},{"content":"The application receives a string from the client, displays the string on the console, and then echoes the string back to the client.","pos":[559,692]},{"content":"The string from the client must contain the string \"<ph id=\"ph1\">\\&lt;</ph>EOF&gt;\" to signal the end of the message.","pos":[693,786],"source":" The string from the client must contain the string \"\\<EOF>\" to signal the end of the message."},{"pos":[5423,5431],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5435,5552],"content":"<bpt id=\"p1\">[</bpt>Synchronous Client Socket Example<ept id=\"p1\">](../../../docs/framework/network-programming/synchronous-client-socket-example.md)</ept>","source":"[Synchronous Client Socket Example](../../../docs/framework/network-programming/synchronous-client-socket-example.md)"},{"pos":[5555,5672],"content":"<bpt id=\"p1\">[</bpt>Using a Synchronous Server Socket<ept id=\"p1\">](../../../docs/framework/network-programming/using-a-synchronous-server-socket.md)</ept>","source":"[Using a Synchronous Server Socket](../../../docs/framework/network-programming/using-a-synchronous-server-socket.md)"},{"pos":[5675,5766],"content":"<bpt id=\"p1\">[</bpt>Socket Code Examples<ept id=\"p1\">](../../../docs/framework/network-programming/socket-code-examples.md)</ept>","source":"[Socket Code Examples](../../../docs/framework/network-programming/socket-code-examples.md)"}]}