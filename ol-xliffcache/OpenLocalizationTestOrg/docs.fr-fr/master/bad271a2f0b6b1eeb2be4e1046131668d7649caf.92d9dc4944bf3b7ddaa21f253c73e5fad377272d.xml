{"content":"---\ntitle: \"Compiler Error CS0456 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS0456\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS0456\"\nms.assetid: d714ec06-a7f4-405e-bf32-423696848319\ncaps.latest.revision: 14\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error CS0456\nType parameter 'Type Parameter Name 1' has the 'struct' constraint so 'Type Parameter Name 1' cannot be used as a constraint for 'Type Parameter Name 2'  \n  \n Value type constraints are implicitly sealed so those constraints cannot be used as constraints on a second type parameter. This is because value types cannot be overridden. To resolve this error, put a value type constraint directly on the second type parameter, instead of doing so indirectly by means of the first type parameter.  \n  \n## Example  \n The following sample generates CS0456.  \n  \n```  \n// CS0456.cs  \n// compile with: /target:library  \npublic class GenericsErrors  \n{  \n   public class G5<T> where T : struct  \n   {  \n      public class N<U> where U : T {}   // CS0456  \n      public class N2<U> where U : struct {}   // OK  \n   }  \n}  \n```","nodes":[{"pos":[12,50],"content":"Compiler Error CS0456 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS0456 | Microsoft Docs","pos":[0,38]}]},{"pos":[566,587],"content":"Compiler Error CS0456","linkify":"Compiler Error CS0456","nodes":[{"content":"Compiler Error CS0456","pos":[0,21]}]},{"content":"Type parameter 'Type Parameter Name 1' has the 'struct' constraint so 'Type Parameter Name 1' cannot be used as a constraint for 'Type Parameter Name 2'","pos":[588,740]},{"content":"Value type constraints are implicitly sealed so those constraints cannot be used as constraints on a second type parameter.","pos":[747,870]},{"content":"This is because value types cannot be overridden.","pos":[871,920]},{"content":"To resolve this error, put a value type constraint directly on the second type parameter, instead of doing so indirectly by means of the first type parameter.","pos":[921,1079]},{"pos":[1088,1095],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates CS0456.","pos":[1099,1137]}]}