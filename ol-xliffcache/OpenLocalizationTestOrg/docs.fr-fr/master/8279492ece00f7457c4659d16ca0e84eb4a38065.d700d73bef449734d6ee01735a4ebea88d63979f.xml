{"content":"---\ntitle: \"Compiler Error CS1932 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS1932\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS1932\"\nms.assetid: fc927899-2d35-4d47-9ae9-8fc99295bb66\ncaps.latest.revision: 6\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error CS1932\nCannot assign 'expression' to a range variable.  \n  \n The compiler must be able to infer the type of a range variable, whether it is introduced in a `from` clause or a `let` clause. It cannot be null because null is not a type, and it cannot be assigned with an expression of an unsafe type.  \n  \n## To correct this error  \n  \n-   Remove the assignment that is not valid.  \n  \n-   Explicitly cast the expression to an allowed type  \n  \n## Example  \n The following code generates CS1932 because the type of the range variable cannot be inferred. Cast the value to the intended type to fix the error, as shown in the following example.  \n  \n```  \n// CS1932.cs  \nusing System.Linq;  \nclass Test  \n{  \n    static void Main()  \n    {  \n  \n        var x = from i in Enumerable.Range(1, 100)  \n                let k = null // CS1932  \n                // Try the following line instead.  \n                let k = (string) null  \n                select i;  \n    }  \n}  \n```  \n  \n## See Also  \n [LINQ Query Expressions](../../csharp/programming-guide/linq-query-expressions/index.md)","nodes":[{"pos":[12,50],"content":"Compiler Error CS1932 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS1932 | Microsoft Docs","pos":[0,38]}]},{"pos":[565,586],"content":"Compiler Error CS1932","linkify":"Compiler Error CS1932","nodes":[{"content":"Compiler Error CS1932","pos":[0,21]}]},{"content":"Cannot assign 'expression' to a range variable.","pos":[587,634]},{"content":"The compiler must be able to infer the type of a range variable, whether it is introduced in a <ph id=\"ph1\">`from`</ph> clause or a <ph id=\"ph2\">`let`</ph> clause.","pos":[641,768],"source":"The compiler must be able to infer the type of a range variable, whether it is introduced in a `from` clause or a `let` clause."},{"content":"It cannot be null because null is not a type, and it cannot be assigned with an expression of an unsafe type.","pos":[769,878]},{"pos":[887,908],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Remove the assignment that is not valid.","pos":[918,958]},{"content":"Explicitly cast the expression to an allowed type","pos":[968,1017]},{"pos":[1026,1033],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code generates CS1932 because the type of the range variable cannot be inferred.","pos":[1037,1131]},{"content":"Cast the value to the intended type to fix the error, as shown in the following example.","pos":[1132,1220]},{"pos":[1560,1568],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1572,1660],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","source":"[LINQ Query Expressions](../../csharp/programming-guide/linq-query-expressions/index.md)"}]}