<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed077ed0e923ebf6a42371b100f1e345909f6ae1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\parallel-programming\how-to-measure-plinq-query-performance.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">342ccc46e814a8d8013d3a00c02f230d144b80aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22cb6688ba367c966f501dd5a05475b1c695632d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Measure PLINQ Query Performance | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Measure PLINQ Query Performance</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class to measure the time it takes for a PLINQ query to execute.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This example uses an empty <ph id="ph1">`foreach`</ph> loop (<ph id="ph2">`For Each`</ph> in Visual Basic) to measure the time it takes for the query to execute.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In real-world code, the loop typically contains additional processing steps that add to the total query execution time.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Notice that the stopwatch is not started until just before the loop, because that is when the query execution begins.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If you require more fine-grained measurement, you can use the <ph id="ph1">`ElapsedTicks`</ph> property instead of <ph id="ph2">`ElapsedMilliseconds`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>PLINQ#19<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_Misc/plinq/cs/measure2.cs#19)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>PLINQ#19<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_Misc/plinq/vb/measure2.vb#19)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The total execution time is a useful metric when you are experimenting with query implementations, but it does not always tell the whole story.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To get a deeper and richer view of the interaction of the query threads with one another and with other running processes, use the Concurrency Visualizer.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Concurrency Visualizer<ept id="p1">](/visualstudio/profiling/concurrency-visualizer)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parallel LINQ (PLINQ)<ept id="p1">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>