<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">393e08f12f178ecfc6549c045784c828daa2e7ce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\textbox-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69f80c7189e07ca474673a9d1603bf1d2c913ebd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6c22a6bfa440c318a23d8761099f1786e1269e5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TextBox Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TextBox Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> class enables you to display or edit unformatted text.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A common use of a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is editing unformatted text in a form.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, a form asking for the user's name, phone number, etc would use <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls for text input.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic introduces the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> class and provides examples of how to use it in both <ph id="ph2">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> and <ph id="ph3">[!INCLUDE[TLA#tla_lhcshrp](../../../../includes/tlasharptla-lhcshrp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>TextBox or RichTextBox?</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> allow users to input text but the two controls are used for different scenarios.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> requires less system resources then a <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> so it is ideal when only plain text needs to be edited (i.e., usage in a form).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> is a better choice when it is necessary for the user to edit formatted text, images, tables, or other supported content.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, editing a document, article, or blog that requires formatting, images, etc is best accomplished using a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The table below summarizes the primary features of <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Control</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Real-time Spellchecking</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Context Menu</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Formatting commands like <ph id="ph1">&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;</ph> (Ctr+B)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> content like images, paragraphs, tables, etc.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>No.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Yes (see <bpt id="p1">[</bpt>RichTextBox Overview<ept id="p1">](../../../../docs/framework/wpf/controls/richtextbox-overview.md)</ept>)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Yes (see <bpt id="p1">[</bpt>RichTextBox Overview<ept id="p1">](../../../../docs/framework/wpf/controls/richtextbox-overview.md)</ept>)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> does not support formatting related editing commands like <ph id="ph2">&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;</ph> (Ctr+B), many basic commands are supported by both controls such as <ph id="ph3">&lt;xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.EditingCommands&gt;</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Features supported by <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> are covered in the sections below.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, see <bpt id="p1">[</bpt>RichTextBox Overview<ept id="p1">](../../../../docs/framework/wpf/controls/richtextbox-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Real-time Spellchecking</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can enable real-time spellchecking in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When spellchecking is turned on, a red line appears underneath any misspelled words (see picture below).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Textbox with spell&amp;#45;checking<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/controls/media/editing-textbox-with-spellchecking.png "</bpt>Editing_TextBox_with_Spellchecking<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Enable Spell Checking in a Text Editing Control<ept id="p1">](../../../../docs/framework/wpf/controls/how-to-enable-spell-checking-in-a-text-editing-control.md)</ept> to learn how to enable spellchecking.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Context Menu</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>By default, both <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> have a context menu that appears when a user right-clicks inside the control.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The context menu allows the user to cut, copy, or paste (see picture below).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>TextBox with context menu<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/controls/media/editing-textbox-with-context-menu.png "</bpt>Editing_TextBox_with_Context_Menu<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can create your own custom context menu to override the default behavior.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Use a Custom Context Menu with a TextBox<ept id="p1">](../../../../docs/framework/wpf/controls/how-to-use-a-custom-context-menu-with-a-textbox.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creating TextBoxes</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> can be a single line in height or comprise multiple lines.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A single line <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is best for inputting small amounts of plain text (i.e. "Name", "Phone Number", etc. in a form).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a single line <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>TextBoxMiscSnippets_snip#BasicTextBoxExampleWholePage<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/basictextboxexample.xaml#basictextboxexamplewholepage)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also create a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> that allows the user to enter multiple lines of text.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if your form asked for a biographical sketch of the user, you would want to use a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> that supports multiple lines of text.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example shows how to use <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> to define a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control that automatically expands to accommodate multiple lines of text.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>TextBox_MiscCode#_MultilineTextBoxXAML<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TextBox_MiscCode/CSharp/Window1.xaml#_multilinetextboxxaml)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.TextWrapping%2A&gt;</ph> attribute to <ph id="ph2">`Wrap`</ph> causes text to wrap to a new line when the edge of the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control is reached, automatically expanding the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control to include room for a new line, if necessary.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A&gt;</ph> attribute to <ph id="ph2">`true`</ph> causes a new line to be inserted when the RETURN key is pressed, once again automatically expanding the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to include room for a new line, if necessary.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A&gt;</ph> attribute adds a scroll bar to the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, so that the contents of the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> can be scrolled through if the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> expands beyond the size of the frame or window that encloses it.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information on different tasks associated with using a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, see <bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/controls/textbox-how-to-topics.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Detect When Content Changes</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Usually the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged&gt;</ph> event should be used to detect whenever the text in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> changes, rather then <ph id="ph4">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> as you might expect.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Detect When Text in a TextBox Has Changed<ept id="p1">](../../../../docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md)</ept> for an example.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/controls/textbox-how-to-topics.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RichTextBox Overview<ept id="p1">](../../../../docs/framework/wpf/controls/richtextbox-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>