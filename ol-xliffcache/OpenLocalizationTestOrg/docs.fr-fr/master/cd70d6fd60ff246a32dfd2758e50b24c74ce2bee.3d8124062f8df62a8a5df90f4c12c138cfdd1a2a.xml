{"content":"---\ntitle: \"XAttribute Class Overview (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 5a630f24-f9ad-400e-831e-c14ebfc9e142\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# XAttribute Class Overview (C#)\nAttributes are name/value pairs that are associated with an element. The <xref:System.Xml.Linq.XAttribute> class represents XML attributes.  \n  \n## Overview  \n Working with attributes in [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] is similar to working with elements. Their constructors are similar. The methods that you use to retrieve collections of them are similar. A [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query expression for a collection of attributes looks very similar to a [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query expression for a collection of elements.  \n  \n The order in which attributes were added to an element is preserved. That is, when you iterate through the attributes, you see them in the same order that they were added.  \n  \n## The XAttribute Constructor  \n The following constructor of the <xref:System.Xml.Linq.XAttribute> class is the one that you will most commonly use:  \n  \n|Constructor|Description|  \n|-----------------|-----------------|  \n|`XAttribute(XName name, object content)`|Creates an <xref:System.Xml.Linq.XAttribute> object. The `name` argument specifies the name of the attribute; `content` specifies the content of the attribute.|  \n  \n### Creating an Element with an Attribute  \n The following code shows the common task of creating an element that contains an attribute:  \n  \n```csharp  \nXElement phone = new XElement(\"Phone\",  \n    new XAttribute(\"Type\", \"Home\"),  \n    \"555-555-5555\");  \nConsole.WriteLine(phone);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Phone Type=\"Home\">555-555-5555</Phone>  \n```  \n  \n### Functional Construction of Attributes  \n You can construct <xref:System.Xml.Linq.XAttribute> objects in-line with the construction of <xref:System.Xml.Linq.XElement> objects, as follows:  \n  \n```csharp  \nXElement c = new XElement(\"Customers\",  \n    new XElement(\"Customer\",  \n        new XElement(\"Name\", \"John Doe\"),  \n        new XElement(\"PhoneNumbers\",  \n            new XElement(\"Phone\",  \n                new XAttribute(\"type\", \"home\"),  \n                \"555-555-5555\"),  \n            new XElement(\"Phone\",  \n                new XAttribute(\"type\", \"work\"),  \n                \"666-666-6666\")  \n        )  \n    )  \n);  \nConsole.WriteLine(c);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Customers>  \n  <Customer>  \n    <Name>John Doe</Name>  \n    <PhoneNumbers>  \n      <Phone type=\"home\">555-555-5555</Phone>  \n      <Phone type=\"work\">666-666-6666</Phone>  \n    </PhoneNumbers>  \n  </Customer>  \n</Customers>  \n```  \n  \n### Attributes Are Not Nodes  \n There are some differences between attributes and elements. <xref:System.Xml.Linq.XAttribute> objects are not nodes in the XML tree. They are name/value pairs associated with an XML element. In contrast to the Document Object Model (DOM), this more closely reflects the structure of XML. Although <xref:System.Xml.Linq.XAttribute> objects are not actually nodes in the XML tree, working with <xref:System.Xml.Linq.XAttribute> objects is very similar to working with <xref:System.Xml.Linq.XElement> objects.  \n  \n This distinction is primarily important only to developers who are writing code that works with XML trees at the node level. Many developers will not be concerned with this distinction.  \n  \n## See Also  \n [LINQ to XML Programming Overview (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)","nodes":[{"pos":[12,59],"content":"XAttribute Class Overview (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"XAttribute Class Overview (C#) | Microsoft Docs","pos":[0,47]}]},{"pos":[418,448],"content":"XAttribute Class Overview (C#)","linkify":"XAttribute Class Overview (C#)","nodes":[{"content":"XAttribute Class Overview (C#)","pos":[0,30]}]},{"content":"Attributes are name/value pairs that are associated with an element.","pos":[449,517]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> class represents XML attributes.","pos":[518,588],"source":" The <xref:System.Xml.Linq.XAttribute> class represents XML attributes."},{"pos":[597,605],"content":"Overview","linkify":"Overview","nodes":[{"content":"Overview","pos":[0,8]}]},{"content":"Working with attributes in <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> is similar to working with elements.","pos":[609,775],"source":"Working with attributes in [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] is similar to working with elements."},{"content":"Their constructors are similar.","pos":[776,807]},{"content":"The methods that you use to retrieve collections of them are similar.","pos":[808,877]},{"content":"A <ph id=\"ph1\">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query expression for a collection of attributes looks very similar to a <ph id=\"ph2\">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query expression for a collection of elements.","pos":[878,1132],"source":" A [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query expression for a collection of attributes looks very similar to a [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query expression for a collection of elements."},{"content":"The order in which attributes were added to an element is preserved.","pos":[1139,1207]},{"content":"That is, when you iterate through the attributes, you see them in the same order that they were added.","pos":[1208,1310]},{"pos":[1319,1345],"content":"The XAttribute Constructor","linkify":"The XAttribute Constructor","nodes":[{"content":"The XAttribute Constructor","pos":[0,26]}]},{"content":"The following constructor of the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> class is the one that you will most commonly use:","pos":[1349,1465],"source":"The following constructor of the <xref:System.Xml.Linq.XAttribute> class is the one that you will most commonly use:"},{"content":"Constructor","pos":[1472,1483]},{"content":"Description","pos":[1484,1495]},{"content":"Creates an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> object.","pos":[1581,1633],"source":"Creates an <xref:System.Xml.Linq.XAttribute> object."},{"content":"The <ph id=\"ph1\">`name`</ph> argument specifies the name of the attribute; <ph id=\"ph2\">`content`</ph> specifies the content of the attribute.","pos":[1634,1740],"source":" The `name` argument specifies the name of the attribute; `content` specifies the content of the attribute."},{"pos":[1751,1788],"content":"Creating an Element with an Attribute","linkify":"Creating an Element with an Attribute","nodes":[{"content":"Creating an Element with an Attribute","pos":[0,37]}]},{"content":"The following code shows the common task of creating an element that contains an attribute:","pos":[1792,1883]},{"content":"This example produces the following output:","pos":[2041,2084]},{"pos":[2154,2191],"content":"Functional Construction of Attributes","linkify":"Functional Construction of Attributes","nodes":[{"content":"Functional Construction of Attributes","pos":[0,37]}]},{"content":"You can construct <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects in-line with the construction of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects, as follows:","pos":[2195,2340],"source":"You can construct <xref:System.Xml.Linq.XAttribute> objects in-line with the construction of <xref:System.Xml.Linq.XElement> objects, as follows:"},{"content":"This example produces the following output:","pos":[2813,2856]},{"pos":[3111,3135],"content":"Attributes Are Not Nodes","linkify":"Attributes Are Not Nodes","nodes":[{"content":"Attributes Are Not Nodes","pos":[0,24]}]},{"content":"There are some differences between attributes and elements.","pos":[3139,3198]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects are not nodes in the XML tree.","pos":[3199,3271],"source":"<xref:System.Xml.Linq.XAttribute> objects are not nodes in the XML tree."},{"content":"They are name/value pairs associated with an XML element.","pos":[3272,3329]},{"content":"In contrast to the Document Object Model (DOM), this more closely reflects the structure of XML.","pos":[3330,3426]},{"content":"Although <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects are not actually nodes in the XML tree, working with <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects is very similar to working with <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[3427,3645],"source":" Although <xref:System.Xml.Linq.XAttribute> objects are not actually nodes in the XML tree, working with <xref:System.Xml.Linq.XAttribute> objects is very similar to working with <xref:System.Xml.Linq.XElement> objects."},{"content":"This distinction is primarily important only to developers who are writing code that works with XML trees at the node level.","pos":[3652,3776]},{"content":"Many developers will not be concerned with this distinction.","pos":[3777,3837]},{"pos":[3846,3854],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3858,3985],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML Programming Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept>","source":"[LINQ to XML Programming Overview (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)"}]}