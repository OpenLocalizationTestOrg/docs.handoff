<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="application-security-scenarios-in-sql-server.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96c9f48cbf2e2ade2ff1688573a83fd86d613f2c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\application-security-scenarios-in-sql-server.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40b2d988facba9e7e0d0df81f7f52d0946f00f2d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94aaf893933f914958ffa0535f2a769dc34023c9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Application Security Scenarios in SQL Server</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Application Security Scenarios in SQL Server</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There is no single correct way to create a secure SQL Server client application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Every application is unique in its requirements, deployment environment, and user population.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An application that is reasonably secure when it is initially deployed can become less secure over time.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It is impossible to predict with any accuracy what threats may emerge in the future.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SQL Server, as a product, has evolved over many versions to incorporate the latest security features that enable developers to create secure database applications.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, security doesn't come in the box; it requires continual monitoring and updating.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Common Threats</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Developers need to understand security threats, the tools provided to counter them, and how to avoid self-inflicted security holes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Security can best be thought of as a chain, where a break in any one link compromises the strength of the whole.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following list includes some common security threats that are discussed in more detail in the topics in this section.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>SQL Injection</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>SQL Injection is the process by which a malicious user enters Transact-SQL statements instead of valid input.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the input is passed directly to the server without being validated and if the application inadvertently executes the injected code, then the attack has the potential to damage or destroy data.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can thwart SQL Server injection attacks by using stored procedures and parameterized commands, avoiding dynamic SQL, and restricting permissions on all users.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Elevation of Privilege</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Elevation of privilege attacks occur when a user is able to assume the privileges of a trusted account, such as an owner or administrator.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Always run under least-privileged user accounts and assign only needed permissions.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Avoid using administrative or owner accounts for executing code.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This limits the amount of damage that can occur if an attack succeeds.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When performing tasks that require additional permissions, use procedure signing or impersonation only for the duration of the task.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can sign stored procedures with certificates or use impersonation to temporarily assign permissions.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Probing and Intelligent Observation</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A probing attack can use error messages generated by an application to search for security vulnerabilities.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Implement error handling in all procedural code to prevent SQL Server error information from being returned to the end user.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Authentication</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A connection string injection attack can occur when using SQL Server logins if a connection string based on user input is constructed at run time.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the connection string is not checked for valid keyword pairs, an attacker can insert extra characters, potentially accessing sensitive data or other resources on the server.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use Windows authentication wherever possible.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you must use SQL Server logins, use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> to create and validate connection strings at run time.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Passwords</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Many attacks succeed because an intruder was able to obtain or guess a password for a privileged user.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Passwords are your first line of defense against intruders, so setting strong passwords is essential to the security of your system.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Create and enforce password policies for mixed mode authentication.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Always assign a strong password to the <ph id="ph1">`sa`</ph> account, even when using Windows Authentication.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managing Permissions with Stored Procedures in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/managing-permissions-with-stored-procedures-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Describes how to use stored procedures to manage permissions and control data access.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Using stored procedures is an effective way to respond to many security threats.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Writing Secure Dynamic SQL in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/writing-secure-dynamic-sql-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Describes techniques for writing secure dynamic SQL using stored procedures.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Signing Stored Procedures in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/signing-stored-procedures-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Describes how to sign a stored procedure with a certificate to enable users to work with data they do not have direct access to.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This enables stored procedures to perform operations that the caller does not have permissions to perform directly.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Customizing Permissions with Impersonation in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/customizing-permissions-with-impersonation-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Describes how to use the EXECUTE AS clause to impersonate another user.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Impersonation switches the execution context from the caller to the specified user.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Granting Row-Level Permissions in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/granting-row-level-permissions-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Describes how to implement row-level permissions to restrict data access.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating Application Roles in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/creating-application-roles-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Describes features and functionality of application roles.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enabling Cross-Database Access in SQL Server<ept id="p1">](../../../../../docs/framework/data/adonet/sql/enabling-cross-database-access-in-sql-server.md)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Describes how to enable cross-database access without jeopardizing security.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SQL Server Security<ept id="p1">](../../../../../docs/framework/data/adonet/sql/sql-server-security.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overview of SQL Server Security<ept id="p1">](../../../../../docs/framework/data/adonet/sql/overview-of-sql-server-security.md)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing ADO.NET Applications<ept id="p1">](../../../../../docs/framework/data/adonet/securing-ado-net-applications.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>