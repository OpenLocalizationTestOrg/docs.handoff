<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bc33023.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">529da92925a6fcdcd8a46c21270a60c484e87faf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc33023.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e773eeff4a166c5ed28d5d80aff1ef207bc7c112</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06af58de5a77e507ba61bfcd51f21eae532e42ff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Operator '<ph id="ph1">&lt;operator&gt;</ph>' must have a return type of Boolean</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Operator '<ph id="ph1">\&lt;</ph>operator&gt;' must have a return type of Boolean</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A comparison or logical operator is declared with a return type other than the <bpt id="p1">[</bpt>Boolean Data Type<ept id="p1">](../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The result of a comparison operator (<ph id="ph1">`=`</ph>, <ph id="ph2">`&lt;&gt;`</ph>, <ph id="ph3">`&lt;`</ph>, <ph id="ph4">`&lt;=`</ph>, <ph id="ph5">`&gt;`</ph>, <ph id="ph6">`&gt;=`</ph>, <ph id="ph7">`Is`</ph>, <ph id="ph8">`IsNot`</ph>, <ph id="ph9">`IsFalse`</ph>, <ph id="ph10">`IsTrue`</ph>, <ph id="ph11">`Like`</ph>, <ph id="ph12">`TypeOf`</ph>) can be only <ph id="ph13">`True`</ph> or <ph id="ph14">`False`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Comparison Operators in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Logical operators (<ph id="ph1">`And`</ph>, <ph id="ph2">`AndAlso`</ph>, <ph id="ph3">`Not`</ph>, <ph id="ph4">`Or`</ph>, <ph id="ph5">`OrElse`</ph>, <ph id="ph6">`Xor`</ph>) work entirely within the domain of Boolean values.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Logical and Bitwise Operators in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC33023</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Replace the return type of this comparison or logical operator with <ph id="ph1">`Boolean`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Statement<ept id="p1">](../../visual-basic/language-reference/statements/operator-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define an Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Conversion Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>