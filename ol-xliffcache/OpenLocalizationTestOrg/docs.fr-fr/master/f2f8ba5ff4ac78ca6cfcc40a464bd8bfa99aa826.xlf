<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-impersonate-a-client-on-a-service.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2f8ba5ff4ac78ca6cfcc40a464bd8bfa99aa826</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\how-to-impersonate-a-client-on-a-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f1fd625298480c7b7abf66417710a58776d377a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9ab262cc1e953387414db84f49c2204a5c43a1f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Impersonate a Client on a Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Impersonate a Client on a Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Impersonating a client on a <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> service enables the service to perform actions on behalf of the client.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For actions subject to access control list (ACL) checks, such as access to directories and files on a machine or access to a SQL Server database, the ACL check is against the client user account.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic shows the basic steps required to enable a client in a Windows domain to set a client impersonation level.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For a working example of this, see <bpt id="p1">[</bpt>Impersonating the Client<ept id="p1">](../../../docs/framework/wcf/samples/impersonating-the-client.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> client impersonation, see <bpt id="p1">[</bpt>Delegation and Impersonation<ept id="p1">](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When the client and service are running on the same computer and the client is running under a system account (that is, <ph id="ph1">`Local System`</ph> or <ph id="ph2">`Network Service`</ph>), the client cannot be impersonated when a secure session is established with stateful Security Context tokens.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A WinForms or console application typically is run under the currently logged in account, so that account can be impersonated by default.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, when the client is an <ph id="ph1">[!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)]</ph> page and that page is hosted in <ph id="ph2">[!INCLUDE[iis601](../../../includes/iis601-md.md)]</ph> or IIS 7.0, then the client does run under the <ph id="ph3">`Network Service`</ph> account by default.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All of the system-provided bindings that support secure sessions use a stateless Security Context token by default.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, if the client is an <ph id="ph1">[!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)]</ph> page and secure sessions with stateful Security Context tokens are used, the client cannot be impersonated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> using stateful Security Context tokens in a secure session, see <bpt id="p1">[</bpt>How to: Create a Security Context Token for a Secure Session<ept id="p1">](../../../docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To enable impersonation of a client from a cached Windows token on a service</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create the service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For a tutorial of this basic procedure, see <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](../../../docs/framework/wcf/getting-started-tutorial.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use a binding that uses Windows authentication and creates a session, such as <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When creating the implementation of the service's interface, apply the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> class to the method that requires client impersonation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.ServiceModel.ImpersonationOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To set the allowed impersonation level on the client</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create service client code by using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After creating the <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> client, set the <ph id="ph2">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.Security.WindowsClientCredential&gt;</ph> class to one of the <ph id="ph4">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph>, negotiated Kerberos authentication (sometimes called <bpt id="p1">*</bpt>multi-leg<ept id="p1">*</ept> or <bpt id="p2">*</bpt>multi-step<ept id="p2">*</ept> Kerberos) must be used.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For a description of how to implement this, see <bpt id="p1">[</bpt>Best Practices for Security<ept id="p1">](../../../docs/framework/wcf/feature-details/best-practices-for-security-in-wcf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Impersonating the Client<ept id="p1">](../../../docs/framework/wcf/samples/impersonating-the-client.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegation and Impersonation<ept id="p1">](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>