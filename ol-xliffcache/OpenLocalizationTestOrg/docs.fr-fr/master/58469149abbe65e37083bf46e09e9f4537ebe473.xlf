<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icordebugeval-interface.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58469149abbe65e37083bf46e09e9f4537ebe473</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\icordebugeval-interface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33209b284dd1e62aabe447412e602045bca406ee</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a0c2d5bf7d3abe0db5c5fb28d62c87740a30fa9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorDebugEval Interface1 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorDebugEval Interface1</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides methods to enable the debugger to execute code within the context of the code being debugged.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Abort Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-abort-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Aborts the computation this <ph id="ph1">`ICorDebugEval`</ph> object is currently performing.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CallFunction Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-callfunction-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sets up a call to the specified function.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>(Obsolete in the .NET Framework version 2.0; use <bpt id="p1">[</bpt>ICorDebugEval2::CallParameterizedFunction<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval2-callparameterizedfunction-method.md)</ept> instead.)</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CreateValue Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-createvalue-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets an interface pointer to an "ICorDebugValue" object of the specified type, with an initial value of zero or null.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>(Obsolete in the .NET Framework 2.0; use <bpt id="p1">[</bpt>ICorDebugEval2::CreateValueForType<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval2-createvaluefortype-method.md)</ept> instead.)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetResult Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-getresult-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets an interface pointer to an <ph id="ph1">`ICorDebugValue`</ph> that contains the results of the evaluation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetThread Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-getthread-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets an interface pointer to the "ICorDebugThread" where this evaluation is executing or will execute.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsActive Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-isactive-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">`ICorDebugEval`</ph> object is currently executing.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NewArray Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-newarray-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Allocates a new array of the specified element type and dimensions.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(Obsolete in the .NET Framework 2.0; use <bpt id="p1">[</bpt>ICorDebugEval2::NewParameterizedArray<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval2-newparameterizedarray-method.md)</ept> instead.)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NewObject Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-newobject-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Allocates a new object instance and calls the specified constructor method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>(Obsolete in the .NET Framework 2.0; use <bpt id="p1">[</bpt>ICorDebugEval2::NewParameterizedObject<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval2-newparameterizedobject-method.md)</ept> instead.)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NewObjectNoConstructor Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-newobjectnoconstructor-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Allocates a new object instance of the specified type, without attempting to call a constructor method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>(Obsolete in the .NET Framework 2.0; use <bpt id="p1">[</bpt>ICorDebugEval2::NewParameterizedObjectNoConstructor<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval2-newparameterizedobjectnoconstructor-method.md)</ept> instead.)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NewString Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-newstring-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Allocates a new string object with the specified contents.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`ICorDebugEval`</ph> object is created in the context of a specific thread that is used to perform the evaluations.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>All objects and types used in a given evaluation must reside within the same application domain.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>That application domain need not be the same as the current application domain of the thread.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Evaluations can be nested.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The evaluation's operations do not complete until the debugger calls <bpt id="p1">[</bpt>ICorDebugController::Continue<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugcontroller-continue-method.md)</ept>, and then receives an <bpt id="p2">[</bpt>ICorDebugManagedCallback::EvalComplete<ept id="p2">](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-evalcomplete-method.md)</ept> callback.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you need to use the evaluation functionality without allowing other threads to run, suspend the threads by using either <bpt id="p1">[</bpt>ICorDebugController::SetAllThreadsDebugState<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugcontroller-setallthreadsdebugstate-method.md)</ept> or <bpt id="p2">[</bpt>ICorDebugController::Stop<ept id="p2">](../../../../docs/framework/unmanaged-api/debugging/icordebugcontroller-stop-method.md)</ept> before calling <bpt id="p3">[</bpt>ICorDebugController::Continue<ept id="p3">](../../../../docs/framework/unmanaged-api/debugging/icordebugcontroller-continue-method.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Because user code is running when the evaluation is in progress, any debug events can occur, including class loads and breakpoints.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The debugger will receive callbacks, as normal, for these events.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The state of the evaluation will be seen as part of the inspection of the normal program state.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The stack chain will be a <ph id="ph1">`CHAIN_FUNC_EVAL`</ph> chain (see the "CorDebugStepReason" enumeration and the <bpt id="p1">[</bpt>ICorDebugChain::GetReason<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugchain-getreason-method.md)</ept> method).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The full debugger API will continue to operate as normal.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a deadlocked or infinite looping situation arises, the user code may never complete.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In such a case, you must call <bpt id="p1">[</bpt>ICorDebugEval::Abort<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugeval-abort-method.md)</ept> before resuming the program.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This interface does not support being called remotely, either cross-machine or cross-process.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorDebug.idl, CorDebug.h</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>