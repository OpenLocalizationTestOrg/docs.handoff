<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerfunctioncontrol-setcodegenflags-method.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12f91bdd264135eb0ff3a48e15611cf5a0e3c064</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerfunctioncontrol-setcodegenflags-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20c332e5afdfea5dc5a5a564d7b2d47805e2f9ed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2900402b4674643185b75b22705692aef8cc100</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerFunctionControl::SetCodegenFlags Method</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerFunctionControl::SetCodegenFlags Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sets one or more flags from the <bpt id="p1">[</bpt>COR_PRF_CODEGEN_FLAGS<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md)</ept> enumeration to control code generation for a just-in-time (JIT) recompiled function.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] One or more flags from the <bpt id="p1">[</bpt>COR_PRF_CODEGEN_FLAGS<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md)</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The profiler obtains an instance of this interface through the <bpt id="p1">[</bpt>ICorProfilerCallback4::GetReJITParameters<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback4-getrejitparameters-method.md)</ept> callback.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SetCodegenFlags`</ph> allows the profiler to control the code generation for the recompiled function.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As with all other JIT recompilation parameters, the code generation flags apply to all instances of the function.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The JIT compiler considers these compilation flags, along with other flags specified by other sources, when compiling a function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The other sources include the debugger, global flags set by the profiler on startup by using the <bpt id="p1">[</bpt>ICorProfilerInfo::SetEventMask<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md)</ept> method (with the values <ph id="ph1">`COR_PRF_DISABLE_INLINING`</ph> and <ph id="ph2">`COR_PRF_DISABLE_OPTIMIZATIONS`</ph>), and the profilerâ€™s <bpt id="p2">[</bpt>ICorProfilerCallback::JITInlining<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md)</ept> callback.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The JIT compiler gives precedence to a source that requests the least amount of optimizing.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if the profiler specifies <ph id="ph1">`COR_PRF_DISABLE_INLINING`</ph> on startup, but does not specify <ph id="ph2">`COR_PRF_CODEGEN_DISABLE_INLINING`</ph> in the <bpt id="p1">[</bpt>ICorProfilerFunctionControl::SetCodegenFlags<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setcodegenflags-method.md)</ept> callback, inlining is still disabled.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Similarly, if the profiler does not specify <ph id="ph1">`COR_PRF_CODEGEN_DISABLE_INLINING`</ph> in <ph id="ph2">`SetCodegenFlags`</ph>, but then disables inlining by using the <bpt id="p1">[</bpt>ICorProfilerCallback::JITInlining<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md)</ept> callback, inlining is disabled.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerFunctionControl Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-interface.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>