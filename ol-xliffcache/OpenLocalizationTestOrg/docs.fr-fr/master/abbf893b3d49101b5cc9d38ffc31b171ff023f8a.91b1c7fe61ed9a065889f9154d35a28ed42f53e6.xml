{"content":"---\ntitle: \"CertVerifyAuthenticodeLicense Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"CertVerifyAuthenticodeLicense\"\napi_location: \n  - \"clr.dll\"\napi_type: \n  - \"DLLExport\"\nms.assetid: 00118de7-33c6-41c4-8e1f-5d5e35e0da83\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# CertVerifyAuthenticodeLicense Function\nVerifies the validity of an Authenticode XrML license.  \n  \n## Syntax  \n  \n```  \nHRESULT CertVerifyAuthenticodeLicense (  \n    [in]   PCRYPT_DATA_BLOB                   pLicenseBlob,  \n    [in]   OPTIONAL DWORD                     dwFlags,  \n    [out]  PAXL_AUTHENTICODE_SIGNER_INFO      pSignerInfo,  \n    [out]  PAXL_AUTHENTICODE_TIMESTAMPER_INFO pTimestamperInfo  \n);  \n```  \n  \n## Parameters  \n `pLicenseBlob`  \n [in] The Authenticode XrML license to be verified.  \n  \n See the [CRYPTOAPI_BLOB](/windows/desktop/api/dpapi/ns-dpapi-_cryptoapi_blob) structure.  \n  \n `dwFlags`  \n [in] Optional. A combination of following values:  \n  \n-   AXL_REVOCATION_NO_CHECK  \n  \n-   AXL_REVOCATION_CHECK_END_CERT_ONLY  \n  \n-   AXL_REVOCATION_CHECK_ENTIRE_CHAIN  \n  \n-   AXL_URL_CACHE_ONLY_RETRIEVAL  \n  \n-   AXL_LIFETIME_SIGNING  \n  \n-   AXL_TRUST_MICROSOFT_ROOT_ONLY  \n  \n `pSignerInfo`  \n [out] To receive the signer's information. If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use.  \n  \n See [AXL_AUTHENTICODE_SIGNER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-signer-info-structure.md).  \n  \n `pTimestamperInfo`  \n [out] To receive time stamper's information, if available. If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use.  \n  \n See [AXL_AUTHENTICODE_TIMESTAMPER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-timestamper-info-structure.md).  \n  \n## Return Value  \n Returns `S_OK` if successful. Otherwise, returns an error code.  \n  \n## See also\n\n- [Authenticode](../../../../docs/framework/unmanaged-api/authenticode/index.md)\n- [GetHashFromHandle Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-gethashfromhandle-method.md)\n- [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)\n","nodes":[{"pos":[4,265],"embed":true,"restype":"x-metadata","content":"title: \"CertVerifyAuthenticodeLicense Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"CertVerifyAuthenticodeLicense\"\napi_location: \n  - \"clr.dll\"\napi_type: \n  - \"DLLExport\"\nms.assetid: 00118de7-33c6-41c4-8e1f-5d5e35e0da83\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"CertVerifyAuthenticodeLicense Function","nodes":[{"pos":[0,38],"content":"CertVerifyAuthenticodeLicense Function","nodes":[{"content":"CertVerifyAuthenticodeLicense Function","pos":[0,38]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[272,310],"content":"CertVerifyAuthenticodeLicense Function","linkify":"CertVerifyAuthenticodeLicense Function","nodes":[{"content":"CertVerifyAuthenticodeLicense Function","pos":[0,38]}]},{"content":"Verifies the validity of an Authenticode XrML license.","pos":[311,365]},{"pos":[374,380],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[696,706],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The Authenticode XrML license to be verified.","pos":[728,778]},{"pos":[785,873],"content":"See the <bpt id=\"p1\">[</bpt>CRYPTOAPI_BLOB<ept id=\"p1\">](/windows/desktop/api/dpapi/ns-dpapi-_cryptoapi_blob)</ept> structure.","source":"See the [CRYPTOAPI_BLOB](/windows/desktop/api/dpapi/ns-dpapi-_cryptoapi_blob) structure."},{"content":"[in] Optional.","pos":[893,907]},{"content":"A combination of following values:","pos":[908,942]},{"content":"AXL_REVOCATION_NO_CHECK","pos":[952,975]},{"content":"AXL_REVOCATION_CHECK_END_CERT_ONLY","pos":[985,1019]},{"content":"AXL_REVOCATION_CHECK_ENTIRE_CHAIN","pos":[1029,1062]},{"content":"AXL_URL_CACHE_ONLY_RETRIEVAL","pos":[1072,1100]},{"content":"AXL_LIFETIME_SIGNING","pos":[1110,1130]},{"content":"AXL_TRUST_MICROSOFT_ROOT_ONLY","pos":[1140,1169]},{"pos":[1176,1522],"content":"`pSignerInfo`  \n[out] To receive the signer's information. If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use.","leadings":[""," "],"nodes":[{"content":"[out] To receive the signer's information. If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use.","pos":[16,345],"nodes":[{"content":"[out] To receive the signer's information.","pos":[0,42]},{"content":"If the license wasn't signed, <ph id=\"ph1\">`dwError`</ph> is set to TRUST_E_NOSIGNATURE.","pos":[43,113],"source":" If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE."},{"content":"It is the caller's responsibility to free resources by using the <bpt id=\"p1\">[</bpt>CertFreeAuthenticodeSignerInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md)</ept> function after use.","pos":[114,329],"source":" It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use."}]}]},{"pos":[1529,1671],"content":"See <bpt id=\"p1\">[</bpt>AXL_AUTHENTICODE_SIGNER_INFO Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-signer-info-structure.md)</ept>.","source":"See [AXL_AUTHENTICODE_SIGNER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-signer-info-structure.md)."},{"pos":[1678,2062],"content":"`pTimestamperInfo`  \n[out] To receive time stamper's information, if available. If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use.","leadings":[""," "],"nodes":[{"content":"[out] To receive time stamper's information, if available. If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use.","pos":[21,383],"nodes":[{"content":"[out] To receive time stamper's information, if available.","pos":[0,58]},{"content":"If the license was not time-stamped, <ph id=\"ph1\">`dwError`</ph> is set to TRUST_E_NOSIGNATURE.","pos":[59,136],"source":" If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE."},{"content":"It is the caller's responsibility to free resources by using the <bpt id=\"p1\">[</bpt>CertFreeAuthenticodeTimestamperInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md)</ept> function after use.","pos":[137,362],"source":" It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use."}]}]},{"pos":[2069,2221],"content":"See <bpt id=\"p1\">[</bpt>AXL_AUTHENTICODE_TIMESTAMPER_INFO Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-timestamper-info-structure.md)</ept>.","source":"See [AXL_AUTHENTICODE_TIMESTAMPER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-timestamper-info-structure.md)."},{"pos":[2230,2242],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns <ph id=\"ph1\">`S_OK`</ph> if successful.","pos":[2246,2275],"source":"Returns `S_OK` if successful."},{"content":"Otherwise, returns an error code.","pos":[2276,2309]},{"pos":[2318,2326],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2330,2408],"content":"<bpt id=\"p1\">[</bpt>Authenticode<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/index.md)</ept>","source":"[Authenticode](../../../../docs/framework/unmanaged-api/authenticode/index.md)"},{"pos":[2411,2530],"content":"<bpt id=\"p1\">[</bpt>GetHashFromHandle Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-gethashfromhandle-method.md)</ept>","source":"[GetHashFromHandle Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-gethashfromhandle-method.md)"},{"pos":[2533,2637],"content":"<bpt id=\"p1\">[</bpt>ICLRStrongName Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)</ept>","source":"[ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)"}]}