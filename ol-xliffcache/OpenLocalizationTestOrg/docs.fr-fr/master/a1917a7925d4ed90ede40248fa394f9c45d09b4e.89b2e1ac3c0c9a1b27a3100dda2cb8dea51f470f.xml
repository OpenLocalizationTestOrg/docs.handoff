{"content":"---\ntitle: \"object - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"object_CSharpKeyword\"\n  - \"object\"\nhelpviewer_keywords: \n  - \"object keyword [C#]\"\nms.assetid: 93f60c0b-e17a-40a9-9362-cca5fb77b0e7\n---\n# object (C# Reference)\n\nThe `object` type is an alias for <xref:System.Object> in .NET. In the unified type system of C#, all types, predefined and user-defined, reference types and value types, inherit directly or indirectly from <xref:System.Object>. You can assign values of any type to variables of type `object`. When a variable of a value type is converted to object, it is said to be *boxed*. When a variable of type object is converted to a value type, it is said to be *unboxed*. For more information, see [Boxing and Unboxing](../../../csharp/programming-guide/types/boxing-and-unboxing.md).\n\n## Example\n\nThe following sample shows how variables of type `object` can accept values of any data type and how variables of type `object` can use methods on <xref:System.Object> from the .NET Framework.\n\n[!code-csharp[csrefKeywordsTypes#16](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsTypes/CS/keywordsTypes.cs#16)]\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Reference Types](reference-types.md)\n- [Value Types](value-types.md)","nodes":[{"pos":[4,226],"embed":true,"restype":"x-metadata","content":"title: \"object - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"object_CSharpKeyword\"\n  - \"object\"\nhelpviewer_keywords: \n  - \"object keyword [C#]\"\nms.assetid: 93f60c0b-e17a-40a9-9362-cca5fb77b0e7","nodes":[{"content":"object - C# Reference","nodes":[{"pos":[0,21],"content":"object - C# Reference","nodes":[{"content":"object - C# Reference","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[233,254],"content":"object (C# Reference)","linkify":"object (C# Reference)","nodes":[{"content":"object (C# Reference)","pos":[0,21]}]},{"content":"The <ph id=\"ph1\">`object`</ph> type is an alias for <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> in .NET.","pos":[256,319],"source":"The `object` type is an alias for <xref:System.Object> in .NET."},{"content":"In the unified type system of C#, all types, predefined and user-defined, reference types and value types, inherit directly or indirectly from <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[320,484],"source":" In the unified type system of C#, all types, predefined and user-defined, reference types and value types, inherit directly or indirectly from <xref:System.Object>."},{"content":"You can assign values of any type to variables of type <ph id=\"ph1\">`object`</ph>.","pos":[485,549],"source":" You can assign values of any type to variables of type `object`."},{"content":"When a variable of a value type is converted to object, it is said to be <bpt id=\"p1\">*</bpt>boxed<ept id=\"p1\">*</ept>.","pos":[550,631],"source":" When a variable of a value type is converted to object, it is said to be *boxed*."},{"content":"When a variable of type object is converted to a value type, it is said to be <bpt id=\"p1\">*</bpt>unboxed<ept id=\"p1\">*</ept>.","pos":[632,720],"source":" When a variable of type object is converted to a value type, it is said to be *unboxed*."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Boxing and Unboxing<ept id=\"p1\">](../../../csharp/programming-guide/types/boxing-and-unboxing.md)</ept>.","pos":[721,833],"source":" For more information, see [Boxing and Unboxing](../../../csharp/programming-guide/types/boxing-and-unboxing.md)."},{"pos":[838,845],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[847,1039],"content":"The following sample shows how variables of type <ph id=\"ph1\">`object`</ph> can accept values of any data type and how variables of type <ph id=\"ph2\">`object`</ph> can use methods on <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph> from the .NET Framework.","source":"The following sample shows how variables of type `object` can accept values of any data type and how variables of type `object` can use methods on <xref:System.Object> from the .NET Framework."},{"pos":[1173,1198],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[1264,1272],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1276,1303],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1306,1362],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1365,1388],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1391,1428],"content":"<bpt id=\"p1\">[</bpt>Reference Types<ept id=\"p1\">](reference-types.md)</ept>","source":"[Reference Types](reference-types.md)"},{"pos":[1431,1460],"content":"<bpt id=\"p1\">[</bpt>Value Types<ept id=\"p1\">](value-types.md)</ept>","source":"[Value Types](value-types.md)"}]}