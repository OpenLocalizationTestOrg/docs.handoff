<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="load-data-from-a-reader.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55756092f086de47c4b2acb8f147ca3ab231abe1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\load-data-from-a-reader.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fb4b14b3f06b17090c726728cfa519b4e9a7a88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1023aabd74fb8b32a42bd099833b0a85bdc35564</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Load Data from a Reader</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Load Data from a Reader</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If an XML document is loaded using the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> method and a parameter of an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, there are differences in the behavior that occurs when compared to the behavior of loading data from the other formats.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the reader is in its initial state, <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> consumes the entire contents from the reader and builds the XML Document Object Model (DOM) from all the data in the reader.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If the reader is already positioned on a node somewhere in the document, and the reader is then passed to the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> attempts to read the current node and all of its siblings, up to the end tag that closes the current depth into memory.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The success of the attempted <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> depends on the node that the reader is on when the load is attempted, as <ph id="ph2">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> verifies that the XML from the reader is well-formed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the XML is not well-formed, the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, the following set of nodes contain two root-level elements, the XML is not well-formed, and <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Comment node, followed by an Element node, followed by an Element node, followed by an EndElement node.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following set of nodes creates an incomplete DOM, because there is no root-level element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Comment node followed by a ProcessingInstruction node followed by a Comment node followed by an EndElement node.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This does not throw an exception, and the data is loaded.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can add a root element to the top of these nodes and create well-formed XML that can be saved without error.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The document begins loading at this point.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> does not verify whether the XML is valid using document type definition (DTD) or schema validation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It only verifies whether the XML is well-formed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In order for validation to occur, you need to create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class can enforce validation using a DTD or Schema definition language (XSD) schema.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.ValidationType&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class determines whether the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance enforces validation.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information about validating XML data, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>