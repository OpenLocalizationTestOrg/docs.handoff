{"content":"---\ntitle: \"Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39; | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc32083\"\n  - \"BC32083\"\nhelpviewer_keywords: \n  - \"BC32083\"\nms.assetid: 56bf25f1-375c-4b5d-9969-45eba8b3b66c\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39;\nA type argument supplies a type without an accessible parameterless constructor to a type parameter with the [New Operator](../../visual-basic/language-reference/operators/new-operator.md) constraint.  \n  \n A constraint list imposes requirements on the type argument passed to the type parameter. One possible requirement is that the type argument must expose a parameterless constructor that the creating code can access. To specify this requirement, the constraint list includes the `New` constraint.  \n  \n **Error ID:** BC32083  \n  \n## To correct this error  \n  \n1.  Verify that the generic type name and the type name in the type argument are spelled correctly.  \n  \n2.  Choose a type for the type argument that exposes an accessible parameterless constructor. You cannot invoke this particular generic type unless you can supply such a type argument to this type parameter.  \n  \n## See Also  \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [Type List](../../visual-basic/language-reference/statements/type-list.md)   \n [How to: Use a Generic Class](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)","nodes":[{"pos":[12,226],"content":"Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Type argument &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typeargumentname<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; must have a public parameterless instance constructor to satisfy the &amp;#39;New&amp;#39; constraint for type parameter &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>typeparametername<ph id=\"ph4\">&amp;gt;</ph>&amp;#39; | Microsoft Docs","pos":[0,214],"source":"Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39; | Microsoft Docs"}]},{"pos":[742,939],"content":"Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39;","linkify":"Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39;","nodes":[{"content":"Type argument &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typeargumentname<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; must have a public parameterless instance constructor to satisfy the &amp;#39;New&amp;#39; constraint for type parameter &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>typeparametername<ph id=\"ph4\">&amp;gt;</ph>&amp;#39;","pos":[0,197],"source":"Type argument &#39;&lt;typeargumentname&gt;&#39; must have a public parameterless instance constructor to satisfy the &#39;New&#39; constraint for type parameter &#39;&lt;typeparametername&gt;&#39;"}]},{"pos":[940,1140],"content":"A type argument supplies a type without an accessible parameterless constructor to a type parameter with the <bpt id=\"p1\">[</bpt>New Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/new-operator.md)</ept> constraint.","source":"A type argument supplies a type without an accessible parameterless constructor to a type parameter with the [New Operator](../../visual-basic/language-reference/operators/new-operator.md) constraint."},{"content":"A constraint list imposes requirements on the type argument passed to the type parameter.","pos":[1147,1236]},{"content":"One possible requirement is that the type argument must expose a parameterless constructor that the creating code can access.","pos":[1237,1362]},{"content":"To specify this requirement, the constraint list includes the <ph id=\"ph1\">`New`</ph> constraint.","pos":[1363,1442],"source":" To specify this requirement, the constraint list includes the `New` constraint."},{"pos":[1449,1470],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32083","source":"**Error ID:** BC32083"},{"pos":[1479,1500],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Verify that the generic type name and the type name in the type argument are spelled correctly.","pos":[1510,1605]},{"content":"Choose a type for the type argument that exposes an accessible parameterless constructor.","pos":[1615,1704]},{"content":"You cannot invoke this particular generic type unless you can supply such a type argument to this type parameter.","pos":[1705,1818]},{"pos":[1827,1835],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[1839,1955],"source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept><ph id=\"ph1\"> </ph>","pos":[1958,2034],"source":" [Type List](../../visual-basic/language-reference/statements/type-list.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Use a Generic Class<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept>","pos":[2037,2164],"source":" [How to: Use a Generic Class](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)"}]}