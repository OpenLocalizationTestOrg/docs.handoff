{"content":"---\ntitle: \"How to: Use the Image Element\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"controls [WPF], Image\"\n  - \"Image control [WPF]\"\n  - \"rendering images [WPF]\"\nms.assetid: 5b92e74b-1b56-4756-ac64-d5e9e08d9854\n---\n# How to: Use the Image Element\nThis example shows how to include images in an application by using the <xref:System.Windows.Controls.Image> element.  \n  \n## Example  \n The following example shows how to render an image 200 pixels wide. In this [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] example, both attribute syntax and property tag syntax are used to define the image. For more information on attribute syntax and property syntax, see [Dependency Properties Overview](../advanced/dependency-properties-overview.md). A <xref:System.Windows.Media.Imaging.BitmapImage> is used to define the image's source data and is explicitly defined for the property tag syntax example. In addition, the <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> of the <xref:System.Windows.Media.Imaging.BitmapImage> is set to the same width as the <xref:System.Windows.FrameworkElement.Width%2A> of the <xref:System.Windows.Controls.Image>. This is done to ensure that the minimum amount of memory is used rendering the image.  \n  \n> [!NOTE]\n>  In general, if you want to specify the size of a rendered image, specify only the <xref:System.Windows.FrameworkElement.Width%2A> or the <xref:System.Windows.FrameworkElement.Height%2A> but not both. If you only specify one, the image's aspect ratio is preserved. Otherwise, the image may unexpectedly appear stretched or warped. To control the image's stretching behavior, use the <xref:System.Windows.Controls.Image.Stretch%2A> and <xref:System.Windows.Controls.Image.StretchDirection%2A> properties.  \n  \n> [!NOTE]\n>  When you specify the size of an image with either <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.Height%2A>, you should also set either <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> or <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A> to the same respective size.  \n  \n The <xref:System.Windows.Controls.Image.Stretch%2A> property determines how the image source is stretched to fill the image element. For more information, see the <xref:System.Windows.Media.Stretch> enumeration.  \n  \n [!code-xaml[ImageElementExample_snip#ImageSimpleExampleInlineMarkup](~/samples/snippets/csharp/VS_Snippets_Wpf/ImageElementExample_snip/CSharp/ImageSimpleExample.xaml#imagesimpleexampleinlinemarkup)]  \n  \n## Example  \n The following example shows how to render an image 200 pixels wide using code.  \n  \n> [!NOTE]\n>  Setting <xref:System.Windows.Media.Imaging.BitmapImage> properties must be done within a <xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> and <xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> block.  \n  \n [!code-csharp[ImageElementExample_snip#ImageSimpleExampleInlineCode1](~/samples/snippets/csharp/VS_Snippets_Wpf/ImageElementExample_snip/CSharp/ImageSimpleExample.xaml.cs#imagesimpleexampleinlinecode1)]\n [!code-vb[ImageElementExample_snip#ImageSimpleExampleInlineCode1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImageElementExample_snip/VB/ImageSimpleExample.xaml.vb#imagesimpleexampleinlinecode1)]  \n  \n## See also\n\n- [Imaging Overview](../graphics-multimedia/imaging-overview.md)\n","nodes":[{"pos":[4,252],"embed":true,"restype":"x-metadata","content":"title: \"How to: Use the Image Element\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"controls [WPF], Image\"\n  - \"Image control [WPF]\"\n  - \"rendering images [WPF]\"\nms.assetid: 5b92e74b-1b56-4756-ac64-d5e9e08d9854","nodes":[{"content":"How to: Use the Image Element","nodes":[{"pos":[0,29],"content":"How to: Use the Image Element","nodes":[{"content":"How to: Use the Image Element","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[259,288],"content":"How to: Use the Image Element","linkify":"How to: Use the Image Element","nodes":[{"content":"How to: Use the Image Element","pos":[0,29]}]},{"pos":[289,406],"content":"This example shows how to include images in an application by using the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Image&gt;</ph> element.","source":"This example shows how to include images in an application by using the <xref:System.Windows.Controls.Image> element."},{"pos":[415,422],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to render an image 200 pixels wide.","pos":[426,493]},{"content":"In this <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> example, both attribute syntax and property tag syntax are used to define the image.","pos":[494,656],"source":" In this [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] example, both attribute syntax and property tag syntax are used to define the image."},{"content":"For more information on attribute syntax and property syntax, see <bpt id=\"p1\">[</bpt>Dependency Properties Overview<ept id=\"p1\">](../advanced/dependency-properties-overview.md)</ept>.","pos":[657,803],"source":" For more information on attribute syntax and property syntax, see [Dependency Properties Overview](../advanced/dependency-properties-overview.md)."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.Imaging.BitmapImage&gt;</ph> is used to define the image's source data and is explicitly defined for the property tag syntax example.","pos":[804,958],"source":" A <xref:System.Windows.Media.Imaging.BitmapImage> is used to define the image's source data and is explicitly defined for the property tag syntax example."},{"content":"In addition, the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Imaging.BitmapImage&gt;</ph> is set to the same width as the <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Image&gt;</ph>.","pos":[959,1223],"source":" In addition, the <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> of the <xref:System.Windows.Media.Imaging.BitmapImage> is set to the same width as the <xref:System.Windows.FrameworkElement.Width%2A> of the <xref:System.Windows.Controls.Image>."},{"content":"This is done to ensure that the minimum amount of memory is used rendering the image.","pos":[1224,1309]},{"pos":[1317,1830],"content":"[!NOTE]\n In general, if you want to specify the size of a rendered image, specify only the <xref:System.Windows.FrameworkElement.Width%2A> or the <xref:System.Windows.FrameworkElement.Height%2A> but not both. If you only specify one, the image's aspect ratio is preserved. Otherwise, the image may unexpectedly appear stretched or warped. To control the image's stretching behavior, use the <xref:System.Windows.Controls.Image.Stretch%2A> and <xref:System.Windows.Controls.Image.StretchDirection%2A> properties.","leadings":["","> "],"nodes":[{"content":"In general, if you want to specify the size of a rendered image, specify only the <xref:System.Windows.FrameworkElement.Width%2A> or the <xref:System.Windows.FrameworkElement.Height%2A> but not both. If you only specify one, the image's aspect ratio is preserved. Otherwise, the image may unexpectedly appear stretched or warped. To control the image's stretching behavior, use the <xref:System.Windows.Controls.Image.Stretch%2A> and <xref:System.Windows.Controls.Image.StretchDirection%2A> properties.","pos":[9,511],"nodes":[{"content":"In general, if you want to specify the size of a rendered image, specify only the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> but not both.","pos":[0,199],"source":"In general, if you want to specify the size of a rendered image, specify only the <xref:System.Windows.FrameworkElement.Width%2A> or the <xref:System.Windows.FrameworkElement.Height%2A> but not both."},{"content":"If you only specify one, the image's aspect ratio is preserved.","pos":[200,263]},{"content":"Otherwise, the image may unexpectedly appear stretched or warped.","pos":[264,329]},{"content":"To control the image's stretching behavior, use the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Image.Stretch%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Image.StretchDirection%2A&gt;</ph> properties.","pos":[330,502],"source":" To control the image's stretching behavior, use the <xref:System.Windows.Controls.Image.Stretch%2A> and <xref:System.Windows.Controls.Image.StretchDirection%2A> properties."}]}]},{"pos":[1838,2195],"content":"[!NOTE]\n When you specify the size of an image with either <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.Height%2A>, you should also set either <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> or <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A> to the same respective size.","leadings":["","> "],"nodes":[{"content":"When you specify the size of an image with either <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, you should also set either <ph id=\"ph3\">&lt;xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A&gt;</ph> to the same respective size.","pos":[9,355],"source":"When you specify the size of an image with either <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.Height%2A>, you should also set either <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth%2A> or <xref:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight%2A> to the same respective size."}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Image.Stretch%2A&gt;</ph> property determines how the image source is stretched to fill the image element.","pos":[2202,2334],"source":"The <xref:System.Windows.Controls.Image.Stretch%2A> property determines how the image source is stretched to fill the image element."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Stretch&gt;</ph> enumeration.","pos":[2335,2413],"source":" For more information, see the <xref:System.Windows.Media.Stretch> enumeration."},{"pos":[2628,2635],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to render an image 200 pixels wide using code.","pos":[2639,2717]},{"pos":[2725,2955],"content":"[!NOTE]\n Setting <xref:System.Windows.Media.Imaging.BitmapImage> properties must be done within a <xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> and <xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> block.","leadings":["","> "],"nodes":[{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Media.Imaging.BitmapImage&gt;</ph> properties must be done within a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A&gt;</ph> block.","pos":[9,228],"source":"Setting <xref:System.Windows.Media.Imaging.BitmapImage> properties must be done within a <xref:System.Windows.Media.Imaging.BitmapImage.BeginInit%2A> and <xref:System.Windows.Media.Imaging.BitmapImage.EndInit%2A> block."}]},{"pos":[3374,3382],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3386,3448],"content":"<bpt id=\"p1\">[</bpt>Imaging Overview<ept id=\"p1\">](../graphics-multimedia/imaging-overview.md)</ept>","source":"[Imaging Overview](../graphics-multimedia/imaging-overview.md)"}]}