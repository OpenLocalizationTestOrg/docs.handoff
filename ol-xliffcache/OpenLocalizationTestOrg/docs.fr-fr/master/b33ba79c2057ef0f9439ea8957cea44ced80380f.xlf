<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b33ba79c2057ef0f9439ea8957cea44ced80380f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\misc\code-access-security-policy-compatibility-and-migration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0afe08f4f8c2d174a9e97d0d12cbdb800eae859e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438aeb736c27b0c125d15fb3a8b4f8e78d3c3c6f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Code Access Security Policy Compatibility and Migration | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Code Access Security Policy Compatibility and Migration</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The policy portion of code access security (CAS) has been made obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members <bpt id="p1">[</bpt>explicitly<ept id="p1">](#explicit_use)</ept> or <bpt id="p2">[</bpt>implicitly<ept id="p2">](#implicit_use)</ept> (through other types and members).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can avoid the warnings and errors by either:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migrating<ept id="p1">](#migration)</ept> to the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> replacements for the obsolete calls.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">[</bpt>&lt;NetFx40_LegacySecurityPolicy&gt; configuration element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept> to opt into the legacy CAS policy behavior.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Explicit Use<ept id="p1">](#explicit_use)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implicit Use<ept id="p1">](#implicit_use)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Errors and Warnings<ept id="p1">](#errors_and_warnings)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration: Replacement for Obsolete Calls<ept id="p1">](#migration)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compatibility: Using the CAS Policy Legacy Option<ept id="p1">](#compatibility)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Explicit Use</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Members that directly manipulate security policy or require CAS policy to sandbox are obsolete and will produce errors by default.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Examples of these are:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Implicit Use</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Several assembly loading overloads produce errors because of their implicit use of CAS policy.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These overloads take an <ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Here are some examples.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The obsolete overloads are those that take <ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> as a parameter:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Errors and Warnings</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The obsolete types and members produce the following error messages when they are used.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence?displayProperty=fullName&gt;</ph> type itself is not obsolete.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Compile-time warning:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Run-time exception:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>: <ph id="ph2">`This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the &lt;NetFx40_LegacySecurityPolicy&gt; configuration switch. Please see &lt;link&gt; for more information.`</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Migration: Replacement for Obsolete Calls</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Determining an Assembly’s Trust Level</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CAS policy is often used to determine an assembly’s or application domain’s permission grant set or trust level.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> exposes the following useful properties that do not need to resolve security policy:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Application Domain Sandboxing</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=fullName&gt;</ph> method is typically used for sandboxing the assemblies in an application domain.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> exposes members that do not have to use <ph id="ph2">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> for this purpose.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id="p1">](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Determining a Safe or Reasonable Permission Set for Partially Trusted Code</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Hosts often need to determine the permissions that are appropriate for sandboxing hosted code.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Before the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, CAS policy provided a way to do this with the <ph id="ph2">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>As a replacement, <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> provides the <ph id="ph2">&lt;xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=fullName&gt;</ph> method, which returns a safe, standard permission set for the provided evidence.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Non-Sandboxing Scenarios: Overloads for Assembly Loads</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The reason for using an assembly load overload might be to use parameters that are not otherwise available, instead of sandboxing the assembly.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, assembly load overloads that do not require a <ph id="ph2">&lt;xref:System.Security.Policy.Evidence?displayProperty=fullName&gt;</ph> object as a parameter, for example, <ph id="ph3">&lt;xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=fullName&gt;</ph>, enable this scenario.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you want to sandbox an assembly, use the <ph id="ph1">&lt;xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=fullName&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Compatibility: Using the CAS Policy Legacy Option</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>&lt;NetFx40_LegacySecurityPolicy&gt; configuration element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept> lets you specify that a process or library uses legacy CAS policy.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When you enable this element, the policy and evidence overloads will work as they did in previous versions of the framework.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id="p1">](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>