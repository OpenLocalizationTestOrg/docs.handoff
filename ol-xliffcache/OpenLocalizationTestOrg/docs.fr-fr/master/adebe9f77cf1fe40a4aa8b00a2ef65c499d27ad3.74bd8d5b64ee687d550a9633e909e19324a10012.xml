{"content":"---\ntitle: \"base (C# Reference) | Microsoft Docs\"\ndescription: base keyword (C#)\nkeywords: base (C#), base keyword (C#), base keyword (C# reference), base keyword (C# language reference)\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"base\"\n  - \"BaseClass.BaseClass\"\n  - \"base_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"base keyword [C#]\"\nms.assetid: 8b645dbe-1a33-49b8-8716-1c401f9a5ea5\ncaps.latest.revision: 14\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# base (C# Reference)\nThe `base` keyword is used to access members of the base class from within a derived class:  \n  \n-   Call a method on the base class that has been overridden by another method.  \n  \n-   Specify which base-class constructor should be called when creating instances of the derived class.  \n  \n A base class access is permitted only in a constructor, an instance method, or an instance property accessor.  \n  \n It is an error to use the `base` keyword from within a static method.  \n  \n The base class that is accessed is the base class specified in the class declaration. For example, if you specify `class ClassB : ClassA`, the members of ClassA are accessed from ClassB, regardless of the base class of ClassA.  \n  \n## Example  \n In this example, both the base class, `Person`, and the derived class, `Employee`, have a method named `Getinfo`. By using the `base` keyword, it is possible to call the `Getinfo` method on the base class, from within the derived class.  \n  \n [!code-cs[csrefKeywordsAccess#1](../../../csharp/language-reference/keywords/codesnippet/CSharp/base_1.cs)]  \n  \n For additional examples, see [new](../../../csharp/language-reference/keywords/new.md), [virtual](../../../csharp/language-reference/keywords/virtual.md), and [override](../../../csharp/language-reference/keywords/override.md).  \n  \n## Example  \n This example shows how to specify the base-class constructor called when creating instances of a derived class.  \n  \n [!code-cs[csrefKeywordsAccess#2](../../../csharp/language-reference/keywords/codesnippet/CSharp/base_2.cs)]  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [this](../../../csharp/language-reference/keywords/this.md)","nodes":[{"pos":[4,737],"nodes":[{"content":"base (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,36],"content":"base (C# Reference) | Microsoft Docs","nodes":[{"content":"base (C# Reference) | Microsoft Docs","pos":[0,36]}]}],"pos":[6,45],"yaml":true},{"content":"base keyword (C#)","nodes":[{"pos":[0,17],"content":"base keyword (C#)","nodes":[{"content":"base keyword (C#)","pos":[0,17]}]}],"pos":[58,76],"yaml":true},{"content":"base (C#), base keyword (C#), base keyword (C# reference), base keyword (C# language reference)","nodes":[{"pos":[0,95],"content":"base (C#), base keyword (C#), base keyword (C# reference), base keyword (C# language reference)","nodes":[{"content":"base (C#), base keyword (C#), base keyword (C# reference), base keyword (C# language reference)","pos":[0,95]}]}],"pos":[86,182],"yaml":true}],"content":"title: \"base (C# Reference) | Microsoft Docs\"\ndescription: base keyword (C#)\nkeywords: base (C#), base keyword (C#), base keyword (C# reference), base keyword (C# language reference)\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"base\"\n  - \"BaseClass.BaseClass\"\n  - \"base_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"base keyword [C#]\"\nms.assetid: 8b645dbe-1a33-49b8-8716-1c401f9a5ea5\ncaps.latest.revision: 14\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[744,763],"content":"base (C# Reference)","linkify":"base (C# Reference)","nodes":[{"content":"base (C# Reference)","pos":[0,19]}]},{"pos":[764,855],"content":"The <ph id=\"ph1\">`base`</ph> keyword is used to access members of the base class from within a derived class:","source":"The `base` keyword is used to access members of the base class from within a derived class:"},{"content":"Call a method on the base class that has been overridden by another method.","pos":[865,940]},{"content":"Specify which base-class constructor should be called when creating instances of the derived class.","pos":[950,1049]},{"content":"A base class access is permitted only in a constructor, an instance method, or an instance property accessor.","pos":[1056,1165]},{"pos":[1172,1241],"content":"It is an error to use the <ph id=\"ph1\">`base`</ph> keyword from within a static method.","source":"It is an error to use the `base` keyword from within a static method."},{"content":"The base class that is accessed is the base class specified in the class declaration.","pos":[1248,1333]},{"content":"For example, if you specify <ph id=\"ph1\">`class ClassB : ClassA`</ph>, the members of ClassA are accessed from ClassB, regardless of the base class of ClassA.","pos":[1334,1474],"source":" For example, if you specify `class ClassB : ClassA`, the members of ClassA are accessed from ClassB, regardless of the base class of ClassA."},{"pos":[1483,1490],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, both the base class, <ph id=\"ph1\">`Person`</ph>, and the derived class, <ph id=\"ph2\">`Employee`</ph>, have a method named <ph id=\"ph3\">`Getinfo`</ph>.","pos":[1494,1607],"source":"In this example, both the base class, `Person`, and the derived class, `Employee`, have a method named `Getinfo`."},{"content":"By using the <ph id=\"ph1\">`base`</ph> keyword, it is possible to call the <ph id=\"ph2\">`Getinfo`</ph> method on the base class, from within the derived class.","pos":[1608,1730],"source":" By using the `base` keyword, it is possible to call the `Getinfo` method on the base class, from within the derived class."},{"pos":[1737,1844],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsAccess#1<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/base_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsAccess#1](../../../csharp/language-reference/keywords/codesnippet/CSharp/base_1.cs)]"},{"pos":[1851,2078],"content":"For additional examples, see <bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](../../../csharp/language-reference/keywords/new.md)</ept>, <bpt id=\"p2\">[</bpt>virtual<ept id=\"p2\">](../../../csharp/language-reference/keywords/virtual.md)</ept>, and <bpt id=\"p3\">[</bpt>override<ept id=\"p3\">](../../../csharp/language-reference/keywords/override.md)</ept>.","source":"For additional examples, see [new](../../../csharp/language-reference/keywords/new.md), [virtual](../../../csharp/language-reference/keywords/virtual.md), and [override](../../../csharp/language-reference/keywords/override.md)."},{"pos":[2087,2094],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example shows how to specify the base-class constructor called when creating instances of a derived class.","pos":[2098,2209]},{"pos":[2216,2323],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsAccess#2<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/base_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsAccess#2](../../../csharp/language-reference/keywords/codesnippet/CSharp/base_2.cs)]"},{"pos":[2332,2357],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[2471,2479],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2483,2543],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2547,2614],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2618,2686],"source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](../../../csharp/language-reference/keywords/this.md)</ept>","pos":[2690,2749],"source":"[this](../../../csharp/language-reference/keywords/this.md)"}]}