<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="query-projections-wcf-data-services.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a05b2ce89d17b8de61ba78f925370aa22f463655</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\query-projections-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5223bd2430d6465624cff217467932abe245dc30</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81bff04c1a130d67277b183dc737a6b4dc3465b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Query Projections (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Projections (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Projection provides a mechanism in the <ph id="ph1">[!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)]</ph> to reduce the amount of data in the feed returned by a query by specifying that only certain properties of an entity are returned in the response.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OData: Select System Query Option ($select)<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=186076)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes how to define a query projection, what the requirements are for entity and non-entity types, making updates to projected results, creating projected types, and lists some projection considerations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Defining a Query Projection</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can add a projection clause to a query either by using the <ph id="ph1">`$select`</ph> query option in a URI or by using the <bpt id="p1">[</bpt>select<ept id="p1">](~/docs/csharp/language-reference/keywords/select-clause.md)</ept> clause (<bpt id="p2">[</bpt>Select<ept id="p2">](~/docs/visual-basic/language-reference/queries/select-clause.md)</ept> in Visual Basic) in a LINQ query.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returned entity data can be projected into either entity types or non-entity types on the client.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Examples in this topic demonstrate how to use the <ph id="ph1">`select`</ph> clause in a LINQ query.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Data loss might occur in the data service when you save updates that were made to projected types.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Projection Considerations<ept id="p1">](#considerations)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Requirements for Entity and Non-Entity Types</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Entity types must have one or more identity properties that make up the entity key.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Entity types are defined on clients in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By applying the <ph id="ph1">&lt;xref:System.Data.Services.Common.DataServiceKeyAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Services.Common.DataServiceEntityAttribute&gt;</ph> to the type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the type has a property named <ph id="ph1">`ID`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the type has a property named <bpt id="p1">*</bpt>type<ept id="p1">*</ept><ph id="ph1">`ID`</ph>, where <bpt id="p2">*</bpt>type<ept id="p2">*</ept> is the name of the type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, when you project query results into a type defined at the client, the properties requested in the projection must exist in the client type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, when you specify a value of <ph id="ph1">`true`</ph> for the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, properties specified in the projection are not required to occur in the client type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Making Updates to Projected Results</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you project query results into entity types on the client, the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> can track those objects with updates to be sent back to the data service when the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, updates that are made to data projected into non-entity types on the client cannot be sent back to the data service.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is because without a key to identify the entity instance, the data service cannot update the correct entity in the data source.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Non-entity types are not attached to the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When one or more properties of an entity type defined in the data service do not occur in the client type into which the entity is projected, inserts of new entities will not contain these missing properties.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this case, updates that are made to existing entities will <bpt id="p1">**</bpt>also<ept id="p1">**</ept> not include these missing properties.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When a value exists for such a property, the update resets it to the default value for the property, as defined in the data source.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating Projected Types</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example uses an anonymous LINQ query that projects the address-related properties of the <ph id="ph1">`Customers`</ph> type into a new <ph id="ph2">`CustomerAddress`</ph> type, which is defined on the client and is attributed as an entity type:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In this example, the object initializer pattern is used to create a new instance of the <ph id="ph1">`CustomerAddress`</ph> type instead of calling a constructor.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Constructors are not supported when projecting into entity types, but they can be used when projecting into non-entity and anonymous types.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`CustomerAddress`</ph> is an entity type, changes can be made and sent back to the data service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Also, the data from the <ph id="ph1">`Customer`</ph> type is projected into an instance of the <ph id="ph2">`CustomerAddress`</ph> entity type instead of an anonymous type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Projection into anonymous types is supported, but the data is read-only because anonymous types are treated as non-entity types.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> settings of the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> are used for identity resolution during query projection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This means that if an instance of the <ph id="ph1">`Customer`</ph> type already exists in the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, an instance of <ph id="ph3">`CustomerAddress`</ph> with the same identity will follow the identity resolution rules set by the <ph id="ph4">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following describes the behaviors when projecting results into entity and non-entity types:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Creating a new projected instance by using initializers<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Entity type: Supported</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Non-entity type: Supported</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Creating a new projected instance by using constructors<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Entity type: A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Non-entity type: Supported</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Using projection to transform a property value<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Entity type: This transformation is not supported for entity types because it can lead to confusion and potentially overwriting the data in the data source that belongs to another entity.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Non-entity type: Supported</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Projection Considerations</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following additional considerations apply when defining a query projection.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When you define custom feeds for the Atom format, you must make sure that all entity properties that have custom mappings defined are included in the projection.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When a mapped entity property is not included in the projection, data loss might occur.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Feed Customization<ept id="p1">](../../../../docs/framework/data/wcf/feed-customization-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When inserts are made to a projected type that does not contain all of the properties of the entity in the data model of the data service, the properties not included in the projection at the client are set to their default values.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When updates are made to a projected type that does not contain all of the properties of the entity in the data model of the data service, existing values not included in the projection on the client will be overwritten with uninitialized default values.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When a projection includes a complex property, the entire complex object must be returned.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When a projection includes a navigation property, the related objects are loaded implicitly without having to call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.Expand%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.Expand%2A&gt;</ph> method is not supported for use in a projected query.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Query projections queries on the client are translated to use the <ph id="ph1">`$select`</ph> query option in the request URI.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When a query with projection is executed against a previous version of <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> that does not support the <ph id="ph2">`$select`</ph> query option, an error is returned.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This can also happen when the <ph id="ph1">&lt;xref:System.Data.Services.DataServiceBehavior.MaxProtocolVersion%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.Services.DataServiceBehavior&gt;</ph> for the data service is set to a value of <ph id="ph3">&lt;xref:System.Data.Services.Common.DataServiceProtocolVersion.V1&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Service Versioning<ept id="p1">](../../../../docs/framework/data/wcf/data-service-versioning-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Project Query Results<ept id="p1">](../../../../docs/framework/data/wcf/how-to-project-query-results-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Querying the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/querying-the-data-service-wcf-data-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>