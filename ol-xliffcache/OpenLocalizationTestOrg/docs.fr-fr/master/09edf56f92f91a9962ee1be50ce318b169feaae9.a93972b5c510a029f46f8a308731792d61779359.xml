{"content":"---\ntitle: \"Compiler Error CS0121 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS0121\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS0121\"\nms.assetid: 316cb77e-a500-4129-ae1b-e68b9188fd3e\ncaps.latest.revision: 8\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# Compiler Error CS0121\nThe call is ambiguous between the following methods or properties: 'method1' and 'method2'  \n  \n Due to implicit conversion, the compiler was not able to call one form of an overloaded method. You can resolve this error in the following ways:  \n  \n-   Specify the method parameters in such a way that implicit conversion does not take place.  \n  \n-   Remove all overloads for the method.  \n  \n-   Cast to proper type before calling method.  \n  \n## Example  \n The following sample generates CS0121:  \n  \n```  \n// CS0121.cs  \npublic class C  \n{  \n   void f(int i, double d)   \n   {  \n   }  \n  \n   void f(double d, int i)  \n   {  \n   }  \n  \n   public static void Main()  \n   {  \n      C c = new C();  \n  \n      c.f(1, 1);   // CS0121  \n      // try the following line instead  \n      // c.f(1, 1.0);  \n      // or  \n      // c.f(1.0, 1);  \n      // or  \n      // c.f(1, (double)1);   // cast and specify which method to call  \n   }  \n}  \n```  \n  \n## Example  \n The following example produces CS0121 in the current version of Visual Studio, but not in Visual Studio 2005:  \n  \n```  \n//CS0121_2.cs  \nclass Program2  \n{  \n  \n    static int ol_invoked = 0;  \n  \n    delegate int D1(int x);  \n    delegate T D1<T>(T x);  \n    delegate T D1<T, U>(U u);  \n  \n    static void F(D1 d1) { ol_invoked = 1; }  \n    static void F<T>(D1<T> d1t) { ol_invoked = 2; }  \n    static void F<T, U>(D1<T, U> d1t) { ol_invoked = 3; }  \n  \n    static int Test001()  \n    {  \n        F(delegate(int x) { return 1; }); //CS0121  \n        if (ol_invoked == 1)  \n            return 0;  \n        else  \n            return 1;  \n    }  \n  \n    static int Main()  \n    {  \n        return Test001();  \n    }  \n}  \n```","nodes":[{"pos":[12,50],"content":"Compiler Error CS0121 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS0121 | Microsoft Docs","pos":[0,38]}]},{"pos":[357,378],"content":"Compiler Error CS0121","linkify":"Compiler Error CS0121","nodes":[{"content":"Compiler Error CS0121","pos":[0,21]}]},{"content":"The call is ambiguous between the following methods or properties: 'method1' and 'method2'","pos":[379,469]},{"content":"Due to implicit conversion, the compiler was not able to call one form of an overloaded method.","pos":[476,571]},{"content":"You can resolve this error in the following ways:","pos":[572,621]},{"content":"Specify the method parameters in such a way that implicit conversion does not take place.","pos":[631,720]},{"content":"Remove all overloads for the method.","pos":[730,766]},{"content":"Cast to proper type before calling method.","pos":[776,818]},{"pos":[827,834],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates CS0121:","pos":[838,876]},{"pos":[1326,1333],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example produces CS0121 in the current version of Visual Studio, but not in Visual Studio 2005:","pos":[1337,1446]}]}