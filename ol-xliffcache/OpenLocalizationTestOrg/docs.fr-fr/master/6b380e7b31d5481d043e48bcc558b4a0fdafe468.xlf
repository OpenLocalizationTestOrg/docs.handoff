<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b380e7b31d5481d043e48bcc558b4a0fdafe468</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\importing-custom-metadata-for-a-wcf-extension.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eef94594df56daf7b90ece800b4d6def9a1ae29f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f74b99f0524cd9b901826a578803c2671a210bb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Importing Custom Metadata for a WCF Extension | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Importing Custom Metadata for a WCF Extension</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>, metadata import is the process of generating an abstract representation of a service or its component parts from its metadata.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> can import <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> instances, <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> instances or <ph id="ph4">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> instances from a WSDL document for a service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To import service metadata in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, use an implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter?displayProperty=fullName&gt;</ph> abstract class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Types that derive from the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Custom metadata consists of XML elements that the system-provided metadata importers cannot import.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Typically, this includes custom WSDL extensions and custom policy assertions.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This section describes how to import custom WSDL extensions and policy assertions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It does not focus on the importing process itself.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about how to use the types that export and import metadata regardless of whether the metadata is custom or system-supported, see <bpt id="p1">[</bpt>Exporting and Importing Metadata<ept id="p1">](../../../../docs/framework/wcf/feature-details/exporting-and-importing-metadata.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;</ph> type is the implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class included with <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type imports WSDL metadata with attached policies that are bundled in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Policy assertions and WSDL extensions that the default importers do not recognize are passed to any registered custom policy and WSDL importers for importing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Typically, importers are implemented to support user-defined binding elements or to modify the imported contract.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This section describes:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>How to implement and use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;</ph> interface, which exposes the WSDL data to custom importers prior to the generation of descriptions and the generation of code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use this interface to examine or modify the description types and code compilation performed using a given set of metadata.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>How to implement and use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt;</ph> interface, which exposes policy assertions to importers prior to the generation of description objects.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use this interface to examine or modify the binding or contract based on the downloaded policies.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information about exporting custom WSDL and policy assertions, see <bpt id="p1">[</bpt>Exporting Custom Metadata for a WCF Extension<ept id="p1">](../../../../docs/framework/wcf/extending/exporting-custom-metadata-for-a-wcf-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Importing Custom WSDL Extensions</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To add support for importing WSDL extensions, implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension&gt;</ph> interface and then add your implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> can also load implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension&gt;</ph> interface registered in your application configuration file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Note that a number of WSDL importers are registered by default and the order of the registered WSDL importers is significant.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the custom WSDL importer is loaded and used by the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph>, first the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A&gt;</ph> method is called to enable the modification of metadata prior to the import process.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Next, the contracts are imported after which the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A&gt;</ph> method is called to enable the modification of the contracts imported from the metadata.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Finally, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A&gt;</ph> method is called to enable the modification of the imported endpoints.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Import Custom WSDL<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-import-custom-wsdl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Importing Custom Policy Assertions</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type and the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> automatically handle processing a variety of policy assertion types in policy expressions attached to WSDL documents.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These tools collect, normalize, and merge policy expressions attached to WSDL bindings and WSDL ports.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To add support for importing custom policy assertions, implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface and then add your implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> can also load implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface registered in your application configuration file.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Note that a number of policy importers are registered by default and the order of the registered policy importers is significant.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The metadata system repeatedly calls the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A?displayProperty=fullName&gt;</ph> method on all registered policy import extensions for each combination of policy alternatives attached to the message, operation, and endpoint policy subjects.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When importing a WSDL port, policies attached to the port and to the corresponding WSDL binding are merged before calling into the policy import extensions.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The policy alternatives are made available through a <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> as <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection&gt;</ph> is a collection of policy assertions represented by <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> properties on the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object expose the <ph id="ph4">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> and <ph id="ph5">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> objects that were imported from the WSDL.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Policy import extensions process policy assertions by finding instances of a particular policy assertion type, making corresponding changes to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> objects and then removing the policy assertions from the corresponding <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wsp:Optional`</ph> attribute and nested policy expressions are not normalized, so policy import extensions must handle these policy constructs.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Also, policy import extensions may be called multiple times with the same <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> objects, so policy import extensions should be robust to this behavior.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Invalid or improper metadata can be passed to the importer.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Ensure that custom importers are robust to all forms of XML.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Import Custom WSDL<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-import-custom-wsdl.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Import Custom Policy Assertions<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-import-custom-policy-assertions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write an Extension for the ServiceContractGenerator<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-write-an-extension-for-the-servicecontractgenerator.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>