{"content":"---\ntitle: \"How to: Combine Parallel and Sequential LINQ Queries | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"parallel queries, combine parallel and sequential\"\nms.assetid: 1167cfe6-c8aa-4096-94ba-c66c3a4edf4c\ncaps.latest.revision: 10\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# How to: Combine Parallel and Sequential LINQ Queries\nThis example shows how to use the <xref:System.Linq.ParallelEnumerable.AsSequential%2A> method to instruct PLINQ to process all subsequent operators in the query sequentially. Although sequential processing is generally slower than parallel, sometimes it is necessary to produce correct results.  \n  \n> [!WARNING]\n>  This example is intended to demonstrate usage, and might not run faster than the equivalent sequential LINQ to Objects query. For more information about speedup, see [Understanding Speedup in PLINQ](../../../docs/standard/parallel-programming/understanding-speedup-in-plinq.md).  \n  \n## Example  \n The following example shows one scenario in which <xref:System.Linq.ParallelEnumerable.AsSequential%2A> is required, namely to preserve the ordering that was established in a previous clause of the query.  \n  \n [!code-csharp[PLINQ#24](../../../samples/snippets/csharp/VS_Snippets_Misc/plinq/cs/plinqsamples.cs#24)]\n [!code-vb[PLINQ#24](../../../samples/snippets/visualbasic/VS_Snippets_Misc/plinq/vb/plinqsnippets1.vb#24)]  \n  \n## Compiling the Code  \n To compile and run this code, paste it into the [PLINQ Data Sample](../../../docs/standard/parallel-programming/plinq-data-sample.md) project, add a line to call the method from `Main`, and press F5.  \n  \n## See Also  \n [Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)","nodes":[{"pos":[4,444],"embed":true,"restype":"x-metadata","content":"title: \"How to: Combine Parallel and Sequential LINQ Queries | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"parallel queries, combine parallel and sequential\"\nms.assetid: 1167cfe6-c8aa-4096-94ba-c66c3a4edf4c\ncaps.latest.revision: 10\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"How to: Combine Parallel and Sequential LINQ Queries | Microsoft Docs","nodes":[{"pos":[0,69],"content":"How to: Combine Parallel and Sequential LINQ Queries | Microsoft Docs","nodes":[{"content":"How to: Combine Parallel and Sequential LINQ Queries | Microsoft Docs","pos":[0,69]}]}],"path":["title"]}],"yml":true},{"pos":[451,503],"content":"How to: Combine Parallel and Sequential LINQ Queries","linkify":"How to: Combine Parallel and Sequential LINQ Queries","nodes":[{"content":"How to: Combine Parallel and Sequential LINQ Queries","pos":[0,52]}]},{"content":"This example shows how to use the <ph id=\"ph1\">&lt;xref:System.Linq.ParallelEnumerable.AsSequential%2A&gt;</ph> method to instruct PLINQ to process all subsequent operators in the query sequentially.","pos":[504,679],"source":"This example shows how to use the <xref:System.Linq.ParallelEnumerable.AsSequential%2A> method to instruct PLINQ to process all subsequent operators in the query sequentially."},{"content":"Although sequential processing is generally slower than parallel, sometimes it is necessary to produce correct results.","pos":[680,799]},{"pos":[807,1099],"content":"[!WARNING]\n This example is intended to demonstrate usage, and might not run faster than the equivalent sequential LINQ to Objects query. For more information about speedup, see [Understanding Speedup in PLINQ](../../../docs/standard/parallel-programming/understanding-speedup-in-plinq.md).","leadings":["","> "],"nodes":[{"content":"This example is intended to demonstrate usage, and might not run faster than the equivalent sequential LINQ to Objects query. For more information about speedup, see [Understanding Speedup in PLINQ](../../../docs/standard/parallel-programming/understanding-speedup-in-plinq.md).","pos":[12,290],"nodes":[{"content":"This example is intended to demonstrate usage, and might not run faster than the equivalent sequential LINQ to Objects query.","pos":[0,125]},{"content":"For more information about speedup, see <bpt id=\"p1\">[</bpt>Understanding Speedup in PLINQ<ept id=\"p1\">](../../../docs/standard/parallel-programming/understanding-speedup-in-plinq.md)</ept>.","pos":[126,278],"source":" For more information about speedup, see [Understanding Speedup in PLINQ](../../../docs/standard/parallel-programming/understanding-speedup-in-plinq.md)."}]}]},{"pos":[1108,1115],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows one scenario in which <ph id=\"ph1\">&lt;xref:System.Linq.ParallelEnumerable.AsSequential%2A&gt;</ph> is required, namely to preserve the ordering that was established in a previous clause of the query.","pos":[1119,1323],"source":"The following example shows one scenario in which <xref:System.Linq.ParallelEnumerable.AsSequential%2A> is required, namely to preserve the ordering that was established in a previous clause of the query."},{"pos":[1550,1568],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[1572,1771],"content":"To compile and run this code, paste it into the <bpt id=\"p1\">[</bpt>PLINQ Data Sample<ept id=\"p1\">](../../../docs/standard/parallel-programming/plinq-data-sample.md)</ept> project, add a line to call the method from <ph id=\"ph1\">`Main`</ph>, and press F5.","source":"To compile and run this code, paste it into the [PLINQ Data Sample](../../../docs/standard/parallel-programming/plinq-data-sample.md) project, add a line to call the method from `Main`, and press F5."},{"pos":[1780,1788],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1792,1883],"content":"<bpt id=\"p1\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>","source":"[Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)"}]}