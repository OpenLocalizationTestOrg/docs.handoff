{"content":"---\ntitle: \"Procedural Workflows\"\nms.date: \"03/30/2017\"\nms.assetid: 52401de9-9115-472d-8fd9-047af6a072b9\n---\n# Procedural Workflows\nProcedural workflows use flow-control methods similar to those found in procedural languages. These constructs include `While` and `If`. These workflows can be freely composed using other flow control activities such as <xref:System.Activities.Statements.Flowchart> and <xref:System.Activities.Statements.Sequence>.  \n  \n## Controlling Execution Flow  \n The workflow activity library has activities for modeling most flow-control methods used in procedural languages. These include:  \n  \n-   <xref:System.Activities.Statements.While>  \n  \n-   <xref:System.Activities.Statements.DoWhile>  \n  \n-   <xref:System.Activities.Statements.ForEach%601>  \n  \n-   <xref:System.Activities.Statements.Parallel>  \n  \n-   <xref:System.Activities.Statements.ParallelForEach%601>  \n  \n-   <xref:System.Activities.Statements.If>  \n  \n-   <xref:System.Activities.Statements.Switch%601>  \n  \n-   <xref:System.Activities.Statements.Pick>  \n  \n To use flow control activities, drag and drop them from the **Activity** toolbox into a composite activity inside the designer window.  \n  \n> [!NOTE]\n>  If using the [!INCLUDE[dublin](../../../includes/dublin-md.md)] to host workflows on a Web farm, AppFabric will move instances between different AppFabric servers. This requires that the resources are able to be shared between all nodes.  None of the default NET 4 workflow activities contain any operations that access local resources. Since AppFabric does not offer any mechanism to mark a workflow as immovable, a developer must not create custom activities that fail when a workflow is moved.  \n  \n## See also\n\n- [Flowchart Workflows](flowchart-workflows.md)\n","nodes":[{"pos":[4,104],"embed":true,"restype":"x-metadata","content":"title: \"Procedural Workflows\"\nms.date: \"03/30/2017\"\nms.assetid: 52401de9-9115-472d-8fd9-047af6a072b9","nodes":[{"content":"Procedural Workflows","nodes":[{"pos":[0,20],"content":"Procedural Workflows","nodes":[{"content":"Procedural Workflows","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[111,131],"content":"Procedural Workflows","linkify":"Procedural Workflows","nodes":[{"content":"Procedural Workflows","pos":[0,20]}]},{"content":"Procedural workflows use flow-control methods similar to those found in procedural languages.","pos":[132,225]},{"content":"These constructs include <ph id=\"ph1\">`While`</ph> and <ph id=\"ph2\">`If`</ph>.","pos":[226,268],"source":" These constructs include `While` and `If`."},{"content":"These workflows can be freely composed using other flow control activities such as <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Sequence&gt;</ph>.","pos":[269,447],"source":" These workflows can be freely composed using other flow control activities such as <xref:System.Activities.Statements.Flowchart> and <xref:System.Activities.Statements.Sequence>."},{"pos":[456,482],"content":"Controlling Execution Flow","linkify":"Controlling Execution Flow","nodes":[{"content":"Controlling Execution Flow","pos":[0,26]}]},{"content":"The workflow activity library has activities for modeling most flow-control methods used in procedural languages.","pos":[486,599]},{"content":"These include:","pos":[600,614]},{"pos":[1055,1189],"content":"To use flow control activities, drag and drop them from the <bpt id=\"p1\">**</bpt>Activity<ept id=\"p1\">**</ept> toolbox into a composite activity inside the designer window.","source":"To use flow control activities, drag and drop them from the **Activity** toolbox into a composite activity inside the designer window."},{"pos":[1197,1704],"content":"[!NOTE]\n If using the [!INCLUDE[dublin](../../../includes/dublin-md.md)] to host workflows on a Web farm, AppFabric will move instances between different AppFabric servers. This requires that the resources are able to be shared between all nodes.  None of the default NET 4 workflow activities contain any operations that access local resources. Since AppFabric does not offer any mechanism to mark a workflow as immovable, a developer must not create custom activities that fail when a workflow is moved.","leadings":["","> "],"nodes":[{"content":"If using the [!INCLUDE[dublin](../../../includes/dublin-md.md)] to host workflows on a Web farm, AppFabric will move instances between different AppFabric servers. This requires that the resources are able to be shared between all nodes.  None of the default NET 4 workflow activities contain any operations that access local resources. Since AppFabric does not offer any mechanism to mark a workflow as immovable, a developer must not create custom activities that fail when a workflow is moved.","pos":[9,505],"nodes":[{"content":"If using the <ph id=\"ph1\">[!INCLUDE[dublin](../../../includes/dublin-md.md)]</ph> to host workflows on a Web farm, AppFabric will move instances between different AppFabric servers.","pos":[0,163],"source":"If using the [!INCLUDE[dublin](../../../includes/dublin-md.md)] to host workflows on a Web farm, AppFabric will move instances between different AppFabric servers."},{"content":"This requires that the resources are able to be shared between all nodes.","pos":[164,237]},{"content":"None of the default NET 4 workflow activities contain any operations that access local resources.","pos":[239,336]},{"content":"Since AppFabric does not offer any mechanism to mark a workflow as immovable, a developer must not create custom activities that fail when a workflow is moved.","pos":[337,496]}]}]},{"pos":[1713,1721],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1725,1770],"content":"<bpt id=\"p1\">[</bpt>Flowchart Workflows<ept id=\"p1\">](flowchart-workflows.md)</ept>","source":"[Flowchart Workflows](flowchart-workflows.md)"}]}