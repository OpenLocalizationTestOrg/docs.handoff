<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="richtextbox-overview.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9aa0d33b3cb2c15ba9c1cb7e7d7be9a3125f66d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\richtextbox-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4559f8f0127872aad33114a6a47b8c6cf6266979</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0efcc2da37fe3fb127f5ce5252495c22e02d3f7f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>RichTextBox Overview</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>RichTextBox Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> control enables you to display or edit flow content including paragraphs, images, tables, and more.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic introduces the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> class and provides examples of how to use it in both <ph id="ph2">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> and C#.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TextBox or RichTextBox?</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> allow users to edit text, however, the two controls are used in different scenarios.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> is a better choice when it is necessary for the user to edit formatted text, images, tables, or other rich content.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, editing a document, article, or blog that requires formatting, images, etc is best accomplished using a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> requires less system resources then a <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> and it is ideal when only plain text needs to be edited (i.e. usage in forms).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>TextBox Overview<ept id="p1">](textbox-overview.md)</ept> for more information on <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The table below summarizes the main features of <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Control</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Real-time Spellchecking</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Context Menu</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Formatting commands like <ph id="ph1">&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;</ph> (Ctr+B)</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> content like images, paragraphs, tables, etc.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>No.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Although <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> does not support formatting related commands like <ph id="ph2">&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;</ph> (Ctr+B), many basic commands are supported by both controls such as <ph id="ph3">&lt;xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The features from the table above are covered in more detail later.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creating a RichTextBox</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The code below shows how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> that a user can edit rich content in.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specifically, the content edited in a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> is flow content.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Flow content can contain many types of elements including formatted text, images, lists, and tables.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../advanced/flow-document-overview.md)</ept> for in depth information on flow documents.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In order to contain flow content, a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> hosts a <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> object which in turn contains the editable content.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To demonstrate flow content in a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, the following code shows how to create a <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> with a paragraph and some bolded text.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following illustration shows how this sample renders.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>RichTextBox with content<ept id="p1">]</ept><bpt id="p2">(./media/editing-richtextbox-with-content.png "</bpt>Editing_RichTextBox_with_Content<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Elements like <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.Bold&gt;</ph> determine how the content inside a <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> appears.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a user edits <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> content, they change this flow content.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To learn more about the features of flow content and how to work with it, see <bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../advanced/flow-document-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Flow content inside a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> does not behave exactly like flow content contained in other controls.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, there are no columns in a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> and hence no automatic resizing behavior.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Also, built in features like search, viewing mode, page navigation, and zoom are not available within a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Real-time Spell Checking</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can enable real-time spell checking in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When spellchecking is turned on, a red line appears underneath any misspelled words (see picture below).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Textbox with spell&amp;#45;checking<ept id="p1">]</ept><bpt id="p2">(./media/editing-textbox-with-spellchecking.png "</bpt>Editing_TextBox_with_Spellchecking<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Enable Spell Checking in a Text Editing Control<ept id="p1">](how-to-enable-spell-checking-in-a-text-editing-control.md)</ept> to learn how to enable spellchecking.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Context Menu</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default, both <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> have a context menu that appears when a user right-clicks inside the control.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The context menu allows the user to cut, copy, or paste (see illustration below).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>TextBox with context menu<ept id="p1">]</ept><bpt id="p2">(./media/editing-textbox-with-context-menu.png "</bpt>Editing_TextBox_with_Context_Menu<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can create your own custom context menu to override the default one.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Position a Custom Context Menu in a RichTextBox<ept id="p1">](how-to-position-a-custom-context-menu-in-a-richtextbox.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Editing Commands</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Editing commands enable users to format editable content inside a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Besides basic editing commands, <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> includes formatting commands that <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> does not support.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, when editing in a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, a user could press Ctr+B to toggle bold text formatting.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.EditingCommands&gt;</ph> for a complete list of commands available.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In addition to using keyboard shortcuts, you can hook commands up to other controls like buttons.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a simple tool bar containing buttons that the user can use to change text formatting.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following illustration shows how this sample displays.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>RichTextBox with ToolBar<ept id="p1">]</ept><bpt id="p2">(./media/editing-richtextbox-with-toobar.gif "</bpt>Editing_RichTextBox_with_TooBar<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Detect when Content Changes</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Usually the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged&gt;</ph> event should be used to detect whenever the text in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> changes rather then <ph id="ph4">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> as you might expect.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Detect When Text in a TextBox Has Changed<ept id="p1">](how-to-detect-when-text-in-a-textbox-has-changed.md)</ept> for an example.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Save, Load, and Print RichTextBox Content</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example shows how to save content of a <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> to a file, load that content back into the <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, and print the contents.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Below is the markup for the example.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Below is the code behind for the example.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](richtextbox-how-to-topics.md)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TextBox Overview<ept id="p1">](textbox-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>