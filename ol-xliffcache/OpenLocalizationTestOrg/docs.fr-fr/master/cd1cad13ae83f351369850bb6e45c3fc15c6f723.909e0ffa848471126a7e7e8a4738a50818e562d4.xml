{"content":"---\ntitle: \"How to: Create a One-Way Contract | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\nms.assetid: 85084cd9-31cc-4e95-b667-42ef01336622\ncaps.latest.revision: 23\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Create a One-Way Contract\nThis topic shows the basic steps to create methods that use a one-way contract. Such methods invoke operations on a [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service from a client but do not expect a reply. This type of contract can be used, for example, to publish notifications to many subscribers. You can also use one-way contracts when creating a duplex (two-way) contract, which allows clients and servers to communicate with each other independently so that either can initiate calls to the other. This can allow, in particular, the server to make one-way calls to the client that the client can treat as events. For detailed information about specifying one-way methods, see the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property and the <xref:System.ServiceModel.OperationContractAttribute> class.  \n  \n [!INCLUDE[crabout](../../../../includes/crabout-md.md)] creating a client application for a duplex contract, see [How to: Access Services with One-Way and Request-Reply Contracts](../../../../docs/framework/wcf/feature-details/how-to-access-wcf-services-with-one-way-and-request-reply-contracts.md). For a working sample, see the [One-Way](../../../../docs/framework/wcf/samples/one-way.md) sample.  \n  \n### To create a one-way contract  \n  \n1.  Create the service contract by applying the <xref:System.ServiceModel.ServiceContractAttribute> class to the interface that defines the methods the service is to implement.  \n  \n2.  Indicate which methods in the interface a client can invoked by applying the <xref:System.ServiceModel.OperationContractAttribute> class to them.  \n  \n3.  Designate operations that must have no output (no return value and no out or ref parameters) as one-way by setting the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property to `true`. Note that the operations that carry the <xref:System.ServiceModel.OperationContractAttribute> class satisfy a request-reply contract by default because the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is `false` by default. So you must explicitly specify the value of the attribute property to be `true` if you want a one-way contract for the method.  \n  \n## Example  \n The following code example defines a contract for a service that includes several one-way methods. All of the methods have one-way contracts except `Equals`, which defaults to request-reply and returns a result.  \n  \n [!code-csharp[S_Service_Session#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_service_session/cs/service.cs#1)]\n [!code-vb[S_Service_Session#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_service_session/vb/service.vb#1)]  \n  \n## See Also  \n <xref:System.ServiceModel.ServiceContractAttribute>   \n <xref:System.ServiceModel.OperationContractAttribute>   \n [Designing and Implementing Services](../../../../docs/framework/wcf/designing-and-implementing-services.md)   \n [How to: Define a Service Contract](../../../../docs/framework/wcf/how-to-define-a-wcf-service-contract.md)   \n [Session](../../../../docs/framework/wcf/samples/session.md)   \n [How to: Create a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)","nodes":[{"pos":[4,388],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a One-Way Contract | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\nms.assetid: 85084cd9-31cc-4e95-b667-42ef01336622\ncaps.latest.revision: 23\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"How to: Create a One-Way Contract | Microsoft Docs","nodes":[{"pos":[0,50],"content":"How to: Create a One-Way Contract | Microsoft Docs","nodes":[{"content":"How to: Create a One-Way Contract | Microsoft Docs","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[395,428],"content":"How to: Create a One-Way Contract","linkify":"How to: Create a One-Way Contract","nodes":[{"content":"How to: Create a One-Way Contract","pos":[0,33]}]},{"content":"This topic shows the basic steps to create methods that use a one-way contract.","pos":[429,508]},{"content":"Such methods invoke operations on a <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service from a client but do not expect a reply.","pos":[509,649],"source":" Such methods invoke operations on a [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service from a client but do not expect a reply."},{"content":"This type of contract can be used, for example, to publish notifications to many subscribers.","pos":[650,743]},{"content":"You can also use one-way contracts when creating a duplex (two-way) contract, which allows clients and servers to communicate with each other independently so that either can initiate calls to the other.","pos":[744,947]},{"content":"This can allow, in particular, the server to make one-way calls to the client that the client can treat as events.","pos":[948,1062]},{"content":"For detailed information about specifying one-way methods, see the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> class.","pos":[1063,1273],"source":" For detailed information about specifying one-way methods, see the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property and the <xref:System.ServiceModel.OperationContractAttribute> class."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> creating a client application for a duplex contract, see <bpt id=\"p1\">[</bpt>How to: Access Services with One-Way and Request-Reply Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-access-wcf-services-with-one-way-and-request-reply-contracts.md)</ept>.","pos":[1280,1579],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] creating a client application for a duplex contract, see [How to: Access Services with One-Way and Request-Reply Contracts](../../../../docs/framework/wcf/feature-details/how-to-access-wcf-services-with-one-way-and-request-reply-contracts.md)."},{"content":"For a working sample, see the <bpt id=\"p1\">[</bpt>One-Way<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-way.md)</ept> sample.","pos":[1580,1678],"source":" For a working sample, see the [One-Way](../../../../docs/framework/wcf/samples/one-way.md) sample."},{"pos":[1688,1716],"content":"To create a one-way contract","linkify":"To create a one-way contract","nodes":[{"content":"To create a one-way contract","pos":[0,28]}]},{"content":"Create the service contract by applying the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class to the interface that defines the methods the service is to implement.","pos":[1726,1898],"source":"Create the service contract by applying the <xref:System.ServiceModel.ServiceContractAttribute> class to the interface that defines the methods the service is to implement."},{"content":"Indicate which methods in the interface a client can invoked by applying the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> class to them.","pos":[1908,2053],"source":"Indicate which methods in the interface a client can invoked by applying the <xref:System.ServiceModel.OperationContractAttribute> class to them."},{"content":"Designate operations that must have no output (no return value and no out or ref parameters) as one-way by setting the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[2063,2267],"source":"Designate operations that must have no output (no return value and no out or ref parameters) as one-way by setting the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property to `true`."},{"content":"Note that the operations that carry the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> class satisfy a request-reply contract by default because the <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is <ph id=\"ph3\">`false`</ph> by default.","pos":[2268,2521],"source":" Note that the operations that carry the <xref:System.ServiceModel.OperationContractAttribute> class satisfy a request-reply contract by default because the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is `false` by default."},{"content":"So you must explicitly specify the value of the attribute property to be <ph id=\"ph1\">`true`</ph> if you want a one-way contract for the method.","pos":[2522,2648],"source":" So you must explicitly specify the value of the attribute property to be `true` if you want a one-way contract for the method."},{"pos":[2657,2664],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines a contract for a service that includes several one-way methods.","pos":[2668,2766]},{"content":"All of the methods have one-way contracts except <ph id=\"ph1\">`Equals`</ph>, which defaults to request-reply and returns a result.","pos":[2767,2879],"source":" All of the methods have one-way contracts except `Equals`, which defaults to request-reply and returns a result."},{"pos":[3142,3150],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>","pos":[3154,3205],"source":"<xref:System.ServiceModel.ServiceContractAttribute> "},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>","pos":[3210,3263],"source":"<xref:System.ServiceModel.OperationContractAttribute> "},{"content":"<bpt id=\"p1\">[</bpt>Designing and Implementing Services<ept id=\"p1\">](../../../../docs/framework/wcf/designing-and-implementing-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[3268,3377],"source":"[Designing and Implementing Services](../../../../docs/framework/wcf/designing-and-implementing-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Define a Service Contract<ept id=\"p1\">](../../../../docs/framework/wcf/how-to-define-a-wcf-service-contract.md)</ept><ph id=\"ph1\"> </ph>","pos":[3381,3489],"source":"[How to: Define a Service Contract](../../../../docs/framework/wcf/how-to-define-a-wcf-service-contract.md) "},{"content":"<bpt id=\"p1\">[</bpt>Session<ept id=\"p1\">](../../../../docs/framework/wcf/samples/session.md)</ept><ph id=\"ph1\"> </ph>","pos":[3493,3554],"source":"[Session](../../../../docs/framework/wcf/samples/session.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Create a Duplex Contract<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)</ept>","pos":[3558,3675],"source":"[How to: Create a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)"}]}