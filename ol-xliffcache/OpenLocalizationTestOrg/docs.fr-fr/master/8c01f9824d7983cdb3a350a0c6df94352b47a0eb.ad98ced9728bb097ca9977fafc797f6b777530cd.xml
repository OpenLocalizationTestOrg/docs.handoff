{"content":"---\ntitle: \"ICorDebugRemoteTarget::GetHostName Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugRemoteTarget.GetHostName\"\napi_location: \n  - \"CorDebug.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugRemoteTarget::GetHostName\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorDebugRemoteTarget::GetHostName method [.NET Framework debugging]\"\n  - \"GetHostName method, ICorDebugRemoteTarget interface [.NET Framework debugging]\"\nms.assetid: 1c7276f7-7e54-470c-808c-e13745ac07a1\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugRemoteTarget::GetHostName Method\nReturns the fully qualified domain name or IPv4 address of the remote debugging target machine. IPV6 is not supported at this time.  \n  \n## Syntax  \n  \n```  \nHRESULT GetHostName (  \n    [in] ULONG32      cchHostName,  \n    [out] ULONG32*    pcchHostName,  \n    [out, size_is(cchHostName), length_is(*pcchHostName)]  \n            WCHAR szHostName[]  \n```  \n  \n#### Parameters  \n `cchHostName`  \n [in] The size, in characters, of the `szHostName` buffer. If this parameter is 0 (zero), `szHostName` must be null.  \n  \n `pcchHostName`  \n [out] The number of characters, including a null terminator, in the host name or IP address. This parameter can be null.  \n  \n `szHostName`  \n [out] Buffer that contains the host name or IP address.  \n  \n## Return Value  \n S_OK  \n The host name or IP address was successfully returned.  \n  \n E_FAIL (or other E_ return codes)  \n Unable to return the host name or IP address.  \n  \n## Remarks  \n This method is implemented by the debugger writer. It must follow the multiple call paradigm: On the first call, the caller passes null to both `cchHostName` and `szHostName`, and `pcchHostName` returns the size of the required buffer . On the second call, the size that was previously returned is passed in `cchHostName`, and an appropriately sized buffer is passed in `szHostName`.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** 3.5 SP1  \n  \n## See Also  \n [ICorDebugRemoteTarget Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugremotetarget-interface.md)   \n [ICorDebug Interface](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)","nodes":[{"pos":[12,70],"content":"ICorDebugRemoteTarget::GetHostName Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugRemoteTarget::GetHostName Method | Microsoft Docs","pos":[0,58]}]},{"pos":[766,807],"content":"ICorDebugRemoteTarget::GetHostName Method","linkify":"ICorDebugRemoteTarget::GetHostName Method","nodes":[{"content":"ICorDebugRemoteTarget::GetHostName Method","pos":[0,41]}]},{"content":"Returns the fully qualified domain name or IPv4 address of the remote debugging target machine.","pos":[808,903]},{"content":"IPV6 is not supported at this time.","pos":[904,939]},{"pos":[948,954],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1172,1182],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The size, in characters, of the <ph id=\"ph1\">`szHostName`</ph> buffer.","pos":[1203,1260],"source":" [in] The size, in characters, of the `szHostName` buffer."},{"content":"If this parameter is 0 (zero), <ph id=\"ph1\">`szHostName`</ph> must be null.","pos":[1261,1318],"source":" If this parameter is 0 (zero), `szHostName` must be null."},{"content":"[out] The number of characters, including a null terminator, in the host name or IP address.","pos":[1343,1435]},{"content":"This parameter can be null.","pos":[1436,1463]},{"content":"[out] Buffer that contains the host name or IP address.","pos":[1486,1541]},{"pos":[1550,1562],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK","pos":[1566,1570]},{"content":"The host name or IP address was successfully returned.","pos":[1574,1628]},{"content":"E_FAIL (or other E_ return codes)","pos":[1635,1668]},{"content":"Unable to return the host name or IP address.","pos":[1672,1717]},{"pos":[1726,1733],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is implemented by the debugger writer.","pos":[1737,1787]},{"content":"It must follow the multiple call paradigm: On the first call, the caller passes null to both <ph id=\"ph1\">`cchHostName`</ph> and <ph id=\"ph2\">`szHostName`</ph>, and <ph id=\"ph3\">`pcchHostName`</ph> returns the size of the required buffer .","pos":[1788,1973],"source":" It must follow the multiple call paradigm: On the first call, the caller passes null to both `cchHostName` and `szHostName`, and `pcchHostName` returns the size of the required buffer ."},{"content":"On the second call, the size that was previously returned is passed in <ph id=\"ph1\">`cchHostName`</ph>, and an appropriately sized buffer is passed in <ph id=\"ph2\">`szHostName`</ph>.","pos":[1974,2120],"source":" On the second call, the size that was previously returned is passed in `cchHostName`, and an appropriately sized buffer is passed in `szHostName`."},{"pos":[2129,2141],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2145,2249],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2256,2280],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl","source":"**Header:** CorDebug.idl"},{"pos":[2287,2312],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2319,2355],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> 3.5 SP1","source":"**.NET Framework Versions:** 3.5 SP1"},{"pos":[2364,2372],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRemoteTarget Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugremotetarget-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2376,2497],"source":"[ICorDebugRemoteTarget Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugremotetarget-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ICorDebug Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)</ept>","pos":[2500,2597],"source":" [ICorDebug Interface](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)"}]}