{"content":"---\ntitle: \"LocalServiceSecuritySettings\"\nms.date: \"03/30/2017\"\nms.assetid: 490aa0e5-5242-4f8d-b505-5ec6287633b4\n---\n# LocalServiceSecuritySettings\nLocalServiceSecuritySettings  \n  \n## Syntax  \n  \n```csharp\nclass LocalServiceSecuritySettings  \n{  \n  boolean DetectReplays;  \n  datetime InactivityTimeout;  \n  datetime IssuedCookieLifetime;  \n  sint32 MaxCachedCookies;  \n  datetime MaxClockSkew;  \n  sint32 MaxPendingSessions;  \n  sint32 MaxStatefulNegotiations;  \n  datetime NegotiationTimeout;  \n  boolean ReconnectTransportOnFailure;  \n  sint32 ReplayCacheSize;  \n  datetime ReplayWindow;  \n  datetime SessionKeyRenewalInterval;  \n  datetime SessionKeyRolloverInterval;  \n  datetime TimestampValidityDuration;  \n};  \n```  \n  \n## Methods  \n The LocalServiceSecuritySettings class does not define any methods.  \n  \n## Properties  \n The LocalServiceSecuritySettings class has the following properties:  \n  \n### DetectReplays  \n Data type: boolean  \n  \n Access type: Read-only  \n  \n A Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.  \n  \n### InactivityTimeout  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n The maximum number of pending security sessions that the service supports.  \n  \n### IssuedCookieLifetime  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the lifetime issued to all new security cookies.  \n  \n### MaxCachedCookies  \n Data type: sint32  \n  \n Access type: Read-only  \n  \n The maximum number of cookies that can be cached.  \n  \n### MaxClockSkew  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the maximum time difference between the system clocks of the two communicating parties.  \n  \n### MaxPendingSessions  \n Data type: sint32  \n  \n Access type: Read-only  \n  \n The maximum number of pending connections on the service.  \n  \n### MaxStatefulNegotiations  \n Data type: sint32  \n  \n Access type: Read-only  \n  \n The number of security negotiations that can be active concurrently.  \n  \n### NegotiationTimeout  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the maximum duration for the security negotiation phase between server and client.  \n  \n### ReconnectTransportOnFailure  \n Data type: boolean  \n  \n Access type: Read-only  \n  \n A Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.  \n  \n### ReplayCacheSize  \n Data type: sint32  \n  \n Access type: Read-only  \n  \n The number of cached nonces used for replay detection.  \n  \n### ReplayWindow  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the duration in which individual message nonces are valid.  \n  \n### SessionKeyRenewalInterval  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the duration after which the initiator renews the key for the security session.  \n  \n### SessionKeyRolloverInterval  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the time interval a previous session key is valid on incoming messages during a key renewal.  \n  \n### TimestampValidityDuration  \n Data type: datetime  \n  \n Access type: Read-only  \n  \n A TimeSpan that specifies the duration in which a time stamp is valid.  \n  \n## Requirements  \n  \n|MOF|Declared in Servicemodel.mof.|  \n|---------|-----------------------------------|  \n|Namespace|Defined in root\\ServiceModel|  \n  \n## See also\n\n- <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings>\n","nodes":[{"pos":[4,112],"embed":true,"restype":"x-metadata","content":"title: \"LocalServiceSecuritySettings\"\nms.date: \"03/30/2017\"\nms.assetid: 490aa0e5-5242-4f8d-b505-5ec6287633b4","nodes":[{"content":"LocalServiceSecuritySettings","nodes":[{"pos":[0,28],"content":"LocalServiceSecuritySettings","nodes":[{"content":"LocalServiceSecuritySettings","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[119,147],"content":"LocalServiceSecuritySettings","linkify":"LocalServiceSecuritySettings","nodes":[{"content":"LocalServiceSecuritySettings","pos":[0,28]}]},{"content":"LocalServiceSecuritySettings","pos":[148,176]},{"pos":[185,191],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[732,739],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"The LocalServiceSecuritySettings class does not define any methods.","pos":[743,810]},{"pos":[819,829],"content":"Properties","linkify":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"content":"The LocalServiceSecuritySettings class has the following properties:","pos":[833,901]},{"pos":[911,924],"content":"DetectReplays","linkify":"DetectReplays","nodes":[{"content":"DetectReplays","pos":[0,13]}]},{"content":"Data type: boolean","pos":[928,946]},{"content":"Access type: Read-only","pos":[953,975]},{"content":"A Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","pos":[982,1098]},{"pos":[1108,1125],"content":"InactivityTimeout","linkify":"InactivityTimeout","nodes":[{"content":"InactivityTimeout","pos":[0,17]}]},{"content":"Data type: datetime","pos":[1129,1148]},{"content":"Access type: Read-only","pos":[1155,1177]},{"content":"The maximum number of pending security sessions that the service supports.","pos":[1184,1258]},{"pos":[1268,1288],"content":"IssuedCookieLifetime","linkify":"IssuedCookieLifetime","nodes":[{"content":"IssuedCookieLifetime","pos":[0,20]}]},{"content":"Data type: datetime","pos":[1292,1311]},{"content":"Access type: Read-only","pos":[1318,1340]},{"content":"A TimeSpan that specifies the lifetime issued to all new security cookies.","pos":[1347,1421]},{"pos":[1431,1447],"content":"MaxCachedCookies","linkify":"MaxCachedCookies","nodes":[{"content":"MaxCachedCookies","pos":[0,16]}]},{"content":"Data type: sint32","pos":[1451,1468]},{"content":"Access type: Read-only","pos":[1475,1497]},{"content":"The maximum number of cookies that can be cached.","pos":[1504,1553]},{"pos":[1563,1575],"content":"MaxClockSkew","linkify":"MaxClockSkew","nodes":[{"content":"MaxClockSkew","pos":[0,12]}]},{"content":"Data type: datetime","pos":[1579,1598]},{"content":"Access type: Read-only","pos":[1605,1627]},{"content":"A TimeSpan that specifies the maximum time difference between the system clocks of the two communicating parties.","pos":[1634,1747]},{"pos":[1757,1775],"content":"MaxPendingSessions","linkify":"MaxPendingSessions","nodes":[{"content":"MaxPendingSessions","pos":[0,18]}]},{"content":"Data type: sint32","pos":[1779,1796]},{"content":"Access type: Read-only","pos":[1803,1825]},{"content":"The maximum number of pending connections on the service.","pos":[1832,1889]},{"pos":[1899,1922],"content":"MaxStatefulNegotiations","linkify":"MaxStatefulNegotiations","nodes":[{"content":"MaxStatefulNegotiations","pos":[0,23]}]},{"content":"Data type: sint32","pos":[1926,1943]},{"content":"Access type: Read-only","pos":[1950,1972]},{"content":"The number of security negotiations that can be active concurrently.","pos":[1979,2047]},{"pos":[2057,2075],"content":"NegotiationTimeout","linkify":"NegotiationTimeout","nodes":[{"content":"NegotiationTimeout","pos":[0,18]}]},{"content":"Data type: datetime","pos":[2079,2098]},{"content":"Access type: Read-only","pos":[2105,2127]},{"content":"A TimeSpan that specifies the maximum duration for the security negotiation phase between server and client.","pos":[2134,2242]},{"pos":[2252,2279],"content":"ReconnectTransportOnFailure","linkify":"ReconnectTransportOnFailure","nodes":[{"content":"ReconnectTransportOnFailure","pos":[0,27]}]},{"content":"Data type: boolean","pos":[2283,2301]},{"content":"Access type: Read-only","pos":[2308,2330]},{"content":"A Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","pos":[2337,2462]},{"pos":[2472,2487],"content":"ReplayCacheSize","linkify":"ReplayCacheSize","nodes":[{"content":"ReplayCacheSize","pos":[0,15]}]},{"content":"Data type: sint32","pos":[2491,2508]},{"content":"Access type: Read-only","pos":[2515,2537]},{"content":"The number of cached nonces used for replay detection.","pos":[2544,2598]},{"pos":[2608,2620],"content":"ReplayWindow","linkify":"ReplayWindow","nodes":[{"content":"ReplayWindow","pos":[0,12]}]},{"content":"Data type: datetime","pos":[2624,2643]},{"content":"Access type: Read-only","pos":[2650,2672]},{"content":"A TimeSpan that specifies the duration in which individual message nonces are valid.","pos":[2679,2763]},{"pos":[2773,2798],"content":"SessionKeyRenewalInterval","linkify":"SessionKeyRenewalInterval","nodes":[{"content":"SessionKeyRenewalInterval","pos":[0,25]}]},{"content":"Data type: datetime","pos":[2802,2821]},{"content":"Access type: Read-only","pos":[2828,2850]},{"content":"A TimeSpan that specifies the duration after which the initiator renews the key for the security session.","pos":[2857,2962]},{"pos":[2972,2998],"content":"SessionKeyRolloverInterval","linkify":"SessionKeyRolloverInterval","nodes":[{"content":"SessionKeyRolloverInterval","pos":[0,26]}]},{"content":"Data type: datetime","pos":[3002,3021]},{"content":"Access type: Read-only","pos":[3028,3050]},{"content":"A TimeSpan that specifies the time interval a previous session key is valid on incoming messages during a key renewal.","pos":[3057,3175]},{"pos":[3185,3210],"content":"TimestampValidityDuration","linkify":"TimestampValidityDuration","nodes":[{"content":"TimestampValidityDuration","pos":[0,25]}]},{"content":"Data type: datetime","pos":[3214,3233]},{"content":"Access type: Read-only","pos":[3240,3262]},{"content":"A TimeSpan that specifies the duration in which a time stamp is valid.","pos":[3269,3339]},{"pos":[3348,3360],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"MOF","pos":[3367,3370]},{"content":"Declared in Servicemodel.mof.","pos":[3371,3400]},{"content":"Namespace","pos":[3455,3464]},{"content":"Defined in root\\ServiceModel","pos":[3465,3493]},{"pos":[3503,3511],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]}]}