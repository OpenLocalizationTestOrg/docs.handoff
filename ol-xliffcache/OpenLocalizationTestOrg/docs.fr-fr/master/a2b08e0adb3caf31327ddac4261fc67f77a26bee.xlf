<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2b08e0adb3caf31327ddac4261fc67f77a26bee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\query-keywords.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae5c6bd0516b3bd564156c7e2f17cdaeb6861c1a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad922da938008c1bdccd999ae6f38d2a90243d9e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Query Keywords (C# Reference) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Keywords (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section contains the contextual keywords used in query expressions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Clause</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>from<ept id="p1">](../../../csharp/language-reference/keywords/from-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Specifies a data source and a range variable (similar to an iteration variable).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>where<ept id="p1">](../../../csharp/language-reference/keywords/where-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Filters source elements based on one or more Boolean expressions separated by logical AND and OR operators ( <ph id="ph1">`&amp;&amp;`</ph> or <ph id="ph2">`&amp;#124;&amp;#124;`</ph> ).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>select<ept id="p1">](../../../csharp/language-reference/keywords/select-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifies the type and shape that the elements in the returned sequence will have when the query is executed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>group<ept id="p1">](../../../csharp/language-reference/keywords/group-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Groups query results according to a specified key value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>into<ept id="p1">](../../../csharp/language-reference/keywords/into.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides an identifier that can serve as a reference to the results of a join, group or select clause.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>orderby<ept id="p1">](../../../csharp/language-reference/keywords/orderby-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Sorts query results in ascending or descending order based on the default comparer for the element type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>join<ept id="p1">](../../../csharp/language-reference/keywords/join-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Joins two data sources based on an equality comparison between two specified matching criteria.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>let<ept id="p1">](../../../csharp/language-reference/keywords/let-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Introduces a range variable to store sub-expression results in a query expression.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>in<ept id="p1">](../../../csharp/language-reference/keywords/in.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Contextual keyword in a <bpt id="p1">[</bpt>join<ept id="p1">](../../../csharp/language-reference/keywords/join-clause.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>on<ept id="p1">](../../../csharp/language-reference/keywords/on.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Contextual keyword in a <bpt id="p1">[</bpt>join<ept id="p1">](../../../csharp/language-reference/keywords/join-clause.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>equals<ept id="p1">](../../../csharp/language-reference/keywords/equals.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Contextual keyword in a <bpt id="p1">[</bpt>join<ept id="p1">](../../../csharp/language-reference/keywords/join-clause.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>by<ept id="p1">](../../../csharp/language-reference/keywords/by.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Contextual keyword in a <bpt id="p1">[</bpt>group<ept id="p1">](../../../csharp/language-reference/keywords/group-clause.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ascending<ept id="p1">](../../../csharp/language-reference/keywords/ascending.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Contextual keyword in an <bpt id="p1">[</bpt>orderby<ept id="p1">](../../../csharp/language-reference/keywords/orderby-clause.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>descending<ept id="p1">](../../../csharp/language-reference/keywords/descending.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Contextual keyword in an <bpt id="p1">[</bpt>orderby<ept id="p1">](../../../csharp/language-reference/keywords/orderby-clause.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Keywords<ept id="p1">](../../../csharp/language-reference/keywords/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ (Language-Integrated Query)<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ Query Expressions<ept id="p1">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Getting Started with LINQ in C#<ept id="p1">](../../../csharp/programming-guide/concepts/linq/getting-started-with-linq.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>