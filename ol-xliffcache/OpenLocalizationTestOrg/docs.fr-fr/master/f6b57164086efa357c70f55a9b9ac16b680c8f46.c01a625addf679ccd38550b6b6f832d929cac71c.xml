{"content":"---\ntitle: Additions to the csproj format for .NET Core\ndescription: Learn about the differences between existing and .NET Core csproj files\nms.date: 09/22/2017\n---\n\n# Additions to the csproj format for .NET Core\n\nThis document outlines the changes that were added to the project files as part of the move from *project.json* to *csproj* and [MSBuild](https://github.com/Microsoft/MSBuild). For more information about general project file syntax and reference, see [the MSBuild project file](/visualstudio/msbuild/msbuild-project-file-schema-reference) documentation.\n\n## Implicit package references\n\nMetapackages are implicitly referenced based on the target framework(s) specified in the `<TargetFramework>` or `<TargetFrameworks>` property of your project file. `<TargetFrameworks>` is ignored if `<TargetFramework>` is specified, independent of order.\n\n```xml\n <PropertyGroup>\n   <TargetFramework>netcoreapp2.1</TargetFramework>\n </PropertyGroup>\n ```\n\n ```xml\n <PropertyGroup>\n   <TargetFrameworks>netcoreapp2.1;net462</TargetFrameworks>\n </PropertyGroup>\n ```\n\n### Recommendations\n\nSince `Microsoft.NETCore.App` or `NetStandard.Library` metapackages are implicitly referenced, the following are our recommended best practices:\n\n* When targeting .NET Core or .NET Standard, never have an explicit reference to the `Microsoft.NETCore.App` or `NetStandard.Library` metapackages via a `<PackageReference>` item in your project file.\n* If you need a specific version of the runtime when targeting .NET Core, you should use the `<RuntimeFrameworkVersion>` property in your project (for example, `1.0.4`) instead of referencing the metapackage.\n    * This might happen if you are using [self-contained deployments](../deploying/index.md#self-contained-deployments-scd) and you need a specific patch version of 1.0.0 LTS runtime, for example.\n* If you need a specific version of the `NetStandard.Library` metapackage when targeting .NET Standard, you can use the `<NetStandardImplicitPackageVersion>` property and set the version you need.\n* Don't explicitly add or update references to either the `Microsoft.NETCore.App` or `NetStandard.Library` metapackage in .NET Framework projects. If any version of `NetStandard.Library` is needed when using a .NET Standard-based NuGet package, NuGet automatically installs that version.\n\n## Default compilation includes in .NET Core projects\nWith the move to the *csproj* format in the latest SDK versions, we've moved the default includes and excludes for compile items and embedded resources to the SDK properties files. This means that you no longer need to specify these items in your project file.\n\nThe main reason for doing this is to reduce the clutter in your project file. The defaults that are present in the SDK should cover most common use cases, so there is no need to repeat them in every project that you create. This leads to smaller project files that are much easier to understand as well as edit by hand, if needed.\n\nThe following table shows which element and which [globs](https://en.wikipedia.org/wiki/Glob_(programming)) are both included and excluded in the SDK:\n\n| Element           | Include glob                              | Exclude glob                                                  | Remove glob              |\n|-------------------|-------------------------------------------|---------------------------------------------------------------|----------------------------|\n| Compile           | \\*\\*/\\*.cs (or other language extensions) | \\*\\*/\\*.user;  \\*\\*/\\*.\\*proj;  \\*\\*/\\*.sln;  \\*\\*/\\*.vssscc  | N/A                      |\n| EmbeddedResource  | \\*\\*/\\*.resx                              | \\*\\*/\\*.user; \\*\\*/\\*.\\*proj; \\*\\*/\\*.sln; \\*\\*/\\*.vssscc     | N/A                      |\n| None              | \\*\\*/\\*                                   | \\*\\*/\\*.user; \\*\\*/\\*.\\*proj; \\*\\*/\\*.sln; \\*\\*/\\*.vssscc     | \\*\\*/\\*.cs; \\*\\*/\\*.resx   |\n\n> [!NOTE]\n> **Exclude glob** always excludes the `./bin` and `./obj` folders, which are represented by the `$(BaseOutputPath)` and `$(BaseIntermediateOutputPath)` MSBuild properties, respectively. As a whole, all excludes are represented by `$(DefaultItemExcludes)`.\n\nIf you have globs in your project and you try to build it using the newest SDK, you'll get the following error:\n\n> Duplicate Compile items were included. The .NET SDK includes Compile items from your project directory by default. You can either remove these items from your project file, or set the 'EnableDefaultCompileItems' property to 'false' if you want to explicitly include them in your project file.\n\nIn order to get around this error, you can either remove the explicit `Compile` items that match the ones listed on the previous table, or you can set the `<EnableDefaultCompileItems>` property to `false`, like this:\n\n```xml\n<PropertyGroup>\n    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>\n</PropertyGroup>\n```\n\nSetting this property to `false` will disable implicit inclusion, reverting to the behavior of previous SDKs where you had to specify the default globs in your project.\n\nThis change does not modify the main mechanics of other includes. However, if you wish to specify, for example, some files to get published with your app, you can still use the known mechanisms in *csproj* for that (for example, the `<Content>` element).\n\n`<EnableDefaultCompileItems>` only disables `Compile` globs but doesn't affect other globs, like the implicit `None` glob, which also applies to \\*.cs items. Because of that, **Solution Explorer** will continue show \\*.cs items as part of the project, included as `None` items. In a similar way, you can set `<EnableDefaultNoneItems>` to false to disable the implicit `None` glob, like this:\n\n```xml\n<PropertyGroup>\n    <EnableDefaultNoneItems>false</EnableDefaultNoneItems>\n</PropertyGroup>\n```\n\nTo disable **all implicit globs**, you can set the `<EnableDefaultItems>` property to `false` as in the following example:\n\n```xml\n<PropertyGroup>\n    <EnableDefaultItems>false</EnableDefaultItems>\n</PropertyGroup>\n```\n\n## How to see the whole project as MSBuild sees it\n\nWhile those csproj changes greatly simplify project files, you might want to see the fully expanded project as MSBuild sees it once the SDK and its targets are included. Preprocess the project with [the `/pp` switch](/visualstudio/msbuild/msbuild-command-line-reference#preprocess) of the [`dotnet msbuild`](dotnet-msbuild.md) command, which shows which files are imported, their sources, and their contributions to the build without actually building the project:\n\n`dotnet msbuild -pp:fullproject.xml`\n\nIf the project has multiple target frameworks, the results of the command should be focused on only one of them by specifying it as an MSBuild property:\n\n`dotnet msbuild -p:TargetFramework=netcoreapp2.0 -pp:fullproject.xml`\n\n## Additions\n\n### Sdk attribute\nThe root `<Project>` element of the *.csproj* file has a new attribute called `Sdk`. `Sdk` specifies which SDK will be used by the project. The SDK, as the [layering document](cli-msbuild-architecture.md) describes, is a set of MSBuild [tasks](/visualstudio/msbuild/msbuild-tasks) and [targets](/visualstudio/msbuild/msbuild-targets) that can build .NET Core code. We ship three main SDKs with the .NET Core tools:\n\n1. The .NET Core SDK with the ID of `Microsoft.NET.Sdk`\n2. The .NET Core web SDK with the ID of `Microsoft.NET.Sdk.Web`\n3. The .NET Core Razor Class Library SDK with the ID of `Microsoft.NET.Sdk.Razor`\n\nYou need to have the `Sdk` attribute set to one of those IDs on the `<Project>` element in order to use the .NET Core tools and build your code.\n\n### PackageReference\n\nA `<PackageReference>` item element specifies a [NuGet dependency in the project](/nuget/consume-packages/package-references-in-project-files). The `Include` attribute specifies the package ID.\n\n```xml\n<PackageReference Include=\"<package-id>\" Version=\"\" PrivateAssets=\"\" IncludeAssets=\"\" ExcludeAssets=\"\" />\n```\n\n#### Version\n\nThe required `Version` attribute specifies the version of the package to restore. The attribute respects the rules of the [NuGet versioning](/nuget/reference/package-versioning#version-ranges-and-wildcards) scheme. The default behavior is an exact version match. For example, specifying `Version=\"1.2.3\"` is equivalent to NuGet notation `[1.2.3]` for the exact 1.2.3 version of the package.\n\n#### IncludeAssets, ExcludeAssets and PrivateAssets\n\n`IncludeAssets` attribute specifies which assets belonging to the package specified by `<PackageReference>` should be\nconsumed. By default, all package assets are included.\n\n`ExcludeAssets` attribute specifies which assets belonging to the package specified by `<PackageReference>` should not\nbe consumed.\n\n`PrivateAssets` attribute specifies which assets belonging to the package specified by `<PackageReference>` should be\nconsumed but not flow to the next project. The `Analyzers`, `Build` and `ContentFiles` assets are private by default\nwhen this attribute is not present.\n\n> [!NOTE]\n> `PrivateAssets` is equivalent to the *project.json*/*xproj* `SuppressParent` element.\n\nThese attributes can contain one or more of the following items, separated by the semicolon `;` character if more than\none is listed:\n\n* `Compile` – the contents of the lib folder are available to compile against.\n* `Runtime` – the contents of the runtime folder are distributed.\n* `ContentFiles` – the contents of the *contentfiles* folder are used.\n* `Build` – the props/targets in the build folder are used.\n* `Native` – the contents from native assets are copied to the output folder for runtime.\n* `Analyzers` – the analyzers are used.\n\nAlternatively, the attribute can contain:\n\n* `None` – none of the assets are used.\n* `All` – all assets are used.\n\n### DotNetCliToolReference\nA `<DotNetCliToolReference>` item element specifies the CLI tool that the user wants to restore in the context of the project. It's\na replacement for the `tools` node in *project.json*.\n\n```xml\n<DotNetCliToolReference Include=\"<package-id>\" Version=\"\" />\n```\n\n#### Version\n\n`Version` specifies the version of the package to restore. The attribute respects the rules of the [NuGet versioning](/nuget/create-packages/dependency-versions#version-ranges) scheme. The default behavior is an exact version match. For example, specifying `Version=\"1.2.3\"` is equivalent to NuGet notation `[1.2.3]` for the exact 1.2.3 version of the package.\n\n### RuntimeIdentifiers\n\nThe `<RuntimeIdentifiers>` property element lets you specify a semicolon-delimited list of [Runtime Identifiers (RIDs)](../rid-catalog.md) for the project.\nRIDs enable publishing self-contained deployments.\n\n```xml\n<RuntimeIdentifiers>win10-x64;osx.10.11-x64;ubuntu.16.04-x64</RuntimeIdentifiers>\n```\n\n### RuntimeIdentifier\n\nThe `<RuntimeIdentifier>` property element allows you to specify only one [Runtime Identifier (RID)](../rid-catalog.md) for the project. The RID enables publishing a self-contained deployment.\n\n```xml\n<RuntimeIdentifier>ubuntu.16.04-x64</RuntimeIdentifier>\n```\n\nUse `<RuntimeIdentifiers>` (plural) instead if you need to publish for multiple runtimes. `<RuntimeIdentifier>` can provide faster builds when only a single runtime is required.\n\n### PackageTargetFallback\n\nThe `<PackageTargetFallback>` property element allows you to specify a set of compatible targets to be used when restoring packages. It's designed to allow packages that use the dotnet [TxM (Target x Moniker)](/nuget/schema/target-frameworks) to operate with packages that don't declare a dotnet TxM. If your project uses the dotnet TxM, then all the packages it depends on must also have a dotnet TxM, unless you add the `<PackageTargetFallback>` to your project in order to allow non-dotnet platforms to be compatible with dotnet.\n\nThe following example provides the fallbacks for all targets in your project:\n\n```xml\n<PackageTargetFallback>\n    $(PackageTargetFallback);portable-net45+win8+wpa81+wp8\n</PackageTargetFallback >\n```\n\nThe following example specifies the fallbacks only for the `netcoreapp2.1` target:\n\n```xml\n<PackageTargetFallback Condition=\"'$(TargetFramework)'=='netcoreapp2.1'\">\n    $(PackageTargetFallback);portable-net45+win8+wpa81+wp8\n</PackageTargetFallback >\n```\n\n## NuGet metadata properties\n\nWith the move to MSBuild, we have moved the input metadata that is used when packing a NuGet package from *project.json* to *.csproj* files. The inputs are MSBuild properties so they have to go within a `<PropertyGroup>` group. The following is the list of properties that are used as inputs to the packing process when using the `dotnet pack` command or the `Pack` MSBuild target that is part of the SDK.\n\n### IsPackable\n\nA Boolean value that specifies whether the project can be packed. The default value is `true`.\n\n### PackageVersion\n\nSpecifies the version that the resulting package will have. Accepts all forms of NuGet version string. Default is the value of `$(Version)`, that is, of the property `Version` in the project.\n\n### PackageId\n\nSpecifies the name for the resulting package. If not specified, the `pack` operation will default to using the `AssemblyName` or directory name as the name of the package.\n\n### Title\n\nA human-friendly title of the package, typically used in UI displays as on nuget.org and the Package Manager in Visual Studio. If not specified, the package ID is used instead.\n\n### Authors\n\nA semicolon-separated list of packages authors, matching the profile names on nuget.org. These are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors.\n\n### PackageDescription\n\nA long description of the package for UI display.\n\n### Description\n\nA long description for the assembly. If `PackageDescription` is not specified then this property is also used as the description of the package.\n\n### Copyright\n\nCopyright details for the package.\n\n### PackageRequireLicenseAcceptance\n\nA Boolean value that specifies whether the client must prompt the consumer to accept the package license before installing the package. The default is `false`.\n\n### PackageLicenseExpression\n\nAn [SPDX license identifier](https://spdx.org/licenses/) or expression. For example, `Apache-2.0`.\n\nHere is the complete list of [SPDX license identifiers](https://spdx.org/licenses/). NuGet.org accepts only OSI or FSF approved licenses when using license type expression.\n\nThe exact syntax of the license expressions is described below in [ABNF](https://tools.ietf.org/html/rfc5234).\n\n```cli\nlicense-id            = <short form license identifier from https://spdx.org/spdx-specification-21-web-version#h.luq9dgcle9mo>\n\nlicense-exception-id  = <short form license exception identifier from https://spdx.org/spdx-specification-21-web-version#h.ruv3yl8g6czd>\n\nsimple-expression = license-id / license-id”+”\n\ncompound-expression =  1*1(simple-expression /\n                simple-expression \"WITH\" license-exception-id /\n                compound-expression \"AND\" compound-expression /\n                compound-expression \"OR\" compound-expression ) /\n                \"(\" compound-expression \")\" )\n\nlicense-expression =  1*1(simple-expression / compound-expression / UNLICENSED)\n```\n\n> [!NOTE]\n> Only one of `PackageLicenseExpression`, `PackageLicenseFile` and `PackageLicenseUrl` can be specified at a time.\n\n### PackageLicenseFile\n\nPath to a license file within the package if you are using a license that hasn’t been assigned an SPDX identifier, or it is a custom license (Otherwise `PackageLicenseExpression` is prefered)\n\nReplaces `PackageLicenseUrl`, can't be combined with `PackageLicenseExpression` and requires Visual Studio 15.9.4, .NET SDK 2.1.502 or 2.2.101, or newer.\n\nYou will need to ensure the license file is packed by adding it explicitly to the project, example usage:\n\n```xml\n<PropertyGroup>\n  <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>\n</PropertyGroup>\n<ItemGroup>\n  <None Include=\"licenses\\LICENSE.txt\" Pack=\"true\" PackagePath=\"$(PackageLicenseFile)\"/>\n</ItemGroup>\n```\n\n### PackageLicenseUrl\n\nAn URL to the license that is applicable to the package. (_deprecated since Visual Studio 15.9.4, .NET SDK 2.1.502 and 2.2.101_)\n\n### PackageIconUrl\n\nA URL for a 64x64 image with transparent background to use as the icon for the package in UI display.\n\n### PackageReleaseNotes\n\nRelease notes for the package.\n\n### PackageTags\n\nA semicolon-delimited list of tags that designates the package.\n\n### PackageOutputPath\n\nDetermines the output path in which the packed package will be dropped. Default is `$(OutputPath)`.\n\n### IncludeSymbols\n\nThis Boolean value indicates whether the package should create an additional symbols package when the project is packed. This package will have a *.symbols.nupkg* extension and will copy the PDB files along with the DLL and other output files.\n\n### IncludeSource\n\nThis Boolean value indicates whether the pack process should create a source package. The source package contains the library's source code as well as PDB files. Source files are put under the `src/ProjectName` directory in the resulting package file.\n\n### IsTool\n\nSpecifies whether all output files are copied to the *tools* folder instead of the *lib* folder. Note that this is different from a `DotNetCliTool` which is specified by setting the `PackageType` in the *.csproj* file.\n\n### RepositoryUrl\n\nSpecifies the URL for the repository where the source code for the package resides and/or from which it's being built.\n\n### RepositoryType\n\nSpecifies the type of the repository. Default is \"git\".\n\n### NoPackageAnalysis\n\nSpecifies that pack should not run package analysis after building the package.\n\n### MinClientVersion\n\nSpecifies the minimum version of the NuGet client that can install this package, enforced by nuget.exe and the Visual Studio Package Manager.\n\n### IncludeBuildOutput\n\nThis Boolean values specifies whether the build output assemblies should be packed into the *.nupkg* file or not.\n\n### IncludeContentInPack\n\nThis Boolean value specifies whether any items that have a type of `Content` will be included in the resulting package automatically. The default is `true`.\n\n### BuildOutputTargetFolder\n\nSpecifies the folder where to place the output assemblies. The output assemblies (and other output files) are copied into their respective framework folders.\n\n### ContentTargetFolders\n\nThis property specifies the default location of where all the content files should go if `PackagePath` is not specified for them. The default value is \"content;contentFiles\".\n\n### NuspecFile\n\nRelative or absolute path to the *.nuspec* file being used for packing.\n\n> [!NOTE]\n> If the *.nuspec* file is specified, it's used **exclusively** for packaging information and any information in the projects is not used.\n\n### NuspecBasePath\n\nBase path for the *.nuspec* file.\n\n### NuspecProperties\n\nSemicolon separated list of key=value pairs.\n\n## AssemblyInfo properties\n\n[Assembly attributes](../../framework/app-domains/set-assembly-attributes.md) that were typically present in an *AssemblyInfo* file are now automatically generated from properties.\n\n### Properties per attribute\n\nEach attribute has a property that control its content and another to disable its generation as shown in the following table:\n\n| Attribute                                                      | Property               | Property to disable                             |\n|----------------------------------------------------------------|------------------------|-------------------------------------------------|\n| <xref:System.Reflection.AssemblyCompanyAttribute>              | `Company`              | `GenerateAssemblyCompanyAttribute`              |\n| <xref:System.Reflection.AssemblyConfigurationAttribute>        | `Configuration`        | `GenerateAssemblyConfigurationAttribute`        |\n| <xref:System.Reflection.AssemblyCopyrightAttribute>            | `Copyright`            | `GenerateAssemblyCopyrightAttribute`            |\n| <xref:System.Reflection.AssemblyDescriptionAttribute>          | `Description`          | `GenerateAssemblyDescriptionAttribute`          |\n| <xref:System.Reflection.AssemblyFileVersionAttribute>          | `FileVersion`          | `GenerateAssemblyFileVersionAttribute`          |\n| <xref:System.Reflection.AssemblyInformationalVersionAttribute> | `InformationalVersion` | `GenerateAssemblyInformationalVersionAttribute` |\n| <xref:System.Reflection.AssemblyProductAttribute>              | `Product`              | `GenerateAssemblyProductAttribute`              |\n| <xref:System.Reflection.AssemblyTitleAttribute>                | `AssemblyTitle`        | `GenerateAssemblyTitleAttribute`                |\n| <xref:System.Reflection.AssemblyVersionAttribute>              | `AssemblyVersion`      | `GenerateAssemblyVersionAttribute`              |\n| <xref:System.Resources.NeutralResourcesLanguageAttribute>      | `NeutralLanguage`      | `GenerateNeutralResourcesLanguageAttribute`     |\n\nNotes:\n\n* `AssemblyVersion` and `FileVersion` default is to take the value of `$(Version)` without suffix. For example, if `$(Version)` is `1.2.3-beta.4`, then the value would be `1.2.3`.\n* `InformationalVersion` defaults to the value of `$(Version)`.\n* `InformationalVersion` has `$(SourceRevisionId)` appended if the property is present. It can be disabled using `IncludeSourceRevisionInInformationalVersion`.\n* `Copyright` and `Description` properties are also used for NuGet metadata.\n* `Configuration` is shared with all the build process and set via the `--configuration` parameter of `dotnet` commands.\n\n### GenerateAssemblyInfo\n\nA Boolean that enable or disable all the AssemblyInfo generation. The default value is `true`.\n\n### GeneratedAssemblyInfoFile\n\nThe path of the generated assembly info file. Default to a file in the `$(IntermediateOutputPath)` (obj) directory.\n","nodes":[{"pos":[4,160],"embed":true,"restype":"x-metadata","content":"title: Additions to the csproj format for .NET Core\ndescription: Learn about the differences between existing and .NET Core csproj files\nms.date: 09/22/2017","nodes":[{"content":"Additions to the csproj format for .NET Core","nodes":[{"pos":[0,44],"content":"Additions to the csproj format for .NET Core","nodes":[{"content":"Additions to the csproj format for .NET Core","pos":[0,44]}]}],"path":["title"],"nosxs":false},{"content":"Learn about the differences between existing and .NET Core csproj files","nodes":[{"pos":[0,71],"content":"Learn about the differences between existing and .NET Core csproj files","nodes":[{"content":"Learn about the differences between existing and .NET Core csproj files","pos":[0,71]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[168,212],"content":"Additions to the csproj format for .NET Core","linkify":"Additions to the csproj format for .NET Core","nodes":[{"content":"Additions to the csproj format for .NET Core","pos":[0,44]}]},{"content":"This document outlines the changes that were added to the project files as part of the move from <bpt id=\"p1\">*</bpt>project.json<ept id=\"p1\">*</ept> to <bpt id=\"p2\">*</bpt>csproj<ept id=\"p2\">*</ept> and <bpt id=\"p3\">[</bpt>MSBuild<ept id=\"p3\">](https://github.com/Microsoft/MSBuild)</ept>.","pos":[214,390],"source":"This document outlines the changes that were added to the project files as part of the move from *project.json* to *csproj* and [MSBuild](https://github.com/Microsoft/MSBuild)."},{"content":"For more information about general project file syntax and reference, see <bpt id=\"p1\">[</bpt>the MSBuild project file<ept id=\"p1\">](/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept> documentation.","pos":[391,567],"source":" For more information about general project file syntax and reference, see [the MSBuild project file](/visualstudio/msbuild/msbuild-project-file-schema-reference) documentation."},{"pos":[572,599],"content":"Implicit package references","linkify":"Implicit package references","nodes":[{"content":"Implicit package references","pos":[0,27]}]},{"content":"Metapackages are implicitly referenced based on the target framework(s) specified in the <ph id=\"ph1\">`&lt;TargetFramework&gt;`</ph> or <ph id=\"ph2\">`&lt;TargetFrameworks&gt;`</ph> property of your project file.","pos":[601,764],"source":"Metapackages are implicitly referenced based on the target framework(s) specified in the `<TargetFramework>` or `<TargetFrameworks>` property of your project file."},{"content":"<ph id=\"ph1\">`&lt;TargetFrameworks&gt;`</ph> is ignored if <ph id=\"ph2\">`&lt;TargetFramework&gt;`</ph> is specified, independent of order.","pos":[765,855],"source":"`<TargetFrameworks>` is ignored if `<TargetFramework>` is specified, independent of order."},{"pos":[1071,1086],"content":"Recommendations","linkify":"Recommendations","nodes":[{"content":"Recommendations","pos":[0,15]}]},{"pos":[1088,1232],"content":"Since <ph id=\"ph1\">`Microsoft.NETCore.App`</ph> or <ph id=\"ph2\">`NetStandard.Library`</ph> metapackages are implicitly referenced, the following are our recommended best practices:","source":"Since `Microsoft.NETCore.App` or `NetStandard.Library` metapackages are implicitly referenced, the following are our recommended best practices:"},{"pos":[1236,1434],"content":"When targeting .NET Core or .NET Standard, never have an explicit reference to the <ph id=\"ph1\">`Microsoft.NETCore.App`</ph> or <ph id=\"ph2\">`NetStandard.Library`</ph> metapackages via a <ph id=\"ph3\">`&lt;PackageReference&gt;`</ph> item in your project file.","source":"When targeting .NET Core or .NET Standard, never have an explicit reference to the `Microsoft.NETCore.App` or `NetStandard.Library` metapackages via a `<PackageReference>` item in your project file."},{"pos":[1437,1643],"content":"If you need a specific version of the runtime when targeting .NET Core, you should use the <ph id=\"ph1\">`&lt;RuntimeFrameworkVersion&gt;`</ph> property in your project (for example, <ph id=\"ph2\">`1.0.4`</ph>) instead of referencing the metapackage.","source":"If you need a specific version of the runtime when targeting .NET Core, you should use the `<RuntimeFrameworkVersion>` property in your project (for example, `1.0.4`) instead of referencing the metapackage."},{"pos":[1650,1840],"content":"This might happen if you are using <bpt id=\"p1\">[</bpt>self-contained deployments<ept id=\"p1\">](../deploying/index.md#self-contained-deployments-scd)</ept> and you need a specific patch version of 1.0.0 LTS runtime, for example.","source":"This might happen if you are using [self-contained deployments](../deploying/index.md#self-contained-deployments-scd) and you need a specific patch version of 1.0.0 LTS runtime, for example."},{"pos":[1843,2037],"content":"If you need a specific version of the <ph id=\"ph1\">`NetStandard.Library`</ph> metapackage when targeting .NET Standard, you can use the <ph id=\"ph2\">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> property and set the version you need.","source":"If you need a specific version of the `NetStandard.Library` metapackage when targeting .NET Standard, you can use the `<NetStandardImplicitPackageVersion>` property and set the version you need."},{"content":"Don't explicitly add or update references to either the <ph id=\"ph1\">`Microsoft.NETCore.App`</ph> or <ph id=\"ph2\">`NetStandard.Library`</ph> metapackage in .NET Framework projects.","pos":[2040,2184],"source":"Don't explicitly add or update references to either the `Microsoft.NETCore.App` or `NetStandard.Library` metapackage in .NET Framework projects."},{"content":"If any version of <ph id=\"ph1\">`NetStandard.Library`</ph> is needed when using a .NET Standard-based NuGet package, NuGet automatically installs that version.","pos":[2185,2325],"source":" If any version of `NetStandard.Library` is needed when using a .NET Standard-based NuGet package, NuGet automatically installs that version."},{"pos":[2330,2380],"content":"Default compilation includes in .NET Core projects","linkify":"Default compilation includes in .NET Core projects","nodes":[{"content":"Default compilation includes in .NET Core projects","pos":[0,50]}]},{"content":"With the move to the <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> format in the latest SDK versions, we've moved the default includes and excludes for compile items and embedded resources to the SDK properties files.","pos":[2381,2561],"source":"With the move to the *csproj* format in the latest SDK versions, we've moved the default includes and excludes for compile items and embedded resources to the SDK properties files."},{"content":"This means that you no longer need to specify these items in your project file.","pos":[2562,2641]},{"content":"The main reason for doing this is to reduce the clutter in your project file.","pos":[2643,2720]},{"content":"The defaults that are present in the SDK should cover most common use cases, so there is no need to repeat them in every project that you create.","pos":[2721,2866]},{"content":"This leads to smaller project files that are much easier to understand as well as edit by hand, if needed.","pos":[2867,2973]},{"pos":[2975,3125],"content":"The following table shows which element and which <bpt id=\"p1\">[</bpt>globs<ept id=\"p1\">](https://en.wikipedia.org/wiki/Glob_(programming))</ept> are both included and excluded in the SDK:","source":"The following table shows which element and which [globs](https://en.wikipedia.org/wiki/Glob_(programming)) are both included and excluded in the SDK:"},{"content":"Element","pos":[3129,3136]},{"content":"Include glob","pos":[3149,3161]},{"content":"Exclude glob","pos":[3193,3205]},{"content":"Remove glob","pos":[3257,3268]},{"content":"Compile","pos":[3445,3452]},{"content":"<ph id=\"ph1\">\\*</ph><ph id=\"ph2\">\\*</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">\\*</ph>.cs (or other language extensions)","pos":[3465,3506],"source":"\\*\\*/\\*.cs (or other language extensions)"},{"content":"<ph id=\"ph1\">\\*</ph><ph id=\"ph2\">\\*</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">\\*</ph>.user;  <ph id=\"ph5\">\\*</ph><ph id=\"ph6\">\\*</ph><ph id=\"ph7\">/</ph><ph id=\"ph8\">\\*</ph>.<ph id=\"ph9\">\\*</ph>proj;  <ph id=\"ph10\">\\*</ph><ph id=\"ph11\">\\*</ph><ph id=\"ph12\">/</ph><ph id=\"ph13\">\\*</ph>.sln;  <ph id=\"ph14\">\\*</ph><ph id=\"ph15\">\\*</ph><ph id=\"ph16\">/</ph><ph id=\"ph17\">\\*</ph>.vssscc","pos":[3509,3569],"source":"\\*\\*/\\*.user;  \\*\\*/\\*.\\*proj;  \\*\\*/\\*.sln;  \\*\\*/\\*.vssscc"},{"content":"N/A","pos":[3573,3576]},{"content":"EmbeddedResource","pos":[3602,3618]},{"content":"<ph id=\"ph1\">\\*</ph><ph id=\"ph2\">\\*</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">\\*</ph>.resx","pos":[3622,3634],"source":"\\*\\*/\\*.resx"},{"content":"<ph id=\"ph1\">\\*</ph><ph id=\"ph2\">\\*</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">\\*</ph>.user; <ph id=\"ph5\">\\*</ph><ph id=\"ph6\">\\*</ph><ph id=\"ph7\">/</ph><ph id=\"ph8\">\\*</ph>.<ph id=\"ph9\">\\*</ph>proj; <ph id=\"ph10\">\\*</ph><ph id=\"ph11\">\\*</ph><ph id=\"ph12\">/</ph><ph id=\"ph13\">\\*</ph>.sln; <ph id=\"ph14\">\\*</ph><ph id=\"ph15\">\\*</ph><ph id=\"ph16\">/</ph><ph id=\"ph17\">\\*</ph>.vssscc","pos":[3666,3723],"source":"\\*\\*/\\*.user; \\*\\*/\\*.\\*proj; \\*\\*/\\*.sln; \\*\\*/\\*.vssscc"},{"content":"N/A","pos":[3730,3733]},{"content":"None","pos":[3759,3763]},{"content":"<ph id=\"ph1\">\\*</ph><ph id=\"ph2\">\\*</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">\\*</ph>.user; <ph id=\"ph5\">\\*</ph><ph id=\"ph6\">\\*</ph><ph id=\"ph7\">/</ph><ph id=\"ph8\">\\*</ph>.<ph id=\"ph9\">\\*</ph>proj; <ph id=\"ph10\">\\*</ph><ph id=\"ph11\">\\*</ph><ph id=\"ph12\">/</ph><ph id=\"ph13\">\\*</ph>.sln; <ph id=\"ph14\">\\*</ph><ph id=\"ph15\">\\*</ph><ph id=\"ph16\">/</ph><ph id=\"ph17\">\\*</ph>.vssscc","pos":[3823,3880],"source":"\\*\\*/\\*.user; \\*\\*/\\*.\\*proj; \\*\\*/\\*.sln; \\*\\*/\\*.vssscc"},{"content":"<ph id=\"ph1\">\\*</ph><ph id=\"ph2\">\\*</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">\\*</ph>.cs; <ph id=\"ph5\">\\*</ph><ph id=\"ph6\">\\*</ph><ph id=\"ph7\">/</ph><ph id=\"ph8\">\\*</ph>.resx","pos":[3887,3911],"source":"\\*\\*/\\*.cs; \\*\\*/\\*.resx"},{"pos":[3919,4183],"content":"[!NOTE]\n**Exclude glob** always excludes the `./bin` and `./obj` folders, which are represented by the `$(BaseOutputPath)` and `$(BaseIntermediateOutputPath)` MSBuild properties, respectively. As a whole, all excludes are represented by `$(DefaultItemExcludes)`.","leadings":["","> "],"nodes":[{"content":"**Exclude glob** always excludes the `./bin` and `./obj` folders, which are represented by the `$(BaseOutputPath)` and `$(BaseIntermediateOutputPath)` MSBuild properties, respectively. As a whole, all excludes are represented by `$(DefaultItemExcludes)`.","pos":[8,262],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Exclude glob<ept id=\"p1\">**</ept> always excludes the <ph id=\"ph1\">`./bin`</ph> and <ph id=\"ph2\">`./obj`</ph> folders, which are represented by the <ph id=\"ph3\">`$(BaseOutputPath)`</ph> and <ph id=\"ph4\">`$(BaseIntermediateOutputPath)`</ph> MSBuild properties, respectively.","pos":[0,184],"source":"**Exclude glob** always excludes the `./bin` and `./obj` folders, which are represented by the `$(BaseOutputPath)` and `$(BaseIntermediateOutputPath)` MSBuild properties, respectively."},{"content":"As a whole, all excludes are represented by <ph id=\"ph1\">`$(DefaultItemExcludes)`</ph>.","pos":[185,254],"source":" As a whole, all excludes are represented by `$(DefaultItemExcludes)`."}]}]},{"content":"If you have globs in your project and you try to build it using the newest SDK, you'll get the following error:","pos":[4185,4296]},{"content":"Duplicate Compile items were included.","pos":[4300,4338]},{"content":"The .NET SDK includes Compile items from your project directory by default.","pos":[4339,4414]},{"content":"You can either remove these items from your project file, or set the 'EnableDefaultCompileItems' property to 'false' if you want to explicitly include them in your project file.","pos":[4415,4592]},{"pos":[4594,4810],"content":"In order to get around this error, you can either remove the explicit <ph id=\"ph1\">`Compile`</ph> items that match the ones listed on the previous table, or you can set the <ph id=\"ph2\">`&lt;EnableDefaultCompileItems&gt;`</ph> property to <ph id=\"ph3\">`false`</ph>, like this:","source":"In order to get around this error, you can either remove the explicit `Compile` items that match the ones listed on the previous table, or you can set the `<EnableDefaultCompileItems>` property to `false`, like this:"},{"pos":[4922,5090],"content":"Setting this property to <ph id=\"ph1\">`false`</ph> will disable implicit inclusion, reverting to the behavior of previous SDKs where you had to specify the default globs in your project.","source":"Setting this property to `false` will disable implicit inclusion, reverting to the behavior of previous SDKs where you had to specify the default globs in your project."},{"content":"This change does not modify the main mechanics of other includes.","pos":[5092,5157]},{"content":"However, if you wish to specify, for example, some files to get published with your app, you can still use the known mechanisms in <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> for that (for example, the <ph id=\"ph1\">`&lt;Content&gt;`</ph> element).","pos":[5158,5346],"source":" However, if you wish to specify, for example, some files to get published with your app, you can still use the known mechanisms in *csproj* for that (for example, the `<Content>` element)."},{"content":"<ph id=\"ph1\">`&lt;EnableDefaultCompileItems&gt;`</ph> only disables <ph id=\"ph2\">`Compile`</ph> globs but doesn't affect other globs, like the implicit <ph id=\"ph3\">`None`</ph> glob, which also applies to <ph id=\"ph4\">\\*</ph>.cs items.","pos":[5348,5505],"source":"`<EnableDefaultCompileItems>` only disables `Compile` globs but doesn't affect other globs, like the implicit `None` glob, which also applies to \\*.cs items."},{"content":"Because of that, <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> will continue show <ph id=\"ph1\">\\*</ph>.cs items as part of the project, included as <ph id=\"ph2\">`None`</ph> items.","pos":[5506,5625],"source":" Because of that, **Solution Explorer** will continue show \\*.cs items as part of the project, included as `None` items."},{"content":"In a similar way, you can set <ph id=\"ph1\">`&lt;EnableDefaultNoneItems&gt;`</ph> to false to disable the implicit <ph id=\"ph2\">`None`</ph> glob, like this:","pos":[5626,5739],"source":" In a similar way, you can set `<EnableDefaultNoneItems>` to false to disable the implicit `None` glob, like this:"},{"pos":[5845,5967],"content":"To disable <bpt id=\"p1\">**</bpt>all implicit globs<ept id=\"p1\">**</ept>, you can set the <ph id=\"ph1\">`&lt;EnableDefaultItems&gt;`</ph> property to <ph id=\"ph2\">`false`</ph> as in the following example:","source":"To disable **all implicit globs**, you can set the `<EnableDefaultItems>` property to `false` as in the following example:"},{"pos":[6068,6115],"content":"How to see the whole project as MSBuild sees it","linkify":"How to see the whole project as MSBuild sees it","nodes":[{"content":"How to see the whole project as MSBuild sees it","pos":[0,47]}]},{"content":"While those csproj changes greatly simplify project files, you might want to see the fully expanded project as MSBuild sees it once the SDK and its targets are included.","pos":[6117,6286]},{"content":"Preprocess the project with <bpt id=\"p1\">[</bpt>the <ph id=\"ph1\">`/pp`</ph> switch<ept id=\"p1\">](/visualstudio/msbuild/msbuild-command-line-reference#preprocess)</ept> of the <bpt id=\"p2\">[</bpt><ph id=\"ph2\">`dotnet msbuild`</ph><ept id=\"p2\">](dotnet-msbuild.md)</ept> command, which shows which files are imported, their sources, and their contributions to the build without actually building the project:","pos":[6287,6581],"source":" Preprocess the project with [the `/pp` switch](/visualstudio/msbuild/msbuild-command-line-reference#preprocess) of the [`dotnet msbuild`](dotnet-msbuild.md) command, which shows which files are imported, their sources, and their contributions to the build without actually building the project:"},{"content":"If the project has multiple target frameworks, the results of the command should be focused on only one of them by specifying it as an MSBuild property:","pos":[6621,6773]},{"pos":[6849,6858],"content":"Additions","linkify":"Additions","nodes":[{"content":"Additions","pos":[0,9]}]},{"pos":[6864,6877],"content":"Sdk attribute","linkify":"Sdk attribute","nodes":[{"content":"Sdk attribute","pos":[0,13]}]},{"content":"The root <ph id=\"ph1\">`&lt;Project&gt;`</ph> element of the <bpt id=\"p1\">*</bpt>.csproj<ept id=\"p1\">*</ept> file has a new attribute called <ph id=\"ph2\">`Sdk`</ph>.","pos":[6878,6962],"source":"The root `<Project>` element of the *.csproj* file has a new attribute called `Sdk`."},{"content":"<ph id=\"ph1\">`Sdk`</ph> specifies which SDK will be used by the project.","pos":[6963,7017],"source":"`Sdk` specifies which SDK will be used by the project."},{"content":"The SDK, as the <bpt id=\"p1\">[</bpt>layering document<ept id=\"p1\">](cli-msbuild-architecture.md)</ept> describes, is a set of MSBuild <bpt id=\"p2\">[</bpt>tasks<ept id=\"p2\">](/visualstudio/msbuild/msbuild-tasks)</ept> and <bpt id=\"p3\">[</bpt>targets<ept id=\"p3\">](/visualstudio/msbuild/msbuild-targets)</ept> that can build .NET Core code.","pos":[7018,7242],"source":" The SDK, as the [layering document](cli-msbuild-architecture.md) describes, is a set of MSBuild [tasks](/visualstudio/msbuild/msbuild-tasks) and [targets](/visualstudio/msbuild/msbuild-targets) that can build .NET Core code."},{"content":"We ship three main SDKs with the .NET Core tools:","pos":[7243,7292]},{"pos":[7297,7349],"content":"The .NET Core SDK with the ID of <ph id=\"ph1\">`Microsoft.NET.Sdk`</ph>","source":"The .NET Core SDK with the ID of `Microsoft.NET.Sdk`"},{"pos":[7353,7413],"content":"The .NET Core web SDK with the ID of <ph id=\"ph1\">`Microsoft.NET.Sdk.Web`</ph>","source":"The .NET Core web SDK with the ID of `Microsoft.NET.Sdk.Web`"},{"pos":[7417,7495],"content":"The .NET Core Razor Class Library SDK with the ID of <ph id=\"ph1\">`Microsoft.NET.Sdk.Razor`</ph>","source":"The .NET Core Razor Class Library SDK with the ID of `Microsoft.NET.Sdk.Razor`"},{"pos":[7497,7641],"content":"You need to have the <ph id=\"ph1\">`Sdk`</ph> attribute set to one of those IDs on the <ph id=\"ph2\">`&lt;Project&gt;`</ph> element in order to use the .NET Core tools and build your code.","source":"You need to have the `Sdk` attribute set to one of those IDs on the `<Project>` element in order to use the .NET Core tools and build your code."},{"pos":[7647,7663],"content":"PackageReference","linkify":"PackageReference","nodes":[{"content":"PackageReference","pos":[0,16]}]},{"content":"A <ph id=\"ph1\">`&lt;PackageReference&gt;`</ph> item element specifies a <bpt id=\"p1\">[</bpt>NuGet dependency in the project<ept id=\"p1\">](/nuget/consume-packages/package-references-in-project-files)</ept>.","pos":[7665,7808],"source":"A `<PackageReference>` item element specifies a [NuGet dependency in the project](/nuget/consume-packages/package-references-in-project-files)."},{"content":"The <ph id=\"ph1\">`Include`</ph> attribute specifies the package ID.","pos":[7809,7858],"source":" The `Include` attribute specifies the package ID."},{"pos":[7983,7990],"content":"Version","linkify":"Version","nodes":[{"content":"Version","pos":[0,7]}]},{"content":"The required <ph id=\"ph1\">`Version`</ph> attribute specifies the version of the package to restore.","pos":[7992,8073],"source":"The required `Version` attribute specifies the version of the package to restore."},{"content":"The attribute respects the rules of the <bpt id=\"p1\">[</bpt>NuGet versioning<ept id=\"p1\">](/nuget/reference/package-versioning#version-ranges-and-wildcards)</ept> scheme.","pos":[8074,8206],"source":" The attribute respects the rules of the [NuGet versioning](/nuget/reference/package-versioning#version-ranges-and-wildcards) scheme."},{"content":"The default behavior is an exact version match.","pos":[8207,8254]},{"content":"For example, specifying <ph id=\"ph1\">`Version=\"1.2.3\"`</ph> is equivalent to NuGet notation <ph id=\"ph2\">`[1.2.3]`</ph> for the exact 1.2.3 version of the package.","pos":[8255,8382],"source":" For example, specifying `Version=\"1.2.3\"` is equivalent to NuGet notation `[1.2.3]` for the exact 1.2.3 version of the package."},{"pos":[8389,8435],"content":"IncludeAssets, ExcludeAssets and PrivateAssets","linkify":"IncludeAssets, ExcludeAssets and PrivateAssets","nodes":[{"content":"IncludeAssets, ExcludeAssets and PrivateAssets","pos":[0,46]}]},{"content":"<ph id=\"ph1\">`IncludeAssets`</ph> attribute specifies which assets belonging to the package specified by <ph id=\"ph2\">`&lt;PackageReference&gt;`</ph> should be consumed.","pos":[8437,8564],"source":"`IncludeAssets` attribute specifies which assets belonging to the package specified by `<PackageReference>` should be\nconsumed."},{"content":"By default, all package assets are included.","pos":[8565,8609]},{"pos":[8611,8742],"content":"<ph id=\"ph1\">`ExcludeAssets`</ph> attribute specifies which assets belonging to the package specified by <ph id=\"ph2\">`&lt;PackageReference&gt;`</ph> should not be consumed.","source":"`ExcludeAssets` attribute specifies which assets belonging to the package specified by `<PackageReference>` should not\nbe consumed."},{"content":"<ph id=\"ph1\">`PrivateAssets`</ph> attribute specifies which assets belonging to the package specified by <ph id=\"ph2\">`&lt;PackageReference&gt;`</ph> should be consumed but not flow to the next project.","pos":[8744,8904],"source":"`PrivateAssets` attribute specifies which assets belonging to the package specified by `<PackageReference>` should be\nconsumed but not flow to the next project."},{"content":"The <ph id=\"ph1\">`Analyzers`</ph>, <ph id=\"ph2\">`Build`</ph> and <ph id=\"ph3\">`ContentFiles`</ph> assets are private by default when this attribute is not present.","pos":[8905,9014],"source":" The `Analyzers`, `Build` and `ContentFiles` assets are private by default\nwhen this attribute is not present."},{"pos":[9018,9113],"content":"[!NOTE]\n`PrivateAssets` is equivalent to the *project.json*/*xproj* `SuppressParent` element.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">`PrivateAssets`</ph> is equivalent to the <bpt id=\"p1\">*</bpt>project.json<ept id=\"p1\">*</ept><ph id=\"ph2\">/</ph><bpt id=\"p2\">*</bpt>xproj<ept id=\"p2\">*</ept> <ph id=\"ph3\">`SuppressParent`</ph> element.","pos":[8,93],"source":"`PrivateAssets` is equivalent to the *project.json*/*xproj* `SuppressParent` element."}]},{"pos":[9115,9248],"content":"These attributes can contain one or more of the following items, separated by the semicolon <ph id=\"ph1\">`;`</ph> character if more than one is listed:","source":"These attributes can contain one or more of the following items, separated by the semicolon `;` character if more than\none is listed:"},{"pos":[9252,9328],"content":"<ph id=\"ph1\">`Compile`</ph> – the contents of the lib folder are available to compile against.","source":"`Compile` – the contents of the lib folder are available to compile against."},{"pos":[9331,9394],"content":"<ph id=\"ph1\">`Runtime`</ph> – the contents of the runtime folder are distributed.","source":"`Runtime` – the contents of the runtime folder are distributed."},{"pos":[9397,9465],"content":"<ph id=\"ph1\">`ContentFiles`</ph> – the contents of the <bpt id=\"p1\">*</bpt>contentfiles<ept id=\"p1\">*</ept> folder are used.","source":"`ContentFiles` – the contents of the *contentfiles* folder are used."},{"pos":[9468,9525],"content":"<ph id=\"ph1\">`Build`</ph> – the props/targets in the build folder are used.","source":"`Build` – the props/targets in the build folder are used."},{"pos":[9528,9615],"content":"<ph id=\"ph1\">`Native`</ph> – the contents from native assets are copied to the output folder for runtime.","source":"`Native` – the contents from native assets are copied to the output folder for runtime."},{"pos":[9618,9655],"content":"<ph id=\"ph1\">`Analyzers`</ph> – the analyzers are used.","source":"`Analyzers` – the analyzers are used."},{"content":"Alternatively, the attribute can contain:","pos":[9657,9698]},{"pos":[9702,9739],"content":"<ph id=\"ph1\">`None`</ph> – none of the assets are used.","source":"`None` – none of the assets are used."},{"pos":[9742,9770],"content":"<ph id=\"ph1\">`All`</ph> – all assets are used.","source":"`All` – all assets are used."},{"pos":[9776,9798],"content":"DotNetCliToolReference","linkify":"DotNetCliToolReference","nodes":[{"content":"DotNetCliToolReference","pos":[0,22]}]},{"content":"A <ph id=\"ph1\">`&lt;DotNetCliToolReference&gt;`</ph> item element specifies the CLI tool that the user wants to restore in the context of the project.","pos":[9799,9925],"source":"A `<DotNetCliToolReference>` item element specifies the CLI tool that the user wants to restore in the context of the project."},{"content":"It's a replacement for the <ph id=\"ph1\">`tools`</ph> node in <bpt id=\"p1\">*</bpt>project.json<ept id=\"p1\">*</ept>.","pos":[9926,9984],"source":" It's\na replacement for the `tools` node in *project.json*."},{"pos":[10064,10071],"content":"Version","linkify":"Version","nodes":[{"content":"Version","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`Version`</ph> specifies the version of the package to restore.","pos":[10073,10131],"source":"`Version` specifies the version of the package to restore."},{"content":"The attribute respects the rules of the <bpt id=\"p1\">[</bpt>NuGet versioning<ept id=\"p1\">](/nuget/create-packages/dependency-versions#version-ranges)</ept> scheme.","pos":[10132,10257],"source":" The attribute respects the rules of the [NuGet versioning](/nuget/create-packages/dependency-versions#version-ranges) scheme."},{"content":"The default behavior is an exact version match.","pos":[10258,10305]},{"content":"For example, specifying <ph id=\"ph1\">`Version=\"1.2.3\"`</ph> is equivalent to NuGet notation <ph id=\"ph2\">`[1.2.3]`</ph> for the exact 1.2.3 version of the package.","pos":[10306,10433],"source":" For example, specifying `Version=\"1.2.3\"` is equivalent to NuGet notation `[1.2.3]` for the exact 1.2.3 version of the package."},{"pos":[10439,10457],"content":"RuntimeIdentifiers","linkify":"RuntimeIdentifiers","nodes":[{"content":"RuntimeIdentifiers","pos":[0,18]}]},{"content":"The <ph id=\"ph1\">`&lt;RuntimeIdentifiers&gt;`</ph> property element lets you specify a semicolon-delimited list of <bpt id=\"p1\">[</bpt>Runtime Identifiers (RIDs)<ept id=\"p1\">](../rid-catalog.md)</ept> for the project.","pos":[10459,10614],"source":"The `<RuntimeIdentifiers>` property element lets you specify a semicolon-delimited list of [Runtime Identifiers (RIDs)](../rid-catalog.md) for the project."},{"content":"RIDs enable publishing self-contained deployments.","pos":[10615,10665],"source":"\nRIDs enable publishing self-contained deployments."},{"pos":[10765,10782],"content":"RuntimeIdentifier","linkify":"RuntimeIdentifier","nodes":[{"content":"RuntimeIdentifier","pos":[0,17]}]},{"content":"The <ph id=\"ph1\">`&lt;RuntimeIdentifier&gt;`</ph> property element allows you to specify only one <bpt id=\"p1\">[</bpt>Runtime Identifier (RID)<ept id=\"p1\">](../rid-catalog.md)</ept> for the project.","pos":[10784,10920],"source":"The `<RuntimeIdentifier>` property element allows you to specify only one [Runtime Identifier (RID)](../rid-catalog.md) for the project."},{"content":"The RID enables publishing a self-contained deployment.","pos":[10921,10976]},{"content":"Use <ph id=\"ph1\">`&lt;RuntimeIdentifiers&gt;`</ph> (plural) instead if you need to publish for multiple runtimes.","pos":[11046,11135],"source":"Use `<RuntimeIdentifiers>` (plural) instead if you need to publish for multiple runtimes."},{"content":"<ph id=\"ph1\">`&lt;RuntimeIdentifier&gt;`</ph> can provide faster builds when only a single runtime is required.","pos":[11136,11223],"source":"`<RuntimeIdentifier>` can provide faster builds when only a single runtime is required."},{"pos":[11229,11250],"content":"PackageTargetFallback","linkify":"PackageTargetFallback","nodes":[{"content":"PackageTargetFallback","pos":[0,21]}]},{"content":"The <ph id=\"ph1\">`&lt;PackageTargetFallback&gt;`</ph> property element allows you to specify a set of compatible targets to be used when restoring packages.","pos":[11252,11384],"source":"The `<PackageTargetFallback>` property element allows you to specify a set of compatible targets to be used when restoring packages."},{"content":"It's designed to allow packages that use the dotnet <bpt id=\"p1\">[</bpt>TxM (Target x Moniker)<ept id=\"p1\">](/nuget/schema/target-frameworks)</ept> to operate with packages that don't declare a dotnet TxM.","pos":[11385,11552],"source":" It's designed to allow packages that use the dotnet [TxM (Target x Moniker)](/nuget/schema/target-frameworks) to operate with packages that don't declare a dotnet TxM."},{"content":"If your project uses the dotnet TxM, then all the packages it depends on must also have a dotnet TxM, unless you add the <ph id=\"ph1\">`&lt;PackageTargetFallback&gt;`</ph> to your project in order to allow non-dotnet platforms to be compatible with dotnet.","pos":[11553,11784],"source":" If your project uses the dotnet TxM, then all the packages it depends on must also have a dotnet TxM, unless you add the `<PackageTargetFallback>` to your project in order to allow non-dotnet platforms to be compatible with dotnet."},{"content":"The following example provides the fallbacks for all targets in your project:","pos":[11786,11863]},{"pos":[11986,12068],"content":"The following example specifies the fallbacks only for the <ph id=\"ph1\">`netcoreapp2.1`</ph> target:","source":"The following example specifies the fallbacks only for the `netcoreapp2.1` target:"},{"pos":[12244,12269],"content":"NuGet metadata properties","linkify":"NuGet metadata properties","nodes":[{"content":"NuGet metadata properties","pos":[0,25]}]},{"content":"With the move to MSBuild, we have moved the input metadata that is used when packing a NuGet package from <bpt id=\"p1\">*</bpt>project.json<ept id=\"p1\">*</ept> to <bpt id=\"p2\">*</bpt>.csproj<ept id=\"p2\">*</ept> files.","pos":[12271,12411],"source":"With the move to MSBuild, we have moved the input metadata that is used when packing a NuGet package from *project.json* to *.csproj* files."},{"content":"The inputs are MSBuild properties so they have to go within a <ph id=\"ph1\">`&lt;PropertyGroup&gt;`</ph> group.","pos":[12412,12498],"source":" The inputs are MSBuild properties so they have to go within a `<PropertyGroup>` group."},{"content":"The following is the list of properties that are used as inputs to the packing process when using the <ph id=\"ph1\">`dotnet pack`</ph> command or the <ph id=\"ph2\">`Pack`</ph> MSBuild target that is part of the SDK.","pos":[12499,12676],"source":" The following is the list of properties that are used as inputs to the packing process when using the `dotnet pack` command or the `Pack` MSBuild target that is part of the SDK."},{"pos":[12682,12692],"content":"IsPackable","linkify":"IsPackable","nodes":[{"content":"IsPackable","pos":[0,10]}]},{"content":"A Boolean value that specifies whether the project can be packed.","pos":[12694,12759]},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[12760,12788],"source":" The default value is `true`."},{"pos":[12794,12808],"content":"PackageVersion","linkify":"PackageVersion","nodes":[{"content":"PackageVersion","pos":[0,14]}]},{"content":"Specifies the version that the resulting package will have.","pos":[12810,12869]},{"content":"Accepts all forms of NuGet version string.","pos":[12870,12912]},{"content":"Default is the value of <ph id=\"ph1\">`$(Version)`</ph>, that is, of the property <ph id=\"ph2\">`Version`</ph> in the project.","pos":[12913,13001],"source":" Default is the value of `$(Version)`, that is, of the property `Version` in the project."},{"pos":[13007,13016],"content":"PackageId","linkify":"PackageId","nodes":[{"content":"PackageId","pos":[0,9]}]},{"content":"Specifies the name for the resulting package.","pos":[13018,13063]},{"content":"If not specified, the <ph id=\"ph1\">`pack`</ph> operation will default to using the <ph id=\"ph2\">`AssemblyName`</ph> or directory name as the name of the package.","pos":[13064,13189],"source":" If not specified, the `pack` operation will default to using the `AssemblyName` or directory name as the name of the package."},{"pos":[13195,13200],"content":"Title","linkify":"Title","nodes":[{"content":"Title","pos":[0,5]}]},{"content":"A human-friendly title of the package, typically used in UI displays as on nuget.org and the Package Manager in Visual Studio.","pos":[13202,13328]},{"content":"If not specified, the package ID is used instead.","pos":[13329,13378]},{"pos":[13384,13391],"content":"Authors","linkify":"Authors","nodes":[{"content":"Authors","pos":[0,7]}]},{"content":"A semicolon-separated list of packages authors, matching the profile names on nuget.org. These are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors.","pos":[13393,13597]},{"pos":[13603,13621],"content":"PackageDescription","linkify":"PackageDescription","nodes":[{"content":"PackageDescription","pos":[0,18]}]},{"content":"A long description of the package for UI display.","pos":[13623,13672]},{"pos":[13678,13689],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"A long description for the assembly.","pos":[13691,13727]},{"content":"If <ph id=\"ph1\">`PackageDescription`</ph> is not specified then this property is also used as the description of the package.","pos":[13728,13835],"source":" If `PackageDescription` is not specified then this property is also used as the description of the package."},{"pos":[13841,13850],"content":"Copyright","linkify":"Copyright","nodes":[{"content":"Copyright","pos":[0,9]}]},{"content":"Copyright details for the package.","pos":[13852,13886]},{"pos":[13892,13923],"content":"PackageRequireLicenseAcceptance","linkify":"PackageRequireLicenseAcceptance","nodes":[{"content":"PackageRequireLicenseAcceptance","pos":[0,31]}]},{"content":"A Boolean value that specifies whether the client must prompt the consumer to accept the package license before installing the package.","pos":[13925,14060]},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[14061,14084],"source":" The default is `false`."},{"pos":[14090,14114],"content":"PackageLicenseExpression","linkify":"PackageLicenseExpression","nodes":[{"content":"PackageLicenseExpression","pos":[0,24]}]},{"content":"An <bpt id=\"p1\">[</bpt>SPDX license identifier<ept id=\"p1\">](https://spdx.org/licenses/)</ept> or expression.","pos":[14116,14187],"source":"An [SPDX license identifier](https://spdx.org/licenses/) or expression."},{"content":"For example, <ph id=\"ph1\">`Apache-2.0`</ph>.","pos":[14188,14214],"source":" For example, `Apache-2.0`."},{"content":"Here is the complete list of <bpt id=\"p1\">[</bpt>SPDX license identifiers<ept id=\"p1\">](https://spdx.org/licenses/)</ept>.","pos":[14216,14300],"source":"Here is the complete list of [SPDX license identifiers](https://spdx.org/licenses/)."},{"content":"NuGet.org accepts only OSI or FSF approved licenses when using license type expression.","pos":[14301,14388]},{"pos":[14390,14500],"content":"The exact syntax of the license expressions is described below in <bpt id=\"p1\">[</bpt>ABNF<ept id=\"p1\">](https://tools.ietf.org/html/rfc5234)</ept>.","source":"The exact syntax of the license expressions is described below in [ABNF](https://tools.ietf.org/html/rfc5234)."},{"pos":[15197,15319],"content":"[!NOTE]\nOnly one of `PackageLicenseExpression`, `PackageLicenseFile` and `PackageLicenseUrl` can be specified at a time.","leadings":["","> "],"nodes":[{"content":"Only one of <ph id=\"ph1\">`PackageLicenseExpression`</ph>, <ph id=\"ph2\">`PackageLicenseFile`</ph> and <ph id=\"ph3\">`PackageLicenseUrl`</ph> can be specified at a time.","pos":[8,120],"source":"Only one of `PackageLicenseExpression`, `PackageLicenseFile` and `PackageLicenseUrl` can be specified at a time."}]},{"pos":[15325,15343],"content":"PackageLicenseFile","linkify":"PackageLicenseFile","nodes":[{"content":"PackageLicenseFile","pos":[0,18]}]},{"pos":[15345,15536],"content":"Path to a license file within the package if you are using a license that hasn’t been assigned an SPDX identifier, or it is a custom license (Otherwise <ph id=\"ph1\">`PackageLicenseExpression`</ph> is prefered)","source":"Path to a license file within the package if you are using a license that hasn’t been assigned an SPDX identifier, or it is a custom license (Otherwise `PackageLicenseExpression` is prefered)"},{"pos":[15538,15691],"content":"Replaces <ph id=\"ph1\">`PackageLicenseUrl`</ph>, can't be combined with <ph id=\"ph2\">`PackageLicenseExpression`</ph> and requires Visual Studio 15.9.4, .NET SDK 2.1.502 or 2.2.101, or newer.","source":"Replaces `PackageLicenseUrl`, can't be combined with `PackageLicenseExpression` and requires Visual Studio 15.9.4, .NET SDK 2.1.502 or 2.2.101, or newer."},{"content":"You will need to ensure the license file is packed by adding it explicitly to the project, example usage:","pos":[15693,15798]},{"pos":[16018,16035],"content":"PackageLicenseUrl","linkify":"PackageLicenseUrl","nodes":[{"content":"PackageLicenseUrl","pos":[0,17]}]},{"content":"An URL to the license that is applicable to the package.","pos":[16037,16093]},{"content":"(<bpt id=\"p1\">_</bpt>deprecated since Visual Studio 15.9.4, .NET SDK 2.1.502 and 2.2.101<ept id=\"p1\">_</ept>)","pos":[16094,16165],"source":" (_deprecated since Visual Studio 15.9.4, .NET SDK 2.1.502 and 2.2.101_)"},{"pos":[16171,16185],"content":"PackageIconUrl","linkify":"PackageIconUrl","nodes":[{"content":"PackageIconUrl","pos":[0,14]}]},{"content":"A URL for a 64x64 image with transparent background to use as the icon for the package in UI display.","pos":[16187,16288]},{"pos":[16294,16313],"content":"PackageReleaseNotes","linkify":"PackageReleaseNotes","nodes":[{"content":"PackageReleaseNotes","pos":[0,19]}]},{"content":"Release notes for the package.","pos":[16315,16345]},{"pos":[16351,16362],"content":"PackageTags","linkify":"PackageTags","nodes":[{"content":"PackageTags","pos":[0,11]}]},{"content":"A semicolon-delimited list of tags that designates the package.","pos":[16364,16427]},{"pos":[16433,16450],"content":"PackageOutputPath","linkify":"PackageOutputPath","nodes":[{"content":"PackageOutputPath","pos":[0,17]}]},{"content":"Determines the output path in which the packed package will be dropped.","pos":[16452,16523]},{"content":"Default is <ph id=\"ph1\">`$(OutputPath)`</ph>.","pos":[16524,16551],"source":" Default is `$(OutputPath)`."},{"pos":[16557,16571],"content":"IncludeSymbols","linkify":"IncludeSymbols","nodes":[{"content":"IncludeSymbols","pos":[0,14]}]},{"content":"This Boolean value indicates whether the package should create an additional symbols package when the project is packed.","pos":[16573,16693]},{"content":"This package will have a <bpt id=\"p1\">*</bpt>.symbols.nupkg<ept id=\"p1\">*</ept> extension and will copy the PDB files along with the DLL and other output files.","pos":[16694,16816],"source":" This package will have a *.symbols.nupkg* extension and will copy the PDB files along with the DLL and other output files."},{"pos":[16822,16835],"content":"IncludeSource","linkify":"IncludeSource","nodes":[{"content":"IncludeSource","pos":[0,13]}]},{"content":"This Boolean value indicates whether the pack process should create a source package.","pos":[16837,16922]},{"content":"The source package contains the library's source code as well as PDB files.","pos":[16923,16998]},{"content":"Source files are put under the <ph id=\"ph1\">`src/ProjectName`</ph> directory in the resulting package file.","pos":[16999,17088],"source":" Source files are put under the `src/ProjectName` directory in the resulting package file."},{"pos":[17094,17100],"content":"IsTool","linkify":"IsTool","nodes":[{"content":"IsTool","pos":[0,6]}]},{"content":"Specifies whether all output files are copied to the <bpt id=\"p1\">*</bpt>tools<ept id=\"p1\">*</ept> folder instead of the <bpt id=\"p2\">*</bpt>lib<ept id=\"p2\">*</ept> folder.","pos":[17102,17198],"source":"Specifies whether all output files are copied to the *tools* folder instead of the *lib* folder."},{"content":"Note that this is different from a <ph id=\"ph1\">`DotNetCliTool`</ph> which is specified by setting the <ph id=\"ph2\">`PackageType`</ph> in the <bpt id=\"p1\">*</bpt>.csproj<ept id=\"p1\">*</ept> file.","pos":[17199,17320],"source":" Note that this is different from a `DotNetCliTool` which is specified by setting the `PackageType` in the *.csproj* file."},{"pos":[17326,17339],"content":"RepositoryUrl","linkify":"RepositoryUrl","nodes":[{"content":"RepositoryUrl","pos":[0,13]}]},{"content":"Specifies the URL for the repository where the source code for the package resides and/or from which it's being built.","pos":[17341,17459]},{"pos":[17465,17479],"content":"RepositoryType","linkify":"RepositoryType","nodes":[{"content":"RepositoryType","pos":[0,14]}]},{"content":"Specifies the type of the repository.","pos":[17481,17518]},{"content":"Default is \"git\".","pos":[17519,17536]},{"pos":[17542,17559],"content":"NoPackageAnalysis","linkify":"NoPackageAnalysis","nodes":[{"content":"NoPackageAnalysis","pos":[0,17]}]},{"content":"Specifies that pack should not run package analysis after building the package.","pos":[17561,17640]},{"pos":[17646,17662],"content":"MinClientVersion","linkify":"MinClientVersion","nodes":[{"content":"MinClientVersion","pos":[0,16]}]},{"content":"Specifies the minimum version of the NuGet client that can install this package, enforced by nuget.exe and the Visual Studio Package Manager.","pos":[17664,17805]},{"pos":[17811,17829],"content":"IncludeBuildOutput","linkify":"IncludeBuildOutput","nodes":[{"content":"IncludeBuildOutput","pos":[0,18]}]},{"pos":[17831,17944],"content":"This Boolean values specifies whether the build output assemblies should be packed into the <bpt id=\"p1\">*</bpt>.nupkg<ept id=\"p1\">*</ept> file or not.","source":"This Boolean values specifies whether the build output assemblies should be packed into the *.nupkg* file or not."},{"pos":[17950,17970],"content":"IncludeContentInPack","linkify":"IncludeContentInPack","nodes":[{"content":"IncludeContentInPack","pos":[0,20]}]},{"content":"This Boolean value specifies whether any items that have a type of <ph id=\"ph1\">`Content`</ph> will be included in the resulting package automatically.","pos":[17972,18105],"source":"This Boolean value specifies whether any items that have a type of `Content` will be included in the resulting package automatically."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[18106,18128],"source":" The default is `true`."},{"pos":[18134,18157],"content":"BuildOutputTargetFolder","linkify":"BuildOutputTargetFolder","nodes":[{"content":"BuildOutputTargetFolder","pos":[0,23]}]},{"content":"Specifies the folder where to place the output assemblies.","pos":[18159,18217]},{"content":"The output assemblies (and other output files) are copied into their respective framework folders.","pos":[18218,18316]},{"pos":[18322,18342],"content":"ContentTargetFolders","linkify":"ContentTargetFolders","nodes":[{"content":"ContentTargetFolders","pos":[0,20]}]},{"content":"This property specifies the default location of where all the content files should go if <ph id=\"ph1\">`PackagePath`</ph> is not specified for them.","pos":[18344,18473],"source":"This property specifies the default location of where all the content files should go if `PackagePath` is not specified for them."},{"content":"The default value is \"content;contentFiles\".","pos":[18474,18518]},{"pos":[18524,18534],"content":"NuspecFile","linkify":"NuspecFile","nodes":[{"content":"NuspecFile","pos":[0,10]}]},{"pos":[18536,18607],"content":"Relative or absolute path to the <bpt id=\"p1\">*</bpt>.nuspec<ept id=\"p1\">*</ept> file being used for packing.","source":"Relative or absolute path to the *.nuspec* file being used for packing."},{"pos":[18611,18757],"content":"[!NOTE]\nIf the *.nuspec* file is specified, it's used **exclusively** for packaging information and any information in the projects is not used.","leadings":["","> "],"nodes":[{"content":"If the <bpt id=\"p1\">*</bpt>.nuspec<ept id=\"p1\">*</ept> file is specified, it's used <bpt id=\"p2\">**</bpt>exclusively<ept id=\"p2\">**</ept> for packaging information and any information in the projects is not used.","pos":[8,144],"source":"If the *.nuspec* file is specified, it's used **exclusively** for packaging information and any information in the projects is not used."}]},{"pos":[18763,18777],"content":"NuspecBasePath","linkify":"NuspecBasePath","nodes":[{"content":"NuspecBasePath","pos":[0,14]}]},{"pos":[18779,18812],"content":"Base path for the <bpt id=\"p1\">*</bpt>.nuspec<ept id=\"p1\">*</ept> file.","source":"Base path for the *.nuspec* file."},{"pos":[18818,18834],"content":"NuspecProperties","linkify":"NuspecProperties","nodes":[{"content":"NuspecProperties","pos":[0,16]}]},{"content":"Semicolon separated list of key=value pairs.","pos":[18836,18880]},{"pos":[18885,18908],"content":"AssemblyInfo properties","linkify":"AssemblyInfo properties","nodes":[{"content":"AssemblyInfo properties","pos":[0,23]}]},{"pos":[18910,19090],"content":"<bpt id=\"p1\">[</bpt>Assembly attributes<ept id=\"p1\">](../../framework/app-domains/set-assembly-attributes.md)</ept> that were typically present in an <bpt id=\"p2\">*</bpt>AssemblyInfo<ept id=\"p2\">*</ept> file are now automatically generated from properties.","source":"[Assembly attributes](../../framework/app-domains/set-assembly-attributes.md) that were typically present in an *AssemblyInfo* file are now automatically generated from properties."},{"pos":[19096,19120],"content":"Properties per attribute","linkify":"Properties per attribute","nodes":[{"content":"Properties per attribute","pos":[0,24]}]},{"content":"Each attribute has a property that control its content and another to disable its generation as shown in the following table:","pos":[19122,19247]},{"content":"Attribute","pos":[19251,19260]},{"content":"Property","pos":[19316,19324]},{"content":"Property to disable","pos":[19341,19360]},{"content":"Notes:","pos":[20954,20960]},{"content":"<ph id=\"ph1\">`AssemblyVersion`</ph> and <ph id=\"ph2\">`FileVersion`</ph> default is to take the value of <ph id=\"ph3\">`$(Version)`</ph> without suffix.","pos":[20964,21060],"source":"`AssemblyVersion` and `FileVersion` default is to take the value of `$(Version)` without suffix."},{"content":"For example, if <ph id=\"ph1\">`$(Version)`</ph> is <ph id=\"ph2\">`1.2.3-beta.4`</ph>, then the value would be <ph id=\"ph3\">`1.2.3`</ph>.","pos":[21061,21141],"source":" For example, if `$(Version)` is `1.2.3-beta.4`, then the value would be `1.2.3`."},{"pos":[21144,21205],"content":"<ph id=\"ph1\">`InformationalVersion`</ph> defaults to the value of <ph id=\"ph2\">`$(Version)`</ph>.","source":"`InformationalVersion` defaults to the value of `$(Version)`."},{"content":"<ph id=\"ph1\">`InformationalVersion`</ph> has <ph id=\"ph2\">`$(SourceRevisionId)`</ph> appended if the property is present.","pos":[21208,21293],"source":"`InformationalVersion` has `$(SourceRevisionId)` appended if the property is present."},{"content":"It can be disabled using <ph id=\"ph1\">`IncludeSourceRevisionInInformationalVersion`</ph>.","pos":[21294,21365],"source":" It can be disabled using `IncludeSourceRevisionInInformationalVersion`."},{"pos":[21368,21442],"content":"<ph id=\"ph1\">`Copyright`</ph> and <ph id=\"ph2\">`Description`</ph> properties are also used for NuGet metadata.","source":"`Copyright` and `Description` properties are also used for NuGet metadata."},{"pos":[21445,21563],"content":"<ph id=\"ph1\">`Configuration`</ph> is shared with all the build process and set via the <ph id=\"ph2\">`--configuration`</ph> parameter of <ph id=\"ph3\">`dotnet`</ph> commands.","source":"`Configuration` is shared with all the build process and set via the `--configuration` parameter of `dotnet` commands."},{"pos":[21569,21589],"content":"GenerateAssemblyInfo","linkify":"GenerateAssemblyInfo","nodes":[{"content":"GenerateAssemblyInfo","pos":[0,20]}]},{"content":"A Boolean that enable or disable all the AssemblyInfo generation.","pos":[21591,21656]},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[21657,21685],"source":" The default value is `true`."},{"pos":[21691,21716],"content":"GeneratedAssemblyInfoFile","linkify":"GeneratedAssemblyInfoFile","nodes":[{"content":"GeneratedAssemblyInfoFile","pos":[0,25]}]},{"content":"The path of the generated assembly info file.","pos":[21718,21763]},{"content":"Default to a file in the <ph id=\"ph1\">`$(IntermediateOutputPath)`</ph> (obj) directory.","pos":[21764,21833],"source":" Default to a file in the `$(IntermediateOutputPath)` (obj) directory."}]}