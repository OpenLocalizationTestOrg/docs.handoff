{"content":"---\ntitle: \"new constraint - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"new constraint keyword [C#]\"\nms.assetid: 58850b64-cb97-4136-be50-1f3bc7fc1da9\n---\n# new constraint (C# Reference)\n\nThe `new` constraint specifies that any type argument in a generic class declaration must have a public parameterless constructor. To use the new constraint, the type cannot be abstract.\n\n## Example\n\nApply the `new` constraint to a type parameter when your generic class creates new instances of the type, as shown in the following example:\n\n[!code-csharp[csrefKeywordsOperator#5](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsOperator/CS/csrefKeywordsOperators.cs#5)]\n\n## Example\n\nWhen you use the `new()` constraint with other constraints, it must be specified last:\n\n[!code-csharp[csrefKeywordsOperator#6](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsOperator/CS/csrefKeywordsOperators.cs#6)]\n\nFor more information, see [Constraints on Type Parameters](../../programming-guide/generics/constraints-on-type-parameters.md).\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- <xref:System.Collections.Generic>\n- [C# Reference](../../language-reference/index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Operator Keywords](operator-keywords.md)\n- [Generics](../../programming-guide/generics/index.md)","nodes":[{"pos":[4,188],"embed":true,"restype":"x-metadata","content":"title: \"new constraint - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"new constraint keyword [C#]\"\nms.assetid: 58850b64-cb97-4136-be50-1f3bc7fc1da9","nodes":[{"content":"new constraint - C# Reference","nodes":[{"pos":[0,29],"content":"new constraint - C# Reference","nodes":[{"content":"new constraint - C# Reference","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[195,224],"content":"new constraint (C# Reference)","linkify":"new constraint (C# Reference)","nodes":[{"content":"new constraint (C# Reference)","pos":[0,29]}]},{"content":"The <ph id=\"ph1\">`new`</ph> constraint specifies that any type argument in a generic class declaration must have a public parameterless constructor.","pos":[226,356],"source":"The `new` constraint specifies that any type argument in a generic class declaration must have a public parameterless constructor."},{"content":"To use the new constraint, the type cannot be abstract.","pos":[357,412]},{"pos":[417,424],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[426,566],"content":"Apply the <ph id=\"ph1\">`new`</ph> constraint to a type parameter when your generic class creates new instances of the type, as shown in the following example:","source":"Apply the `new` constraint to a type parameter when your generic class creates new instances of the type, as shown in the following example:"},{"pos":[713,720],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[722,808],"content":"When you use the <ph id=\"ph1\">`new()`</ph> constraint with other constraints, it must be specified last:","source":"When you use the `new()` constraint with other constraints, it must be specified last:"},{"pos":[952,1079],"content":"For more information, see <bpt id=\"p1\">[</bpt>Constraints on Type Parameters<ept id=\"p1\">](../../programming-guide/generics/constraints-on-type-parameters.md)</ept>.","source":"For more information, see [Constraints on Type Parameters](../../programming-guide/generics/constraints-on-type-parameters.md)."},{"pos":[1084,1109],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[1175,1183],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1223,1272],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../language-reference/index.md)</ept>","source":"[C# Reference](../../language-reference/index.md)"},{"pos":[1275,1331],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1334,1357],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1360,1401],"content":"<bpt id=\"p1\">[</bpt>Operator Keywords<ept id=\"p1\">](operator-keywords.md)</ept>","source":"[Operator Keywords](operator-keywords.md)"},{"pos":[1404,1457],"content":"<bpt id=\"p1\">[</bpt>Generics<ept id=\"p1\">](../../programming-guide/generics/index.md)</ept>","source":"[Generics](../../programming-guide/generics/index.md)"}]}