{"content":"---\ntitle: \"Naming Parameters\"\nms.date: \"10/22/2008\"\nms.technology: dotnet-standard\nhelpviewer_keywords: \n  - \"parameters, names\"\n  - \"names [.NET Framework], parameters\"\nms.assetid: ca3c956e-725a-441b-b4e3-eab5d472f41c\nauthor: \"KrzysztofCwalina\"\n---\n# Naming Parameters\nBeyond the obvious reason of readability, it is important to follow the guidelines for parameter names because parameters are displayed in documentation and in the designer when visual design tools provide Intellisense and class browsing functionality.  \n  \n **✓ DO** use camelCasing in parameter names.  \n  \n **✓ DO** use descriptive parameter names.  \n  \n **✓ CONSIDER** using names based on a parameter’s meaning rather than the parameter’s type.  \n  \n### Naming Operator Overload Parameters  \n **✓ DO** use `left` and `right` for binary operator overload parameter names if there is no meaning to the parameters.  \n  \n **✓ DO** use `value` for unary operator overload parameter names if there is no meaning to the parameters.  \n  \n **✓ CONSIDER** meaningful names for operator overload parameters if doing so adds significant value.  \n  \n **X DO NOT** use abbreviations or numeric indices for operator overload parameter names.  \n  \n *Portions © 2005, 2009 Microsoft Corporation. All rights reserved.*  \n  \n *Reprinted by permission of Pearson Education, Inc. from [Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable .NET Libraries, 2nd Edition](https://www.informit.com/store/framework-design-guidelines-conventions-idioms-and-9780321545619) by Krzysztof Cwalina and Brad Abrams, published Oct 22, 2008 by Addison-Wesley Professional as part of the Microsoft Windows Development Series.*  \n  \n## See also\n\n- [Framework Design Guidelines](../../../docs/standard/design-guidelines/index.md)\n- [Naming Guidelines](../../../docs/standard/design-guidelines/naming-guidelines.md)\n","nodes":[{"pos":[4,246],"embed":true,"restype":"x-metadata","content":"title: \"Naming Parameters\"\nms.date: \"10/22/2008\"\nms.technology: dotnet-standard\nhelpviewer_keywords: \n  - \"parameters, names\"\n  - \"names [.NET Framework], parameters\"\nms.assetid: ca3c956e-725a-441b-b4e3-eab5d472f41c\nauthor: \"KrzysztofCwalina\"","nodes":[{"content":"Naming Parameters","nodes":[{"pos":[0,17],"content":"Naming Parameters","nodes":[{"content":"Naming Parameters","pos":[0,17]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[253,270],"content":"Naming Parameters","linkify":"Naming Parameters","nodes":[{"content":"Naming Parameters","pos":[0,17]}]},{"content":"Beyond the obvious reason of readability, it is important to follow the guidelines for parameter names because parameters are displayed in documentation and in the designer when visual design tools provide Intellisense and class browsing functionality.","pos":[271,523]},{"pos":[530,574],"content":"<bpt id=\"p1\">**</bpt>✓ DO<ept id=\"p1\">**</ept> use camelCasing in parameter names.","source":"**✓ DO** use camelCasing in parameter names."},{"pos":[581,622],"content":"<bpt id=\"p1\">**</bpt>✓ DO<ept id=\"p1\">**</ept> use descriptive parameter names.","source":"**✓ DO** use descriptive parameter names."},{"pos":[629,720],"content":"<bpt id=\"p1\">**</bpt>✓ CONSIDER<ept id=\"p1\">**</ept> using names based on a parameter’s meaning rather than the parameter’s type.","source":"**✓ CONSIDER** using names based on a parameter’s meaning rather than the parameter’s type."},{"pos":[730,765],"content":"Naming Operator Overload Parameters","linkify":"Naming Operator Overload Parameters","nodes":[{"content":"Naming Operator Overload Parameters","pos":[0,35]}]},{"pos":[769,887],"content":"<bpt id=\"p1\">**</bpt>✓ DO<ept id=\"p1\">**</ept> use <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> for binary operator overload parameter names if there is no meaning to the parameters.","source":"**✓ DO** use `left` and `right` for binary operator overload parameter names if there is no meaning to the parameters."},{"pos":[894,1000],"content":"<bpt id=\"p1\">**</bpt>✓ DO<ept id=\"p1\">**</ept> use <ph id=\"ph1\">`value`</ph> for unary operator overload parameter names if there is no meaning to the parameters.","source":"**✓ DO** use `value` for unary operator overload parameter names if there is no meaning to the parameters."},{"pos":[1007,1107],"content":"<bpt id=\"p1\">**</bpt>✓ CONSIDER<ept id=\"p1\">**</ept> meaningful names for operator overload parameters if doing so adds significant value.","source":"**✓ CONSIDER** meaningful names for operator overload parameters if doing so adds significant value."},{"pos":[1114,1202],"content":"<bpt id=\"p1\">**</bpt>X DO NOT<ept id=\"p1\">**</ept> use abbreviations or numeric indices for operator overload parameter names.","source":"**X DO NOT** use abbreviations or numeric indices for operator overload parameter names."},{"pos":[1209,1276],"content":"<bpt id=\"p1\">*</bpt>Portions © 2005, 2009 Microsoft Corporation. All rights reserved.<ept id=\"p1\">*</ept>","source":"*Portions © 2005, 2009 Microsoft Corporation. All rights reserved.*"},{"pos":[1283,1688],"content":"<bpt id=\"p1\">*</bpt>Reprinted by permission of Pearson Education, Inc. from <bpt id=\"p2\">[</bpt>Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable .NET Libraries, 2nd Edition<ept id=\"p2\">](https://www.informit.com/store/framework-design-guidelines-conventions-idioms-and-9780321545619)</ept> by Krzysztof Cwalina and Brad Abrams, published Oct 22, 2008 by Addison-Wesley Professional as part of the Microsoft Windows Development Series.<ept id=\"p1\">*</ept>","source":"*Reprinted by permission of Pearson Education, Inc. from [Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable .NET Libraries, 2nd Edition](https://www.informit.com/store/framework-design-guidelines-conventions-idioms-and-9780321545619) by Krzysztof Cwalina and Brad Abrams, published Oct 22, 2008 by Addison-Wesley Professional as part of the Microsoft Windows Development Series.*"},{"pos":[1697,1705],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1709,1789],"content":"<bpt id=\"p1\">[</bpt>Framework Design Guidelines<ept id=\"p1\">](../../../docs/standard/design-guidelines/index.md)</ept>","source":"[Framework Design Guidelines](../../../docs/standard/design-guidelines/index.md)"},{"pos":[1792,1874],"content":"<bpt id=\"p1\">[</bpt>Naming Guidelines<ept id=\"p1\">](../../../docs/standard/design-guidelines/naming-guidelines.md)</ept>","source":"[Naming Guidelines](../../../docs/standard/design-guidelines/naming-guidelines.md)"}]}