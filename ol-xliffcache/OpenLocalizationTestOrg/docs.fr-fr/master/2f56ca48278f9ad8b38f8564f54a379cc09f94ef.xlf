<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-catch-parsing-errors.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f56ca48278f9ad8b38f8564f54a379cc09f94ef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\concepts\linq\how-to-catch-parsing-errors.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5369646d9de6112812b07a367681ea0b138ab55</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47bf697806158e31b386ed62a4cd29df9443195e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Catch Parsing Errors (C#)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Catch Parsing Errors (C#)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to detect badly formed or invalid XML.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> is implemented using <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If badly formed or invalid XML is passed to <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, the underlying <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> class will throw an exception.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The various methods that parse XML, such as <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=nameWithType&gt;</ph>, do not catch the exception; the exception can then be caught by your application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code tries to parse invalid XML:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you run this code, it throws the following exception:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about the exceptions that you can expect the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Parse%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=nameWithType&gt;</ph> methods to throw, see the <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> documentation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing XML (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>