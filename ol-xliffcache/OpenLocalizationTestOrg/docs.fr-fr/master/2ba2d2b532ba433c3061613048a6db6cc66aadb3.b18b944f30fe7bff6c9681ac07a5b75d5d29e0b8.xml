{"content":"---\ntitle: \"Hello World Custom Activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 72b1dd0a-9aad-47d5-95a9-a1024ee1d0a1\ncaps.latest.revision: 12\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Hello World Custom Activity\nThis sample demonstrates several key features of [!INCLUDE[wf](../../../../includes/wf-md.md)], including how to create a simple custom activity. Some of the features demonstrated in this sample are creating a custom activity in C# and using `in` and `out` arguments (<xref:System.Activities.InArgument> and <xref:System.Activities.OutArgument>).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your computer. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Basic\\CustomActivities\\Code-Bodied\\HelloWorld`  \n  \n## Creating a Workflow in Code  \n In this sample, two custom activities are created using C# code. Both custom activities inherit directly or indirectly from <xref:System.Activities.Activity%601> to return a single value. The advantage of using the generic return value, instead of inheriting from the non-generic <xref:System.Activities.Activity> class, is that some activities (such as <xref:System.Activities.Statements.Assign>) are able to access the return value when used as part of a composed activity.  \n  \n AppendString  \n This activity inherits from <xref:System.Activities.Activity%601>, and uses an <xref:System.Activities.Statements.Assign> activity that concatenates two strings together.  \n  \n Prepend String  \n This activity inherits directly from <xref:System.Activities.CodeActivity%601>, and creates similar functionality to the `AppendString` activity, which uses logic implemented in code rather than being composed of a pre-existing activity.  \n  \n The following files are included in this project.  \n  \n AppendString.cs  \n The custom activity that appends strings together. It takes in a string and combines it with a literal text string \" says hello world\" to form a complete message as output.  \n  \n PrependString.cs  \n This activity prefixes a predefined string to an input string.  \n  \n Sequence1.xaml  \n A workflow that uses the `AppendString` and `PrependString` custom activities.  \n  \n Program.cs  \n A program that runs the workflow.  \n  \n#### To use this sample  \n  \n1.  Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the HelloWorld.sln solution file.  \n  \n2.  To build the solution, press CTRL+SHIFT+B.  \n  \n3.  To run the solution, press F5.  \n  \n## See Also","nodes":[{"pos":[12,56],"content":"Hello World Custom Activity | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Hello World Custom Activity | Microsoft Docs","pos":[0,44]}]},{"pos":[322,349],"content":"Hello World Custom Activity","linkify":"Hello World Custom Activity","nodes":[{"content":"Hello World Custom Activity","pos":[0,27]}]},{"content":"This sample demonstrates several key features of <ph id=\"ph1\">[!INCLUDE[wf](../../../../includes/wf-md.md)]</ph>, including how to create a simple custom activity.","pos":[350,495],"source":"This sample demonstrates several key features of [!INCLUDE[wf](../../../../includes/wf-md.md)], including how to create a simple custom activity."},{"content":"Some of the features demonstrated in this sample are creating a custom activity in C# and using <ph id=\"ph1\">`in`</ph> and <ph id=\"ph2\">`out`</ph> arguments (<ph id=\"ph3\">&lt;xref:System.Activities.InArgument&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Activities.OutArgument&gt;</ph>).","pos":[496,696],"source":" Some of the features demonstrated in this sample are creating a custom activity in C# and using `in` and `out` arguments (<xref:System.Activities.InArgument> and <xref:System.Activities.OutArgument>)."},{"pos":[704,837],"content":"[!IMPORTANT]\n The samples may already be installed on your computer. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your computer. Check for the following (default) directory before continuing.","pos":[13,131],"nodes":[{"content":"The samples may already be installed on your computer.","pos":[1,55]},{"content":"Check for the following (default) directory before continuing.","pos":[56,118]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[891,1217],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[1218,1268]},{"pos":[1369,1396],"content":"Creating a Workflow in Code","linkify":"Creating a Workflow in Code","nodes":[{"content":"Creating a Workflow in Code","pos":[0,27]}]},{"content":"In this sample, two custom activities are created using C# code.","pos":[1400,1464]},{"content":"Both custom activities inherit directly or indirectly from <ph id=\"ph1\">&lt;xref:System.Activities.Activity%601&gt;</ph> to return a single value.","pos":[1465,1587],"source":" Both custom activities inherit directly or indirectly from <xref:System.Activities.Activity%601> to return a single value."},{"content":"The advantage of using the generic return value, instead of inheriting from the non-generic <ph id=\"ph1\">&lt;xref:System.Activities.Activity&gt;</ph> class, is that some activities (such as <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Assign&gt;</ph>) are able to access the return value when used as part of a composed activity.","pos":[1588,1875],"source":" The advantage of using the generic return value, instead of inheriting from the non-generic <xref:System.Activities.Activity> class, is that some activities (such as <xref:System.Activities.Statements.Assign>) are able to access the return value when used as part of a composed activity."},{"content":"AppendString","pos":[1882,1894]},{"content":"This activity inherits from <ph id=\"ph1\">&lt;xref:System.Activities.Activity%601&gt;</ph>, and uses an <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Assign&gt;</ph> activity that concatenates two strings together.","pos":[1898,2068],"source":"This activity inherits from <xref:System.Activities.Activity%601>, and uses an <xref:System.Activities.Statements.Assign> activity that concatenates two strings together."},{"content":"Prepend String","pos":[2075,2089]},{"content":"This activity inherits directly from <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity%601&gt;</ph>, and creates similar functionality to the <ph id=\"ph2\">`AppendString`</ph> activity, which uses logic implemented in code rather than being composed of a pre-existing activity.","pos":[2093,2330],"source":" This activity inherits directly from <xref:System.Activities.CodeActivity%601>, and creates similar functionality to the `AppendString` activity, which uses logic implemented in code rather than being composed of a pre-existing activity."},{"content":"The following files are included in this project.","pos":[2337,2386]},{"content":"AppendString.cs","pos":[2393,2408]},{"content":"The custom activity that appends strings together.","pos":[2412,2462]},{"content":"It takes in a string and combines it with a literal text string \" says hello world\" to form a complete message as output.","pos":[2463,2584]},{"content":"PrependString.cs","pos":[2591,2607]},{"content":"This activity prefixes a predefined string to an input string.","pos":[2611,2673]},{"content":"Sequence1.xaml","pos":[2680,2694]},{"content":"A workflow that uses the <ph id=\"ph1\">`AppendString`</ph> and <ph id=\"ph2\">`PrependString`</ph> custom activities.","pos":[2698,2776],"source":" A workflow that uses the `AppendString` and `PrependString` custom activities."},{"content":"Program.cs","pos":[2783,2793]},{"content":"A program that runs the workflow.","pos":[2797,2830]},{"pos":[2841,2859],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"pos":[2869,2968],"content":"Using <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the HelloWorld.sln solution file.","source":"Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the HelloWorld.sln solution file."},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[2978,3020]},{"content":"To run the solution, press F5.","pos":[3030,3060]},{"pos":[3069,3077],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}