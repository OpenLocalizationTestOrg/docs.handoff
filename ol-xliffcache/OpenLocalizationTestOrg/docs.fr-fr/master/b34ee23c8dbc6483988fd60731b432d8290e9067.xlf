<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bc33038.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b34ee23c8dbc6483988fd60731b432d8290e9067</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc33038.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc1e5dc344ff761e3f28cb41110e3a185eafbde4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1942af2965e70af46c3ba4b29a6e41e923b3bbd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Type '<ph id="ph1">&lt;typename&gt;</ph>' must define operator '<ph id="ph2">&lt;operator&gt;</ph>' to be used in a 'For' statement</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type '<ph id="ph1">\&lt;</ph>typename&gt;' must define operator '<ph id="ph2">\&lt;</ph>operator&gt;' to be used in a 'For' statement</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`For`</ph> loop specifies a counter variable of a type that does not support a required operator.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The counter variable in a <ph id="ph1">`For`</ph> loop can be of any data type that supports all of the following operators:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Greater than or equal (<ph id="ph1">`&gt;=`</ph>)</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Less than or equal (<ph id="ph1">`&lt;=`</ph>)</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Addition (<ph id="ph1">`+`</ph>)</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Subtraction (<ph id="ph1">`-`</ph>)</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you use a numeric data type for the counter variable, all the preceding operators are supported.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you use a user-defined class or structure, you must define all the preceding operators on that class or structure.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Note also that the data types of the <ph id="ph1">`start`</ph>, <ph id="ph2">`end`</ph>, and <ph id="ph3">`step`</ph> expressions in the <ph id="ph4">`For`</ph> statement must widen to the data type of the counter variable.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the counter variable is a user-defined class or structure and the <ph id="ph1">`start`</ph>, <ph id="ph2">`end`</ph>, or <ph id="ph3">`step`</ph> expression is of a different type, you must define the <ph id="ph4">`CType`</ph> conversion operator to accomplish the necessary conversion.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC33038</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Make sure the spelling of the counter-variable data type is correct.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you are using a user-defined class or structure for the counter variable, define all the required operators on that class or structure.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Depending on the data types of the <ph id="ph1">`start`</ph>, <ph id="ph2">`end`</ph>, and <ph id="ph3">`step`</ph> expressions, you might have to define one or more <ph id="ph4">`CType`</ph> conversion operators to convert them to the counter variable data type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>For...Next Statement<ept id="p1">](../../visual-basic/language-reference/statements/for-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Statement<ept id="p1">](../../visual-basic/language-reference/statements/operator-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define an Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Conversion Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CType Function<ept id="p1">](../../visual-basic/language-reference/functions/ctype-function.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>