{"content":"---\ntitle: \"Specifying a Custom Crypto Algorithm | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: d662a305-8e09-451d-9a59-b0f12b012f1d\ncaps.latest.revision: 2\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Specifying a Custom Crypto Algorithm\nWCF allows you to specify a custom crypto algorithm to use when encrypting data or computing digital signatures. This is done by the following steps:  \n  \n1.  Derive a class from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>  \n  \n2.  Register the algorithm  \n  \n3.  Configure the binding with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>-derived class.  \n  \n## Derive a class from SecurityAlgorithmSuite  \n The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> is an abstract base class that allows you to specify the algorithm to use when performing various security related operations. For example, computing a hash for a digital signature or encrypting a message. The following code shows how to derive a class from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>:  \n  \n```csharp  \npublic class MyCustomAlgorithmSuite : SecurityAlgorithmSuite  \n    {  \n        public override string DefaultAsymmetricKeyWrapAlgorithm  \n        {  \n            get { return SecurityAlgorithms.RsaOaepKeyWrap; }  \n        }  \n  \n        public override string DefaultAsymmetricSignatureAlgorithm  \n        {  \n            get { return SecurityAlgorithms.RsaSha1Signature; }  \n        }  \n  \n        public override string DefaultCanonicalizationAlgorithm  \n        {  \n            get { return SecurityAlgorithms.ExclusiveC14n; ; }  \n        }  \n  \n        public override string DefaultDigestAlgorithm  \n        {  \n            get { return SecurityAlgorithms.MyCustomHashAlgorithm; }  \n        }  \n  \n        public override string DefaultEncryptionAlgorithm  \n        {  \n            get { return SecurityAlgorithms.Aes128Encryption; }  \n        }  \n  \n        public override int DefaultEncryptionKeyDerivationLength  \n        {  \n            get { return 128; }  \n        }  \n  \n        public override int DefaultSignatureKeyDerivationLength  \n        {  \n            get { return 128; }  \n        }  \n  \n        public override int DefaultSymmetricKeyLength  \n        {  \n            get { return 128; }  \n        }  \n  \n        public override string DefaultSymmetricKeyWrapAlgorithm  \n        {  \n            get { return SecurityAlgorithms.Aes128Encryption; }  \n        }  \n  \n        public override string DefaultSymmetricSignatureAlgorithm  \n        {  \n            get { return SecurityAlgorithms.HmacSha1Signature; }  \n        }  \n  \n        public override bool IsAsymmetricKeyLengthSupported(int length)  \n        {  \n            return length >= 1024 && length <= 4096;  \n        }  \n  \n        public override bool IsSymmetricKeyLengthSupported(int length)  \n        {  \n            return length >= 128 && length <= 256;  \n        }  \n    }  \n  \n```  \n  \n## Register the Custom Algorithm  \n Registration can be done in a configuration file or in imperative code. Registering a custom algorithm is done by creating a mapping between a class that implements a crypto service provider and an alias. The alias is then mapped to a URI which is used when specifying the algorithm in the WCF service’s binding. The following configuration snippet illustrates how to register a custom algorithm in config:  \n  \n```xml  \n<configuration>  \n   <mscorlib>  \n      <cryptographySettings>  \n         <cryptoNameMapping>  \n           <cryptoClasses>  \n              <cryptoClass SHA256CSP=\"System.Security.Cryptography.SHA256CryptoServiceProvider, System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />  \n           </cryptoClasses>  \n           <nameEntry name=\"http://constoso.com/CustomAlgorithms/CustomHashAlgorithm\"  \n              class=\"SHA256CSP\" />  \n           </cryptoNameMapping>  \n        </cryptographySettings>  \n    </mscorlib>  \n</configuration>  \n  \n```  \n  \n The section under the <`cryptoClasses`> element creates the mapping between the SHA256CryptoServiceProvider and the alias \"SHA256CSP\". The <`nameEntry`> element creates the mapping between the \"SHA256CSP\" alias and the specified URL (http://constoso.com/CustomAlgorithms/CustomHashAlgorithm ).  \n  \n To register the custom algorithm in code use the <xref:System.Security.Cryptography.CryptoConfig.AddAlgorithm%2A> System.String[])?qualifyHint=False&autoUpgrade=True method. This method creates both mappings. The following example shows how to call this method:  \n  \n```  \n// Register the custom URI string defined for the hashAlgorithm in MyCustomAlgorithmSuite class to create the   \n// SHA256CryptoServiceProvider hash algorithm object.  \nCryptoConfig.AddAlgorithm(typeof(SHA256CryptoServiceProvider), \"http://constoso.com/CustomAlgorithms/CustomHashAlgorithm\");  \n  \n```  \n  \n## Configure the Binding  \n You configure the binding by specifying the custom <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>-derived class in the binding settings as shown in the following code snippet:  \n  \n```csharp  \nWSHttpBinding binding = new WSHttpBinding();  \n            binding.Security.Message.AlgorithmSuite = new MyCustomAlgorithmSuite();  \n  \n```  \n  \n For a complete code example, see the [Cryptographic Agility in WCF Security](../../../../docs/framework/wcf/samples/cryptographic-agility-in-wcf-security.md) sample.  \n  \n## See Also  \n [Securing Services and Clients](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)   \n [Securing Services](../../../../docs/framework/wcf/securing-services.md)   \n [Security Overview](../../../../docs/framework/wcf/feature-details/security-overview.md)   \n [Security Concepts](../../../../docs/framework/wcf/feature-details/security-concepts.md)","nodes":[{"pos":[12,65],"content":"Specifying a Custom Crypto Algorithm | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Specifying a Custom Crypto Algorithm | Microsoft Docs","pos":[0,53]}]},{"pos":[363,399],"content":"Specifying a Custom Crypto Algorithm","linkify":"Specifying a Custom Crypto Algorithm","nodes":[{"content":"Specifying a Custom Crypto Algorithm","pos":[0,36]}]},{"content":"WCF allows you to specify a custom crypto algorithm to use when encrypting data or computing digital signatures.","pos":[400,512]},{"content":"This is done by the following steps:","pos":[513,549]},{"content":"Derive a class from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph>","pos":[559,637],"source":"Derive a class from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"},{"content":"Register the algorithm","pos":[647,669]},{"content":"Configure the binding with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph>-derived class.","pos":[679,783],"source":"Configure the binding with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>-derived class."},{"pos":[792,834],"content":"Derive a class from SecurityAlgorithmSuite","linkify":"Derive a class from SecurityAlgorithmSuite","nodes":[{"content":"Derive a class from SecurityAlgorithmSuite","pos":[0,42]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> is an abstract base class that allows you to specify the algorithm to use when performing various security related operations.","pos":[838,1027],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> is an abstract base class that allows you to specify the algorithm to use when performing various security related operations."},{"content":"For example, computing a hash for a digital signature or encrypting a message.","pos":[1028,1106]},{"content":"The following code shows how to derive a class from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph>:","pos":[1107,1218],"source":" The following code shows how to derive a class from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>:"},{"pos":[3114,3143],"content":"Register the Custom Algorithm","linkify":"Register the Custom Algorithm","nodes":[{"content":"Register the Custom Algorithm","pos":[0,29]}]},{"content":"Registration can be done in a configuration file or in imperative code.","pos":[3147,3218]},{"content":"Registering a custom algorithm is done by creating a mapping between a class that implements a crypto service provider and an alias.","pos":[3219,3351]},{"content":"The alias is then mapped to a URI which is used when specifying the algorithm in the WCF service’s binding.","pos":[3352,3459]},{"content":"The following configuration snippet illustrates how to register a custom algorithm in config:","pos":[3460,3553]},{"content":"The section under the &lt;<ph id=\"ph1\">`cryptoClasses`</ph>&gt; element creates the mapping between the SHA256CryptoServiceProvider and the alias \"SHA256CSP\".","pos":[4147,4281],"source":"The section under the <`cryptoClasses`> element creates the mapping between the SHA256CryptoServiceProvider and the alias \"SHA256CSP\"."},{"content":"The &lt;<ph id=\"ph1\">`nameEntry`</ph>&gt; element creates the mapping between the \"SHA256CSP\" alias and the specified URL (http://constoso.com/CustomAlgorithms/CustomHashAlgorithm ).","pos":[4282,4440],"source":" The <`nameEntry`> element creates the mapping between the \"SHA256CSP\" alias and the specified URL (http://constoso.com/CustomAlgorithms/CustomHashAlgorithm )."},{"content":"To register the custom algorithm in code use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptoConfig.AddAlgorithm%2A&gt;</ph> System.String[])?qualifyHint=False&amp;autoUpgrade=True method.","pos":[4447,4620],"source":"To register the custom algorithm in code use the <xref:System.Security.Cryptography.CryptoConfig.AddAlgorithm%2A> System.String[])?qualifyHint=False&autoUpgrade=True method."},{"content":"This method creates both mappings.","pos":[4621,4655]},{"content":"The following example shows how to call this method:","pos":[4656,4708]},{"pos":[5030,5051],"content":"Configure the Binding","linkify":"Configure the Binding","nodes":[{"content":"Configure the Binding","pos":[0,21]}]},{"content":"You configure the binding by specifying the custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph>-derived class in the binding settings as shown in the following code snippet:","pos":[5055,5242],"source":"You configure the binding by specifying the custom <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>-derived class in the binding settings as shown in the following code snippet:"},{"pos":[5406,5571],"content":"For a complete code example, see the <bpt id=\"p1\">[</bpt>Cryptographic Agility in WCF Security<ept id=\"p1\">](../../../../docs/framework/wcf/samples/cryptographic-agility-in-wcf-security.md)</ept> sample.","source":"For a complete code example, see the [Cryptographic Agility in WCF Security](../../../../docs/framework/wcf/samples/cryptographic-agility-in-wcf-security.md) sample."},{"pos":[5580,5588],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Securing Services and Clients<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)</ept><ph id=\"ph1\"> </ph>","pos":[5592,5705],"source":"[Securing Services and Clients](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Securing Services<ept id=\"p1\">](../../../../docs/framework/wcf/securing-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[5708,5782],"source":" [Securing Services](../../../../docs/framework/wcf/securing-services.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Security Overview<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/security-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[5785,5875],"source":" [Security Overview](../../../../docs/framework/wcf/feature-details/security-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Security Concepts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/security-concepts.md)</ept>","pos":[5878,5967],"source":" [Security Concepts](../../../../docs/framework/wcf/feature-details/security-concepts.md)"}]}