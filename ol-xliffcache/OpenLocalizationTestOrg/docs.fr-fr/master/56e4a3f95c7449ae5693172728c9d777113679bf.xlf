<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-intercept-data-service-messages-wcf-data-services.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56e4a3f95c7449ae5693172728c9d777113679bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\how-to-intercept-data-service-messages-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">038b6d35fcbce47f7a61a27d95a6e8edea5e64de</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d362115d13188c81c4b5ddab56890b20b662649b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Intercept Data Service Messages (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Intercept Data Service Messages (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph>, you can intercept request messages so that you can add custom logic to an operation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To intercept a message, you use specially attributed methods in the data service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Interceptors<ept id="p1">](../../../../docs/framework/data/wcf/interceptors-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The example in this topic uses the Northwind sample data service.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This service is created when you complete the <bpt id="p1">[</bpt>WCF Data Services quickstart<ept id="p1">](../../../../docs/framework/data/wcf/quickstart-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To define a query interceptor for the Orders entity set</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the Northwind data service project, open the Northwind.svc file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the code page for the <ph id="ph1">`Northwind`</ph> class, add the following <ph id="ph2">`using`</ph> statement (<ph id="ph3">`Imports`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`Northwind`</ph> class, define a service operation method named <ph id="ph2">`OnQueryOrders`</ph> as follows:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To define a change interceptor for the Products entity set</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the Northwind data service project, open the Northwind.svc file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`Northwind`</ph> class, define a service operation method named <ph id="ph2">`OnChangeProducts`</ph> as follows:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This example defines a query interceptor method for the <ph id="ph1">`Orders`</ph> entity set that returns a lambda expression.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This expression contains a delegate that filters the requested <ph id="ph1">`Orders`</ph> based on related <ph id="ph2">`Customers`</ph> that have a specific contact name.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name is in turn determined based on the requesting user.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example assumes that the data service is hosted within an ASP.NET Web application that uses WCF, and that authentication is enabled.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> class is used to retrieve the principle of the current request.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example defines a change interceptor method for the <ph id="ph1">`Products`</ph> entity set.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method validates input to the service for an <ph id="ph1">&lt;xref:System.Data.Services.UpdateOperations.Add&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Services.UpdateOperations.Change&gt;</ph> operation and raises an exception if a change is being made to a discontinued product.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It also blocks the deletion of products as an unsupported operation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Service Operation<ept id="p1">](../../../../docs/framework/data/wcf/how-to-define-a-service-operation-wcf-data-services.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Defining WCF Data Services<ept id="p1">](../../../../docs/framework/data/wcf/defining-wcf-data-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>