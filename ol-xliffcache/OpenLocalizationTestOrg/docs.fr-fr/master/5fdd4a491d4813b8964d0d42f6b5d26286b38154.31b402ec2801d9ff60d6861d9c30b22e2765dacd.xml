{"content":"---\ntitle: \"Compiler Warning (level 4) CS0429\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0429\"\nhelpviewer_keywords: \n  - \"CS0429\"\nms.assetid: 906442de-9760-4e28-aea1-c94f0af918fb\n---\n# Compiler Warning (level 4) CS0429\nUnreachable expression code detected  \n  \n This error occurs whenever part of an expression in your code is unreachable. In the following example, the condition `false && myTest()` meets this criteria because the `myTest()` method will never get evaluated due to the fact that the left side of the `&&` operation is always false. As soon as the `&&` operator evaluates the `false` statement as false, it stops the evaluation, and will never evaluate the right side.  \n  \n## Example  \n The following code generates CS0429.  \n  \n```csharp  \n// CS0429.cs  \npublic class cs0429   \n{  \n    public static void Main()   \n    {  \n        if (false && myTest())  // CS0429  \n        // Try the following line instead:  \n        // if (true && myTest())  \n        {  \n        }  \n        else  \n        {  \n            int i = 0;  \n            i++;  \n        }  \n    }  \n  \n    static bool myTest() { return true; }  \n}  \n```\n","nodes":[{"pos":[4,177],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Warning (level 4) CS0429\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0429\"\nhelpviewer_keywords: \n  - \"CS0429\"\nms.assetid: 906442de-9760-4e28-aea1-c94f0af918fb","nodes":[{"content":"Compiler Warning (level 4) CS0429","nodes":[{"pos":[0,33],"content":"Compiler Warning (level 4) CS0429","nodes":[{"content":"Compiler Warning (level 4) CS0429","pos":[0,33]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[184,217],"content":"Compiler Warning (level 4) CS0429","linkify":"Compiler Warning (level 4) CS0429","nodes":[{"content":"Compiler Warning (level 4) CS0429","pos":[0,33]}]},{"content":"Unreachable expression code detected","pos":[218,254]},{"content":"This error occurs whenever part of an expression in your code is unreachable.","pos":[261,338]},{"content":"In the following example, the condition <ph id=\"ph1\">`false &amp;&amp; myTest()`</ph> meets this criteria because the <ph id=\"ph2\">`myTest()`</ph> method will never get evaluated due to the fact that the left side of the <ph id=\"ph3\">`&amp;&amp;`</ph> operation is always false.","pos":[339,547],"source":" In the following example, the condition `false && myTest()` meets this criteria because the `myTest()` method will never get evaluated due to the fact that the left side of the `&&` operation is always false."},{"content":"As soon as the <ph id=\"ph1\">`&amp;&amp;`</ph> operator evaluates the <ph id=\"ph2\">`false`</ph> statement as false, it stops the evaluation, and will never evaluate the right side.","pos":[548,683],"source":" As soon as the `&&` operator evaluates the `false` statement as false, it stops the evaluation, and will never evaluate the right side."},{"pos":[692,699],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code generates CS0429.","pos":[703,739]}]}