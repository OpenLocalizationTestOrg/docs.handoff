{"content":"---\ntitle: \"ByVal (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.ByVal\"\n  - \"ByVal\"\nhelpviewer_keywords: \n  - \"ByVal keyword [Visual Basic], contexts\"\n  - \"ByVal keyword [Visual Basic]\"\nms.assetid: 1eaf4e58-b305-4785-9e3d-e416b9c75598\n---\n# ByVal (Visual Basic)\nSpecifies that an argument is passed in such a way that the called procedure or property cannot change the value of a variable underlying the argument in the calling code.  \n  \n## Remarks  \n The `ByVal` modifier can be used in these contexts:  \n  \n [Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)  \n  \n [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)  \n  \n [Operator Statement](../../../visual-basic/language-reference/statements/operator-statement.md)  \n  \n [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)  \n  \n [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n## Example  \n The following example demonstrates the use of the `ByVal` parameter passing mechanism with a reference type argument. In the example, the argument is `c1`, an instance of class `Class1`. `ByVal` prevents the code in the procedures from changing the underlying value of the reference argument, `c1`, but does not protect the accessible fields and properties of `c1`.  \n  \n [!code-vb[VbVbalrKeywords#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrKeywords/VB/Class5.vb#10)]  \n  \n## See also\n\n- [Keywords](../../../visual-basic/language-reference/keywords/index.md)\n- [Passing Arguments by Value and by Reference](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)\n","nodes":[{"pos":[4,245],"embed":true,"restype":"x-metadata","content":"title: \"ByVal (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.ByVal\"\n  - \"ByVal\"\nhelpviewer_keywords: \n  - \"ByVal keyword [Visual Basic], contexts\"\n  - \"ByVal keyword [Visual Basic]\"\nms.assetid: 1eaf4e58-b305-4785-9e3d-e416b9c75598","nodes":[{"content":"ByVal (Visual Basic)","nodes":[{"pos":[0,20],"content":"ByVal (Visual Basic)","nodes":[{"content":"ByVal (Visual Basic)","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[252,272],"content":"ByVal (Visual Basic)","linkify":"ByVal (Visual Basic)","nodes":[{"content":"ByVal (Visual Basic)","pos":[0,20]}]},{"content":"Specifies that an argument is passed in such a way that the called procedure or property cannot change the value of a variable underlying the argument in the calling code.","pos":[273,444]},{"pos":[453,460],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[464,515],"content":"The <ph id=\"ph1\">`ByVal`</ph> modifier can be used in these contexts:","source":"The `ByVal` modifier can be used in these contexts:"},{"pos":[522,615],"content":"<bpt id=\"p1\">[</bpt>Declare Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept>","source":"[Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)"},{"pos":[622,717],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[724,819],"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept>","source":"[Operator Statement](../../../visual-basic/language-reference/statements/operator-statement.md)"},{"pos":[826,921],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[928,1013],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[1022,1029],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates the use of the <ph id=\"ph1\">`ByVal`</ph> parameter passing mechanism with a reference type argument.","pos":[1033,1150],"source":"The following example demonstrates the use of the `ByVal` parameter passing mechanism with a reference type argument."},{"content":"In the example, the argument is <ph id=\"ph1\">`c1`</ph>, an instance of class <ph id=\"ph2\">`Class1`</ph>.","pos":[1151,1219],"source":" In the example, the argument is `c1`, an instance of class `Class1`."},{"content":"<ph id=\"ph1\">`ByVal`</ph> prevents the code in the procedures from changing the underlying value of the reference argument, <ph id=\"ph2\">`c1`</ph>, but does not protect the accessible fields and properties of <ph id=\"ph3\">`c1`</ph>.","pos":[1220,1398],"source":"`ByVal` prevents the code in the procedures from changing the underlying value of the reference argument, `c1`, but does not protect the accessible fields and properties of `c1`."},{"pos":[1529,1537],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1541,1611],"content":"<bpt id=\"p1\">[</bpt>Keywords<ept id=\"p1\">](../../../visual-basic/language-reference/keywords/index.md)</ept>","source":"[Keywords](../../../visual-basic/language-reference/keywords/index.md)"},{"pos":[1614,1776],"content":"<bpt id=\"p1\">[</bpt>Passing Arguments by Value and by Reference<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)</ept>","source":"[Passing Arguments by Value and by Reference](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)"}]}