{"content":"---\ntitle: \"'<membername> has the same name as a type parameter\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32054\"\n  - \"bc32054\"\nhelpviewer_keywords: \n  - \"BC32054\"\nms.assetid: 3e5e6e88-5f20-42f4-a525-771cabc836be\n---\n# '\\<membername> has the same name as a type parameter\nA member of a generic class or structure has the same name as a type parameter of that class or structure.  \n  \n Every variable, constant, enumeration, procedure, property, event, and delegate must have a name distinct from every type parameter.  \n  \n **Error ID:** BC32054  \n  \n## To correct this error  \n  \n-   Change the name of the class or structure member so that it is different from every type parameter name.  \n  \n## See also\n\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../visual-basic/language-reference/statements/type-list.md)\n","nodes":[{"pos":[4,212],"embed":true,"restype":"x-metadata","content":"title: \"'<membername> has the same name as a type parameter\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32054\"\n  - \"bc32054\"\nhelpviewer_keywords: \n  - \"BC32054\"\nms.assetid: 3e5e6e88-5f20-42f4-a525-771cabc836be","nodes":[{"content":"'<membername> has the same name as a type parameter","nodes":[{"pos":[0,51],"content":"'<ph id=\"ph1\">&lt;membername&gt;</ph> has the same name as a type parameter","source":"'<membername> has the same name as a type parameter"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[219,271],"content":"'\\<membername> has the same name as a type parameter","linkify":"'\\<membername> has the same name as a type parameter","nodes":[{"content":"'<ph id=\"ph1\">\\&lt;</ph>membername&gt; has the same name as a type parameter","pos":[0,52],"source":"'\\<membername> has the same name as a type parameter"}]},{"content":"A member of a generic class or structure has the same name as a type parameter of that class or structure.","pos":[272,378]},{"content":"Every variable, constant, enumeration, procedure, property, event, and delegate must have a name distinct from every type parameter.","pos":[385,517]},{"pos":[524,545],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32054","source":"**Error ID:** BC32054"},{"pos":[554,575],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Change the name of the class or structure member so that it is different from every type parameter name.","pos":[585,689]},{"pos":[698,706],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[710,825],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[828,902],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../visual-basic/language-reference/statements/type-list.md)"}]}