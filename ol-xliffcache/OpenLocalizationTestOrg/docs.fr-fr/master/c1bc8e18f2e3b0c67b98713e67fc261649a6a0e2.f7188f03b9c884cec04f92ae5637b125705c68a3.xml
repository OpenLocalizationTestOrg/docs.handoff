{"content":"---\ntitle: \"Determine if Any or All Elements in a Sequence Satisfy a Condition\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 339ec145-826c-46d2-8cf2-3acd252cd072\n---\n# Determine if Any or All Elements in a Sequence Satisfy a Condition\nThe <xref:System.Linq.Enumerable.All%2A> operator returns `true` if all elements in a sequence satisfy a condition.  \n  \n The <xref:System.Linq.Queryable.Any%2A> operator returns `true` if any element in a sequence satisfies a condition.  \n  \n## Example  \n The following example returns a sequence of customers that have at least one order. The `Where`/`where` clause evaluates to `true` if the given `Customer` has any `Order`.  \n  \n [!code-csharp[DLinqQueryExamples#37](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#37)]\n [!code-vb[DLinqQueryExamples#37](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#37)]  \n  \n## Example  \n The following Visual Basic code determines the list of customers who have not placed orders, and ensures that for every customer in that list, a contact name is provided.  \n  \n [!code-vb[DLinqQueryExamples#37v](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#37v)]  \n  \n## Example  \n The following C# example returns a sequence of customers whose orders have a `ShipCity` beginning with \"C\". Also included in the return are customers who have no orders. (By design, the <xref:System.Linq.Queryable.All%2A> operator returns `true` for an empty sequence.) Customers with no orders are eliminated in the console output by using the `Count` operator.  \n  \n [!code-csharp[DLinqQueryExamples#38](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#38)]  \n  \n## See also\n\n- [Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)\n","nodes":[{"pos":[4,184],"embed":true,"restype":"x-metadata","content":"title: \"Determine if Any or All Elements in a Sequence Satisfy a Condition\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 339ec145-826c-46d2-8cf2-3acd252cd072","nodes":[{"content":"Determine if Any or All Elements in a Sequence Satisfy a Condition","nodes":[{"pos":[0,66],"content":"Determine if Any or All Elements in a Sequence Satisfy a Condition","nodes":[{"content":"Determine if Any or All Elements in a Sequence Satisfy a Condition","pos":[0,66]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[191,257],"content":"Determine if Any or All Elements in a Sequence Satisfy a Condition","linkify":"Determine if Any or All Elements in a Sequence Satisfy a Condition","nodes":[{"content":"Determine if Any or All Elements in a Sequence Satisfy a Condition","pos":[0,66]}]},{"pos":[258,373],"content":"The <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.All%2A&gt;</ph> operator returns <ph id=\"ph2\">`true`</ph> if all elements in a sequence satisfy a condition.","source":"The <xref:System.Linq.Enumerable.All%2A> operator returns `true` if all elements in a sequence satisfy a condition."},{"pos":[380,495],"content":"The <ph id=\"ph1\">&lt;xref:System.Linq.Queryable.Any%2A&gt;</ph> operator returns <ph id=\"ph2\">`true`</ph> if any element in a sequence satisfies a condition.","source":"The <xref:System.Linq.Queryable.Any%2A> operator returns `true` if any element in a sequence satisfies a condition."},{"pos":[504,511],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example returns a sequence of customers that have at least one order.","pos":[515,598]},{"content":"The <ph id=\"ph1\">`Where`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`where`</ph> clause evaluates to <ph id=\"ph4\">`true`</ph> if the given <ph id=\"ph5\">`Customer`</ph> has any <ph id=\"ph6\">`Order`</ph>.","pos":[599,686],"source":" The `Where`/`where` clause evaluates to `true` if the given `Customer` has any `Order`."},{"pos":[971,978],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following Visual Basic code determines the list of customers who have not placed orders, and ensures that for every customer in that list, a contact name is provided.","pos":[982,1152]},{"pos":[1304,1311],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following C# example returns a sequence of customers whose orders have a <ph id=\"ph1\">`ShipCity`</ph> beginning with \"C\".","pos":[1315,1422],"source":"The following C# example returns a sequence of customers whose orders have a `ShipCity` beginning with \"C\"."},{"content":"Also included in the return are customers who have no orders.","pos":[1423,1484]},{"content":"(By design, the <ph id=\"ph1\">&lt;xref:System.Linq.Queryable.All%2A&gt;</ph> operator returns <ph id=\"ph2\">`true`</ph> for an empty sequence.) Customers with no orders are eliminated in the console output by using the <ph id=\"ph3\">`Count`</ph> operator.","pos":[1485,1677],"source":" (By design, the <xref:System.Linq.Queryable.All%2A> operator returns `true` for an empty sequence.) Customers with no orders are eliminated in the console output by using the `Count` operator."},{"pos":[1826,1834],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1838,1927],"content":"<bpt id=\"p1\">[</bpt>Query Examples<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)</ept>","source":"[Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)"}]}