{"content":"---\ntitle: \"RichTextBox Overview\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"controls [WPF], RichTextBox\"\n  - \"RichTextBox control [WPF], about RichTextBox control\"\nms.assetid: c94548b2-c1e9-4b62-b10c-dd8740eb23d8\n---\n# RichTextBox Overview\nThe <xref:System.Windows.Controls.RichTextBox> control enables you to display or edit flow content including paragraphs, images, tables, and more. This topic introduces the <xref:System.Windows.Controls.TextBox> class and provides examples of how to use it in both [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] and C#.  \n\n<a name=\"textbox_or_richtextbox\"></a>   \n## TextBox or RichTextBox?  \n Both <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> allow users to edit text, however, the two controls are used in different scenarios. A <xref:System.Windows.Controls.RichTextBox> is a better choice when it is necessary for the user to edit formatted text, images, tables, or other rich content. For example, editing a document, article, or blog that requires formatting, images, etc is best accomplished using a <xref:System.Windows.Controls.RichTextBox>. A <xref:System.Windows.Controls.TextBox> requires less system resources then a <xref:System.Windows.Controls.RichTextBox> and it is ideal when only plain text needs to be edited (i.e. usage in forms). See [TextBox Overview](textbox-overview.md) for more information on <xref:System.Windows.Controls.TextBox>. The table below summarizes the main features of <xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>.  \n  \n|Control|Real-time Spellchecking|Context Menu|Formatting commands like <xref:System.Windows.Documents.EditingCommands.ToggleBold%2A> (Ctr+B)|<xref:System.Windows.Documents.FlowDocument> content like images, paragraphs, tables, etc.|  \n|-------------|------------------------------|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  \n|<xref:System.Windows.Controls.TextBox>|Yes|Yes|No|No.|  \n|<xref:System.Windows.Controls.RichTextBox>|Yes|Yes|Yes|Yes|  \n  \n **Note:** Although <xref:System.Windows.Controls.TextBox> does not support formatting related commands like <xref:System.Windows.Documents.EditingCommands.ToggleBold%2A> (Ctr+B), many basic commands are supported by both controls such as <xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>.  \n  \n The features from the table above are covered in more detail later.  \n  \n<a name=\"creating_a_richtextbox\"></a>   \n## Creating a RichTextBox  \n The code below shows how to create a <xref:System.Windows.Controls.RichTextBox> that a user can edit rich content in.  \n  \n [!code-xaml[RichTextBoxMiscSnippets_snip#BasicRichTextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_snip/CSharp/BasicRichTextBoxExample.xaml#basicrichtextboxexamplewholepage)]  \n  \n Specifically, the content edited in a <xref:System.Windows.Controls.RichTextBox> is flow content. Flow content can contain many types of elements including formatted text, images, lists, and tables. See [Flow Document Overview](../advanced/flow-document-overview.md) for in depth information on flow documents. In order to contain flow content, a <xref:System.Windows.Controls.RichTextBox> hosts a <xref:System.Windows.Documents.FlowDocument> object which in turn contains the editable content. To demonstrate flow content in a <xref:System.Windows.Controls.RichTextBox>, the following code shows how to create a <xref:System.Windows.Controls.RichTextBox> with a paragraph and some bolded text.  \n  \n [!code-xaml[RichTextBoxMiscSnippets_snip#RichTextBoxWithContentExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_snip/CSharp/RichTextBoxWithContentExample.xaml#richtextboxwithcontentexamplewholepage)]  \n  \n [!code-csharp[RichTextBoxMiscSnippets_procedural_snip#BasicRichTextBoxWithContentCodeOnlyExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_procedural_snip/CSharp/BasicRichTextBoxWithContentExample.cs#basicrichtextboxwithcontentcodeonlyexample)]\n [!code-vb[RichTextBoxMiscSnippets_procedural_snip#BasicRichTextBoxWithContentCodeOnlyExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxMiscSnippets_procedural_snip/visualbasic/basicrichtextboxwithcontentexample.vb#basicrichtextboxwithcontentcodeonlyexample)]  \n  \n The following illustration shows how this sample renders.  \n  \n ![RichTextBox with content](./media/editing-richtextbox-with-content.png \"Editing_RichTextBox_with_Content\")  \n  \n Elements like <xref:System.Windows.Documents.Paragraph> and <xref:System.Windows.Documents.Bold> determine how the content inside a <xref:System.Windows.Controls.RichTextBox> appears. As a user edits <xref:System.Windows.Controls.RichTextBox> content, they change this flow content. To learn more about the features of flow content and how to work with it, see [Flow Document Overview](../advanced/flow-document-overview.md).  \n  \n **Note:** Flow content inside a <xref:System.Windows.Controls.RichTextBox> does not behave exactly like flow content contained in other controls. For example, there are no columns in a <xref:System.Windows.Controls.RichTextBox> and hence no automatic resizing behavior. Also, built in features like search, viewing mode, page navigation, and zoom are not available within a <xref:System.Windows.Controls.RichTextBox>.  \n  \n<a name=\"realtime_spellechecking\"></a>   \n## Real-time Spell Checking  \n You can enable real-time spell checking in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox>. When spellchecking is turned on, a red line appears underneath any misspelled words (see picture below).  \n  \n ![Textbox with spell&#45;checking](./media/editing-textbox-with-spellchecking.png \"Editing_TextBox_with_Spellchecking\")  \n  \n See [Enable Spell Checking in a Text Editing Control](how-to-enable-spell-checking-in-a-text-editing-control.md) to learn how to enable spellchecking.  \n  \n<a name=\"context_menu\"></a>   \n## Context Menu  \n By default, both <xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox> have a context menu that appears when a user right-clicks inside the control. The context menu allows the user to cut, copy, or paste (see illustration below).  \n  \n ![TextBox with context menu](./media/editing-textbox-with-context-menu.png \"Editing_TextBox_with_Context_Menu\")  \n  \n You can create your own custom context menu to override the default one. See [Position a Custom Context Menu in a RichTextBox](how-to-position-a-custom-context-menu-in-a-richtextbox.md) for more information.  \n  \n<a name=\"detect_when_content_changes\"></a>   \n## Editing Commands  \n Editing commands enable users to format editable content inside a <xref:System.Windows.Controls.RichTextBox>. Besides basic editing commands, <xref:System.Windows.Controls.RichTextBox> includes formatting commands that <xref:System.Windows.Controls.TextBox> does not support. For example, when editing in a <xref:System.Windows.Controls.RichTextBox>, a user could press Ctr+B to toggle bold text formatting. See <xref:System.Windows.Documents.EditingCommands> for a complete list of commands available. In addition to using keyboard shortcuts, you can hook commands up to other controls like buttons. The following example shows how to create a simple tool bar containing buttons that the user can use to change text formatting.  \n  \n [!code-xaml[RichTextBox_InputPanel_snip#RichTextBoxWithToolBarExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_InputPanel_snip/CS/Window1.xaml#richtextboxwithtoolbarexamplewholepage)]  \n  \n The following illustration shows how this sample displays.  \n  \n ![RichTextBox with ToolBar](./media/editing-richtextbox-with-toobar.gif \"Editing_RichTextBox_with_TooBar\")  \n  \n<a name=\"editing_commands\"></a>   \n## Detect when Content Changes  \n Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect. See [Detect When Text in a TextBox Has Changed](how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.  \n  \n<a name=\"save_load_and_print_richtextbox_content\"></a>   \n## Save, Load, and Print RichTextBox Content  \n The following example shows how to save content of a <xref:System.Windows.Controls.RichTextBox> to a file, load that content back into the <xref:System.Windows.Controls.RichTextBox>, and print the contents. Below is the markup for the example.  \n  \n [!code-xaml[RichTextBoxMiscSnippets_snip#SaveLoadPrintRTBExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_snip/CSharp/SaveLoadPrintRTB.xaml#saveloadprintrtbexamplewholepage)]  \n  \n Below is the code behind for the example.  \n  \n [!code-csharp[RichTextBoxMiscSnippets_snip#SaveLoadPrintRTBCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_snip/CSharp/SaveLoadPrintRTB.xaml.cs#saveloadprintrtbcodeexamplewholepage)]\n [!code-vb[RichTextBoxMiscSnippets_snip#SaveLoadPrintRTBCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxMiscSnippets_snip/VisualBasic/SaveLoadPrintRTB.xaml.vb#saveloadprintrtbcodeexamplewholepage)]  \n  \n## See also\n\n- [How-to Topics](richtextbox-how-to-topics.md)\n- [TextBox Overview](textbox-overview.md)\n","nodes":[{"pos":[4,253],"embed":true,"restype":"x-metadata","content":"title: \"RichTextBox Overview\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"controls [WPF], RichTextBox\"\n  - \"RichTextBox control [WPF], about RichTextBox control\"\nms.assetid: c94548b2-c1e9-4b62-b10c-dd8740eb23d8","nodes":[{"content":"RichTextBox Overview","nodes":[{"pos":[0,20],"content":"RichTextBox Overview","nodes":[{"content":"RichTextBox Overview","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[260,280],"content":"RichTextBox Overview","linkify":"RichTextBox Overview","nodes":[{"content":"RichTextBox Overview","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> control enables you to display or edit flow content including paragraphs, images, tables, and more.","pos":[281,427],"source":"The <xref:System.Windows.Controls.RichTextBox> control enables you to display or edit flow content including paragraphs, images, tables, and more."},{"content":"This topic introduces the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> class and provides examples of how to use it in both <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> and C#.","pos":[428,623],"source":" This topic introduces the <xref:System.Windows.Controls.TextBox> class and provides examples of how to use it in both [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] and C#."},{"pos":[671,694],"content":"TextBox or RichTextBox?","linkify":"TextBox or RichTextBox?","nodes":[{"content":"TextBox or RichTextBox?","pos":[0,23]}]},{"content":"Both <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> allow users to edit text, however, the two controls are used in different scenarios.","pos":[698,873],"source":"Both <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> allow users to edit text, however, the two controls are used in different scenarios."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> is a better choice when it is necessary for the user to edit formatted text, images, tables, or other rich content.","pos":[874,1034],"source":" A <xref:System.Windows.Controls.RichTextBox> is a better choice when it is necessary for the user to edit formatted text, images, tables, or other rich content."},{"content":"For example, editing a document, article, or blog that requires formatting, images, etc is best accomplished using a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[1035,1195],"source":" For example, editing a document, article, or blog that requires formatting, images, etc is best accomplished using a <xref:System.Windows.Controls.RichTextBox>."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> requires less system resources then a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> and it is ideal when only plain text needs to be edited (i.e. usage in forms).","pos":[1196,1396],"source":" A <xref:System.Windows.Controls.TextBox> requires less system resources then a <xref:System.Windows.Controls.RichTextBox> and it is ideal when only plain text needs to be edited (i.e. usage in forms)."},{"content":"See <bpt id=\"p1\">[</bpt>TextBox Overview<ept id=\"p1\">](textbox-overview.md)</ept> for more information on <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.","pos":[1397,1504],"source":" See [TextBox Overview](textbox-overview.md) for more information on <xref:System.Windows.Controls.TextBox>."},{"content":"The table below summarizes the main features of <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[1505,1639],"source":" The table below summarizes the main features of <xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>."},{"content":"Control","pos":[1646,1653]},{"content":"Real-time Spellchecking","pos":[1654,1677]},{"content":"Context Menu","pos":[1678,1690]},{"pos":[1691,1785],"content":"Formatting commands like <ph id=\"ph1\">&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;</ph> (Ctr+B)","source":"Formatting commands like <xref:System.Windows.Documents.EditingCommands.ToggleBold%2A> (Ctr+B)"},{"pos":[1786,1876],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> content like images, paragraphs, tables, etc.","source":"<xref:System.Windows.Documents.FlowDocument> content like images, paragraphs, tables, etc."},{"content":"Yes","pos":[2382,2385]},{"content":"Yes","pos":[2386,2389]},{"content":"No","pos":[2390,2392]},{"content":"No.","pos":[2393,2396]},{"content":"Yes","pos":[2444,2447]},{"content":"Yes","pos":[2448,2451]},{"content":"Yes","pos":[2452,2455]},{"content":"Yes","pos":[2456,2459]},{"pos":[2467,2770],"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Although <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> does not support formatting related commands like <ph id=\"ph2\">&lt;xref:System.Windows.Documents.EditingCommands.ToggleBold%2A&gt;</ph> (Ctr+B), many basic commands are supported by both controls such as <ph id=\"ph3\">&lt;xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A&gt;</ph>.","source":"**Note:** Although <xref:System.Windows.Controls.TextBox> does not support formatting related commands like <xref:System.Windows.Documents.EditingCommands.ToggleBold%2A> (Ctr+B), many basic commands are supported by both controls such as <xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>."},{"content":"The features from the table above are covered in more detail later.","pos":[2777,2844]},{"pos":[2894,2916],"content":"Creating a RichTextBox","linkify":"Creating a RichTextBox","nodes":[{"content":"Creating a RichTextBox","pos":[0,22]}]},{"pos":[2920,3037],"content":"The code below shows how to create a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> that a user can edit rich content in.","source":"The code below shows how to create a <xref:System.Windows.Controls.RichTextBox> that a user can edit rich content in."},{"content":"Specifically, the content edited in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> is flow content.","pos":[3267,3364],"source":"Specifically, the content edited in a <xref:System.Windows.Controls.RichTextBox> is flow content."},{"content":"Flow content can contain many types of elements including formatted text, images, lists, and tables.","pos":[3365,3465]},{"content":"See <bpt id=\"p1\">[</bpt>Flow Document Overview<ept id=\"p1\">](../advanced/flow-document-overview.md)</ept> for in depth information on flow documents.","pos":[3466,3577],"source":" See [Flow Document Overview](../advanced/flow-document-overview.md) for in depth information on flow documents."},{"content":"In order to contain flow content, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> hosts a <ph id=\"ph2\">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> object which in turn contains the editable content.","pos":[3578,3761],"source":" In order to contain flow content, a <xref:System.Windows.Controls.RichTextBox> hosts a <xref:System.Windows.Documents.FlowDocument> object which in turn contains the editable content."},{"content":"To demonstrate flow content in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, the following code shows how to create a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> with a paragraph and some bolded text.","pos":[3762,3961],"source":" To demonstrate flow content in a <xref:System.Windows.Controls.RichTextBox>, the following code shows how to create a <xref:System.Windows.Controls.RichTextBox> with a paragraph and some bolded text."},{"content":"The following illustration shows how this sample renders.","pos":[4762,4819]},{"pos":[4826,4934],"content":"<bpt id=\"p1\">![</bpt>RichTextBox with content<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/editing-richtextbox-with-content.png \"</bpt>Editing_RichTextBox_with_Content<ept id=\"p2\">\")</ept>","source":"![RichTextBox with content](./media/editing-richtextbox-with-content.png \"Editing_RichTextBox_with_Content\")"},{"content":"Elements like <ph id=\"ph1\">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Documents.Bold&gt;</ph> determine how the content inside a <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> appears.","pos":[4941,5124],"source":"Elements like <xref:System.Windows.Documents.Paragraph> and <xref:System.Windows.Documents.Bold> determine how the content inside a <xref:System.Windows.Controls.RichTextBox> appears."},{"content":"As a user edits <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> content, they change this flow content.","pos":[5125,5223],"source":" As a user edits <xref:System.Windows.Controls.RichTextBox> content, they change this flow content."},{"content":"To learn more about the features of flow content and how to work with it, see <bpt id=\"p1\">[</bpt>Flow Document Overview<ept id=\"p1\">](../advanced/flow-document-overview.md)</ept>.","pos":[5224,5366],"source":" To learn more about the features of flow content and how to work with it, see [Flow Document Overview](../advanced/flow-document-overview.md)."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Flow content inside a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> does not behave exactly like flow content contained in other controls.","pos":[5373,5518],"source":"**Note:** Flow content inside a <xref:System.Windows.Controls.RichTextBox> does not behave exactly like flow content contained in other controls."},{"content":"For example, there are no columns in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> and hence no automatic resizing behavior.","pos":[5519,5642],"source":" For example, there are no columns in a <xref:System.Windows.Controls.RichTextBox> and hence no automatic resizing behavior."},{"content":"Also, built in features like search, viewing mode, page navigation, and zoom are not available within a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[5643,5790],"source":" Also, built in features like search, viewing mode, page navigation, and zoom are not available within a <xref:System.Windows.Controls.RichTextBox>."},{"pos":[5841,5865],"content":"Real-time Spell Checking","linkify":"Real-time Spell Checking","nodes":[{"content":"Real-time Spell Checking","pos":[0,24]}]},{"content":"You can enable real-time spell checking in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[5869,5999],"source":"You can enable real-time spell checking in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox>."},{"content":"When spellchecking is turned on, a red line appears underneath any misspelled words (see picture below).","pos":[6000,6104]},{"pos":[6111,6230],"content":"<bpt id=\"p1\">![</bpt>Textbox with spell&amp;#45;checking<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/editing-textbox-with-spellchecking.png \"</bpt>Editing_TextBox_with_Spellchecking<ept id=\"p2\">\")</ept>","source":"![Textbox with spell&#45;checking](./media/editing-textbox-with-spellchecking.png \"Editing_TextBox_with_Spellchecking\")"},{"pos":[6237,6387],"content":"See <bpt id=\"p1\">[</bpt>Enable Spell Checking in a Text Editing Control<ept id=\"p1\">](how-to-enable-spell-checking-in-a-text-editing-control.md)</ept> to learn how to enable spellchecking.","source":"See [Enable Spell Checking in a Text Editing Control](how-to-enable-spell-checking-in-a-text-editing-control.md) to learn how to enable spellchecking."},{"pos":[6427,6439],"content":"Context Menu","linkify":"Context Menu","nodes":[{"content":"Context Menu","pos":[0,12]}]},{"content":"By default, both <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> have a context menu that appears when a user right-clicks inside the control.","pos":[6443,6623],"source":"By default, both <xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox> have a context menu that appears when a user right-clicks inside the control."},{"content":"The context menu allows the user to cut, copy, or paste (see illustration below).","pos":[6624,6705]},{"pos":[6712,6823],"content":"<bpt id=\"p1\">![</bpt>TextBox with context menu<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/editing-textbox-with-context-menu.png \"</bpt>Editing_TextBox_with_Context_Menu<ept id=\"p2\">\")</ept>","source":"![TextBox with context menu](./media/editing-textbox-with-context-menu.png \"Editing_TextBox_with_Context_Menu\")"},{"content":"You can create your own custom context menu to override the default one.","pos":[6830,6902]},{"content":"See <bpt id=\"p1\">[</bpt>Position a Custom Context Menu in a RichTextBox<ept id=\"p1\">](how-to-position-a-custom-context-menu-in-a-richtextbox.md)</ept> for more information.","pos":[6903,7037],"source":" See [Position a Custom Context Menu in a RichTextBox](how-to-position-a-custom-context-menu-in-a-richtextbox.md) for more information."},{"pos":[7092,7108],"content":"Editing Commands","linkify":"Editing Commands","nodes":[{"content":"Editing Commands","pos":[0,16]}]},{"content":"Editing commands enable users to format editable content inside a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[7112,7221],"source":"Editing commands enable users to format editable content inside a <xref:System.Windows.Controls.RichTextBox>."},{"content":"Besides basic editing commands, <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> includes formatting commands that <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> does not support.","pos":[7222,7387],"source":" Besides basic editing commands, <xref:System.Windows.Controls.RichTextBox> includes formatting commands that <xref:System.Windows.Controls.TextBox> does not support."},{"content":"For example, when editing in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, a user could press Ctr+B to toggle bold text formatting.","pos":[7388,7519],"source":" For example, when editing in a <xref:System.Windows.Controls.RichTextBox>, a user could press Ctr+B to toggle bold text formatting."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Documents.EditingCommands&gt;</ph> for a complete list of commands available.","pos":[7520,7614],"source":" See <xref:System.Windows.Documents.EditingCommands> for a complete list of commands available."},{"content":"In addition to using keyboard shortcuts, you can hook commands up to other controls like buttons.","pos":[7615,7712]},{"content":"The following example shows how to create a simple tool bar containing buttons that the user can use to change text formatting.","pos":[7713,7840]},{"content":"The following illustration shows how this sample displays.","pos":[8060,8118]},{"pos":[8125,8231],"content":"<bpt id=\"p1\">![</bpt>RichTextBox with ToolBar<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/editing-richtextbox-with-toobar.gif \"</bpt>Editing_RichTextBox_with_TooBar<ept id=\"p2\">\")</ept>","source":"![RichTextBox with ToolBar](./media/editing-richtextbox-with-toobar.gif \"Editing_RichTextBox_with_TooBar\")"},{"pos":[8275,8302],"content":"Detect when Content Changes","linkify":"Detect when Content Changes","nodes":[{"content":"Detect when Content Changes","pos":[0,27]}]},{"content":"Usually the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged&gt;</ph> event should be used to detect whenever the text in a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> changes rather then <ph id=\"ph4\">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> as you might expect.","pos":[8306,8603],"source":"Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect."},{"content":"See <bpt id=\"p1\">[</bpt>Detect When Text in a TextBox Has Changed<ept id=\"p1\">](how-to-detect-when-text-in-a-textbox-has-changed.md)</ept> for an example.","pos":[8604,8720],"source":" See [Detect When Text in a TextBox Has Changed](how-to-detect-when-text-in-a-textbox-has-changed.md) for an example."},{"pos":[8787,8828],"content":"Save, Load, and Print RichTextBox Content","linkify":"Save, Load, and Print RichTextBox Content","nodes":[{"content":"Save, Load, and Print RichTextBox Content","pos":[0,41]}]},{"content":"The following example shows how to save content of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> to a file, load that content back into the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, and print the contents.","pos":[8832,9038],"source":"The following example shows how to save content of a <xref:System.Windows.Controls.RichTextBox> to a file, load that content back into the <xref:System.Windows.Controls.RichTextBox>, and print the contents."},{"content":"Below is the markup for the example.","pos":[9039,9075]},{"content":"Below is the code behind for the example.","pos":[9298,9339]},{"pos":[9807,9815],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[9819,9864],"content":"<bpt id=\"p1\">[</bpt>How-to Topics<ept id=\"p1\">](richtextbox-how-to-topics.md)</ept>","source":"[How-to Topics](richtextbox-how-to-topics.md)"},{"pos":[9867,9906],"content":"<bpt id=\"p1\">[</bpt>TextBox Overview<ept id=\"p1\">](textbox-overview.md)</ept>","source":"[TextBox Overview](textbox-overview.md)"}]}