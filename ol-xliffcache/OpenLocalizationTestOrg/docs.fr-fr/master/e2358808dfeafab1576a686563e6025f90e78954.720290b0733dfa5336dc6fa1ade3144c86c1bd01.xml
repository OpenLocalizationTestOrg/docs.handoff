{"content":"---\ntitle: \"LINQ to XML Events (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 34923928-b99c-4004-956e-38f6db25e910\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# LINQ to XML Events (Visual Basic)\n[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] events enable you to be notified when an XML tree is altered.  \n  \n You can add events to an instance of any <xref:System.Xml.Linq.XObject>. The event handler will then receive events for modifications to that <xref:System.Xml.Linq.XObject> and any of its descendants. For example, you can add an event handler to the root of the tree, and handle all modifications to the tree from that event handler.  \n  \n For examples of [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] events, see <xref:System.Xml.Linq.XObject.Changing> and <xref:System.Xml.Linq.XObject.Changed>.  \n  \n## Types and Events  \n You use the following types when working with events:  \n  \n|Type|Description|  \n|----------|-----------------|  \n|<xref:System.Xml.Linq.XObjectChange>|Specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>.|  \n|<xref:System.Xml.Linq.XObjectChangeEventArgs>|Provides data for the <xref:System.Xml.Linq.XObject.Changing> and <xref:System.Xml.Linq.XObject.Changed> events.|  \n  \n The following events are raised when you modify an XML tree:  \n  \n|Event|Description|  \n|-----------|-----------------|  \n|<xref:System.Xml.Linq.XObject.Changing>|Occurs just before this <xref:System.Xml.Linq.XObject> or any of its descendants is going to change.|  \n|<xref:System.Xml.Linq.XObject.Changed>|Occurs when an <xref:System.Xml.Linq.XObject> has changed or any of its descendants have changed.|  \n  \n## Example  \n  \n### Description  \n Events are useful when you want to maintain some aggregate information in an XML tree. For example, you may want maintain an invoice total that is the sum of the line items of the invoice. This example uses events to maintain the total of all of the child elements under the complex element `Items`.  \n  \n### Code  \n  \n```vb  \nModule Module1  \n    Dim WithEvents items As XElement = Nothing  \n    Dim total As XElement = Nothing  \n    Dim root As XElement = _  \n            <Root>  \n                <Total>0</Total>  \n                <Items></Items>  \n            </Root>  \n  \n    Private Sub XObjectChanged( _  \n            ByVal sender As Object, _  \n            ByVal cea As XObjectChangeEventArgs) _  \n            Handles items.Changed  \n        Select Case cea.ObjectChange  \n            Case XObjectChange.Add  \n                If sender.GetType() Is GetType(XElement) Then  \n                    total.Value = CStr(CInt(total.Value) + _  \n                            CInt((DirectCast(sender, XElement)).Value))  \n                End If  \n                If sender.GetType() Is GetType(XText) Then  \n                    total.Value = CStr(CInt(total.Value) + _  \n                            CInt((DirectCast(sender, XText)).Value))  \n                End If  \n            Case XObjectChange.Remove  \n                If sender.GetType() Is GetType(XElement) Then  \n                    total.Value = CStr(CInt(total.Value) - _  \n                            CInt((DirectCast(sender, XElement)).Value))  \n                End If  \n                If sender.GetType() Is GetType(XText) Then  \n                    total.Value = CStr(CInt(total.Value) - _  \n                            CInt((DirectCast(sender, XText)).Value))  \n                End If  \n        End Select  \n        Console.WriteLine(\"Changed {0} {1}\", _  \n                            sender.GetType().ToString(), _  \n                            cea.ObjectChange.ToString())  \n    End Sub  \n  \n    Sub Main()  \n        total = root.<Total>(0)  \n        items = root.<Items>(0)  \n        items.SetElementValue(\"Item1\", 25)  \n        items.SetElementValue(\"Item2\", 50)  \n        items.SetElementValue(\"Item2\", 75)  \n        items.SetElementValue(\"Item3\", 133)  \n        items.SetElementValue(\"Item1\", Nothing)  \n        items.SetElementValue(\"Item4\", 100)  \n        Console.WriteLine(\"Total:{0}\", CInt(total))  \n        Console.WriteLine(root)  \n    End Sub  \nEnd Module  \n```  \n  \n### Comments  \n This code produces the following output:  \n  \n```  \nChanged System.Xml.Linq.XElement Add  \nChanged System.Xml.Linq.XElement Add  \nChanged System.Xml.Linq.XText Remove  \nChanged System.Xml.Linq.XText Add  \nChanged System.Xml.Linq.XElement Add  \nChanged System.Xml.Linq.XElement Remove  \nChanged System.Xml.Linq.XElement Add  \nTotal:308  \n<Root>  \n  <Total>308</Total>  \n  <Items>  \n    <Item2>75</Item2>  \n    <Item3>133</Item3>  \n    <Item4>100</Item4>  \n  </Items>  \n</Root>  \n```  \n  \n## See Also  \n [Advanced LINQ to XML Programming (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)","nodes":[{"pos":[4,436],"embed":true,"restype":"x-metadata","content":"title: \"LINQ to XML Events (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 34923928-b99c-4004-956e-38f6db25e910\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","nodes":[{"content":"LINQ to XML Events (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,50],"content":"LINQ to XML Events (Visual Basic) | Microsoft Docs","nodes":[{"content":"LINQ to XML Events (Visual Basic) | Microsoft Docs","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[443,476],"content":"LINQ to XML Events (Visual Basic)","linkify":"LINQ to XML Events (Visual Basic)","nodes":[{"content":"LINQ to XML Events (Visual Basic)","pos":[0,33]}]},{"pos":[580,641],"content":"events enable you to be notified when an XML tree is altered."},{"content":"You can add events to an instance of any <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","pos":[648,720],"source":"You can add events to an instance of any <xref:System.Xml.Linq.XObject>."},{"content":"The event handler will then receive events for modifications to that <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph> and any of its descendants.","pos":[721,848],"source":" The event handler will then receive events for modifications to that <xref:System.Xml.Linq.XObject> and any of its descendants."},{"content":"For example, you can add an event handler to the root of the tree, and handle all modifications to the tree from that event handler.","pos":[849,981]},{"pos":[988,1202],"content":"For examples of <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> events, see <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>.","source":"For examples of [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] events, see <xref:System.Xml.Linq.XObject.Changing> and <xref:System.Xml.Linq.XObject.Changed>."},{"pos":[1211,1227],"content":"Types and Events","linkify":"Types and Events","nodes":[{"content":"Types and Events","pos":[0,16]}]},{"content":"You use the following types when working with events:","pos":[1231,1284]},{"content":"Type","pos":[1291,1295]},{"content":"Description","pos":[1296,1307]},{"content":"Specifies the event type when an event is raised for an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","pos":[1382,1469],"source":"Specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>."},{"content":"Provides data for the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> events.","pos":[1520,1632],"source":"Provides data for the <xref:System.Xml.Linq.XObject.Changing> and <xref:System.Xml.Linq.XObject.Changed> events."},{"content":"The following events are raised when you modify an XML tree:","pos":[1640,1700]},{"content":"Event","pos":[1707,1712]},{"content":"Description","pos":[1713,1724]},{"content":"Occurs just before this <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph> or any of its descendants is going to change.","pos":[1803,1903],"source":"Occurs just before this <xref:System.Xml.Linq.XObject> or any of its descendants is going to change."},{"content":"Occurs when an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph> has changed or any of its descendants have changed.","pos":[1947,2044],"source":"Occurs when an <xref:System.Xml.Linq.XObject> has changed or any of its descendants have changed."},{"pos":[2054,2061],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2071,2082],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"Events are useful when you want to maintain some aggregate information in an XML tree.","pos":[2086,2172]},{"content":"For example, you may want maintain an invoice total that is the sum of the line items of the invoice.","pos":[2173,2274]},{"content":"This example uses events to maintain the total of all of the child elements under the complex element <ph id=\"ph1\">`Items`</ph>.","pos":[2275,2385],"source":" This example uses events to maintain the total of all of the child elements under the complex element `Items`."},{"pos":[2395,2399],"content":"Code","linkify":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[4533,4541],"content":"Comments","linkify":"Comments","nodes":[{"content":"Comments","pos":[0,8]}]},{"content":"This code produces the following output:","pos":[4545,4585]},{"pos":[5035,5043],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5047,5190],"content":"<bpt id=\"p1\">[</bpt>Advanced LINQ to XML Programming (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)</ept>","source":"[Advanced LINQ to XML Programming (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)"}]}