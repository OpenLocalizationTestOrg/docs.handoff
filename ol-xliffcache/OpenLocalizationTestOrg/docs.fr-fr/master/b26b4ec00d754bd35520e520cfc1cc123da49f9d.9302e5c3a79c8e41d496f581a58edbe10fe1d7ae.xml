{"content":"---\ntitle: \"ExportTypeForwarder Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink.ExportTypeForwarder\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportTypeForwarder\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ExportTypeForwarder method\"\nms.assetid: 55989fa9-ab43-4f08-8eb6-2eb56fa7ca76\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 5\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ExportTypeForwarder Method\nAdds a type forwarder to the type table of the given assembly.  \n  \n## Syntax  \n  \n```  \nHRESULT ExportTypeForwarder(  \n    mdAssemblyRef   tkAssemblyRef,  \n    LPCWSTR         pszTypename,  \n    DWORD           dwFlags,  \n    mdExportedType* pType  \n) PURE;  \n```  \n  \n#### Parameters  \n `tkAssemblyRef`  \n Reference to the assembly to which the type forwarder refers.  \n  \n `pszTypename`  \n Fully qualified type name to export.  \n  \n `dwFlags`  \n `ComType` flags such as `tdPublic` or `tdNested`. This value may be passed to [DefineExportedType Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-defineexportedtype-method.md).  \n  \n `pType`  \n Receives the token of the exported type. This is necessary only for emitting nested types.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h  \n  \n## See Also  \n [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)   \n [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)   \n [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)","nodes":[{"pos":[4,589],"nodes":[{"content":"ExportTypeForwarder Method | Microsoft Docs","nodes":[{"pos":[0,43],"content":"ExportTypeForwarder Method | Microsoft Docs","nodes":[{"content":"ExportTypeForwarder Method | Microsoft Docs","pos":[0,43]}]}],"pos":[6,52],"yaml":true}],"content":"title: \"ExportTypeForwarder Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink.ExportTypeForwarder\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportTypeForwarder\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ExportTypeForwarder method\"\nms.assetid: 55989fa9-ab43-4f08-8eb6-2eb56fa7ca76\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 5\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[596,622],"content":"ExportTypeForwarder Method","linkify":"ExportTypeForwarder Method","nodes":[{"content":"ExportTypeForwarder Method","pos":[0,26]}]},{"content":"Adds a type forwarder to the type table of the given assembly.","pos":[623,685]},{"pos":[694,700],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[898,908],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Reference to the assembly to which the type forwarder refers.","pos":[931,992]},{"content":"Fully qualified type name to export.","pos":[1016,1052]},{"content":"<ph id=\"ph1\">`ComType`</ph> flags such as <ph id=\"ph2\">`tdPublic`</ph> or <ph id=\"ph3\">`tdNested`</ph>.","pos":[1072,1121],"source":"`ComType` flags such as `tdPublic` or `tdNested`."},{"content":"This value may be passed to <bpt id=\"p1\">[</bpt>DefineExportedType Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-defineexportedtype-method.md)</ept>.","pos":[1122,1280],"source":" This value may be passed to [DefineExportedType Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-defineexportedtype-method.md)."},{"content":"Receives the token of the exported type.","pos":[1298,1338]},{"content":"This is necessary only for emitting nested types.","pos":[1339,1388]},{"pos":[1397,1409],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1413,1449]},{"pos":[1458,1470],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h","pos":[1474,1490]},{"pos":[1499,1507],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1511,1598],"source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1602,1691],"source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","pos":[1695,1763],"source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}