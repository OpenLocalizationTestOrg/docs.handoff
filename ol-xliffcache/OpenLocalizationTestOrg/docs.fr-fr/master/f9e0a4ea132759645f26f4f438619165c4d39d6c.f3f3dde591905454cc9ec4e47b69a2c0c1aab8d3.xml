{"content":"---\ntitle: \"How to: Create Application Settings | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"application settings, Windows Forms\"\n  - \"application settings, creating\"\nms.assetid: 1e7aa347-af75-41e5-89ca-f53cab704f72\ncaps.latest.revision: 13\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Create Application Settings\nUsing managed code, you can create new application settings and bind them to properties on your form or your form's controls, so that these settings are loaded and saved automatically at run time.  \n  \n In the following procedure, you manually create a wrapper class that derives from <xref:System.Configuration.ApplicationSettingsBase>. To this class you add a publicly accessible property for each application setting that you want to expose.  \n  \n You can also perform this procedure using minimal code in the Visual Studio designer.  Also see [How to: Create Application Settings Using the Designer](http://msdn.microsoft.com/library/wabtadw6\\(v=vs.110\\)).  \n  \n### To create new Application Settings programmatically  \n  \n1.  Add a new class to your project, and rename it. For this procedure, we will call this class `MyUserSettings`. Change the class definition so that the class derives from <xref:System.Configuration.ApplicationSettingsBase>.  \n  \n2.  Define a property on this wrapper class for each application setting you require, and apply that property with either the <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>, depending on the scope of the setting. For more information about settings scope, see [Application Settings Overview](../../../../docs/framework/winforms/advanced/application-settings-overview.md). By now, your code should look like this:  \n  \n     [!code-csharp[ApplicationSettings.Create#1](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/MyAppSettings.cs#1)]\n     [!code-vb[ApplicationSettings.Create#1](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/MyAppSettings.vb#1)]  \n  \n3.  Create an instance of this wrapper class in your application. It will commonly be a private member of the main form. Now that you have defined your class, you need to bind it to a property; in this case, the <xref:System.Windows.Forms.Form.BackColor%2A> property of your form. You can accomplish this in your form's `Load` event handler.  \n  \n     [!code-csharp[ApplicationSettings.Create#2](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/Form1.cs#2)]\n     [!code-vb[ApplicationSettings.Create#2](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/Form1.vb#2)]  \n  \n4.  If you provide a way to change settings at run time, you will need to save the user's current settings to disk when your form closes, or else these changes will be lost.  \n  \n     [!code-csharp[ApplicationSettings.Create#3](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/Form1.cs#3)]\n     [!code-vb[ApplicationSettings.Create#3](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/Form1.vb#3)]  \n  \n     You have now successfully created a new application setting and bound it to the specified property.  \n  \n## .NET Framework Security  \n The default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, persists information to configuration files as plain text. This limits security to the file access security provided by the operating system for the current user. Because of this, care must be taken with the information stored in configuration files. For example, one common use for application settings is to store connection strings that point to the application's data store. However, because of security concerns, such strings should not include passwords. For more information about connection strings, see <xref:System.Configuration.SpecialSetting>.  \n  \n## See Also  \n <xref:System.Configuration.SpecialSettingAttribute>   \n <xref:System.Configuration.LocalFileSettingsProvider>   \n [Application Settings Overview](../../../../docs/framework/winforms/advanced/application-settings-overview.md)   \n [How to: Validate Application Settings](../../../../docs/framework/winforms/advanced/how-to-validate-application-settings.md)","nodes":[{"pos":[12,64],"content":"How to: Create Application Settings | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create Application Settings | Microsoft Docs","pos":[0,52]}]},{"pos":[503,538],"content":"How to: Create Application Settings","linkify":"How to: Create Application Settings","nodes":[{"content":"How to: Create Application Settings","pos":[0,35]}]},{"content":"Using managed code, you can create new application settings and bind them to properties on your form or your form's controls, so that these settings are loaded and saved automatically at run time.","pos":[539,735]},{"content":"In the following procedure, you manually create a wrapper class that derives from <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.","pos":[742,876],"source":"In the following procedure, you manually create a wrapper class that derives from <xref:System.Configuration.ApplicationSettingsBase>."},{"content":"To this class you add a publicly accessible property for each application setting that you want to expose.","pos":[877,983]},{"content":"You can also perform this procedure using minimal code in the Visual Studio designer.","pos":[990,1075]},{"content":"Also see <bpt id=\"p1\">[</bpt>How to: Create Application Settings Using the Designer<ept id=\"p1\">](http://msdn.microsoft.com/library/wabtadw6\\(v=vs.110\\))</ept>.","pos":[1077,1199],"source":"  Also see [How to: Create Application Settings Using the Designer](http://msdn.microsoft.com/library/wabtadw6\\(v=vs.110\\))."},{"pos":[1209,1260],"content":"To create new Application Settings programmatically","linkify":"To create new Application Settings programmatically","nodes":[{"content":"To create new Application Settings programmatically","pos":[0,51]}]},{"content":"Add a new class to your project, and rename it.","pos":[1270,1317]},{"content":"For this procedure, we will call this class <ph id=\"ph1\">`MyUserSettings`</ph>.","pos":[1318,1379],"source":" For this procedure, we will call this class `MyUserSettings`."},{"content":"Change the class definition so that the class derives from <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.","pos":[1380,1491],"source":" Change the class definition so that the class derives from <xref:System.Configuration.ApplicationSettingsBase>."},{"content":"Define a property on this wrapper class for each application setting you require, and apply that property with either the <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>, depending on the scope of the setting.","pos":[1501,1782],"source":"Define a property on this wrapper class for each application setting you require, and apply that property with either the <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>, depending on the scope of the setting."},{"content":"For more information about settings scope, see <bpt id=\"p1\">[</bpt>Application Settings Overview<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/application-settings-overview.md)</ept>.","pos":[1783,1941],"source":" For more information about settings scope, see [Application Settings Overview](../../../../docs/framework/winforms/advanced/application-settings-overview.md)."},{"content":"By now, your code should look like this:","pos":[1942,1982]},{"pos":[1993,2302],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ApplicationSettings.Create#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/MyAppSettings.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>ApplicationSettings.Create#1<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/MyAppSettings.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[ApplicationSettings.Create#1](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/MyAppSettings.cs#1)]\n [!code-vb[ApplicationSettings.Create#1](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/MyAppSettings.vb#1)]"},{"content":"Create an instance of this wrapper class in your application.","pos":[2312,2373]},{"content":"It will commonly be a private member of the main form.","pos":[2374,2428]},{"content":"Now that you have defined your class, you need to bind it to a property; in this case, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.BackColor%2A&gt;</ph> property of your form.","pos":[2429,2588],"source":" Now that you have defined your class, you need to bind it to a property; in this case, the <xref:System.Windows.Forms.Form.BackColor%2A> property of your form."},{"content":"You can accomplish this in your form's <ph id=\"ph1\">`Load`</ph> event handler.","pos":[2589,2649],"source":" You can accomplish this in your form's `Load` event handler."},{"pos":[2660,2953],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ApplicationSettings.Create#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/Form1.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>ApplicationSettings.Create#2<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/Form1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[ApplicationSettings.Create#2](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/Form1.cs#2)]\n [!code-vb[ApplicationSettings.Create#2](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/Form1.vb#2)]"},{"content":"If you provide a way to change settings at run time, you will need to save the user's current settings to disk when your form closes, or else these changes will be lost.","pos":[2963,3132]},{"pos":[3143,3436],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ApplicationSettings.Create#3<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/Form1.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>ApplicationSettings.Create#3<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/Form1.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[ApplicationSettings.Create#3](../../../../samples/snippets/csharp/VS_Snippets_Winforms/ApplicationSettings.Create/CS/Form1.cs#3)]\n [!code-vb[ApplicationSettings.Create#3](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/ApplicationSettings.Create/VB/Form1.vb#3)]"},{"content":"You have now successfully created a new application setting and bound it to the specified property.","pos":[3447,3546]},{"pos":[3555,3578],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"The default settings provider, <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>, persists information to configuration files as plain text.","pos":[3582,3726],"source":"The default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, persists information to configuration files as plain text."},{"content":"This limits security to the file access security provided by the operating system for the current user.","pos":[3727,3830]},{"content":"Because of this, care must be taken with the information stored in configuration files.","pos":[3831,3918]},{"content":"For example, one common use for application settings is to store connection strings that point to the application's data store.","pos":[3919,4046]},{"content":"However, because of security concerns, such strings should not include passwords.","pos":[4047,4128]},{"content":"For more information about connection strings, see <ph id=\"ph1\">&lt;xref:System.Configuration.SpecialSetting&gt;</ph>.","pos":[4129,4223],"source":" For more information about connection strings, see <xref:System.Configuration.SpecialSetting>."},{"pos":[4232,4240],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.SpecialSettingAttribute&gt;</ph>","pos":[4244,4295],"source":"<xref:System.Configuration.SpecialSettingAttribute> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>","pos":[4300,4353],"source":" <xref:System.Configuration.LocalFileSettingsProvider> "},{"content":"<bpt id=\"p1\"> [</bpt>Application Settings Overview<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/application-settings-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[4357,4469],"source":" [Application Settings Overview](../../../../docs/framework/winforms/advanced/application-settings-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Validate Application Settings<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-validate-application-settings.md)</ept>","pos":[4472,4598],"source":" [How to: Validate Application Settings](../../../../docs/framework/winforms/advanced/how-to-validate-application-settings.md)"}]}