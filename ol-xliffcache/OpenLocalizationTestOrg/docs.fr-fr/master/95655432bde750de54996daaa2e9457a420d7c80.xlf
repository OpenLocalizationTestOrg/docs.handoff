<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95655432bde750de54996daaa2e9457a420d7c80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\do.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d1efb0e944806b584395562d3250ca5acd18959</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77722c9a49422e135b21e790859e6c1fcd47dd24</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>do (C# Reference) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>do (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`do`</ph> statement executes a statement or a block of statements repeatedly until a specified expression evaluates to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The body of the loop must be enclosed in braces, <ph id="ph1">`{}`</ph>, unless it consists of a single statement.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In that case, the braces are optional.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`do-while`</ph> loop statements execute as long as the variable <ph id="ph2">`x`</ph> is less than 5.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csrefKeywordsIteration#1<ept id="p2">](../../../csharp/language-reference/keywords/codesnippet/CSharp/do_1.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">[</bpt>while<ept id="p1">](../../../csharp/language-reference/keywords/while.md)</ept> statement, a <ph id="ph1">`do-while`</ph> loop is executed one time before the conditional expression is evaluated.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>At any point in the <ph id="ph1">`do-while`</ph> block, you can break out of the loop using the <bpt id="p1">[</bpt>break<ept id="p1">](../../../csharp/language-reference/keywords/break.md)</ept> statement.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can step directly to the <ph id="ph1">`while`</ph> expression evaluation statement by using the <bpt id="p1">[</bpt>continue<ept id="p1">](../../../csharp/language-reference/keywords/continue.md)</ept> statement.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`while`</ph> expression evaluates to true, execution continues at the first statement in the loop.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to false, execution continues at the first statement after the <ph id="ph1">`do-while`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`do-while`</ph> loop can also be exited by the <bpt id="p1">[</bpt>goto<ept id="p1">](../../../csharp/language-reference/keywords/goto.md)</ept>, <bpt id="p2">[</bpt>return<ept id="p2">](../../../csharp/language-reference/keywords/return.md)</ept>, or <bpt id="p3">[</bpt>throw<ept id="p3">](../../../csharp/language-reference/keywords/throw.md)</ept> statements.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>C# Language Specification</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Keywords<ept id="p1">](../../../csharp/language-reference/keywords/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>do-while Statement (C++)<ept id="p1">](https://docs.microsoft.com/cpp/cpp/do-while-statement-cpp)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Iteration Statements<ept id="p1">](../../../csharp/language-reference/keywords/iteration-statements.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>