{"content":"---\ntitle: \"&#39;Structure&#39; constraint and a specific class type constraint cannot be combined | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc32108\"\n  - \"bc32108\"\nhelpviewer_keywords: \n  - \"BC32108\"\nms.assetid: de461824-5aec-48d1-967d-b0e0609a8ba6\ncaps.latest.revision: 7\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# &#39;Structure&#39; constraint and a specific class type constraint cannot be combined\nA constraint list includes both the [Structure (Visual Basic)](http://msdn.microsoft.com/en-us/263ce115-ac36-4c05-8cb7-0e0eead5c6d0) constraint and the name of a defined class.  \n  \n A constraint list imposes requirements on the type argument passed to the type parameter. You can specify the following requirements in any combination:  \n  \n-   The type argument must implement one or more interfaces  \n  \n-   The type argument must inherit from at most one class  \n  \n-   The type argument must expose a parameterless constructor that the creating code can access (include the `New` constraint)  \n  \n If you do not include any specific class or interface in the constraint list, you can impose a more general requirement by specifying one of the following:  \n  \n-   The type argument must be a value type (include the `Structure` constraint)  \n  \n-   The type argument must be a reference type (include the `Class` constraint)  \n  \n You cannot specify both `Structure` and `Class` for the same type parameter, and you cannot specify either one more than once.  \n  \n **Error ID:** BC32108  \n  \n## To correct this error  \n  \n-   If you want the type argument to be a value type, remove the class name from the constraint list.  \n  \n-   If you want the type argument to inherit from the specified class name, remove the `Structure` keyword from the constraint list.  \n  \n## See Also  \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)","nodes":[{"pos":[12,115],"content":"&#39;Structure&#39; constraint and a specific class type constraint cannot be combined | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"&amp;#39;Structure&amp;#39; constraint and a specific class type constraint cannot be combined | Microsoft Docs","pos":[0,103],"source":"&#39;Structure&#39; constraint and a specific class type constraint cannot be combined | Microsoft Docs"}]},{"pos":[631,717],"content":"&#39;Structure&#39; constraint and a specific class type constraint cannot be combined","linkify":"&#39;Structure&#39; constraint and a specific class type constraint cannot be combined","nodes":[{"content":"&amp;#39;Structure&amp;#39; constraint and a specific class type constraint cannot be combined","pos":[0,86],"source":"&#39;Structure&#39; constraint and a specific class type constraint cannot be combined"}]},{"pos":[718,894],"content":"A constraint list includes both the <bpt id=\"p1\">[</bpt>Structure (Visual Basic)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/263ce115-ac36-4c05-8cb7-0e0eead5c6d0)</ept> constraint and the name of a defined class.","source":"A constraint list includes both the [Structure (Visual Basic)](http://msdn.microsoft.com/en-us/263ce115-ac36-4c05-8cb7-0e0eead5c6d0) constraint and the name of a defined class."},{"content":"A constraint list imposes requirements on the type argument passed to the type parameter.","pos":[901,990]},{"content":"You can specify the following requirements in any combination:","pos":[991,1053]},{"content":"The type argument must implement one or more interfaces","pos":[1063,1118]},{"content":"The type argument must inherit from at most one class","pos":[1128,1181]},{"pos":[1191,1313],"content":"The type argument must expose a parameterless constructor that the creating code can access (include the <ph id=\"ph1\">`New`</ph> constraint)","source":"The type argument must expose a parameterless constructor that the creating code can access (include the `New` constraint)"},{"content":"If you do not include any specific class or interface in the constraint list, you can impose a more general requirement by specifying one of the following:","pos":[1320,1475]},{"pos":[1485,1560],"content":"The type argument must be a value type (include the <ph id=\"ph1\">`Structure`</ph> constraint)","source":"The type argument must be a value type (include the `Structure` constraint)"},{"pos":[1570,1645],"content":"The type argument must be a reference type (include the <ph id=\"ph1\">`Class`</ph> constraint)","source":"The type argument must be a reference type (include the `Class` constraint)"},{"pos":[1652,1778],"content":"You cannot specify both <ph id=\"ph1\">`Structure`</ph> and <ph id=\"ph2\">`Class`</ph> for the same type parameter, and you cannot specify either one more than once.","source":"You cannot specify both `Structure` and `Class` for the same type parameter, and you cannot specify either one more than once."},{"pos":[1785,1806],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32108","source":"**Error ID:** BC32108"},{"pos":[1815,1836],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If you want the type argument to be a value type, remove the class name from the constraint list.","pos":[1846,1943]},{"pos":[1953,2081],"content":"If you want the type argument to inherit from the specified class name, remove the <ph id=\"ph1\">`Structure`</ph> keyword from the constraint list.","source":"If you want the type argument to inherit from the specified class name, remove the `Structure` keyword from the constraint list."},{"pos":[2090,2098],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2102,2218],"source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Value Types and Reference Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept>","pos":[2221,2357],"source":" [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)"}]}