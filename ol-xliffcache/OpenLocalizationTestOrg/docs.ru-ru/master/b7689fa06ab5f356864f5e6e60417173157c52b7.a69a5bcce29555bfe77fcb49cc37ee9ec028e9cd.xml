{"content":"---\ntitle: \"Shapes and Basic Drawing in WPF Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"shapes, about shapes\"\n  - \"basic drawing\"\n  - \"vector drawing, overview\"\n  - \"vectors, drawing\"\n  - \"Shape objects\"\nms.assetid: 66d7a6d6-e3b6-47bc-8dfe-8a1b26f7d901\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Shapes and Basic Drawing in WPF Overview\nThis topic gives an overview of how to draw with              <xref:System.Windows.Shapes.Shape> objects. A              <xref:System.Windows.Shapes.Shape> is a type of              <xref:System.Windows.UIElement> that enables you to draw a shape to the screen. Because they are UI elements,              <xref:System.Windows.Shapes.Shape> objects can be used inside              <xref:System.Windows.Controls.Panel> elements and most controls.  \n  \n [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] offers several layers of access to graphics and rendering services. At the top layer,              <xref:System.Windows.Shapes.Shape> objects are easy to use and provide many useful features, such as layout and participation in the              [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] event system.  \n  \n  \n<a name=\"shapes\"></a>   \n## Shape Objects  \n [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides a number of ready-to-use                  <xref:System.Windows.Shapes.Shape> objects.  All shape objects inherit from the                  <xref:System.Windows.Shapes.Shape> class. Available shape objects include                  <xref:System.Windows.Shapes.Ellipse>,                  <xref:System.Windows.Shapes.Line>,                  <xref:System.Windows.Shapes.Path>,                  <xref:System.Windows.Shapes.Polygon>,                  <xref:System.Windows.Shapes.Polyline>, and                  <xref:System.Windows.Shapes.Rectangle>.                  <xref:System.Windows.Shapes.Shape> objects share the following common properties.  \n  \n-   <xref:System.Windows.Shapes.Shape.Stroke%2A>: Describes how the shape's outline is painted.  \n  \n-   <xref:System.Windows.Shapes.Shape.StrokeThickness%2A>: Describes the thickness of the shape's outline.  \n  \n-   <xref:System.Windows.Shapes.Shape.Fill%2A>: Describes how the interior of the shape is painted.  \n  \n-   Data properties to specify coordinates and vertices, measured in device-independent pixels.  \n  \n Because they derive from                  <xref:System.Windows.UIElement>, shape objects can be used inside panels and most controls                 . The                  <xref:System.Windows.Controls.Canvas> panel is a particularly good choice for creating complex drawings because it supports absolute positioning of its child objects.  \n  \n The                  <xref:System.Windows.Shapes.Line> class enables you to draw a line between two points. The following example shows several ways to specify line coordinates and stroke properties.  \n  \n [!code-xml[drawingwithshapeelements#LineExample1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingWithShapeElements/CS/lineexample.xaml#lineexample1)]  \n  \n [!code-cpp[shapesprocedural#ShapesProceduralLine](../../../../samples/snippets/cpp/VS_Snippets_Wpf/ShapesProcedural/CPP/ShapesProcedural.cpp#shapesproceduralline)]\n [!code-csharp[shapesprocedural#ShapesProceduralLine](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ShapesProcedural/Csharp/ShapesProcedural.cs#shapesproceduralline)]\n [!code-vb[shapesprocedural#ShapesProceduralLine](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ShapesProcedural/VisualBasic/ShapesProceduralVB.vb#shapesproceduralline)]  \n  \n The following image shows the rendered                  <xref:System.Windows.Shapes.Line>.  \n  \n ![Line illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-line2.gif \"shape_ovw_line2\")  \n  \n Although the                  <xref:System.Windows.Shapes.Line> class does provide a                  <xref:System.Windows.Shapes.Shape.Fill%2A> property, setting it has no effect because a                  <xref:System.Windows.Shapes.Line> has no area.  \n  \n Another common shape is the                  <xref:System.Windows.Shapes.Ellipse>.  Create an                  <xref:System.Windows.Shapes.Ellipse> by defining the shape's                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> properties. To draw a circle, specify an                  <xref:System.Windows.Shapes.Ellipse> whose                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> values are equal.  \n  \n [!code-xml[ShapeOverviews#ShapesOVW1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ShapeOverviews/CS/Window1.xaml#shapesovw1)]  \n  \n [!code-csharp[brushesmiscsnippets_procedural_snip#SetBackgroundColorOfShapeCodeExampleWholePage](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/SetBackgroundColorOfShapeExample.cs#setbackgroundcolorofshapecodeexamplewholepage)]\n [!code-vb[brushesmiscsnippets_procedural_snip#SetBackgroundColorOfShapeCodeExampleWholePage](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/setbackgroundcolorofshapeexample.vb#setbackgroundcolorofshapecodeexamplewholepage)]  \n  \n The following image shows an example of a rendered                  <xref:System.Windows.Shapes.Ellipse>.  \n  \n ![Ellipse illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-ellipse2.png \"shape_ovw_ellipse2\")  \n  \n<a name=\"paths\"></a>   \n## Using Paths and Geometries  \n The                  <xref:System.Windows.Shapes.Path> class enables you to draw curves and complex shapes. These curves and shapes are described using                  <xref:System.Windows.Media.Geometry> objects. To use a                  <xref:System.Windows.Shapes.Path>, you create a                  <xref:System.Windows.Media.Geometry> and use it to set the                  <xref:System.Windows.Shapes.Path> object's                  <xref:System.Windows.Shapes.Path.Data%2A> property.  \n  \n There are a variety of                  <xref:System.Windows.Media.Geometry> objects to choose from. The                  <xref:System.Windows.Media.LineGeometry>,                  <xref:System.Windows.Media.RectangleGeometry>, and                  <xref:System.Windows.Media.EllipseGeometry> classes describe relatively simple shapes.                  To create more complex shapes or create curves, use a                  <xref:System.Windows.Media.PathGeometry>.  \n  \n<a name=\"pathgeometry\"></a>   \n### PathGeometry and PathSegments  \n <xref:System.Windows.Media.PathGeometry> objects are comprised of one or more                          <xref:System.Windows.Media.PathFigure> objects; each                          <xref:System.Windows.Media.PathFigure> represents a different \"figure\" or shape. Each                          <xref:System.Windows.Media.PathFigure> is itself comprised of one or more                          <xref:System.Windows.Media.PathSegment> objects, each representing a connected portion of the figure or shape. Segment types include the following:                          <xref:System.Windows.Media.LineSegment>,                          <xref:System.Windows.Media.BezierSegment>, and                          <xref:System.Windows.Media.ArcSegment>.  \n  \n In the following example, a                          <xref:System.Windows.Shapes.Path> is used to draw a quadratic Bezier curve.  \n  \n [!code-xml[geometrysample#34](../../../../samples/snippets/csharp/VS_Snippets_Wpf/GeometrySample/CS/pathgeometryexample.xaml#34)]  \n  \n The following image shows the rendered shape.  \n  \n ![Path illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-path2.gif \"shape_ovw_path2\")  \n  \n For more information about                          <xref:System.Windows.Media.PathGeometry> and the other                          <xref:System.Windows.Media.Geometry> classes, see the                          [Geometry Overview](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md).  \n  \n<a name=\"pathdatastring\"></a>   \n### XAML Abbreviated Syntax  \n In                          [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)], you may also use a special abbreviated syntax to describe a                          <xref:System.Windows.Shapes.Path>. In the following example, abbreviated syntax is used to draw a complex shape.  \n  \n```xaml  \n  \n      <Path Stroke=\"DarkGoldenRod\" StrokeThickness=\"3\"   \nData=\"M 100,200 C 100,25 400,350 400,175 H 280\" />  \n  \n```  \n  \n The following image shows a rendered                          <xref:System.Windows.Shapes.Path>.  \n  \n ![Path illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-path.PNG \"shape_ovw_path\")  \n  \n The                          <xref:System.Windows.Shapes.Path.Data%2A> attribute string begins with the \"moveto\" command, indicated by M, which establishes a start point for the path in the coordinate system of the                          <xref:System.Windows.Controls.Canvas>.                          <xref:System.Windows.Shapes.Path> data parameters are case-sensitive. The capital                          M                          indicates an absolute location for the new current point. A lowercase m would indicate relative coordinates. The first segment is a cubic Bezier curve beginning at (100,200) and ending at (400,175), drawn using the two control points (100,25) and (400,350). This segment is indicated by the C command in the                          <xref:System.Windows.Shapes.Path.Data%2A> attribute string. Again, the capital C indicates an absolute path; the lowercase c would indicate a relative path.  \n  \n The second segment begins with an absolute horizontal \"lineto\" command H, which specifies a line drawn from the preceding subpath's endpoint (400,175) to a new endpoint (280,175). Because it is a horizontal \"lineto\" command, the value specified is an                          *x*-coordinate.  \n  \n For the complete path syntax, see the                          <xref:System.Windows.Shapes.Path.Data%2A> reference and                          [Create a Shape by Using a PathGeometry](../../../../docs/framework/wpf/graphics-multimedia/how-to-create-a-shape-by-using-a-pathgeometry.md).  \n  \n<a name=\"fillpaint\"></a>   \n## Painting Shapes  \n <xref:System.Windows.Media.Brush> objects are used to paint a shape's                  <xref:System.Windows.Shapes.Shape.Stroke%2A> and                  <xref:System.Windows.Shapes.Shape.Fill%2A>. In the following example, the stroke and fill of an                  <xref:System.Windows.Shapes.Ellipse> are specified. Note that valid input for brush properties can be either a keyword or hexadecimal color value. For more information about available color                  keywords                 , see properties of the                  <xref:System.Windows.Media.Colors> class in the                  <xref:System.Windows.Media> namespace                 .  \n  \n```  \n  \n<Canvas Background=\"LightGray\">   \n   <Ellipse  \n      Canvas.Top=\"50\"  \n      Canvas.Left=\"50\"  \n      Fill=\"#FFFFFF00\"  \n      Height=\"75\"  \n      Width=\"75\"  \n      StrokeThickness=\"5\"  \n      Stroke=\"#FF0000FF\"/>  \n</Canvas>  \n  \n```  \n  \n The following image shows the rendered                  <xref:System.Windows.Shapes.Ellipse>.  \n  \n ![An ellipse](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-ellipsefill.PNG \"shape_ovw_ellipsefill\")  \n  \n Alternatively, you can use                  property element syntax                  to explicitly create a                  <xref:System.Windows.Media.SolidColorBrush> object to paint the shape with a solid color.  \n  \n```  \n  \n<!-- This polygon shape uses pre-defined color values for its Stroke and  \n     Fill properties.   \n     The SolidColorBrush's Opacity property affects the fill color in   \n     this case by making it slightly transparent (opacity of 0.4) so   \n     that it blends with any underlying color. -->  \n  \n<Polygon  \n    Points=\"300,200 400,125 400,275 300,200\"  \n    Stroke=\"Purple\"   \n    StrokeThickness=\"2\">  \n    <Polygon.Fill>  \n       <SolidColorBrush Color=\"Blue\" Opacity=\"0.4\"/>  \n    </Polygon.Fill>  \n</Polygon>  \n```  \n  \n The following illustration shows the rendered shape.  \n  \n ![SolidColorBrush illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-solidcolorbrush.PNG \"shape_ovw_solidcolorbrush\")  \n  \n You can also paint a shape's stroke or fill with gradients, images, patterns, and more. For more information, see the                  [Painting with Solid Colors and Gradients Overview](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).  \n  \n<a name=\"stretchableshapessection\"></a>   \n## Stretchable Shapes  \n The                  <xref:System.Windows.Shapes.Line>,                  <xref:System.Windows.Shapes.Path>,                  <xref:System.Windows.Shapes.Polygon>,                  <xref:System.Windows.Shapes.Polyline>, and                  <xref:System.Windows.Shapes.Rectangle> classes all have a                  <xref:System.Windows.Shapes.Shape.Stretch%2A> property. This property determines how a                  <xref:System.Windows.Shapes.Shape> object's contents (the shape to be drawn) is stretched to fill the                  <xref:System.Windows.Shapes.Shape> object's layout space. A                  <xref:System.Windows.Shapes.Shape> object's layout space is the amount of space the                  <xref:System.Windows.Shapes.Shape> is allocated by the layout system, because of either an explicit                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> setting or because of its                  <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and                  <xref:System.Windows.FrameworkElement.VerticalAlignment%2A>settings                 .                  For additional information on layout in Windows Presentation Foundation, see                  [Layout](../../../../docs/framework/wpf/advanced/layout.md) overview.  \n  \n The Stretch property takes one of the following values:  \n  \n-   <xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are not stretched.  \n  \n-   <xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are stretched to fill its layout space.  Aspect ratio is not preserved.  \n  \n-   <xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are stretched as much as possible to fill its layout space while preserving its original aspect ratio.  \n  \n-   <xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are stretched to completely fill its layout space while preserving its original aspect ratio.  \n  \n Note that, when a                  <xref:System.Windows.Shapes.Shape> object's contents are stretched, the                  <xref:System.Windows.Shapes.Shape> object's outline is painted after the stretching.  \n  \n In the following example, a                  <xref:System.Windows.Shapes.Polygon> is used to draw a very small triangle from (0,0) to (0,1) to (1,1). The                  <xref:System.Windows.Shapes.Polygon> object's                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> are set to 100, and its stretch property is set to Fill. As a result, the                  <xref:System.Windows.Shapes.Polygon> object's contents (the triangle) are stretched to fill the larger space.  \n  \n```  \n...  \n<Polygon  \n  Points=\"0,0 0,1 1,1\"  \n  Fill=\"Blue\"  \n  Width=\"100\"  \n  Height=\"100\"  \n  Stretch=\"Fill\"  \n  Stroke=\"Black\"  \n  StrokeThickness=\"2\" />  \n...  \n```  \n  \n```  \n...  \nPointCollection myPointCollection = new PointCollection();  \nmyPointCollection.Add(new Point(0,0));  \nmyPointCollection.Add(new Point(0,1));  \nmyPointCollection.Add(new Point(1,1));  \n  \nPolygon myPolygon = new Polygon();  \nmyPolygon.Points = myPointCollection;  \nmyPolygon.Fill = Brushes.Blue;  \nmyPolygon.Width = 100;  \nmyPolygon.Height = 100;  \nmyPolygon.Stretch = Stretch.Fill;  \nmyPolygon.Stroke = Brushes.Black;  \nmyPolygon.StrokeThickness = 2;  \n...  \n```  \n  \n<a name=\"transforms\"></a>   \n## Transforming Shapes  \n The                  <xref:System.Windows.Media.Transform> class provides the means to transform shapes in a two-dimensional plane.  The different types of transformation include rotation (                 <xref:System.Windows.Media.RotateTransform>), scale (                 <xref:System.Windows.Media.ScaleTransform>), skew (                 <xref:System.Windows.Media.SkewTransform>), and translation (                 <xref:System.Windows.Media.TranslateTransform>).  \n  \n A common transform to apply to a shape is a rotation.  To rotate a shape, create a                  <xref:System.Windows.Media.RotateTransform> and specify its                  <xref:System.Windows.Media.RotateTransform.Angle%2A>. An                  <xref:System.Windows.Media.RotateTransform.Angle%2A> of 45 rotates the element 45 degrees clockwise; an angle of 90 rotates the element 90 degrees clockwise; and so on. Set the                  <xref:System.Windows.Media.RotateTransform.CenterX%2A> and                  <xref:System.Windows.Media.RotateTransform.CenterY%2A> properties if you want to control the point about which the element is rotated. These property values are expressed in the coordinate space of the element being transformed.                  <xref:System.Windows.Media.RotateTransform.CenterX%2A> and                  <xref:System.Windows.Media.RotateTransform.CenterY%2A> have default values of zero. Finally, apply the                  <xref:System.Windows.Media.RotateTransform> to the element. If you don't want the transform to affect layout, set the shape's                  <xref:System.Windows.UIElement.RenderTransform%2A>property                 .  \n  \n In the following example, a                  <xref:System.Windows.Media.RotateTransform> is used to rotate a shape 45 degrees about the shape's top left corner (0,0).  \n  \n [!code-xml[transformssample#14](../../../../samples/snippets/csharp/VS_Snippets_Wpf/transformsSample/CS/RotateTransformExample.xaml#14)]  \n  \n In the next example, another shape is rotated 45 degrees, but this time it's rotated about the point (25,50).  \n  \n [!code-xml[transformssample#15](../../../../samples/snippets/csharp/VS_Snippets_Wpf/transformsSample/CS/RotateTransformExample.xaml#15)]  \n  \n The following illustration shows the results of applying the two transforms.  \n  \n ![45 degree rotations with different center points](../../../../docs/framework/wpf/graphics-multimedia/media/wcpsdk-graphicsmm-rotatetransform45degrees.gif \"wcpsdk_graphicsmm_rotatetransform45degrees\")  \n  \n In the previous examples, a single transform was applied to each shape object. To apply multiple transforms to a shape (or any other UI element), use a                  <xref:System.Windows.Media.TransformGroup>.  \n  \n## See Also  \n [2D Graphics and Imaging](../../../../docs/framework/wpf/advanced/optimizing-performance-2d-graphics-and-imaging.md)   \n [Painting with Solid Colors and Gradients Overview](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)   \n [Geometry Overview](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)   \n [Walkthrough: My First WPF Desktop Application](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md)   \n [Animation Overview](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)\n","nodes":[{"pos":[4,513],"nodes":[{"content":"Shapes and Basic Drawing in WPF Overview | Microsoft Docs","nodes":[{"pos":[0,57],"content":"Shapes and Basic Drawing in WPF Overview | Microsoft Docs","nodes":[{"content":"Shapes and Basic Drawing in WPF Overview | Microsoft Docs","pos":[0,57]}]}],"pos":[6,66],"yaml":true}],"content":"title: \"Shapes and Basic Drawing in WPF Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"shapes, about shapes\"\n  - \"basic drawing\"\n  - \"vector drawing, overview\"\n  - \"vectors, drawing\"\n  - \"Shape objects\"\nms.assetid: 66d7a6d6-e3b6-47bc-8dfe-8a1b26f7d901\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[520,560],"content":"Shapes and Basic Drawing in WPF Overview","linkify":"Shapes and Basic Drawing in WPF Overview","nodes":[{"content":"Shapes and Basic Drawing in WPF Overview","pos":[0,40]}]},{"content":"This topic gives an overview of how to draw with              <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> objects.","pos":[561,666],"source":"This topic gives an overview of how to draw with              <xref:System.Windows.Shapes.Shape> objects."},{"content":"A              <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> is a type of              <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph> that enables you to draw a shape to the screen.","pos":[667,822],"source":" A              <xref:System.Windows.Shapes.Shape> is a type of              <xref:System.Windows.UIElement> that enables you to draw a shape to the screen."},{"content":"Because they are UI elements,              <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> objects can be used inside              <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements and most controls.","pos":[823,1005],"source":" Because they are UI elements,              <xref:System.Windows.Shapes.Shape> objects can be used inside              <xref:System.Windows.Controls.Panel> elements and most controls."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> offers several layers of access to graphics and rendering services.","pos":[1012,1159],"source":"[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] offers several layers of access to graphics and rendering services."},{"content":"At the top layer,              <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> objects are easy to use and provide many useful features, such as layout and participation in the              <ph id=\"ph2\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> event system.","pos":[1160,1430],"source":" At the top layer,              <xref:System.Windows.Shapes.Shape> objects are easy to use and provide many useful features, such as layout and participation in the              [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] event system."},{"pos":[1467,1480],"content":"Shape Objects","linkify":"Shape Objects","nodes":[{"content":"Shape Objects","pos":[0,13]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides a number of ready-to-use                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> objects.","pos":[1484,1660],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides a number of ready-to-use                  <xref:System.Windows.Shapes.Shape> objects."},{"content":"All shape objects inherit from the                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> class.","pos":[1662,1755],"source":"  All shape objects inherit from the                  <xref:System.Windows.Shapes.Shape> class."},{"content":"Available shape objects include                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>,                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Line&gt;</ph>,                  <ph id=\"ph3\">&lt;xref:System.Windows.Shapes.Path&gt;</ph>,                  <ph id=\"ph4\">&lt;xref:System.Windows.Shapes.Polygon&gt;</ph>,                  <ph id=\"ph5\">&lt;xref:System.Windows.Shapes.Polyline&gt;</ph>, and                  <ph id=\"ph6\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>.","pos":[1756,2118],"source":" Available shape objects include                  <xref:System.Windows.Shapes.Ellipse>,                  <xref:System.Windows.Shapes.Line>,                  <xref:System.Windows.Shapes.Path>,                  <xref:System.Windows.Shapes.Polygon>,                  <xref:System.Windows.Shapes.Polyline>, and                  <xref:System.Windows.Shapes.Rectangle>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> objects share the following common properties.","pos":[2136,2217],"source":"                  <xref:System.Windows.Shapes.Shape> objects share the following common properties."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape.Stroke%2A&gt;</ph>: Describes how the shape's outline is painted.","pos":[2227,2318],"source":"<xref:System.Windows.Shapes.Shape.Stroke%2A>: Describes how the shape's outline is painted."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape.StrokeThickness%2A&gt;</ph>: Describes the thickness of the shape's outline.","pos":[2328,2430],"source":"<xref:System.Windows.Shapes.Shape.StrokeThickness%2A>: Describes the thickness of the shape's outline."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape.Fill%2A&gt;</ph>: Describes how the interior of the shape is painted.","pos":[2440,2535],"source":"<xref:System.Windows.Shapes.Shape.Fill%2A>: Describes how the interior of the shape is painted."},{"content":"Data properties to specify coordinates and vertices, measured in device-independent pixels.","pos":[2545,2636]},{"content":"Because they derive from                  <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph>, shape objects can be used inside panels and most controls                 .","pos":[2643,2793],"source":"Because they derive from                  <xref:System.Windows.UIElement>, shape objects can be used inside panels and most controls                 ."},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> panel is a particularly good choice for creating complex drawings because it supports absolute positioning of its child objects.","pos":[2794,2981],"source":" The                  <xref:System.Windows.Controls.Canvas> panel is a particularly good choice for creating complex drawings because it supports absolute positioning of its child objects."},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Line&gt;</ph> class enables you to draw a line between two points.","pos":[2988,3095],"source":"The                  <xref:System.Windows.Shapes.Line> class enables you to draw a line between two points."},{"content":"The following example shows several ways to specify line coordinates and stroke properties.","pos":[3096,3187]},{"pos":[3194,3355],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>drawingwithshapeelements#LineExample1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingWithShapeElements/CS/lineexample.xaml#lineexample1)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[drawingwithshapeelements#LineExample1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingWithShapeElements/CS/lineexample.xaml#lineexample1)]"},{"pos":[3362,3879],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>shapesprocedural#ShapesProceduralLine<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Wpf/ShapesProcedural/CPP/ShapesProcedural.cpp#shapesproceduralline)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>shapesprocedural#ShapesProceduralLine<ept id=\"p4\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ShapesProcedural/Csharp/ShapesProcedural.cs#shapesproceduralline)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>shapesprocedural#ShapesProceduralLine<ept id=\"p6\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ShapesProcedural/VisualBasic/ShapesProceduralVB.vb#shapesproceduralline)</ept><ept id=\"p5\">]</ept>","leadings":[""," "," "],"source":"[!code-cpp[shapesprocedural#ShapesProceduralLine](../../../../samples/snippets/cpp/VS_Snippets_Wpf/ShapesProcedural/CPP/ShapesProcedural.cpp#shapesproceduralline)]\n[!code-csharp[shapesprocedural#ShapesProceduralLine](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ShapesProcedural/Csharp/ShapesProcedural.cs#shapesproceduralline)]\n[!code-vb[shapesprocedural#ShapesProceduralLine](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ShapesProcedural/VisualBasic/ShapesProceduralVB.vb#shapesproceduralline)]"},{"content":"The following image shows the rendered                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Line&gt;</ph>.","pos":[3886,3976],"source":"The following image shows the rendered                  <xref:System.Windows.Shapes.Line>."},{"pos":[3983,4099],"content":"<bpt id=\"p1\">![</bpt>Line illustration<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-line2.gif \"</bpt>shape_ovw_line2<ept id=\"p2\">\")</ept>","source":"![Line illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-line2.gif \"shape_ovw_line2\")"},{"content":"Although the                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Line&gt;</ph> class does provide a                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape.Fill%2A&gt;</ph> property, setting it has no effect because a                  <ph id=\"ph3\">&lt;xref:System.Windows.Shapes.Line&gt;</ph> has no area.","pos":[4106,4359],"source":"Although the                  <xref:System.Windows.Shapes.Line> class does provide a                  <xref:System.Windows.Shapes.Shape.Fill%2A> property, setting it has no effect because a                  <xref:System.Windows.Shapes.Line> has no area."},{"content":"Another common shape is the                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.","pos":[4366,4448],"source":"Another common shape is the                  <xref:System.Windows.Shapes.Ellipse>."},{"content":"Create an                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph> by defining the shape's                  <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and                  <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> properties.","pos":[4450,4684],"source":"  Create an                  <xref:System.Windows.Shapes.Ellipse> by defining the shape's                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> properties."},{"content":"To draw a circle, specify an                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph> whose                  <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and                  <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> values are equal.","pos":[4685,4926],"source":" To draw a circle, specify an                  <xref:System.Windows.Shapes.Ellipse> whose                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> values are equal."},{"pos":[4933,5066],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ShapeOverviews#ShapesOVW1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ShapeOverviews/CS/Window1.xaml#shapesovw1)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[ShapeOverviews#ShapesOVW1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ShapeOverviews/CS/Window1.xaml#shapesovw1)]"},{"pos":[5073,5631],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>brushesmiscsnippets_procedural_snip#SetBackgroundColorOfShapeCodeExampleWholePage<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/SetBackgroundColorOfShapeExample.cs#setbackgroundcolorofshapecodeexamplewholepage)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>brushesmiscsnippets_procedural_snip#SetBackgroundColorOfShapeCodeExampleWholePage<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/setbackgroundcolorofshapeexample.vb#setbackgroundcolorofshapecodeexamplewholepage)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[brushesmiscsnippets_procedural_snip#SetBackgroundColorOfShapeCodeExampleWholePage](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/SetBackgroundColorOfShapeExample.cs#setbackgroundcolorofshapecodeexamplewholepage)]\n[!code-vb[brushesmiscsnippets_procedural_snip#SetBackgroundColorOfShapeCodeExampleWholePage](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/setbackgroundcolorofshapeexample.vb#setbackgroundcolorofshapecodeexamplewholepage)]"},{"content":"The following image shows an example of a rendered                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.","pos":[5638,5743],"source":"The following image shows an example of a rendered                  <xref:System.Windows.Shapes.Ellipse>."},{"pos":[5750,5875],"content":"<bpt id=\"p1\">![</bpt>Ellipse illustration<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-ellipse2.png \"</bpt>shape_ovw_ellipse2<ept id=\"p2\">\")</ept>","source":"![Ellipse illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-ellipse2.png \"shape_ovw_ellipse2\")"},{"pos":[5908,5934],"content":"Using Paths and Geometries","linkify":"Using Paths and Geometries","nodes":[{"content":"Using Paths and Geometries","pos":[0,26]}]},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path&gt;</ph> class enables you to draw curves and complex shapes.","pos":[5938,6045],"source":"The                  <xref:System.Windows.Shapes.Path> class enables you to draw curves and complex shapes."},{"content":"These curves and shapes are described using                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects.","pos":[6046,6152],"source":" These curves and shapes are described using                  <xref:System.Windows.Media.Geometry> objects."},{"content":"To use a                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path&gt;</ph>, you create a                  <ph id=\"ph2\">&lt;xref:System.Windows.Media.Geometry&gt;</ph> and use it to set the                  <ph id=\"ph3\">&lt;xref:System.Windows.Shapes.Path&gt;</ph> object's                  <ph id=\"ph4\">&lt;xref:System.Windows.Shapes.Path.Data%2A&gt;</ph> property.","pos":[6153,6431],"source":" To use a                  <xref:System.Windows.Shapes.Path>, you create a                  <xref:System.Windows.Media.Geometry> and use it to set the                  <xref:System.Windows.Shapes.Path> object's                  <xref:System.Windows.Shapes.Path.Data%2A> property."},{"content":"There are a variety of                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects to choose from.","pos":[6438,6538],"source":"There are a variety of                  <xref:System.Windows.Media.Geometry> objects to choose from."},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.LineGeometry&gt;</ph>,                  <ph id=\"ph2\">&lt;xref:System.Windows.Media.RectangleGeometry&gt;</ph>, and                  <ph id=\"ph3\">&lt;xref:System.Windows.Media.EllipseGeometry&gt;</ph> classes describe relatively simple shapes.","pos":[6539,6773],"source":" The                  <xref:System.Windows.Media.LineGeometry>,                  <xref:System.Windows.Media.RectangleGeometry>, and                  <xref:System.Windows.Media.EllipseGeometry> classes describe relatively simple shapes."},{"content":"To create more complex shapes or create curves, use a                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph>.","pos":[6791,6903],"source":"                  To create more complex shapes or create curves, use a                  <xref:System.Windows.Media.PathGeometry>."},{"pos":[6944,6973],"content":"PathGeometry and PathSegments","linkify":"PathGeometry and PathSegments","nodes":[{"content":"PathGeometry and PathSegments","pos":[0,29]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> objects are comprised of one or more                          <ph id=\"ph2\">&lt;xref:System.Windows.Media.PathFigure&gt;</ph> objects; each                          <ph id=\"ph3\">&lt;xref:System.Windows.Media.PathFigure&gt;</ph> represents a different \"figure\" or shape.","pos":[6977,7238],"source":"<xref:System.Windows.Media.PathGeometry> objects are comprised of one or more                          <xref:System.Windows.Media.PathFigure> objects; each                          <xref:System.Windows.Media.PathFigure> represents a different \"figure\" or shape."},{"content":"Each                          <ph id=\"ph1\">&lt;xref:System.Windows.Media.PathFigure&gt;</ph> is itself comprised of one or more                          <ph id=\"ph2\">&lt;xref:System.Windows.Media.PathSegment&gt;</ph> objects, each representing a connected portion of the figure or shape.","pos":[7239,7478],"source":" Each                          <xref:System.Windows.Media.PathFigure> is itself comprised of one or more                          <xref:System.Windows.Media.PathSegment> objects, each representing a connected portion of the figure or shape."},{"content":"Segment types include the following:                          <ph id=\"ph1\">&lt;xref:System.Windows.Media.LineSegment&gt;</ph>,                          <ph id=\"ph2\">&lt;xref:System.Windows.Media.BezierSegment&gt;</ph>, and                          <ph id=\"ph3\">&lt;xref:System.Windows.Media.ArcSegment&gt;</ph>.","pos":[7479,7718],"source":" Segment types include the following:                          <xref:System.Windows.Media.LineSegment>,                          <xref:System.Windows.Media.BezierSegment>, and                          <xref:System.Windows.Media.ArcSegment>."},{"content":"In the following example, a                          <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path&gt;</ph> is used to draw a quadratic Bezier curve.","pos":[7725,7853],"source":"In the following example, a                          <xref:System.Windows.Shapes.Path> is used to draw a quadratic Bezier curve."},{"pos":[7860,7989],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>geometrysample#34<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/GeometrySample/CS/pathgeometryexample.xaml#34)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[geometrysample#34](../../../../samples/snippets/csharp/VS_Snippets_Wpf/GeometrySample/CS/pathgeometryexample.xaml#34)]"},{"content":"The following image shows the rendered shape.","pos":[7996,8041]},{"pos":[8048,8164],"content":"<bpt id=\"p1\">![</bpt>Path illustration<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-path2.gif \"</bpt>shape_ovw_path2<ept id=\"p2\">\")</ept>","source":"![Path illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-path2.gif \"shape_ovw_path2\")"},{"pos":[8171,8475],"content":"For more information about                          <ph id=\"ph1\">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> and the other                          <ph id=\"ph2\">&lt;xref:System.Windows.Media.Geometry&gt;</ph> classes, see the                          <bpt id=\"p1\">[</bpt>Geometry Overview<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>.","source":"For more information about                          <xref:System.Windows.Media.PathGeometry> and the other                          <xref:System.Windows.Media.Geometry> classes, see the                          [Geometry Overview](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)."},{"pos":[8518,8541],"content":"XAML Abbreviated Syntax","linkify":"XAML Abbreviated Syntax","nodes":[{"content":"XAML Abbreviated Syntax","pos":[0,23]}]},{"content":"In                          <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>, you may also use a special abbreviated syntax to describe a                          <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Path&gt;</ph>.","pos":[8545,8763],"source":"In                          [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)], you may also use a special abbreviated syntax to describe a                          <xref:System.Windows.Shapes.Path>."},{"content":"In the following example, abbreviated syntax is used to draw a complex shape.","pos":[8764,8841]},{"content":"The following image shows a rendered                          <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path&gt;</ph>.","pos":[8984,9080],"source":"The following image shows a rendered                          <xref:System.Windows.Shapes.Path>."},{"pos":[9087,9201],"content":"<bpt id=\"p1\">![</bpt>Path illustration<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-path.PNG \"</bpt>shape_ovw_path<ept id=\"p2\">\")</ept>","source":"![Path illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-path.PNG \"shape_ovw_path\")"},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path.Data%2A&gt;</ph> attribute string begins with the \"moveto\" command, indicated by M, which establishes a start point for the path in the coordinate system of the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.","pos":[9208,9486],"source":"The                          <xref:System.Windows.Shapes.Path.Data%2A> attribute string begins with the \"moveto\" command, indicated by M, which establishes a start point for the path in the coordinate system of the                          <xref:System.Windows.Controls.Canvas>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path&gt;</ph> data parameters are case-sensitive.","pos":[9512,9581],"source":"                          <xref:System.Windows.Shapes.Path> data parameters are case-sensitive."},{"content":"The capital                          M                          indicates an absolute location for the new current point.","pos":[9582,9703]},{"content":"A lowercase m would indicate relative coordinates.","pos":[9704,9754]},{"content":"The first segment is a cubic Bezier curve beginning at (100,200) and ending at (400,175), drawn using the two control points (100,25) and (400,350).","pos":[9755,9903]},{"content":"This segment is indicated by the C command in the                          <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path.Data%2A&gt;</ph> attribute string.","pos":[9904,10038],"source":" This segment is indicated by the C command in the                          <xref:System.Windows.Shapes.Path.Data%2A> attribute string."},{"content":"Again, the capital C indicates an absolute path; the lowercase c would indicate a relative path.","pos":[10039,10135]},{"content":"The second segment begins with an absolute horizontal \"lineto\" command H, which specifies a line drawn from the preceding subpath's endpoint (400,175) to a new endpoint (280,175).","pos":[10142,10321]},{"content":"Because it is a horizontal \"lineto\" command, the value specified is an                          <bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>-coordinate.","pos":[10322,10433],"source":" Because it is a horizontal \"lineto\" command, the value specified is an                          *x*-coordinate."},{"pos":[10440,10726],"content":"For the complete path syntax, see the                          <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Path.Data%2A&gt;</ph> reference and                          <bpt id=\"p1\">[</bpt>Create a Shape by Using a PathGeometry<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/how-to-create-a-shape-by-using-a-pathgeometry.md)</ept>.","source":"For the complete path syntax, see the                          <xref:System.Windows.Shapes.Path.Data%2A> reference and                          [Create a Shape by Using a PathGeometry](../../../../docs/framework/wpf/graphics-multimedia/how-to-create-a-shape-by-using-a-pathgeometry.md)."},{"pos":[10763,10778],"content":"Painting Shapes","linkify":"Painting Shapes","nodes":[{"content":"Painting Shapes","pos":[0,15]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush&gt;</ph> objects are used to paint a shape's                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape.Stroke%2A&gt;</ph> and                  <ph id=\"ph3\">&lt;xref:System.Windows.Shapes.Shape.Fill%2A&gt;</ph>.","pos":[10782,10978],"source":"<xref:System.Windows.Media.Brush> objects are used to paint a shape's                  <xref:System.Windows.Shapes.Shape.Stroke%2A> and                  <xref:System.Windows.Shapes.Shape.Fill%2A>."},{"content":"In the following example, the stroke and fill of an                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph> are specified.","pos":[10979,11099],"source":" In the following example, the stroke and fill of an                  <xref:System.Windows.Shapes.Ellipse> are specified."},{"content":"Note that valid input for brush properties can be either a keyword or hexadecimal color value.","pos":[11100,11194]},{"content":"For more information about available color                  keywords                 , see properties of the                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.Colors&gt;</ph> class in the                  <ph id=\"ph2\">&lt;xref:System.Windows.Media&gt;</ph> namespace                 .","pos":[11195,11441],"source":" For more information about available color                  keywords                 , see properties of the                  <xref:System.Windows.Media.Colors> class in the                  <xref:System.Windows.Media> namespace                 ."},{"content":"The following image shows the rendered                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.","pos":[11700,11793],"source":"The following image shows the rendered                  <xref:System.Windows.Shapes.Ellipse>."},{"pos":[11800,11921],"content":"<bpt id=\"p1\">![</bpt>An ellipse<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-ellipsefill.PNG \"</bpt>shape_ovw_ellipsefill<ept id=\"p2\">\")</ept>","source":"![An ellipse](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-ellipsefill.PNG \"shape_ovw_ellipsefill\")"},{"content":"Alternatively, you can use                  property element syntax                  to explicitly create a                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> object to paint the shape with a solid color.","pos":[11928,12142],"source":"Alternatively, you can use                  property element syntax                  to explicitly create a                  <xref:System.Windows.Media.SolidColorBrush> object to paint the shape with a solid color."},{"content":"The following illustration shows the rendered shape.","pos":[12687,12739]},{"pos":[12746,12893],"content":"<bpt id=\"p1\">![</bpt>SolidColorBrush illustration<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-solidcolorbrush.PNG \"</bpt>shape_ovw_solidcolorbrush<ept id=\"p2\">\")</ept>","source":"![SolidColorBrush illustration](../../../../docs/framework/wpf/graphics-multimedia/media/shape-ovw-solidcolorbrush.PNG \"shape_ovw_solidcolorbrush\")"},{"content":"You can also paint a shape's stroke or fill with gradients, images, patterns, and more.","pos":[12900,12987]},{"content":"For more information, see the                  <bpt id=\"p1\">[</bpt>Painting with Solid Colors and Gradients Overview<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)</ept>.","pos":[12988,13192],"source":" For more information, see the                  [Painting with Solid Colors and Gradients Overview](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)."},{"pos":[13244,13262],"content":"Stretchable Shapes","linkify":"Stretchable Shapes","nodes":[{"content":"Stretchable Shapes","pos":[0,18]}]},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Line&gt;</ph>,                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Path&gt;</ph>,                  <ph id=\"ph3\">&lt;xref:System.Windows.Shapes.Polygon&gt;</ph>,                  <ph id=\"ph4\">&lt;xref:System.Windows.Shapes.Polyline&gt;</ph>, and                  <ph id=\"ph5\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> classes all have a                  <ph id=\"ph6\">&lt;xref:System.Windows.Shapes.Shape.Stretch%2A&gt;</ph> property.","pos":[13266,13636],"source":"The                  <xref:System.Windows.Shapes.Line>,                  <xref:System.Windows.Shapes.Path>,                  <xref:System.Windows.Shapes.Polygon>,                  <xref:System.Windows.Shapes.Polyline>, and                  <xref:System.Windows.Shapes.Rectangle> classes all have a                  <xref:System.Windows.Shapes.Shape.Stretch%2A> property."},{"content":"This property determines how a                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's contents (the shape to be drawn) is stretched to fill the                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's layout space.","pos":[13637,13861],"source":" This property determines how a                  <xref:System.Windows.Shapes.Shape> object's contents (the shape to be drawn) is stretched to fill the                  <xref:System.Windows.Shapes.Shape> object's layout space."},{"content":"A                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's layout space is the amount of space the                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> is allocated by the layout system, because of either an explicit                  <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and                  <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> setting or because of its                  <ph id=\"ph5\">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> and                  <ph id=\"ph6\">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph>settings                 .","pos":[13862,14428],"source":" A                  <xref:System.Windows.Shapes.Shape> object's layout space is the amount of space the                  <xref:System.Windows.Shapes.Shape> is allocated by the layout system, because of either an explicit                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> setting or because of its                  <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and                  <xref:System.Windows.FrameworkElement.VerticalAlignment%2A>settings                 ."},{"content":"For additional information on layout in Windows Presentation Foundation, see                  <bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/layout.md)</ept> overview.","pos":[14446,14609],"source":"                  For additional information on layout in Windows Presentation Foundation, see                  [Layout](../../../../docs/framework/wpf/advanced/layout.md) overview."},{"content":"The Stretch property takes one of the following values:","pos":[14616,14671]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Stretch&gt;</ph>: The                          <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's contents are not stretched.","pos":[14681,14818],"source":"<xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are not stretched."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Stretch&gt;</ph>: The                          <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's contents are stretched to fill its layout space.","pos":[14828,14986],"source":"<xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are stretched to fill its layout space."},{"content":"Aspect ratio is not preserved.","pos":[14988,15018]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Stretch&gt;</ph>: The                          <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's contents are stretched as much as possible to fill its layout space while preserving its original aspect ratio.","pos":[15028,15249],"source":"<xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are stretched as much as possible to fill its layout space while preserving its original aspect ratio."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Stretch&gt;</ph>: The                          <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's contents are stretched to completely fill its layout space while preserving its original aspect ratio.","pos":[15259,15471],"source":"<xref:System.Windows.Media.Stretch>: The                          <xref:System.Windows.Shapes.Shape> object's contents are stretched to completely fill its layout space while preserving its original aspect ratio."},{"content":"Note that, when a                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's contents are stretched, the                  <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> object's outline is painted after the stretching.","pos":[15478,15686],"source":"Note that, when a                  <xref:System.Windows.Shapes.Shape> object's contents are stretched, the                  <xref:System.Windows.Shapes.Shape> object's outline is painted after the stretching."},{"content":"In the following example, a                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Polygon&gt;</ph> is used to draw a very small triangle from (0,0) to (0,1) to (1,1).","pos":[15693,15842],"source":"In the following example, a                  <xref:System.Windows.Shapes.Polygon> is used to draw a very small triangle from (0,0) to (0,1) to (1,1)."},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Polygon&gt;</ph> object's                  <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and                  <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> are set to 100, and its stretch property is set to Fill.","pos":[15843,16101],"source":" The                  <xref:System.Windows.Shapes.Polygon> object's                  <xref:System.Windows.FrameworkElement.Width%2A> and                  <xref:System.Windows.FrameworkElement.Height%2A> are set to 100, and its stretch property is set to Fill."},{"content":"As a result, the                  <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Polygon&gt;</ph> object's contents (the triangle) are stretched to fill the larger space.","pos":[16102,16245],"source":" As a result, the                  <xref:System.Windows.Shapes.Polygon> object's contents (the triangle) are stretched to fill the larger space."},{"pos":[16940,16959],"content":"Transforming Shapes","linkify":"Transforming Shapes","nodes":[{"content":"Transforming Shapes","pos":[0,19]}]},{"content":"The                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.Transform&gt;</ph> class provides the means to transform shapes in a two-dimensional plane.","pos":[16963,17094],"source":"The                  <xref:System.Windows.Media.Transform> class provides the means to transform shapes in a two-dimensional plane."},{"content":"The different types of transformation include rotation (                 <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph>), scale (                 <ph id=\"ph2\">&lt;xref:System.Windows.Media.ScaleTransform&gt;</ph>), skew (                 <ph id=\"ph3\">&lt;xref:System.Windows.Media.SkewTransform&gt;</ph>), and translation (                 <ph id=\"ph4\">&lt;xref:System.Windows.Media.TranslateTransform&gt;</ph>).","pos":[17096,17433],"source":"  The different types of transformation include rotation (                 <xref:System.Windows.Media.RotateTransform>), scale (                 <xref:System.Windows.Media.ScaleTransform>), skew (                 <xref:System.Windows.Media.SkewTransform>), and translation (                 <xref:System.Windows.Media.TranslateTransform>)."},{"content":"A common transform to apply to a shape is a rotation.","pos":[17440,17493]},{"content":"To rotate a shape, create a                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> and specify its                  <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform.Angle%2A&gt;</ph>.","pos":[17495,17670],"source":"  To rotate a shape, create a                  <xref:System.Windows.Media.RotateTransform> and specify its                  <xref:System.Windows.Media.RotateTransform.Angle%2A>."},{"content":"An                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform.Angle%2A&gt;</ph> of 45 rotates the element 45 degrees clockwise; an angle of 90 rotates the element 90 degrees clockwise; and so on.","pos":[17671,17859],"source":" An                  <xref:System.Windows.Media.RotateTransform.Angle%2A> of 45 rotates the element 45 degrees clockwise; an angle of 90 rotates the element 90 degrees clockwise; and so on."},{"content":"Set the                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and                  <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> properties if you want to control the point about which the element is rotated.","pos":[17860,18095],"source":" Set the                  <xref:System.Windows.Media.RotateTransform.CenterX%2A> and                  <xref:System.Windows.Media.RotateTransform.CenterY%2A> properties if you want to control the point about which the element is rotated."},{"content":"These property values are expressed in the coordinate space of the element being transformed.","pos":[18096,18189]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and                  <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> have default values of zero.","pos":[18207,18366],"source":"                  <xref:System.Windows.Media.RotateTransform.CenterX%2A> and                  <xref:System.Windows.Media.RotateTransform.CenterY%2A> have default values of zero."},{"content":"Finally, apply the                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to the element.","pos":[18367,18462],"source":" Finally, apply the                  <xref:System.Windows.Media.RotateTransform> to the element."},{"content":"If you don't want the transform to affect layout, set the shape's                  <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph>property                 .","pos":[18463,18622],"source":" If you don't want the transform to affect layout, set the shape's                  <xref:System.Windows.UIElement.RenderTransform%2A>property                 ."},{"content":"In the following example, a                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> is used to rotate a shape 45 degrees about the shape's top left corner (0,0).","pos":[18629,18795],"source":"In the following example, a                  <xref:System.Windows.Media.RotateTransform> is used to rotate a shape 45 degrees about the shape's top left corner (0,0)."},{"pos":[18802,18938],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>transformssample#14<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/transformsSample/CS/RotateTransformExample.xaml#14)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[transformssample#14](../../../../samples/snippets/csharp/VS_Snippets_Wpf/transformsSample/CS/RotateTransformExample.xaml#14)]"},{"content":"In the next example, another shape is rotated 45 degrees, but this time it's rotated about the point (25,50).","pos":[18945,19054]},{"pos":[19061,19197],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>transformssample#15<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/transformsSample/CS/RotateTransformExample.xaml#15)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[transformssample#15](../../../../samples/snippets/csharp/VS_Snippets_Wpf/transformsSample/CS/RotateTransformExample.xaml#15)]"},{"content":"The following illustration shows the results of applying the two transforms.","pos":[19204,19280]},{"pos":[19287,19488],"content":"<bpt id=\"p1\">![</bpt>45 degree rotations with different center points<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/graphics-multimedia/media/wcpsdk-graphicsmm-rotatetransform45degrees.gif \"</bpt>wcpsdk_graphicsmm_rotatetransform45degrees<ept id=\"p2\">\")</ept>","source":"![45 degree rotations with different center points](../../../../docs/framework/wpf/graphics-multimedia/media/wcpsdk-graphicsmm-rotatetransform45degrees.gif \"wcpsdk_graphicsmm_rotatetransform45degrees\")"},{"content":"In the previous examples, a single transform was applied to each shape object.","pos":[19495,19573]},{"content":"To apply multiple transforms to a shape (or any other UI element), use a                  <ph id=\"ph1\">&lt;xref:System.Windows.Media.TransformGroup&gt;</ph>.","pos":[19574,19707],"source":" To apply multiple transforms to a shape (or any other UI element), use a                  <xref:System.Windows.Media.TransformGroup>."},{"pos":[19716,19724],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>2D Graphics and Imaging<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/optimizing-performance-2d-graphics-and-imaging.md)</ept><ph id=\"ph1\"> </ph>","pos":[19728,19845],"source":"[2D Graphics and Imaging](../../../../docs/framework/wpf/advanced/optimizing-performance-2d-graphics-and-imaging.md) "},{"content":"<bpt id=\"p1\">[</bpt>Painting with Solid Colors and Gradients Overview<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[19849,20006],"source":"[Painting with Solid Colors and Gradients Overview](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Geometry Overview<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[20010,20103],"source":"[Geometry Overview](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: My First WPF Desktop Application<ept id=\"p1\">](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept><ph id=\"ph1\"> </ph>","pos":[20107,20251],"source":"[Walkthrough: My First WPF Desktop Application](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md) "},{"content":"<bpt id=\"p1\">[</bpt>Animation Overview<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)</ept>","pos":[20255,20349],"source":"[Animation Overview](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)"}]}