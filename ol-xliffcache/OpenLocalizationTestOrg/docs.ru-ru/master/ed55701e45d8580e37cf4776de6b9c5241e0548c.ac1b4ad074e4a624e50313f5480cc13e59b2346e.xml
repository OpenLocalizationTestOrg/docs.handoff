{"content":"---\ntitle: \"<bindingExtensions>\"\nms.date: \"03/30/2017\"\nms.assetid: 8373f94d-d095-486f-8f1e-4ac2f72b58c7\n---\n# \\<bindingExtensions>\nThis section enables the use of a user defined binding from a machine or application configuration file. You can add a user defined binding to this collection by using the `add` keyword, and setting the `type` attribute of the element to a user defined binding, as well as the `name` attribute to the name of the user defined binding.  \n  \n Binding extensions enable the user to create user-defined bindings for use as part an endpoint configuration. Programmatically, a binding extension is a type that implements the abstract class <xref:System.ServiceModel.Channels.Binding>.  \n  \n The following example uses the `add` element, as well as the `name` attribute to add a binding extension to the `bindingElementExtensions` section of the configuration file.  \n  \n```xml  \n<system.serviceModel>\n  <extensions>\n    <bindingExtensions>\n      <add name=\"MyBinding\"\n           type=\"Microsoft.ServiceModel.Samples.MyBinding, MyBinding,\n                 Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />\n    </bindingExtensions>\n  </extensions>\n</system.serviceModel>\n```  \n  \n To add configuration abilities to the element, the user needs to write and register a `bindingSection` element. For more information on this, see the <xref:System.Configuration> documentation.  \n  \n After the element and its configuration type are defined, the extension can be used as part of an endpoint as shown in the following example.  \n  \n```xml  \n<services>\n  <service name=\"MyService\">\n    <endpoint address=\"myAddress\"\n              binding=\"MyBinding\" />\n  </service>\n</services>\n```  \n  \n## See also\n\n- [Extending Bindings](../../../../../docs/framework/wcf/extending/extending-bindings.md)\n","nodes":[{"pos":[4,103],"embed":true,"restype":"x-metadata","content":"title: \"<bindingExtensions>\"\nms.date: \"03/30/2017\"\nms.assetid: 8373f94d-d095-486f-8f1e-4ac2f72b58c7","nodes":[{"content":"<bindingExtensions>","nodes":[],"path":["title"],"nosxs":false}],"yml":true},{"pos":[110,130],"content":"\\<bindingExtensions>","linkify":"\\<bindingExtensions>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>bindingExtensions&gt;","pos":[0,20],"source":"\\<bindingExtensions>"}]},{"content":"This section enables the use of a user defined binding from a machine or application configuration file.","pos":[131,235]},{"content":"You can add a user defined binding to this collection by using the <ph id=\"ph1\">`add`</ph> keyword, and setting the <ph id=\"ph2\">`type`</ph> attribute of the element to a user defined binding, as well as the <ph id=\"ph3\">`name`</ph> attribute to the name of the user defined binding.","pos":[236,465],"source":" You can add a user defined binding to this collection by using the `add` keyword, and setting the `type` attribute of the element to a user defined binding, as well as the `name` attribute to the name of the user defined binding."},{"content":"Binding extensions enable the user to create user-defined bindings for use as part an endpoint configuration.","pos":[472,581]},{"content":"Programmatically, a binding extension is a type that implements the abstract class <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph>.","pos":[582,709],"source":" Programmatically, a binding extension is a type that implements the abstract class <xref:System.ServiceModel.Channels.Binding>."},{"pos":[716,889],"content":"The following example uses the <ph id=\"ph1\">`add`</ph> element, as well as the <ph id=\"ph2\">`name`</ph> attribute to add a binding extension to the <ph id=\"ph3\">`bindingElementExtensions`</ph> section of the configuration file.","source":"The following example uses the `add` element, as well as the `name` attribute to add a binding extension to the `bindingElementExtensions` section of the configuration file."},{"content":"To add configuration abilities to the element, the user needs to write and register a <ph id=\"ph1\">`bindingSection`</ph> element.","pos":[1212,1323],"source":"To add configuration abilities to the element, the user needs to write and register a `bindingSection` element."},{"content":"For more information on this, see the <ph id=\"ph1\">&lt;xref:System.Configuration&gt;</ph> documentation.","pos":[1324,1404],"source":" For more information on this, see the <xref:System.Configuration> documentation."},{"content":"After the element and its configuration type are defined, the extension can be used as part of an endpoint as shown in the following example.","pos":[1411,1552]},{"pos":[1715,1723],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1727,1814],"content":"<bpt id=\"p1\">[</bpt>Extending Bindings<ept id=\"p1\">](../../../../../docs/framework/wcf/extending/extending-bindings.md)</ept>","source":"[Extending Bindings](../../../../../docs/framework/wcf/extending/extending-bindings.md)"}]}