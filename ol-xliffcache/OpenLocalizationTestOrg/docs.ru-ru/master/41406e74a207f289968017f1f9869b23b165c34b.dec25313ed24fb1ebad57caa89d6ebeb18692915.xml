{"content":"---\ntitle: \"Types - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"types [C#]\"\n  - \"data types [C#], type system\"\nms.assetid: 16b984df-f417-4e02-b1e6-4589d4a614ea\n---\n# Types (C# Reference)\n\nThe C# typing system contains the following categories:\n\n- [Value types](value-types.md)\n\n- [Reference types](reference-types.md)\n\n- [Pointer types](../../programming-guide/unsafe-code-pointers/pointer-types.md)\n\n Variables that are value types store data, and those that are reference types store references to the actual data. Instances of reference types are also referred to as objects. Pointer types can be used only in [unsafe](unsafe.md) mode.\n\n It's possible to convert a value type to a reference type, and back again to a value type, by using [boxing and unboxing](../../../csharp/programming-guide/types/boxing-and-unboxing.md). With the exception of a boxed value type, you cannot convert a reference type to a value type.\n\n This section also introduces [void](void.md).\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Reference Tables for Types](reference-tables-for-types.md)\n- [Casting and Type Conversions](../../programming-guide/types/casting-and-type-conversions.md)\n- [Types](../../programming-guide/types/index.md)\n","nodes":[{"pos":[4,197],"embed":true,"restype":"x-metadata","content":"title: \"Types - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"types [C#]\"\n  - \"data types [C#], type system\"\nms.assetid: 16b984df-f417-4e02-b1e6-4589d4a614ea","nodes":[{"content":"Types - C# Reference","nodes":[{"pos":[0,20],"content":"Types - C# Reference","nodes":[{"content":"Types - C# Reference","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[204,224],"content":"Types (C# Reference)","linkify":"Types (C# Reference)","nodes":[{"content":"Types (C# Reference)","pos":[0,20]}]},{"content":"The C# typing system contains the following categories:","pos":[226,281]},{"pos":[285,314],"content":"<bpt id=\"p1\">[</bpt>Value types<ept id=\"p1\">](value-types.md)</ept>","source":"[Value types](value-types.md)"},{"pos":[318,355],"content":"<bpt id=\"p1\">[</bpt>Reference types<ept id=\"p1\">](reference-types.md)</ept>","source":"[Reference types](reference-types.md)"},{"pos":[359,437],"content":"<bpt id=\"p1\">[</bpt>Pointer types<ept id=\"p1\">](../../programming-guide/unsafe-code-pointers/pointer-types.md)</ept>","source":"[Pointer types](../../programming-guide/unsafe-code-pointers/pointer-types.md)"},{"content":"Variables that are value types store data, and those that are reference types store references to the actual data.","pos":[440,554]},{"content":"Instances of reference types are also referred to as objects.","pos":[555,616]},{"content":"Pointer types can be used only in <bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](unsafe.md)</ept> mode.","pos":[617,676],"source":" Pointer types can be used only in [unsafe](unsafe.md) mode."},{"content":"It's possible to convert a value type to a reference type, and back again to a value type, by using <bpt id=\"p1\">[</bpt>boxing and unboxing<ept id=\"p1\">](../../../csharp/programming-guide/types/boxing-and-unboxing.md)</ept>.","pos":[679,865],"source":"It's possible to convert a value type to a reference type, and back again to a value type, by using [boxing and unboxing](../../../csharp/programming-guide/types/boxing-and-unboxing.md)."},{"content":"With the exception of a boxed value type, you cannot convert a reference type to a value type.","pos":[866,960]},{"pos":[963,1008],"content":"This section also introduces <bpt id=\"p1\">[</bpt>void<ept id=\"p1\">](void.md)</ept>.","source":"This section also introduces [void](void.md)."},{"pos":[1013,1021],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1025,1052],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1055,1111],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1114,1137],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1140,1199],"content":"<bpt id=\"p1\">[</bpt>Reference Tables for Types<ept id=\"p1\">](reference-tables-for-types.md)</ept>","source":"[Reference Tables for Types](reference-tables-for-types.md)"},{"pos":[1202,1295],"content":"<bpt id=\"p1\">[</bpt>Casting and Type Conversions<ept id=\"p1\">](../../programming-guide/types/casting-and-type-conversions.md)</ept>","source":"[Casting and Type Conversions](../../programming-guide/types/casting-and-type-conversions.md)"},{"pos":[1298,1345],"content":"<bpt id=\"p1\">[</bpt>Types<ept id=\"p1\">](../../programming-guide/types/index.md)</ept>","source":"[Types](../../programming-guide/types/index.md)"}]}