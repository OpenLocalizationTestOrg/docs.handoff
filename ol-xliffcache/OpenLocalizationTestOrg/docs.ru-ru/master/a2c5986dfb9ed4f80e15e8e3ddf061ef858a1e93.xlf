<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2c5986dfb9ed4f80e15e8e3ddf061ef858a1e93</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\getting-started\introduction-to-the-csharp-language-and-the-net-framework.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8359db4a84d2c76189206af352d05e617b8ff69</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c59e549b0c6651d6870a348b719f19f8fdffffd6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Introduction to the C# Language and the .NET Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Introduction to the C# Language and the .NET Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>C# is an elegant and type-safe object-oriented language that enables developers to build a variety of secure and robust applications that run on the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use C# to create Windows client applications, XML Web services, distributed components, client-server applications, database applications, and much, much more.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Visual C# provides an advanced code editor, convenient user interface designers, integrated debugger, and many other tools to make it easier to develop applications based on the C# language and the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[csprcs](../../csharp/includes/csprcs_md.md)]</ph> documentation assumes that you have an understanding of basic programming concepts.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you are a complete beginner, you might want to explore <ph id="ph1">[!INCLUDE[csprcsxpr](../../csharp/getting-started/includes/csprcsxpr_md.md)]</ph>, which is available on the Web.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can also take advantage of books and Web resources about C# to learn practical programming skills.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>C# Language</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>C# syntax is highly expressive, yet it is also simple and easy to learn.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The curly-brace syntax of C# will be instantly recognizable to anyone familiar with C, C++ or Java.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Developers who know any of these languages are typically able to begin to work productively in C# within a very short time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>C# syntax simplifies many of the complexities of C++ and provides powerful features such as nullable value types, enumerations, delegates, lambda expressions and direct memory access, which are not found in Java.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>C# supports generic methods and types, which provide increased type safety and performance, and iterators, which enable implementers of collection classes to define custom iteration behaviors that are simple to use by client code.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbteclinqext](../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph> expressions make the strongly-typed query a first-class language construct.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>As an object-oriented language, C# supports the concepts of encapsulation, inheritance, and polymorphism.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>All variables and methods, including the <ph id="ph1">`Main`</ph> method, the application's entry point, are encapsulated within class definitions.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A class may inherit directly from one parent class, but it may implement any number of interfaces.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Methods that override virtual methods in a parent class require the <ph id="ph1">`override`</ph> keyword as a way to avoid accidental redefinition.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In C#, a struct is like a lightweight class; it is a stack-allocated type that can implement interfaces but does not support inheritance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition to these basic object-oriented principles, C# makes it easy to develop software components through several innovative language constructs, including the following:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Encapsulated method signatures called <bpt id="p1">*</bpt>delegates<ept id="p1">*</ept>, which enable type-safe event notifications.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Properties, which serve as accessors for private member variables.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Attributes, which provide declarative metadata about types at run time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Inline XML documentation comments.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbteclinqext](../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph> which provides built-in query capabilities across a variety of data sources.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you have to interact with other Windows software such as COM objects or native Win32 DLLs, you can do this in C# through a process called "Interop."</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Interop enables C# programs to do almost anything that a native C++ application can do.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C# even supports pointers and the concept of "unsafe" code for those cases in which direct memory access is absolutely critical.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The C# build process is simple compared to C and C++ and more flexible than in Java.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>There are no separate header files, and no requirement that methods and types be declared in a particular order.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A C# source file may define any number of classes, structs, interfaces, and events.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following are additional C# resources:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For a good general introduction to the language, see Chapter 1 of the <bpt id="p1">[</bpt>C# Language Specification<ept id="p1">](../../csharp/language-reference/language-specification.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For detailed information about specific aspects of the C# language, see the <bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../csharp/language-reference/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">[!INCLUDE[vbteclinq](../../csharp/includes/vbteclinq_md.md)]</ph>, see <bpt id="p1">[</bpt>LINQ (Language-Integrated Query)<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To find the latest articles and resources from the Visual C# team, see the <bpt id="p1">[</bpt>Visual C# Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=47811)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>.NET Framework Platform Architecture</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>C# programs run on the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>, an integral component of Windows that includes a virtual execution system called the common language runtime (CLR) and a unified set of class libraries.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The CLR is the commercial implementation by Microsoft of the common language infrastructure (CLI), an international standard that is the basis for creating execution and development environments in which languages and libraries work together seamlessly.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Source code written in C# is compiled into an intermediate language (IL) that conforms to the CLI specification.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The IL code and resources, such as bitmaps and strings, are stored on disk in an executable file called an assembly, typically with an extension of .exe or .dll.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An assembly contains a manifest that provides information about the assembly's types, version, culture, and security requirements.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the C# program is executed, the assembly is loaded into the CLR, which might take various actions based on the information in the manifest.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Then, if the security requirements are met, the CLR performs just in time (JIT) compilation to convert the IL code to native machine instructions.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The CLR also provides other services related to automatic garbage collection, exception handling, and resource management.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Code that is executed by the CLR is sometimes referred to as "managed code," in contrast to "unmanaged code" which is compiled into native machine language that targets a specific system.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the compile-time and run-time relationships of C# source code files, the .NET Framework class libraries, assemblies, and the CLR.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>From C&amp;#35; source code to machine execution<ept id="p1">]</ept><bpt id="p2">(../../csharp/getting-started/media/netarchitecture.png "</bpt>NETarchitecture<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Language interoperability is a key feature of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Because the IL code produced by the C# compiler conforms to the Common Type Specification (CTS), IL code generated from C# can interact with code that was generated from the .NET versions of Visual Basic, Visual C++, or any of more than 20 other CTS-compliant languages.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A single assembly may contain multiple modules written in different .NET languages, and the types can reference each other just as if they were written in the same language.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In addition to the run time services, the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> also includes an extensive library of over 4000 classes organized into namespaces that provide a wide variety of useful functionality for everything from file input and output to string manipulation to XML parsing, to Windows Forms controls.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The typical C# application uses the <ph id="ph1">[!INCLUDE[dnprdnshort](../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> class library extensively to handle common "plumbing" chores.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information about the .NET Framework, see <bpt id="p1">[</bpt>Overview of the Microsoft .NET Framework<ept id="p1">](http://msdn.microsoft.com/en-us/d05daf50-00fe-45c7-8383-06fe41697355)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C#<ept id="p1">](../../csharp/csharp.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Getting Started with Visual C# and Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>