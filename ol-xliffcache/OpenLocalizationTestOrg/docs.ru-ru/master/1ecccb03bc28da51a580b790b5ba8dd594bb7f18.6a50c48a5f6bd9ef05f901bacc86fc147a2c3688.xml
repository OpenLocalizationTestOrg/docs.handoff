{"content":"---\ntitle: Building a class library with C# and .NET Core in Visual Studio 2017\ndescription: Learn how to build a class library written in C# using Visual Studio 2017\nkeywords: .NET Core, .NET Standard class library, Visual Studio 2017\nauthor: BillWagner\nms.author: wiwagn\nms.date: 04/17/2017\nms.topic: article\nms.prod: .net-core\nms.technology: devlang-csharp\nms.devlang: csharp\nms.assetid: c849ca26-6a25-4d35-9544-f343af88e0e7\n---\n\n# Building a class library with C# and .NET Core in Visual Studio 2017\n\nA *class library* defines types and methods that are called by an application. A class library developed using .NET Core supports the .NET Standard Library, which allows your library to be called by any .NET platform that supports that version of the .NET Standard Library. When you finish your class library, you can decide whether you want to distribute it as a third-party component or whether you want to include it as a bundled component with one or more applications.\n\n> [!NOTE]\n> For a list of the .NET Standard versions and the platforms they support, see [.NET Standard Library](../../standard/library.md).\n\nIn this topic, you'll create a simple utility library that contains a single string-handling method. You'll implement it as an [extension method](../../csharp/programming-guide/classes-and-structs/extension-methods.md) so that you can call it as if it were a member of the @System.String class.\n\n## Creating a class library solution\n\nStart by creating a solution for your class library project and its related projects. A Visual Studio Solution just serves as a container for one or more projects. To create the solution:\n\n1. On the Visual Studio menu bar, choose **File** > **New** > **Project**.\n\n1. In the **New Project** dialog, expand the **Other Project Types** node, and select **Visual Studio Solutions**. Name the solution \"ClassLibraryProjects\" and select the **OK** button.\n\n   ![New project dialog](./media/library-with-visual-studio/newproject.png)\n\n## Creating the class library project\n\nCreate your class library project:\n\n1. In **Solution Explorer**, right-click on the **ClassLibraryProjects** solution file and from the context menu, select **Add** > **New Project**.\n\n1. In the **Add New Project** dialog, select the **.NET Core** node followed by the **Class Library (.NET Core)** project template. In the **Name** text box, enter \"StringLibrary\" as the name of the project. Select **OK** to create the class library project.\n\n   ![Add New Project dialog](./media/library-with-visual-studio/libproject.png)\n\n   ![Visual Studio application window showing the default class library template code](./media/library-with-visual-studio/stringlibrary.png)\n\n1. Replace the code in the code window with the following code and save the file:\n\n   [!CODE-csharp[ClassLib#1](../../../samples/snippets/csharp/getting_started/with_visual_studio_2017/classlib.cs#1)]\n\n   The class library, `UtilityLibraries.StringLibrary`, contains a method named `StartsWithUpper`, which returns a @System.Boolean value that indicates whether the current string instance begins with an uppercase character. The Unicode standard distinguishes uppercase characters from lowercase characters. In .NET Core, the [`Char.IsUpper`](xref:System.Char.IsUpper(System.Char)) method returns `true` if a character is uppercase.\n\n1. On the menu bar, select **Build** > **Build Solution**. The project should compile without error.\n\n   ![Output pane showing that the build succeeded](./media/library-with-visual-studio/buildsucceeds.png)\n\n## Next step\n\nYou've successfully built the library. Because you haven't called any of its methods, you don't know whether it works as expected. The next step in developing your library is to test it by using a [C# Unit Test Project](testing-library-with-visual-studio.md).\n","nodes":[{"pos":[4,427],"embed":true,"restype":"x-metadata","content":"title: Building a class library with C# and .NET Core in Visual Studio 2017\ndescription: Learn how to build a class library written in C# using Visual Studio 2017\nkeywords: .NET Core, .NET Standard class library, Visual Studio 2017\nauthor: BillWagner\nms.author: wiwagn\nms.date: 04/17/2017\nms.topic: article\nms.prod: .net-core\nms.technology: devlang-csharp\nms.devlang: csharp\nms.assetid: c849ca26-6a25-4d35-9544-f343af88e0e7","nodes":[{"content":"Building a class library with C# and .NET Core in Visual Studio 2017","nodes":[{"pos":[0,68],"content":"Building a class library with C# and .NET Core in Visual Studio 2017","nodes":[{"content":"Building a class library with C# and .NET Core in Visual Studio 2017","pos":[0,68]}]}],"path":["title"]},{"content":"Learn how to build a class library written in C# using Visual Studio 2017","nodes":[{"pos":[0,73],"content":"Learn how to build a class library written in C# using Visual Studio 2017","nodes":[{"content":"Learn how to build a class library written in C# using Visual Studio 2017","pos":[0,73]}]}],"path":["description"]},{"content":".NET Core, .NET Standard class library, Visual Studio 2017","nodes":[{"pos":[0,58],"content":".NET Core, .NET Standard class library, Visual Studio 2017","nodes":[{"content":".NET Core, .NET Standard class library, Visual Studio 2017","pos":[0,58]}]}],"path":["keywords"]}],"yml":true},{"pos":[435,503],"content":"Building a class library with C# and .NET Core in Visual Studio 2017","linkify":"Building a class library with C# and .NET Core in Visual Studio 2017","nodes":[{"content":"Building a class library with C# and .NET Core in Visual Studio 2017","pos":[0,68]}]},{"content":"A <bpt id=\"p1\">*</bpt>class library<ept id=\"p1\">*</ept> defines types and methods that are called by an application.","pos":[505,583],"source":"A *class library* defines types and methods that are called by an application."},{"content":"A class library developed using .NET Core supports the .NET Standard Library, which allows your library to be called by any .NET platform that supports that version of the .NET Standard Library.","pos":[584,778]},{"content":"When you finish your class library, you can decide whether you want to distribute it as a third-party component or whether you want to include it as a bundled component with one or more applications.","pos":[779,978]},{"pos":[982,1120],"content":"[!NOTE]\nFor a list of the .NET Standard versions and the platforms they support, see [.NET Standard Library](../../standard/library.md).","leadings":["","> "],"nodes":[{"content":"For a list of the .NET Standard versions and the platforms they support, see <bpt id=\"p1\">[</bpt>.NET Standard Library<ept id=\"p1\">](../../standard/library.md)</ept>.","pos":[8,136],"source":"For a list of the .NET Standard versions and the platforms they support, see [.NET Standard Library](../../standard/library.md)."}]},{"content":"In this topic, you'll create a simple utility library that contains a single string-handling method.","pos":[1122,1222]},{"content":"You'll implement it as an <bpt id=\"p1\">[</bpt>extension method<ept id=\"p1\">](../../csharp/programming-guide/classes-and-structs/extension-methods.md)</ept> so that you can call it as if it were a member of the <ph id=\"ph1\">@System.String</ph> class.","pos":[1223,1416],"source":" You'll implement it as an [extension method](../../csharp/programming-guide/classes-and-structs/extension-methods.md) so that you can call it as if it were a member of the @System.String class."},{"pos":[1421,1454],"content":"Creating a class library solution","linkify":"Creating a class library solution","nodes":[{"content":"Creating a class library solution","pos":[0,33]}]},{"content":"Start by creating a solution for your class library project and its related projects.","pos":[1456,1541]},{"content":"A Visual Studio Solution just serves as a container for one or more projects.","pos":[1542,1619]},{"content":"To create the solution:","pos":[1620,1643]},{"pos":[1648,1719],"content":"On the Visual Studio menu bar, choose <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"On the Visual Studio menu bar, choose **File** > **New** > **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, expand the <bpt id=\"p2\">**</bpt>Other Project Types<ept id=\"p2\">**</ept> node, and select <bpt id=\"p3\">**</bpt>Visual Studio Solutions<ept id=\"p3\">**</ept>.","pos":[1724,1835],"source":"In the **New Project** dialog, expand the **Other Project Types** node, and select **Visual Studio Solutions**."},{"content":"Name the solution \"ClassLibraryProjects\" and select the <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button.","pos":[1836,1906],"source":" Name the solution \"ClassLibraryProjects\" and select the **OK** button."},{"content":"New project dialog","pos":[1913,1931]},{"pos":[1988,2022],"content":"Creating the class library project","linkify":"Creating the class library project","nodes":[{"content":"Creating the class library project","pos":[0,34]}]},{"content":"Create your class library project:","pos":[2024,2058]},{"pos":[2063,2207],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click on the <bpt id=\"p2\">**</bpt>ClassLibraryProjects<ept id=\"p2\">**</ept> solution file and from the context menu, select <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p4\">**</bpt>New Project<ept id=\"p4\">**</ept>.","source":"In **Solution Explorer**, right-click on the **ClassLibraryProjects** solution file and from the context menu, select **Add** > **New Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>Add New Project<ept id=\"p1\">**</ept> dialog, select the <bpt id=\"p2\">**</bpt>.NET Core<ept id=\"p2\">**</ept> node followed by the <bpt id=\"p3\">**</bpt>Class Library (.NET Core)<ept id=\"p3\">**</ept> project template.","pos":[2212,2340],"source":"In the **Add New Project** dialog, select the **.NET Core** node followed by the **Class Library (.NET Core)** project template."},{"content":"In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> text box, enter \"StringLibrary\" as the name of the project.","pos":[2341,2416],"source":" In the **Name** text box, enter \"StringLibrary\" as the name of the project."},{"content":"Select <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to create the class library project.","pos":[2417,2467],"source":" Select **OK** to create the class library project."},{"content":"Add New Project dialog","pos":[2474,2496]},{"content":"Visual Studio application window showing the default class library template code","pos":[2555,2635]},{"content":"Replace the code in the code window with the following code and save the file:","pos":[2695,2773]},{"content":"The class library, <ph id=\"ph1\">`UtilityLibraries.StringLibrary`</ph>, contains a method named <ph id=\"ph2\">`StartsWithUpper`</ph>, which returns a <ph id=\"ph3\">@System.Boolean</ph> value that indicates whether the current string instance begins with an uppercase character.","pos":[2897,3117],"source":"The class library, `UtilityLibraries.StringLibrary`, contains a method named `StartsWithUpper`, which returns a @System.Boolean value that indicates whether the current string instance begins with an uppercase character."},{"content":"The Unicode standard distinguishes uppercase characters from lowercase characters.","pos":[3118,3200]},{"content":"In .NET Core, the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`Char.IsUpper`</ph><ept id=\"p1\">](xref:System.Char.IsUpper(System.Char))</ept> method returns <ph id=\"ph2\">`true`</ph> if a character is uppercase.","pos":[3201,3325],"source":" In .NET Core, the [`Char.IsUpper`](xref:System.Char.IsUpper(System.Char)) method returns `true` if a character is uppercase."},{"content":"On the menu bar, select <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>.","pos":[3330,3385],"source":"On the menu bar, select **Build** > **Build Solution**."},{"content":"The project should compile without error.","pos":[3386,3427]},{"content":"Output pane showing that the build succeeded","pos":[3434,3478]},{"pos":[3538,3547],"content":"Next step","linkify":"Next step","nodes":[{"content":"Next step","pos":[0,9]}]},{"content":"You've successfully built the library.","pos":[3549,3587]},{"content":"Because you haven't called any of its methods, you don't know whether it works as expected.","pos":[3588,3679]},{"content":"The next step in developing your library is to test it by using a <bpt id=\"p1\">[</bpt>C# Unit Test Project<ept id=\"p1\">](testing-library-with-visual-studio.md)</ept>.","pos":[3680,3808],"source":" The next step in developing your library is to test it by using a [C# Unit Test Project](testing-library-with-visual-studio.md)."}]}