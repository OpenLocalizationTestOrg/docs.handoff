{"content":"---\ntitle: \"As Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.as\"\nhelpviewer_keywords: \n  - \"constraints, Visual Basic generic types\"\n  - \"As keyword [Visual Basic], statement syntax\"\n  - \"As keyword [Visual Basic]\"\nms.assetid: b4281ec8-2be5-49f7-aae8-ae0a96265b0d\n---\n# As Clause (Visual Basic)\nIntroduces an `As` clause, which identifies a data type in a declaration statement or a constraint list on a generic type parameter.  \n  \n## Remarks  \n The `As` keyword can be used in these contexts:  \n  \n [Aggregate Clause](../../../visual-basic/language-reference/queries/aggregate-clause.md)  \n  \n [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)  \n  \n [Const Statement](../../../visual-basic/language-reference/statements/const-statement.md)  \n  \n [Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)  \n  \n [Delegate Statement](../../../visual-basic/language-reference/statements/delegate-statement.md)  \n  \n [Dim Statement](../../../visual-basic/language-reference/statements/dim-statement.md)  \n  \n [Enum Statement](../../../visual-basic/language-reference/statements/enum-statement.md)  \n  \n [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)  \n  \n [For...Next Statements](../../../visual-basic/language-reference/statements/for-next-statement.md)  \n  \n [For Each...Next Statements](../../../visual-basic/language-reference/statements/for-each-next-statement.md)  \n  \n [From Clause](../../../visual-basic/language-reference/queries/from-clause.md)  \n  \n [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)  \n  \n [Group Join Clause](../../../visual-basic/language-reference/queries/group-join-clause.md)  \n  \n [Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)  \n  \n [Operator Statement](../../../visual-basic/language-reference/statements/operator-statement.md)  \n  \n [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)  \n  \n [Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)  \n  \n [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n [Try...Catch...Finally Statements](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)  \n  \n## See also\n\n- [How to: Create a New Variable](../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)\n- [Data Types](../../../visual-basic/programming-guide/language-features/data-types/index.md)\n- [Variable Declaration](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)\n- [Type List](../../../visual-basic/language-reference/statements/type-list.md)\n- [Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Keywords](../../../visual-basic/language-reference/keywords/index.md)\n","nodes":[{"pos":[4,282],"embed":true,"restype":"x-metadata","content":"title: \"As Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.as\"\nhelpviewer_keywords: \n  - \"constraints, Visual Basic generic types\"\n  - \"As keyword [Visual Basic], statement syntax\"\n  - \"As keyword [Visual Basic]\"\nms.assetid: b4281ec8-2be5-49f7-aae8-ae0a96265b0d","nodes":[{"content":"As Clause (Visual Basic)","nodes":[{"pos":[0,24],"content":"As Clause (Visual Basic)","nodes":[{"content":"As Clause (Visual Basic)","pos":[0,24]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[289,313],"content":"As Clause (Visual Basic)","linkify":"As Clause (Visual Basic)","nodes":[{"content":"As Clause (Visual Basic)","pos":[0,24]}]},{"pos":[314,446],"content":"Introduces an <ph id=\"ph1\">`As`</ph> clause, which identifies a data type in a declaration statement or a constraint list on a generic type parameter.","source":"Introduces an `As` clause, which identifies a data type in a declaration statement or a constraint list on a generic type parameter."},{"pos":[455,462],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[466,513],"content":"The <ph id=\"ph1\">`As`</ph> keyword can be used in these contexts:","source":"The `As` keyword can be used in these contexts:"},{"pos":[520,608],"content":"<bpt id=\"p1\">[</bpt>Aggregate Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept>","source":"[Aggregate Clause](../../../visual-basic/language-reference/queries/aggregate-clause.md)"},{"pos":[615,704],"content":"<bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept>","source":"[Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)"},{"pos":[711,800],"content":"<bpt id=\"p1\">[</bpt>Const Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/const-statement.md)</ept>","source":"[Const Statement](../../../visual-basic/language-reference/statements/const-statement.md)"},{"pos":[807,900],"content":"<bpt id=\"p1\">[</bpt>Declare Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept>","source":"[Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)"},{"pos":[907,1002],"content":"<bpt id=\"p1\">[</bpt>Delegate Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept>","source":"[Delegate Statement](../../../visual-basic/language-reference/statements/delegate-statement.md)"},{"pos":[1009,1094],"content":"<bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept>","source":"[Dim Statement](../../../visual-basic/language-reference/statements/dim-statement.md)"},{"pos":[1101,1188],"content":"<bpt id=\"p1\">[</bpt>Enum Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/enum-statement.md)</ept>","source":"[Enum Statement](../../../visual-basic/language-reference/statements/enum-statement.md)"},{"pos":[1195,1284],"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>","source":"[Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)"},{"pos":[1291,1389],"content":"<bpt id=\"p1\">[</bpt>For...Next Statements<ept id=\"p1\">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept>","source":"[For...Next Statements](../../../visual-basic/language-reference/statements/for-next-statement.md)"},{"pos":[1396,1504],"content":"<bpt id=\"p1\">[</bpt>For Each...Next Statements<ept id=\"p1\">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept>","source":"[For Each...Next Statements](../../../visual-basic/language-reference/statements/for-each-next-statement.md)"},{"pos":[1511,1589],"content":"<bpt id=\"p1\">[</bpt>From Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/from-clause.md)</ept>","source":"[From Clause](../../../visual-basic/language-reference/queries/from-clause.md)"},{"pos":[1596,1691],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[1698,1788],"content":"<bpt id=\"p1\">[</bpt>Group Join Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/group-join-clause.md)</ept>","source":"[Group Join Clause](../../../visual-basic/language-reference/queries/group-join-clause.md)"},{"pos":[1795,1892],"content":"<bpt id=\"p1\">[</bpt>Interface Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept>","source":"[Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)"},{"pos":[1899,1994],"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept>","source":"[Operator Statement](../../../visual-basic/language-reference/statements/operator-statement.md)"},{"pos":[2001,2096],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[2103,2200],"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept>","source":"[Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)"},{"pos":[2207,2292],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[2299,2417],"content":"<bpt id=\"p1\">[</bpt>Try...Catch...Finally Statements<ept id=\"p1\">](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>","source":"[Try...Catch...Finally Statements](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)"},{"pos":[2426,2434],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2438,2570],"content":"<bpt id=\"p1\">[</bpt>How to: Create a New Variable<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)</ept>","source":"[How to: Create a New Variable](../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)"},{"pos":[2573,2664],"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>","source":"[Data Types](../../../visual-basic/programming-guide/language-features/data-types/index.md)"},{"pos":[2667,2782],"content":"<bpt id=\"p1\">[</bpt>Variable Declaration<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept>","source":"[Variable Declaration](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)"},{"pos":[2785,2862],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../../visual-basic/language-reference/statements/type-list.md)"},{"pos":[2865,2983],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[2986,3056],"content":"<bpt id=\"p1\">[</bpt>Keywords<ept id=\"p1\">](../../../visual-basic/language-reference/keywords/index.md)</ept>","source":"[Keywords](../../../visual-basic/language-reference/keywords/index.md)"}]}