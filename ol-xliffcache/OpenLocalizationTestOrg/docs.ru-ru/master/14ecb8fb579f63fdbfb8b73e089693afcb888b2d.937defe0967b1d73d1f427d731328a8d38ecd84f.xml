{"content":"---\ntitle: \"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 3320e866-01f1-4b7f-8932-049a7b2d2a9b\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#)\nIf you embed type information in an application that references COM objects, you can eliminate the need for a primary interop assembly (PIA). Additionally, the embedded type information enables you to achieve version independence for your application. That is, your program can be written to use types from multiple versions of a COM library without requiring a specific PIA for each version. This is a common scenario for applications that use objects from Microsoft Office libraries. Embedding type information enables the same build of a program to work with different versions of Microsoft Office on different computers without the need to redeploy either the program or the PIA for each version of Microsoft Office.  \n  \n[!INCLUDE[note_settings_general](../../../../csharp/language-reference/compiler-messages/includes/note_settings_general_md.md)]  \n  \n## Prerequisites  \n This walkthrough requires the following:  \n  \n-   A computer on which Visual Studio and Microsoft Excel are installed.  \n  \n-   A second computer on which the .NET Framework 4 or higher and a different version of Excel are installed.  \n  \n##  <a name=\"BKMK_createapp\"></a> To create an application that works with multiple versions of Microsoft Office  \n  \n1.  Start Visual Studio on a computer on which Excel is installed.  \n  \n2.  On the **File** menu, choose **New**, **Project**.  \n  \n3.  In the **New Project** dialog box, in the **Project Types** pane, make sure that **Windows** is selected. Select **Console Application** in the **Templates** pane. In the **Name** box, enter `CreateExcelWorkbook`, and then choose the **OK** button. The new project is created.  \n  \n4.  In **Solution Explorer**, open the shortcut menu for the **References** folder and then choose **Add Reference**.  \n  \n5.  On the **.NET** tab, choose the most recent version of `Microsoft.Office.Interop.Excel`. For example, **Microsoft.Office.Interop.Excel 14.0.0.0**. Choose the **OK** button.  \n  \n6.  In the list of references for the **CreateExcelWorkbook** project, select the reference for `Microsoft.Office.Interop.Excel` that you added in the previous step. In the **Properties** window, make sure that the `Embed Interop Types` property is set to `True`.  \n  \n    > [!NOTE]\n    >  The application created in this walkthrough runs with different versions of Microsoft Office because of the embedded interop type information. If the `Embed Interop Types` property is set to `False`, you must include a PIA for each version of Microsoft Office that the application will run with.  \n  \n7.  Open the **Program.cs** file. Replace the code in the file with the following code:  \n  \n    ```csharp  \n    using System;  \n    using System.Collections.Generic;  \n    using System.Linq;  \n    using System.Text;  \n    using System.IO;  \n    using Excel = Microsoft.Office.Interop.Excel;  \n  \n    namespace CreateExcelWorkbook  \n    {  \n        class Program  \n        {  \n            static void Main(string[] args)  \n            {  \n                int[] values = {4, 6, 18, 2, 1, 76, 0, 3, 11};  \n  \n                CreateWorkbook(values, @\"C:\\SampleFolder\\SampleWorkbook.xls\");  \n            }  \n  \n            static void CreateWorkbook(int[] values, string filePath)  \n            {  \n                Excel.Application excelApp = null;  \n                Excel.Workbook wkbk;  \n                Excel.Worksheet sheet;  \n  \n                try  \n                {  \n                        // Start Excel and create a workbook and worksheet.  \n                        excelApp = new Excel.Application();  \n                        wkbk = excelApp.Workbooks.Add();  \n                        sheet = wkbk.Sheets.Add() as Excel.Worksheet;  \n                        sheet.Name = \"Sample Worksheet\";  \n  \n                        // Write a column of values.  \n                        // In the For loop, both the row index and array index start at 1.  \n                        // Therefore the value of 4 at array index 0 is not included.  \n                        for (int i = 1; i < values.Length; i++)  \n                        {  \n                            sheet.Cells[i, 1] = values[i];  \n                        }  \n  \n                        // Suppress any alerts and save the file. Create the directory   \n                        // if it does not exist. Overwrite the file if it exists.  \n                        excelApp.DisplayAlerts = false;  \n                        string folderPath = Path.GetDirectoryName(filePath);  \n                        if (!Directory.Exists(folderPath))  \n                        {  \n                            Directory.CreateDirectory(folderPath);  \n                        }  \n                        wkbk.SaveAs(filePath);  \n                }  \n                catch  \n                {  \n                }  \n                finally  \n                {  \n                    sheet = null;  \n                    wkbk = null;  \n  \n                    // Close Excel.  \n                    excelApp.Quit();  \n                    excelApp = null;  \n                }  \n            }  \n        }  \n    }  \n    ```  \n  \n8.  Save the project.  \n  \n9. Press CTRL+F5 to build and run the project. Verify that an Excel workbook has been created at the location specified in the example code: C:\\SampleFolder\\SampleWorkbook.xls.  \n  \n##  <a name=\"BKMK_publishapp\"></a> To publish the application to a computer on which a different version of Microsoft Office is installed  \n  \n1.  Open the project created by this walkthrough in Visual Studio.  \n  \n2.  On the **Build** menu, choose **Publish CreateExcelWorkbook**. Follow the steps of the Publish Wizard to create an installable version of the application. For more information, see [Publish Wizard (Office Development in Visual Studio)](https://msdn.microsoft.com/library/bb625071).  \n  \n3.  Install the application on a computer on which the .NET Framework 4 or higher and a different version of Excel are installed.  \n  \n4.  When the installation is finished, run the installed program.  \n  \n5.  Verify that an Excel workbook has been created at the location specified in the sample code: C:\\SampleFolder\\SampleWorkbook.xls.  \n  \n## See Also  \n [Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (C#)](../../../../csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md)   \n [/link (C# Compiler Options)](../../../../csharp/language-reference/compiler-options/link-compiler-option.md)\n","nodes":[{"pos":[4,475],"nodes":[{"content":"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#) | Microsoft Docs","nodes":[{"pos":[0,111],"content":"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#) | Microsoft Docs","nodes":[{"content":"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#) | Microsoft Docs","pos":[0,111]}]}],"pos":[6,120],"yaml":true}],"content":"title: \"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 3320e866-01f1-4b7f-8932-049a7b2d2a9b\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[482,576],"content":"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#)","linkify":"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#)","nodes":[{"content":"Walkthrough: Embedding Type Information from Microsoft Office Assemblies in Visual Studio (C#)","pos":[0,94]}]},{"content":"If you embed type information in an application that references COM objects, you can eliminate the need for a primary interop assembly (PIA).","pos":[577,718]},{"content":"Additionally, the embedded type information enables you to achieve version independence for your application.","pos":[719,828]},{"content":"That is, your program can be written to use types from multiple versions of a COM library without requiring a specific PIA for each version.","pos":[829,969]},{"content":"This is a common scenario for applications that use objects from Microsoft Office libraries.","pos":[970,1062]},{"content":"Embedding type information enables the same build of a program to work with different versions of Microsoft Office on different computers without the need to redeploy either the program or the PIA for each version of Microsoft Office.","pos":[1063,1297]},{"pos":[1439,1452],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"This walkthrough requires the following:","pos":[1456,1496]},{"content":"A computer on which Visual Studio and Microsoft Excel are installed.","pos":[1506,1574]},{"content":"A second computer on which the .NET Framework 4 or higher and a different version of Excel are installed.","pos":[1584,1689]},{"pos":[1699,1807],"content":"<bpt id=\"p1\">&lt;a name=\"BKMK_createapp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> To create an application that works with multiple versions of Microsoft Office","linkify":"<a name=\"BKMK_createapp\"></a> To create an application that works with multiple versions of Microsoft Office","source":"<a name=\"BKMK_createapp\"></a> To create an application that works with multiple versions of Microsoft Office"},{"content":"Start Visual Studio on a computer on which Excel is installed.","pos":[1817,1879]},{"pos":[1889,1939],"content":"On the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"On the **File** menu, choose **New**, **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog box, in the <bpt id=\"p2\">**</bpt>Project Types<ept id=\"p2\">**</ept> pane, make sure that <bpt id=\"p3\">**</bpt>Windows<ept id=\"p3\">**</ept> is selected.","pos":[1949,2054],"source":"In the **New Project** dialog box, in the **Project Types** pane, make sure that **Windows** is selected."},{"content":"Select <bpt id=\"p1\">**</bpt>Console Application<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Templates<ept id=\"p2\">**</ept> pane.","pos":[2055,2112],"source":" Select **Console Application** in the **Templates** pane."},{"content":"In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, enter <ph id=\"ph1\">`CreateExcelWorkbook`</ph>, and then choose the <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> button.","pos":[2113,2197],"source":" In the **Name** box, enter `CreateExcelWorkbook`, and then choose the **OK** button."},{"content":"The new project is created.","pos":[2198,2225]},{"pos":[2235,2348],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, open the shortcut menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> folder and then choose <bpt id=\"p3\">**</bpt>Add Reference<ept id=\"p3\">**</ept>.","source":"In **Solution Explorer**, open the shortcut menu for the **References** folder and then choose **Add Reference**."},{"content":"On the <bpt id=\"p1\">**</bpt>.NET<ept id=\"p1\">**</ept> tab, choose the most recent version of <ph id=\"ph1\">`Microsoft.Office.Interop.Excel`</ph>.","pos":[2358,2446],"source":"On the **.NET** tab, choose the most recent version of `Microsoft.Office.Interop.Excel`."},{"content":"For example, <bpt id=\"p1\">**</bpt>Microsoft.Office.Interop.Excel 14.0.0.0<ept id=\"p1\">**</ept>.","pos":[2447,2504],"source":" For example, **Microsoft.Office.Interop.Excel 14.0.0.0**."},{"content":"Choose the <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button.","pos":[2505,2530],"source":" Choose the **OK** button."},{"content":"In the list of references for the <bpt id=\"p1\">**</bpt>CreateExcelWorkbook<ept id=\"p1\">**</ept> project, select the reference for <ph id=\"ph1\">`Microsoft.Office.Interop.Excel`</ph> that you added in the previous step.","pos":[2540,2701],"source":"In the list of references for the **CreateExcelWorkbook** project, select the reference for `Microsoft.Office.Interop.Excel` that you added in the previous step."},{"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, make sure that the <ph id=\"ph1\">`Embed Interop Types`</ph> property is set to <ph id=\"ph2\">`True`</ph>.","pos":[2702,2799],"source":" In the **Properties** window, make sure that the `Embed Interop Types` property is set to `True`."},{"pos":[2811,3121],"content":"[!NOTE]\nThe application created in this walkthrough runs with different versions of Microsoft Office because of the embedded interop type information. If the `Embed Interop Types` property is set to `False`, you must include a PIA for each version of Microsoft Office that the application will run with.","leadings":["","    >  "],"nodes":[{"content":"The application created in this walkthrough runs with different versions of Microsoft Office because of the embedded interop type information. If the `Embed Interop Types` property is set to `False`, you must include a PIA for each version of Microsoft Office that the application will run with.","pos":[8,303],"nodes":[{"content":"The application created in this walkthrough runs with different versions of Microsoft Office because of the embedded interop type information.","pos":[0,142]},{"content":"If the <ph id=\"ph1\">`Embed Interop Types`</ph> property is set to <ph id=\"ph2\">`False`</ph>, you must include a PIA for each version of Microsoft Office that the application will run with.","pos":[143,295],"source":" If the `Embed Interop Types` property is set to `False`, you must include a PIA for each version of Microsoft Office that the application will run with."}]}]},{"content":"Open the <bpt id=\"p1\">**</bpt>Program.cs<ept id=\"p1\">**</ept> file.","pos":[3131,3160],"source":"Open the **Program.cs** file."},{"content":"Replace the code in the file with the following code:","pos":[3161,3214]},{"content":"Save the project.","pos":[5694,5711]},{"content":"Press CTRL+F5 to build and run the project.","pos":[5720,5763]},{"content":"Verify that an Excel workbook has been created at the location specified in the example code: C:\\SampleFolder\\SampleWorkbook.xls.","pos":[5764,5893]},{"pos":[5903,6036],"content":"<bpt id=\"p1\">&lt;a name=\"BKMK_publishapp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> To publish the application to a computer on which a different version of Microsoft Office is installed","linkify":"<a name=\"BKMK_publishapp\"></a> To publish the application to a computer on which a different version of Microsoft Office is installed","source":"<a name=\"BKMK_publishapp\"></a> To publish the application to a computer on which a different version of Microsoft Office is installed"},{"content":"Open the project created by this walkthrough in Visual Studio.","pos":[6046,6108]},{"content":"On the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Publish CreateExcelWorkbook<ept id=\"p2\">**</ept>.","pos":[6118,6180],"source":"On the **Build** menu, choose **Publish CreateExcelWorkbook**."},{"content":"Follow the steps of the Publish Wizard to create an installable version of the application.","pos":[6181,6272]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Publish Wizard (Office Development in Visual Studio)<ept id=\"p1\">](https://msdn.microsoft.com/library/bb625071)</ept>.","pos":[6273,6399],"source":" For more information, see [Publish Wizard (Office Development in Visual Studio)](https://msdn.microsoft.com/library/bb625071)."},{"content":"Install the application on a computer on which the .NET Framework 4 or higher and a different version of Excel are installed.","pos":[6409,6534]},{"content":"When the installation is finished, run the installed program.","pos":[6544,6605]},{"content":"Verify that an Excel workbook has been created at the location specified in the sample code: C:\\SampleFolder\\SampleWorkbook.xls.","pos":[6615,6743]},{"pos":[6752,6760],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md)</ept><ph id=\"ph1\"> </ph>","pos":[6764,6975],"source":"[Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (C#)](../../../../csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md) "},{"content":"<bpt id=\"p1\">[</bpt>/link (C# Compiler Options)<ept id=\"p1\">](../../../../csharp/language-reference/compiler-options/link-compiler-option.md)</ept>","pos":[6979,7088],"source":"[/link (C# Compiler Options)](../../../../csharp/language-reference/compiler-options/link-compiler-option.md)"}]}