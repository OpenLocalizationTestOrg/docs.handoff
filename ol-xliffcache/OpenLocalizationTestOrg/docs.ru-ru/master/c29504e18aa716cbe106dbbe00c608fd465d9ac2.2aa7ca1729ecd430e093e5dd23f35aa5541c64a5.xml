{"content":"---\ntitle: \"Interoperability (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"COM interop\"\n  - \"interoperability\"\n  - \"platform invoke, accessing APIs with C#\"\n  - \"C# language, interoperability\"\nms.assetid: 238bb95a-e962-4026-bbd5-197055bdb8ee\ncaps.latest.revision: 31\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Interoperability (C# Programming Guide)\nInteroperability enables you to preserve and take advantage of existing investments in unmanaged code. Code that runs under the control of the common language runtime (CLR) is called *managed code*, and code that runs outside the CLR is called *unmanaged code*. COM, COM+, C++ components, ActiveX components, and Microsoft Win32 API are examples of unmanaged code.  \n  \n The [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)] enables interoperability with unmanaged code through platform invoke services, the <xref:System.Runtime.InteropServices> namespace, C++ interoperability, and COM interoperability (COM interop).  \n  \n## In This Section  \n [Interoperability Overview](../../../csharp/programming-guide/interop/interoperability-overview.md)  \n Describes methods to interoperate between C# managed code and unmanaged code.  \n  \n [How to: Access Office Interop Objects by Using Visual C# Features](../../../csharp/programming-guide/interop/how-to-access-office-onterop-objects.md)  \n Describes features that are introduced in Visual C# to facilitate Office programming.  \n  \n [How to: Use Indexed Properties in COM Interop Programming](../../../csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md)  \n Describes how to use indexed properties to access COM properties that have parameters.  \n  \n [How to: Use Platform Invoke to Play a Wave File](../../../csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md)  \n Describes how to use platform invoke services to play a .wav sound file on the Windows operating system.  \n  \n [Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)  \n Shows how to create an Excel workbook and a Word document that contains a link to the workbook.  \n  \n [Example COM Class](../../../csharp/programming-guide/interop/example-com-class.md)  \n Demonstrates how to expose a C# class as a COM object.  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A?displayProperty=fullName>   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Interoperating with Unmanaged Code](https://msdn.microsoft.com/library/sd10k43k)   \n [Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)","nodes":[{"pos":[12,68],"content":"Interoperability (C# Programming Guide) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Interoperability (C# Programming Guide) | Microsoft Docs","pos":[0,56]}]},{"pos":[641,680],"content":"Interoperability (C# Programming Guide)","linkify":"Interoperability (C# Programming Guide)","nodes":[{"content":"Interoperability (C# Programming Guide)","pos":[0,39]}]},{"content":"Interoperability enables you to preserve and take advantage of existing investments in unmanaged code.","pos":[681,783]},{"content":"Code that runs under the control of the common language runtime (CLR) is called <bpt id=\"p1\">*</bpt>managed code<ept id=\"p1\">*</ept>, and code that runs outside the CLR is called <bpt id=\"p2\">*</bpt>unmanaged code<ept id=\"p2\">*</ept>.","pos":[784,942],"source":" Code that runs under the control of the common language runtime (CLR) is called *managed code*, and code that runs outside the CLR is called *unmanaged code*."},{"content":"COM, COM+, C++ components, ActiveX components, and Microsoft Win32 API are examples of unmanaged code.","pos":[943,1045]},{"pos":[1052,1333],"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> enables interoperability with unmanaged code through platform invoke services, the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices&gt;</ph> namespace, C++ interoperability, and COM interoperability (COM interop).","source":"The [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)] enables interoperability with unmanaged code through platform invoke services, the <xref:System.Runtime.InteropServices> namespace, C++ interoperability, and COM interoperability (COM interop)."},{"pos":[1342,1357],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Interoperability Overview<ept id=\"p1\">](../../../csharp/programming-guide/interop/interoperability-overview.md)</ept>","pos":[1361,1460],"source":"[Interoperability Overview](../../../csharp/programming-guide/interop/interoperability-overview.md)"},{"content":"Describes methods to interoperate between C# managed code and unmanaged code.","pos":[1464,1541]},{"content":"<bpt id=\"p1\">[</bpt>How to: Access Office Interop Objects by Using Visual C# Features<ept id=\"p1\">](../../../csharp/programming-guide/interop/how-to-access-office-onterop-objects.md)</ept>","pos":[1548,1698],"source":"[How to: Access Office Interop Objects by Using Visual C# Features](../../../csharp/programming-guide/interop/how-to-access-office-onterop-objects.md)"},{"content":"Describes features that are introduced in Visual C# to facilitate Office programming.","pos":[1702,1787]},{"content":"<bpt id=\"p1\">[</bpt>How to: Use Indexed Properties in COM Interop Programming<ept id=\"p1\">](../../../csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md)</ept>","pos":[1794,1955],"source":"[How to: Use Indexed Properties in COM Interop Programming](../../../csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md)"},{"content":"Describes how to use indexed properties to access COM properties that have parameters.","pos":[1959,2045]},{"content":"<bpt id=\"p1\">[</bpt>How to: Use Platform Invoke to Play a Wave File<ept id=\"p1\">](../../../csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md)</ept>","pos":[2052,2194],"source":"[How to: Use Platform Invoke to Play a Wave File](../../../csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md)"},{"content":"Describes how to use platform invoke services to play a .wav sound file on the Windows operating system.","pos":[2198,2302]},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Office Programming<ept id=\"p1\">](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)</ept>","pos":[2309,2419],"source":"[Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)"},{"content":"Shows how to create an Excel workbook and a Word document that contains a link to the workbook.","pos":[2423,2518]},{"content":"<bpt id=\"p1\">[</bpt>Example COM Class<ept id=\"p1\">](../../../csharp/programming-guide/interop/example-com-class.md)</ept>","pos":[2525,2608],"source":"[Example COM Class](../../../csharp/programming-guide/interop/example-com-class.md)"},{"content":"Demonstrates how to expose a C# class as a COM object.","pos":[2612,2666]},{"pos":[2675,2700],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[2814,2822],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2920,2988],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Interoperating with Unmanaged Code<ept id=\"p1\">](https://msdn.microsoft.com/library/sd10k43k)</ept><ph id=\"ph1\"> </ph>","pos":[2991,3074],"source":" [Interoperating with Unmanaged Code](https://msdn.microsoft.com/library/sd10k43k) "},{"content":"<bpt id=\"p1\"> [</bpt>Walkthrough: Office Programming<ept id=\"p1\">](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)</ept>","pos":[3077,3188],"source":" [Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)"}]}