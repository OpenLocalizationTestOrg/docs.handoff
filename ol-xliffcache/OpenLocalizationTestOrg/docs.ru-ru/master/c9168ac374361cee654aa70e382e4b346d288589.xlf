<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="virtual-mode-in-the-windows-forms-datagridview-control.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9168ac374361cee654aa70e382e4b346d288589</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\virtual-mode-in-the-windows-forms-datagridview-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1e71026139c86c247cb76f4594f48b83b85f6bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99d53024391a347879d361ede2a59ae4b80c46d1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Virtual Mode in the Windows Forms DataGridView Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Virtual Mode in the Windows Forms DataGridView Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With virtual mode, you can manage the interaction between the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and a custom data cache.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To implement virtual mode, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and handle one or more of the events described in this topic.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You will typically handle at least the <ph id="ph1">`CellValueNeeded`</ph> event, which enables the control look up values in the data cache.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Bound Mode and Virtual Mode</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Virtual mode is necessary only when you need to supplement or replace bound mode.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In bound mode, you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property and the control automatically loads the data from the specified source and submits user changes back to it.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can control which of the bound columns are displayed, and the data source itself typically handles operations such as sorting.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Supplementing Bound Mode</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can supplement bound mode by displaying unbound columns along with the bound columns.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is sometimes called "mixed mode" and is useful for displaying things like calculated values or user-interface (UI) controls.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Because unbound columns are outside the data source, they are ignored by the data source's sorting operations.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Therefore, when you enable sorting in mixed mode, you must manage the unbound data in a local cache and implement virtual mode to let the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control interact with it.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about using virtual mode to maintain the values in unbound columns, see the examples in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A?displayProperty=fullName&gt;</ph> property and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn?displayProperty=fullName&gt;</ph> class reference topics.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Replacing Bound Mode</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If bound mode does not meet your performance needs, you can manage all your data in a custom cache through virtual-mode event handlers.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you can use virtual mode to implement a just-in-time data loading mechanism that retrieves only as much data from a networked database as is necessary for optimal performance.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This scenario is particularly useful when working with large amounts of data over a slow network connection or with client machines that have a limited amount of RAM or storage space.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about using virtual mode in a just-in-time scenario, see <bpt id="p1">[</bpt>Implementing Virtual Mode with Just-In-Time Data Loading in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-jit-data-loading-in-the-datagrid.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Virtual-Mode Events</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If your data is read-only, the <ph id="ph1">`CellValueNeeded`</ph> event may be the only event you will need to handle.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additional virtual-mode events let you enable specific functionality like user edits, row addition and deletion, and row-level transactions.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Some standard <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> events (such as events that occur when users add or delete rows, or when cell values are edited, parsed, validated, or formatted) are useful in virtual mode, as well.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can also handle events that let you maintain values not typically stored in a bound data source, such as cell ToolTip text, cell and row error text, cell and row shortcut menu data, and row height data.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about implementing virtual mode to manage read/write data with a row-level commit scope, see <bpt id="p1">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For an example that implements virtual mode with a cell-level commit scope, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property reference topic.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following events occur only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Event</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Used by the control to retrieve a cell value from the data cache for display.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This event occurs only for cells in unbound columns.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Used by the control to commit user input for a cell to the data cache.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This event occurs only for cells in unbound columns.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UpdateCellValue%2A&gt;</ph> method when changing a cached value outside of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event handler to ensure that the current value is displayed in the control and to apply any automatic sizing modes currently in effect.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Used by the control to indicate the need for a new row in the data cache.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Used by the control to determine whether a row has any uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Used by the control to indicate that a row should revert to its cached values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following events are useful in virtual mode, but can be used regardless of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property setting.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Events</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Used by the control to indicate when rows are deleted or added, letting you update the data cache accordingly.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Used by the control to format cell values for display and to parse and validate user input.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Used by the control to retrieve cell ToolTip text when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Cell ToolTips are displayed only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A&gt;</ph> property value is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Used by the control to retrieve cell or row error text when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UpdateCellErrorText%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.UpdateRowErrorText%2A&gt;</ph> method when you change the cell or row error text to ensure that the current value is displayed in the control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Cell and row error glyphs are displayed when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A&gt;</ph> property values are <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Used by the control to retrieve a cell or row <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> when the control <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Used by the control to retrieve or store row height information in the data cache.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UpdateRowHeightInfo%2A&gt;</ph> method when changing the cached row height information outside of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event handler to ensure that the current value is used in the display of the control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Best Practices in Virtual Mode</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you are implementing virtual mode in order to work efficiently with large amounts of data, you will also want to ensure that you are working efficiently with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control itself.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about the efficient use of cell styles, automatic sizing, selections, and row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performance Tuning in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/performance-tuning-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing Virtual Mode with Just-In-Time Data Loading in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-jit-data-loading-in-the-datagrid.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>