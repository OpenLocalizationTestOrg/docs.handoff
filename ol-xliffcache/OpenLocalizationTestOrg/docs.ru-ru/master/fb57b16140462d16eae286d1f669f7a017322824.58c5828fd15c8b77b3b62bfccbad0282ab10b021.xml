{"content":"---\ntitle: \"!= (Not Equal To) (Entity SQL) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 3b4a02ad-ddfc-4c42-8dfa-676234461312\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# != (Not Equal To) (Entity SQL)\nCompares two expressions to determine whether the left expression is not equal to the right expression. The != (Not Equal To) operator is functionally equivalent to the <> operator.  \n  \n## Syntax  \n  \n```  \n  \nexpression != expression  \nor  \nexpression <> expression  \n```  \n  \n## Arguments  \n `expression`  \n Any valid expression. Both expressions must have implicitly convertible data types.  \n  \n## Result Types  \n `true` if the left expression is not equal to the right expression; otherwise, `false`.  \n  \n## Example  \n The following Entity SQL query uses the != operator to compare two expressions to determine whether the left expression is not equal to the right expression. The query is based on the AdventureWorks Sales Model. To compile and run this query, follow these steps:  \n  \n1.  Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md).  \n  \n2.  Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:  \n  \n [!code-csharp[DP EntityServices Concepts 2#NOT_EQUALS](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#not_equals)]  \n  \n## See Also  \n [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)","nodes":[{"pos":[4,405],"embed":true,"restype":"x-metadata","content":"title: \"!= (Not Equal To) (Entity SQL) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 3b4a02ad-ddfc-4c42-8dfa-676234461312\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"!= (Not Equal To) (Entity SQL) | Microsoft Docs","nodes":[{"pos":[0,47],"content":"!= (Not Equal To) (Entity SQL) | Microsoft Docs","nodes":[{"content":"!= (Not Equal To) (Entity SQL) | Microsoft Docs","pos":[0,47]}]}],"path":["title"]}],"yml":true},{"pos":[412,442],"content":"!= (Not Equal To) (Entity SQL)","linkify":"!= (Not Equal To) (Entity SQL)","nodes":[{"content":"!= (Not Equal To) (Entity SQL)","pos":[0,30]}]},{"content":"Compares two expressions to determine whether the left expression is not equal to the right expression.","pos":[443,546]},{"content":"The != (Not Equal To) operator is functionally equivalent to the &lt;&gt; operator.","pos":[547,624],"source":" The != (Not Equal To) operator is functionally equivalent to the <> operator."},{"pos":[633,639],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[725,734],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Any valid expression.","pos":[754,775]},{"content":"Both expressions must have implicitly convertible data types.","pos":[776,837]},{"pos":[846,858],"content":"Result Types","linkify":"Result Types","nodes":[{"content":"Result Types","pos":[0,12]}]},{"pos":[862,949],"content":"<ph id=\"ph1\">`true`</ph> if the left expression is not equal to the right expression; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the left expression is not equal to the right expression; otherwise, `false`."},{"pos":[958,965],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following Entity SQL query uses the != operator to compare two expressions to determine whether the left expression is not equal to the right expression.","pos":[969,1126]},{"content":"The query is based on the AdventureWorks Sales Model.","pos":[1127,1180]},{"content":"To compile and run this query, follow these steps:","pos":[1181,1231]},{"pos":[1241,1438],"content":"Follow the procedure in <bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns StructuralType Results<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)</ept>.","source":"Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)."},{"pos":[1448,1531],"content":"Pass the following query as an argument to the <ph id=\"ph1\">`ExecuteStructuralTypeQuery`</ph> method:","source":"Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:"},{"pos":[1718,1726],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1730,1844],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>","source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)"}]}