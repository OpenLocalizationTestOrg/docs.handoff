{"content":"---\ntitle: \"Compiler Error CS1937 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS1937\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS1937\"\nms.assetid: f13e8dc9-8c20-477e-8b74-7192848e08a2\ncaps.latest.revision: 5\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error CS1937\nThe name 'name' is not in scope on the left side of 'equals'. Consider swapping the expressions on either side of 'equals'.  \n  \n The `equals` keyword is a special operator that is used in a `join` clause to determine equality between two expressions. The range variable for the left side source sequence is in scope on the left side of equals, and the range variable for the right side source is only in scope on the left side of equals. You can verify this by experimenting with IntelliSense in the following code example.  \n  \n## To correct this error  \n  \n1.  Swap the position of the two range variables as shown in the commented line in the following example:  \n  \n## Example  \n The following example generates CS1937.  \n  \n```  \n// cs1937.cs  \nusing System.Linq;  \nclass Test  \n{  \n    static void Main()  \n    {  \n        int[] sourceA = { 1, 2, 3, 4, 5 };  \n        int[] sourceB = { 3, 4, 5, 6, 7 };  \n  \n        var query = from a in sourceA  \n                    join b in sourceB on b equals a // CS1937  \n                    // Try the following line instead.  \n                    //join b in sourceB on a equals b  \n                    select new { a, b };  \n    }  \n}  \n```  \n  \n The left side is generally called the \"outer\" side and the right is generally called the \"inner\" side.  \n  \n## See Also  \n [join clause](../../csharp/language-reference/keywords/join-clause.md)","nodes":[{"pos":[12,50],"content":"Compiler Error CS1937 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS1937 | Microsoft Docs","pos":[0,38]}]},{"pos":[565,586],"content":"Compiler Error CS1937","linkify":"Compiler Error CS1937","nodes":[{"content":"Compiler Error CS1937","pos":[0,21]}]},{"content":"The name 'name' is not in scope on the left side of 'equals'.","pos":[587,648]},{"content":"Consider swapping the expressions on either side of 'equals'.","pos":[649,710]},{"content":"The <ph id=\"ph1\">`equals`</ph> keyword is a special operator that is used in a <ph id=\"ph2\">`join`</ph> clause to determine equality between two expressions.","pos":[717,838],"source":"The `equals` keyword is a special operator that is used in a `join` clause to determine equality between two expressions."},{"content":"The range variable for the left side source sequence is in scope on the left side of equals, and the range variable for the right side source is only in scope on the left side of equals.","pos":[839,1025]},{"content":"You can verify this by experimenting with IntelliSense in the following code example.","pos":[1026,1111]},{"pos":[1120,1141],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Swap the position of the two range variables as shown in the commented line in the following example:","pos":[1151,1252]},{"pos":[1261,1268],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example generates CS1937.","pos":[1272,1311]},{"content":"The left side is generally called the \"outer\" side and the right is generally called the \"inner\" side.","pos":[1784,1886]},{"pos":[1895,1903],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1907,1977],"content":"<bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](../../csharp/language-reference/keywords/join-clause.md)</ept>","source":"[join clause](../../csharp/language-reference/keywords/join-clause.md)"}]}