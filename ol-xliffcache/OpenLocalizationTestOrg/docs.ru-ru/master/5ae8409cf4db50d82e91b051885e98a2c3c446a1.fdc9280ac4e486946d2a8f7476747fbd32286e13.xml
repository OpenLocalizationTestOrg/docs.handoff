{"content":"---\ntitle: \"Creating New Attributes for Elements in the DOM | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: dd6dc920-b011-418a-b3db-f1580a7d9251\ncaps.latest.revision: 4\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Creating New Attributes for Elements in the DOM\nCreating new attributes is different than creating other node types, because attributes are not nodes, but are properties of an element node and are contained in an **XmlAttributeCollection** associated with the element. There are multiple ways to create an attribute and attach it to an element:  \n  \n-   Get the element node and use **SetAttribute** to add an attribute to the attribute collection of that element.  \n  \n-   Create an **XmlAttribute** node using the **CreateAttribute** method, get the element node, then use **SetAttributeNode** to add the node to the attribute collection of that element.  \n  \n The following example shows how to add an attribute to an element using the **SetAttribute** method.  \n  \n```vb  \nImports System  \nImports System.IO  \nImports System.Xml  \n  \npublic class Sample  \n  \n  public shared sub Main()  \n  \n  Dim doc as XmlDocument = new XmlDocument()  \n  doc.LoadXml(\"<book xmlns:bk='urn:samples' bk:ISBN='1-861001-57-5'>\" & _  \n              \"<title>Pride And Prejudice</title>\" & _  \n              \"</book>\")  \n  Dim root as XmlElement = doc.DocumentElement  \n  \n  'Add a new attribute.  \n  root.SetAttribute(\"genre\", \"urn:samples\", \"novel\")  \n  \n  Console.WriteLine(\"Display the modified XML...\")  \n  Console.WriteLine(doc.InnerXml)  \n  \n  end sub  \nend class  \n```  \n  \n```csharp  \nusing System;  \nusing System.IO;  \nusing System.Xml;  \n  \npublic class Sample  \n{  \n  public static void Main()  \n  {  \n    XmlDocument doc = new XmlDocument();  \n    doc.LoadXml(\"<book xmlns:bk='urn:samples' bk:ISBN='1-861001-57-5'>\" +  \n                \"<title>Pride And Prejudice</title>\" +  \n                \"</book>\");  \n    XmlElement root = doc.DocumentElement;  \n  \n    // Add a new attribute.  \n    root.SetAttribute(\"genre\", \"urn:samples\", \"novel\");  \n  \n    Console.WriteLine(\"Display the modified XML...\");  \n    Console.WriteLine(doc.InnerXml);  \n  }  \n```  \n  \n The following example shows a new attribute being created using the **CreateAttribute** method. It then shows the attribute added to the attribute collection of the **book** element using the **SetAttributeNode** method.  \n  \n Given the following XML:  \n  \n```  \n<book genre='novel' ISBN='1-861001-57-5'>  \n<title>Pride And Prejudice</title>  \n</book>  \n```  \n  \n create a new attribute and give it a value:  \n  \n```vb  \nDim attr As XmlAttribute = doc.CreateAttribute(\"publisher\")  \n   attr.Value = \"WorldWide Publishing\"  \n```  \n  \n```csharp  \nXmlAttribute attr = doc.CreateAttribute(\"publisher\");  \nattr.Value = \"WorldWide Publishing\";  \n```  \n  \n and attach it to the element:  \n  \n```vb  \ndoc.DocumentElement.SetAttributeNode(attr)  \n```  \n  \n```csharp  \ndoc.DocumentElement.SetAttributeNode(attr);  \n```  \n  \n **Output**  \n  \n```  \n<book genre=\"novel\" ISBN=\"1-861001-57-5\" publisher=\"WorldWide Publishing\">  \n<title>Pride And Prejudice</title>  \n</book>  \n```  \n  \n The full code sample can be found at <xref:System.Xml.XmlDocument.CreateAttribute%2A>.  \n  \n You can also create an **XmlAttribute** node and use the **InsertBefore** or **InsertAfter** methods to place it in the appropriate position in the collection. If an attribute with the same name is already present in the attribute collection, the existing **XmlAttribute** node is removed from the collection and the new **XmlAttribute** node is inserted. This performs the same way as the **SetAttribute** method. These methods take, as a parameter, an existing node as a reference point to do the **InsertBefore** and **InsertAfter**. If you do not provide a reference node indicating where to insert the new node, the default for the **InsertAfter** method is to insert the new node at the beginning of the collection. The default position for the **InsertBefore**, if no reference node is provided, is at the end of the collection.  \n  \n If you created an **XmlNamedNodeMap** of attributes, you can add an attribute by name using the <xref:System.Xml.XmlNamedNodeMap.SetNamedItem%2A>. For more information, see [Node Collections in NamedNodeMaps and NodeLists](../../../../docs/standard/data/xml/node-collections-in-namednodemaps-and-nodelists.md).  \n  \n## Default Attributes  \n If you create an element that is declared to have a default attribute, then a new default attribute with its default value is created by the XML Document Object Model (DOM) and attached to the element. The child nodes of the default attribute are also created at this time.  \n  \n## Attribute Child Nodes  \n The value of an attribute node becomes its child nodes. There are only two types of valid child nodes: **XmlText** nodes, and **XmlEntityReference** nodes. These are child nodes in the sense that methods such as **FirstChild** and **LastChild** process them as child nodes. This distinction of an attribute having child nodes is important when trying to remove attributes or attribute child nodes. For more information, see [Removing Attributes from an Element Node in the DOM](../../../../docs/standard/data/xml/removing-attributes-from-an-element-node-in-the-dom.md).  \n  \n## See Also  \n [XML Document Object Model (DOM)](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)\n","nodes":[{"pos":[12,76],"content":"Creating New Attributes for Elements in the DOM | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Creating New Attributes for Elements in the DOM | Microsoft Docs","pos":[0,64]}]},{"pos":[421,468],"content":"Creating New Attributes for Elements in the DOM","linkify":"Creating New Attributes for Elements in the DOM","nodes":[{"content":"Creating New Attributes for Elements in the DOM","pos":[0,47]}]},{"content":"Creating new attributes is different than creating other node types, because attributes are not nodes, but are properties of an element node and are contained in an <bpt id=\"p1\">**</bpt>XmlAttributeCollection<ept id=\"p1\">**</ept> associated with the element.","pos":[469,689],"source":"Creating new attributes is different than creating other node types, because attributes are not nodes, but are properties of an element node and are contained in an **XmlAttributeCollection** associated with the element."},{"content":"There are multiple ways to create an attribute and attach it to an element:","pos":[690,765]},{"pos":[775,885],"content":"Get the element node and use <bpt id=\"p1\">**</bpt>SetAttribute<ept id=\"p1\">**</ept> to add an attribute to the attribute collection of that element.","source":"Get the element node and use **SetAttribute** to add an attribute to the attribute collection of that element."},{"pos":[895,1077],"content":"Create an <bpt id=\"p1\">**</bpt>XmlAttribute<ept id=\"p1\">**</ept> node using the <bpt id=\"p2\">**</bpt>CreateAttribute<ept id=\"p2\">**</ept> method, get the element node, then use <bpt id=\"p3\">**</bpt>SetAttributeNode<ept id=\"p3\">**</ept> to add the node to the attribute collection of that element.","source":"Create an **XmlAttribute** node using the **CreateAttribute** method, get the element node, then use **SetAttributeNode** to add the node to the attribute collection of that element."},{"pos":[1084,1184],"content":"The following example shows how to add an attribute to an element using the <bpt id=\"p1\">**</bpt>SetAttribute<ept id=\"p1\">**</ept> method.","source":"The following example shows how to add an attribute to an element using the **SetAttribute** method."},{"content":"The following example shows a new attribute being created using the <bpt id=\"p1\">**</bpt>CreateAttribute<ept id=\"p1\">**</ept> method.","pos":[2372,2467],"source":"The following example shows a new attribute being created using the **CreateAttribute** method."},{"content":"It then shows the attribute added to the attribute collection of the <bpt id=\"p1\">**</bpt>book<ept id=\"p1\">**</ept> element using the <bpt id=\"p2\">**</bpt>SetAttributeNode<ept id=\"p2\">**</ept> method.","pos":[2468,2592],"source":" It then shows the attribute added to the attribute collection of the **book** element using the **SetAttributeNode** method."},{"content":"Given the following XML:","pos":[2599,2623]},{"content":"create a new attribute and give it a value:","pos":[2736,2779]},{"content":"and attach it to the element:","pos":[3022,3051]},{"pos":[3187,3197],"content":"<bpt id=\"p1\">**</bpt>Output<ept id=\"p1\">**</ept>","source":"**Output**"},{"content":"The full code sample can be found at <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument.CreateAttribute%2A&gt;</ph>.","pos":[3343,3429],"source":"The full code sample can be found at <xref:System.Xml.XmlDocument.CreateAttribute%2A>."},{"content":"You can also create an <bpt id=\"p1\">**</bpt>XmlAttribute<ept id=\"p1\">**</ept> node and use the <bpt id=\"p2\">**</bpt>InsertBefore<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>InsertAfter<ept id=\"p3\">**</ept> methods to place it in the appropriate position in the collection.","pos":[3436,3595],"source":"You can also create an **XmlAttribute** node and use the **InsertBefore** or **InsertAfter** methods to place it in the appropriate position in the collection."},{"content":"If an attribute with the same name is already present in the attribute collection, the existing <bpt id=\"p1\">**</bpt>XmlAttribute<ept id=\"p1\">**</ept> node is removed from the collection and the new <bpt id=\"p2\">**</bpt>XmlAttribute<ept id=\"p2\">**</ept> node is inserted.","pos":[3596,3791],"source":" If an attribute with the same name is already present in the attribute collection, the existing **XmlAttribute** node is removed from the collection and the new **XmlAttribute** node is inserted."},{"content":"This performs the same way as the <bpt id=\"p1\">**</bpt>SetAttribute<ept id=\"p1\">**</ept> method.","pos":[3792,3850],"source":" This performs the same way as the **SetAttribute** method."},{"content":"These methods take, as a parameter, an existing node as a reference point to do the <bpt id=\"p1\">**</bpt>InsertBefore<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>InsertAfter<ept id=\"p2\">**</ept>.","pos":[3851,3972],"source":" These methods take, as a parameter, an existing node as a reference point to do the **InsertBefore** and **InsertAfter**."},{"content":"If you do not provide a reference node indicating where to insert the new node, the default for the <bpt id=\"p1\">**</bpt>InsertAfter<ept id=\"p1\">**</ept> method is to insert the new node at the beginning of the collection.","pos":[3973,4157],"source":" If you do not provide a reference node indicating where to insert the new node, the default for the **InsertAfter** method is to insert the new node at the beginning of the collection."},{"content":"The default position for the <bpt id=\"p1\">**</bpt>InsertBefore<ept id=\"p1\">**</ept>, if no reference node is provided, is at the end of the collection.","pos":[4158,4271],"source":" The default position for the **InsertBefore**, if no reference node is provided, is at the end of the collection."},{"content":"If you created an <bpt id=\"p1\">**</bpt>XmlNamedNodeMap<ept id=\"p1\">**</ept> of attributes, you can add an attribute by name using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamedNodeMap.SetNamedItem%2A&gt;</ph>.","pos":[4278,4424],"source":"If you created an **XmlNamedNodeMap** of attributes, you can add an attribute by name using the <xref:System.Xml.XmlNamedNodeMap.SetNamedItem%2A>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Node Collections in NamedNodeMaps and NodeLists<ept id=\"p1\">](../../../../docs/standard/data/xml/node-collections-in-namednodemaps-and-nodelists.md)</ept>.","pos":[4425,4588],"source":" For more information, see [Node Collections in NamedNodeMaps and NodeLists](../../../../docs/standard/data/xml/node-collections-in-namednodemaps-and-nodelists.md)."},{"pos":[4597,4615],"content":"Default Attributes","linkify":"Default Attributes","nodes":[{"content":"Default Attributes","pos":[0,18]}]},{"content":"If you create an element that is declared to have a default attribute, then a new default attribute with its default value is created by the XML Document Object Model (DOM) and attached to the element.","pos":[4619,4820]},{"content":"The child nodes of the default attribute are also created at this time.","pos":[4821,4892]},{"pos":[4901,4922],"content":"Attribute Child Nodes","linkify":"Attribute Child Nodes","nodes":[{"content":"Attribute Child Nodes","pos":[0,21]}]},{"content":"The value of an attribute node becomes its child nodes.","pos":[4926,4981]},{"content":"There are only two types of valid child nodes: <bpt id=\"p1\">**</bpt>XmlText<ept id=\"p1\">**</ept> nodes, and <bpt id=\"p2\">**</bpt>XmlEntityReference<ept id=\"p2\">**</ept> nodes.","pos":[4982,5081],"source":" There are only two types of valid child nodes: **XmlText** nodes, and **XmlEntityReference** nodes."},{"content":"These are child nodes in the sense that methods such as <bpt id=\"p1\">**</bpt>FirstChild<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>LastChild<ept id=\"p2\">**</ept> process them as child nodes.","pos":[5082,5199],"source":" These are child nodes in the sense that methods such as **FirstChild** and **LastChild** process them as child nodes."},{"content":"This distinction of an attribute having child nodes is important when trying to remove attributes or attribute child nodes.","pos":[5200,5323]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Removing Attributes from an Element Node in the DOM<ept id=\"p1\">](../../../../docs/standard/data/xml/removing-attributes-from-an-element-node-in-the-dom.md)</ept>.","pos":[5324,5495],"source":" For more information, see [Removing Attributes from an Element Node in the DOM](../../../../docs/standard/data/xml/removing-attributes-from-an-element-node-in-the-dom.md)."},{"pos":[5504,5512],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5516,5618],"content":"<bpt id=\"p1\">[</bpt>XML Document Object Model (DOM)<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)</ept>","source":"[XML Document Object Model (DOM)](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)"}]}