{"content":"---\ntitle: \"How to: Find a Single Descendant Using the Descendants Method (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 0c03468c-efc8-4140-98f3-fb67acd9e8e1\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Find a Single Descendant Using the Descendants Method (Visual Basic)\nYou can use the <xref:System.Xml.Linq.XContainer.Descendants%2A> axis method to quickly write code to find a single uniquely named element. This technique is especially useful when you want to find a particular descendant with a specific name. You could write the code to navigate to the desired element, but it is often faster and easier to write the code using the <xref:System.Xml.Linq.XContainer.Descendants%2A> axis.  \n  \n## Example  \n This example uses the <xref:System.Linq.Enumerable.First%2A> standard query operator.  \n  \n```vb  \nDim root As XElement = _  \n    <Root>  \n        <Child1>  \n            <GrandChild1>GC1 Value</GrandChild1>  \n        </Child1>  \n        <Child2>  \n            <GrandChild2>GC2 Value</GrandChild2>  \n        </Child2>  \n        <Child3>  \n            <GrandChild3>GC3 Value</GrandChild3>  \n        </Child3>  \n        <Child4>  \n            <GrandChild4>GC4 Value</GrandChild4>  \n        </Child4>  \n    </Root>  \nDim grandChild3 As String = _  \n    (From el In root...<GrandChild3> _  \n    Select el).First()  \nConsole.WriteLine(grandChild3)  \n```  \n  \n This code produces the following output:  \n  \n```  \nGC3 Value  \n```  \n  \n## Example  \n The following example shows the same query for XML that is in a namespace. For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n```vb  \nImports <xmlns:aw='http://www.adventure-works.com'>  \n  \nModule Module1  \n    Sub Main()  \n        Dim root As XElement = _  \n            <aw:Root>  \n                <aw:Child1>  \n                    <aw:GrandChild1>GC1 Value</aw:GrandChild1>  \n                </aw:Child1>  \n                <aw:Child2>  \n                    <aw:GrandChild2>GC2 Value</aw:GrandChild2>  \n                </aw:Child2>  \n                <aw:Child3>  \n                    <aw:GrandChild3>GC3 Value</aw:GrandChild3>  \n                </aw:Child3>  \n                <aw:Child4>  \n                    <aw:GrandChild4>GC4 Value</aw:GrandChild4>  \n                </aw:Child4>  \n            </aw:Root>  \n        Dim grandChild3 As String = _  \n            (From el In root...<aw:GrandChild3> _  \n            Select el).First()  \n        Console.WriteLine(grandChild3)  \n    End Sub  \nEnd Module  \n```  \n  \n This code produces the following output:  \n  \n```  \nGC3 Value  \n```  \n  \n## See Also  \n [Basic Queries (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)","nodes":[{"pos":[12,105],"content":"How to: Find a Single Descendant Using the Descendants Method (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Find a Single Descendant Using the Descendants Method (Visual Basic) | Microsoft Docs","pos":[0,93]}]},{"pos":[412,488],"content":"How to: Find a Single Descendant Using the Descendants Method (Visual Basic)","linkify":"How to: Find a Single Descendant Using the Descendants Method (Visual Basic)","nodes":[{"content":"How to: Find a Single Descendant Using the Descendants Method (Visual Basic)","pos":[0,76]}]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</ph> axis method to quickly write code to find a single uniquely named element.","pos":[489,628],"source":"You can use the <xref:System.Xml.Linq.XContainer.Descendants%2A> axis method to quickly write code to find a single uniquely named element."},{"content":"This technique is especially useful when you want to find a particular descendant with a specific name.","pos":[629,732]},{"content":"You could write the code to navigate to the desired element, but it is often faster and easier to write the code using the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</ph> axis.","pos":[733,910],"source":" You could write the code to navigate to the desired element, but it is often faster and easier to write the code using the <xref:System.Xml.Linq.XContainer.Descendants%2A> axis."},{"pos":[919,926],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example uses the <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph> standard query operator.","pos":[930,1015],"source":"This example uses the <xref:System.Linq.Enumerable.First%2A> standard query operator."},{"content":"This code produces the following output:","pos":[1584,1624]},{"pos":[1660,1667],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the same query for XML that is in a namespace.","pos":[1671,1745]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","pos":[1746,1906],"source":" For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"content":"This code produces the following output:","pos":[2802,2842]},{"pos":[2878,2886],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2890,3021],"content":"<bpt id=\"p1\">[</bpt>Basic Queries (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept>","source":"[Basic Queries (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)"}]}