{"content":"---\ntitle: \"Exposing .NET Framework Components to COM | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"exposing .NET Framework components to COM\"\n  - \"interoperation with unmanaged code, exposing .NET Framework components\"\n  - \"COM interop, exposing COM components\"\nms.assetid: e42a65f7-1e61-411f-b09a-aca1bbce24c6\ncaps.latest.revision: 6\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Exposing .NET Framework Components to COM\nWriting a .NET type and consuming that type from unmanaged code are distinct activities for developers. This section describes several tips for writing managed code that interoperates with COM clients:  \n  \n-   [Qualifying .NET types for interoperation](../../../docs/framework/interop/qualifying-net-types-for-interoperation.md).  \n  \n     All managed types, methods, properties, fields, and events that you want to expose to COM must be public. Types must have a public default constructor, which is the only constructor that can be invoked through COM.  \n  \n-   [Applying interop attributes](../../../docs/framework/interop/applying-interop-attributes.md).  \n  \n     Custom attributes within managed code can enhance the interoperability of a component.  \n  \n-   [Packaging an assembly for COM](../../../docs/framework/interop/packaging-an-assembly-for-com.md).  \n  \n     COM developers might require that you summarize the steps involved in referencing and deploying your assemblies.  \n  \n Additionally, this section identifies the tasks related to consuming a managed type from a COM client.  \n  \n#### To consume a managed type from COM  \n  \n1.  [Register assemblies with COM](../../../docs/framework/interop/registering-assemblies-with-com.md).  \n  \n     Types in an assembly (and type libraries) must be registered at design time. If an installer does not register the assembly, instruct COM developers to use Regasm.exe.  \n  \n2.  [Reference .NET types from COM](../../../docs/framework/interop/how-to-reference-net-types-from-com.md).  \n  \n     COM developers can reference types in an assembly using the same tools and techniques they use today.  \n  \n3.  [Call a .NET object](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33).  \n  \n     COM developers can call methods on the .NET object the same way they call methods on any unmanaged type. For example, the COM **CoCreateInstance** API activates .NET objects.  \n  \n4.  [Deploy an application for COM access](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce).  \n  \n     A strong-named assembly can be installed in the global assembly cache and requires a signature from its publisher. Assemblies that are not strong named must be installed in the application directory of the client.  \n  \n## See Also  \n [Interoperating with Unmanaged Code](../../../docs/framework/interop/index.md)   \n [COM Interop Sample: COM Client and .NET Server](../../../docs/framework/interop/com-interop-sample-com-client-and-net-server.md)","nodes":[{"pos":[4,613],"nodes":[{"content":"Exposing .NET Framework Components to COM | Microsoft Docs","nodes":[{"pos":[0,58],"content":"Exposing .NET Framework Components to COM | Microsoft Docs","nodes":[{"content":"Exposing .NET Framework Components to COM | Microsoft Docs","pos":[0,58]}]}],"pos":[6,67],"yaml":true}],"content":"title: \"Exposing .NET Framework Components to COM | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"exposing .NET Framework components to COM\"\n  - \"interoperation with unmanaged code, exposing .NET Framework components\"\n  - \"COM interop, exposing COM components\"\nms.assetid: e42a65f7-1e61-411f-b09a-aca1bbce24c6\ncaps.latest.revision: 6\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[620,661],"content":"Exposing .NET Framework Components to COM","linkify":"Exposing .NET Framework Components to COM","nodes":[{"content":"Exposing .NET Framework Components to COM","pos":[0,41]}]},{"content":"Writing a .NET type and consuming that type from unmanaged code are distinct activities for developers.","pos":[662,765]},{"content":"This section describes several tips for writing managed code that interoperates with COM clients:","pos":[766,863]},{"pos":[873,992],"content":"<bpt id=\"p1\">[</bpt>Qualifying .NET types for interoperation<ept id=\"p1\">](../../../docs/framework/interop/qualifying-net-types-for-interoperation.md)</ept>.","source":"[Qualifying .NET types for interoperation](../../../docs/framework/interop/qualifying-net-types-for-interoperation.md)."},{"content":"All managed types, methods, properties, fields, and events that you want to expose to COM must be public.","pos":[1003,1108]},{"content":"Types must have a public default constructor, which is the only constructor that can be invoked through COM.","pos":[1109,1217]},{"pos":[1227,1321],"content":"<bpt id=\"p1\">[</bpt>Applying interop attributes<ept id=\"p1\">](../../../docs/framework/interop/applying-interop-attributes.md)</ept>.","source":"[Applying interop attributes](../../../docs/framework/interop/applying-interop-attributes.md)."},{"content":"Custom attributes within managed code can enhance the interoperability of a component.","pos":[1332,1418]},{"pos":[1428,1526],"content":"<bpt id=\"p1\">[</bpt>Packaging an assembly for COM<ept id=\"p1\">](../../../docs/framework/interop/packaging-an-assembly-for-com.md)</ept>.","source":"[Packaging an assembly for COM](../../../docs/framework/interop/packaging-an-assembly-for-com.md)."},{"content":"COM developers might require that you summarize the steps involved in referencing and deploying your assemblies.","pos":[1537,1649]},{"content":"Additionally, this section identifies the tasks related to consuming a managed type from a COM client.","pos":[1656,1758]},{"pos":[1769,1803],"content":"To consume a managed type from COM","linkify":"To consume a managed type from COM","nodes":[{"content":"To consume a managed type from COM","pos":[0,34]}]},{"pos":[1813,1912],"content":"<bpt id=\"p1\">[</bpt>Register assemblies with COM<ept id=\"p1\">](../../../docs/framework/interop/registering-assemblies-with-com.md)</ept>.","source":"[Register assemblies with COM](../../../docs/framework/interop/registering-assemblies-with-com.md)."},{"content":"Types in an assembly (and type libraries) must be registered at design time.","pos":[1923,1999]},{"content":"If an installer does not register the assembly, instruct COM developers to use Regasm.exe.","pos":[2000,2090]},{"pos":[2100,2204],"content":"<bpt id=\"p1\">[</bpt>Reference .NET types from COM<ept id=\"p1\">](../../../docs/framework/interop/how-to-reference-net-types-from-com.md)</ept>.","source":"[Reference .NET types from COM](../../../docs/framework/interop/how-to-reference-net-types-from-com.md)."},{"content":"COM developers can reference types in an assembly using the same tools and techniques they use today.","pos":[2215,2316]},{"pos":[2326,2417],"content":"<bpt id=\"p1\">[</bpt>Call a .NET object<ept id=\"p1\">](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33)</ept>.","source":"[Call a .NET object](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33)."},{"content":"COM developers can call methods on the .NET object the same way they call methods on any unmanaged type.","pos":[2428,2532]},{"content":"For example, the COM <bpt id=\"p1\">**</bpt>CoCreateInstance<ept id=\"p1\">**</ept> API activates .NET objects.","pos":[2533,2602],"source":" For example, the COM **CoCreateInstance** API activates .NET objects."},{"pos":[2612,2721],"content":"<bpt id=\"p1\">[</bpt>Deploy an application for COM access<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce)</ept>.","source":"[Deploy an application for COM access](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce)."},{"content":"A strong-named assembly can be installed in the global assembly cache and requires a signature from its publisher.","pos":[2732,2846]},{"content":"Assemblies that are not strong named must be installed in the application directory of the client.","pos":[2847,2945]},{"pos":[2954,2962],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Interoperating with Unmanaged Code<ept id=\"p1\">](../../../docs/framework/interop/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2966,3045],"source":"[Interoperating with Unmanaged Code](../../../docs/framework/interop/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>COM Interop Sample: COM Client and .NET Server<ept id=\"p1\">](../../../docs/framework/interop/com-interop-sample-com-client-and-net-server.md)</ept>","pos":[3049,3178],"source":"[COM Interop Sample: COM Client and .NET Server](../../../docs/framework/interop/com-interop-sample-com-client-and-net-server.md)"}]}