<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8110fe77f10ee48a72c7d8a0d5a7f643aa4f8c98</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\how-to-connect-to-a-database.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee81ebbba0d4de090398a55aa225fc9712140b2e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9577e1f98c9b8ff0f8a1ecb15c1159c479d58237</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Connect to a Database | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Connect to a Database</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is the main conduit by which you connect to a database, retrieve objects from it, and submit changes back to it.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You use the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> just as you would use an <ph id="ph2">[!INCLUDE[vstecado](../../../../../../includes/vstecado-md.md)]</ph> <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In fact, the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is initialized with a connection or connection string that you supply.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>DataContext Methods (O/R Designer)<ept id="p1">](/visualstudio/data-tools/datacontext-methods-o-r-designer)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The purpose of the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is to translate your requests for objects into SQL queries to be made against the database, and then to assemble objects out of the results.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> enables <ph id="ph2">[!INCLUDE[vbteclinqext](../../../../../../includes/vbteclinqext-md.md)]</ph> by implementing the same operator pattern as the Standard Query Operators, such as <ph id="ph3">`Where`</ph> and <ph id="ph4">`Select`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Maintaining a secure connection is of the highest importance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Security in LINQ to SQL<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/security-in-linq-to-sql.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used to connect to the Northwind sample database and to retrieve rows of customers whose city is London.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DLinqCommunicatingWithDatabase#1<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DLinqCommunicatingWithDatabase#1<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Each database table is represented as a <ph id="ph1">`Table`</ph> collection available by way of the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> method, by using the entity class to identify it.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Best practice is to declare a strongly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instead of relying on the basic <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A strongly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> declares all <ph id="ph2">`Table`</ph> collections as members of the context, as in the following example.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DLinqCommunicatingWithDatabase#2<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DLinqCommunicatingWithDatabase#2<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can then express the query for customers from London more simply as:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DLinqCommunicatingWithDatabase#5<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DLinqCommunicatingWithDatabase#5<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Communicating with the Database<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/communicating-with-the-database.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>