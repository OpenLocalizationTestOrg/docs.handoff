{"content":"---\ntitle: \"operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"operator_CSharpKeyword\"\n  - \"operator\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"operator keyword [C#]\"\nms.assetid: 59218cce-e90e-42f6-a6bb-30300981b86a\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# operator (C# Reference)\nUse the `operator` keyword to overload a built-in operator or to provide a user-defined conversion in a class or struct declaration.  \n  \n## Example  \n The following is a very simplified class for fractional numbers. It overloads the + and * operators to perform fractional addition and multiplication, and also provides a conversion operator that converts a Fraction type to a double type.  \n  \n [!code-cs[csrefKeywordsConversion#6](../../../csharp/language-reference/keywords/codesnippet/CSharp/operator_1.cs)]  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [implicit](../../../csharp/language-reference/keywords/implicit.md)   \n [explicit](../../../csharp/language-reference/keywords/explicit.md)   \n [How to: Implement User-Defined Conversions Between Structs](../../../csharp/programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md)","nodes":[{"pos":[4,576],"nodes":[{"content":"operator (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,40],"content":"operator (C# Reference) | Microsoft Docs","nodes":[{"content":"operator (C# Reference) | Microsoft Docs","pos":[0,40]}]}],"pos":[6,49],"yaml":true}],"content":"title: \"operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"operator_CSharpKeyword\"\n  - \"operator\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"operator keyword [C#]\"\nms.assetid: 59218cce-e90e-42f6-a6bb-30300981b86a\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[583,606],"content":"operator (C# Reference)","linkify":"operator (C# Reference)","nodes":[{"content":"operator (C# Reference)","pos":[0,23]}]},{"pos":[607,739],"content":"Use the <ph id=\"ph1\">`operator`</ph> keyword to overload a built-in operator or to provide a user-defined conversion in a class or struct declaration.","source":"Use the `operator` keyword to overload a built-in operator or to provide a user-defined conversion in a class or struct declaration."},{"pos":[748,755],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following is a very simplified class for fractional numbers.","pos":[759,823]},{"content":"It overloads the + and * operators to perform fractional addition and multiplication, and also provides a conversion operator that converts a Fraction type to a double type.","pos":[824,997]},{"pos":[1004,1119],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsConversion#6<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/operator_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsConversion#6](../../../csharp/language-reference/keywords/codesnippet/CSharp/operator_1.cs)]"},{"pos":[1128,1153],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[1267,1275],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1279,1339],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1343,1410],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1414,1482],"source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>implicit<ept id=\"p1\">](../../../csharp/language-reference/keywords/implicit.md)</ept><ph id=\"ph1\"> </ph>","pos":[1486,1554],"source":"[implicit](../../../csharp/language-reference/keywords/implicit.md) "},{"content":"<bpt id=\"p1\">[</bpt>explicit<ept id=\"p1\">](../../../csharp/language-reference/keywords/explicit.md)</ept><ph id=\"ph1\"> </ph>","pos":[1558,1626],"source":"[explicit](../../../csharp/language-reference/keywords/explicit.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Implement User-Defined Conversions Between Structs<ept id=\"p1\">](../../../csharp/programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md)</ept>","pos":[1630,1819],"source":"[How to: Implement User-Defined Conversions Between Structs](../../../csharp/programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md)"}]}