<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a939fc1a6cb3faeae94bfe0990c2bf0b4625af3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\creating-a-dataview-object-linq-to-dataset.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1b2f4d3de2af19ebf66f3dd9b8a258e92796ff3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1c334037b2835432714de3cf05cdd29f6666a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating a DataView Object (LINQ to DataSet) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating a DataView Object (LINQ to DataSet)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are two ways to create a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> in the <ph id="ph2">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> context.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can create a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from a <ph id="ph2">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> query over a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or you can create it from a typed or un-typed <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In both cases, you create the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> by using one of the<ph id="ph2">&lt;xref:System.Data.DataTableExtensions.AsDataView%2A&gt;</ph> extension methods; <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> is not directly constructible in the <ph id="ph4">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> context.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> has been created, you can bind it to a UI control in a Windows forms application or an ASP.NET application, or change the filtering and sorting settings.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> constructs an index, which significantly increases the performance of operations that can use the index, such as filtering and sorting.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The index for a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is built both when the <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> is created and when any of the sorting or filtering information is modified.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creating a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> and then setting the sorting or filtering information later causes the index to be built at least twice: once when the <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> is created, and again when any of the sort or filter properties are modified.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about filtering and sorting with <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>, see <bpt id="p1">[</bpt>Filtering with DataView<ept id="p1">](../../../../docs/framework/data/adonet/filtering-with-dataview-linq-to-dataset.md)</ept> and <bpt id="p2">[</bpt>Sorting with DataView<ept id="p2">](../../../../docs/framework/data/adonet/sorting-with-dataview-linq-to-dataset.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating DataView from a LINQ to DataSet Query</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object can be created from the results of a <ph id="ph2">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> query, where the results are a projection of <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The newly created <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> inherits the filtering and sorting information from the query it is created from.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In most cases, the expressions used for filtering and sorting should not have side effects and must be deterministic.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Also, the expressions should not contain any logic that depend on a set number of executions, as the sorting and filtering operations may be executed any number of times.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creating a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from a query that returns anonymous types or queries that perform join operations is not supported.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Only the following query operators are supported in a query used to create <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that when a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is created from a <ph id="ph2">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> query the <ph id="ph3">&lt;xref:System.Data.EnumerableRowCollectionExtensions.Select%2A&gt;</ph> method must be the final method called in the query.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is shown in the following example, which creates a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> of online orders sorted by total due:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP DataView Samples#CreateLDVFromQuery1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP DataView Samples#CreateLDVFromQuery1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also use the the string-based <ph id="ph1">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> properties to filter and sort a <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> after it has been created from a query.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Note that this will clear the sorting and filtering information inherited from the query.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from a <ph id="ph2">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> query that filters by last names that start with 'S'.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The string-based <ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> property is set to sort on last names in ascending order and then first names in descending order:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP DataView Samples#CreateLDVFromQueryStringSort<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquerystringsort)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP DataView Samples#CreateLDVFromQueryStringSort<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquerystringsort)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creating a DataView from a DataTable</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In addition to being created from a <ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> query, a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> object can be created from a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> by using the <ph id="ph4">&lt;xref:System.Data.DataTableExtensions.AsDataView%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from the SalesOrderDetail table and sets it as the data source of a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This object acts as a proxy for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP DataView Samples#CreateLDVFromTable<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP DataView Samples#CreateLDVFromTable<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Filtering and sorting can be set on the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> after it has been created from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from the Contact table and sets the <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> property to sort on last names in ascending order and then first names in descending order:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP DataView Samples#LDVStringSort<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#ldvstringsort)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP DataView Samples#LDVStringSort<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#ldvstringsort)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>However, there is a performance loss that comes with setting the <ph id="ph1">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> property after the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> has been created from a query, because <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> constructs an index to support filtering and sorting operations.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> property rebuilds the index for the data, adding overhead to your application and decreasing performance.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When possible, it is better to specify the filtering and sorting information when you first create the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> and avoid modifying it afterwards.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding and LINQ to DataSet<ept id="p1">](../../../../docs/framework/data/adonet/data-binding-and-linq-to-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Filtering with DataView<ept id="p1">](../../../../docs/framework/data/adonet/filtering-with-dataview-linq-to-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sorting with DataView<ept id="p1">](../../../../docs/framework/data/adonet/sorting-with-dataview-linq-to-dataset.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>