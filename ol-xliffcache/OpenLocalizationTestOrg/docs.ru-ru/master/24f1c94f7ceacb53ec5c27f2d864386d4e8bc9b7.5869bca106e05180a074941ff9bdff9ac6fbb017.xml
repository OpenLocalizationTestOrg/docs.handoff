{"content":"---\ntitle: \"How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"combo boxes, adding items\"\n  - \"list boxes, removing items\"\n  - \"ComboBox control [Windows Forms], adding and removing items\"\n  - \"ListBox control [Windows Forms], adding and removing items\"\n  - \"list boxes, adding items\"\n  - \"combo boxes, removing items\"\n  - \"CheckedListBox control [Windows Forms], adding and removing items\"\nms.assetid: 7224c8d2-4118-443e-ae1e-d7c17d1e69ee\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control\nItems can be added to a Windows Forms combo box, list box, or checked list box in a variety of ways, because these controls can be bound to a variety of data sources. However, this topic demonstrates the simplest method and requires no data binding. The items displayed are usually strings; however, any object can be used. The text that is displayed in the control is the value returned by the object's`ToString` method.  \n  \n### To add items  \n  \n1.  Add the string or object to the list by using the `Add` method of the `ObjectCollection` class. The collection is referenced using the`Items` property:  \n  \n    ```vb  \n    ComboBox1.Items.Add(\"Tokyo\")  \n  \n    ```  \n  \n    ```csharp  \n    comboBox1.Items.Add(\"Tokyo\");  \n  \n    ```  \n  \n    ```cpp  \n    comboBox1->Items->Add(\"Tokyo\");  \n    ```  \n  \n     - or -  \n  \n2.  Insert the string or object at the desired point in the list with the`Insert` method:  \n  \n    ```vb  \n    CheckedListBox1.Items.Insert(0, \"Copenhagen\")  \n  \n    ```  \n  \n    ```csharp  \n    checkedListBox1.Items.Insert(0, \"Copenhagen\");  \n  \n    ```  \n  \n    ```cpp  \n    checkedListBox1->Items->Insert(0, \"Copenhagen\");  \n    ```  \n  \n     - or -  \n  \n3.  Assign an entire array to the`Items` collection:  \n  \n    ```vb  \n    Dim ItemObject(9) As System.Object  \n    Dim i As Integer  \n       For i = 0 To 9  \n       ItemObject(i) = \"Item\" & i  \n    Next i  \n    ListBox1.Items.AddRange(ItemObject)  \n  \n    ```  \n  \n    ```csharp  \n    System.Object[] ItemObject = new System.Object[10];  \n    for (int i = 0; i <= 9; i++)  \n    {  \n       ItemObject[i] = \"Item\" + i;  \n    }  \n    listBox1.Items.AddRange(ItemObject);  \n  \n    ```  \n  \n    ```cpp  \n    Array<System::Object^>^ ItemObject = gcnew Array<System::Object^>(10);  \n    for (int i = 0; i <= 9; i++)  \n    {  \n       ItemObject[i] = String::Concat(\"Item\", i.ToString());  \n    }  \n    listBox1->Items->AddRange(ItemObject);  \n    ```  \n  \n### To remove an item  \n  \n1.  Call the`Remove` or`RemoveAt` method to delete items.  \n  \n     `Remove` has one argument that specifies the item to remove.`RemoveAt` removes the item with the specified index number.  \n  \n    ```vb  \n    ' To remove item with index 0:  \n    ComboBox1.Items.RemoveAt(0)  \n    ' To remove currently selected item:  \n    ComboBox1.Items.Remove(ComboBox1.SelectedItem)  \n    ' To remove \"Tokyo\" item:  \n    ComboBox1.Items.Remove(\"Tokyo\")  \n  \n    ```  \n  \n    ```csharp  \n    // To remove item with index 0:  \n    comboBox1.Items.RemoveAt(0);  \n    // To remove currently selected item:  \n    comboBox1.Items.Remove(comboBox1.SelectedItem);  \n    // To remove \"Tokyo\" item:  \n    comboBox1.Items.Remove(\"Tokyo\");  \n  \n    ```  \n  \n    ```cpp  \n    // To remove item with index 0:  \n    comboBox1->Items->RemoveAt(0);  \n    // To remove currently selected item:  \n    comboBox1->Items->Remove(comboBox1->SelectedItem);  \n    // To remove \"Tokyo\" item:  \n    comboBox1->Items->Remove(\"Tokyo\");  \n    ```  \n  \n### To remove all items  \n  \n1.  Call the `Clear` method to remove all items from the collection:  \n  \n    ```vb  \n    ListBox1.Items.Clear()  \n  \n    ```  \n  \n    ```csharp  \n    listBox1.Items.Clear();  \n  \n    ```  \n  \n    ```cpp  \n    listBox1->Items->Clear();  \n    ```  \n  \n## See Also  \n <xref:System.Windows.Forms.ComboBox>   \n <xref:System.Windows.Forms.ListBox>   \n <xref:System.Windows.Forms.CheckedListBox>   \n [How to: Sort the Contents of a Windows Forms ComboBox, ListBox, or CheckedListBox Control](../../../../docs/framework/winforms/controls/sort-the-contents-of-a-wf-combobox-listbox-or-checkedlistbox-control.md)   \n [When to Use a Windows Forms ComboBox Instead of a ListBox](../../../../docs/framework/winforms/controls/when-to-use-a-windows-forms-combobox-instead-of-a-listbox.md)   \n [Windows Forms Controls Used to List Options](../../../../docs/framework/winforms/controls/windows-forms-controls-used-to-list-options.md)","nodes":[{"pos":[12,123],"content":"How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control | Microsoft Docs","pos":[0,111]}]},{"pos":[816,910],"content":"How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control","linkify":"How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control","nodes":[{"content":"How to: Add and Remove Items from a Windows Forms ComboBox, ListBox, or CheckedListBox Control","pos":[0,94]}]},{"content":"Items can be added to a Windows Forms combo box, list box, or checked list box in a variety of ways, because these controls can be bound to a variety of data sources.","pos":[911,1077]},{"content":"However, this topic demonstrates the simplest method and requires no data binding.","pos":[1078,1160]},{"content":"The items displayed are usually strings; however, any object can be used.","pos":[1161,1234]},{"content":"The text that is displayed in the control is the value returned by the object's<ph id=\"ph1\">`ToString`</ph> method.","pos":[1235,1332],"source":" The text that is displayed in the control is the value returned by the object's`ToString` method."},{"pos":[1342,1354],"content":"To add items","linkify":"To add items","nodes":[{"content":"To add items","pos":[0,12]}]},{"content":"Add the string or object to the list by using the <ph id=\"ph1\">`Add`</ph> method of the <ph id=\"ph2\">`ObjectCollection`</ph> class.","pos":[1364,1459],"source":"Add the string or object to the list by using the `Add` method of the `ObjectCollection` class."},{"content":"The collection is referenced using the<ph id=\"ph1\">`Items`</ph> property:","pos":[1460,1515],"source":" The collection is referenced using the`Items` property:"},{"content":"or -","pos":[1723,1727]},{"pos":[1737,1822],"content":"Insert the string or object at the desired point in the list with the<ph id=\"ph1\">`Insert`</ph> method:","source":"Insert the string or object at the desired point in the list with the`Insert` method:"},{"content":"or -","pos":[2081,2085]},{"pos":[2095,2143],"content":"Assign an entire array to the<ph id=\"ph1\">`Items`</ph> collection:","source":"Assign an entire array to the`Items` collection:"},{"pos":[2843,2860],"content":"To remove an item","linkify":"To remove an item","nodes":[{"content":"To remove an item","pos":[0,17]}]},{"pos":[2870,2923],"content":"Call the<ph id=\"ph1\">`Remove`</ph> or<ph id=\"ph2\">`RemoveAt`</ph> method to delete items.","source":"Call the`Remove` or`RemoveAt` method to delete items."},{"content":"<ph id=\"ph1\">`Remove`</ph> has one argument that specifies the item to remove.<ph id=\"ph2\">`RemoveAt`</ph>","pos":[2934,3004],"source":"`Remove` has one argument that specifies the item to remove.`RemoveAt`"},{"content":"removes the item with the specified index number.","pos":[3005,3054]},{"pos":[3880,3899],"content":"To remove all items","linkify":"To remove all items","nodes":[{"content":"To remove all items","pos":[0,19]}]},{"pos":[3909,3973],"content":"Call the <ph id=\"ph1\">`Clear`</ph> method to remove all items from the collection:","source":"Call the `Clear` method to remove all items from the collection:"},{"pos":[4159,4167],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>How to: Sort the Contents of a Windows Forms ComboBox, ListBox, or CheckedListBox Control<ept id=\"p1\">](../../../../docs/framework/winforms/controls/sort-the-contents-of-a-wf-combobox-listbox-or-checkedlistbox-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[4298,4509],"source":" [How to: Sort the Contents of a Windows Forms ComboBox, ListBox, or CheckedListBox Control](../../../../docs/framework/winforms/controls/sort-the-contents-of-a-wf-combobox-listbox-or-checkedlistbox-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>When to Use a Windows Forms ComboBox Instead of a ListBox<ept id=\"p1\">](../../../../docs/framework/winforms/controls/when-to-use-a-windows-forms-combobox-instead-of-a-listbox.md)</ept><ph id=\"ph1\"> </ph>","pos":[4512,4680],"source":" [When to Use a Windows Forms ComboBox Instead of a ListBox](../../../../docs/framework/winforms/controls/when-to-use-a-windows-forms-combobox-instead-of-a-listbox.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Windows Forms Controls Used to List Options<ept id=\"p1\">](../../../../docs/framework/winforms/controls/windows-forms-controls-used-to-list-options.md)</ept>","pos":[4683,4822],"source":" [Windows Forms Controls Used to List Options](../../../../docs/framework/winforms/controls/windows-forms-controls-used-to-list-options.md)"}]}