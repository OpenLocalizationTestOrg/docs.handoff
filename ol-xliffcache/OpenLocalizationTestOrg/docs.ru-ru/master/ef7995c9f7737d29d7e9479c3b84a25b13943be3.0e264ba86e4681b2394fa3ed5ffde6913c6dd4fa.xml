{"content":"---\ntitle: \"base keyword - C# Reference\"\nms.custom: seodec18\n\ndescription: Learn about the base keyword, which is used to access members of the base class from within a derived class in C#.\nms.date: 07/20/2015\nf1_keywords: \n  - \"base\"\n  - \"BaseClass.BaseClass\"\n  - \"base_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"base keyword [C#]\"\nms.assetid: 8b645dbe-1a33-49b8-8716-1c401f9a5ea5\n---\n# base (C# Reference)\n\nThe `base` keyword is used to access members of the base class from within a derived class:\n\n- Call a method on the base class that has been overridden by another method.\n\n- Specify which base-class constructor should be called when creating instances of the derived class.\n\nA base class access is permitted only in a constructor, an instance method, or an instance property accessor.\n\nIt is an error to use the `base` keyword from within a static method.\n\nThe base class that is accessed is the base class specified in the class declaration. For example, if you specify `class ClassB : ClassA`, the members of ClassA are accessed from ClassB, regardless of the base class of ClassA.\n\n## Example\n\nIn this example, both the base class, `Person`, and the derived class, `Employee`, have a method named `Getinfo`. By using the `base` keyword, it is possible to call the `Getinfo` method on the base class, from within the derived class.\n\n[!code-csharp[csrefKeywordsAccess#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsAccess/CS/csrefKeywordsAccess.cs#1)]\n\nFor additional examples, see [new](../../../csharp/language-reference/keywords/new.md), [virtual](../../../csharp/language-reference/keywords/virtual.md), and [override](../../../csharp/language-reference/keywords/override.md).\n\n## Example\n\nThis example shows how to specify the base-class constructor called when creating instances of a derived class.\n\n[!code-csharp[csrefKeywordsAccess#2](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsAccess/CS/csrefKeywordsAccess.cs#2)]\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [C# Keywords](../../../csharp/language-reference/keywords/index.md)\n- [this](../../../csharp/language-reference/keywords/this.md)\n","nodes":[{"pos":[4,380],"embed":true,"restype":"x-metadata","content":"title: \"base keyword - C# Reference\"\nms.custom: seodec18\n\ndescription: Learn about the base keyword, which is used to access members of the base class from within a derived class in C#.\nms.date: 07/20/2015\nf1_keywords: \n  - \"base\"\n  - \"BaseClass.BaseClass\"\n  - \"base_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"base keyword [C#]\"\nms.assetid: 8b645dbe-1a33-49b8-8716-1c401f9a5ea5","nodes":[{"content":"base keyword - C# Reference","nodes":[{"pos":[0,27],"content":"base keyword - C# Reference","nodes":[{"content":"base keyword - C# Reference","pos":[0,27]}]}],"path":["title"],"nosxs":false},{"content":"Learn about the base keyword, which is used to access members of the base class from within a derived class in C#.","nodes":[{"pos":[0,114],"content":"Learn about the base keyword, which is used to access members of the base class from within a derived class in C#.","nodes":[{"content":"Learn about the base keyword, which is used to access members of the base class from within a derived class in C#.","pos":[0,114]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[387,406],"content":"base (C# Reference)","linkify":"base (C# Reference)","nodes":[{"content":"base (C# Reference)","pos":[0,19]}]},{"pos":[408,499],"content":"The <ph id=\"ph1\">`base`</ph> keyword is used to access members of the base class from within a derived class:","source":"The `base` keyword is used to access members of the base class from within a derived class:"},{"content":"Call a method on the base class that has been overridden by another method.","pos":[503,578]},{"content":"Specify which base-class constructor should be called when creating instances of the derived class.","pos":[582,681]},{"content":"A base class access is permitted only in a constructor, an instance method, or an instance property accessor.","pos":[683,792]},{"pos":[794,863],"content":"It is an error to use the <ph id=\"ph1\">`base`</ph> keyword from within a static method.","source":"It is an error to use the `base` keyword from within a static method."},{"content":"The base class that is accessed is the base class specified in the class declaration.","pos":[865,950]},{"content":"For example, if you specify <ph id=\"ph1\">`class ClassB : ClassA`</ph>, the members of ClassA are accessed from ClassB, regardless of the base class of ClassA.","pos":[951,1091],"source":" For example, if you specify `class ClassB : ClassA`, the members of ClassA are accessed from ClassB, regardless of the base class of ClassA."},{"pos":[1096,1103],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, both the base class, <ph id=\"ph1\">`Person`</ph>, and the derived class, <ph id=\"ph2\">`Employee`</ph>, have a method named <ph id=\"ph3\">`Getinfo`</ph>.","pos":[1105,1218],"source":"In this example, both the base class, `Person`, and the derived class, `Employee`, have a method named `Getinfo`."},{"content":"By using the <ph id=\"ph1\">`base`</ph> keyword, it is possible to call the <ph id=\"ph2\">`Getinfo`</ph> method on the base class, from within the derived class.","pos":[1219,1341],"source":" By using the `base` keyword, it is possible to call the `Getinfo` method on the base class, from within the derived class."},{"pos":[1478,1705],"content":"For additional examples, see <bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](../../../csharp/language-reference/keywords/new.md)</ept>, <bpt id=\"p2\">[</bpt>virtual<ept id=\"p2\">](../../../csharp/language-reference/keywords/virtual.md)</ept>, and <bpt id=\"p3\">[</bpt>override<ept id=\"p3\">](../../../csharp/language-reference/keywords/override.md)</ept>.","source":"For additional examples, see [new](../../../csharp/language-reference/keywords/new.md), [virtual](../../../csharp/language-reference/keywords/virtual.md), and [override](../../../csharp/language-reference/keywords/override.md)."},{"pos":[1710,1717],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example shows how to specify the base-class constructor called when creating instances of a derived class.","pos":[1719,1830]},{"pos":[1970,1995],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[2061,2069],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2073,2132],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[2135,2201],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2204,2271],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept>","source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md)"},{"pos":[2274,2333],"content":"<bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](../../../csharp/language-reference/keywords/this.md)</ept>","source":"[this](../../../csharp/language-reference/keywords/this.md)"}]}