{"content":"---\ntitle: \"Return the Set Difference Between Two Sequences | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 62efb546-c898-408f-af21-36e7c6fed217\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Return the Set Difference Between Two Sequences\nUse the <xref:System.Linq.Queryable.Except%2A> operator to return the set difference between two sequences.  \n  \n## Example  \n This example uses <xref:System.Linq.Queryable.Except%2A> to return a sequence of all countries in which `Customers` live but in which no `Employees` live.  \n  \n [!code-csharp[DLinqQueryExamples#41](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#41)]\n [!code-vb[DLinqQueryExamples#41](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#41)]  \n  \n In [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)], the <xref:System.Linq.Queryable.Except%2A> operation is well defined only on sets. The semantics for multisets is undefined.  \n  \n## See Also  \n [Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)   \n [Standard Query Operator Translation](../../../../../../docs/framework/data/adonet/sql/linq/standard-query-operator-translation.md)","nodes":[{"pos":[4,378],"embed":true,"restype":"x-metadata","content":"title: \"Return the Set Difference Between Two Sequences | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 62efb546-c898-408f-af21-36e7c6fed217\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"Return the Set Difference Between Two Sequences | Microsoft Docs","nodes":[{"pos":[0,64],"content":"Return the Set Difference Between Two Sequences | Microsoft Docs","nodes":[{"content":"Return the Set Difference Between Two Sequences | Microsoft Docs","pos":[0,64]}]}],"path":["title"]}],"yml":true},{"pos":[385,432],"content":"Return the Set Difference Between Two Sequences","linkify":"Return the Set Difference Between Two Sequences","nodes":[{"content":"Return the Set Difference Between Two Sequences","pos":[0,47]}]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Linq.Queryable.Except%2A&gt;</ph> operator to return the set difference between two sequences.","pos":[433,540],"source":"Use the <xref:System.Linq.Queryable.Except%2A> operator to return the set difference between two sequences."},{"pos":[549,556],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[560,714],"content":"This example uses <ph id=\"ph1\">&lt;xref:System.Linq.Queryable.Except%2A&gt;</ph> to return a sequence of all countries in which <ph id=\"ph2\">`Customers`</ph> live but in which no <ph id=\"ph3\">`Employees`</ph> live.","source":"This example uses <xref:System.Linq.Queryable.Except%2A> to return a sequence of all countries in which `Customers` live but in which no `Employees` live."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#41<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#41)</ept><ept id=\"p1\">]</ept>","pos":[721,854],"source":"[!code-csharp[DLinqQueryExamples#41](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#41)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#41<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#41)</ept><ept id=\"p1\">]</ept>","pos":[856,990],"source":"[!code-vb[DLinqQueryExamples#41](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#41)]"},{"content":"In <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.Linq.Queryable.Except%2A&gt;</ph> operation is well defined only on sets.","pos":[997,1151],"source":"In [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)], the <xref:System.Linq.Queryable.Except%2A> operation is well defined only on sets."},{"content":"The semantics for multisets is undefined.","pos":[1152,1193]},{"pos":[1202,1210],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Query Examples<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)</ept><ph id=\"ph1\"> </ph>","pos":[1214,1304],"source":"[Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md) "},{"content":"<bpt id=\"p1\">[</bpt>Standard Query Operator Translation<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/standard-query-operator-translation.md)</ept>","pos":[1308,1439],"source":"[Standard Query Operator Translation](../../../../../../docs/framework/data/adonet/sql/linq/standard-query-operator-translation.md)"}]}