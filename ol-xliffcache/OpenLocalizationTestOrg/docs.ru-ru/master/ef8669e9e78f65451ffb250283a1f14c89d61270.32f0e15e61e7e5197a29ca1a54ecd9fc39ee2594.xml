{"content":"---\ntitle: \"Synchronous Client Socket Example\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"sockets, code examples\"\n  - \"synchronous client sockets\"\n  - \"sockets, synchronous client sockets\"\nms.assetid: 2c7d5be7-2221-467c-a839-5744ec4d576d\n---\n# Synchronous Client Socket Example\nThe following example program creates a client that connects to a server. The client is built with a synchronous socket, so execution of the client application is suspended until the server returns a response. The application sends a string to the server and then displays the string returned by the server on the console.  \n  \n```vb  \nImports System  \nImports System.Net  \nImports System.Net.Sockets  \nImports System.Text  \n  \nPublic Class SynchronousSocketClient  \n  \n    Public Shared Sub Main()  \n        ' Data buffer for incoming data.  \n        Dim bytes(1024) As Byte  \n  \n        ' Connect to a remote device.  \n  \n        ' Establish the remote endpoint for the socket.  \n        ' This example uses port 11000 on the local computer.  \n        Dim ipHostInfo As IPHostEntry = Dns.GetHostEntry(Dns.GetHostName())  \n        Dim ipAddress As IPAddress = ipHostInfo.AddressList(0)  \n        Dim remoteEP As New IPEndPoint(ipAddress, 11000)  \n  \n        ' Create a TCP/IP socket.  \n        Dim sender As New Socket(ipAddress.AddressFamily, _  \n            SocketType.Stream, ProtocolType.Tcp)  \n  \n        ' Connect the socket to the remote endpoint.  \n        sender.Connect(remoteEP)  \n  \n        Console.WriteLine(\"Socket connected to {0}\", _  \n            sender.RemoteEndPoint.ToString())  \n  \n        ' Encode the data string into a byte array.  \n        Dim msg As Byte() = _  \n            Encoding.ASCII.GetBytes(\"This is a test<EOF>\")  \n  \n        ' Send the data through the socket.  \n        Dim bytesSent As Integer = sender.Send(msg)  \n  \n        ' Receive the response from the remote device.  \n        Dim bytesRec As Integer = sender.Receive(bytes)  \n        Console.WriteLine(\"Echoed test = {0}\", _  \n            Encoding.ASCII.GetString(bytes, 0, bytesRec))  \n  \n        ' Release the socket.  \n        sender.Shutdown(SocketShutdown.Both)  \n        sender.Close()  \n    End Sub  \n  \nEnd Class 'SynchronousSocketClient  \n```  \n  \n```csharp  \nusing System;  \nusing System.Net;  \nusing System.Net.Sockets;  \nusing System.Text;  \n  \npublic class SynchronousSocketClient {  \n  \n    public static void StartClient() {  \n        // Data buffer for incoming data.  \n        byte[] bytes = new byte[1024];  \n  \n        // Connect to a remote device.  \n        try {  \n            // Establish the remote endpoint for the socket.  \n            // This example uses port 11000 on the local computer.  \n            IPHostEntry ipHostInfo = Dns.GetHostEntry(Dns.GetHostName());  \n            IPAddress ipAddress = ipHostInfo.AddressList[0];  \n            IPEndPoint remoteEP = new IPEndPoint(ipAddress,11000);  \n  \n            // Create a TCP/IP  socket.  \n            Socket sender = new Socket(ipAddress.AddressFamily,   \n                SocketType.Stream, ProtocolType.Tcp );  \n  \n            // Connect the socket to the remote endpoint. Catch any errors.  \n            try {  \n                sender.Connect(remoteEP);  \n  \n                Console.WriteLine(\"Socket connected to {0}\",  \n                    sender.RemoteEndPoint.ToString());  \n  \n                // Encode the data string into a byte array.  \n                byte[] msg = Encoding.ASCII.GetBytes(\"This is a test<EOF>\");  \n  \n                // Send the data through the socket.  \n                int bytesSent = sender.Send(msg);  \n  \n                // Receive the response from the remote device.  \n                int bytesRec = sender.Receive(bytes);  \n                Console.WriteLine(\"Echoed test = {0}\",  \n                    Encoding.ASCII.GetString(bytes,0,bytesRec));  \n  \n                // Release the socket.  \n                sender.Shutdown(SocketShutdown.Both);  \n                sender.Close();  \n  \n            } catch (ArgumentNullException ane) {  \n                Console.WriteLine(\"ArgumentNullException : {0}\",ane.ToString());  \n            } catch (SocketException se) {  \n                Console.WriteLine(\"SocketException : {0}\",se.ToString());  \n            } catch (Exception e) {  \n                Console.WriteLine(\"Unexpected exception : {0}\", e.ToString());  \n            }  \n  \n        } catch (Exception e) {  \n            Console.WriteLine( e.ToString());  \n        }  \n    }  \n  \n    public static int Main(String[] args) {  \n        StartClient();  \n        return 0;  \n    }  \n}  \n```  \n  \n## See also\n\n- [Synchronous Server Socket Example](../../../docs/framework/network-programming/synchronous-server-socket-example.md)\n- [Using a Synchronous Client Socket](../../../docs/framework/network-programming/using-a-synchronous-client-socket.md)\n- [Socket Code Examples](../../../docs/framework/network-programming/socket-code-examples.md)\n","nodes":[{"pos":[4,277],"embed":true,"restype":"x-metadata","content":"title: \"Synchronous Client Socket Example\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"sockets, code examples\"\n  - \"synchronous client sockets\"\n  - \"sockets, synchronous client sockets\"\nms.assetid: 2c7d5be7-2221-467c-a839-5744ec4d576d","nodes":[{"content":"Synchronous Client Socket Example","nodes":[{"pos":[0,33],"content":"Synchronous Client Socket Example","nodes":[{"content":"Synchronous Client Socket Example","pos":[0,33]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[284,317],"content":"Synchronous Client Socket Example","linkify":"Synchronous Client Socket Example","nodes":[{"content":"Synchronous Client Socket Example","pos":[0,33]}]},{"content":"The following example program creates a client that connects to a server.","pos":[318,391]},{"content":"The client is built with a synchronous socket, so execution of the client application is suspended until the server returns a response.","pos":[392,527]},{"content":"The application sends a string to the server and then displays the string returned by the server on the console.","pos":[528,640]},{"pos":[4633,4641],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4645,4762],"content":"<bpt id=\"p1\">[</bpt>Synchronous Server Socket Example<ept id=\"p1\">](../../../docs/framework/network-programming/synchronous-server-socket-example.md)</ept>","source":"[Synchronous Server Socket Example](../../../docs/framework/network-programming/synchronous-server-socket-example.md)"},{"pos":[4765,4882],"content":"<bpt id=\"p1\">[</bpt>Using a Synchronous Client Socket<ept id=\"p1\">](../../../docs/framework/network-programming/using-a-synchronous-client-socket.md)</ept>","source":"[Using a Synchronous Client Socket](../../../docs/framework/network-programming/using-a-synchronous-client-socket.md)"},{"pos":[4885,4976],"content":"<bpt id=\"p1\">[</bpt>Socket Code Examples<ept id=\"p1\">](../../../docs/framework/network-programming/socket-code-examples.md)</ept>","source":"[Socket Code Examples](../../../docs/framework/network-programming/socket-code-examples.md)"}]}