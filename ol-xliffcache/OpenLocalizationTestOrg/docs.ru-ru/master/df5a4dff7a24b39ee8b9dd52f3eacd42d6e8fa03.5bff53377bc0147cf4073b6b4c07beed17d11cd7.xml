{"content":"---\ntitle: \"Schema Validation using XPathNavigator | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: 81fa0e41-d9c9-46f0-b22b-50da839c77f5\ncaps.latest.revision: 3\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Schema Validation using XPathNavigator\nUsing the <xref:System.Xml.XmlDocument> class, you can validate the XML content contained in an <xref:System.Xml.XmlDocument> object in two ways. The first way is to validate the XML content using a validating <xref:System.Xml.XmlReader> object and the second way is to use the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class. You can also perform read-only validation of XML content using the <xref:System.Xml.XPath.XPathDocument> class.  \n  \n## Validating XML Data  \n The <xref:System.Xml.XmlDocument> class does not validate an XML document using either DTD or XML schema definition language (XSD) schema validation by default. It only verifies that the XML document is well formed.  \n  \n The first way to validate an XML document is to validate the document as it is loaded into an <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object. The second way is to validate a previously untyped XML document using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class. In both cases, changes to the validated XML document can be revalidated using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class.  \n  \n### Validating a Document as it is Loaded  \n A validating <xref:System.Xml.XmlReader> object is created by passing an <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method of the <xref:System.Xml.XmlReader> class that takes an <xref:System.Xml.XmlReaderSettings> object as a parameter. The <xref:System.Xml.XmlReaderSettings> object passed as a parameter has a <xref:System.Xml.XmlReaderSettings.ValidationType%2A> property set to `Schema` and an XML Schema for the XML document contained in the <xref:System.Xml.XmlDocument> object added to its <xref:System.Xml.XmlReaderSettings.Schemas%2A> property. The validating <xref:System.Xml.XmlReader> object is then used to create the <xref:System.Xml.XmlDocument> object.  \n  \n The following example validates the `contosoBooks.xml` file as it is loaded into the <xref:System.Xml.XmlDocument> object by creating the <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object. Because the XML document is valid according to its schema, no schema validation errors or warnings are generated.  \n  \n```vb  \nImports System  \nImports System.Xml  \nImports System.Xml.Schema  \nImports System.Xml.XPath  \n  \nClass ValidatingReaderExample  \n  \n    Shared Sub Main(ByVal args() As String)  \n  \n        Try  \n            Dim settings As XmlReaderSettings = New XmlReaderSettings()  \n            settings.Schemas.Add(\"http://www.contoso.com/books\", \"contosoBooks.xsd\")  \n            settings.ValidationType = ValidationType.Schema  \n  \n            Dim reader As XmlReader = XmlReader.Create(\"contosoBooks.xml\", settings)  \n  \n            Dim document As XmlDocument = New XmlDocument()  \n            document.Load(reader)  \n            Dim navigator As XPathNavigator = document.CreateNavigator()  \n  \n        Catch e As Exception  \n            Console.WriteLine(\"ValidatingReaderExample.Exception: {0}\", e.Message)  \n        End Try  \n  \n    End Sub  \n  \n    Shared Sub SchemaValidationHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)  \n  \n        Select Case e.Severity  \n            Case XmlSeverityType.Error  \n                Console.WriteLine(\"Schema Validation Error: {0}\", e.Message)  \n                Exit Sub  \n            Case XmlSeverityType.Warning  \n                Console.WriteLine(\"Schema Validation Warning: {0}\", e.Message)  \n                Exit Sub  \n        End Select  \n  \n    End Sub  \n  \nEnd Class  \n```  \n  \n```csharp  \nusing System;  \nusing System.Xml;  \nusing System.Xml.Schema;  \nusing System.Xml.XPath;  \n  \nclass ValidatingReaderExample  \n{  \n    static void Main(string[] args)  \n    {  \n        try  \n        {  \n            XmlReaderSettings settings = new XmlReaderSettings();  \n            settings.Schemas.Add(\"http://www.contoso.com/books\", \"contosoBooks.xsd\");  \n            settings.ValidationType = ValidationType.Schema;  \n  \n            XmlReader reader = XmlReader.Create(\"contosoBooks.xml\", settings);  \n  \n            XmlDocument document = new XmlDocument();  \n            document.Load(reader);  \n            XPathNavigator navigator = document.CreateNavigator();  \n        }  \n        catch (Exception e)  \n        {  \n            Console.WriteLine(\"ValidatingReaderExample.Exception: {0}\", e.Message);  \n        }  \n    }  \n  \n    static void SchemaValidationHandler(object sender, ValidationEventArgs e)  \n    {  \n        switch (e.Severity)  \n        {  \n            case XmlSeverityType.Error:  \n                Console.WriteLine(\"Schema Validation Error: {0}\", e.Message);  \n                break;  \n            case XmlSeverityType.Warning:  \n                Console.WriteLine(\"Schema Validation Warning: {0}\", e.Message);  \n                break;  \n        }  \n    }  \n}  \n```  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n [!code-xml[XPathXMLExamples#2](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  \n  \n In the above example, an <xref:System.Xml.Schema.XmlSchemaValidationException> will be thrown when <xref:System.Xml.XmlDocument.Load%2A> is called if any attribute or element type does not match the corresponding type specified in the validating schema. If a <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is set on the validating <xref:System.Xml.XmlReader>, the <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> will get called whenever an invalid type is encountered.  \n  \n An <xref:System.Xml.Schema.XmlSchemaException> will be thrown when an attribute or element with <xref:System.Xml.XPath.XPathNavigator.TypedValue%2A> set to `invalid` is accessed by the <xref:System.Xml.XPath.XPathNavigator>.  \n  \n The <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property can be used to determine whether or not an individual attribute or element is valid when accessing attributes or elements with the <xref:System.Xml.XPath.XPathNavigator>.  \n  \n> [!NOTE]\n>  When an XML document is loaded into an <xref:System.Xml.XmlDocument> object with an associated schema that defines default values, the <xref:System.Xml.XmlDocument> object treats these defaults as if they appeared in the XML document. This means that the <xref:System.Xml.XPath.XPathNavigator.IsEmptyElement%2A> property  always returns `false` for an element that was defaulted from the schema, even if in the XML document it was written as an empty element.  \n  \n### Validating a Document using the Validate Method  \n The <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class validates the XML document contained in an <xref:System.Xml.XmlDocument> object against the schemas specified in the <xref:System.Xml.XmlDocument> object's <xref:System.Xml.XmlDocument.Schemas%2A> property and performs infoset augmentation. The result is a previously untyped XML document in the <xref:System.Xml.XmlDocument> object replaced with a typed document.  \n  \n The <xref:System.Xml.XmlDocument> object reports schema validation errors and warnings using the <xref:System.Xml.Schema.ValidationEventHandler> delegate passed as a parameter to the <xref:System.Xml.XmlDocument.Validate%2A> method.  \n  \n The following example validates the `contosoBooks.xml` file contained in the <xref:System.Xml.XmlDocument> object against the `contosoBooks.xsd` schema contained in the <xref:System.Xml.XmlDocument> object's <xref:System.Xml.XmlDocument.Schemas%2A> property.  \n  \n```vb  \nImports System  \nImports System.Xml  \nImports System.Xml.Schema  \nImports System.Xml.XPath  \n  \nClass ValidateExample  \n  \n    Shared Sub Main(ByVal args() As String)  \n  \n        Dim document As XmlDocument = New XmlDocument()  \n        document.Load(\"contosoBooks.xml\")  \n        Dim navigator As XPathNavigator = document.CreateNavigator()  \n  \n        document.Schemas.Add(\"http://www.contoso.com/books\", \"contosoBooks.xsd\")  \n        Dim validation As ValidationEventHandler = New ValidationEventHandler(AddressOf SchemaValidationHandler)  \n  \n        document.Validate(validation)  \n  \n    End Sub  \n  \n    Shared Sub SchemaValidationHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)  \n  \n        Select Case e.Severity  \n            Case XmlSeverityType.Error  \n                Console.WriteLine(\"Schema Validation Error: {0}\", e.Message)  \n                Exit Sub  \n            Case XmlSeverityType.Warning  \n                Console.WriteLine(\"Schema Validation Warning: {0}\", e.Message)  \n                Exit Sub  \n        End Select  \n  \n    End Sub  \n  \nEnd Class  \n```  \n  \n```csharp  \nusing System;  \nusing System.Xml;  \nusing System.Xml.Schema;  \nusing System.Xml.XPath;  \n  \nclass ValidateExample  \n{  \n    static void Main(string[] args)  \n    {  \n        XmlDocument document = new XmlDocument();  \n        document.Load(\"contosoBooks.xml\");  \n        XPathNavigator navigator = document.CreateNavigator();  \n  \n        document.Schemas.Add(\"http://www.contoso.com/books\", \"contosoBooks.xsd\");  \n        ValidationEventHandler validation = new ValidationEventHandler(SchemaValidationHandler);  \n  \n        document.Validate(validation);  \n    }  \n  \n    static void SchemaValidationHandler(object sender, ValidationEventArgs e)  \n    {  \n        switch (e.Severity)  \n        {  \n            case XmlSeverityType.Error:  \n                Console.WriteLine(\"Schema Validation Error: {0}\", e.Message);  \n                break;  \n            case XmlSeverityType.Warning:  \n                Console.WriteLine(\"Schema Validation Warning: {0}\", e.Message);  \n                break;  \n        }  \n    }  \n}  \n```  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n [!code-xml[XPathXMLExamples#2](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  \n  \n### Validating Modifications  \n After modifications are made to an XML document, you can validate the modifications against the schema for the XML document using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class.  \n  \n The following example validates the `contosoBooks.xml` file as it is loaded into the <xref:System.Xml.XmlDocument> object by creating the <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object. The XML document is validated successfully as it is loaded without generating any schema validation errors or warnings. The example then makes two modifications to the XML document that are invalid according to the `contosoBooks.xsd` schema. The first modification inserts an invalid child element resulting in a schema validation error, and the second modification sets the value of a typed node to a value that is invalid according to the type of the node resulting in an exception.  \n  \n```vb  \nImports System  \nImports System.Xml  \nImports System.Xml.Schema  \nImports System.Xml.XPath  \n  \nClass ValidatingReaderExample  \n  \n    Shared Sub Main(ByVal args() As String)  \n  \n        Try  \n            Dim settings As XmlReaderSettings = New XmlReaderSettings()  \n            settings.Schemas.Add(\"http://www.contoso.com/books\", \"contosoBooks.xsd\")  \n            settings.ValidationType = ValidationType.Schema  \n  \n            Dim reader As XmlReader = XmlReader.Create(\"contosoBooks.xml\", settings)  \n  \n            Dim document As XmlDocument = New XmlDocument()  \n            document.Load(reader)  \n            Dim navigator As XPathNavigator = document.CreateNavigator()  \n  \n            Dim validation As ValidationEventHandler = New ValidationEventHandler(AddressOf SchemaValidationHandler)  \n  \n            navigator.MoveToChild(\"bookstore\", \"http://www.contoso.com/books\")  \n            navigator.MoveToChild(\"book\", \"http://www.contoso.com/books\")  \n            navigator.MoveToChild(\"author\", \"http://www.contoso.com/books\")  \n  \n            navigator.AppendChild(\"<title>Book Title</title>\")  \n  \n            document.Validate(validation)  \n  \n            navigator.MoveToParent()  \n            navigator.MoveToChild(\"price\", \"http://www.contoso.com/books\")  \n            navigator.SetTypedValue(DateTime.Now)  \n        Catch e As Exception  \n            Console.WriteLine(\"ValidatingReaderExample.Exception: {0}\", e.Message)  \n        End Try  \n  \n    End Sub  \n  \n    Shared Sub SchemaValidationHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)  \n  \n        Select Case e.Severity  \n            Case XmlSeverityType.Error  \n                Console.WriteLine(\"Schema Validation Error: {0}\", e.Message)  \n                Exit Sub  \n            Case XmlSeverityType.Warning  \n                Console.WriteLine(\"Schema Validation Warning: {0}\", e.Message)  \n                Exit Sub  \n        End Select  \n  \n    End Sub  \n  \nEnd Class  \n```  \n  \n```csharp  \nusing System;  \nusing System.Xml;  \nusing System.Xml.Schema;  \nusing System.Xml.XPath;  \n  \nclass ValidatingReaderExample  \n{  \n    static void Main(string[] args)  \n    {  \n        try  \n        {  \n            XmlReaderSettings settings = new XmlReaderSettings();  \n            settings.Schemas.Add(\"http://www.contoso.com/books\", \"contosoBooks.xsd\");  \n            settings.ValidationType = ValidationType.Schema;  \n  \n            XmlReader reader = XmlReader.Create(\"contosoBooks.xml\", settings);  \n  \n            XmlDocument document = new XmlDocument();  \n            document.Load(reader);  \n            XPathNavigator navigator = document.CreateNavigator();  \n  \n            ValidationEventHandler validation = new ValidationEventHandler(SchemaValidationHandler);  \n  \n            navigator.MoveToChild(\"bookstore\", \"http://www.contoso.com/books\");  \n            navigator.MoveToChild(\"book\", \"http://www.contoso.com/books\");  \n            navigator.MoveToChild(\"author\", \"http://www.contoso.com/books\");  \n  \n            navigator.AppendChild(\"<title>Book Title</title>\");  \n  \n            document.Validate(validation);  \n  \n            navigator.MoveToParent();  \n            navigator.MoveToChild(\"price\", \"http://www.contoso.com/books\");  \n            navigator.SetTypedValue(DateTime.Now);  \n        }  \n        catch (Exception e)  \n        {  \n            Console.WriteLine(\"ValidatingReaderExample.Exception: {0}\", e.Message);  \n        }  \n    }  \n  \n    static void SchemaValidationHandler(object sender, ValidationEventArgs e)  \n    {  \n        switch (e.Severity)  \n        {  \n            case XmlSeverityType.Error:  \n                Console.WriteLine(\"Schema Validation Error: {0}\", e.Message);  \n                break;  \n            case XmlSeverityType.Warning:  \n                Console.WriteLine(\"Schema Validation Warning: {0}\", e.Message);  \n                break;  \n        }  \n    }  \n}  \n```  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n [!code-xml[XPathXMLExamples#2](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  \n  \n In the example above, two modifications are made to the XML document contained in the <xref:System.Xml.XmlDocument> object. As the XML document was loaded, any schema validation errors encountered would have been handled by the validation event handler method and written to the console.  \n  \n In this example, the validation errors were introduced after the XML document was loaded and were found using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class.  \n  \n Modifications made using the <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class resulted in an <xref:System.InvalidCastException> because the new value was invalid according to the schema type of the node.  \n  \n For more information about modifying values using the <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> method, see the [Modify XML Data using XPathNavigator](../../../../docs/standard/data/xml/modify-xml-data-using-xpathnavigator.md) topic.  \n  \n### Read-Only Validation  \n The <xref:System.Xml.XPath.XPathDocument> class is a read-only, in-memory representation of an XML document. Both the <xref:System.Xml.XPath.XPathDocument> class and the <xref:System.Xml.XmlDocument> class create <xref:System.Xml.XPath.XPathNavigator> objects to navigate and edit XML documents. Because the <xref:System.Xml.XPath.XPathDocument> class is a read-only class, <xref:System.Xml.XPath.XPathNavigator> object's returned from <xref:System.Xml.XPath.XPathDocument> objects cannot edit the XML document contained in the <xref:System.Xml.XPath.XPathDocument> object.  \n  \n In the case of validation, you can create an <xref:System.Xml.XPath.XPathDocument> object just like you create an <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object as described earlier in this topic. The <xref:System.Xml.XPath.XPathDocument> object validates the XML document as it is loaded, but because you cannot edit the XML data in the <xref:System.Xml.XPath.XPathDocument> object, you cannot revalidate the XML document.  \n  \n For more information about read-only and editable <xref:System.Xml.XPath.XPathNavigator> objects, see the [Reading XML Data using XPathDocument and XmlDocument](../../../../docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md) topic.  \n  \n## See Also  \n <xref:System.Xml.XmlDocument>   \n <xref:System.Xml.XPath.XPathDocument>   \n <xref:System.Xml.XPath.XPathNavigator>   \n [Process XML Data Using the XPath Data Model](../../../../docs/standard/data/xml/process-xml-data-using-the-xpath-data-model.md)   \n [Reading XML Data using XPathDocument and XmlDocument](../../../../docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)   \n [Selecting, Evaluating and Matching XML Data using XPathNavigator](../../../../docs/standard/data/xml/selecting-evaluating-and-matching-xml-data-using-xpathnavigator.md)   \n [Accessing XML Data using XPathNavigator](../../../../docs/standard/data/xml/accessing-xml-data-using-xpathnavigator.md)   \n [Editing XML Data using XPathNavigator](../../../../docs/standard/data/xml/editing-xml-data-using-xpathnavigator.md)","nodes":[{"pos":[12,67],"content":"Schema Validation using XPathNavigator | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Schema Validation using XPathNavigator | Microsoft Docs","pos":[0,55]}]},{"pos":[412,450],"content":"Schema Validation using XPathNavigator","linkify":"Schema Validation using XPathNavigator","nodes":[{"content":"Schema Validation using XPathNavigator","pos":[0,38]}]},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class, you can validate the XML content contained in an <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object in two ways.","pos":[451,596],"source":"Using the <xref:System.Xml.XmlDocument> class, you can validate the XML content contained in an <xref:System.Xml.XmlDocument> object in two ways."},{"content":"The first way is to validate the XML content using a validating <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object and the second way is to use the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class.","pos":[597,821],"source":" The first way is to validate the XML content using a validating <xref:System.Xml.XmlReader> object and the second way is to use the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class."},{"content":"You can also perform read-only validation of XML content using the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class.","pos":[822,933],"source":" You can also perform read-only validation of XML content using the <xref:System.Xml.XPath.XPathDocument> class."},{"pos":[942,961],"content":"Validating XML Data","linkify":"Validating XML Data","nodes":[{"content":"Validating XML Data","pos":[0,19]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class does not validate an XML document using either DTD or XML schema definition language (XSD) schema validation by default.","pos":[965,1125],"source":"The <xref:System.Xml.XmlDocument> class does not validate an XML document using either DTD or XML schema definition language (XSD) schema validation by default."},{"content":"It only verifies that the XML document is well formed.","pos":[1126,1180]},{"content":"The first way to validate an XML document is to validate the document as it is loaded into an <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object using a validating <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> object.","pos":[1187,1372],"source":"The first way to validate an XML document is to validate the document as it is loaded into an <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object."},{"content":"The second way is to validate a previously untyped XML document using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class.","pos":[1373,1539],"source":" The second way is to validate a previously untyped XML document using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class."},{"content":"In both cases, changes to the validated XML document can be revalidated using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class.","pos":[1540,1714],"source":" In both cases, changes to the validated XML document can be revalidated using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class."},{"pos":[1724,1761],"content":"Validating a Document as it is Loaded","linkify":"Validating a Document as it is Loaded","nodes":[{"content":"Validating a Document as it is Loaded","pos":[0,37]}]},{"content":"A validating <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object is created by passing an <ph id=\"ph2\">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to the <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Xml.XmlReader&gt;</ph> class that takes an <ph id=\"ph5\">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as a parameter.","pos":[1765,2046],"source":"A validating <xref:System.Xml.XmlReader> object is created by passing an <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method of the <xref:System.Xml.XmlReader> class that takes an <xref:System.Xml.XmlReaderSettings> object as a parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object passed as a parameter has a <ph id=\"ph2\">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> property set to <ph id=\"ph3\">`Schema`</ph> and an XML Schema for the XML document contained in the <ph id=\"ph4\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object added to its <ph id=\"ph5\">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> property.","pos":[2047,2363],"source":" The <xref:System.Xml.XmlReaderSettings> object passed as a parameter has a <xref:System.Xml.XmlReaderSettings.ValidationType%2A> property set to `Schema` and an XML Schema for the XML document contained in the <xref:System.Xml.XmlDocument> object added to its <xref:System.Xml.XmlReaderSettings.Schemas%2A> property."},{"content":"The validating <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object is then used to create the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.","pos":[2364,2478],"source":" The validating <xref:System.Xml.XmlReader> object is then used to create the <xref:System.Xml.XmlDocument> object."},{"content":"The following example validates the <ph id=\"ph1\">`contosoBooks.xml`</ph> file as it is loaded into the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object by creating the <ph id=\"ph3\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object using a validating <ph id=\"ph4\">&lt;xref:System.Xml.XmlReader&gt;</ph> object.","pos":[2485,2714],"source":"The following example validates the `contosoBooks.xml` file as it is loaded into the <xref:System.Xml.XmlDocument> object by creating the <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object."},{"content":"Because the XML document is valid according to its schema, no schema validation errors or warnings are generated.","pos":[2715,2828]},{"pos":[5480,5538],"content":"The example takes the <ph id=\"ph1\">`contosoBooks.xml`</ph> file as an input.","source":"The example takes the `contosoBooks.xml` file as an input."},{"pos":[5545,5667],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>XPathXMLExamples#2<ept id=\"p2\">](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[XPathXMLExamples#2](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]"},{"pos":[5674,5732],"content":"The example also takes the <ph id=\"ph1\">`contosoBooks.xsd`</ph> as an input.","source":"The example also takes the `contosoBooks.xsd` as an input."},{"pos":[5739,5861],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>XPathXMLExamples#3<ept id=\"p2\">](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[XPathXMLExamples#3](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]"},{"content":"In the above example, an <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> will be thrown when <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> is called if any attribute or element type does not match the corresponding type specified in the validating schema.","pos":[5868,6121],"source":"In the above example, an <xref:System.Xml.Schema.XmlSchemaValidationException> will be thrown when <xref:System.Xml.XmlDocument.Load%2A> is called if any attribute or element type does not match the corresponding type specified in the validating schema."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> is set on the validating <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> will get called whenever an invalid type is encountered.","pos":[6122,6359],"source":" If a <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is set on the validating <xref:System.Xml.XmlReader>, the <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> will get called whenever an invalid type is encountered."},{"pos":[6366,6590],"content":"An <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> will be thrown when an attribute or element with <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNavigator.TypedValue%2A&gt;</ph> set to <ph id=\"ph3\">`invalid`</ph> is accessed by the <ph id=\"ph4\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>.","source":"An <xref:System.Xml.Schema.XmlSchemaException> will be thrown when an attribute or element with <xref:System.Xml.XPath.XPathNavigator.TypedValue%2A> set to `invalid` is accessed by the <xref:System.Xml.XPath.XPathNavigator>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property can be used to determine whether or not an individual attribute or element is valid when accessing attributes or elements with the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>.","pos":[6597,6831],"source":"The <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property can be used to determine whether or not an individual attribute or element is valid when accessing attributes or elements with the <xref:System.Xml.XPath.XPathNavigator>."},{"pos":[6839,7309],"content":"[!NOTE]\n When an XML document is loaded into an <xref:System.Xml.XmlDocument> object with an associated schema that defines default values, the <xref:System.Xml.XmlDocument> object treats these defaults as if they appeared in the XML document. This means that the <xref:System.Xml.XPath.XPathNavigator.IsEmptyElement%2A> property  always returns `false` for an element that was defaulted from the schema, even if in the XML document it was written as an empty element.","leadings":["","> "],"nodes":[{"content":" When an XML document is loaded into an <xref:System.Xml.XmlDocument> object with an associated schema that defines default values, the <xref:System.Xml.XmlDocument> object treats these defaults as if they appeared in the XML document. This means that the <xref:System.Xml.XPath.XPathNavigator.IsEmptyElement%2A> property  always returns `false` for an element that was defaulted from the schema, even if in the XML document it was written as an empty element.","pos":[8,468],"nodes":[{"content":"When an XML document is loaded into an <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object with an associated schema that defines default values, the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object treats these defaults as if they appeared in the XML document.","pos":[1,235],"source":" When an XML document is loaded into an <xref:System.Xml.XmlDocument> object with an associated schema that defines default values, the <xref:System.Xml.XmlDocument> object treats these defaults as if they appeared in the XML document."},{"content":"This means that the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator.IsEmptyElement%2A&gt;</ph> property  always returns <ph id=\"ph2\">`false`</ph> for an element that was defaulted from the schema, even if in the XML document it was written as an empty element.","pos":[236,460],"source":" This means that the <xref:System.Xml.XPath.XPathNavigator.IsEmptyElement%2A> property  always returns `false` for an element that was defaulted from the schema, even if in the XML document it was written as an empty element."}]}]},{"pos":[7319,7366],"content":"Validating a Document using the Validate Method","linkify":"Validating a Document using the Validate Method","nodes":[{"content":"Validating a Document using the Validate Method","pos":[0,47]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class validates the XML document contained in an <ph id=\"ph3\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object against the schemas specified in the <ph id=\"ph4\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object's <ph id=\"ph5\">&lt;xref:System.Xml.XmlDocument.Schemas%2A&gt;</ph> property and performs infoset augmentation.","pos":[7370,7706],"source":"The <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class validates the XML document contained in an <xref:System.Xml.XmlDocument> object against the schemas specified in the <xref:System.Xml.XmlDocument> object's <xref:System.Xml.XmlDocument.Schemas%2A> property and performs infoset augmentation."},{"content":"The result is a previously untyped XML document in the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object replaced with a typed document.","pos":[7707,7830],"source":" The result is a previously untyped XML document in the <xref:System.Xml.XmlDocument> object replaced with a typed document."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object reports schema validation errors and warnings using the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> delegate passed as a parameter to the <ph id=\"ph3\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method.","pos":[7837,8069],"source":"The <xref:System.Xml.XmlDocument> object reports schema validation errors and warnings using the <xref:System.Xml.Schema.ValidationEventHandler> delegate passed as a parameter to the <xref:System.Xml.XmlDocument.Validate%2A> method."},{"pos":[8076,8334],"content":"The following example validates the <ph id=\"ph1\">`contosoBooks.xml`</ph> file contained in the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object against the <ph id=\"ph3\">`contosoBooks.xsd`</ph> schema contained in the <ph id=\"ph4\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object's <ph id=\"ph5\">&lt;xref:System.Xml.XmlDocument.Schemas%2A&gt;</ph> property.","source":"The following example validates the `contosoBooks.xml` file contained in the <xref:System.Xml.XmlDocument> object against the `contosoBooks.xsd` schema contained in the <xref:System.Xml.XmlDocument> object's <xref:System.Xml.XmlDocument.Schemas%2A> property."},{"pos":[10493,10551],"content":"The example takes the <ph id=\"ph1\">`contosoBooks.xml`</ph> file as an input.","source":"The example takes the `contosoBooks.xml` file as an input."},{"pos":[10558,10680],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>XPathXMLExamples#2<ept id=\"p2\">](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[XPathXMLExamples#2](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]"},{"pos":[10687,10745],"content":"The example also takes the <ph id=\"ph1\">`contosoBooks.xsd`</ph> as an input.","source":"The example also takes the `contosoBooks.xsd` as an input."},{"pos":[10752,10874],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>XPathXMLExamples#3<ept id=\"p2\">](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[XPathXMLExamples#3](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]"},{"pos":[10884,10908],"content":"Validating Modifications","linkify":"Validating Modifications","nodes":[{"content":"Validating Modifications","pos":[0,24]}]},{"content":"After modifications are made to an XML document, you can validate the modifications against the schema for the XML document using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class.","pos":[10912,11138],"source":"After modifications are made to an XML document, you can validate the modifications against the schema for the XML document using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class."},{"content":"The following example validates the <ph id=\"ph1\">`contosoBooks.xml`</ph> file as it is loaded into the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object by creating the <ph id=\"ph3\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object using a validating <ph id=\"ph4\">&lt;xref:System.Xml.XmlReader&gt;</ph> object.","pos":[11145,11374],"source":"The following example validates the `contosoBooks.xml` file as it is loaded into the <xref:System.Xml.XmlDocument> object by creating the <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object."},{"content":"The XML document is validated successfully as it is loaded without generating any schema validation errors or warnings.","pos":[11375,11494]},{"content":"The example then makes two modifications to the XML document that are invalid according to the <ph id=\"ph1\">`contosoBooks.xsd`</ph> schema.","pos":[11495,11616],"source":" The example then makes two modifications to the XML document that are invalid according to the `contosoBooks.xsd` schema."},{"content":"The first modification inserts an invalid child element resulting in a schema validation error, and the second modification sets the value of a typed node to a value that is invalid according to the type of the node resulting in an exception.","pos":[11617,11859]},{"pos":[15792,15850],"content":"The example takes the <ph id=\"ph1\">`contosoBooks.xml`</ph> file as an input.","source":"The example takes the `contosoBooks.xml` file as an input."},{"pos":[15857,15979],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>XPathXMLExamples#2<ept id=\"p2\">](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[XPathXMLExamples#2](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]"},{"pos":[15986,16044],"content":"The example also takes the <ph id=\"ph1\">`contosoBooks.xsd`</ph> as an input.","source":"The example also takes the `contosoBooks.xsd` as an input."},{"pos":[16051,16173],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>XPathXMLExamples#3<ept id=\"p2\">](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[XPathXMLExamples#3](../../../../samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]"},{"content":"In the example above, two modifications are made to the XML document contained in the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.","pos":[16180,16303],"source":"In the example above, two modifications are made to the XML document contained in the <xref:System.Xml.XmlDocument> object."},{"content":"As the XML document was loaded, any schema validation errors encountered would have been handled by the validation event handler method and written to the console.","pos":[16304,16467]},{"content":"In this example, the validation errors were introduced after the XML document was loaded and were found using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class.","pos":[16474,16680],"source":"In this example, the validation errors were introduced after the XML document was loaded and were found using the <xref:System.Xml.XmlDocument.Validate%2A> method of the <xref:System.Xml.XmlDocument> class."},{"content":"Modifications made using the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class resulted in an <ph id=\"ph3\">&lt;xref:System.InvalidCastException&gt;</ph> because the new value was invalid according to the schema type of the node.","pos":[16687,16956],"source":"Modifications made using the <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class resulted in an <xref:System.InvalidCastException> because the new value was invalid according to the schema type of the node."},{"pos":[16963,17210],"content":"For more information about modifying values using the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A&gt;</ph> method, see the <bpt id=\"p1\">[</bpt>Modify XML Data using XPathNavigator<ept id=\"p1\">](../../../../docs/standard/data/xml/modify-xml-data-using-xpathnavigator.md)</ept> topic.","source":"For more information about modifying values using the <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> method, see the [Modify XML Data using XPathNavigator](../../../../docs/standard/data/xml/modify-xml-data-using-xpathnavigator.md) topic."},{"pos":[17220,17240],"content":"Read-Only Validation","linkify":"Read-Only Validation","nodes":[{"content":"Read-Only Validation","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class is a read-only, in-memory representation of an XML document.","pos":[17244,17352],"source":"The <xref:System.Xml.XPath.XPathDocument> class is a read-only, in-memory representation of an XML document."},{"content":"Both the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class and the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class create <ph id=\"ph3\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> objects to navigate and edit XML documents.","pos":[17353,17539],"source":" Both the <xref:System.Xml.XPath.XPathDocument> class and the <xref:System.Xml.XmlDocument> class create <xref:System.Xml.XPath.XPathNavigator> objects to navigate and edit XML documents."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class is a read-only class, <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object's returned from <ph id=\"ph3\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> objects cannot edit the XML document contained in the <ph id=\"ph4\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> object.","pos":[17540,17817],"source":" Because the <xref:System.Xml.XPath.XPathDocument> class is a read-only class, <xref:System.Xml.XPath.XPathNavigator> object's returned from <xref:System.Xml.XPath.XPathDocument> objects cannot edit the XML document contained in the <xref:System.Xml.XPath.XPathDocument> object."},{"content":"In the case of validation, you can create an <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> object just like you create an <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object using a validating <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader&gt;</ph> object as described earlier in this topic.","pos":[17824,18064],"source":"In the case of validation, you can create an <xref:System.Xml.XPath.XPathDocument> object just like you create an <xref:System.Xml.XmlDocument> object using a validating <xref:System.Xml.XmlReader> object as described earlier in this topic."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> object validates the XML document as it is loaded, but because you cannot edit the XML data in the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> object, you cannot revalidate the XML document.","pos":[18065,18291],"source":" The <xref:System.Xml.XPath.XPathDocument> object validates the XML document as it is loaded, but because you cannot edit the XML data in the <xref:System.Xml.XPath.XPathDocument> object, you cannot revalidate the XML document."},{"pos":[18298,18557],"content":"For more information about read-only and editable <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> objects, see the <bpt id=\"p1\">[</bpt>Reading XML Data using XPathDocument and XmlDocument<ept id=\"p1\">](../../../../docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)</ept> topic.","source":"For more information about read-only and editable <xref:System.Xml.XPath.XPathNavigator> objects, see the [Reading XML Data using XPathDocument and XmlDocument](../../../../docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md) topic."},{"pos":[18566,18574],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph>","pos":[18578,18607],"source":"<xref:System.Xml.XmlDocument> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>","pos":[18612,18649],"source":" <xref:System.Xml.XPath.XPathDocument> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>","pos":[18654,18692],"source":" <xref:System.Xml.XPath.XPathNavigator> "},{"content":"<bpt id=\"p1\"> [</bpt>Process XML Data Using the XPath Data Model<ept id=\"p1\">](../../../../docs/standard/data/xml/process-xml-data-using-the-xpath-data-model.md)</ept><ph id=\"ph1\"> </ph>","pos":[18696,18826],"source":" [Process XML Data Using the XPath Data Model](../../../../docs/standard/data/xml/process-xml-data-using-the-xpath-data-model.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Reading XML Data using XPathDocument and XmlDocument<ept id=\"p1\">](../../../../docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)</ept><ph id=\"ph1\"> </ph>","pos":[18829,18977],"source":" [Reading XML Data using XPathDocument and XmlDocument](../../../../docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Selecting, Evaluating and Matching XML Data using XPathNavigator<ept id=\"p1\">](../../../../docs/standard/data/xml/selecting-evaluating-and-matching-xml-data-using-xpathnavigator.md)</ept><ph id=\"ph1\"> </ph>","pos":[18980,19151],"source":" [Selecting, Evaluating and Matching XML Data using XPathNavigator](../../../../docs/standard/data/xml/selecting-evaluating-and-matching-xml-data-using-xpathnavigator.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Accessing XML Data using XPathNavigator<ept id=\"p1\">](../../../../docs/standard/data/xml/accessing-xml-data-using-xpathnavigator.md)</ept><ph id=\"ph1\"> </ph>","pos":[19154,19276],"source":" [Accessing XML Data using XPathNavigator](../../../../docs/standard/data/xml/accessing-xml-data-using-xpathnavigator.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Editing XML Data using XPathNavigator<ept id=\"p1\">](../../../../docs/standard/data/xml/editing-xml-data-using-xpathnavigator.md)</ept>","pos":[19279,19396],"source":" [Editing XML Data using XPathNavigator](../../../../docs/standard/data/xml/editing-xml-data-using-xpathnavigator.md)"}]}