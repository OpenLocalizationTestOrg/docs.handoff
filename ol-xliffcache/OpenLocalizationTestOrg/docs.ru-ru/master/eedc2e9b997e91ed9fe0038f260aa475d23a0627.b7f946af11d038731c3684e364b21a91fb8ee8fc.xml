{"content":"---\ntitle: \"How to: Use Table-Valued User-Defined Functions\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 5a4ae2b4-3290-4aa1-bc95-fc70c51b54cf\n---\n# How to: Use Table-Valued User-Defined Functions\nA table-valued function returns a single rowset (unlike stored procedures, which can return multiple result shapes). Because the return type of a table-valued function is `Table`, you can use a table-valued function anywhere in SQL that you can use a table. You can also treat the table-valued function just as you would a table.  \n  \n## Example  \n The following SQL function explicitly states that it returns a `TABLE`. Therefore, the returned rowset structure is implicitly defined.  \n  \n```  \nCREATE FUNCTION ProductsCostingMoreThan(@cost money)  \nRETURNS TABLE  \nAS  \nRETURN  \n    SELECT ProductID, UnitPrice  \n    FROM Products  \n    WHERE UnitPrice > @cost  \n```  \n  \n [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] maps the function as follows:  \n  \n [!code-csharp[DLinqUDFS#1](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/northwind-tfunc.cs#1)]\n [!code-vb[DLinqUDFS#1](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/northwind-tfunc.vb#1)]  \n  \n## Example  \n The following SQL code shows that you can join to the table that the function returns and otherwise treat it as you would any other table:  \n  \n```  \nSELECT p2.ProductName, p1.UnitPrice  \nFROM dbo.ProductsCostingMoreThan(80.50)  \nAS p1 INNER JOIN Products AS p2 ON p1.ProductID = p2.ProductID  \n```  \n  \n In [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)], the query would be rendered as follows:  \n  \n [!code-csharp[DLinqUDFS#2](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/Program.cs#2)]\n [!code-vb[DLinqUDFS#2](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/Module1.vb#2)]  \n  \n## See also\n\n- [User-Defined Functions](../../../../../../docs/framework/data/adonet/sql/linq/user-defined-functions.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"How to: Use Table-Valued User-Defined Functions\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 5a4ae2b4-3290-4aa1-bc95-fc70c51b54cf","nodes":[{"content":"How to: Use Table-Valued User-Defined Functions","nodes":[{"pos":[0,47],"content":"How to: Use Table-Valued User-Defined Functions","nodes":[{"content":"How to: Use Table-Valued User-Defined Functions","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,219],"content":"How to: Use Table-Valued User-Defined Functions","linkify":"How to: Use Table-Valued User-Defined Functions","nodes":[{"content":"How to: Use Table-Valued User-Defined Functions","pos":[0,47]}]},{"content":"A table-valued function returns a single rowset (unlike stored procedures, which can return multiple result shapes).","pos":[220,336]},{"content":"Because the return type of a table-valued function is <ph id=\"ph1\">`Table`</ph>, you can use a table-valued function anywhere in SQL that you can use a table.","pos":[337,477],"source":" Because the return type of a table-valued function is `Table`, you can use a table-valued function anywhere in SQL that you can use a table."},{"content":"You can also treat the table-valued function just as you would a table.","pos":[478,549]},{"pos":[558,565],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following SQL function explicitly states that it returns a <ph id=\"ph1\">`TABLE`</ph>.","pos":[569,640],"source":"The following SQL function explicitly states that it returns a `TABLE`."},{"content":"Therefore, the returned rowset structure is implicitly defined.","pos":[641,704]},{"pos":[895,992],"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> maps the function as follows:","source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] maps the function as follows:"},{"pos":[1253,1260],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following SQL code shows that you can join to the table that the function returns and otherwise treat it as you would any other table:","pos":[1264,1402]},{"pos":[1569,1680],"content":"In <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, the query would be rendered as follows:","source":"In [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)], the query would be rendered as follows:"},{"pos":[1925,1933],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1937,2042],"content":"<bpt id=\"p1\">[</bpt>User-Defined Functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/user-defined-functions.md)</ept>","source":"[User-Defined Functions](../../../../../../docs/framework/data/adonet/sql/linq/user-defined-functions.md)"}]}