{"content":"---\ntitle: \"Generic Delegates (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"generics [C#], delegates\"\n  - \"delegates [C#], generic\"\nms.assetid: bdea509c-44c1-4309-aaa9-15c7aee009df\ncaps.latest.revision: 16\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Generic Delegates (C# Programming Guide)\nA [delegate](../../../csharp/language-reference/keywords/delegate.md) can define its own type parameters. Code that references the generic delegate can specify the type argument to create a closed constructed type, just like when instantiating a generic class or calling a generic method, as shown in the following example:  \n  \n [!code-cs[csProgGuideGenerics#36](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_1.cs)]  \n  \n C# version 2.0 has a new feature called method group conversion, which applies to concrete as well as generic delegate types, and enables you to write the previous line with this simplified syntax:  \n  \n [!code-cs[csProgGuideGenerics#37](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_2.cs)]  \n  \n Delegates defined within a generic class can use the generic class type parameters in the same way that class methods do.  \n  \n [!code-cs[csProgGuideGenerics#38](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_3.cs)]  \n  \n Code that references the delegate must specify the type argument of the containing class, as follows:  \n  \n [!code-cs[csProgGuideGenerics#39](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_4.cs)]  \n  \n Generic delegates are especially useful in defining events based on the typical design pattern because the sender argument can be strongly typed and no longer has to be cast to and from <xref:System.Object>.  \n  \n [!code-cs[csProgGuideGenerics#40](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_5.cs)]  \n  \n## See Also  \n <xref:System.Collections.Generic>   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Introduction to Generics](../../../csharp/programming-guide/generics/introduction-to-generics.md)   \n [Generic Methods](../../../csharp/programming-guide/generics/generic-methods.md)   \n [Generic Classes](../../../csharp/programming-guide/generics/generic-classes.md)   \n [Generic Interfaces](../../../csharp/programming-guide/generics/generic-interfaces.md)   \n [Delegates](../../../csharp/programming-guide/delegates/index.md)   \n [Generics](https://msdn.microsoft.com/library/ms172192)","nodes":[{"pos":[12,69],"content":"Generic Delegates (C# Programming Guide) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Generic Delegates (C# Programming Guide) | Microsoft Docs","pos":[0,57]}]},{"pos":[580,620],"content":"Generic Delegates (C# Programming Guide)","linkify":"Generic Delegates (C# Programming Guide)","nodes":[{"content":"Generic Delegates (C# Programming Guide)","pos":[0,40]}]},{"content":"A <bpt id=\"p1\">[</bpt>delegate<ept id=\"p1\">](../../../csharp/language-reference/keywords/delegate.md)</ept> can define its own type parameters.","pos":[621,726],"source":"A [delegate](../../../csharp/language-reference/keywords/delegate.md) can define its own type parameters."},{"content":"Code that references the generic delegate can specify the type argument to create a closed constructed type, just like when instantiating a generic class or calling a generic method, as shown in the following example:","pos":[727,944]},{"pos":[951,1071],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideGenerics#36<ept id=\"p2\">](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideGenerics#36](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_1.cs)]"},{"content":"C# version 2.0 has a new feature called method group conversion, which applies to concrete as well as generic delegate types, and enables you to write the previous line with this simplified syntax:","pos":[1078,1275]},{"pos":[1282,1402],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideGenerics#37<ept id=\"p2\">](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideGenerics#37](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_2.cs)]"},{"content":"Delegates defined within a generic class can use the generic class type parameters in the same way that class methods do.","pos":[1409,1530]},{"pos":[1537,1657],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideGenerics#38<ept id=\"p2\">](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_3.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideGenerics#38](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_3.cs)]"},{"content":"Code that references the delegate must specify the type argument of the containing class, as follows:","pos":[1664,1765]},{"pos":[1772,1892],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideGenerics#39<ept id=\"p2\">](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_4.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideGenerics#39](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_4.cs)]"},{"content":"Generic delegates are especially useful in defining events based on the typical design pattern because the sender argument can be strongly typed and no longer has to be cast to and from <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[1899,2106],"source":"Generic delegates are especially useful in defining events based on the typical design pattern because the sender argument can be strongly typed and no longer has to be cast to and from <xref:System.Object>."},{"pos":[2113,2233],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideGenerics#40<ept id=\"p2\">](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_5.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideGenerics#40](../../../csharp/programming-guide/generics/codesnippet/CSharp/generic-delegates_5.cs)]"},{"pos":[2242,2250],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic&gt;</ph>","pos":[2254,2287],"source":"<xref:System.Collections.Generic> "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2291,2359],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Introduction to Generics<ept id=\"p1\">](../../../csharp/programming-guide/generics/introduction-to-generics.md)</ept><ph id=\"ph1\"> </ph>","pos":[2362,2462],"source":" [Introduction to Generics](../../../csharp/programming-guide/generics/introduction-to-generics.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Generic Methods<ept id=\"p1\">](../../../csharp/programming-guide/generics/generic-methods.md)</ept><ph id=\"ph1\"> </ph>","pos":[2465,2547],"source":" [Generic Methods](../../../csharp/programming-guide/generics/generic-methods.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Generic Classes<ept id=\"p1\">](../../../csharp/programming-guide/generics/generic-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[2550,2632],"source":" [Generic Classes](../../../csharp/programming-guide/generics/generic-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Generic Interfaces<ept id=\"p1\">](../../../csharp/programming-guide/generics/generic-interfaces.md)</ept><ph id=\"ph1\"> </ph>","pos":[2635,2723],"source":" [Generic Interfaces](../../../csharp/programming-guide/generics/generic-interfaces.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Delegates<ept id=\"p1\">](../../../csharp/programming-guide/delegates/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2726,2793],"source":" [Delegates](../../../csharp/programming-guide/delegates/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Generics<ept id=\"p1\">](https://msdn.microsoft.com/library/ms172192)</ept>","pos":[2796,2852],"source":" [Generics](https://msdn.microsoft.com/library/ms172192)"}]}