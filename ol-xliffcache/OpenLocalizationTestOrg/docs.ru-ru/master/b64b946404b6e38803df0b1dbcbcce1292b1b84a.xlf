<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b64b946404b6e38803df0b1dbcbcce1292b1b84a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\generics\collections.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a5d3137c12ecf4023c9f3e3ca0e040a46c74330</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">465b87860cfde4133527d2aff07bd7b5aea8e936</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generic Collections in the .NET Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generic Collections in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of the generic collection classes and other generic types in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Generic Collections in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET Framework class library provides a number of generic collection classes in the <ph id="ph1">&lt;xref:System.Collections.Generic&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel&gt;</ph> namespaces.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about these classes, see <bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](../../../docs/standard/collections/commonly-used-collection-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>System.Collections.Generic</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Many of the generic collection types are direct analogs of nongeneric types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a generic version of <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>; it uses the generic structure <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> for enumeration instead of <ph id="ph4">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is a generic version of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are generic <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> classes that correspond to the nongeneric versions.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There are generic and nongeneric versions of <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Both versions are hybrids of a dictionary and a list.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic class is a pure dictionary and has no nongeneric counterpart.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> generic class is a true linked list.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It has no nongeneric counterpart.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>System.Collections.ObjectModel</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class provides a base class for deriving your own generic collection types.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class provides an easy way to produce a read-only collection from any type that implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> generic class provides a way to store objects that contain their own keys.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Other Generic Types</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>generic structure allows you to use value types as if they could be assigned <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This can be useful when working with database queries, where fields that contain value types can be missing.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The generic type parameter can be any value type.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In C# it is not necessary to use <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> explicitly because the language has syntax for nullable types.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> generic structure provides a way to delimit a range of elements within a one-dimensional, zero-based array of any type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The generic type parameter is the type of the array's elements.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> generic delegate eliminates the need to declare a delegate type to handle events, if your event follows the event-handling pattern used by the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, suppose you have created a <ph id="ph1">`MyEventArgs`</ph> class, derived from <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph>, to hold the data for your event.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can then declare the event as follows:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Conceptual.Generics.Overview#7<ept id="p2">](../../../samples/snippets/cpp/VS_Snippets_CLR/conceptual.generics.overview/cpp/source2.cpp#7)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Conceptual.Generics.Overview#7<ept id="p4">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.generics.overview/cs/source2.cs#7)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Conceptual.Generics.Overview#7<ept id="p6">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.generics.overview/vb/source2.vb#7)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generics<ept id="p1">](../../../docs/standard/generics/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Delegates for Manipulating Arrays and Lists<ept id="p1">](../../../docs/standard/generics/delegates-for-manipulating-arrays-and-lists.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Interfaces<ept id="p1">](../../../docs/standard/generics/interfaces.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>