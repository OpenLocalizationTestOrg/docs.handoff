{"content":"---\ntitle: \"Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39; | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"bc32044\"\n  - \"vbc32044\"\nhelpviewer_keywords: \n  - \"BC32044\"\nms.assetid: be91f648-c07d-4991-8ed1-28b1327619c4\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39;\nA type argument supplied to a generic type does not satisfy the inheritance or implementation constraint on its corresponding type parameter.  \n  \n A constraint list imposes requirements on the type argument passed to the type parameter. The possible requirements include the following:  \n  \n-   The type argument must implement one or more interfaces  \n  \n-   The type argument must inherit from at most one class  \n  \n You can combine the preceding requirements for a single type parameter. [!INCLUDE[vbprvb](../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] cannot construct the type unless the code supplies type arguments that satisfy every constraint on every type parameter defined on the generic type.  \n  \n **Error ID:** BC32044  \n  \n## To correct this error  \n  \n-   Select a type argument of a type that implements every interface specified for the type parameter, and that inherits from the specified class if there is one.  \n  \n## See Also  \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [How to: Use a Generic Class](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)","nodes":[{"pos":[12,168],"content":"Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Type argument &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typeargumentname<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; does not inherit from or implement the constraint type &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>typeparametername<ph id=\"ph4\">&amp;gt;</ph>&amp;#39; | Microsoft Docs","pos":[0,156],"source":"Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39; | Microsoft Docs"}]},{"pos":[684,823],"content":"Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39;","linkify":"Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39;","nodes":[{"content":"Type argument &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typeargumentname<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; does not inherit from or implement the constraint type &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>typeparametername<ph id=\"ph4\">&amp;gt;</ph>&amp;#39;","pos":[0,139],"source":"Type argument &#39;&lt;typeargumentname&gt;&#39; does not inherit from or implement the constraint type &#39;&lt;typeparametername&gt;&#39;"}]},{"content":"A type argument supplied to a generic type does not satisfy the inheritance or implementation constraint on its corresponding type parameter.","pos":[824,965]},{"content":"A constraint list imposes requirements on the type argument passed to the type parameter.","pos":[972,1061]},{"content":"The possible requirements include the following:","pos":[1062,1110]},{"content":"The type argument must implement one or more interfaces","pos":[1120,1175]},{"content":"The type argument must inherit from at most one class","pos":[1185,1238]},{"content":"You can combine the preceding requirements for a single type parameter.","pos":[1245,1316]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbprvb](../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> cannot construct the type unless the code supplies type arguments that satisfy every constraint on every type parameter defined on the generic type.","pos":[1317,1552],"source":"[!INCLUDE[vbprvb](../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] cannot construct the type unless the code supplies type arguments that satisfy every constraint on every type parameter defined on the generic type."},{"pos":[1559,1580],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32044","source":"**Error ID:** BC32044"},{"pos":[1589,1610],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Select a type argument of a type that implements every interface specified for the type parameter, and that inherits from the specified class if there is one.","pos":[1620,1778]},{"pos":[1787,1795],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[1799,1915],"source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Use a Generic Class<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept>","pos":[1918,2045],"source":" [How to: Use a Generic Class](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)"}]}