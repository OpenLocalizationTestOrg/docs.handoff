<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="best-practices-for-reliable-sessions.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d9671e7e3124d535b66de8cd8468f76dcb32b10</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\best-practices-for-reliable-sessions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ab6af093fce13fd6bacc3918dbeb86e041c14e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4902fb8c0954369e093384ac6d6100584a8d80e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Best Practices for Reliable Sessions</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Best Practices for Reliable Sessions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses best practices for reliable sessions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Setting MaxTransferWindowSize</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Reliable sessions in Windows Communication Foundation (WCF) use a transfer window to hold messages on the client and service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The configurable property <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A&gt;</ph> indicates how many messages the transfer window can hold.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>On the sender, this indicates how many messages the transfer window can hold while waiting for acknowledgements; on the receiver, it indicates how many messages to buffer for the service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Choosing the right size impacts the efficiency of the network and the optimal capacity of the service.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following sections detail what to consider when choosing a value for this property and the impact of the value.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The default transfer window size is eight messages.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Efficient use of the network</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this context, the term <bpt id="p1">*</bpt>network<ept id="p1">*</ept> corresponds to everything used as the basis of communication between a client (sender) and a service (receiver).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This includes the transport connections and any intermediary or bridges in between, including SOAP routers or HTTP proxies/firewalls.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Efficient use of the network ensures that network capacity is fully used.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Both the amount of data that can be transferred per second over the network (<bpt id="p1">*</bpt>data rate<ept id="p1">*</ept>) and the time it takes to transfer data from the sender to the receiver (<bpt id="p2">*</bpt>latency<ept id="p2">*</ept>) impact how effectively the network is utilized.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On the sender, the property <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A&gt;</ph> indicates how many messages its transfer window can hold while waiting for acknowledgements.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the network latency is high and in order to ensure a responsive sender and effective network utilization, you should increase the transfer window size.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example even if the sender keeps up with data rate, latency could be high if several intermediaries exist between the sender and receiver or the data must pass through a lossy intermediary or network.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Thus, the sender has to wait for acknowledgements for the messages in its transfer window before accepting new messages to send on the wire.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The smaller the buffer with high latency, the less effective the network utilization.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>On the other hand, too high a transfer window size may impact the service because the service may need to catch up to the high rate of data sent by the client.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Running the service to capacity</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>As much as the network is used efficiently, ideally you also want the service to run at optimal capacity.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The transfer window size property on the receiver indicates how many messages the receiver can buffer.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This message buffering helps not only the network flow control but also enables the service to run to full capacity.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example if the buffer is one message and messages arrive faster than the service can process them, then the network might drop messages and capacity might be wasted or underutilized.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Using a buffer increases the availability of the service as it concurrently receives and buffers a message while processing the previously received messages.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>We recommended that you use the same <ph id="ph1">`MaxTransferWindowSize`</ph> on both the sender and receiver.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Enabling flow control</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Flow control<ept id="p1">*</ept> is a mechanism that ensures that the sender and receiver keep pace with each other, that is, the messages are consumed and acted upon as fast as they're produced.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The transfer window size on the client and service ensures that the sender and receiver are within a reasonable window of synchronization.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>We highly recommended that you set the property <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when you're using a reliable session between a WCF client and a WCF service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Setting MaxPendingChannels</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When writing a service that enables reliable session communication from different clients, it's possible to have many clients establish a reliable session to the service at the same time.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The response of the service in these situations depends on the <ph id="ph1">`MaxPendingChannels`</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the sender creates a reliable session channel to a receiver, a handshake between them establishes a reliable session.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After the reliable session is established, the channel is put in a pending channel queue for acceptance by the service.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MaxPendingChannels`</ph> property indicates how many channels can be in this state.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It's possible for the service to be in a state where it can't accept more channels.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the queue is full, an attempt to establish a reliable session is rejected, and the client must retry.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It's also possible that the pending channels in the queue remain in the queue for a longer duration.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the meantime, an inactivity timeout on the reliable session may occur, causing the channel to transition to a faulted state.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When writing a service that services multiple clients simultaneously, you should set a value that's suitable for your needs.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Setting too high a value for the <ph id="ph1">`MaxPendingChannels`</ph> property impacts your working set.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The default value for <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels%2A&gt;</ph> is four channels.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Reliable sessions and hosting</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When web hosting a service that uses reliable sessions, you should keep the following important considerations in mind:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Reliable sessions are stateful, and state is maintained in the AppDomain.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This means that all messages that are part of a reliable session must be processed in the same AppDomain.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Web farms and web gardens where the size of the farm or garden is greater than one node can't guarantee this constraint.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Reliable sessions using dual HTTP channels (for example, using <ph id="ph1">`WsDualHttpBinding`</ph>) can require more than the default of two HTTP connections per-client.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This means a duplex reliable session can require up to two connections each way because concurrent application and protocol messages may be transferring each way at any given time.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Under certain conditions depending on the message exchange pattern of the service, this means that it's possible to deadlock a web-hosted service using dual HTTP and reliable sessions.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To increase the number of allowable HTTP connections per client, add the following to the relevant configuration file (for example, <bpt id="p1">*</bpt>web.config<ept id="p1">*</ept> of the service in question):</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`maxconnection`</ph> attribute is the number of connections needed.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The minimum in this case should be four connections.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>