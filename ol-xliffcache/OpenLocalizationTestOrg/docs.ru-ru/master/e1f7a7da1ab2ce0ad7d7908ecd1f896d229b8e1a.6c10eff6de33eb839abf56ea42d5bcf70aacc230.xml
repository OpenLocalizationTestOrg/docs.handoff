{"content":"---\ntitle: \"Formulate Projections\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 745742df-0eda-479b-83f8-29bd8a80db96\n---\n# Formulate Projections\nThe following examples show how the `select` statement in C# and `Select` statement in Visual Basic can be combined with other features to form query projections.  \n  \n## Example  \n The following example uses the `Select` clause in Visual Basic (`select` clause in C#) to return a sequence of contact names for `Customers`.  \n  \n [!code-csharp[DLinqQueryExamples#57](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#57)]\n [!code-vb[DLinqQueryExamples#57](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#57)]  \n  \n## Example  \n The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a sequence of contact names and telephone numbers for `Customers`.  \n  \n [!code-csharp[DLinqQueryExamples#58](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#58)]\n [!code-vb[DLinqQueryExamples#58](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#58)]  \n  \n## Example  \n The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a sequence of names and telephone numbers for employees. The `FirstName` and `LastName` fields are combined into a single field (`Name`), and the `HomePhone` field is renamed to `Phone` in the resulting sequence.  \n  \n [!code-csharp[DLinqQueryExamples#59](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#59)]\n [!code-vb[DLinqQueryExamples#59](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#59)]  \n  \n## Example  \n The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a sequence of all `ProductID`s and a calculated value named `HalfPrice`. This value is set to the `UnitPrice` divided by 2.  \n  \n [!code-csharp[DLinqQueryExamples#60](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#60)]\n [!code-vb[DLinqQueryExamples#60](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#60)]  \n  \n## Example  \n The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and a *conditional statement* to return a sequence of product name and product availability.  \n  \n [!code-csharp[DLinqQueryExamples#61](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#61)]\n [!code-vb[DLinqQueryExamples#61](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#61)]  \n  \n## Example  \n The following example uses a Visual Basic `Select` clause (`select` clause in C#) and a *known type* (Name) to return a sequence of the names of employees.  \n  \n [!code-csharp[DLinqQueryExamples#62](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#62)]\n [!code-vb[DLinqQueryExamples#62](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#62)]  \n  \n## Example  \n The following example uses `Select` and `Where` in Visual Basic (`select` and `where` in C#) to return a *filtered sequence* of contact names for customers in London.  \n  \n [!code-csharp[DLinqQueryExamples#63](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#63)]\n [!code-vb[DLinqQueryExamples#63](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#63)]  \n  \n## Example  \n The following example uses a `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a *shaped subset* of the data about customers.  \n  \n [!code-csharp[DLinqQueryExamples#64](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#64)]\n [!code-vb[DLinqQueryExamples#64](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#64)]  \n  \n## Example  \n The following example uses nested queries to return the following results:  \n  \n-   A sequence of all orders and their corresponding `OrderID`s.  \n  \n-   A subsequence of the items in the order for which there is a discount.  \n  \n-   The amount of money saved if the cost of shipping is not included.  \n  \n [!code-csharp[DLinqQueryExamples#65](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#65)]\n [!code-vb[DLinqQueryExamples#65](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#65)]  \n  \n## See also\n\n- [Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)\n","nodes":[{"pos":[4,139],"embed":true,"restype":"x-metadata","content":"title: \"Formulate Projections\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 745742df-0eda-479b-83f8-29bd8a80db96","nodes":[{"content":"Formulate Projections","nodes":[{"pos":[0,21],"content":"Formulate Projections","nodes":[{"content":"Formulate Projections","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[146,167],"content":"Formulate Projections","linkify":"Formulate Projections","nodes":[{"content":"Formulate Projections","pos":[0,21]}]},{"pos":[168,330],"content":"The following examples show how the <ph id=\"ph1\">`select`</ph> statement in C# and <ph id=\"ph2\">`Select`</ph> statement in Visual Basic can be combined with other features to form query projections.","source":"The following examples show how the `select` statement in C# and `Select` statement in Visual Basic can be combined with other features to form query projections."},{"pos":[339,346],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[350,491],"content":"The following example uses the <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) to return a sequence of contact names for <ph id=\"ph3\">`Customers`</ph>.","source":"The following example uses the `Select` clause in Visual Basic (`select` clause in C#) to return a sequence of contact names for `Customers`."},{"pos":[776,783],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[787,972],"content":"The following example uses the <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) and <bpt id=\"p1\">*</bpt>anonymous types<ept id=\"p1\">*</ept> to return a sequence of contact names and telephone numbers for <ph id=\"ph3\">`Customers`</ph>.","source":"The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a sequence of contact names and telephone numbers for `Customers`."},{"pos":[1257,1264],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses the <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) and <bpt id=\"p1\">*</bpt>anonymous types<ept id=\"p1\">*</ept> to return a sequence of names and telephone numbers for employees.","pos":[1268,1443],"source":"The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a sequence of names and telephone numbers for employees."},{"content":"The <ph id=\"ph1\">`FirstName`</ph> and <ph id=\"ph2\">`LastName`</ph> fields are combined into a single field (<ph id=\"ph3\">`Name`</ph>), and the <ph id=\"ph4\">`HomePhone`</ph> field is renamed to <ph id=\"ph5\">`Phone`</ph> in the resulting sequence.","pos":[1444,1599],"source":" The `FirstName` and `LastName` fields are combined into a single field (`Name`), and the `HomePhone` field is renamed to `Phone` in the resulting sequence."},{"pos":[1884,1891],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses the <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) and <bpt id=\"p1\">*</bpt>anonymous types<ept id=\"p1\">*</ept> to return a sequence of all <ph id=\"ph3\">`ProductID`</ph>s and a calculated value named <ph id=\"ph4\">`HalfPrice`</ph>.","pos":[1895,2086],"source":"The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a sequence of all `ProductID`s and a calculated value named `HalfPrice`."},{"content":"This value is set to the <ph id=\"ph1\">`UnitPrice`</ph> divided by 2.","pos":[2087,2137],"source":" This value is set to the `UnitPrice` divided by 2."},{"pos":[2422,2429],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2433,2612],"content":"The following example uses the <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) and a <bpt id=\"p1\">*</bpt>conditional statement<ept id=\"p1\">*</ept> to return a sequence of product name and product availability.","source":"The following example uses the `Select` clause in Visual Basic (`select` clause in C#) and a *conditional statement* to return a sequence of product name and product availability."},{"pos":[2897,2904],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2908,3063],"content":"The following example uses a Visual Basic <ph id=\"ph1\">`Select`</ph> clause (<ph id=\"ph2\">`select`</ph> clause in C#) and a <bpt id=\"p1\">*</bpt>known type<ept id=\"p1\">*</ept> (Name) to return a sequence of the names of employees.","source":"The following example uses a Visual Basic `Select` clause (`select` clause in C#) and a *known type* (Name) to return a sequence of the names of employees."},{"pos":[3348,3355],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3359,3525],"content":"The following example uses <ph id=\"ph1\">`Select`</ph> and <ph id=\"ph2\">`Where`</ph> in Visual Basic (<ph id=\"ph3\">`select`</ph> and <ph id=\"ph4\">`where`</ph> in C#) to return a <bpt id=\"p1\">*</bpt>filtered sequence<ept id=\"p1\">*</ept> of contact names for customers in London.","source":"The following example uses `Select` and `Where` in Visual Basic (`select` and `where` in C#) to return a *filtered sequence* of contact names for customers in London."},{"pos":[3810,3817],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3821,3984],"content":"The following example uses a <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) and <bpt id=\"p1\">*</bpt>anonymous types<ept id=\"p1\">*</ept> to return a <bpt id=\"p2\">*</bpt>shaped subset<ept id=\"p2\">*</ept> of the data about customers.","source":"The following example uses a `Select` clause in Visual Basic (`select` clause in C#) and *anonymous types* to return a *shaped subset* of the data about customers."},{"pos":[4269,4276],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses nested queries to return the following results:","pos":[4280,4354]},{"pos":[4364,4424],"content":"A sequence of all orders and their corresponding <ph id=\"ph1\">`OrderID`</ph>s.","source":"A sequence of all orders and their corresponding `OrderID`s."},{"content":"A subsequence of the items in the order for which there is a discount.","pos":[4434,4504]},{"content":"The amount of money saved if the cost of shipping is not included.","pos":[4514,4580]},{"pos":[4587,4856],"content":"[!code-csharp[DLinqQueryExamples#65](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#65)]\n[!code-vb[DLinqQueryExamples#65](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#65)]","leadings":[""," "],"nodes":[]},{"pos":[4865,4873],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4877,4966],"content":"<bpt id=\"p1\">[</bpt>Query Examples<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)</ept>","source":"[Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)"}]}