<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bindingsource-component-architecture.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bf5f520045d2296382bd7c256e775202a17a60a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\bindingsource-component-architecture.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b88e29e7150d4271b5724464c746e78c66870ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">909d3ea84829481943a6c883c3b7f8010cf342a8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>BindingSource Component Architecture | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>BindingSource Component Architecture</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component, you can universally bind  all Windows Forms controls to data sources.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component simplifies the process of binding controls to a data source and provides the following advantages over traditional data binding:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Enables design-time binding to business objects.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Encapsulates <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> functionality and exposes <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> events at design time.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Simplifies creating a list that supports the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface by providing list change notification for data sources that do not natively support list change notification.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides an extensibility point for the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Provides a level of indirection between the data source and the control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This indirection is important when the data source may change at run time.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Interoperates with other data-related Windows Forms controls, specifically the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For these reasons, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component is the preferred way to bind your Windows Forms controls to data sources.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>BindingSource Features</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component provides several features for binding controls to data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>With these features, you can implement most data-binding scenarios with almost no coding on your part.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component accomplishes this by providing a consistent interface for accessing many different kinds of data sources.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This means that you use the same procedure for binding to any type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you can attach the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or to a business object and in both cases you use the same set of properties, methods, and events to manipulate the data source.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The consistent interface provided by the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component greatly simplifies the process of binding data to controls.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For data-source types that provide change notification, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component automatically communicates changes between the control and the data source.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For data-source types that do not provide change notification, events are provided that let you raise change notifications.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following list shows the features supported by the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indirection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Currency management.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Data source as a list.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> as an <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Custom item creation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Transactional item creation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> support.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Design-time support.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Static <ph id="ph1">&lt;xref:System.Windows.Forms.ListBindingHelper&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sorting and filtering with the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Integration with <ph id="ph1">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Indirection</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component provides a level of indirection between a control and a data source.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Instead of binding a control directly to a data source, you bind the control to a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>, and you attach the data source to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component's <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>With this level of indirection, you can change the data source without resetting the control binding.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This gives you the following capabilities:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can attach the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to different data sources while retaining the current control bindings.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can change items in the data source and notify bound controls.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource<ept id="p1">](../../../../docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can bind to a <ph id="ph1">&lt;xref:System.Type&gt;</ph> instead of an object in memory.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Bind a Windows Forms Control to a Type<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can then bind to an object at run time.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Currency Management</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component implements the <ph id="ph2">&lt;xref:System.Windows.Forms.ICurrencyManagerProvider&gt;</ph> interface to handle currency management for you.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.ICurrencyManagerProvider&gt;</ph> interface, you can also access to the currency manager for a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>, in addition to the currency manager for another <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> bound to the same <ph id="ph4">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component encapsulates <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> functionality and exposes the most common <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> properties and events.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following table describes some of the members related to currency management.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the currency manager associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If there is another <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> bound to the specified data member, gets its currency manager.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the current item of the data source.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position in the underlying list.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Applies pending changes to the underlying data source.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CancelEdit%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Cancels the current edit operation.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Data Source as a List</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component implements the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interfaces.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>With this implementation, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component itself as a data source, without any external storage.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component is attached to a data source, it exposes the data source as a list.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property can be set to several data sources.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>These include types, objects, and lists of types.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The resulting data source will be exposed as a list.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following table shows some of the common data sources and the resulting list evaluation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>DataSource property</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>List results</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic)</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An empty <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> of objects.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Adding an item sets the list to the type of the added item.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) with <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> set</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Not supported; raises <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Non-list type or object of type "T"</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An empty <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> of type "T".</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Array instance</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> containing the array elements.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> containing the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> items</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>List instance containing type "T"</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> instance containing type "T".</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> can be set to other list types, such as <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> will handle them appropriately.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In this case, the type that is contained in the list should have a default constructor.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>BindingSource as an IBindingList</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component provides members for accessing and manipulating the underlying data as an <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following table describes some of these members.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the list that results from the evaluation of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Adds a new item to the underlying list.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Applies to data sources that implement the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface and allow adding items (that is, the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.AllowNew%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Custom Item Creation</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event to provide your own item-creation logic.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event occurs before a new object is added to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This event is raised after the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph> method is called, but before the new item is added to the underlying list.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>By handling this event, you can provide custom item creation behavior without deriving from the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Customize Item Addition with the Windows Forms BindingSource<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Transactional Item Creation</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component implements the <ph id="ph2">&lt;xref:System.ComponentModel.ICancelAddNew&gt;</ph> interface, which enables transactional item creation.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>After a new item is provisionally created by using a call to <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph>, the addition may be committed or rolled back in the following ways:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ICancelAddNew.EndNew%2A&gt;</ph> method will explicitly commit the pending addition.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Performing another collection operation, such as an insertion, removal, or move, will implicitly commit the pending addition.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ICancelAddNew.CancelNew%2A&gt;</ph> method will roll back the pending addition if the method has not already been committed.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>IEnumerable Support</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component enables binding controls to <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> data sources.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>With this component, you can bind to a data source such as a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When an <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> data source is assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component, the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> creates an <ph id="ph4">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> and adds the contents of the <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> data source to the list.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Design-Time Support</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Some object types cannot be created at design time, such as objects created from a factory class, or objects returned by a Web service.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You may sometimes have to bind your controls to these types at design time, even though there is no object in memory to which your controls can bind.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You may, for example, need to label the column headers of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control with the names of your custom type's public properties.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To support this scenario, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component supports binding to a <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When you assign a <ph id="ph1">&lt;xref:System.Type&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component creates an empty <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> of <ph id="ph5">&lt;xref:System.Type&gt;</ph> items.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Any controls you subsequently bind to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component will be alerted to the presence of the properties or schema of your type at design time, or at run time.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Bind a Windows Forms Control to a Type<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Static ListBindingHelper Methods</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> types all share common logic to generate a list from a <ph id="ph4">`DataSource`</ph><ph id="ph5">/</ph><ph id="ph6">`DataMember`</ph> pair.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Additionally, this common logic is publicly exposed for use by control authors and other third parties in the following <ph id="ph1">`static`</ph> methods:</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListBindingHelper.GetList%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Sorting and Filtering with the IBindingListView Interface</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component implements the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface, which extends the <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> offers single column sorting and the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> offers advanced sorting and filtering.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>With <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph>, you can sort and filter items in the data source, if the data source also implements one of these interfaces.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component does not provide a reference implementation of these members.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Instead, calls are forwarded to the underlying list.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The following table describes the properties you use for sorting and filtering.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If the data source is an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph>, gets or sets the expression used to filter which rows are viewed.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If the data source is an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, gets or sets a column name used for sorting and sort order information.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the data source is an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> and supports advanced sorting, gets multiple column names used for sorting and sort order</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Integration with BindingNavigator</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component to bind any Windows Forms control to a data source, but the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> control is designed specifically to work with the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> control provides a user interface for controlling the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component's current item.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> control provides buttons that correspond to the navigation methods on the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Navigate Data with the Windows Forms BindingNavigator Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-navigate-data-with-the-windows-forms-bindingnavigator-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BindingSource Component Overview<ept id="p1">](../../../../docs/framework/winforms/controls/bindingsource-component-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BindingNavigator Control<ept id="p1">](../../../../docs/framework/winforms/controls/bindingnavigator-control-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms Data Binding<ept id="p1">](../../../../docs/framework/winforms/windows-forms-data-binding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Controls to Use on Windows Forms<ept id="p1">](../../../../docs/framework/winforms/controls/controls-to-use-on-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Bind a Windows Forms Control to a Type<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource<ept id="p1">](../../../../docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>