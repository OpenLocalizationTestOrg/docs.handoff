<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="xaml-2009-language-features.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05f811cd0d95f7605963dae851430fb6bf0e9f7a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\xaml-2009-language-features.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81ace42e0f0d0cacaea5881fe5a0ce00c99ae535</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9af4ccd206e1fedbb7df2d16b1d4aefed157b3e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>XAML 2009 Language Features</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XAML 2009 Language Features</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>XAML 2009 is the shorthand term for new XAML language features that extend the existing XAML language specification.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XAML 2009 introduces several new directives and constructs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These include the <bpt id="p1">[</bpt>x:Arguments Directive<ept id="p1">](x-arguments-directive.md)</ept>; the <bpt id="p2">[</bpt>x:FactoryMethod Directive<ept id="p2">](x-factorymethod-directive.md)</ept>; the <bpt id="p3">[</bpt>x:Reference Markup Extension<ept id="p3">](x-reference-markup-extension.md)</ept>; the <bpt id="p4">[</bpt>x:TypeArguments Directive<ept id="p4">](x-typearguments-directive.md)</ept>; and built-in types for common language primitives (for example <ph id="ph1">`x:Char`</ph>).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML 2009 Support in WPF and Visual Studio</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In WPF, you can use XAML 2009 features, but only for XAML that is not WPF markup-compiled.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Markup-compiled XAML and the BAML form of XAML do not currently support the XAML 2009 language keywords and features.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Note that existing techniques for loading loose XAML in WPF also have possible security and access restrictions to CLR types and the type system that are more restrictive than for markup-compiled XAML.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Security (WPF)<ept id="p1">](../wpf/security-wpf.md)</ept> or <bpt id="p2">[</bpt>WPF Security Strategy - Platform Security<ept id="p2">](../wpf/wpf-security-strategy-platform-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XAML 2009 also introduces additional features that either modify the previous XAML 2006 constructs or that modify the basic markup forms.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>x:Key as an Object Element</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>XAML 2009 can support <ph id="ph1">`x:Key`</ph> as an object (a property element that has object element value); however, XAML 2006 only supported <ph id="ph2">`x:Key`</ph> as an attribute.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See the "XAML 2009" section of <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](x-key-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>xmlns on Property Elements</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>XAML 2009 can support XAML namespace (xmlns) definitions on property elements; however, XAML 2006 only supports xmlns definitions on object elements.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Event Attributes</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For attributes that are backed by events, XAML 2006 presumes that markup compilation is involved and submits the events to markup compilation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>XAML 2009 supports a markup form that resembles a markup extension, which defers the event wiring until run-time parsing and loading of the XAML.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, WPF applications and XAML scenarios for WPF UI generally do not use this capability.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WPF and its XAML 2006 implementation uses the combination of event handler wiring for routed events defined at the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> level and its markup compiler step for much of its event attribute processing.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The markup compiler also preprocesses any event attributes found in XAML where the build actions declare that the markup compiler is used.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](../wpf/advanced/xaml-overview-wpf.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>