<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="version-update-considerations.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56685422e2c73dcca25acbdccb3a77a8de9df775</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\whats-new\version-update-considerations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eefb31db014bba1fc4ce9c1c403e462f8f623ae2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c48acfe21318a118d05f8043b95ee0ebf11369e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Version and update considerations for C# developers</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Introducing new languages features in your library can impact the code that uses it.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Version and update considerations for C# developers</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Compatibility is a very important goal as new features are added to the C# language.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In almost all cases, existing code can be recompiled with a new compiler version without any issue.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>More care may be required when you adopt new language features in a library.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You may be creating a new library with features found in the latest version and need to ensure apps built using previous versions of the compiler can use it.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Or you may be upgrading an existing library and many of your users may not have upgraded versions yet.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As you make decisions on adopting new features, you'll need to consider two variations of compatibility: source compatible and binary compatible.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Binary compatible changes</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Changes to your library are <bpt id="p1">**</bpt>binary compatible<ept id="p1">**</ept> when your updated library can be used without rebuilding applications and libraries that use it.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Dependent assemblies are not required to be rebuilt, nor are any source code changes required.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Binary compatible changes are also source compatible changes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Source compatible changes</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Changes to your library are <bpt id="p1">**</bpt>source compatible<ept id="p1">**</ept> when applications and libraries that use your library do not require source code changes, but the source must be recompiled against the new version to work correctly.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Incompatible changes</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If a change is neither <bpt id="p1">**</bpt>source compatible<ept id="p1">**</ept> nor <bpt id="p2">**</bpt>binary compatible<ept id="p2">**</ept>, source code changes along with recompilation are required in dependent libraries and applications.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Evaluate your library</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These compatibility concepts affect the public and protected declarations for your library, not its internal implementation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adopting any new features internally are always <bpt id="p1">**</bpt>binary compatible<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Binary compatible<ept id="p1">**</ept> changes provide new syntax that generates the same compiled code for public declarations as the older syntax.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, changing a method to an expression-bodied member is a <bpt id="p1">**</bpt>binary compatible<ept id="p1">**</ept> change:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Original code:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>New code:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Source compatible<ept id="p1">**</ept> changes introduce syntax that changes the compiled code for a public member, but in a way that is compatible with existing call sites.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, changing a method signature from a by value parameter to an <ph id="ph1">`in`</ph> by reference parameter is source compatible, but not binary compatible:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Original code:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>New code:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>What's new<ept id="p1">](index.md)</ept> articles note if introducing a feature that affects public declarations is source compatible or binary compatible.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>