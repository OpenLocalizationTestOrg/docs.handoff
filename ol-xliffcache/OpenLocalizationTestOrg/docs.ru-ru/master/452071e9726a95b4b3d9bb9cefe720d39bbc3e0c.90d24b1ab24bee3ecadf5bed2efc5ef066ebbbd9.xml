{"content":"---\ntitle: \"Compose streams\"\nms.date: \"01/21/2019\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"streams, base streams\"\n  - \"I/O [.NET Framework], composing streams\"\n  - \"Stream class, composing streams\"\n  - \"base streams\"\n  - \"streams, backing stores\"\nms.assetid: da761658-a535-4f26-a452-b30df47f73d5\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# Compose streams\nA *backing store* is a storage medium, such as a disk or memory. Each different backing store implements its own stream as an implementation of the <xref:System.IO.Stream> class. \n\nEach stream type reads and writes bytes from and to its given backing store. Streams that connect to backing stores are called *base streams*. Base streams have constructors with the parameters necessary to connect the stream to the backing store. For example, <xref:System.IO.FileStream> has constructors that specify a path parameter, which specifies how the file will be shared by processes.  \n\nThe design of the <xref:System.IO> classes provides simplified stream composition. You can attach base streams to one or more pass-through streams that provide the functionality you want. You can attach a reader or writer to the end of the chain, so the preferred types can be read or written easily.  \n\nThe following code examples create a **FileStream** around the existing *MyFile.txt* in order to buffer *MyFile.txt*. Note that **FileStreams** are buffered by default.\n\n>[!IMPORTANT]\n>The examples assume that a file named *MyFile.txt* already exists in the same folder as the app.  \n\n## Example: Use StreamReader\nThe following example creates a <xref:System.IO.StreamReader> to read characters from the **FileStream**, which is passed to the **StreamReader** as its constructor argument. <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> then reads until <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> finds no more characters.  \n  \n [!code-csharp[System.IO.StreamReader#20](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/source2.cs#20)]\n [!code-vb[System.IO.StreamReader#20](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/source2.vb#20)]  \n  \n## Example: Use BinaryReader\nThe following example creates a <xref:System.IO.BinaryReader> to read bytes from the **FileStream**, which is passed to the **BinaryReader** as its constructor argument. <xref:System.IO.BinaryReader.ReadByte%2A> then reads until <xref:System.IO.BinaryReader.PeekChar%2A> finds no more bytes.  \n  \n [!code-csharp[System.IO.StreamReader#21](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/source3.cs#21)]\n [!code-vb[System.IO.StreamReader#21](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/source3.vb#21)]  \n  \n## See also\n\n- <xref:System.IO.StreamReader>\n- <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType>\n- <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType>\n- <xref:System.IO.FileStream>\n- <xref:System.IO.BinaryReader>\n- <xref:System.IO.BinaryReader.ReadByte%2A?displayProperty=nameWithType>\n- <xref:System.IO.BinaryReader.PeekChar%2A?displayProperty=nameWithType>\n","nodes":[{"pos":[4,394],"embed":true,"restype":"x-metadata","content":"title: \"Compose streams\"\nms.date: \"01/21/2019\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"streams, base streams\"\n  - \"I/O [.NET Framework], composing streams\"\n  - \"Stream class, composing streams\"\n  - \"base streams\"\n  - \"streams, backing stores\"\nms.assetid: da761658-a535-4f26-a452-b30df47f73d5\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"Compose streams","nodes":[{"pos":[0,15],"content":"Compose streams","nodes":[{"content":"Compose streams","pos":[0,15]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[401,416],"content":"Compose streams","linkify":"Compose streams","nodes":[{"content":"Compose streams","pos":[0,15]}]},{"content":"A <bpt id=\"p1\">*</bpt>backing store<ept id=\"p1\">*</ept> is a storage medium, such as a disk or memory.","pos":[417,481],"source":"A *backing store* is a storage medium, such as a disk or memory."},{"content":"Each different backing store implements its own stream as an implementation of the <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> class.","pos":[482,595],"source":" Each different backing store implements its own stream as an implementation of the <xref:System.IO.Stream> class."},{"content":"Each stream type reads and writes bytes from and to its given backing store.","pos":[598,674]},{"content":"Streams that connect to backing stores are called <bpt id=\"p1\">*</bpt>base streams<ept id=\"p1\">*</ept>.","pos":[675,740],"source":" Streams that connect to backing stores are called *base streams*."},{"content":"Base streams have constructors with the parameters necessary to connect the stream to the backing store.","pos":[741,845]},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph> has constructors that specify a path parameter, which specifies how the file will be shared by processes.","pos":[846,992],"source":" For example, <xref:System.IO.FileStream> has constructors that specify a path parameter, which specifies how the file will be shared by processes."},{"content":"The design of the <ph id=\"ph1\">&lt;xref:System.IO&gt;</ph> classes provides simplified stream composition.","pos":[996,1078],"source":"The design of the <xref:System.IO> classes provides simplified stream composition."},{"content":"You can attach base streams to one or more pass-through streams that provide the functionality you want.","pos":[1079,1183]},{"content":"You can attach a reader or writer to the end of the chain, so the preferred types can be read or written easily.","pos":[1184,1296]},{"content":"The following code examples create a <bpt id=\"p1\">**</bpt>FileStream<ept id=\"p1\">**</ept> around the existing <bpt id=\"p2\">*</bpt>MyFile.txt<ept id=\"p2\">*</ept> in order to buffer <bpt id=\"p3\">*</bpt>MyFile.txt<ept id=\"p3\">*</ept>.","pos":[1300,1417],"source":"The following code examples create a **FileStream** around the existing *MyFile.txt* in order to buffer *MyFile.txt*."},{"content":"Note that <bpt id=\"p1\">**</bpt>FileStreams<ept id=\"p1\">**</ept> are buffered by default.","pos":[1418,1468],"source":" Note that **FileStreams** are buffered by default."},{"pos":[1471,1581],"content":"[!IMPORTANT]\nThe examples assume that a file named *MyFile.txt* already exists in the same folder as the app.","leadings":["",">"],"nodes":[{"content":"The examples assume that a file named <bpt id=\"p1\">*</bpt>MyFile.txt<ept id=\"p1\">*</ept> already exists in the same folder as the app.","pos":[13,109],"source":"The examples assume that a file named *MyFile.txt* already exists in the same folder as the app."}]},{"pos":[1588,1613],"content":"Example: Use StreamReader","linkify":"Example: Use StreamReader","nodes":[{"content":"Example: Use StreamReader","pos":[0,25]}]},{"content":"The following example creates a <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> to read characters from the <bpt id=\"p1\">**</bpt>FileStream<ept id=\"p1\">**</ept>, which is passed to the <bpt id=\"p2\">**</bpt>StreamReader<ept id=\"p2\">**</ept> as its constructor argument.","pos":[1614,1788],"source":"The following example creates a <xref:System.IO.StreamReader> to read characters from the **FileStream**, which is passed to the **StreamReader** as its constructor argument."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> then reads until <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType&gt;</ph> finds no more characters.","pos":[1789,1969],"source":"<xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> then reads until <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> finds no more characters."},{"pos":[2264,2289],"content":"Example: Use BinaryReader","linkify":"Example: Use BinaryReader","nodes":[{"content":"Example: Use BinaryReader","pos":[0,25]}]},{"content":"The following example creates a <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> to read bytes from the <bpt id=\"p1\">**</bpt>FileStream<ept id=\"p1\">**</ept>, which is passed to the <bpt id=\"p2\">**</bpt>BinaryReader<ept id=\"p2\">**</ept> as its constructor argument.","pos":[2290,2459],"source":"The following example creates a <xref:System.IO.BinaryReader> to read bytes from the **FileStream**, which is passed to the **BinaryReader** as its constructor argument."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadByte%2A&gt;</ph> then reads until <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader.PeekChar%2A&gt;</ph> finds no more bytes.","pos":[2460,2581],"source":"<xref:System.IO.BinaryReader.ReadByte%2A> then reads until <xref:System.IO.BinaryReader.PeekChar%2A> finds no more bytes."},{"pos":[2876,2884],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]}]}