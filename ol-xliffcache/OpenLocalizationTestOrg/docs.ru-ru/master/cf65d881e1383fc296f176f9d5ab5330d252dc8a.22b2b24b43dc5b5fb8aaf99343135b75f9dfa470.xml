{"content":"---\ntitle: \"Range specified for 'Case' statement is not valid\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc40052\"\n  - \"bc40052\"\nhelpviewer_keywords: \n  - \"BC40052\"\nms.assetid: a11d92f6-dc13-46a0-a8ca-5a962a0ed968\n---\n# Range specified for 'Case' statement is not valid\nAn invalid range has been specified for a `Case` statement.  \n  \n When you are comparing the same expression to several different values, you can use the `Select...Case` statements as an alternative to the `If...Then...Else` statements. While the `If` and `ElseIf` statements can evaluate a different expression in each statement, the `Select` statement evaluates a single expression only once and then uses it for every comparison. Each `Case` statement can contain more than one value, a range of values, or a combination of values and comparison operators.  \n  \n **Error ID:** BC40052  \n  \n## To correct this error  \n  \n-   Modify the range to include all values, or use a `Case Else` statement to catch an undefined value.  \n  \n## See also\n\n- [Select...Case Statement](../../visual-basic/language-reference/statements/select-case-statement.md)\n- [Decision Structures](../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)\n- [Widening and Narrowing Conversions](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)\n","nodes":[{"pos":[4,210],"embed":true,"restype":"x-metadata","content":"title: \"Range specified for 'Case' statement is not valid\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc40052\"\n  - \"bc40052\"\nhelpviewer_keywords: \n  - \"BC40052\"\nms.assetid: a11d92f6-dc13-46a0-a8ca-5a962a0ed968","nodes":[{"content":"Range specified for 'Case' statement is not valid","nodes":[{"pos":[0,49],"content":"Range specified for 'Case' statement is not valid","nodes":[{"content":"Range specified for 'Case' statement is not valid","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[217,266],"content":"Range specified for 'Case' statement is not valid","linkify":"Range specified for 'Case' statement is not valid","nodes":[{"content":"Range specified for 'Case' statement is not valid","pos":[0,49]}]},{"pos":[267,326],"content":"An invalid range has been specified for a <ph id=\"ph1\">`Case`</ph> statement.","source":"An invalid range has been specified for a `Case` statement."},{"content":"When you are comparing the same expression to several different values, you can use the <ph id=\"ph1\">`Select...Case`</ph> statements as an alternative to the <ph id=\"ph2\">`If...Then...Else`</ph> statements.","pos":[333,503],"source":"When you are comparing the same expression to several different values, you can use the `Select...Case` statements as an alternative to the `If...Then...Else` statements."},{"content":"While the <ph id=\"ph1\">`If`</ph> and <ph id=\"ph2\">`ElseIf`</ph> statements can evaluate a different expression in each statement, the <ph id=\"ph3\">`Select`</ph> statement evaluates a single expression only once and then uses it for every comparison.","pos":[504,699],"source":" While the `If` and `ElseIf` statements can evaluate a different expression in each statement, the `Select` statement evaluates a single expression only once and then uses it for every comparison."},{"content":"Each <ph id=\"ph1\">`Case`</ph> statement can contain more than one value, a range of values, or a combination of values and comparison operators.","pos":[700,826],"source":" Each `Case` statement can contain more than one value, a range of values, or a combination of values and comparison operators."},{"pos":[833,854],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC40052","source":"**Error ID:** BC40052"},{"pos":[863,884],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[894,993],"content":"Modify the range to include all values, or use a <ph id=\"ph1\">`Case Else`</ph> statement to catch an undefined value.","source":"Modify the range to include all values, or use a `Case Else` statement to catch an undefined value."},{"pos":[1002,1010],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1014,1114],"content":"<bpt id=\"p1\">[</bpt>Select...Case Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/select-case-statement.md)</ept>","source":"[Select...Case Statement](../../visual-basic/language-reference/statements/select-case-statement.md)"},{"pos":[1117,1230],"content":"<bpt id=\"p1\">[</bpt>Decision Structures<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)</ept>","source":"[Decision Structures](../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)"},{"pos":[1233,1374],"content":"<bpt id=\"p1\">[</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept>","source":"[Widening and Narrowing Conversions](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)"}]}