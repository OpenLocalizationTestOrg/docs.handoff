{"content":"---\ntitle: \"How to: Create a Control That Has an Access Key and Text Wrapping\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"access keys [WPF], control for\"\n  - \"controls [WPF], text wrapping\"\n  - \"wrapping text [WPF]\"\n  - \"keys [WPF], control for\"\n  - \"controls [WPF], access keys\"\n  - \"text wrapping [WPF]\"\nms.assetid: 205099d9-2551-4302-a25e-a15af9f67e04\n---\n# How to: Create a Control That Has an Access Key and Text Wrapping\nThis example shows how to create a control that has an access key and supports text wrapping. The example uses a <xref:System.Windows.Controls.Label> control to illustrate these concepts.  \n  \n## Example  \n **Add Text Wrapping to Your Label**  \n  \n The <xref:System.Windows.Controls.Label> control does not support text wrapping. If you need a label that wraps across multiple lines, you can nest another element that does support text wrapping and put the element inside the label. The following example shows how to use a <xref:System.Windows.Controls.TextBlock> to make a label that wraps several lines of text.  \n  \n [!code-xaml[LabelSnippet#5](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#5)]  \n  \n **Add an Access Key and Text Wrapping to Your Label**  \n  \n If you need a <xref:System.Windows.Controls.Label> that has an access key (mnemonic), use the <xref:System.Windows.Controls.AccessText> element that is inside the <xref:System.Windows.Controls.Label>.  \n  \n Controls such as <xref:System.Windows.Controls.Label>, <xref:System.Windows.Controls.Button>, <xref:System.Windows.Controls.RadioButton>, <xref:System.Windows.Controls.CheckBox>, <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TabItem>, <xref:System.Windows.Controls.Expander>, and <xref:System.Windows.Controls.GroupBox> have default control templates. These templates contain a <xref:System.Windows.Controls.ContentPresenter>. One of the properties that you can set on the <xref:System.Windows.Controls.ContentPresenter> is <xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A>=\"true\", which you can use to specify an access key for the control.  \n  \n The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping. To enable text wrapping, the example sets the <xref:System.Windows.Controls.AccessText.TextWrapping%2A> property and uses an underline character to specify the access key. (The character that immediately follows the underline character is the access key.)  \n  \n [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]  \n  \n## See also\n\n- [How to: Set the Target Property of a Label](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90))\n","nodes":[{"pos":[4,360],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a Control That Has an Access Key and Text Wrapping\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"access keys [WPF], control for\"\n  - \"controls [WPF], text wrapping\"\n  - \"wrapping text [WPF]\"\n  - \"keys [WPF], control for\"\n  - \"controls [WPF], access keys\"\n  - \"text wrapping [WPF]\"\nms.assetid: 205099d9-2551-4302-a25e-a15af9f67e04","nodes":[{"content":"How to: Create a Control That Has an Access Key and Text Wrapping","nodes":[{"pos":[0,65],"content":"How to: Create a Control That Has an Access Key and Text Wrapping","nodes":[{"content":"How to: Create a Control That Has an Access Key and Text Wrapping","pos":[0,65]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[367,432],"content":"How to: Create a Control That Has an Access Key and Text Wrapping","linkify":"How to: Create a Control That Has an Access Key and Text Wrapping","nodes":[{"content":"How to: Create a Control That Has an Access Key and Text Wrapping","pos":[0,65]}]},{"content":"This example shows how to create a control that has an access key and supports text wrapping.","pos":[433,526]},{"content":"The example uses a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> control to illustrate these concepts.","pos":[527,620],"source":" The example uses a <xref:System.Windows.Controls.Label> control to illustrate these concepts."},{"pos":[629,636],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[640,675],"content":"<bpt id=\"p1\">**</bpt>Add Text Wrapping to Your Label<ept id=\"p1\">**</ept>","source":"**Add Text Wrapping to Your Label**"},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> control does not support text wrapping.","pos":[682,762],"source":"The <xref:System.Windows.Controls.Label> control does not support text wrapping."},{"content":"If you need a label that wraps across multiple lines, you can nest another element that does support text wrapping and put the element inside the label.","pos":[763,915]},{"content":"The following example shows how to use a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to make a label that wraps several lines of text.","pos":[916,1047],"source":" The following example shows how to use a <xref:System.Windows.Controls.TextBlock> to make a label that wraps several lines of text."},{"pos":[1161,1214],"content":"<bpt id=\"p1\">**</bpt>Add an Access Key and Text Wrapping to Your Label<ept id=\"p1\">**</ept>","source":"**Add an Access Key and Text Wrapping to Your Label**"},{"pos":[1221,1421],"content":"If you need a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> that has an access key (mnemonic), use the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> element that is inside the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Label&gt;</ph>.","source":"If you need a <xref:System.Windows.Controls.Label> that has an access key (mnemonic), use the <xref:System.Windows.Controls.AccessText> element that is inside the <xref:System.Windows.Controls.Label>."},{"content":"Controls such as <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Controls.TabItem&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Controls.Expander&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Windows.Controls.GroupBox&gt;</ph> have default control templates.","pos":[1428,1804],"source":"Controls such as <xref:System.Windows.Controls.Label>, <xref:System.Windows.Controls.Button>, <xref:System.Windows.Controls.RadioButton>, <xref:System.Windows.Controls.CheckBox>, <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TabItem>, <xref:System.Windows.Controls.Expander>, and <xref:System.Windows.Controls.GroupBox> have default control templates."},{"content":"These templates contain a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentPresenter&gt;</ph>.","pos":[1805,1879],"source":" These templates contain a <xref:System.Windows.Controls.ContentPresenter>."},{"content":"One of the properties that you can set on the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentPresenter&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A&gt;</ph>=\"true\", which you can use to specify an access key for the control.","pos":[1880,2115],"source":" One of the properties that you can set on the <xref:System.Windows.Controls.ContentPresenter> is <xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A>=\"true\", which you can use to specify an access key for the control."},{"content":"The following example shows how to create a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> that has an access key and supports text wrapping.","pos":[2122,2253],"source":"The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping."},{"content":"To enable text wrapping, the example sets the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.AccessText.TextWrapping%2A&gt;</ph> property and uses an underline character to specify the access key.","pos":[2254,2425],"source":" To enable text wrapping, the example sets the <xref:System.Windows.Controls.AccessText.TextWrapping%2A> property and uses an underline character to specify the access key."},{"content":"(The character that immediately follows the underline character is the access key.)","pos":[2426,2509]},{"pos":[2625,2633],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2637,2769],"content":"<bpt id=\"p1\">[</bpt>How to: Set the Target Property of a Label<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90))</ept>","source":"[How to: Set the Target Property of a Label](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90))"}]}