{"content":"---\ntitle: \"How to: Create a RoutedCommand | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"creating, RoutedCommand class\"\n  - \"classes, RoutedCommand, creating\"\n  - \"RoutedCommand class, creating\"\nms.assetid: aaf6979f-69ab-406f-979f-5766daa85fa0\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Create a RoutedCommand\nThis example shows how to create a custom <xref:System.Windows.Input.RoutedCommand> and how to implement the custom command by creating a <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and attaching them to a <xref:System.Windows.Input.CommandBinding>.  For more information on commanding, see the [Commanding Overview](../../../../docs/framework/wpf/advanced/commanding-overview.md).  \n  \n## Example  \n The first step in creating a <xref:System.Windows.Input.RoutedCommand> is defining the command and instantiating it.  \n  \n [!code-csharp[CommandingOverviewSnippets#CommandingOverviewCommandDefinition](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcommanddefinition)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCommandDefinition](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcommanddefinition)]  \n  \n In order to use the command in an application, event handlers which define what the command does must be created  \n  \n [!code-csharp[CommandingOverviewSnippets#CommandingOverviewExecuted](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewexecuted)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewExecuted](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewexecuted)]  \n  \n [!code-csharp[CommandingOverviewSnippets#CommandingOverviewCanExecute](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcanexecute)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCanExecute](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcanexecute)]  \n  \n Next, a  <xref:System.Windows.Input.CommandBinding> is created which associates the command with the event handlers. The <xref:System.Windows.Input.CommandBinding> is created on a specific object.  This object defines the scope of the <xref:System.Windows.Input.CommandBinding> in the element tree  \n  \n [!code-xml[CommandingOverviewSnippets#CommandingOverviewWindowCommandBindingXAML](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewwindowcommandbindingxaml)]  \n  \n [!code-csharp[CommandingOverviewSnippets#CommandingOverviewCustomCommandBindingCodeBehind](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandbindingcodebehind)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCustomCommandBindingCodeBehind](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandbindingcodebehind)]  \n  \n The final step is invoking the command.  One way to invoke a command is to associate it with a <xref:System.Windows.Input.ICommandSource>, such as a <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceXAML](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcustomcommandsourcexaml)]  \n  \n [!code-csharp[CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceCodeBehind](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandsourcecodebehind)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceCodeBehind](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandsourcecodebehind)]  \n  \n When the Button is clicked, the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method on the custom <xref:System.Windows.Input.RoutedCommand> is called.  The <xref:System.Windows.Input.RoutedCommand> raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> routed events.  These events traverse the element tree looking for a <xref:System.Windows.Input.CommandBinding> for this particular command.  If a <xref:System.Windows.Input.CommandBinding> is found, the <xref:System.Windows.Input.ExecutedRoutedEventHandler> associated with <xref:System.Windows.Input.CommandBinding> is called.  \n  \n## See Also  \n <xref:System.Windows.Input.RoutedCommand>   \n [Commanding Overview](../../../../docs/framework/wpf/advanced/commanding-overview.md)","nodes":[{"pos":[4,492],"nodes":[{"content":"How to: Create a RoutedCommand | Microsoft Docs","nodes":[{"pos":[0,47],"content":"How to: Create a RoutedCommand | Microsoft Docs","nodes":[{"content":"How to: Create a RoutedCommand | Microsoft Docs","pos":[0,47]}]}],"pos":[6,56],"yaml":true}],"content":"title: \"How to: Create a RoutedCommand | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"creating, RoutedCommand class\"\n  - \"classes, RoutedCommand, creating\"\n  - \"RoutedCommand class, creating\"\nms.assetid: aaf6979f-69ab-406f-979f-5766daa85fa0\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[499,529],"content":"How to: Create a RoutedCommand","linkify":"How to: Create a RoutedCommand","nodes":[{"content":"How to: Create a RoutedCommand","pos":[0,30]}]},{"content":"This example shows how to create a custom <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> and how to implement the custom command by creating a <ph id=\"ph2\">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> and a <ph id=\"ph3\">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> and attaching them to a <ph id=\"ph4\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>.","pos":[530,853],"source":"This example shows how to create a custom <xref:System.Windows.Input.RoutedCommand> and how to implement the custom command by creating a <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and attaching them to a <xref:System.Windows.Input.CommandBinding>."},{"content":"For more information on commanding, see the <bpt id=\"p1\">[</bpt>Commanding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/commanding-overview.md)</ept>.","pos":[855,985],"source":"  For more information on commanding, see the [Commanding Overview](../../../../docs/framework/wpf/advanced/commanding-overview.md)."},{"pos":[994,1001],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The first step in creating a <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is defining the command and instantiating it.","pos":[1005,1121],"source":"The first step in creating a <xref:System.Windows.Input.RoutedCommand> is defining the command and instantiating it."},{"pos":[1128,1570],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCommandDefinition<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcommanddefinition)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCommandDefinition<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcommanddefinition)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[CommandingOverviewSnippets#CommandingOverviewCommandDefinition](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcommanddefinition)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCommandDefinition](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcommanddefinition)]"},{"content":"In order to use the command in an application, event handlers which define what the command does must be created","pos":[1577,1689]},{"pos":[1696,2102],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewExecuted<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewexecuted)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CommandingOverviewSnippets#CommandingOverviewExecuted<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewexecuted)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[CommandingOverviewSnippets#CommandingOverviewExecuted](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewexecuted)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewExecuted](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewexecuted)]"},{"pos":[2109,2523],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCanExecute<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcanexecute)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCanExecute<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcanexecute)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[CommandingOverviewSnippets#CommandingOverviewCanExecute](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcanexecute)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCanExecute](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcanexecute)]"},{"content":"Next, a  <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is created which associates the command with the event handlers.","pos":[2530,2646],"source":"Next, a  <xref:System.Windows.Input.CommandBinding> is created which associates the command with the event handlers."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is created on a specific object.","pos":[2647,2726],"source":" The <xref:System.Windows.Input.CommandBinding> is created on a specific object."},{"content":"This object defines the scope of the <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> in the element tree","pos":[2728,2827],"source":"  This object defines the scope of the <xref:System.Windows.Input.CommandBinding> in the element tree"},{"pos":[2834,3059],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewWindowCommandBindingXAML<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewwindowcommandbindingxaml)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[CommandingOverviewSnippets#CommandingOverviewWindowCommandBindingXAML](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewwindowcommandbindingxaml)]"},{"pos":[3066,3560],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCustomCommandBindingCodeBehind<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandbindingcodebehind)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCustomCommandBindingCodeBehind<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandbindingcodebehind)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[CommandingOverviewSnippets#CommandingOverviewCustomCommandBindingCodeBehind](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandbindingcodebehind)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCustomCommandBindingCodeBehind](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandbindingcodebehind)]"},{"content":"The final step is invoking the command.","pos":[3567,3606]},{"content":"One way to invoke a command is to associate it with a <ph id=\"ph1\">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph>, such as a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","pos":[3608,3754],"source":"  One way to invoke a command is to associate it with a <xref:System.Windows.Input.ICommandSource>, such as a <xref:System.Windows.Controls.Button>."},{"pos":[3761,3984],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceXAML<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcustomcommandsourcexaml)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceXAML](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcustomcommandsourcexaml)]"},{"pos":[3991,4481],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceCodeBehind<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandsourcecodebehind)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceCodeBehind<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandsourcecodebehind)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceCodeBehind](../../../../samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandsourcecodebehind)]\n [!code-vb[CommandingOverviewSnippets#CommandingOverviewCustomCommandSourceCodeBehind](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandsourcecodebehind)]"},{"content":"When the Button is clicked, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> method on the custom <ph id=\"ph2\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called.","pos":[4488,4646],"source":"When the Button is clicked, the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method on the custom <xref:System.Windows.Input.RoutedCommand> is called."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> raises the <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> routed events.","pos":[4648,4834],"source":"  The <xref:System.Windows.Input.RoutedCommand> raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> routed events."},{"content":"These events traverse the element tree looking for a <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for this particular command.","pos":[4836,4960],"source":"  These events traverse the element tree looking for a <xref:System.Windows.Input.CommandBinding> for this particular command."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is found, the <ph id=\"ph2\">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> associated with <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.","pos":[4962,5148],"source":"  If a <xref:System.Windows.Input.CommandBinding> is found, the <xref:System.Windows.Input.ExecutedRoutedEventHandler> associated with <xref:System.Windows.Input.CommandBinding> is called."},{"pos":[5157,5165],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>","pos":[5169,5210],"source":"<xref:System.Windows.Input.RoutedCommand> "},{"content":"<bpt id=\"p1\">[</bpt>Commanding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/commanding-overview.md)</ept>","pos":[5215,5300],"source":"[Commanding Overview](../../../../docs/framework/wpf/advanced/commanding-overview.md)"}]}