{"content":"---\ntitle: Create a custom template for dotnet new\ndescription: Learn how to create a custom template for the dotnet new command in this fun tutorial.\nauthor: guardrex\nms.date: 08/12/2017\nms.custom: seodec18\n---\n# Create a custom template for dotnet new\n\nThis tutorial shows you how to:\n\n- Create a basic template from an existing project or a new console app project.\n- Pack the template for distribution at nuget.org or from a local *nupkg* file.\n- Install the template from nuget.org, a local *nupkg* file, or the local file system.\n- Uninstall the template.\n\nIf you prefer to proceed through the tutorial with a complete sample, download the [sample project template](https://github.com/dotnet/dotnet-template-samples/tree/master/16-nuget-package). The sample template is configured for NuGet distribution.\n\nIf you wish to use the downloaded sample with file system distribution, do the following:\n\n- Move the contents of the *content* folder of the sample up one level into the *GarciaSoftware.ConsoleTemplate.CSharp* folder.\n- Delete the empty *content* folder.\n- Delete the *nuspec* file.\n\n## Prerequisites\n\n- Install the [.NET Core 2.0 SDK](https://www.microsoft.com/net/core) or later versions.\n- Read the reference topic [Custom templates for dotnet new](../tools/custom-templates.md).\n\n## Create a template from a project\n\nUse an existing project that you've confirmed compiles and runs, or create a new console app project in a folder on your hard drive. This tutorial assumes that the name of the project folder is *GarciaSoftware.ConsoleTemplate.CSharp* stored at *Documents\\Templates* in the user's profile. The tutorial project template name is in the format *\\<Company Name>.\\<Template Type>.\\<Programming Language>*, but you're free to name your project and template anything you wish.\n\n1. Add a folder to the root of the project named *.template.config*.\n1. Inside the *.template.config* folder, create a *template.json* file to configure your template. For more information and member definitions for the *template.json* file, see the [Custom templates for dotnet new](../tools/custom-templates.md#templatejson) topic and the [*template.json* schema at the JSON Schema Store](http://json.schemastore.org/template).\n\n```json\n{\n    \"$schema\": \"http://json.schemastore.org/template\",\n    \"author\": \"Catalina Garcia\",\n    \"classifications\": [ \"Common\", \"Console\" ],\n    \"identity\": \"GarciaSoftware.ConsoleTemplate.CSharp\",\n    \"name\": \"Garcia Software Console Application\",\n    \"shortName\": \"garciaconsole\"\n}\n```\n\nThe template is finished. At this point, you have two options for template distribution. To continue this tutorial, choose one path or the other:\n\n1. [NuGet distribution](#use-nuget-distribution): install the template from NuGet or from the local *nupkg* file, and use the installed template.\n2. [File system distribution](#use-file-system-distribution).\n\n## Use NuGet Distribution\n\n### Pack the template into a NuGet package\n\n1. Create a folder for the NuGet package. For the tutorial, the folder name *GarciaSoftware.ConsoleTemplate.CSharp* is used, and the folder is created inside a *Documents\\NuGetTemplates* folder in the user's profile. Create a folder named *content* inside of the new template folder to hold the project files.\n1. Copy the contents of your project folder, together with its *.template.config/template.json* file, into the *content* folder you created.\n1. Next to the *content* folder, add a [*nuspec* file](/nuget/create-packages/creating-a-package). The nuspec file is an XML manifest file that describes a package's contents and drives the process of creating the NuGet package.\n\n   ![Directory structure showing the layout of the NuGet package](./media/create-custom-template/nuget-directory-layout.png)\n\n1. Inside of a **\\<packageTypes>** element in the *nuspec* file, include a **\\<packageType>** element with a `name` attribute value of `Template`. Both the *content* folder and the *nuspec* file should reside in the same directory. The table shows the minimum *nuspec* file elements required to produce a template as a NuGet package.\n\n   | Element            | Type   | Description |\n   | ------------------ | ------ | ----------- |\n   | **\\<authors>**     | string | A comma-separated list of packages authors, matching the profile names on nuget.org. Authors are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors. |\n   | **\\<description>** | string | A long description of the package for UI display. |\n   | **\\<id>**          | string | The case-insensitive package identifier, which must be unique across nuget.org or whatever gallery the package will reside in. IDs may not contain spaces or characters that are not valid for a URL and generally follow .NET namespace rules. See [Choosing a unique package identifier and setting the version number](/nuget/create-packages/creating-a-package#choosing-a-unique-package-identifier-and-setting-the-version-number) for guidance. |\n   | **\\<packageType>** | string | Place this element inside a **\\<packageTypes>** element among the **\\<metadata>** elements. Set the `name` attribute of the **\\<packageType>** element to `Template`. |\n   | **\\<version>**     | string | The version of the package, following the major.minor.patch pattern. Version numbers may include a pre-release suffix as described in [Pre-release versions](/nuget/create-packages/prerelease-packages#semantic-versioning). |\n\n   See the [.nuspec reference](/nuget/schema/nuspec) for the complete *nuspec* file schema.\n\n   The *nuspec* file for the tutorial is named *GarciaSoftware.ConsoleTemplate.CSharp.nuspec* and contains the following content:\n\n   ```xml\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\n     <metadata>\n       <id>GarciaSoftware.ConsoleTemplate.CSharp</id>\n       <version>1.0.0</version>\n       <description>\n         Creates the Garcia Software console app.\n       </description>\n       <authors>Catalina Garcia</authors>\n       <packageTypes>\n         <packageType name=\"Template\" />\n       </packageTypes>\n     </metadata>\n   </package>\n   ```\n\n1. [Create the package](/nuget/create-packages/creating-a-package#creating-the-package) using the `nuget pack <PATH_TO_NUSPEC_FILE>` command. The following command assumes that the folder that holds the NuGet assets is at *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp*. But wherever you place the folder on your system, the `nuget pack` command accepts the path to the *nuspec* file:\n\n   ```console\n   nuget pack C:\\Users\\<USER>\\Documents\\NuGetTemplates\\GarciaSoftware.ConsoleTemplate.CSharp\\GarciaSoftware.ConsoleTemplate.CSharp.nuspec\n   ```\n\n### Publishing the package to nuget.org\n\nTo publish a NuGet package, follow the instructions in the [Create and publish a package](/nuget/quickstart/create-and-publish-a-package#publish-the-package) topic. However, we recommend that you don't publish the tutorial template to NuGet as it can never be deleted once published, only delisted. Now that you have the NuGet package in the form of a *nupkg* file, we suggest that you follow the instructions below to install the template directly from the local *nupkg* file.\n\n### Install the template from a NuGet package\n\n#### Install the template from the local *nupkg* file\n\nTo install the template from the *nupkg* file that you produced, use the `dotnet new` command with the `-i|--install` option and provide the path to the *nupkg* file:\n\n```console\ndotnet new -i C:\\Users\\<USER>\\GarciaSoftware.ConsoleTemplate.CSharp.1.0.0.nupkg\n```\n\n#### Install the template from a NuGet package stored at nuget.org\n\nIf you wish to install a template from a NuGet package stored at nuget.org, use the `dotnet new` command with the `-i|--install` option and supply the name of the NuGet package:\n\n```console\ndotnet new -i GarciaSoftware.ConsoleTemplate.CSharp\n```\n\n> [!NOTE]\n> The example is for demonstration purposes only. There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org, and we don't recommend that you publish and consume test templates from NuGet. If you run the command, no template is installed. However, you can install a template that hasn't been published to nuget.org by referencing the *nupkg* file directly on your local file system as shown in the previous section [Install the template from the local nupkg file](#install-the-template-from-the-local-nupkg-file).\n\nIf you'd like a live example of how to install a template from a package at nuget.org, you can use the [NUnit 3 template for dotnet-new](https://www.nuget.org/packages/NUnit3.DotNetNew.Template/). This template sets up a project to use NUnit unit testing. Use the following command to install it:\n\n```console\ndotnet new -i NUnit3.DotNetNew.Template\n```\n\nWhen you list the templates with `dotnet new -l`, you see the *NUnit 3 Test Project* with a short name of *nunit* in the template list. You're ready to use the template in the next section.\n\n![Console window showing the NUnit template with other templates](./media/create-custom-template/nunit-template-console-window.png)\n\n### Create a project from the template\n\nAfter the template is installed from NuGet, use the template by executing the `dotnet new <TEMPLATE>` command from the directory where you want to the template engine's output placed (unless you're using the `-o|--output` option to specify a specific directory). For more information, see [`dotnet new` Options](~/docs/core/tools/dotnet-new.md#options). Supply the template's short name directly to the `dotnet new` command. To create a project from the NUnit template, run the following command:\n\n```console\ndotnet new nunit\n```\n\nThe console shows that the project is created and that the project's packages are restored. After the command is run, the project is ready for use.\n\n![Console window shows the output of dotnet new nunit including restoring the project dependencies](./media/create-custom-template/dotnet-new-nunit-console-output.png)\n\n### To uninstall a template from a NuGet package stored at nuget.org\n\n```console\ndotnet new -u GarciaSoftware.ConsoleTemplate.CSharp\n```\n\n> [!NOTE]\n> The example is for demonstration purposes only. There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org or installed with the .NET Core SDK. If you run the command, no package/template is uninstalled and you receive the following exception:\n>\n> > Could not find something to uninstall called 'GarciaSoftware.ConsoleTemplate.CSharp'.\n\nIf you installed the [NUnit 3 template for dotnet-new](https://www.nuget.org/packages/NUnit3.DotNetNew.Template/) and wish to uninstall it, use the following command:\n\n```console\ndotnet new -u NUnit3.DotNetNew.Template\n```\n\n### Uninstall the template from a local nupkg file\n\nWhen you wish to uninstall the template, don't attempt to use the path to the *nupkg* file. *Attempting to uninstall a template using `dotnet new -u <PATH_TO_NUPKG_FILE>` fails.* Reference the package by its `id`:\n\n```console\ndotnet new -u GarciaSoftware.ConsoleTemplate.CSharp.1.0.0\n```\n\n## Use file system distribution\n\nTo distribute the template, place the project template folder in a location accessible to users on your network. Use the `dotnet new` command with the `-i|--install` option and specify the path to the template folder (the project folder containing the project and the *.template.config* folder).\n\nThe tutorial assumes the project template is stored in the *Documents/Templates* folder of the user's profile. From that location, install the template with the following command replacing \\<USER> with the user's profile name:\n\n```console\ndotnet new -i C:\\Users\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp\n```\n\n### Create a project from the template\n\nAfter the template is installed from the file system, use the template by executing the `dotnet new <TEMPLATE>` command from the directory where you want to the template engine's output placed (unless you're using the `-o|--output` option to specify a specific directory). For more information, see [`dotnet new` Options](~/docs/core/tools/dotnet-new.md#options). Supply the template's short name directly to the `dotnet new` command.\n\nFrom a new project folder created at *C:\\Users\\\\\\<USER>\\Documents\\Projects\\MyConsoleApp*, create a project from the `garciaconsole` template:\n\n```console\ndotnet new garciaconsole\n```\n\n### Uninstall the template\n\nIf you created the template on your local file system at *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp*, uninstall it with the `-u|--uninstall` switch and the path to the template folder:\n\n```console\ndotnet new -u C:\\Users\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp\n```\n\n> [!NOTE]\n> To uninstall the template from your local file system, you need to fully qualify the path. For example, *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp* will work, but *./GarciaSoftware.ConsoleTemplate.CSharp* from the containing folder will not.\n> Additionally, do not include a final terminating directory slash on your template path.\n\n## See also\n\n- [dotnet/templating GitHub repo Wiki](https://github.com/dotnet/templating/wiki)\n- [dotnet/dotnet-template-samples GitHub repo](https://github.com/dotnet/dotnet-template-samples)\n- [How to create your own templates for dotnet new](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)\n- [*template.json* schema at the JSON Schema Store](http://json.schemastore.org/template)\n","nodes":[{"pos":[4,207],"embed":true,"restype":"x-metadata","content":"title: Create a custom template for dotnet new\ndescription: Learn how to create a custom template for the dotnet new command in this fun tutorial.\nauthor: guardrex\nms.date: 08/12/2017\nms.custom: seodec18","nodes":[{"content":"Create a custom template for dotnet new","nodes":[{"pos":[0,39],"content":"Create a custom template for dotnet new","nodes":[{"content":"Create a custom template for dotnet new","pos":[0,39]}]}],"path":["title"],"nosxs":false},{"content":"Learn how to create a custom template for the dotnet new command in this fun tutorial.","nodes":[{"pos":[0,86],"content":"Learn how to create a custom template for the dotnet new command in this fun tutorial.","nodes":[{"content":"Learn how to create a custom template for the dotnet new command in this fun tutorial.","pos":[0,86]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[214,253],"content":"Create a custom template for dotnet new","linkify":"Create a custom template for dotnet new","nodes":[{"content":"Create a custom template for dotnet new","pos":[0,39]}]},{"content":"This tutorial shows you how to:","pos":[255,286]},{"content":"Create a basic template from an existing project or a new console app project.","pos":[290,368]},{"pos":[371,448],"content":"Pack the template for distribution at nuget.org or from a local <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file.","source":"Pack the template for distribution at nuget.org or from a local *nupkg* file."},{"pos":[451,535],"content":"Install the template from nuget.org, a local <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file, or the local file system.","source":"Install the template from nuget.org, a local *nupkg* file, or the local file system."},{"content":"Uninstall the template.","pos":[538,561]},{"content":"If you prefer to proceed through the tutorial with a complete sample, download the <bpt id=\"p1\">[</bpt>sample project template<ept id=\"p1\">](https://github.com/dotnet/dotnet-template-samples/tree/master/16-nuget-package)</ept>.","pos":[563,752],"source":"If you prefer to proceed through the tutorial with a complete sample, download the [sample project template](https://github.com/dotnet/dotnet-template-samples/tree/master/16-nuget-package)."},{"content":"The sample template is configured for NuGet distribution.","pos":[753,810]},{"content":"If you wish to use the downloaded sample with file system distribution, do the following:","pos":[812,901]},{"pos":[905,1030],"content":"Move the contents of the <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> folder of the sample up one level into the <bpt id=\"p2\">*</bpt>GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p2\">*</ept> folder.","source":"Move the contents of the *content* folder of the sample up one level into the *GarciaSoftware.ConsoleTemplate.CSharp* folder."},{"pos":[1033,1067],"content":"Delete the empty <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> folder.","source":"Delete the empty *content* folder."},{"pos":[1070,1095],"content":"Delete the <bpt id=\"p1\">*</bpt>nuspec<ept id=\"p1\">*</ept> file.","source":"Delete the *nuspec* file."},{"pos":[1100,1113],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"pos":[1117,1203],"content":"Install the <bpt id=\"p1\">[</bpt>.NET Core 2.0 SDK<ept id=\"p1\">](https://www.microsoft.com/net/core)</ept> or later versions.","source":"Install the [.NET Core 2.0 SDK](https://www.microsoft.com/net/core) or later versions."},{"pos":[1206,1295],"content":"Read the reference topic <bpt id=\"p1\">[</bpt>Custom templates for dotnet new<ept id=\"p1\">](../tools/custom-templates.md)</ept>.","source":"Read the reference topic [Custom templates for dotnet new](../tools/custom-templates.md)."},{"pos":[1300,1332],"content":"Create a template from a project","linkify":"Create a template from a project","nodes":[{"content":"Create a template from a project","pos":[0,32]}]},{"content":"Use an existing project that you've confirmed compiles and runs, or create a new console app project in a folder on your hard drive.","pos":[1334,1466]},{"content":"This tutorial assumes that the name of the project folder is <bpt id=\"p1\">*</bpt>GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p1\">*</ept> stored at <bpt id=\"p2\">*</bpt>Documents\\Templates<ept id=\"p2\">*</ept> in the user's profile.","pos":[1467,1622],"source":" This tutorial assumes that the name of the project folder is *GarciaSoftware.ConsoleTemplate.CSharp* stored at *Documents\\Templates* in the user's profile."},{"content":"The tutorial project template name is in the format <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\&lt;</ph>Company Name&gt;.<ph id=\"ph2\">\\&lt;</ph>Template Type&gt;.<ph id=\"ph3\">\\&lt;</ph>Programming Language&gt;<ept id=\"p1\">*</ept>, but you're free to name your project and template anything you wish.","pos":[1623,1803],"source":" The tutorial project template name is in the format *\\<Company Name>.\\<Template Type>.\\<Programming Language>*, but you're free to name your project and template anything you wish."},{"pos":[1808,1873],"content":"Add a folder to the root of the project named <bpt id=\"p1\">*</bpt>.template.config<ept id=\"p1\">*</ept>.","source":"Add a folder to the root of the project named *.template.config*."},{"content":"Inside the <bpt id=\"p1\">*</bpt>.template.config<ept id=\"p1\">*</ept> folder, create a <bpt id=\"p2\">*</bpt>template.json<ept id=\"p2\">*</ept> file to configure your template.","pos":[1877,1972],"source":"Inside the *.template.config* folder, create a *template.json* file to configure your template."},{"content":"For more information and member definitions for the <bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept> file, see the <bpt id=\"p2\">[</bpt>Custom templates for dotnet new<ept id=\"p2\">](../tools/custom-templates.md#templatejson)</ept> topic and the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">*</bpt>template.json<ept id=\"p4\">*</ept> schema at the JSON Schema Store<ept id=\"p3\">](http://json.schemastore.org/template)</ept>.","pos":[1973,2234],"source":" For more information and member definitions for the *template.json* file, see the [Custom templates for dotnet new](../tools/custom-templates.md#templatejson) topic and the [*template.json* schema at the JSON Schema Store](http://json.schemastore.org/template)."},{"content":"The template is finished.","pos":[2530,2555]},{"content":"At this point, you have two options for template distribution.","pos":[2556,2618]},{"content":"To continue this tutorial, choose one path or the other:","pos":[2619,2675]},{"pos":[2680,2822],"content":"<bpt id=\"p1\">[</bpt>NuGet distribution<ept id=\"p1\">](#use-nuget-distribution)</ept>: install the template from NuGet or from the local <bpt id=\"p2\">*</bpt>nupkg<ept id=\"p2\">*</ept> file, and use the installed template.","source":"[NuGet distribution](#use-nuget-distribution): install the template from NuGet or from the local *nupkg* file, and use the installed template."},{"pos":[2826,2884],"content":"<bpt id=\"p1\">[</bpt>File system distribution<ept id=\"p1\">](#use-file-system-distribution)</ept>.","source":"[File system distribution](#use-file-system-distribution)."},{"pos":[2889,2911],"content":"Use NuGet Distribution","linkify":"Use NuGet Distribution","nodes":[{"content":"Use NuGet Distribution","pos":[0,22]}]},{"pos":[2917,2955],"content":"Pack the template into a NuGet package","linkify":"Pack the template into a NuGet package","nodes":[{"content":"Pack the template into a NuGet package","pos":[0,38]}]},{"content":"Create a folder for the NuGet package.","pos":[2960,2998]},{"content":"For the tutorial, the folder name <bpt id=\"p1\">*</bpt>GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p1\">*</ept> is used, and the folder is created inside a <bpt id=\"p2\">*</bpt>Documents\\NuGetTemplates<ept id=\"p2\">*</ept> folder in the user's profile.","pos":[2999,3173],"source":" For the tutorial, the folder name *GarciaSoftware.ConsoleTemplate.CSharp* is used, and the folder is created inside a *Documents\\NuGetTemplates* folder in the user's profile."},{"content":"Create a folder named <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> inside of the new template folder to hold the project files.","pos":[3174,3266],"source":" Create a folder named *content* inside of the new template folder to hold the project files."},{"pos":[3270,3407],"content":"Copy the contents of your project folder, together with its <bpt id=\"p1\">*</bpt>.template.config/template.json<ept id=\"p1\">*</ept> file, into the <bpt id=\"p2\">*</bpt>content<ept id=\"p2\">*</ept> folder you created.","source":"Copy the contents of your project folder, together with its *.template.config/template.json* file, into the *content* folder you created."},{"content":"Next to the <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> folder, add a <bpt id=\"p2\">[</bpt><bpt id=\"p3\">*</bpt>nuspec<ept id=\"p3\">*</ept> file<ept id=\"p2\">](/nuget/create-packages/creating-a-package)</ept>.","pos":[3411,3506],"source":"Next to the *content* folder, add a [*nuspec* file](/nuget/create-packages/creating-a-package)."},{"content":"The nuspec file is an XML manifest file that describes a package's contents and drives the process of creating the NuGet package.","pos":[3507,3636]},{"content":"Directory structure showing the layout of the NuGet package","pos":[3643,3702]},{"content":"Inside of a <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>packageTypes&gt;<ept id=\"p1\">**</ept> element in the <bpt id=\"p2\">*</bpt>nuspec<ept id=\"p2\">*</ept> file, include a <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\&lt;</ph>packageType&gt;<ept id=\"p3\">**</ept> element with a <ph id=\"ph3\">`name`</ph> attribute value of <ph id=\"ph4\">`Template`</ph>.","pos":[3767,3910],"source":"Inside of a **\\<packageTypes>** element in the *nuspec* file, include a **\\<packageType>** element with a `name` attribute value of `Template`."},{"content":"Both the <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> folder and the <bpt id=\"p2\">*</bpt>nuspec<ept id=\"p2\">*</ept> file should reside in the same directory.","pos":[3911,3995],"source":" Both the *content* folder and the *nuspec* file should reside in the same directory."},{"content":"The table shows the minimum <bpt id=\"p1\">*</bpt>nuspec<ept id=\"p1\">*</ept> file elements required to produce a template as a NuGet package.","pos":[3996,4097],"source":" The table shows the minimum *nuspec* file elements required to produce a template as a NuGet package."},{"content":"Element","pos":[4104,4111]},{"content":"Type","pos":[4125,4129]},{"content":"Description","pos":[4134,4145]},{"pos":[4202,4216],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>authors&gt;<ept id=\"p1\">**</ept>","source":"**\\<authors>**"},{"content":"string","pos":[4223,4229]},{"content":"A comma-separated list of packages authors, matching the profile names on nuget.org. Authors are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors.","pos":[4232,4434]},{"pos":[4442,4460],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>description&gt;<ept id=\"p1\">**</ept>","source":"**\\<description>**"},{"content":"string","pos":[4463,4469]},{"content":"A long description of the package for UI display.","pos":[4472,4521]},{"pos":[4529,4538],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>id&gt;<ept id=\"p1\">**</ept>","source":"**\\<id>**"},{"content":"string","pos":[4550,4556]},{"content":"The case-insensitive package identifier, which must be unique across nuget.org or whatever gallery the package will reside in.","pos":[4559,4685]},{"content":"IDs may not contain spaces or characters that are not valid for a URL and generally follow .NET namespace rules.","pos":[4686,4798]},{"content":"See <bpt id=\"p1\">[</bpt>Choosing a unique package identifier and setting the version number<ept id=\"p1\">](/nuget/create-packages/creating-a-package#choosing-a-unique-package-identifier-and-setting-the-version-number)</ept> for guidance.","pos":[4799,4997],"source":" See [Choosing a unique package identifier and setting the version number](/nuget/create-packages/creating-a-package#choosing-a-unique-package-identifier-and-setting-the-version-number) for guidance."},{"pos":[5005,5023],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>packageType&gt;<ept id=\"p1\">**</ept>","source":"**\\<packageType>**"},{"content":"string","pos":[5026,5032]},{"content":"Place this element inside a <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>packageTypes&gt;<ept id=\"p1\">**</ept> element among the <bpt id=\"p2\">**</bpt><ph id=\"ph2\">\\&lt;</ph>metadata&gt;<ept id=\"p2\">**</ept> elements.","pos":[5035,5126],"source":"Place this element inside a **\\<packageTypes>** element among the **\\<metadata>** elements."},{"content":"Set the <ph id=\"ph1\">`name`</ph> attribute of the <bpt id=\"p1\">**</bpt><ph id=\"ph2\">\\&lt;</ph>packageType&gt;<ept id=\"p1\">**</ept> element to <ph id=\"ph3\">`Template`</ph>.","pos":[5127,5200],"source":" Set the `name` attribute of the **\\<packageType>** element to `Template`."},{"pos":[5208,5222],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>version&gt;<ept id=\"p1\">**</ept>","source":"**\\<version>**"},{"content":"string","pos":[5229,5235]},{"content":"The version of the package, following the major.minor.patch pattern.","pos":[5238,5306]},{"content":"Version numbers may include a pre-release suffix as described in <bpt id=\"p1\">[</bpt>Pre-release versions<ept id=\"p1\">](/nuget/create-packages/prerelease-packages#semantic-versioning)</ept>.","pos":[5307,5459],"source":" Version numbers may include a pre-release suffix as described in [Pre-release versions](/nuget/create-packages/prerelease-packages#semantic-versioning)."},{"pos":[5466,5554],"content":"See the <bpt id=\"p1\">[</bpt>.nuspec reference<ept id=\"p1\">](/nuget/schema/nuspec)</ept> for the complete <bpt id=\"p2\">*</bpt>nuspec<ept id=\"p2\">*</ept> file schema.","source":"See the [.nuspec reference](/nuget/schema/nuspec) for the complete *nuspec* file schema."},{"pos":[5559,5685],"content":"The <bpt id=\"p1\">*</bpt>nuspec<ept id=\"p1\">*</ept> file for the tutorial is named <bpt id=\"p2\">*</bpt>GarciaSoftware.ConsoleTemplate.CSharp.nuspec<ept id=\"p2\">*</ept> and contains the following content:","source":"The *nuspec* file for the tutorial is named *GarciaSoftware.ConsoleTemplate.CSharp.nuspec* and contains the following content:"},{"content":"<bpt id=\"p1\">[</bpt>Create the package<ept id=\"p1\">](/nuget/create-packages/creating-a-package#creating-the-package)</ept> using the <ph id=\"ph1\">`nuget pack &lt;PATH_TO_NUSPEC_FILE&gt;`</ph> command.","pos":[6183,6321],"source":"[Create the package](/nuget/create-packages/creating-a-package#creating-the-package) using the `nuget pack <PATH_TO_NUSPEC_FILE>` command."},{"content":"The following command assumes that the folder that holds the NuGet assets is at <bpt id=\"p1\">*</bpt>C:\\Users<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\&lt;</ph>USER&gt;\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p1\">*</ept>.","pos":[6322,6480],"source":" The following command assumes that the folder that holds the NuGet assets is at *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp*."},{"content":"But wherever you place the folder on your system, the <ph id=\"ph1\">`nuget pack`</ph> command accepts the path to the <bpt id=\"p1\">*</bpt>nuspec<ept id=\"p1\">*</ept> file:","pos":[6481,6594],"source":" But wherever you place the folder on your system, the `nuget pack` command accepts the path to the *nuspec* file:"},{"pos":[6760,6795],"content":"Publishing the package to nuget.org","linkify":"Publishing the package to nuget.org","nodes":[{"content":"Publishing the package to nuget.org","pos":[0,35]}]},{"content":"To publish a NuGet package, follow the instructions in the <bpt id=\"p1\">[</bpt>Create and publish a package<ept id=\"p1\">](/nuget/quickstart/create-and-publish-a-package#publish-the-package)</ept> topic.","pos":[6797,6961],"source":"To publish a NuGet package, follow the instructions in the [Create and publish a package](/nuget/quickstart/create-and-publish-a-package#publish-the-package) topic."},{"content":"However, we recommend that you don't publish the tutorial template to NuGet as it can never be deleted once published, only delisted.","pos":[6962,7095]},{"content":"Now that you have the NuGet package in the form of a <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file, we suggest that you follow the instructions below to install the template directly from the local <bpt id=\"p2\">*</bpt>nupkg<ept id=\"p2\">*</ept> file.","pos":[7096,7274],"source":" Now that you have the NuGet package in the form of a *nupkg* file, we suggest that you follow the instructions below to install the template directly from the local *nupkg* file."},{"pos":[7280,7321],"content":"Install the template from a NuGet package","linkify":"Install the template from a NuGet package","nodes":[{"content":"Install the template from a NuGet package","pos":[0,41]}]},{"pos":[7328,7376],"content":"Install the template from the local <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file","linkify":"Install the template from the local *nupkg* file","source":"Install the template from the local *nupkg* file"},{"pos":[7378,7544],"content":"To install the template from the <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file that you produced, use the <ph id=\"ph1\">`dotnet new`</ph> command with the <ph id=\"ph2\">`-i|--install`</ph> option and provide the path to the <bpt id=\"p2\">*</bpt>nupkg<ept id=\"p2\">*</ept> file:","source":"To install the template from the *nupkg* file that you produced, use the `dotnet new` command with the `-i|--install` option and provide the path to the *nupkg* file:"},{"pos":[7647,7708],"content":"Install the template from a NuGet package stored at nuget.org","linkify":"Install the template from a NuGet package stored at nuget.org","nodes":[{"content":"Install the template from a NuGet package stored at nuget.org","pos":[0,61]}]},{"pos":[7710,7887],"content":"If you wish to install a template from a NuGet package stored at nuget.org, use the <ph id=\"ph1\">`dotnet new`</ph> command with the <ph id=\"ph2\">`-i|--install`</ph> option and supply the name of the NuGet package:","source":"If you wish to install a template from a NuGet package stored at nuget.org, use the `dotnet new` command with the `-i|--install` option and supply the name of the NuGet package:"},{"pos":[7959,8502],"content":"[!NOTE]\nThe example is for demonstration purposes only. There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org, and we don't recommend that you publish and consume test templates from NuGet. If you run the command, no template is installed. However, you can install a template that hasn't been published to nuget.org by referencing the *nupkg* file directly on your local file system as shown in the previous section [Install the template from the local nupkg file](#install-the-template-from-the-local-nupkg-file).","leadings":["","> "],"nodes":[{"content":"The example is for demonstration purposes only. There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org, and we don't recommend that you publish and consume test templates from NuGet. If you run the command, no template is installed. However, you can install a template that hasn't been published to nuget.org by referencing the *nupkg* file directly on your local file system as shown in the previous section [Install the template from the local nupkg file](#install-the-template-from-the-local-nupkg-file).","pos":[8,541],"nodes":[{"content":"The example is for demonstration purposes only.","pos":[0,47]},{"content":"There isn't a <ph id=\"ph1\">`GarciaSoftware.ConsoleTemplate.CSharp`</ph> NuGet package at nuget.org, and we don't recommend that you publish and consume test templates from NuGet.","pos":[48,208],"source":" There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org, and we don't recommend that you publish and consume test templates from NuGet."},{"content":"If you run the command, no template is installed.","pos":[209,258]},{"content":"However, you can install a template that hasn't been published to nuget.org by referencing the <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file directly on your local file system as shown in the previous section <bpt id=\"p2\">[</bpt>Install the template from the local nupkg file<ept id=\"p2\">](#install-the-template-from-the-local-nupkg-file)</ept>.","pos":[259,533],"source":" However, you can install a template that hasn't been published to nuget.org by referencing the *nupkg* file directly on your local file system as shown in the previous section [Install the template from the local nupkg file](#install-the-template-from-the-local-nupkg-file)."}]}]},{"content":"If you'd like a live example of how to install a template from a package at nuget.org, you can use the <bpt id=\"p1\">[</bpt>NUnit 3 template for dotnet-new<ept id=\"p1\">](https://www.nuget.org/packages/NUnit3.DotNetNew.Template/)</ept>.","pos":[8504,8700],"source":"If you'd like a live example of how to install a template from a package at nuget.org, you can use the [NUnit 3 template for dotnet-new](https://www.nuget.org/packages/NUnit3.DotNetNew.Template/)."},{"content":"This template sets up a project to use NUnit unit testing.","pos":[8701,8759]},{"content":"Use the following command to install it:","pos":[8760,8800]},{"content":"When you list the templates with <ph id=\"ph1\">`dotnet new -l`</ph>, you see the <bpt id=\"p1\">*</bpt>NUnit 3 Test Project<ept id=\"p1\">*</ept> with a short name of <bpt id=\"p2\">*</bpt>nunit<ept id=\"p2\">*</ept> in the template list.","pos":[8858,8993],"source":"When you list the templates with `dotnet new -l`, you see the *NUnit 3 Test Project* with a short name of *nunit* in the template list."},{"content":"You're ready to use the template in the next section.","pos":[8994,9047]},{"content":"Console window showing the NUnit template with other templates","pos":[9051,9113]},{"pos":[9186,9220],"content":"Create a project from the template","linkify":"Create a project from the template","nodes":[{"content":"Create a project from the template","pos":[0,34]}]},{"content":"After the template is installed from NuGet, use the template by executing the <ph id=\"ph1\">`dotnet new &lt;TEMPLATE&gt;`</ph> command from the directory where you want to the template engine's output placed (unless you're using the <ph id=\"ph2\">`-o|--output`</ph> option to specify a specific directory).","pos":[9222,9484],"source":"After the template is installed from NuGet, use the template by executing the `dotnet new <TEMPLATE>` command from the directory where you want to the template engine's output placed (unless you're using the `-o|--output` option to specify a specific directory)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`dotnet new`</ph> Options<ept id=\"p1\">](~/docs/core/tools/dotnet-new.md#options)</ept>.","pos":[9485,9575],"source":" For more information, see [`dotnet new` Options](~/docs/core/tools/dotnet-new.md#options)."},{"content":"Supply the template's short name directly to the <ph id=\"ph1\">`dotnet new`</ph> command.","pos":[9576,9646],"source":" Supply the template's short name directly to the `dotnet new` command."},{"content":"To create a project from the NUnit template, run the following command:","pos":[9647,9718]},{"content":"The console shows that the project is created and that the project's packages are restored.","pos":[9753,9844]},{"content":"After the command is run, the project is ready for use.","pos":[9845,9900]},{"content":"Console window shows the output of dotnet new nunit including restoring the project dependencies","pos":[9904,10000]},{"pos":[10075,10139],"content":"To uninstall a template from a NuGet package stored at nuget.org","linkify":"To uninstall a template from a NuGet package stored at nuget.org","nodes":[{"content":"To uninstall a template from a NuGet package stored at nuget.org","pos":[0,64]}]},{"pos":[10211,10486],"content":"[!NOTE]\nThe example is for demonstration purposes only. There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org or installed with the .NET Core SDK. If you run the command, no package/template is uninstalled and you receive the following exception:","leadings":["","> "],"nodes":[{"content":"The example is for demonstration purposes only. There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org or installed with the .NET Core SDK. If you run the command, no package/template is uninstalled and you receive the following exception:","pos":[8,273],"nodes":[{"content":"The example is for demonstration purposes only.","pos":[0,47]},{"content":"There isn't a <ph id=\"ph1\">`GarciaSoftware.ConsoleTemplate.CSharp`</ph> NuGet package at nuget.org or installed with the .NET Core SDK.","pos":[48,165],"source":" There isn't a `GarciaSoftware.ConsoleTemplate.CSharp` NuGet package at nuget.org or installed with the .NET Core SDK."},{"content":"If you run the command, no package/template is uninstalled and you receive the following exception:","pos":[166,265]}]}]},{"content":"Could not find something to uninstall called 'GarciaSoftware.ConsoleTemplate.CSharp'.","pos":[10493,10578]},{"pos":[10580,10746],"content":"If you installed the <bpt id=\"p1\">[</bpt>NUnit 3 template for dotnet-new<ept id=\"p1\">](https://www.nuget.org/packages/NUnit3.DotNetNew.Template/)</ept> and wish to uninstall it, use the following command:","source":"If you installed the [NUnit 3 template for dotnet-new](https://www.nuget.org/packages/NUnit3.DotNetNew.Template/) and wish to uninstall it, use the following command:"},{"pos":[10808,10854],"content":"Uninstall the template from a local nupkg file","linkify":"Uninstall the template from a local nupkg file","nodes":[{"content":"Uninstall the template from a local nupkg file","pos":[0,46]}]},{"content":"When you wish to uninstall the template, don't attempt to use the path to the <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file.","pos":[10856,10947],"source":"When you wish to uninstall the template, don't attempt to use the path to the *nupkg* file."},{"content":"<bpt id=\"p1\">*</bpt>Attempting to uninstall a template using <ph id=\"ph1\">`dotnet new -u &lt;PATH_TO_NUPKG_FILE&gt;`</ph> fails.<ept id=\"p1\">*</ept>","pos":[10948,11034],"source":"*Attempting to uninstall a template using `dotnet new -u <PATH_TO_NUPKG_FILE>` fails.*"},{"content":"Reference the package by its <ph id=\"ph1\">`id`</ph>:","pos":[11035,11069],"source":" Reference the package by its `id`:"},{"pos":[11148,11176],"content":"Use file system distribution","linkify":"Use file system distribution","nodes":[{"content":"Use file system distribution","pos":[0,28]}]},{"content":"To distribute the template, place the project template folder in a location accessible to users on your network.","pos":[11178,11290]},{"content":"Use the <ph id=\"ph1\">`dotnet new`</ph> command with the <ph id=\"ph2\">`-i|--install`</ph> option and specify the path to the template folder (the project folder containing the project and the <bpt id=\"p1\">*</bpt>.template.config<ept id=\"p1\">*</ept> folder).","pos":[11291,11473],"source":" Use the `dotnet new` command with the `-i|--install` option and specify the path to the template folder (the project folder containing the project and the *.template.config* folder)."},{"content":"The tutorial assumes the project template is stored in the <bpt id=\"p1\">*</bpt>Documents/Templates<ept id=\"p1\">*</ept> folder of the user's profile.","pos":[11475,11585],"source":"The tutorial assumes the project template is stored in the *Documents/Templates* folder of the user's profile."},{"content":"From that location, install the template with the following command replacing <ph id=\"ph1\">\\&lt;</ph>USER&gt; with the user's profile name:","pos":[11586,11701],"source":" From that location, install the template with the following command replacing \\<USER> with the user's profile name:"},{"pos":[11811,11845],"content":"Create a project from the template","linkify":"Create a project from the template","nodes":[{"content":"Create a project from the template","pos":[0,34]}]},{"content":"After the template is installed from the file system, use the template by executing the <ph id=\"ph1\">`dotnet new &lt;TEMPLATE&gt;`</ph> command from the directory where you want to the template engine's output placed (unless you're using the <ph id=\"ph2\">`-o|--output`</ph> option to specify a specific directory).","pos":[11847,12119],"source":"After the template is installed from the file system, use the template by executing the `dotnet new <TEMPLATE>` command from the directory where you want to the template engine's output placed (unless you're using the `-o|--output` option to specify a specific directory)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`dotnet new`</ph> Options<ept id=\"p1\">](~/docs/core/tools/dotnet-new.md#options)</ept>.","pos":[12120,12210],"source":" For more information, see [`dotnet new` Options](~/docs/core/tools/dotnet-new.md#options)."},{"content":"Supply the template's short name directly to the <ph id=\"ph1\">`dotnet new`</ph> command.","pos":[12211,12281],"source":" Supply the template's short name directly to the `dotnet new` command."},{"pos":[12283,12424],"content":"From a new project folder created at <bpt id=\"p1\">*</bpt>C:\\Users<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\&lt;</ph>USER&gt;\\Documents\\Projects\\MyConsoleApp<ept id=\"p1\">*</ept>, create a project from the <ph id=\"ph3\">`garciaconsole`</ph> template:","source":"From a new project folder created at *C:\\Users\\\\\\<USER>\\Documents\\Projects\\MyConsoleApp*, create a project from the `garciaconsole` template:"},{"pos":[12471,12493],"content":"Uninstall the template","linkify":"Uninstall the template","nodes":[{"content":"Uninstall the template","pos":[0,22]}]},{"pos":[12495,12713],"content":"If you created the template on your local file system at <bpt id=\"p1\">*</bpt>C:\\Users<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\&lt;</ph>USER&gt;\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p1\">*</ept>, uninstall it with the <ph id=\"ph3\">`-u|--uninstall`</ph> switch and the path to the template folder:","source":"If you created the template on your local file system at *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp*, uninstall it with the `-u|--uninstall` switch and the path to the template folder:"},{"pos":[12821,13196],"content":"[!NOTE]\nTo uninstall the template from your local file system, you need to fully qualify the path. For example, *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp* will work, but *./GarciaSoftware.ConsoleTemplate.CSharp* from the containing folder will not.\nAdditionally, do not include a final terminating directory slash on your template path.","leadings":["","> ","> "],"nodes":[{"content":"To uninstall the template from your local file system, you need to fully qualify the path. For example, *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp* will work, but *./GarciaSoftware.ConsoleTemplate.CSharp* from the containing folder will not.\nAdditionally, do not include a final terminating directory slash on your template path.","pos":[8,371],"nodes":[{"content":"To uninstall the template from your local file system, you need to fully qualify the path.","pos":[0,90]},{"content":"For example, <bpt id=\"p1\">*</bpt>C:\\Users<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\&lt;</ph>USER&gt;\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p1\">*</ept> will work, but <bpt id=\"p2\">*</bpt>./GarciaSoftware.ConsoleTemplate.CSharp<ept id=\"p2\">*</ept> from the containing folder will not.","pos":[91,275],"source":" For example, *C:\\Users\\\\\\<USER>\\Documents\\Templates\\GarciaSoftware.ConsoleTemplate.CSharp* will work, but *./GarciaSoftware.ConsoleTemplate.CSharp* from the containing folder will not."},{"content":"Additionally, do not include a final terminating directory slash on your template path.","pos":[276,363],"source":"\nAdditionally, do not include a final terminating directory slash on your template path."}]}]},{"pos":[13201,13209],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[13213,13292],"content":"<bpt id=\"p1\">[</bpt>dotnet/templating GitHub repo Wiki<ept id=\"p1\">](https://github.com/dotnet/templating/wiki)</ept>","source":"[dotnet/templating GitHub repo Wiki](https://github.com/dotnet/templating/wiki)"},{"pos":[13295,13390],"content":"<bpt id=\"p1\">[</bpt>dotnet/dotnet-template-samples GitHub repo<ept id=\"p1\">](https://github.com/dotnet/dotnet-template-samples)</ept>","source":"[dotnet/dotnet-template-samples GitHub repo](https://github.com/dotnet/dotnet-template-samples)"},{"pos":[13393,13530],"content":"<bpt id=\"p1\">[</bpt>How to create your own templates for dotnet new<ept id=\"p1\">](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)</ept>","source":"[How to create your own templates for dotnet new](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)"},{"pos":[13533,13620],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">*</bpt>template.json<ept id=\"p2\">*</ept> schema at the JSON Schema Store<ept id=\"p1\">](http://json.schemastore.org/template)</ept>","source":"[*template.json* schema at the JSON Schema Store](http://json.schemastore.org/template)"}]}