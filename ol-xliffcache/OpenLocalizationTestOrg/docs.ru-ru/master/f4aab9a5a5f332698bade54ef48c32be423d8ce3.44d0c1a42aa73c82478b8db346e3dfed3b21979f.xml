{"content":"---\ntitle: \"Wait For Input Activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: d58c344e-9ee8-4ce2-b199-75b3fe45237f\ncaps.latest.revision: 6\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Wait For Input Activity\nThis sample demonstrates how to create named bookmarks in a workflow. [!INCLUDE[wf](../../../../includes/wf-md.md)] does not provide an activity for declarative bookmark creation. Therefore, when you want to create a bookmark in your workflow, you must write a custom activity that creates it. The `WaitForInput` activity defined in this sample provides this functionality, so that users can create bookmarks declaratively within a workflow.  \n  \n## Projects in this sample  \n  \n|**Project Name**|**Description**|**Main Files**|  \n|-|-|-|  \n|WaitForInput|Contains `WaitForInput` activity and its designer|WaitForInput.cs<br /><br /> `WaitForInput` activity definition.|  \n|||WaitForInputDesigner.xaml<br /><br /> Custom designer for the `WaitForInput` activity.|  \n|||TypeToFirstGenericArgumentConverter.cs<br /><br /> WPF type converter used to update the generic type of the activity in the designer.|  \n|WaitForInputTestClient|Sample client application that configures and runs a workflow using several WaitForInput activities using the workflow designer.|Sequence1.xaml<br /><br /> A sequential workflow that uses the `WaitForInput` activity.|  \n|||Program.cs<br /><br /> Runs an instance of the workflow defined in Sequence1.xaml.|  \n  \n## WaitForInput Activity  \n The `WaitForInput` activity creates a named bookmark in a workflow. The bookmark waits for a signal and receives data of its configured type. After the bookmark is resumed the data passed into the workflow is available through the `Result` property.  \n  \n The `WaitForInput` activity derives from the <xref:System.Activities.NativeActivity> class because it must create bookmarks, which are only accessible through the <xref:System.Activities.NativeActivityContext> class.  \n  \n The activity has three attributes applied to it for binding a designer, adding the generic argument feature that can be updated, and setting the default generic type to string. The activity also has the arguments  listed in the following table.  \n  \n|**Name**|**Type**|**Description**|  \n|-|-|-|  \n|TResult|Generic argument (TResult)|Type of the bookmark. This is the type of the data to be passed to the bookmark when resumed.|  \n|BookmarkName|InArgument\\<string>|Name of the bookmark.|  \n|Result|InArgument\\<TResult>|Data passed to the activity when the bookmark is resumed.|  \n  \n## WaitForInput activity designer  \n The `WaitForInput` activity designer is implemented in the WaitForInputDesigner.xaml file. The `WaitForInput` activity and its designer are included in the same assembly. The following graphic shows the `WaitForInput` activity in the toolbox within a category that has the same name as the assembly.  \n  \n ![WaitForInput toolbox screenshot](../../../../docs/framework/windows-workflow-foundation/samples/media/waitforinputtoolbox.jpg \"WaitForInputToolbox\")  \n  \n The following graphic shows the `WaitForInput` designer. Because, the `WaitForInput` activity is very basic, the designer allows setting all its arguments directly in the designer surface.  \n  \n ![WaitForInput Activity Designer](../../../../docs/framework/windows-workflow-foundation/samples/media/waitforinputdesigner.jpg \"WaitForInputDesigner\")  \n  \n#### To use this sample  \n  \n1.  Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the WaitForInput.sln file.  \n  \n2.  To build the solution, press CTRL+SHIFT+B.  \n  \n3.  To start the sample without debugging, press CTRL+F5.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Scenario\\ActivityLibrary\\WaitForInput`  \n  \n## See Also","nodes":[{"pos":[12,52],"content":"Wait For Input Activity | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Wait For Input Activity | Microsoft Docs","pos":[0,40]}]},{"pos":[317,340],"content":"Wait For Input Activity","linkify":"Wait For Input Activity","nodes":[{"content":"Wait For Input Activity","pos":[0,23]}]},{"content":"This sample demonstrates how to create named bookmarks in a workflow.","pos":[341,410]},{"content":"<ph id=\"ph1\">[!INCLUDE[wf](../../../../includes/wf-md.md)]</ph> does not provide an activity for declarative bookmark creation.","pos":[411,520],"source":"[!INCLUDE[wf](../../../../includes/wf-md.md)] does not provide an activity for declarative bookmark creation."},{"content":"Therefore, when you want to create a bookmark in your workflow, you must write a custom activity that creates it.","pos":[521,634]},{"content":"The <ph id=\"ph1\">`WaitForInput`</ph> activity defined in this sample provides this functionality, so that users can create bookmarks declaratively within a workflow.","pos":[635,782],"source":" The `WaitForInput` activity defined in this sample provides this functionality, so that users can create bookmarks declaratively within a workflow."},{"pos":[791,814],"content":"Projects in this sample","linkify":"Projects in this sample","nodes":[{"content":"Projects in this sample","pos":[0,23]}]},{"pos":[821,837],"content":"<bpt id=\"p1\">**</bpt>Project Name<ept id=\"p1\">**</ept>","source":"**Project Name**"},{"pos":[838,853],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"pos":[854,868],"content":"<bpt id=\"p1\">**</bpt>Main Files<ept id=\"p1\">**</ept>","source":"**Main Files**"},{"content":"WaitForInput","pos":[883,895]},{"pos":[896,945],"content":"Contains <ph id=\"ph1\">`WaitForInput`</ph> activity and its designer","source":"Contains `WaitForInput` activity and its designer"},{"content":"WaitForInput.cs","pos":[946,961]},{"content":"<ph id=\"ph1\">`WaitForInput`</ph> activity definition.","pos":[974,1009],"source":"`WaitForInput` activity definition."},{"content":"WaitForInputDesigner.xaml","pos":[1016,1041]},{"content":"Custom designer for the <ph id=\"ph1\">`WaitForInput`</ph> activity.","pos":[1054,1102],"source":" Custom designer for the `WaitForInput` activity."},{"content":"TypeToFirstGenericArgumentConverter.cs","pos":[1109,1147]},{"content":"WPF type converter used to update the generic type of the activity in the designer.","pos":[1160,1243]},{"content":"WaitForInputTestClient","pos":[1248,1270]},{"content":"Sample client application that configures and runs a workflow using several WaitForInput activities using the workflow designer.","pos":[1271,1399]},{"content":"Sequence1.xaml","pos":[1400,1414]},{"content":"A sequential workflow that uses the <ph id=\"ph1\">`WaitForInput`</ph> activity.","pos":[1427,1487],"source":" A sequential workflow that uses the `WaitForInput` activity."},{"content":"Program.cs","pos":[1494,1504]},{"content":"Runs an instance of the workflow defined in Sequence1.xaml.","pos":[1517,1576]},{"pos":[1586,1607],"content":"WaitForInput Activity","linkify":"WaitForInput Activity","nodes":[{"content":"WaitForInput Activity","pos":[0,21]}]},{"content":"The <ph id=\"ph1\">`WaitForInput`</ph> activity creates a named bookmark in a workflow.","pos":[1611,1678],"source":"The `WaitForInput` activity creates a named bookmark in a workflow."},{"content":"The bookmark waits for a signal and receives data of its configured type.","pos":[1679,1752]},{"content":"After the bookmark is resumed the data passed into the workflow is available through the <ph id=\"ph1\">`Result`</ph> property.","pos":[1753,1860],"source":" After the bookmark is resumed the data passed into the workflow is available through the `Result` property."},{"pos":[1867,2083],"content":"The <ph id=\"ph1\">`WaitForInput`</ph> activity derives from the <ph id=\"ph2\">&lt;xref:System.Activities.NativeActivity&gt;</ph> class because it must create bookmarks, which are only accessible through the <ph id=\"ph3\">&lt;xref:System.Activities.NativeActivityContext&gt;</ph> class.","source":"The `WaitForInput` activity derives from the <xref:System.Activities.NativeActivity> class because it must create bookmarks, which are only accessible through the <xref:System.Activities.NativeActivityContext> class."},{"content":"The activity has three attributes applied to it for binding a designer, adding the generic argument feature that can be updated, and setting the default generic type to string.","pos":[2090,2266]},{"content":"The activity also has the arguments  listed in the following table.","pos":[2267,2334]},{"pos":[2341,2349],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[2350,2358],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[2359,2374],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"TResult","pos":[2389,2396]},{"content":"Generic argument (TResult)","pos":[2397,2423]},{"content":"Type of the bookmark.","pos":[2424,2445]},{"content":"This is the type of the data to be passed to the bookmark when resumed.","pos":[2446,2517]},{"content":"BookmarkName","pos":[2522,2534]},{"content":"InArgument<ph id=\"ph1\">\\&lt;</ph>string&gt;","pos":[2535,2554],"source":"InArgument\\<string>"},{"content":"Name of the bookmark.","pos":[2555,2576]},{"content":"Result","pos":[2581,2587]},{"content":"InArgument<ph id=\"ph1\">\\&lt;</ph>TResult&gt;","pos":[2588,2608],"source":"InArgument\\<TResult>"},{"content":"Data passed to the activity when the bookmark is resumed.","pos":[2609,2666]},{"pos":[2676,2706],"content":"WaitForInput activity designer","linkify":"WaitForInput activity designer","nodes":[{"content":"WaitForInput activity designer","pos":[0,30]}]},{"content":"The <ph id=\"ph1\">`WaitForInput`</ph> activity designer is implemented in the WaitForInputDesigner.xaml file.","pos":[2710,2800],"source":"The `WaitForInput` activity designer is implemented in the WaitForInputDesigner.xaml file."},{"content":"The <ph id=\"ph1\">`WaitForInput`</ph> activity and its designer are included in the same assembly.","pos":[2801,2880],"source":" The `WaitForInput` activity and its designer are included in the same assembly."},{"content":"The following graphic shows the <ph id=\"ph1\">`WaitForInput`</ph> activity in the toolbox within a category that has the same name as the assembly.","pos":[2881,3009],"source":" The following graphic shows the `WaitForInput` activity in the toolbox within a category that has the same name as the assembly."},{"pos":[3016,3166],"content":"<bpt id=\"p1\">![</bpt>WaitForInput toolbox screenshot<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/windows-workflow-foundation/samples/media/waitforinputtoolbox.jpg \"</bpt>WaitForInputToolbox<ept id=\"p2\">\")</ept>","source":"![WaitForInput toolbox screenshot](../../../../docs/framework/windows-workflow-foundation/samples/media/waitforinputtoolbox.jpg \"WaitForInputToolbox\")"},{"content":"The following graphic shows the <ph id=\"ph1\">`WaitForInput`</ph> designer.","pos":[3173,3229],"source":"The following graphic shows the `WaitForInput` designer."},{"content":"Because, the <ph id=\"ph1\">`WaitForInput`</ph> activity is very basic, the designer allows setting all its arguments directly in the designer surface.","pos":[3230,3361],"source":" Because, the `WaitForInput` activity is very basic, the designer allows setting all its arguments directly in the designer surface."},{"pos":[3368,3519],"content":"<bpt id=\"p1\">![</bpt>WaitForInput Activity Designer<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/windows-workflow-foundation/samples/media/waitforinputdesigner.jpg \"</bpt>WaitForInputDesigner<ept id=\"p2\">\")</ept>","source":"![WaitForInput Activity Designer](../../../../docs/framework/windows-workflow-foundation/samples/media/waitforinputdesigner.jpg \"WaitForInputDesigner\")"},{"pos":[3530,3548],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"pos":[3558,3650],"content":"Using <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the WaitForInput.sln file.","source":"Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the WaitForInput.sln file."},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[3660,3702]},{"content":"To start the sample without debugging, press CTRL+F5.","pos":[3712,3765]},{"pos":[3773,3905],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[3959,4285],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4286,4336]},{"pos":[4429,4437],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}