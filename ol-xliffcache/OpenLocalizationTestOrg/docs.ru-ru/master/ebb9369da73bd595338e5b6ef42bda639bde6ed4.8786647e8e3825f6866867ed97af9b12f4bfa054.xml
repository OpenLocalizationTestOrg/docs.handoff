{"content":"---\ntitle: \"How to: Create a Grid Element\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Grid control [WPF], creating [WPF], grid instance\"\nms.assetid: b2f07626-9df8-43b8-8d36-492f3cb42837\n---\n# How to: Create a Grid Element\n## Example  \n The following example shows how to create and use an instance of <xref:System.Windows.Controls.Grid> by using either [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] or code. This example uses three <xref:System.Windows.Controls.ColumnDefinition> objects and three <xref:System.Windows.Controls.RowDefinition> objects to create a grid that has nine cells, such as in a worksheet. Each cell contains a <xref:System.Windows.Controls.TextBlock> element that represents data, and the top row contains a <xref:System.Windows.Controls.TextBlock> with the <xref:System.Windows.Controls.Grid.ColumnSpan%2A> property applied. To show the boundaries of each cell, the <xref:System.Windows.Controls.Grid.ShowGridLines%2A> property is enabled.  \n  \n [!code-csharp[Grid#3](~/samples/snippets/csharp/VS_Snippets_Wpf/Grid/CSharp/Grid_Code.cs#3)]\n [!code-vb[Grid#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Grid/VisualBasic/grid_vb.vb#3)]\n [!code-xaml[Grid#3](~/samples/snippets/xaml/VS_Snippets_Wpf/Grid/XAML/default.xaml#3)]  \n  \n  Either approach will generate a user interface that looks much the same, like the one below.\n\n  ![a screenshot depicts a WPF user interface which contains a grid broken into three columns.  It bears the heading '2018 Products Shipped' spanning all columns of the top row, and has three columns each with sales figures for a certain quarter.  The bottom row has text spanning two columns with the message 'Total Units: 300,000'](././media/how-to-create-a-grid-element/how-to-create-a-grid-element.png)\n## See also\n\n- <xref:System.Windows.Controls.Grid>\n- [Panels Overview](panels-overview.md)\n","nodes":[{"pos":[4,225],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a Grid Element\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Grid control [WPF], creating [WPF], grid instance\"\nms.assetid: b2f07626-9df8-43b8-8d36-492f3cb42837","nodes":[{"content":"How to: Create a Grid Element","nodes":[{"pos":[0,29],"content":"How to: Create a Grid Element","nodes":[{"content":"How to: Create a Grid Element","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[232,261],"content":"How to: Create a Grid Element","linkify":"How to: Create a Grid Element","nodes":[{"content":"How to: Create a Grid Element","pos":[0,29]}]},{"pos":[265,272],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to create and use an instance of <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> by using either <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> or code.","pos":[276,471],"source":"The following example shows how to create and use an instance of <xref:System.Windows.Controls.Grid> by using either [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] or code."},{"content":"This example uses three <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ColumnDefinition&gt;</ph> objects and three <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RowDefinition&gt;</ph> objects to create a grid that has nine cells, such as in a worksheet.","pos":[472,676],"source":" This example uses three <xref:System.Windows.Controls.ColumnDefinition> objects and three <xref:System.Windows.Controls.RowDefinition> objects to create a grid that has nine cells, such as in a worksheet."},{"content":"Each cell contains a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element that represents data, and the top row contains a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid.ColumnSpan%2A&gt;</ph> property applied.","pos":[677,913],"source":" Each cell contains a <xref:System.Windows.Controls.TextBlock> element that represents data, and the top row contains a <xref:System.Windows.Controls.TextBlock> with the <xref:System.Windows.Controls.Grid.ColumnSpan%2A> property applied."},{"content":"To show the boundaries of each cell, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid.ShowGridLines%2A&gt;</ph> property is enabled.","pos":[914,1028],"source":" To show the boundaries of each cell, the <xref:System.Windows.Controls.Grid.ShowGridLines%2A> property is enabled."},{"content":"Either approach will generate a user interface that looks much the same, like the one below.","pos":[1321,1413]},{"content":"a screenshot depicts a WPF user interface which contains a grid broken into three columns.","pos":[1419,1509]},{"content":"It bears the heading '2018 Products Shipped' spanning all columns of the top row, and has three columns each with sales figures for a certain quarter.","pos":[1511,1661]},{"content":"The bottom row has text spanning two columns with the message 'Total Units: 300,000'","pos":[1663,1747]},{"pos":[1825,1833],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1875,1912],"content":"<bpt id=\"p1\">[</bpt>Panels Overview<ept id=\"p1\">](panels-overview.md)</ept>","source":"[Panels Overview](panels-overview.md)"}]}