{"content":"---\ntitle: \"^= operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"^=_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"^= operator [C#]\"\nms.assetid: 3658ff9a-61cd-467e-ad6b-8fbf1cfbaae4\n---\n# ^= operator (C# Reference)\n\nThe exclusive-OR assignment operator.\n\n## Remarks\n\nAn expression of the form\n\n```csharp\nx ^= y\n```\n\nis evaluated as\n\n```csharp\nx = x ^ y\n```\n\nexcept that `x` is only evaluated once. The [^ operator](xor-operator.md) performs a bitwise exclusive-OR operation on integral operands and logical exclusive-OR on [bool](../keywords/bool.md) operands.\n\nThe ^= operator cannot be overloaded directly, but user-defined types can overload the [^ operator](xor-operator.md) (see [operator](../keywords/operator.md)).\n\n## Example\n\n[!code-csharp[csRefOperators#23](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefOperators/CS/csrefOperators.cs#23)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# operators](index.md)","nodes":[{"pos":[4,210],"embed":true,"restype":"x-metadata","content":"title: \"^= operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"^=_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"^= operator [C#]\"\nms.assetid: 3658ff9a-61cd-467e-ad6b-8fbf1cfbaae4","nodes":[{"content":"^= operator - C# Reference","nodes":[{"pos":[0,26],"content":"^= operator - C# Reference","nodes":[{"content":"^= operator - C# Reference","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[217,243],"content":"^= operator (C# Reference)","linkify":"^= operator (C# Reference)","nodes":[{"content":"^= operator (C# Reference)","pos":[0,26]}]},{"content":"The exclusive-OR assignment operator.","pos":[245,282]},{"pos":[287,294],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"An expression of the form","pos":[296,321]},{"content":"is evaluated as","pos":[345,360]},{"content":"except that <ph id=\"ph1\">`x`</ph> is only evaluated once.","pos":[387,426],"source":"except that `x` is only evaluated once."},{"content":"The <bpt id=\"p1\">[</bpt>^ operator<ept id=\"p1\">](xor-operator.md)</ept> performs a bitwise exclusive-OR operation on integral operands and logical exclusive-OR on <bpt id=\"p2\">[</bpt>bool<ept id=\"p2\">](../keywords/bool.md)</ept> operands.","pos":[427,589],"source":" The [^ operator](xor-operator.md) performs a bitwise exclusive-OR operation on integral operands and logical exclusive-OR on [bool](../keywords/bool.md) operands."},{"pos":[591,750],"content":"The ^= operator cannot be overloaded directly, but user-defined types can overload the <bpt id=\"p1\">[</bpt>^ operator<ept id=\"p1\">](xor-operator.md)</ept> (see <bpt id=\"p2\">[</bpt>operator<ept id=\"p2\">](../keywords/operator.md)</ept>).","source":"The ^= operator cannot be overloaded directly, but user-defined types can overload the [^ operator](xor-operator.md) (see [operator](../keywords/operator.md))."},{"pos":[755,762],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[889,897],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[901,928],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[931,987],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[990,1014],"content":"<bpt id=\"p1\">[</bpt>C# operators<ept id=\"p1\">](index.md)</ept>","source":"[C# operators](index.md)"}]}