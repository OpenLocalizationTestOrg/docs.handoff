<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-increment-and-decrement-pointers.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">358decb73666d5a5ef7c0fa828168d90d2c22c1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\unsafe-code-pointers\how-to-increment-and-decrement-pointers.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9ae36e11ef998c07b230e5dddbd191d44d5840b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fea9ead089f8b613ac7f2f548d741358a8f0671</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: increment and decrement pointers - C# Programming Guide</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: increment and decrement pointers (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use the increment and the decrement operators, <ph id="ph1">`++`</ph> and <ph id="ph2">`--`</ph>, to change the pointer location by <ph id="ph3">`sizeof(pointer-type)`</ph> for a pointer of the type <ph id="ph4">`pointer-type*`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The increment and decrement expressions take the following form:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The increment and decrement operators can be applied to pointers of any type except the type <ph id="ph1">`void*`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The effect of applying the increment operator to a pointer of the type <ph id="ph1">`pointer-type*`</ph> is to add <ph id="ph2">`sizeof(pointer-type)`</ph> to the address that is contained in the pointer variable.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The effect of applying the decrement operator to a pointer of the type <ph id="ph1">`pointer-type*`</ph> is to subtract <ph id="ph2">`sizeof(pointer-type)`</ph> from the address that is contained in the pointer variable.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>No exceptions are generated when the operation overflows the domain of the pointer, and the result depends on the implementation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this example, you step through an array by incrementing the pointer by the size of <ph id="ph1">`int`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>With each step, you display the address and the content of the array element.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Value:0 @ Address:12860272<ept id="p1">**</ept><ph id="ph1">
</ph><bpt id="p2">**</bpt>Value:1 @ Address:12860276<ept id="p2">**</ept><ph id="ph2">
</ph><bpt id="p3">**</bpt>Value:2 @ Address:12860280<ept id="p3">**</ept><ph id="ph3">
</ph><bpt id="p4">**</bpt>Value:3 @ Address:12860284<ept id="p4">**</ept><ph id="ph4">
</ph><bpt id="p5">**</bpt>Value:4 @ Address:12860288<ept id="p5">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Pointer Expressions<ept id="p1">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Operators<ept id="p1">](../../../csharp/language-reference/operators/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulating Pointers<ept id="p1">](../../../csharp/programming-guide/unsafe-code-pointers/manipulating-pointers.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Pointer types<ept id="p1">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Types<ept id="p1">](../../../csharp/language-reference/keywords/types.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>unsafe<ept id="p1">](../../../csharp/language-reference/keywords/unsafe.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>fixed Statement<ept id="p1">](../../../csharp/language-reference/keywords/fixed-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>stackalloc<ept id="p1">](../../../csharp/language-reference/keywords/stackalloc.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sizeof<ept id="p1">](../../../csharp/language-reference/keywords/sizeof.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>