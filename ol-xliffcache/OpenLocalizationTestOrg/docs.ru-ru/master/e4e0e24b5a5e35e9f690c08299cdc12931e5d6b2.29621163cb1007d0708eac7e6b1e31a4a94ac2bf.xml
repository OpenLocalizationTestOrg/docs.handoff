{"content":"---\ntitle: \"What&#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"WCF [WCF], what's new\"\n  - \"Windows Communication Foundation [WCF], what's new\"\nms.assetid: 7e93fe73-af93-46b5-9f63-32f761ee40cf\ncaps.latest.revision: 35\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# What&#39;s New in Windows Communication Foundation 4.5\nThis topic discusses features new to [!INCLUDE[indigo1](../../../includes/indigo1-md.md)].  \n  \n## WCF Simplification Features  \n Much work has been done to make WCF 4.5 applications easier to develop and maintain. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md).  \n  \n### Task-based Async Support  \n By default, Add Service Reference generates Task-returning async service operation methods. This is done for both synchronous and asynchronous methods. This allows you to call the service operations asynchronously using the new Task based async programming model. When you call the generated proxy method, WCF constructs a Task object to represent the asynchronous operation and returns that Task to you. The Task completes when the operation completes.  When implementing an async operation you can implement it as a task-based async operation. For more information see, [Synchronous and Asynchronous Operations](../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md).  \n  \n### Simplified Generated Configuration Files  \n When you add a service reference in Visual Studio or use the SvcUtil.exe tool, a client configuration file is generated. In previous versions of WCF these configuration files contained the value of every binding property even if its value is the default value. In WCF 4.5 the generated configuration files contain only those binding properties that are set to a non-default value.  \n  \n [!INCLUDE[crdefault](../../../includes/crdefault-md.md)] [WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md)  \n  \n### Contract-First Development  \n WCF now has support for contract-first development. The svcutl.exe has a /serviceContract switch which allows you to generate service and data contracts from a WSDL document.  \n  \n### Add Service Reference from a Portable Subset Project  \n Portable subset projects enable .NET assembly programmers to maintain a single source tree and build system while still supporting multiple .NET platforms (desktop, Silverlight, Windows Phone, and XBOX). Portable subset projects only reference .NET portable libraries which are a .NET framework assembly that can be used on any core .NET platform. The developer experience is the same as adding a service reference within any other WCF client application. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Add Service Reference in a Portable Subset Project](../../../docs/framework/wcf/add-service-reference-in-a-portable-subset-project.md).  \n  \n### ASP.NET Compatibility Mode Default Changed  \n WCF provides ASP.NET compatibility mode to grant developers full access to the features in the ASP.NET HTTP pipeline when writing WCF services. To use this mode, you must set the `aspNetCompatibilityEnabled` attribute to true in the [\\<serviceHostingEnvironment>](../../../docs/framework/configure-apps/file-schema/wcf/servicehostingenvironment.md) section of web.config. Additionally, any service in this appDomain needs to have the `RequirementsMode` property on its <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute> set to <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode> or <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode>. By default <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute>is now set to <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode>. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][What's New in Windows Communication Foundation](../../../docs/framework/wcf/whats-new.md) and [WCF Services and ASP.NET](../../../docs/framework/wcf/feature-details/wcf-services-and-aspnet.md).  \n  \n### New Transport Default Values  \n In order to simplify configuration a number of transport property default values have changed. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md).  \n  \n### XmlDictionaryReaderQuotas  \n <xref:System.Xml.XmlDictionaryReaderQuotas> contains configurable quota values for XML dictionary readers which limit the amount of memory utilized by an encoder while creating a message. While these quotas are configurable, the default values have changed to lessen the possibility that a developer will have to set them explicitly. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md).  \n  \n### WCF Configuration Validation  \n As part of the build process within Visual Studio, WCF configuration files are now validated for attributes defined within the project. A list of validation errors or warnings is displayed in Visual Studio if the validation fails.  \n  \n### XML Editor Tooltips  \n In order to help new and existing WCF service developers to configure their services, the Visual Studio XML editor now provides tooltips for every configuration element and its properties that is part of the service configuration file.  \n  \n## Streaming Improvements  \n Added support for true asynchronous streaming where the send side now does not block threads if the receive side is not reading or slow in reading thereby increasing scalability. Removed the limitation of message buffering when a client sends a streamed message to an IIS hosted WCF service. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md).  \n  \n## Simplifying Exposing an Endpoint Over HTTPS with IIS  \n An HTTPS protocol mapping has been added to simplify exposing an endpoint over HTTPS. To enable an HTTPS endpoint, ensure your website has an HTTPS binding and SSL certificate configured, and then simply enable HTTPS for the virtual directory that hosts the service. If metadata is enabled for the service, it will be exposed over HTTPS as well.  \n  \n## Generating a Single WSDL Document  \n Some third-party WSDL processing stacks are not able to process WSDL documents that have dependencies on other documents through a xsd:import.  WCF now allows you to specify that all WSDL information be returned in a single document. To request a single WSDL document append \"?singleWSDL\" to the URI when requesting metadata from the service.  \n  \n## WebSocket Support  \n WebSockets is a technology that provides true bidirectional communication over ports 80 and 443 with performance characteristics similar to TCP. Two new bindings have been added to support communication over a WebSocket transport. <xref:System.ServiceModel.NetHttpBinding> and <xref:System.ServiceModel.NetHttpsBinding>. For more information see: [System-Provided Bindings](../../../docs/framework/wcf/system-provided-bindings.md).  \n  \n## New Transport Default Values  \n The following table describes the settings that have changed and where to find additional information.  \n  \n|Property|On|New Default|For more information see|  \n|--------------|--------|-----------------|------------------------------|  \n|channelInitializationTimeout|<xref:System.ServiceModel.NetTcpBinding>|30 seconds|<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout%2A>|  \n|listenBacklog|<xref:System.ServiceModel.NetTcpBinding>|12 * number of processors|<xref:System.ServiceModel.NetTcpBinding.ListenBacklog%2A>|  \n|maxPendingAccepts|ConnectionOrientedTransportBindingElement<br /><br /> SMSvcHost.exe|2 * number of processors for transport<br /><br /> 4 \\* number of processors for SMSvcHost.exe|<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts%2A> [Configuring the Net.TCP Port Sharing Service](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)|  \n|maxPendingConnections|ConnectionOrientedTransportBindingElement|12 * number of processors|<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections%2A>|  \n|receiveTimeout|SMSvcHost.exe|30 seconds|[Configuring the Net.TCP Port Sharing Service](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)|  \n  \n## XML Editor Tooltips  \n In order to help new and existing WCF service developers to configure their services, the Visual Studio XML editor now provides tooltips for every configuration element and its properties that is part of the service configuration file.  \n  \n## Configuring WCF Services in Code  \n [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] allows developers to configure services using configuration files or code.  Configuration files are useful when a service needs to be configured after being deployed. When using configuration files, an IT professional only needs to update the configuration file, no recompilation is required. Configuration files, however, can be complex and difficult to maintain. There is no support for debugging configuration files and configuration elements are referenced by names which makes authoring configuration files error-prone and difficult. [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] also allows you to configure services in code. In earlier versions of [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] (4.0 and earlier) configuring services in code was easy in self-hosted scenarios, the <xref:System.ServiceModel.ServiceHost> class allowed you to configure endpoints and behaviors prior to calling ServiceHost.Open. In web hosted scenarios, however, you don’t have access to the <xref:System.ServiceModel.ServiceHost> class. To configure a web hosted service you were required to create a `System.ServiceModel.ServiceHostFactory` that created the <xref:System.ServiceModel.ServiceHost> and performed any needed configuration. Starting with .NET 4.5, [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] provides an easier way to configure both self-hosted and web hosted services in code. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Configuring WCF Services in Code](../../../docs/framework/wcf/configuring-wcf-services-in-code.md).  \n  \n## ChannelFactory Caching  \n WCF client applications use the <xref:System.ServiceModel.ChannelFactory%601> class to create a communication channel with a WCF service.  Creating <xref:System.ServiceModel.ChannelFactory%601> instances incurs some overhead because it involves the following operations:  \n  \n1.  Constructing the <xref:System.ServiceModel.Description.ContractDescription> tree  \n  \n2.  Reflecting all of the required CLR types  \n  \n3.  Constructing the channel stack  \n  \n4.  Disposing of resources  \n  \n To help minimize this overhead, WCF can cache channel factories when you are using a WCF client proxy. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Channel Factory and Caching](../../../docs/framework/wcf/feature-details/channel-factory-and-caching.md).  \n  \n## Compression and the Binary Encoder  \n Beginning with WCF 4.5 the WCF binary encoder adds support for compression. The type of compression is configured with the <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A> property. Both the client and the service must configure the <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A> property. Compression will work for HTTP, HTTPS, and TCP protocols. If a client specifies to use compression but the service does not support it a protocol exception is thrown indicating a protocol mismatch. [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Choosing a Message Encoder](../../../docs/framework/wcf/feature-details/choosing-a-message-encoder.md)  \n  \n## UDP  \n Support has been added for a UDP transport which allows developers to write services that use \"fire and forget\" messaging. A client sends a message to a service and expects no response from the service.  \n  \n## Multiple Authentication Support  \n Support has been added to support multiple authentication modes, as supported by IIS, on a single WCF endpoint when using the HTTP transport and transport security. IIS allows you to enable multiple authentication modes on a virtual directory, this feature allows a single WCF endpoint to support the multiple authentication modes enabled for the virtual directory where the WCF service is hosted.  \n  \n## IDN Support  \n Support has been added to allow for WCF services with Internationalized Domain Names. For more information see [WCF and Internationalized Domain Names](../../../docs/framework/wcf/feature-details/wcf-and-internationalized-domain-names.md).  \n  \n## HttpClient  \n A new class called <xref:System.Net.Http.HttpClient> has been added to make working with HTTP requests much easier. For more info, see [Making apps social and connected with HTTP services](http://go.microsoft.com/fwlink/?LinkId=231886) and the [HTTP Client Sample](http://code.msdn.microsoft.com/windowsapps/HttpClient-sample-55700664).  \n  \n## Configuration Intellisense  \n Attribute values in configuration files for custom attributes defined in the project now support intellisense to facilitate working with configurations quickly and accurately.  \n  \n## Configuration tooltips  \n [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] elements and attributes now have tooltips in the XML editor, to more easily and accurately identify the purpose of the element or attribute.  \n  \n## Paste Data as Classes  \n In a WCF project, data types defined in XML (such as are exposed in a service) can be pasted directly into a code page. The XML type will be pasted as a CLR type. See [Generating Data Type Classes from XML](../../../docs/framework/wcf/generating-data-type-classes-from-xml.md) for more details.  \n  \n## WebServiceHost and default endpoints  \n In Visual Studio 2010, WebServiceHost automatically created a default endpoint whether you explicitly specified an endpoint or not. In Visual Studio 2012 WebServiceHost will only create a default endpoint if no endpoints are explicitly added. If your client is expecting the default endpoint you can explicity add an endpoint and point the client to it. Alternatively, you can tell WCF to revert back to the previous behavior by adding the following setting to you application’s configuration file  \n  \n```xml  \n<appSettings>  \n    <add key=\"wcf:webservicehost:enableautomaticendpointscompatability\" value=\"true\"/>  \n  </appSettings>  \n  \n```  \n  \n## IHttpCookieContainerManager  \n This interface, exposed by <xref:System.ServiceModel.Channels.IChannelFactory%601>, makes working with cookies on the client side much easier. When AllowCookies is set to true on the binding, you can access cookies by using the following code:  \n  \n```csharp  \nIHttpCookieContainerManager cookieManager = factory.GetProperty<IHttpCookieContainerManager>();   \nSystem.Net.CookieContainer container = cookieManager.CookieContainer;  \n  \n```  \n  \n You can then retrieve or set the cookies from the <xref:System.Net.CookieContainer>. When AllowCookies is set to false, you can manually retrieve the cookies using <xref:System.ServiceModel.OperationContext> and send it in other requests using another <xref:System.ServiceModel.OperationContext> or message inspector. The IHttpCookieContainerManager interface allows you to authenticate a user with a service and use the authentication cookie returned by that service to authenticate with other services.","nodes":[{"pos":[4,482],"embed":true,"restype":"x-metadata","content":"title: \"What&#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"WCF [WCF], what's new\"\n  - \"Windows Communication Foundation [WCF], what's new\"\nms.assetid: 7e93fe73-af93-46b5-9f63-32f761ee40cf\ncaps.latest.revision: 35\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"What&#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs","nodes":[{"pos":[0,71],"content":"What&#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs","nodes":[{"content":"What&amp;#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs","pos":[0,71],"source":"What&#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs"}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[489,543],"content":"What&#39;s New in Windows Communication Foundation 4.5","linkify":"What&#39;s New in Windows Communication Foundation 4.5","nodes":[{"content":"What&amp;#39;s New in Windows Communication Foundation 4.5","pos":[0,54],"source":"What&#39;s New in Windows Communication Foundation 4.5"}]},{"pos":[544,634],"content":"This topic discusses features new to <ph id=\"ph1\">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph>.","source":"This topic discusses features new to [!INCLUDE[indigo1](../../../includes/indigo1-md.md)]."},{"pos":[643,670],"content":"WCF Simplification Features","linkify":"WCF Simplification Features","nodes":[{"content":"WCF Simplification Features","pos":[0,27]}]},{"content":"Much work has been done to make WCF 4.5 applications easier to develop and maintain.","pos":[674,758]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>WCF Simplification Features<ept id=\"p1\">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.","pos":[759,905],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md)."},{"pos":[915,939],"content":"Task-based Async Support","linkify":"Task-based Async Support","nodes":[{"content":"Task-based Async Support","pos":[0,24]}]},{"content":"By default, Add Service Reference generates Task-returning async service operation methods.","pos":[943,1034]},{"content":"This is done for both synchronous and asynchronous methods.","pos":[1035,1094]},{"content":"This allows you to call the service operations asynchronously using the new Task based async programming model.","pos":[1095,1206]},{"content":"When you call the generated proxy method, WCF constructs a Task object to represent the asynchronous operation and returns that Task to you.","pos":[1207,1347]},{"content":"The Task completes when the operation completes.","pos":[1348,1396]},{"content":"When implementing an async operation you can implement it as a task-based async operation.","pos":[1398,1488]},{"content":"For more information see, <bpt id=\"p1\">[</bpt>Synchronous and Asynchronous Operations<ept id=\"p1\">](../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md)</ept>.","pos":[1489,1629],"source":" For more information see, [Synchronous and Asynchronous Operations](../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md)."},{"pos":[1639,1679],"content":"Simplified Generated Configuration Files","linkify":"Simplified Generated Configuration Files","nodes":[{"content":"Simplified Generated Configuration Files","pos":[0,40]}]},{"content":"When you add a service reference in Visual Studio or use the SvcUtil.exe tool, a client configuration file is generated.","pos":[1683,1803]},{"content":"In previous versions of WCF these configuration files contained the value of every binding property even if its value is the default value.","pos":[1804,1943]},{"content":"In WCF 4.5 the generated configuration files contain only those binding properties that are set to a non-default value.","pos":[1944,2063]},{"pos":[2127,2216],"content":"<bpt id=\"p1\">[</bpt>WCF Simplification Features<ept id=\"p1\">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>","source":"[WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md)"},{"pos":[2226,2252],"content":"Contract-First Development","linkify":"Contract-First Development","nodes":[{"content":"Contract-First Development","pos":[0,26]}]},{"content":"WCF now has support for contract-first development.","pos":[2256,2307]},{"content":"The svcutl.exe has a /serviceContract switch which allows you to generate service and data contracts from a WSDL document.","pos":[2308,2430]},{"pos":[2440,2492],"content":"Add Service Reference from a Portable Subset Project","linkify":"Add Service Reference from a Portable Subset Project","nodes":[{"content":"Add Service Reference from a Portable Subset Project","pos":[0,52]}]},{"content":"Portable subset projects enable .NET assembly programmers to maintain a single source tree and build system while still supporting multiple .NET platforms (desktop, Silverlight, Windows Phone, and XBOX).","pos":[2496,2699]},{"content":"Portable subset projects only reference .NET portable libraries which are a .NET framework assembly that can be used on any core .NET platform.","pos":[2700,2843]},{"content":"The developer experience is the same as adding a service reference within any other WCF client application.","pos":[2844,2951]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Add Service Reference in a Portable Subset Project<ept id=\"p1\">](../../../docs/framework/wcf/add-service-reference-in-a-portable-subset-project.md)</ept>.","pos":[2952,3144],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Add Service Reference in a Portable Subset Project](../../../docs/framework/wcf/add-service-reference-in-a-portable-subset-project.md)."},{"pos":[3154,3196],"content":"ASP.NET Compatibility Mode Default Changed","linkify":"ASP.NET Compatibility Mode Default Changed","nodes":[{"content":"ASP.NET Compatibility Mode Default Changed","pos":[0,42]}]},{"content":"WCF provides ASP.NET compatibility mode to grant developers full access to the features in the ASP.NET HTTP pipeline when writing WCF services.","pos":[3200,3343]},{"content":"To use this mode, you must set the <ph id=\"ph1\">`aspNetCompatibilityEnabled`</ph> attribute to true in the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>serviceHostingEnvironment&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/servicehostingenvironment.md)</ept> section of web.config. Additionally, any service in this appDomain needs to have the <ph id=\"ph3\">`RequirementsMode`</ph> property on its <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute&gt;</ph> set to <ph id=\"ph5\">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph> or <ph id=\"ph6\">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph>.","pos":[3344,3906],"source":" To use this mode, you must set the `aspNetCompatibilityEnabled` attribute to true in the [\\<serviceHostingEnvironment>](../../../docs/framework/configure-apps/file-schema/wcf/servicehostingenvironment.md) section of web.config. Additionally, any service in this appDomain needs to have the `RequirementsMode` property on its <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute> set to <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode> or <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode>."},{"content":"By default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute&gt;</ph>is now set to <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph>.","pos":[3907,4084],"source":" By default <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute>is now set to <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode>."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>What's New in Windows Communication Foundation<ept id=\"p1\">](../../../docs/framework/wcf/whats-new.md)</ept> and <bpt id=\"p2\">[</bpt>WCF Services and ASP.NET<ept id=\"p2\">](../../../docs/framework/wcf/feature-details/wcf-services-and-aspnet.md)</ept>.","pos":[4085,4335],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][What's New in Windows Communication Foundation](../../../docs/framework/wcf/whats-new.md) and [WCF Services and ASP.NET](../../../docs/framework/wcf/feature-details/wcf-services-and-aspnet.md)."},{"pos":[4345,4373],"content":"New Transport Default Values","linkify":"New Transport Default Values","nodes":[{"content":"New Transport Default Values","pos":[0,28]}]},{"content":"In order to simplify configuration a number of transport property default values have changed.","pos":[4377,4471]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>WCF Simplification Features<ept id=\"p1\">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.","pos":[4472,4618],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md)."},{"pos":[4628,4653],"content":"XmlDictionaryReaderQuotas","linkify":"XmlDictionaryReaderQuotas","nodes":[{"content":"XmlDictionaryReaderQuotas","pos":[0,25]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> contains configurable quota values for XML dictionary readers which limit the amount of memory utilized by an encoder while creating a message.","pos":[4657,4844],"source":"<xref:System.Xml.XmlDictionaryReaderQuotas> contains configurable quota values for XML dictionary readers which limit the amount of memory utilized by an encoder while creating a message."},{"content":"While these quotas are configurable, the default values have changed to lessen the possibility that a developer will have to set them explicitly.","pos":[4845,4990]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>WCF Simplification Features<ept id=\"p1\">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.","pos":[4991,5137],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md)."},{"pos":[5147,5175],"content":"WCF Configuration Validation","linkify":"WCF Configuration Validation","nodes":[{"content":"WCF Configuration Validation","pos":[0,28]}]},{"content":"As part of the build process within Visual Studio, WCF configuration files are now validated for attributes defined within the project.","pos":[5179,5314]},{"content":"A list of validation errors or warnings is displayed in Visual Studio if the validation fails.","pos":[5315,5409]},{"pos":[5419,5438],"content":"XML Editor Tooltips","linkify":"XML Editor Tooltips","nodes":[{"content":"XML Editor Tooltips","pos":[0,19]}]},{"content":"In order to help new and existing WCF service developers to configure their services, the Visual Studio XML editor now provides tooltips for every configuration element and its properties that is part of the service configuration file.","pos":[5442,5677]},{"pos":[5686,5708],"content":"Streaming Improvements","linkify":"Streaming Improvements","nodes":[{"content":"Streaming Improvements","pos":[0,22]}]},{"content":"Added support for true asynchronous streaming where the send side now does not block threads if the receive side is not reading or slow in reading thereby increasing scalability.","pos":[5712,5890]},{"content":"Removed the limitation of message buffering when a client sends a streamed message to an IIS hosted WCF service.","pos":[5891,6003]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>WCF Simplification Features<ept id=\"p1\">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.","pos":[6004,6150],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][WCF Simplification Features](../../../docs/framework/wcf/wcf-simplification-features.md)."},{"pos":[6159,6211],"content":"Simplifying Exposing an Endpoint Over HTTPS with IIS","linkify":"Simplifying Exposing an Endpoint Over HTTPS with IIS","nodes":[{"content":"Simplifying Exposing an Endpoint Over HTTPS with IIS","pos":[0,52]}]},{"content":"An HTTPS protocol mapping has been added to simplify exposing an endpoint over HTTPS.","pos":[6215,6300]},{"content":"To enable an HTTPS endpoint, ensure your website has an HTTPS binding and SSL certificate configured, and then simply enable HTTPS for the virtual directory that hosts the service.","pos":[6301,6481]},{"content":"If metadata is enabled for the service, it will be exposed over HTTPS as well.","pos":[6482,6560]},{"pos":[6569,6602],"content":"Generating a Single WSDL Document","linkify":"Generating a Single WSDL Document","nodes":[{"content":"Generating a Single WSDL Document","pos":[0,33]}]},{"content":"Some third-party WSDL processing stacks are not able to process WSDL documents that have dependencies on other documents through a xsd:import.","pos":[6606,6748]},{"content":"WCF now allows you to specify that all WSDL information be returned in a single document.","pos":[6750,6839]},{"content":"To request a single WSDL document append \"?singleWSDL\" to the URI when requesting metadata from the service.","pos":[6840,6948]},{"pos":[6957,6974],"content":"WebSocket Support","linkify":"WebSocket Support","nodes":[{"content":"WebSocket Support","pos":[0,17]}]},{"content":"WebSockets is a technology that provides true bidirectional communication over ports 80 and 443 with performance characteristics similar to TCP.","pos":[6978,7122]},{"content":"Two new bindings have been added to support communication over a WebSocket transport.","pos":[7123,7208]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetHttpsBinding&gt;</ph>.","pos":[7209,7298],"source":" <xref:System.ServiceModel.NetHttpBinding> and <xref:System.ServiceModel.NetHttpsBinding>."},{"content":"For more information see: <bpt id=\"p1\">[</bpt>System-Provided Bindings<ept id=\"p1\">](../../../docs/framework/wcf/system-provided-bindings.md)</ept>.","pos":[7299,7409],"source":" For more information see: [System-Provided Bindings](../../../docs/framework/wcf/system-provided-bindings.md)."},{"pos":[7418,7446],"content":"New Transport Default Values","linkify":"New Transport Default Values","nodes":[{"content":"New Transport Default Values","pos":[0,28]}]},{"content":"The following table describes the settings that have changed and where to find additional information.","pos":[7450,7552]},{"content":"Property","pos":[7559,7567]},{"content":"On","pos":[7568,7570]},{"content":"New Default","pos":[7571,7582]},{"content":"For more information see","pos":[7583,7607]},{"content":"channelInitializationTimeout","pos":[7689,7717]},{"content":"30 seconds","pos":[7759,7769]},{"content":"listenBacklog","pos":[7884,7897]},{"content":"12 * number of processors","pos":[7939,7964]},{"content":"maxPendingAccepts","pos":[8027,8044]},{"content":"ConnectionOrientedTransportBindingElement","pos":[8045,8086]},{"content":"SMSvcHost.exe","pos":[8099,8112]},{"content":"2 * number of processors for transport","pos":[8113,8151]},{"content":"4 <ph id=\"ph1\">\\*</ph> number of processors for SMSvcHost.exe","pos":[8164,8207],"source":"4 \\* number of processors for SMSvcHost.exe"},{"pos":[8208,8423],"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts%2A&gt;</ph> <bpt id=\"p1\">[</bpt>Configuring the Net.TCP Port Sharing Service<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)</ept>","source":"<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts%2A> [Configuring the Net.TCP Port Sharing Service](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)"},{"content":"maxPendingConnections","pos":[8428,8449]},{"content":"ConnectionOrientedTransportBindingElement","pos":[8450,8491]},{"content":"12 * number of processors","pos":[8492,8517]},{"content":"receiveTimeout","pos":[8625,8639]},{"content":"SMSvcHost.exe","pos":[8640,8653]},{"content":"30 seconds","pos":[8654,8664]},{"pos":[8665,8781],"content":"<bpt id=\"p1\">[</bpt>Configuring the Net.TCP Port Sharing Service<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)</ept>","source":"[Configuring the Net.TCP Port Sharing Service](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)"},{"pos":[8791,8810],"content":"XML Editor Tooltips","linkify":"XML Editor Tooltips","nodes":[{"content":"XML Editor Tooltips","pos":[0,19]}]},{"content":"In order to help new and existing WCF service developers to configure their services, the Visual Studio XML editor now provides tooltips for every configuration element and its properties that is part of the service configuration file.","pos":[8814,9049]},{"pos":[9058,9090],"content":"Configuring WCF Services in Code","linkify":"Configuring WCF Services in Code","nodes":[{"content":"Configuring WCF Services in Code","pos":[0,32]}]},{"content":"allows developers to configure services using configuration files or code.","pos":[9147,9221]},{"content":"Configuration files are useful when a service needs to be configured after being deployed.","pos":[9223,9313]},{"content":"When using configuration files, an IT professional only needs to update the configuration file, no recompilation is required.","pos":[9314,9439]},{"content":"Configuration files, however, can be complex and difficult to maintain.","pos":[9440,9511]},{"content":"There is no support for debugging configuration files and configuration elements are referenced by names which makes authoring configuration files error-prone and difficult.","pos":[9512,9685]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> also allows you to configure services in code.","pos":[9686,9785],"source":"[!INCLUDE[indigo2](../../../includes/indigo2-md.md)] also allows you to configure services in code."},{"content":"In earlier versions of <ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> (4.0 and earlier) configuring services in code was easy in self-hosted scenarios, the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class allowed you to configure endpoints and behaviors prior to calling ServiceHost.Open.","pos":[9786,10076],"source":" In earlier versions of [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] (4.0 and earlier) configuring services in code was easy in self-hosted scenarios, the <xref:System.ServiceModel.ServiceHost> class allowed you to configure endpoints and behaviors prior to calling ServiceHost.Open."},{"content":"In web hosted scenarios, however, you don’t have access to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.","pos":[10077,10185],"source":" In web hosted scenarios, however, you don’t have access to the <xref:System.ServiceModel.ServiceHost> class."},{"content":"To configure a web hosted service you were required to create a <ph id=\"ph1\">`System.ServiceModel.ServiceHostFactory`</ph> that created the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and performed any needed configuration.","pos":[10186,10386],"source":" To configure a web hosted service you were required to create a `System.ServiceModel.ServiceHostFactory` that created the <xref:System.ServiceModel.ServiceHost> and performed any needed configuration."},{"content":"Starting with .NET 4.5, <ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> provides an easier way to configure both self-hosted and web hosted services in code.","pos":[10387,10549],"source":" Starting with .NET 4.5, [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] provides an easier way to configure both self-hosted and web hosted services in code."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Configuring WCF Services in Code<ept id=\"p1\">](../../../docs/framework/wcf/configuring-wcf-services-in-code.md)</ept>.","pos":[10550,10706],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Configuring WCF Services in Code](../../../docs/framework/wcf/configuring-wcf-services-in-code.md)."},{"pos":[10715,10737],"content":"ChannelFactory Caching","linkify":"ChannelFactory Caching","nodes":[{"content":"ChannelFactory Caching","pos":[0,22]}]},{"content":"WCF client applications use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> class to create a communication channel with a WCF service.","pos":[10741,10878],"source":"WCF client applications use the <xref:System.ServiceModel.ChannelFactory%601> class to create a communication channel with a WCF service."},{"content":"Creating <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> instances incurs some overhead because it involves the following operations:","pos":[10880,11011],"source":"  Creating <xref:System.ServiceModel.ChannelFactory%601> instances incurs some overhead because it involves the following operations:"},{"content":"Constructing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> tree","pos":[11021,11101],"source":"Constructing the <xref:System.ServiceModel.Description.ContractDescription> tree"},{"content":"Reflecting all of the required CLR types","pos":[11111,11151]},{"content":"Constructing the channel stack","pos":[11161,11191]},{"content":"Disposing of resources","pos":[11201,11223]},{"content":"To help minimize this overhead, WCF can cache channel factories when you are using a WCF client proxy.","pos":[11230,11332]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Channel Factory and Caching<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/channel-factory-and-caching.md)</ept>.","pos":[11333,11495],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Channel Factory and Caching](../../../docs/framework/wcf/feature-details/channel-factory-and-caching.md)."},{"pos":[11504,11538],"content":"Compression and the Binary Encoder","linkify":"Compression and the Binary Encoder","nodes":[{"content":"Compression and the Binary Encoder","pos":[0,34]}]},{"content":"Beginning with WCF 4.5 the WCF binary encoder adds support for compression.","pos":[11542,11617]},{"content":"The type of compression is configured with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A&gt;</ph> property.","pos":[11618,11767],"source":" The type of compression is configured with the <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A> property."},{"content":"Both the client and the service must configure the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A&gt;</ph> property.","pos":[11768,11921],"source":" Both the client and the service must configure the <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A> property."},{"content":"Compression will work for HTTP, HTTPS, and TCP protocols.","pos":[11922,11979]},{"content":"If a client specifies to use compression but the service does not support it a protocol exception is thrown indicating a protocol mismatch.","pos":[11980,12119]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Choosing a Message Encoder<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/choosing-a-message-encoder.md)</ept>","pos":[12120,12279],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Choosing a Message Encoder](../../../docs/framework/wcf/feature-details/choosing-a-message-encoder.md)"},{"pos":[12288,12291],"content":"UDP","linkify":"UDP","nodes":[{"content":"UDP","pos":[0,3]}]},{"content":"Support has been added for a UDP transport which allows developers to write services that use \"fire and forget\" messaging.","pos":[12295,12417]},{"content":"A client sends a message to a service and expects no response from the service.","pos":[12418,12497]},{"pos":[12506,12537],"content":"Multiple Authentication Support","linkify":"Multiple Authentication Support","nodes":[{"content":"Multiple Authentication Support","pos":[0,31]}]},{"content":"Support has been added to support multiple authentication modes, as supported by IIS, on a single WCF endpoint when using the HTTP transport and transport security.","pos":[12541,12705]},{"content":"IIS allows you to enable multiple authentication modes on a virtual directory, this feature allows a single WCF endpoint to support the multiple authentication modes enabled for the virtual directory where the WCF service is hosted.","pos":[12706,12938]},{"pos":[12947,12958],"content":"IDN Support","linkify":"IDN Support","nodes":[{"content":"IDN Support","pos":[0,11]}]},{"content":"Support has been added to allow for WCF services with Internationalized Domain Names.","pos":[12962,13047]},{"content":"For more information see <bpt id=\"p1\">[</bpt>WCF and Internationalized Domain Names<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/wcf-and-internationalized-domain-names.md)</ept>.","pos":[13048,13201],"source":" For more information see [WCF and Internationalized Domain Names](../../../docs/framework/wcf/feature-details/wcf-and-internationalized-domain-names.md)."},{"pos":[13210,13220],"content":"HttpClient","linkify":"HttpClient","nodes":[{"content":"HttpClient","pos":[0,10]}]},{"content":"A new class called <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClient&gt;</ph> has been added to make working with HTTP requests much easier.","pos":[13224,13339],"source":"A new class called <xref:System.Net.Http.HttpClient> has been added to make working with HTTP requests much easier."},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Making apps social and connected with HTTP services<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=231886)</ept> and the <bpt id=\"p2\">[</bpt>HTTP Client Sample<ept id=\"p2\">](http://code.msdn.microsoft.com/windowsapps/HttpClient-sample-55700664)</ept>.","pos":[13340,13560],"source":" For more info, see [Making apps social and connected with HTTP services](http://go.microsoft.com/fwlink/?LinkId=231886) and the [HTTP Client Sample](http://code.msdn.microsoft.com/windowsapps/HttpClient-sample-55700664)."},{"pos":[13569,13595],"content":"Configuration Intellisense","linkify":"Configuration Intellisense","nodes":[{"content":"Configuration Intellisense","pos":[0,26]}]},{"content":"Attribute values in configuration files for custom attributes defined in the project now support intellisense to facilitate working with configurations quickly and accurately.","pos":[13599,13774]},{"pos":[13783,13805],"content":"Configuration tooltips","linkify":"Configuration tooltips","nodes":[{"content":"Configuration tooltips","pos":[0,22]}]},{"pos":[13862,14002],"content":"elements and attributes now have tooltips in the XML editor, to more easily and accurately identify the purpose of the element or attribute."},{"pos":[14011,14032],"content":"Paste Data as Classes","linkify":"Paste Data as Classes","nodes":[{"content":"Paste Data as Classes","pos":[0,21]}]},{"content":"In a WCF project, data types defined in XML (such as are exposed in a service) can be pasted directly into a code page.","pos":[14036,14155]},{"content":"The XML type will be pasted as a CLR type.","pos":[14156,14198]},{"content":"See <bpt id=\"p1\">[</bpt>Generating Data Type Classes from XML<ept id=\"p1\">](../../../docs/framework/wcf/generating-data-type-classes-from-xml.md)</ept> for more details.","pos":[14199,14330],"source":" See [Generating Data Type Classes from XML](../../../docs/framework/wcf/generating-data-type-classes-from-xml.md) for more details."},{"pos":[14339,14375],"content":"WebServiceHost and default endpoints","linkify":"WebServiceHost and default endpoints","nodes":[{"content":"WebServiceHost and default endpoints","pos":[0,36]}]},{"content":"In Visual Studio 2010, WebServiceHost automatically created a default endpoint whether you explicitly specified an endpoint or not.","pos":[14379,14510]},{"content":"In Visual Studio 2012 WebServiceHost will only create a default endpoint if no endpoints are explicitly added.","pos":[14511,14621]},{"content":"If your client is expecting the default endpoint you can explicity add an endpoint and point the client to it.","pos":[14622,14732]},{"content":"Alternatively, you can tell WCF to revert back to the previous behavior by adding the following setting to you application’s configuration file","pos":[14733,14876]},{"pos":[15030,15057],"content":"IHttpCookieContainerManager","linkify":"IHttpCookieContainerManager","nodes":[{"content":"IHttpCookieContainerManager","pos":[0,27]}]},{"content":"This interface, exposed by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601&gt;</ph>, makes working with cookies on the client side much easier.","pos":[15061,15203],"source":"This interface, exposed by <xref:System.ServiceModel.Channels.IChannelFactory%601>, makes working with cookies on the client side much easier."},{"content":"When AllowCookies is set to true on the binding, you can access cookies by using the following code:","pos":[15204,15304]},{"content":"You can then retrieve or set the cookies from the <ph id=\"ph1\">&lt;xref:System.Net.CookieContainer&gt;</ph>.","pos":[15506,15590],"source":"You can then retrieve or set the cookies from the <xref:System.Net.CookieContainer>."},{"content":"When AllowCookies is set to false, you can manually retrieve the cookies using <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> and send it in other requests using another <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> or message inspector.","pos":[15591,15823],"source":" When AllowCookies is set to false, you can manually retrieve the cookies using <xref:System.ServiceModel.OperationContext> and send it in other requests using another <xref:System.ServiceModel.OperationContext> or message inspector."},{"content":"The IHttpCookieContainerManager interface allows you to authenticate a user with a service and use the authentication cookie returned by that service to authenticate with other services.","pos":[15824,16010]}]}