{"content":"---\ntitle: \"How to: Find Descendants with a Specific Element Name (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 78915518-0d25-4051-ab55-929779989510\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Find Descendants with a Specific Element Name (Visual Basic)\nSometimes you want to find all descendants with a particular name. You could write code to iterate through all of the descendants, but it is easier to use the <xref:System.Xml.Linq.XContainer.Descendants%2A> axis.  \n  \n## Example  \n The following example shows how to find descendants based on the element name.  \n  \n```vb  \nDim root As XElement = _  \n    <root>  \n        <para>  \n            <r>  \n                <t>Some text </t>  \n            </r>  \n            <n>  \n                <r>  \n                    <t>that is broken up into </t>  \n                </r>  \n            </n>  \n            <n>  \n                <r>  \n                    <t>multiple segments.</t>  \n                </r>  \n            </n>  \n        </para>  \n    </root>  \n  \nDim textSegs As IEnumerable(Of String) = _  \n    From seg In root...<t> _  \n    Select seg.Value  \n  \nDim str As String = textSegs.Aggregate( _  \n    New StringBuilder, _  \n    Function(sb, i) sb.Append(i), _  \n    Function(sb) sb.ToString)  \n  \nConsole.WriteLine(str)  \n```  \n  \n This code produces the following output:  \n  \n```  \nSome text that is broken up into multiple segments.  \n```  \n  \n## Example  \n The following example shows the same query for XML that is in a namespace. For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n```vb  \nImports <xmlns='http://www.adatum.com'>  \n  \nModule Module1  \n    Sub Main()  \n        Dim root As XElement = _  \n            <root>  \n                <para>  \n                    <r>  \n                        <t>Some text </t>  \n                    </r>  \n                    <n>  \n                        <r>  \n                            <t>that is broken up into </t>  \n                        </r>  \n                    </n>  \n                    <n>  \n                        <r>  \n                            <t>multiple segments.</t>  \n                        </r>  \n                    </n>  \n                </para>  \n            </root>  \n  \n        Dim textSegs As IEnumerable(Of String) = _  \n            From seg In root...<t> _  \n            Select seg.Value  \n  \n        Dim str As String = textSegs.Aggregate( _  \n            New StringBuilder, _  \n            Function(sb, i) sb.Append(i), _  \n            Function(sb) sb.ToString)  \n  \n        Console.WriteLine(str)  \n    End Sub  \nEnd Module  \n```  \n  \n This code produces the following output:  \n  \n```  \nSome text that is broken up into multiple segments.  \n```  \n  \n## See Also  \n <xref:System.Xml.Linq.XContainer.Descendants%2A>   \n [Basic Queries (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)","nodes":[{"pos":[4,397],"embed":true,"restype":"x-metadata","content":"title: \"How to: Find Descendants with a Specific Element Name (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 78915518-0d25-4051-ab55-929779989510\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n","nodes":[{"content":"How to: Find Descendants with a Specific Element Name (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,85],"content":"How to: Find Descendants with a Specific Element Name (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Find Descendants with a Specific Element Name (Visual Basic) | Microsoft Docs","pos":[0,85]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[404,472],"content":"How to: Find Descendants with a Specific Element Name (Visual Basic)","linkify":"How to: Find Descendants with a Specific Element Name (Visual Basic)","nodes":[{"content":"How to: Find Descendants with a Specific Element Name (Visual Basic)","pos":[0,68]}]},{"content":"Sometimes you want to find all descendants with a particular name.","pos":[473,539]},{"content":"You could write code to iterate through all of the descendants, but it is easier to use the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</ph> axis.","pos":[540,686],"source":" You could write code to iterate through all of the descendants, but it is easier to use the <xref:System.Xml.Linq.XContainer.Descendants%2A> axis."},{"pos":[695,702],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to find descendants based on the element name.","pos":[706,784]},{"content":"This code produces the following output:","pos":[1509,1549]},{"pos":[1627,1634],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the same query for XML that is in a namespace.","pos":[1638,1712]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","pos":[1713,1873],"source":" For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"content":"This code produces the following output:","pos":[2912,2952]},{"pos":[3030,3038],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Basic Queries (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept>","pos":[3095,3226],"source":"[Basic Queries (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)"}]}