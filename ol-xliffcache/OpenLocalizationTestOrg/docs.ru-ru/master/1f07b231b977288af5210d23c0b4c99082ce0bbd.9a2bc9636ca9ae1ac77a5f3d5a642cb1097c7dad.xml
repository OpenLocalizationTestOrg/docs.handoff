{"content":"---\ntitle: \"orderby clause (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"orderby\"\n  - \"orderby_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"orderby clause [C#]\"\n  - \"orderby keyword [C#]\"\nms.assetid: 21f87f48-d69d-4e95-9a52-6fec47b37e1f\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# orderby clause (C# Reference)\nIn a query expression, the `orderby` clause causes the returned sequence or subsequence (group) to be sorted in either ascending or descending order. Multiple keys can be specified in order to perform one or more secondary sort operations. The sorting is performed by the default comparer for the type of the element. The default sort order is ascending. You can also specify a custom comparer. However, it is only available by using method-based syntax. For more information, see [Sorting Data](http://msdn.microsoft.com/library/6d76e2d7-b418-49b5-ac78-2bcd61169c48).  \n  \n## Example  \n In the following example, the first query sorts the words in alphabetical order starting from A, and second query sorts the same words in descending order. (The `ascending` keyword is the default sort value and can be omitted.)  \n  \n [!code-cs[cscsrefQueryKeywords#20](../../../csharp/language-reference/keywords/codesnippet/CSharp/orderby-clause_1.cs)]  \n  \n## Example  \n The following example performs a primary sort on the students' last names, and then a secondary sort on their first names.  \n  \n [!code-cs[cscsrefQueryKeywords#22](../../../csharp/language-reference/keywords/codesnippet/CSharp/orderby-clause_2.cs)]  \n  \n## Remarks  \n At compile time, the `orderby` clause is translated to a call to the <xref:System.Linq.Enumerable.OrderBy%2A> method. Multiple keys in the `orderby` clause translate to <xref:System.Linq.Enumerable.ThenBy%2A> method calls.  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md)   \n [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)   \n [group clause](../../../csharp/language-reference/keywords/group-clause.md)   \n [Getting Started with LINQ in C#](../../../csharp/programming-guide/concepts/linq/getting-started-with-linq.md)","nodes":[{"pos":[4,605],"embed":true,"restype":"x-metadata","content":"title: \"orderby clause (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"orderby\"\n  - \"orderby_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"orderby clause [C#]\"\n  - \"orderby keyword [C#]\"\nms.assetid: 21f87f48-d69d-4e95-9a52-6fec47b37e1f\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"orderby clause (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,46],"content":"orderby clause (C# Reference) | Microsoft Docs","nodes":[{"content":"orderby clause (C# Reference) | Microsoft Docs","pos":[0,46]}]}],"path":["title"]}],"yml":true},{"pos":[612,641],"content":"orderby clause (C# Reference)","linkify":"orderby clause (C# Reference)","nodes":[{"content":"orderby clause (C# Reference)","pos":[0,29]}]},{"content":"In a query expression, the <ph id=\"ph1\">`orderby`</ph> clause causes the returned sequence or subsequence (group) to be sorted in either ascending or descending order.","pos":[642,791],"source":"In a query expression, the `orderby` clause causes the returned sequence or subsequence (group) to be sorted in either ascending or descending order."},{"content":"Multiple keys can be specified in order to perform one or more secondary sort operations.","pos":[792,881]},{"content":"The sorting is performed by the default comparer for the type of the element.","pos":[882,959]},{"content":"The default sort order is ascending.","pos":[960,996]},{"content":"You can also specify a custom comparer.","pos":[997,1036]},{"content":"However, it is only available by using method-based syntax.","pos":[1037,1096]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Sorting Data<ept id=\"p1\">](http://msdn.microsoft.com/library/6d76e2d7-b418-49b5-ac78-2bcd61169c48)</ept>.","pos":[1097,1210],"source":" For more information, see [Sorting Data](http://msdn.microsoft.com/library/6d76e2d7-b418-49b5-ac78-2bcd61169c48)."},{"pos":[1219,1226],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following example, the first query sorts the words in alphabetical order starting from A, and second query sorts the same words in descending order.","pos":[1230,1385]},{"content":"(The <ph id=\"ph1\">`ascending`</ph> keyword is the default sort value and can be omitted.)","pos":[1386,1457],"source":" (The `ascending` keyword is the default sort value and can be omitted.)"},{"pos":[1592,1599],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example performs a primary sort on the students' last names, and then a secondary sort on their first names.","pos":[1603,1725]},{"pos":[1860,1867],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"At compile time, the <ph id=\"ph1\">`orderby`</ph> clause is translated to a call to the <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.OrderBy%2A&gt;</ph> method.","pos":[1871,1988],"source":"At compile time, the `orderby` clause is translated to a call to the <xref:System.Linq.Enumerable.OrderBy%2A> method."},{"content":"Multiple keys in the <ph id=\"ph1\">`orderby`</ph> clause translate to <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> method calls.","pos":[1989,2093],"source":" Multiple keys in the `orderby` clause translate to <xref:System.Linq.Enumerable.ThenBy%2A> method calls."},{"pos":[2102,2110],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2114,2174],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Query Keywords (LINQ)<ept id=\"p1\">](../../../csharp/language-reference/keywords/query-keywords.md)</ept><ph id=\"ph1\"> </ph>","pos":[2178,2265],"source":"[Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2269,2361],"source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](../../../csharp/language-reference/keywords/group-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[2365,2441],"source":"[group clause](../../../csharp/language-reference/keywords/group-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Getting Started with LINQ in C#<ept id=\"p1\">](../../../csharp/programming-guide/concepts/linq/getting-started-with-linq.md)</ept>","pos":[2445,2556],"source":"[Getting Started with LINQ in C#](../../../csharp/programming-guide/concepts/linq/getting-started-with-linq.md)"}]}