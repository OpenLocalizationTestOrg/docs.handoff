{"content":"---\ntitle: Handle exceptions in query expressions (LINQ in C#)\ndescription: Learn how to handle exceptions in LINQ query expressions in C#.\nms.date: 12/01/2016\nms.assetid: 2bf0c397-13fb-4f68-bc2b-531c6c88a167\n---\n# Handle exceptions in query expressions\n\nIt's possible to call any method in the context of a query expression. However, we recommend that you avoid calling any method in a query expression that can create a side effect such as modifying the contents of the data source or throwing an exception. This example shows how to avoid raising exceptions when you call methods in a query expression without violating the general .NET guidelines on exception handling. Those guidelines state that it's acceptable to catch a specific exception when you understand why it's thrown in a given context. For more information, see [Best Practices for Exceptions](../../standard/exceptions/best-practices-for-exceptions.md).\n\nThe final example shows how to handle those cases when you must throw an exception during execution of a query.\n\n## Example\n\nThe following example shows how to move exception handling code outside a query expression. This is only possible when the method does not depend on any variables local to the query.\n\n[!code-csharp[csProgGuideLINQ#10](~/samples/snippets/csharp/concepts/linq/how-to-handle-exceptions-in-query-expressions_1.cs)]\n\n## Example\n\nIn some cases, the best response to an exception that is thrown from within a query might be to stop the query execution immediately. The following example shows how to handle exceptions that might be thrown from inside a query body. Assume that `SomeMethodThatMightThrow` can potentially cause an exception that requires the query execution to stop.\n\nNote that the `try` block encloses the `foreach` loop, and not the query itself. This is because the `foreach` loop is the point at which the query is actually executed. For more information, see [Introduction to LINQ queries](../programming-guide/concepts/linq/introduction-to-linq-queries.md).\n\n[!code-csharp[csProgGuideLINQ#12](~/samples/snippets/csharp/concepts/linq/how-to-handle-exceptions-in-query-expressions_2.cs)]\n\n## See also\n\n- [Language Integrated Query (LINQ)](index.md)\n","nodes":[{"pos":[4,208],"embed":true,"restype":"x-metadata","content":"title: Handle exceptions in query expressions (LINQ in C#)\ndescription: Learn how to handle exceptions in LINQ query expressions in C#.\nms.date: 12/01/2016\nms.assetid: 2bf0c397-13fb-4f68-bc2b-531c6c88a167","nodes":[{"content":"Handle exceptions in query expressions (LINQ in C#)","nodes":[{"pos":[0,51],"content":"Handle exceptions in query expressions (LINQ in C#)","nodes":[{"content":"Handle exceptions in query expressions (LINQ in C#)","pos":[0,51]}]}],"path":["title"],"nosxs":false},{"content":"Learn how to handle exceptions in LINQ query expressions in C#.","nodes":[{"pos":[0,63],"content":"Learn how to handle exceptions in LINQ query expressions in C#.","nodes":[{"content":"Learn how to handle exceptions in LINQ query expressions in C#.","pos":[0,63]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[215,253],"content":"Handle exceptions in query expressions","linkify":"Handle exceptions in query expressions","nodes":[{"content":"Handle exceptions in query expressions","pos":[0,38]}]},{"content":"It's possible to call any method in the context of a query expression.","pos":[255,325]},{"content":"However, we recommend that you avoid calling any method in a query expression that can create a side effect such as modifying the contents of the data source or throwing an exception.","pos":[326,509]},{"content":"This example shows how to avoid raising exceptions when you call methods in a query expression without violating the general .NET guidelines on exception handling.","pos":[510,673]},{"content":"Those guidelines state that it's acceptable to catch a specific exception when you understand why it's thrown in a given context.","pos":[674,803]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Best Practices for Exceptions<ept id=\"p1\">](../../standard/exceptions/best-practices-for-exceptions.md)</ept>.","pos":[804,922],"source":" For more information, see [Best Practices for Exceptions](../../standard/exceptions/best-practices-for-exceptions.md)."},{"content":"The final example shows how to handle those cases when you must throw an exception during execution of a query.","pos":[924,1035]},{"pos":[1040,1047],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to move exception handling code outside a query expression.","pos":[1049,1140]},{"content":"This is only possible when the method does not depend on any variables local to the query.","pos":[1141,1231]},{"pos":[1364,1371],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In some cases, the best response to an exception that is thrown from within a query might be to stop the query execution immediately.","pos":[1373,1506]},{"content":"The following example shows how to handle exceptions that might be thrown from inside a query body.","pos":[1507,1606]},{"content":"Assume that <ph id=\"ph1\">`SomeMethodThatMightThrow`</ph> can potentially cause an exception that requires the query execution to stop.","pos":[1607,1723],"source":" Assume that `SomeMethodThatMightThrow` can potentially cause an exception that requires the query execution to stop."},{"content":"Note that the <ph id=\"ph1\">`try`</ph> block encloses the <ph id=\"ph2\">`foreach`</ph> loop, and not the query itself.","pos":[1725,1805],"source":"Note that the `try` block encloses the `foreach` loop, and not the query itself."},{"content":"This is because the <ph id=\"ph1\">`foreach`</ph> loop is the point at which the query is actually executed.","pos":[1806,1894],"source":" This is because the `foreach` loop is the point at which the query is actually executed."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Introduction to LINQ queries<ept id=\"p1\">](../programming-guide/concepts/linq/introduction-to-linq-queries.md)</ept>.","pos":[1895,2020],"source":" For more information, see [Introduction to LINQ queries](../programming-guide/concepts/linq/introduction-to-linq-queries.md)."},{"pos":[2153,2161],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2165,2209],"content":"<bpt id=\"p1\">[</bpt>Language Integrated Query (LINQ)<ept id=\"p1\">](index.md)</ept>","source":"[Language Integrated Query (LINQ)](index.md)"}]}