<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="event-handlers-overview-windows-forms.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05acbfaf427060d015c2445360a7d73ebe97d070</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\event-handlers-overview-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77dc1db8edbd5e7fc23db432b44004b40aec9111</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15db6bfa29264fd7d6e1fe599f43d07c1bc64a44</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Event Handlers Overview (Windows Forms)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Event Handlers Overview (Windows Forms)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An event handler is a method that is bound to an event.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the event is raised, the code within the event handler is executed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each event handler provides two parameters that allow you to handle the event properly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following example shows an event handler for a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The first parameter,<ph id="ph1">`sender`</ph>, provides a reference to the object that raised the event.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The second parameter, <ph id="ph1">`e`</ph>, in the example above, passes an object specific to the event that is being handled.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By referencing the object's properties (and, sometimes, its methods), you can obtain information such as the location of the mouse for mouse events or data being transferred in drag-and-drop events.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically each event produces an event handler with a different event-object type for the second parameter.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some event handlers, such as those for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events, have the same object type for their second parameter.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For these types of events, you can use the same event handler to handle both events.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use the same event handler to handle the same event for different controls.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if you have a group of <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls on a form, you could create a single event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event and have each control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event bound to the single event handler.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Connect Multiple Events to a Single Event Handler in Windows Forms<ept id="p1">](how-to-connect-multiple-events-to-a-single-event-handler-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating Event Handlers in Windows Forms<ept id="p1">](creating-event-handlers-in-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Events Overview<ept id="p1">](events-overview-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>