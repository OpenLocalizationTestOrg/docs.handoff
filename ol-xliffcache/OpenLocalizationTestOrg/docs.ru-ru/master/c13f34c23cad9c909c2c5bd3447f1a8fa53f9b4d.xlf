<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="keyfile.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c13f34c23cad9c909c2c5bd3447f1a8fa53f9b4d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\reference\command-line-compiler\keyfile.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85d6bcca614fb44a56156bbcb52a17bbb62cfb82</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c151a22d2b3dd499f4e8ab4cdcff0cf033b5598c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>-keyfile</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>-keyfile</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies a file containing a key or key pair to give an assembly a strong name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>File that contains the key.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the file name contains a space, enclose the name in quotation marks (" ").</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The compiler inserts the public key into the assembly manifest and then signs the final assembly with the private key.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To generate a key file, type <ph id="ph1">`sn -k file`</ph> at the command line.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](../../../framework/tools/sn-exe-strong-name-tool.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you compile with <ph id="ph1">`-target:module`</ph>, the name of the key file is held in the module and incorporated into the assembly that is created when you compile an assembly with <bpt id="p1">[</bpt>/addmodule<ept id="p1">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also pass your encryption information to the compiler with <bpt id="p1">[</bpt>-keycontainer<ept id="p1">](../../../visual-basic/reference/command-line-compiler/keycontainer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>-delaysign<ept id="p1">](../../../visual-basic/reference/command-line-compiler/delaysign.md)</ept> if you want a partially signed assembly.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also specify this option as a custom attribute (<ph id="ph1">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph>) in the source code for any Microsoft intermediate language module.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In case both <ph id="ph1">`-keyfile`</ph> and <bpt id="p1">[</bpt>-keycontainer<ept id="p1">](../../../visual-basic/reference/command-line-compiler/keycontainer.md)</ept> are specified (either by command-line option or by custom attribute) in the same compilation, the compiler first tries the key container.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If that succeeds, then the assembly is signed with the information in the key container.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the compiler does not find the key container, it tries the file specified with <ph id="ph1">`-keyfile`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If this succeeds, the assembly is signed with the information in the key file, and the key information is installed in the key container (similar to <ph id="ph1">`sn -i`</ph>) so that on the next compilation, the key container will be valid.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that a key file might contain only the public key.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](../../../framework/app-domains/create-and-use-strong-named-assemblies.md)</ept> for more information on signing an assembly.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-keyfile`</ph> option is not available from within the Visual Studio development environment; it is available only when compiling from the command line.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code compiles source file <ph id="ph1">`Input.vb`</ph> and specifies a key file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Assemblies in .NET<ept id="p1">](../../../standard/assembly/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Command-Line Compiler<ept id="p1">](../../../visual-basic/reference/command-line-compiler/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>-reference (Visual Basic)<ept id="p1">](../../../visual-basic/reference/command-line-compiler/reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sample Compilation Command Lines<ept id="p1">](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>