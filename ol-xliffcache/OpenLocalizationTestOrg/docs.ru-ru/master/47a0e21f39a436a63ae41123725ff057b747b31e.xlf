<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47a0e21f39a436a63ae41123725ff057b747b31e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\wsstreamedhttpbinding.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8d9600e3bb16ac19a35f49dae2e39d563f75f48</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ee3705c50d8890c27ca74b832f19522049956db</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WSStreamedHttpBinding | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WSStreamedHttpBinding</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The sample demonstrates how to create a binding that is designed to support streaming scenarios when the HTTP transport is used.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The setup procedure and build instructions for this sample are located at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The steps to create and configure a new standard binding are as follows.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a new standard binding</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The standard bindings in <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> such as basicHttpBinding, and netTcpBinding configure the underlying transports and channel stack for specific requirements.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this sample, <ph id="ph1">`WSStreamedHttpBinding`</ph> configures the channel stack to support streaming.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, WS-Security and reliable messaging are not added to the channel stack because both features are not supported by streaming.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The new binding is implemented in the class <ph id="ph1">`WSStreamedHttpBinding`</ph> that derives from <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WSStreamedHttpBinding`</ph> contains the following binding elements: <ph id="ph2">&lt;xref:System.ServiceModel.Channels.HttpTransportBindingElement&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Channels.HttpsTransportBindingElement&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph>, and <ph id="ph5">&lt;xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The class provides a <ph id="ph1">`CreateBindingElements()`</ph> method to configure the resulting binding stack, as shown in the following sample code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add configuration support</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To expose the transport through configuration the sample implements two more classesâ€”<ph id="ph1">`WSStreamedHttpBindingConfigurationElement`</ph> and <ph id="ph2">`WSStreamedHttpBindingSection`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The class <ph id="ph1">`WSStreamedHttpBindingSection`</ph> is a <ph id="ph2">&lt;xref:System.ServiceModel.Configuration.StandardBindingCollectionElement%602&gt;</ph> that exposes <ph id="ph3">`WSStreamedHttpBinding`</ph> to the <ph id="ph4">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> configuration system.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The bulk of the implementation is delegated to <ph id="ph1">`WSStreamedHttpBindingConfigurationElement`</ph>, which derives from <ph id="ph2">&lt;xref:System.ServiceModel.Configuration.StandardBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The class <ph id="ph1">`WSStreamedHttpBindingConfigurationElement`</ph> has properties that correspond to the properties of <ph id="ph2">`WSStreamedHttpBinding`</ph>, and functions to map each configuration element to a binding.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Register the handler with the configuration system, by adding the following section to the service's configuration file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The handler can then be referenced from the serviceModel configuration section.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Install <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> 4.0 using the following command.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Ensure that you have performed the steps listed in <bpt id="p1">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Ensure that you have performed the <bpt id="p1">[</bpt>Internet Information Services (IIS) Server Certificate Installation Instructions<ept id="p1">](../../../../docs/framework/wcf/samples/iis-server-certificate-installation-instructions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To build the solution, follow the instructions in <bpt id="p1">[</bpt>Building the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To run the sample in a cross-machine configuration, follow the instructions in <bpt id="p1">[</bpt>Running the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When the client window displays, type "Sample.txt".</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You should find a "Copy of Sample.txt" in your directory.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The WSStreamedHttpBinding Sample Service</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The sample service that uses <ph id="ph1">`WSStreamedHttpBinding`</ph> is located in the service subdirectory.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The implementation of <ph id="ph1">`OperationContract`</ph> uses a <ph id="ph2">`MemoryStream`</ph> to first retrieve all data from the incoming stream before returning the <ph id="ph3">`MemoryStream`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The sample service is hosted by Internet Information Services (IIS).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The WSStreamedHttpBinding Sample Client</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The client that is used to interact with the service using <ph id="ph1">`WSStreamedHttpBinding`</ph> is located in the client subdirectory.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Because the certificate used in this sample is a test certificate created with Makecert.exe, a security alert displays when you attempt to access an HTTPS address in your browser such as https://localhost/servicemodelsamples/service.svc.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To allow the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client to work with a test certificate in place, some additional code has been added to the client to suppress the security alert.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The code and the accompanying class are not required when using production certificates.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>