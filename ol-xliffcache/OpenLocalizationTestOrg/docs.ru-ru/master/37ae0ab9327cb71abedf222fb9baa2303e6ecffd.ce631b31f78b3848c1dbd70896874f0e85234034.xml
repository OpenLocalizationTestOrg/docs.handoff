{"content":"---\ntitle: \"&lt;Type&gt; Element (.NET Native) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 1e88d368-a886-4f1e-8eb6-6127979a9fce\ncaps.latest.revision: 33\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# &lt;Type&gt; Element (.NET Native)\nApplies runtime policy to a particular type, such as a class or structure.  \n  \n## Syntax  \n  \n```xml  \n  \n<Type Name=\"type_name\"  \n      Activate=\"policy_type\"  \n      Browse=\"policy_type\"  \n      Dynamic=\"policy_type\"  \n      Serialize=\"policy_type\"   \n      DataContractSerializer=\"policy_setting\"  \n      DataContractJsonSerializer=\"policy_setting\"  \n      XmlSerializer=\"policy_setting\"  \n      MarshalObject=\"policy_setting\"  \n      MarshalDelegate=\"policy_setting\"  \n      MarshalStructure=\"policy_setting\" />  \n  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Attribute type|Description|  \n|---------------|--------------------|-----------------|  \n|`Name`|General|Required attribute. Specifies the type name.|  \n|`Activate`|Reflection|Optional attribute. Controls runtime access to constructors to enable activation of instances.|  \n|`Browse`|Reflection|Optional attribute. Controls querying for information about program elements, but does not enable any runtime access.|  \n|`Dynamic`|Reflection|Optional attribute. Controls runtime access to all type members, including constructors, methods, fields, properties, and events, to enable dynamic programming.|  \n|`Serialize`|Serialization|Optional attribute. Controls runtime access to constructors, fields, and properties, to enable type instances to be serialized and deserialized by libraries such as the Newtonsoft JSON serializer.|  \n|`DataContractSerializer`|Serialization|Optional attribute. Controls policy for serialization that uses the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName> class.|  \n|`DataContractJsonSerializer`|Serialization|Optional attribute. Controls policy for JSON serialization that uses the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer?displayProperty=fullName> class.|  \n|`XmlSerializer`|Serialization|Optional attribute. Controls policy for XML serialization that uses the <xref:System.Xml.Serialization.XmlSerializer?displayProperty=fullName> class.|  \n|`MarshalObject`|Interop|Optional attribute. Controls policy for marshaling reference types to Windows Runtime and COM.|  \n|`MarshalDelegate`|Interop|Optional attribute. Controls policy for marshaling delegate types as function pointers to native code.|  \n|`MarshalStructure`|Interop|Optional attribute. Controls policy for marshaling value types to native code.|  \n  \n## Name attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*type_name*|The type name. If this `<Type>` element is the child of either a [\\<Namespace>](../../../docs/framework/net-native/namespace-element-net-native.md) element or another `<Type>` element, *type_name* can include the name of the type without its namespace. Otherwise, *type_name* must include the fully qualified type name.|  \n  \n## All other attributes  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*policy_setting*|The setting to apply to this policy type. Possible values are `All`, `Auto`, `Excluded`, `Public`, `PublicAndInternal`, `Required Public`, `Required PublicAndInternal`, and `Required All`. For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md).|  \n  \n### Child Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<AttributeImplies>](../../../docs/framework/net-native/attributeimplies-element-net-native.md)|If the containing type is an attribute, defines runtime policy for code elements to which the attribute is applied.|  \n|[\\<Event>](../../../docs/framework/net-native/event-element-net-native.md)|Applies reflection policy to an event belonging to this type.|  \n|[\\<Field>](../../../docs/framework/net-native/field-element-net-native.md)|Applies reflection policy to a field belonging to this type.|  \n|[\\<GenericParameter>](../../../docs/framework/net-native/genericparameter-element-net-native.md)|Applies policy to the parameter type of a generic type.|  \n|[\\<ImpliesType>](../../../docs/framework/net-native/impliestype-element-net-native.md)|Applies policy to a type, if that policy has been applied to the type represented by the containing `<Type>` element.|  \n|[\\<Method>](../../../docs/framework/net-native/method-element-net-native.md)|Applies reflection policy to a method belonging to this type.|  \n|[\\<MethodInstantiation>](../../../docs/framework/net-native/methodinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic method belonging to this type.|  \n|[\\<Property>](../../../docs/framework/net-native/property-element-net-native.md)|Applies reflection policy to a property belonging to this type.|  \n|[\\<Subtypes>](../../../docs/framework/net-native/subtypes-element-net-native.md)|Applies runtime policy to all classes inherited from the containing type.|  \n|`<Type>`|Applies reflection policy to a nested type.|  \n|[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic type.|  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<Application>](../../../docs/framework/net-native/application-element-net-native.md)|Serves as a container for application-wide types and type members whose metadata is available for reflection at run time.|  \n|[\\<Assembly>](../../../docs/framework/net-native/assembly-element-net-native.md)|Applies reflection policy to all the types in a specified assembly.|  \n|[\\<Library>](../../../docs/framework/net-native/library-element-net-native.md)|Defines the assembly that contains types and type members whose metadata is available for reflection at run time.|  \n|[\\<Namespace>](../../../docs/framework/net-native/namespace-element-net-native.md)|Applies reflection policy to all the types in a namespace.|  \n|`<Type>`|Applies reflection policy to a type and all its members.|  \n|[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic type and all its members.|  \n  \n## Remarks  \n The reflection, serialization, and interop attributes are all optional. If none are present, the `<Type>` element serves as a container whose child types define policy for individual members.  \n  \n If a `<Type>` element is the child of an [\\<Assembly>](../../../docs/framework/net-native/assembly-element-net-native.md), [\\<Namespace>](../../../docs/framework/net-native/namespace-element-net-native.md), `<Type>`, or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element, it overrides the policy settings defined by the parent element.  \n  \n A `<Type>` element of a generic type applies its policy to all instantiations that do not have their own policy. The policy of constructed generic types is defined by the [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element.  \n  \n If the type is a generic type, its name is decorated by a grave accent symbol (```) followed by its number of generic parameters. For example, the `Name` attribute of a `<Type>` element for the <xref:System.Collections.Generic.List%601?displayProperty=fullName> class appears as `Name=\"System.Collections.Generic.List`1\"`.  \n  \n## Example  \n The following example uses reflection to display information about the fields, properties, and methods of the <xref:System.Collections.Generic.List%601?displayProperty=fullName> class. The variable `b` in the example is a [TextBlock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control. Because the example simply retrieves type information, the availability of metadata is controlled by the `Browse` policy setting.  \n  \n [!code-csharp[ProjectN_Reflection#3](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/browsegenerictype1.cs#3)]  \n  \n Because metadata for the <xref:System.Collections.Generic.List%601> class isn't automatically included by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain, the example fails to display the requested member information at run time. To provide the necessary metadata, add the following `<Type>` element to the runtime directives file. Note that, because we've provided a parent [<Namespace\\>](../../../docs/framework/net-native/namespace-element-net-native.md) element, we don't have to provide a fully qualified type name in the `<Type>` element.  \n  \n```xml  \n  \n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">  \n   <Application>  \n      <Assembly Name=\"*Application*\" Dynamic=\"Required All\" />  \n      <Namespace Name =\"System.Collections.Generic\" >  \n        <Type Name=\"List`1\" Browse=\"Required All\" />   \n     </Namespace>  \n   </Application>  \n</Directives>  \n  \n```  \n  \n## Example  \n The following example uses reflection to retrieve a <xref:System.Reflection.PropertyInfo> object that represents the <xref:System.String.Chars%2A?displayProperty=fullName> property. It then uses the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Object%5B%5D%29?displayProperty=fullName> method to retrieve the value of the seventh character in a string, and to display all the characters in the string. The variable `b` in the example is a [TextBlock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control.  \n  \n [!code-csharp[ProjectN_Reflection#1](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/propertyinfo1.cs#1)]  \n  \n Because metadata for the <xref:System.String> object isn't available, the call to the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Object%5B%5D%29?displayProperty=fullName> method throws a <xref:System.NullReferenceException> exception at run time when compiled with the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain. To eliminate the exception and provide the necessary metadata, add the following `<Type>` element to the runtime directives file:  \n  \n```xml  \n  \n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">  \n  <Application>  \n    <Assembly Name=\"*Application*\" Dynamic=\"Required All\" />  \n    <Type Name=\"System.String\" Dynamic=\"Required Public\"/> -->  \n  </Application>  \n</Directives>  \n  \n```  \n  \n## See Also  \n [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)   \n [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)   \n [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)","nodes":[{"pos":[12,63],"content":"&lt;Type&gt; Element (.NET Native) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>Type<ph id=\"ph2\">&amp;gt;</ph> Element (.NET Native) | Microsoft Docs","pos":[0,51],"source":"&lt;Type&gt; Element (.NET Native) | Microsoft Docs"}]},{"pos":[367,401],"content":"&lt;Type&gt; Element (.NET Native)","linkify":"&lt;Type&gt; Element (.NET Native)","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>Type<ph id=\"ph2\">&amp;gt;</ph> Element (.NET Native)","pos":[0,34],"source":"&lt;Type&gt; Element (.NET Native)"}]},{"content":"Applies runtime policy to a particular type, such as a class or structure.","pos":[402,476]},{"pos":[485,491],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[936,959],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[963,1043]},{"pos":[1053,1063],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[1070,1079]},{"content":"Attribute type","pos":[1080,1094]},{"content":"Description","pos":[1095,1106]},{"content":"General","pos":[1177,1184]},{"content":"Required attribute.","pos":[1185,1204]},{"content":"Specifies the type name.","pos":[1205,1229]},{"content":"Reflection","pos":[1245,1255]},{"content":"Optional attribute.","pos":[1256,1275]},{"content":"Controls runtime access to constructors to enable activation of instances.","pos":[1276,1350]},{"content":"Reflection","pos":[1364,1374]},{"content":"Optional attribute.","pos":[1375,1394]},{"content":"Controls querying for information about program elements, but does not enable any runtime access.","pos":[1395,1492]},{"content":"Reflection","pos":[1507,1517]},{"content":"Optional attribute.","pos":[1518,1537]},{"content":"Controls runtime access to all type members, including constructors, methods, fields, properties, and events, to enable dynamic programming.","pos":[1538,1678]},{"content":"Serialization","pos":[1695,1708]},{"content":"Optional attribute.","pos":[1709,1728]},{"content":"Controls runtime access to constructors, fields, and properties, to enable type instances to be serialized and deserialized by libraries such as the Newtonsoft JSON serializer.","pos":[1729,1905]},{"content":"Serialization","pos":[1935,1948]},{"content":"Optional attribute.","pos":[1949,1968]},{"content":"Controls policy for serialization that uses the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName&gt;</ph> class.","pos":[1969,2107],"source":" Controls policy for serialization that uses the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName> class."},{"content":"Serialization","pos":[2141,2154]},{"content":"Optional attribute.","pos":[2155,2174]},{"content":"Controls policy for JSON serialization that uses the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer?displayProperty=fullName&gt;</ph> class.","pos":[2175,2327],"source":" Controls policy for JSON serialization that uses the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer?displayProperty=fullName> class."},{"content":"Serialization","pos":[2348,2361]},{"content":"Optional attribute.","pos":[2362,2381]},{"content":"Controls policy for XML serialization that uses the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer?displayProperty=fullName&gt;</ph> class.","pos":[2382,2511],"source":" Controls policy for XML serialization that uses the <xref:System.Xml.Serialization.XmlSerializer?displayProperty=fullName> class."},{"content":"Interop","pos":[2532,2539]},{"content":"Optional attribute.","pos":[2540,2559]},{"content":"Controls policy for marshaling reference types to Windows Runtime and COM.","pos":[2560,2634]},{"content":"Interop","pos":[2657,2664]},{"content":"Optional attribute.","pos":[2665,2684]},{"content":"Controls policy for marshaling delegate types as function pointers to native code.","pos":[2685,2767]},{"content":"Interop","pos":[2791,2798]},{"content":"Optional attribute.","pos":[2799,2818]},{"content":"Controls policy for marshaling value types to native code.","pos":[2819,2877]},{"pos":[2887,2901],"content":"Name attribute","linkify":"Name attribute","nodes":[{"content":"Name attribute","pos":[0,14]}]},{"content":"Value","pos":[2908,2913]},{"content":"Description","pos":[2914,2925]},{"pos":[2964,2975],"content":"<bpt id=\"p1\">*</bpt>type_name<ept id=\"p1\">*</ept>","source":"*type_name*"},{"content":"The type name.","pos":[2976,2990]},{"content":"If this <ph id=\"ph1\">`&lt;Type&gt;`</ph> element is the child of either a <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>Namespace&gt;<ept id=\"p1\">](../../../docs/framework/net-native/namespace-element-net-native.md)</ept> element or another <ph id=\"ph3\">`&lt;Type&gt;`</ph> element, <bpt id=\"p2\">*</bpt>type_name<ept id=\"p2\">*</ept> can include the name of the type without its namespace.","pos":[2991,3228],"source":" If this `<Type>` element is the child of either a [\\<Namespace>](../../../docs/framework/net-native/namespace-element-net-native.md) element or another `<Type>` element, *type_name* can include the name of the type without its namespace."},{"content":"Otherwise, <bpt id=\"p1\">*</bpt>type_name<ept id=\"p1\">*</ept> must include the fully qualified type name.","pos":[3229,3295],"source":" Otherwise, *type_name* must include the fully qualified type name."},{"pos":[3305,3325],"content":"All other attributes","linkify":"All other attributes","nodes":[{"content":"All other attributes","pos":[0,20]}]},{"content":"Value","pos":[3332,3337]},{"content":"Description","pos":[3338,3349]},{"pos":[3388,3404],"content":"<bpt id=\"p1\">*</bpt>policy_setting<ept id=\"p1\">*</ept>","source":"*policy_setting*"},{"content":"The setting to apply to this policy type.","pos":[3405,3446]},{"content":"Possible values are <ph id=\"ph1\">`All`</ph>, <ph id=\"ph2\">`Auto`</ph>, <ph id=\"ph3\">`Excluded`</ph>, <ph id=\"ph4\">`Public`</ph>, <ph id=\"ph5\">`PublicAndInternal`</ph>, <ph id=\"ph6\">`Required Public`</ph>, <ph id=\"ph7\">`Required PublicAndInternal`</ph>, and <ph id=\"ph8\">`Required All`</ph>.","pos":[3447,3593],"source":" Possible values are `All`, `Auto`, `Excluded`, `Public`, `PublicAndInternal`, `Required Public`, `Required PublicAndInternal`, and `Required All`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>.","pos":[3594,3729],"source":" For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)."},{"pos":[3740,3754],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"Element","pos":[3761,3768]},{"content":"Description","pos":[3769,3780]},{"pos":[3821,3917],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>AttributeImplies&gt;<ept id=\"p1\">](../../../docs/framework/net-native/attributeimplies-element-net-native.md)</ept>","source":"[\\<AttributeImplies>](../../../docs/framework/net-native/attributeimplies-element-net-native.md)"},{"content":"If the containing type is an attribute, defines runtime policy for code elements to which the attribute is applied.","pos":[3918,4033]},{"pos":[4038,4112],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Event&gt;<ept id=\"p1\">](../../../docs/framework/net-native/event-element-net-native.md)</ept>","source":"[\\<Event>](../../../docs/framework/net-native/event-element-net-native.md)"},{"content":"Applies reflection policy to an event belonging to this type.","pos":[4113,4174]},{"pos":[4179,4253],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Field&gt;<ept id=\"p1\">](../../../docs/framework/net-native/field-element-net-native.md)</ept>","source":"[\\<Field>](../../../docs/framework/net-native/field-element-net-native.md)"},{"content":"Applies reflection policy to a field belonging to this type.","pos":[4254,4314]},{"pos":[4319,4415],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>GenericParameter&gt;<ept id=\"p1\">](../../../docs/framework/net-native/genericparameter-element-net-native.md)</ept>","source":"[\\<GenericParameter>](../../../docs/framework/net-native/genericparameter-element-net-native.md)"},{"content":"Applies policy to the parameter type of a generic type.","pos":[4416,4471]},{"pos":[4476,4562],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>ImpliesType&gt;<ept id=\"p1\">](../../../docs/framework/net-native/impliestype-element-net-native.md)</ept>","source":"[\\<ImpliesType>](../../../docs/framework/net-native/impliestype-element-net-native.md)"},{"pos":[4563,4680],"content":"Applies policy to a type, if that policy has been applied to the type represented by the containing <ph id=\"ph1\">`&lt;Type&gt;`</ph> element.","source":"Applies policy to a type, if that policy has been applied to the type represented by the containing `<Type>` element."},{"pos":[4685,4761],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Method&gt;<ept id=\"p1\">](../../../docs/framework/net-native/method-element-net-native.md)</ept>","source":"[\\<Method>](../../../docs/framework/net-native/method-element-net-native.md)"},{"content":"Applies reflection policy to a method belonging to this type.","pos":[4762,4823]},{"pos":[4828,4930],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>MethodInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/methodinstantiation-element-net-native.md)</ept>","source":"[\\<MethodInstantiation>](../../../docs/framework/net-native/methodinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic method belonging to this type.","pos":[4931,5012]},{"pos":[5017,5097],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Property&gt;<ept id=\"p1\">](../../../docs/framework/net-native/property-element-net-native.md)</ept>","source":"[\\<Property>](../../../docs/framework/net-native/property-element-net-native.md)"},{"content":"Applies reflection policy to a property belonging to this type.","pos":[5098,5161]},{"pos":[5166,5246],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Subtypes&gt;<ept id=\"p1\">](../../../docs/framework/net-native/subtypes-element-net-native.md)</ept>","source":"[\\<Subtypes>](../../../docs/framework/net-native/subtypes-element-net-native.md)"},{"content":"Applies runtime policy to all classes inherited from the containing type.","pos":[5247,5320]},{"content":"Applies reflection policy to a nested type.","pos":[5334,5377]},{"pos":[5382,5480],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept>","source":"[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic type.","pos":[5481,5537]},{"pos":[5548,5563],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[5570,5577]},{"content":"Description","pos":[5578,5589]},{"pos":[5630,5716],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Application&gt;<ept id=\"p1\">](../../../docs/framework/net-native/application-element-net-native.md)</ept>","source":"[\\<Application>](../../../docs/framework/net-native/application-element-net-native.md)"},{"content":"Serves as a container for application-wide types and type members whose metadata is available for reflection at run time.","pos":[5717,5838]},{"pos":[5843,5923],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Assembly&gt;<ept id=\"p1\">](../../../docs/framework/net-native/assembly-element-net-native.md)</ept>","source":"[\\<Assembly>](../../../docs/framework/net-native/assembly-element-net-native.md)"},{"content":"Applies reflection policy to all the types in a specified assembly.","pos":[5924,5991]},{"pos":[5996,6074],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Library&gt;<ept id=\"p1\">](../../../docs/framework/net-native/library-element-net-native.md)</ept>","source":"[\\<Library>](../../../docs/framework/net-native/library-element-net-native.md)"},{"content":"Defines the assembly that contains types and type members whose metadata is available for reflection at run time.","pos":[6075,6188]},{"pos":[6193,6275],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Namespace&gt;<ept id=\"p1\">](../../../docs/framework/net-native/namespace-element-net-native.md)</ept>","source":"[\\<Namespace>](../../../docs/framework/net-native/namespace-element-net-native.md)"},{"content":"Applies reflection policy to all the types in a namespace.","pos":[6276,6334]},{"content":"Applies reflection policy to a type and all its members.","pos":[6348,6404]},{"pos":[6409,6507],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept>","source":"[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic type and all its members.","pos":[6508,6584]},{"pos":[6594,6601],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The reflection, serialization, and interop attributes are all optional.","pos":[6605,6676]},{"content":"If none are present, the <ph id=\"ph1\">`&lt;Type&gt;`</ph> element serves as a container whose child types define policy for individual members.","pos":[6677,6796],"source":" If none are present, the `<Type>` element serves as a container whose child types define policy for individual members."},{"pos":[6803,7194],"content":"If a <ph id=\"ph1\">`&lt;Type&gt;`</ph> element is the child of an <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>Assembly&gt;<ept id=\"p1\">](../../../docs/framework/net-native/assembly-element-net-native.md)</ept>, <bpt id=\"p2\">[</bpt><ph id=\"ph3\">\\&lt;</ph>Namespace&gt;<ept id=\"p2\">](../../../docs/framework/net-native/namespace-element-net-native.md)</ept>, <ph id=\"ph4\">`&lt;Type&gt;`</ph>, or <bpt id=\"p3\">[</bpt><ph id=\"ph5\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p3\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept> element, it overrides the policy settings defined by the parent element.","source":"If a `<Type>` element is the child of an [\\<Assembly>](../../../docs/framework/net-native/assembly-element-net-native.md), [\\<Namespace>](../../../docs/framework/net-native/namespace-element-net-native.md), `<Type>`, or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element, it overrides the policy settings defined by the parent element."},{"content":"A <ph id=\"ph1\">`&lt;Type&gt;`</ph> element of a generic type applies its policy to all instantiations that do not have their own policy.","pos":[7201,7313],"source":"A `<Type>` element of a generic type applies its policy to all instantiations that do not have their own policy."},{"content":"The policy of constructed generic types is defined by the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept> element.","pos":[7314,7479],"source":" The policy of constructed generic types is defined by the [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element."},{"content":"If the type is a generic type, its name is decorated by a grave accent symbol (```) followed by its number of generic parameters.","pos":[7486,7615]},{"content":"For example, the <ph id=\"ph1\">`Name`</ph> attribute of a <ph id=\"ph2\">`&lt;Type&gt;`</ph> element for the <ph id=\"ph3\">&lt;xref:System.Collections.Generic.List%601?displayProperty=fullName&gt;</ph> class appears as <ph id=\"ph4\">`Name=\"System.Collections.Generic.List`</ph>1\"`.","pos":[7616,7808],"source":" For example, the `Name` attribute of a `<Type>` element for the <xref:System.Collections.Generic.List%601?displayProperty=fullName> class appears as `Name=\"System.Collections.Generic.List`1\"`."},{"pos":[7817,7824],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses reflection to display information about the fields, properties, and methods of the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601?displayProperty=fullName&gt;</ph> class.","pos":[7828,8012],"source":"The following example uses reflection to display information about the fields, properties, and methods of the <xref:System.Collections.Generic.List%601?displayProperty=fullName> class."},{"content":"The variable <ph id=\"ph1\">`b`</ph> in the example is a <bpt id=\"p1\">[</bpt>TextBlock<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx)</ept> control.","pos":[8013,8158],"source":" The variable `b` in the example is a [TextBlock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control."},{"content":"Because the example simply retrieves type information, the availability of metadata is controlled by the <ph id=\"ph1\">`Browse`</ph> policy setting.","pos":[8159,8288],"source":" Because the example simply retrieves type information, the availability of metadata is controlled by the `Browse` policy setting."},{"pos":[8295,8429],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ProjectN_Reflection#3<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/browsegenerictype1.cs#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[ProjectN_Reflection#3](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/browsegenerictype1.cs#3)]"},{"content":"Because metadata for the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class isn't automatically included by the <ph id=\"ph2\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> tool chain, the example fails to display the requested member information at run time.","pos":[8436,8691],"source":"Because metadata for the <xref:System.Collections.Generic.List%601> class isn't automatically included by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain, the example fails to display the requested member information at run time."},{"content":"To provide the necessary metadata, add the following <ph id=\"ph1\">`&lt;Type&gt;`</ph> element to the runtime directives file.","pos":[8692,8793],"source":" To provide the necessary metadata, add the following `<Type>` element to the runtime directives file."},{"content":"Note that, because we've provided a parent <bpt id=\"p1\">[</bpt>&lt;Namespace<ph id=\"ph1\">\\&gt;</ph><ept id=\"p1\">](../../../docs/framework/net-native/namespace-element-net-native.md)</ept> element, we don't have to provide a fully qualified type name in the <ph id=\"ph2\">`&lt;Type&gt;`</ph> element.","pos":[8794,9006],"source":" Note that, because we've provided a parent [<Namespace\\>](../../../docs/framework/net-native/namespace-element-net-native.md) element, we don't have to provide a fully qualified type name in the `<Type>` element."},{"pos":[9366,9373],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses reflection to retrieve a <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.String.Chars%2A?displayProperty=fullName&gt;</ph> property.","pos":[9377,9558],"source":"The following example uses reflection to retrieve a <xref:System.Reflection.PropertyInfo> object that represents the <xref:System.String.Chars%2A?displayProperty=fullName> property."},{"content":"It then uses the <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method to retrieve the value of the seventh character in a string, and to display all the characters in the string.","pos":[9559,9804],"source":" It then uses the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Object%5B%5D%29?displayProperty=fullName> method to retrieve the value of the seventh character in a string, and to display all the characters in the string."},{"content":"The variable <ph id=\"ph1\">`b`</ph> in the example is a <bpt id=\"p1\">[</bpt>TextBlock<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx)</ept> control.","pos":[9805,9950],"source":" The variable `b` in the example is a [TextBlock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control."},{"pos":[9957,10086],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ProjectN_Reflection#1<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/propertyinfo1.cs#1)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[ProjectN_Reflection#1](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/propertyinfo1.cs#1)]"},{"content":"Because metadata for the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> object isn't available, the call to the <ph id=\"ph2\">&lt;xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method throws a <ph id=\"ph3\">&lt;xref:System.NullReferenceException&gt;</ph> exception at run time when compiled with the <ph id=\"ph4\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> tool chain.","pos":[10093,10460],"source":"Because metadata for the <xref:System.String> object isn't available, the call to the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Object%5B%5D%29?displayProperty=fullName> method throws a <xref:System.NullReferenceException> exception at run time when compiled with the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain."},{"content":"To eliminate the exception and provide the necessary metadata, add the following <ph id=\"ph1\">`&lt;Type&gt;`</ph> element to the runtime directives file:","pos":[10461,10590],"source":" To eliminate the exception and provide the necessary metadata, add the following `<Type>` element to the runtime directives file:"},{"pos":[10879,10887],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[10891,11044],"source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Runtime Directive Elements<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-elements.md)</ept><ph id=\"ph1\"> </ph>","pos":[11047,11143],"source":" [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>","pos":[11146,11255],"source":" [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)"}]}