{"content":"---\ntitle: \"Formulate Joins and Cross-Product Queries\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: d8072ede-0521-4670-9bec-1778ceeb875b\n---\n# Formulate Joins and Cross-Product Queries\nThe following examples show how to combine results from multiple tables.  \n  \n## Example  \n The following example uses foreign key navigation in the `From` clause in Visual Basic (`from` clause in C#) to select all orders for customers in London.  \n  \n [!code-csharp[DLinqQueryExamples#47](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#47)]\n [!code-vb[DLinqQueryExamples#47](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#47)]  \n  \n## Example  \n The following example uses foreign key navigation in the `Where` clause in Visual Basic (`where` clause in C#) to filter for out-of-stock `Products` whose `Supplier` is in the United States.  \n  \n [!code-csharp[DLinqQueryExamples#48](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#48)]\n [!code-vb[DLinqQueryExamples#48](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#48)]  \n  \n## Example  \n The following example uses foreign key navigation in the `From` clause in Visual Basic (`from` clause in C#) to filter for employees in Seattle and to list their territories.  \n  \n [!code-csharp[DLinqQueryExamples#49](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#49)]  \n  \n## Example  \n The following example uses foreign key navigation in the `Select` clause in Visual Basic (`select` clause in C#) to filter for pairs of employees where one employee reports to the other and where both employees are from the same `City`.  \n  \n [!code-csharp[DLinqQueryExamples#50](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#50)]\n [!code-vb[DLinqQueryExamples#50](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50)]  \n  \n## Example  \n The following Visual Basic example looks for all customers and orders, makes sure that the orders are matched to customers, and guarantees that for every customer in that list, a contact name is provided.  \n  \n [!code-vb[DLinqQueryExamples#50v](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50v)]  \n  \n## Example  \n The following example explicitly joins two tables and projects results from both tables.  \n  \n [!code-csharp[DLinqQueryExamples#51](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#51)]\n [!code-vb[DLinqQueryExamples#51](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#51)]  \n  \n## Example  \n The following example explicitly joins three tables and projects results from each of them.  \n  \n [!code-csharp[DLinqQueryExamples#52](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#52)]\n [!code-vb[DLinqQueryExamples#52](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#52)]  \n  \n## Example  \n The following example shows how to achieve a `LEFT OUTER JOIN` by using `DefaultIfEmpty()`. The `DefaultIfEmpty()` method returns null when there is no `Order` for the `Employee`.  \n  \n [!code-csharp[DLinqQueryExamples#53](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#53)]\n [!code-vb[DLinqQueryExamples#53](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#53)]  \n  \n## Example  \n The following example projects a `let` expression resulting from a join.  \n  \n [!code-csharp[DLinqQueryExamples#54](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#54)]\n [!code-vb[DLinqQueryExamples#54](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#54)]  \n  \n## Example  \n The following example shows a `join` with a composite key.  \n  \n [!code-csharp[DLinqQueryExamples#55](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#55)]\n [!code-vb[DLinqQueryExamples#55](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#55)]  \n  \n## Example  \n The following example shows how to construct a `join` where one side is nullable and the other is not.  \n  \n [!code-csharp[DLinqQueryExamples#56](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#56)]\n [!code-vb[DLinqQueryExamples#56](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#56)]  \n  \n## See also\n\n- [Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)\n","nodes":[{"pos":[4,159],"embed":true,"restype":"x-metadata","content":"title: \"Formulate Joins and Cross-Product Queries\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: d8072ede-0521-4670-9bec-1778ceeb875b","nodes":[{"content":"Formulate Joins and Cross-Product Queries","nodes":[{"pos":[0,41],"content":"Formulate Joins and Cross-Product Queries","nodes":[{"content":"Formulate Joins and Cross-Product Queries","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[166,207],"content":"Formulate Joins and Cross-Product Queries","linkify":"Formulate Joins and Cross-Product Queries","nodes":[{"content":"Formulate Joins and Cross-Product Queries","pos":[0,41]}]},{"content":"The following examples show how to combine results from multiple tables.","pos":[208,280]},{"pos":[289,296],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[300,454],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`From`</ph> clause in Visual Basic (<ph id=\"ph2\">`from`</ph> clause in C#) to select all orders for customers in London.","source":"The following example uses foreign key navigation in the `From` clause in Visual Basic (`from` clause in C#) to select all orders for customers in London."},{"pos":[739,746],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[750,940],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`Where`</ph> clause in Visual Basic (<ph id=\"ph2\">`where`</ph> clause in C#) to filter for out-of-stock <ph id=\"ph3\">`Products`</ph> whose <ph id=\"ph4\">`Supplier`</ph> is in the United States.","source":"The following example uses foreign key navigation in the `Where` clause in Visual Basic (`where` clause in C#) to filter for out-of-stock `Products` whose `Supplier` is in the United States."},{"pos":[1225,1232],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1236,1410],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`From`</ph> clause in Visual Basic (<ph id=\"ph2\">`from`</ph> clause in C#) to filter for employees in Seattle and to list their territories.","source":"The following example uses foreign key navigation in the `From` clause in Visual Basic (`from` clause in C#) to filter for employees in Seattle and to list their territories."},{"pos":[1559,1566],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1570,1806],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`Select`</ph> clause in Visual Basic (<ph id=\"ph2\">`select`</ph> clause in C#) to filter for pairs of employees where one employee reports to the other and where both employees are from the same <ph id=\"ph3\">`City`</ph>.","source":"The following example uses foreign key navigation in the `Select` clause in Visual Basic (`select` clause in C#) to filter for pairs of employees where one employee reports to the other and where both employees are from the same `City`."},{"pos":[2091,2098],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following Visual Basic example looks for all customers and orders, makes sure that the orders are matched to customers, and guarantees that for every customer in that list, a contact name is provided.","pos":[2102,2306]},{"pos":[2458,2465],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example explicitly joins two tables and projects results from both tables.","pos":[2469,2557]},{"pos":[2842,2849],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example explicitly joins three tables and projects results from each of them.","pos":[2853,2944]},{"pos":[3229,3236],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to achieve a <ph id=\"ph1\">`LEFT OUTER JOIN`</ph> by using <ph id=\"ph2\">`DefaultIfEmpty()`</ph>.","pos":[3240,3331],"source":"The following example shows how to achieve a `LEFT OUTER JOIN` by using `DefaultIfEmpty()`."},{"content":"The <ph id=\"ph1\">`DefaultIfEmpty()`</ph> method returns null when there is no <ph id=\"ph2\">`Order`</ph> for the <ph id=\"ph3\">`Employee`</ph>.","pos":[3332,3419],"source":" The `DefaultIfEmpty()` method returns null when there is no `Order` for the `Employee`."},{"pos":[3704,3711],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3715,3787],"content":"The following example projects a <ph id=\"ph1\">`let`</ph> expression resulting from a join.","source":"The following example projects a `let` expression resulting from a join."},{"pos":[4072,4079],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4083,4141],"content":"The following example shows a <ph id=\"ph1\">`join`</ph> with a composite key.","source":"The following example shows a `join` with a composite key."},{"pos":[4426,4433],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4437,4539],"content":"The following example shows how to construct a <ph id=\"ph1\">`join`</ph> where one side is nullable and the other is not.","source":"The following example shows how to construct a `join` where one side is nullable and the other is not."},{"pos":[4824,4832],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4836,4925],"content":"<bpt id=\"p1\">[</bpt>Query Examples<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)</ept>","source":"[Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)"}]}