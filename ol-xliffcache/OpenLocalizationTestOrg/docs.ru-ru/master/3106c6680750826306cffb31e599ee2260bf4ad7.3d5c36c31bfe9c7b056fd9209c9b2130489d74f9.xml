{"content":"---\ntitle: \"ISymENCUnmanagedMethod::GetLineFromOffset Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymENCUnmanagedMethod.GetLineFromOffset\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymENCUnmanagedMethod::GetLineFromOffset\"\nhelpviewer_keywords: \n  - \"GetLineFromOffset method [.NET Framework debugging]\"\n  - \"ISymENCUnmanagedMethod::GetLineFromOffset method [.NET Framework debugging]\"\nms.assetid: cc09bad2-fb34-4d13-a521-6ec7b1a1d915\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymENCUnmanagedMethod::GetLineFromOffset Method\nGets the line information associated with an offset. If the offset parameter (`dwOffset`) is not a sequence point, this method gets the line information associated with the previous offset.  \n  \n## Syntax  \n  \n```  \nHRESULT GetLineFromOffset(  \n     [in]  ULONG32   dwOffset,  \n     [out] ULONG32*  pline,  \n     [out] ULONG32*  pcolumn,  \n     [out] ULONG32*  pendLine,  \n     [out] ULONG32*  pendColumn,  \n     [out] ULONG32*  pdwStartOffset);  \n```  \n  \n## Parameters  \n `dwOffset`  \n [in] A `ULONG32` that contains the offset.  \n  \n `pline`  \n [out] A pointer to a `ULONG32` that receives the line.  \n  \n `pcolumn`  \n [out] A pointer to a `ULONG32` that receives the column.  \n  \n `pendLine`  \n [out] A pointer to a `ULONG32` that receives the end line.  \n  \n `pendColumn`  \n [out] A pointer to a `ULONG32` that receives the end column.  \n  \n `pdwStartOffset`  \n [out] A pointer to a `ULONG32` that receives the associated sequence point.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See also\n\n- [ISymENCUnmanagedMethod Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymencunmanagedmethod-interface.md)\n","nodes":[{"pos":[4,536],"embed":true,"restype":"x-metadata","content":"title: \"ISymENCUnmanagedMethod::GetLineFromOffset Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymENCUnmanagedMethod.GetLineFromOffset\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymENCUnmanagedMethod::GetLineFromOffset\"\nhelpviewer_keywords: \n  - \"GetLineFromOffset method [.NET Framework debugging]\"\n  - \"ISymENCUnmanagedMethod::GetLineFromOffset method [.NET Framework debugging]\"\nms.assetid: cc09bad2-fb34-4d13-a521-6ec7b1a1d915\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymENCUnmanagedMethod::GetLineFromOffset Method","nodes":[{"pos":[0,48],"content":"ISymENCUnmanagedMethod::GetLineFromOffset Method","nodes":[{"content":"ISymENCUnmanagedMethod::GetLineFromOffset Method","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[543,591],"content":"ISymENCUnmanagedMethod::GetLineFromOffset Method","linkify":"ISymENCUnmanagedMethod::GetLineFromOffset Method","nodes":[{"content":"ISymENCUnmanagedMethod::GetLineFromOffset Method","pos":[0,48]}]},{"content":"Gets the line information associated with an offset.","pos":[592,644]},{"content":"If the offset parameter (<ph id=\"ph1\">`dwOffset`</ph>) is not a sequence point, this method gets the line information associated with the previous offset.","pos":[645,781],"source":" If the offset parameter (`dwOffset`) is not a sequence point, this method gets the line information associated with the previous offset."},{"pos":[790,796],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1052,1062],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A <ph id=\"ph1\">`ULONG32`</ph> that contains the offset.","pos":[1080,1122],"source":"[in] A `ULONG32` that contains the offset."},{"content":"[out] A pointer to a <ph id=\"ph1\">`ULONG32`</ph> that receives the line.","pos":[1140,1194],"source":"[out] A pointer to a `ULONG32` that receives the line."},{"content":"[out] A pointer to a <ph id=\"ph1\">`ULONG32`</ph> that receives the column.","pos":[1214,1270],"source":"[out] A pointer to a `ULONG32` that receives the column."},{"content":"[out] A pointer to a <ph id=\"ph1\">`ULONG32`</ph> that receives the end line.","pos":[1291,1349],"source":"[out] A pointer to a `ULONG32` that receives the end line."},{"content":"[out] A pointer to a <ph id=\"ph1\">`ULONG32`</ph> that receives the end column.","pos":[1372,1432],"source":"[out] A pointer to a `ULONG32` that receives the end column."},{"content":"[out] A pointer to a <ph id=\"ph1\">`ULONG32`</ph> that receives the associated sequence point.","pos":[1459,1534],"source":"[out] A pointer to a `ULONG32` that receives the associated sequence point."},{"pos":[1543,1555],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[1559,1631]},{"pos":[1640,1652],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1656,1688],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[1697,1705],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1709,1833],"content":"<bpt id=\"p1\">[</bpt>ISymENCUnmanagedMethod Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymencunmanagedmethod-interface.md)</ept>","source":"[ISymENCUnmanagedMethod Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymencunmanagedmethod-interface.md)"}]}