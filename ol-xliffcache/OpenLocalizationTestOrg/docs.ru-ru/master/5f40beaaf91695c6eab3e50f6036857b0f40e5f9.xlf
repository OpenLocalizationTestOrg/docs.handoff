<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-extract-a-protocol-and-port-number-from-a-url.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f40beaaf91695c6eab3e50f6036857b0f40e5f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\how-to-extract-a-protocol-and-port-number-from-a-url.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fde19c4925966297fcfad66851e0c30b56cf247</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c97219d5aedb4ba21a175c4cd8c89a4cb9327a06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Extract a Protocol and Port Number from a URL | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Extract a Protocol and Port Number from a URL</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following example extracts a protocol and port number from a URL.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Result%2A?displayProperty=fullName&gt;</ph> method to return the protocol followed by a colon followed by the port number.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`^(?&lt;proto&gt;\w+)://[^/]+?(?&lt;port&gt;:\d+)?/`</ph> can be interpreted as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pattern</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Begin the match at the start of the string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Match one or more word characters.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Name this group <ph id="ph1">`proto`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Match a colon followed by two slash marks.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Match one or more occurrences (but as few as possible) of any character other than a slash mark.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Match zero or one occurrence of a colon followed by one or more digit characters.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Name this group <ph id="ph1">`port`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Match a slash mark.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Result%2A?displayProperty=fullName&gt;</ph> method expands the <ph id="ph2">`${proto}${port}`</ph> replacement sequence, which concatenates the value of the two named groups captured in the regular expression pattern.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is a convenient alternative to explicitly concatenating the strings retrieved from the collection object returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Result%2A?displayProperty=fullName&gt;</ph> method with two substitutions, <ph id="ph2">`${proto}`</ph> and <ph id="ph3">`${port}`</ph>, to include the captured groups in the output string.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can retrieve the captured groups from the match's <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object instead, as the following code shows.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Regular Expressions<ept id="p1">](../../../docs/standard/base-types/regular-expressions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>