<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ui-automation-control-patterns-overview.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">356a94b4e6219d6dc6929bab897d7b6068ee47fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\ui-automation\ui-automation-control-patterns-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca8e5a46bc443118ca61123e5ff673341e9c81e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f943df6adced64a5779ce1368d6a880635ce3d7f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>UI Automation Control Patterns Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>UI Automation Control Patterns Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This documentation is intended for .NET Framework developers who want to use the managed <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> classes defined in the <ph id="ph2">&lt;xref:System.Windows.Automation&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For the latest information about <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, see <bpt id="p1">[</bpt>Windows Automation API: UI Automation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=156746)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This overview introduces <ph id="ph1">[!INCLUDE[TLA#tla_uiautomation](../../../includes/tlasharptla-uiautomation-md.md)]</ph> control patterns.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Control patterns provide a way to categorize and expose a control's functionality independent of the control type or the appearance of the control.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> uses control patterns to represent common control behaviors.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, you use the Invoke control pattern for controls that can be invoked (such as buttons) and the Scroll control pattern for controls that have scroll bars (such as list boxes, list views, or combo boxes).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because each control pattern represents a separate functionality, they can be combined to describe the full set of functionality supported by a particular control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Aggregate controls—built with child controls that provide the <ph id="ph1">[!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)]</ph> for functionality exposed by the parent—should implement all control patterns normally associated with each child control.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In turn, those same control patterns are not required to be implemented by the child controls.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>UI Automation Control Pattern Components</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Control patterns support the methods, properties, events, and relationships needed to define a discrete piece of functionality available in a control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The relationship between a UI Automation element and its parent, children and siblings describes the element's structure within the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> tree.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The methods allow UI Automation clients to manipulate the control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The properties and events provide information about the control pattern's functionality as well as information about the state of the control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Control patterns relate to <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../includes/tla2sharptla-ui-md.md)]</ph> as interfaces relate to <ph id="ph2">[!INCLUDE[TLA#tla_com](../../../includes/tlasharptla-com-md.md)]</ph> objects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_com](../../../includes/tla2sharptla-com-md.md)]</ph>, you can query an object to ask what interfaces it supports and then use those interfaces to access functionality.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, UI Automation clients can ask a control which control patterns it supports and then interact with the control through the properties, methods, events, and structures exposed by the supported control patterns.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, for a multiline edit box, UI Automation providers implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IScrollProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When a client knows that an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> supports the <ph id="ph2">&lt;xref:System.Windows.Automation.ScrollPattern&gt;</ph> control pattern, it can use the properties, methods, and events exposed by that control pattern to manipulate the control, or access information about the control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>UI Automation Providers and Clients</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>UI Automation providers implement control patterns to expose the appropriate behavior for a specific piece of functionality supported by the control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>UI Automation clients access methods and properties of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> control pattern classes and use them to get information about the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../includes/tla2sharptla-ui-md.md)]</ph>, or to manipulate the <ph id="ph3">[!INCLUDE[TLA2#tla_ui](../../../includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These control pattern classes are found in the <ph id="ph1">&lt;xref:System.Windows.Automation&gt;</ph> namespace (for example, <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Automation.SelectionPattern&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Clients use <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> methods (such as <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A?displayProperty=fullName&gt;</ph>) or the <ph id="ph4">[!INCLUDE[TLA#tla_clr](../../../includes/tlasharptla-clr-md.md)]</ph> accessors to access the <ph id="ph5">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> properties on a pattern.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Each control pattern class has a field member (for example, <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Pattern?displayProperty=fullName&gt;</ph>``or <ph id="ph2">&lt;xref:System.Windows.Automation.SelectionPattern.Pattern?displayProperty=fullName&gt;</ph>) that identifies that control pattern and can be passed as a parameter to <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> to retrieve that pattern for an <ph id="ph5">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Dynamic Control Patterns</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Some controls do not always support the same set of control patterns.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Control patterns are considered supported when they are available to a UI Automation client.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, a multiline edit box enables vertical scrolling only when it contains more lines of text than can be displayed in its viewable area.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Scrolling is disabled when enough text is removed so that scrolling is no longer required.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For this example, the ScrollPattern control pattern is dynamically supported depending on the current state of the control (how much text is in the edit box).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Control Pattern Classes and Interfaces</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following table describes the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> control patterns.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The table also lists the classes used by UI Automation clients to access the control patterns, as well as the interfaces used by UI Automation providers to implement them.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Control Pattern Class</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Provider Interface</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Used for controls that can be docked in a docking container.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, toolbars or tool palettes.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Used for controls that can be expanded or collapsed.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, menu items in an application such as the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Used for controls that support grid functionality such as sizing and moving to a specified cell.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, the large icon view in Windows Explorer or simple tables without headers in <ph id="ph1">[!INCLUDE[TLA#tla_word](../../../includes/tlasharptla-word-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Used for controls that have cells within grids.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The individual cells should support the GridItem pattern.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, each cell in <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](../../../includes/tlasharptla-winexpl-md.md)]</ph> detail view.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Used for controls that can be invoked, such as a button.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Used for controls that can switch between multiple representations of the same set of information, data, or children.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, a list view control where data is available in thumbnail, tile, icon, list, or detail views.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Used for controls that have a range of values that can be applied to the control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, a spinner control containing years might have a range of 1900 to 2010, while another spinner control presenting months would have a range of 1 to 12.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Used for controls that can scroll.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, a control that has scroll bars that are active when there is more information than can be displayed in the viewable area of the control.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Used for controls that have individual items in a list that scrolls.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, a list control that has individual items in the scroll list, such as a combo box control.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Used for selection container controls.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, list boxes and combo boxes.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Used for individual items in selection container controls, such as list boxes and combo boxes.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Used for controls that have a grid as well as header information.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">[!INCLUDE[TLA#tla_xl](../../../includes/tlasharptla-xl-md.md)]</ph> worksheets.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Used for items in a table.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Used for edit controls and documents that expose textual information.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Used for controls where the state can be toggled.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, check boxes and checkable menu items.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Used for controls that can be resized, moved, and rotated.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Typical uses for the Transform control pattern are in designers, forms, graphical editors, and drawing applications.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Allows clients to get or set a value on controls that do not support a range of values.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, a date time picker.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Exposes information specific to windows, a fundamental concept to the <ph id="ph1">[!INCLUDE[TLA#tla_win](../../../includes/tlasharptla-win-md.md)]</ph> operating system.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Examples of controls that are windows are top-level application windows (<ph id="ph1">[!INCLUDE[TLA#tla_word](../../../includes/tlasharptla-word-md.md)]</ph>, <ph id="ph2">[!INCLUDE[TLA#tla_winexpl](../../../includes/tlasharptla-winexpl-md.md)]</ph>, and so on), <ph id="ph3">[!INCLUDE[TLA#tla_mdi](../../../includes/tlasharptla-mdi-md.md)]</ph> child windows, and dialogs.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Control Patterns for Clients<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Control Pattern Mapping for UI Automation Clients<ept id="p1">](../../../docs/framework/ui-automation/control-pattern-mapping-for-ui-automation-clients.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Overview<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Properties for Clients<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-properties-for-clients.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Events for Clients<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-events-for-clients.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>