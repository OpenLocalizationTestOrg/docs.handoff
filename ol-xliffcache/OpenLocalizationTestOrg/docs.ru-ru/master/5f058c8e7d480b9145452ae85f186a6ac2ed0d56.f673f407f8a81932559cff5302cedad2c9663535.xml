{"content":"---\ntitle: \"Default property access is ambiguous between the inherited interface members '<defaultpropertyname>' of interface '<interfacename1>' and '<defaultpropertyname>' of interface '<interfacename2>'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc30686\"\n  - \"bc30686\"\nhelpviewer_keywords: \n  - \"BC30686\"\nms.assetid: 784fefec-ef57-48cf-b960-957df419b439\n---\n# Default property access is ambiguous between the inherited interface members '\\<defaultpropertyname>' of interface '\\<interfacename1>' and '\\<defaultpropertyname>' of interface '\\<interfacename2>'\nAn interface inherits from two interfaces, each of which declares a default property with the same name. The compiler cannot resolve an access to this default property without qualification. The following example illustrates this.  \n  \n```  \nPublic Interface Iface1  \n    Default Property prop(ByVal arg As Integer) As Integer  \nEnd Interface  \nPublic Interface Iface2  \n    Default Property prop(ByVal arg As Integer) As Integer  \nEnd Interface  \nPublic Interface Iface3  \n    Inherits Iface1, Iface2  \nEnd Interface  \nPublic Class testClass  \n    Public Sub accessDefaultProperty()  \n        Dim testObj As Iface3  \n        Dim testInt As Integer = testObj(1)  \n    End Sub  \nEnd Class  \n```  \n  \n When you specify `testObj(1)`, the compiler tries to resolve it to the default property. However, there are two possible default properties because of the inherited interfaces, so the compiler signals this error.  \n  \n **Error ID:** BC30686  \n  \n## To correct this error  \n  \n-   Avoid inheriting any members with the same name. In the preceding example, if `testObj` does not need any of the members of, say, `Iface2`, then declare it as follows:  \n  \n    ```  \n    Dim testObj As Iface1  \n    ```  \n  \n     -or-  \n  \n-   Implement the inheriting interface in a class. Then you can implement each of the inherited properties with different names. However, only one of them can be the default property of the implementing class. The following example illustrates this.  \n  \n    ```  \n    Public Class useIface3  \n        Implements Iface3  \n        Default Public Property prop1(ByVal arg As Integer) As Integer Implements Iface1.prop  \n            ' Insert code to define Get and Set procedures for prop1.  \n        End Property  \n        Public Property prop2(ByVal arg As Integer) As Integer Implements Iface2.prop  \n            ' Insert code to define Get and Set procedures for prop2.  \n        End Property  \n    End Class  \n    ```  \n  \n## See also\n\n- [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)\n","nodes":[{"pos":[4,353],"embed":true,"restype":"x-metadata","content":"title: \"Default property access is ambiguous between the inherited interface members '<defaultpropertyname>' of interface '<interfacename1>' and '<defaultpropertyname>' of interface '<interfacename2>'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc30686\"\n  - \"bc30686\"\nhelpviewer_keywords: \n  - \"BC30686\"\nms.assetid: 784fefec-ef57-48cf-b960-957df419b439","nodes":[{"content":"Default property access is ambiguous between the inherited interface members '<defaultpropertyname>' of interface '<interfacename1>' and '<defaultpropertyname>' of interface '<interfacename2>'","nodes":[{"pos":[0,192],"content":"Default property access is ambiguous between the inherited interface members '<ph id=\"ph1\">&lt;defaultpropertyname&gt;</ph>' of interface '<ph id=\"ph2\">&lt;interfacename1&gt;</ph>' and '<ph id=\"ph3\">&lt;defaultpropertyname&gt;</ph>' of interface '<ph id=\"ph4\">&lt;interfacename2&gt;</ph>'","source":"Default property access is ambiguous between the inherited interface members '<defaultpropertyname>' of interface '<interfacename1>' and '<defaultpropertyname>' of interface '<interfacename2>'"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[360,556],"content":"Default property access is ambiguous between the inherited interface members '\\<defaultpropertyname>' of interface '\\<interfacename1>' and '\\<defaultpropertyname>' of interface '\\<interfacename2>'","linkify":"Default property access is ambiguous between the inherited interface members '\\<defaultpropertyname>' of interface '\\<interfacename1>' and '\\<defaultpropertyname>' of interface '\\<interfacename2>'","nodes":[{"content":"Default property access is ambiguous between the inherited interface members '<ph id=\"ph1\">\\&lt;</ph>defaultpropertyname&gt;' of interface '<ph id=\"ph2\">\\&lt;</ph>interfacename1&gt;' and '<ph id=\"ph3\">\\&lt;</ph>defaultpropertyname&gt;' of interface '<ph id=\"ph4\">\\&lt;</ph>interfacename2&gt;'","pos":[0,196],"source":"Default property access is ambiguous between the inherited interface members '\\<defaultpropertyname>' of interface '\\<interfacename1>' and '\\<defaultpropertyname>' of interface '\\<interfacename2>'"}]},{"content":"An interface inherits from two interfaces, each of which declares a default property with the same name.","pos":[557,661]},{"content":"The compiler cannot resolve an access to this default property without qualification.","pos":[662,747]},{"content":"The following example illustrates this.","pos":[748,787]},{"content":"When you specify <ph id=\"ph1\">`testObj(1)`</ph>, the compiler tries to resolve it to the default property.","pos":[1257,1345],"source":"When you specify `testObj(1)`, the compiler tries to resolve it to the default property."},{"content":"However, there are two possible default properties because of the inherited interfaces, so the compiler signals this error.","pos":[1346,1469]},{"pos":[1476,1497],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30686","source":"**Error ID:** BC30686"},{"pos":[1506,1527],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Avoid inheriting any members with the same name.","pos":[1537,1585]},{"content":"In the preceding example, if <ph id=\"ph1\">`testObj`</ph> does not need any of the members of, say, <ph id=\"ph2\">`Iface2`</ph>, then declare it as follows:","pos":[1586,1704],"source":" In the preceding example, if `testObj` does not need any of the members of, say, `Iface2`, then declare it as follows:"},{"content":"-or-","pos":[1766,1770]},{"content":"Implement the inheriting interface in a class.","pos":[1780,1826]},{"content":"Then you can implement each of the inherited properties with different names.","pos":[1827,1904]},{"content":"However, only one of them can be the default property of the implementing class.","pos":[1905,1985]},{"content":"The following example illustrates this.","pos":[1986,2025]},{"pos":[2504,2512],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2516,2607],"content":"<bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept>","source":"[Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)"}]}