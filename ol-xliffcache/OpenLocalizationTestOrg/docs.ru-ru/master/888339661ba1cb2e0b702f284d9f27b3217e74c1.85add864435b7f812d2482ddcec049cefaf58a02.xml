{"content":"---\ntitle: \"Using Conversion Operators - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"conversions [C#], operators\"\n  - \"conversion operators [C#]\"\n  - \"operators [C#], conversion\"\n  - \"user-defined conversions [C#]\"\n  - \"implicit conversion operators [C#]\"\n  - \"explicit conversion operators [C#]\"\nms.assetid: caf36e89-c6c0-4b87-9f9e-85780a45c9a4\n---\n# Using Conversion Operators (C# Programming Guide)\nYou can use `implicit` conversion operators, which are easier to use, or `explicit` conversion operators, which clearly indicate to anyone reading the code that you're converting a type. This topic demonstrates both types of conversion operator.  \n  \n> [!NOTE]\n>  For information about simple type conversions, see [How to: Convert a String to a Number](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md), [How to: Convert a byte Array to an int](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md), [How to: Convert Between Hexadecimal Strings and Numeric Types](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md), or <xref:System.Convert>.  \n  \n## Example  \n This is an example of an explicit conversion operator. This operator converts from the type <xref:System.Byte> to a value type called `Digit`. Because not all bytes can be converted to a digit, the conversion is explicit, meaning that a cast must be used, as shown in the `Main` method.  \n  \n [!code-csharp[csProgGuideStatements#11](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideStatements/CS/Statements.cs#11)]  \n  \n## Example  \n This example demonstrates an implicit conversion operator by defining a conversion operator that undoes what the previous example did: it converts from a value class called `Digit` to the integral <xref:System.Byte> type. Because any digit can be converted to a <xref:System.Byte>, there's no need to force users to be explicit about the conversion.  \n  \n [!code-csharp[csProgGuideStatements#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideStatements/CS/Statements.cs#12)]  \n  \n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Conversion Operators](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md)\n- [is](../../../csharp/language-reference/keywords/is.md)\n","nodes":[{"pos":[4,390],"embed":true,"restype":"x-metadata","content":"title: \"Using Conversion Operators - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"conversions [C#], operators\"\n  - \"conversion operators [C#]\"\n  - \"operators [C#], conversion\"\n  - \"user-defined conversions [C#]\"\n  - \"implicit conversion operators [C#]\"\n  - \"explicit conversion operators [C#]\"\nms.assetid: caf36e89-c6c0-4b87-9f9e-85780a45c9a4","nodes":[{"content":"Using Conversion Operators - C# Programming Guide","nodes":[{"pos":[0,49],"content":"Using Conversion Operators - C# Programming Guide","nodes":[{"content":"Using Conversion Operators - C# Programming Guide","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[397,446],"content":"Using Conversion Operators (C# Programming Guide)","linkify":"Using Conversion Operators (C# Programming Guide)","nodes":[{"content":"Using Conversion Operators (C# Programming Guide)","pos":[0,49]}]},{"content":"You can use <ph id=\"ph1\">`implicit`</ph> conversion operators, which are easier to use, or <ph id=\"ph2\">`explicit`</ph> conversion operators, which clearly indicate to anyone reading the code that you're converting a type.","pos":[447,633],"source":"You can use `implicit` conversion operators, which are easier to use, or `explicit` conversion operators, which clearly indicate to anyone reading the code that you're converting a type."},{"content":"This topic demonstrates both types of conversion operator.","pos":[634,692]},{"pos":[700,1201],"content":"[!NOTE]\n For information about simple type conversions, see [How to: Convert a String to a Number](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md), [How to: Convert a byte Array to an int](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md), [How to: Convert Between Hexadecimal Strings and Numeric Types](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md), or <xref:System.Convert>.","leadings":["","> "],"nodes":[{"content":"For information about simple type conversions, see <bpt id=\"p1\">[</bpt>How to: Convert a String to a Number<ept id=\"p1\">](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md)</ept>, <bpt id=\"p2\">[</bpt>How to: Convert a byte Array to an int<ept id=\"p2\">](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md)</ept>, <bpt id=\"p3\">[</bpt>How to: Convert Between Hexadecimal Strings and Numeric Types<ept id=\"p3\">](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md)</ept>, or <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph>.","pos":[9,499],"source":"For information about simple type conversions, see [How to: Convert a String to a Number](../../../csharp/programming-guide/types/how-to-convert-a-string-to-a-number.md), [How to: Convert a byte Array to an int](../../../csharp/programming-guide/types/how-to-convert-a-byte-array-to-an-int.md), [How to: Convert Between Hexadecimal Strings and Numeric Types](../../../csharp/programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md), or <xref:System.Convert>."}]},{"pos":[1210,1217],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This is an example of an explicit conversion operator.","pos":[1221,1275]},{"content":"This operator converts from the type <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph> to a value type called <ph id=\"ph2\">`Digit`</ph>.","pos":[1276,1363],"source":" This operator converts from the type <xref:System.Byte> to a value type called `Digit`."},{"content":"Because not all bytes can be converted to a digit, the conversion is explicit, meaning that a cast must be used, as shown in the <ph id=\"ph1\">`Main`</ph> method.","pos":[1364,1507],"source":" Because not all bytes can be converted to a digit, the conversion is explicit, meaning that a cast must be used, as shown in the `Main` method."},{"pos":[1653,1660],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example demonstrates an implicit conversion operator by defining a conversion operator that undoes what the previous example did: it converts from a value class called <ph id=\"ph1\">`Digit`</ph> to the integral <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph> type.","pos":[1664,1885],"source":"This example demonstrates an implicit conversion operator by defining a conversion operator that undoes what the previous example did: it converts from a value class called `Digit` to the integral <xref:System.Byte> type."},{"content":"Because any digit can be converted to a <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, there's no need to force users to be explicit about the conversion.","pos":[1886,2013],"source":" Because any digit can be converted to a <xref:System.Byte>, there's no need to force users to be explicit about the conversion."},{"pos":[2159,2167],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2171,2230],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[2233,2299],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2302,2416],"content":"<bpt id=\"p1\">[</bpt>Conversion Operators<ept id=\"p1\">](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md)</ept>","source":"[Conversion Operators](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md)"},{"pos":[2419,2474],"content":"<bpt id=\"p1\">[</bpt>is<ept id=\"p1\">](../../../csharp/language-reference/keywords/is.md)</ept>","source":"[is](../../../csharp/language-reference/keywords/is.md)"}]}