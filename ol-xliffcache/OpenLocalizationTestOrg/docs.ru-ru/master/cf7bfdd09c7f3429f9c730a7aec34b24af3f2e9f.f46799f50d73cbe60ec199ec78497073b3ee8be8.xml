{"content":"---\ntitle: \"How to: Define a Conversion Operator (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"procedures [Visual Basic], defining\"\n  - \"operators [Visual Basic], defining\"\n  - \"procedures [Visual Basic], operator\"\n  - \"operators [Visual Basic], overloading\"\n  - \"return values [Visual Basic], Operator procedures\"\n  - \"operator overloading\"\nms.assetid: 54203dfa-c24b-463f-9942-d5153e89e762\n---\n# How to: Define a Conversion Operator (Visual Basic)\nIf you have defined a class or structure, you can define a type conversion operator between the type of your class or structure and another data type (such as `Integer`, `Double`, or `String`).  \n  \n Define the type conversion as a [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md) procedure within the class or structure. All conversion procedures must be `Public Shared`, and each one must specify either [Widening](../../../../visual-basic/language-reference/modifiers/widening.md) or [Narrowing](../../../../visual-basic/language-reference/modifiers/narrowing.md).  \n  \n Defining an operator on a class or structure is also called *overloading* the operator.  \n  \n## Example  \n The following example defines conversion operators between a structure called `digit` and a `Byte`.  \n  \n [!code-vb[VbVbcnProcedures#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnProcedures/VB/Class1.vb#27)]  \n  \n You can test the structure `digit` with the following code.  \n  \n [!code-vb[VbVbcnProcedures#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnProcedures/VB/Class1.vb#28)]  \n  \n## See also\n\n- [Operator Procedures](./operator-procedures.md)\n- [How to: Define an Operator](./how-to-define-an-operator.md)\n- [How to: Call an Operator Procedure](./how-to-call-an-operator-procedure.md)\n- [How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md)\n- [Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md)\n- [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)\n- [How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)\n- [Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)\n- [Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)\n","nodes":[{"pos":[4,407],"embed":true,"restype":"x-metadata","content":"title: \"How to: Define a Conversion Operator (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"procedures [Visual Basic], defining\"\n  - \"operators [Visual Basic], defining\"\n  - \"procedures [Visual Basic], operator\"\n  - \"operators [Visual Basic], overloading\"\n  - \"return values [Visual Basic], Operator procedures\"\n  - \"operator overloading\"\nms.assetid: 54203dfa-c24b-463f-9942-d5153e89e762","nodes":[{"content":"How to: Define a Conversion Operator (Visual Basic)","nodes":[{"pos":[0,51],"content":"How to: Define a Conversion Operator (Visual Basic)","nodes":[{"content":"How to: Define a Conversion Operator (Visual Basic)","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[414,465],"content":"How to: Define a Conversion Operator (Visual Basic)","linkify":"How to: Define a Conversion Operator (Visual Basic)","nodes":[{"content":"How to: Define a Conversion Operator (Visual Basic)","pos":[0,51]}]},{"pos":[466,659],"content":"If you have defined a class or structure, you can define a type conversion operator between the type of your class or structure and another data type (such as <ph id=\"ph1\">`Integer`</ph>, <ph id=\"ph2\">`Double`</ph>, or <ph id=\"ph3\">`String`</ph>).","source":"If you have defined a class or structure, you can define a type conversion operator between the type of your class or structure and another data type (such as `Integer`, `Double`, or `String`)."},{"content":"Define the type conversion as a <bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> procedure within the class or structure.","pos":[666,828],"source":"Define the type conversion as a [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md) procedure within the class or structure."},{"content":"All conversion procedures must be <ph id=\"ph1\">`Public Shared`</ph>, and each one must specify either <bpt id=\"p1\">[</bpt>Widening<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/widening.md)</ept> or <bpt id=\"p2\">[</bpt>Narrowing<ept id=\"p2\">](../../../../visual-basic/language-reference/modifiers/narrowing.md)</ept>.","pos":[829,1074],"source":" All conversion procedures must be `Public Shared`, and each one must specify either [Widening](../../../../visual-basic/language-reference/modifiers/widening.md) or [Narrowing](../../../../visual-basic/language-reference/modifiers/narrowing.md)."},{"pos":[1081,1168],"content":"Defining an operator on a class or structure is also called <bpt id=\"p1\">*</bpt>overloading<ept id=\"p1\">*</ept> the operator.","source":"Defining an operator on a class or structure is also called *overloading* the operator."},{"pos":[1177,1184],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1188,1287],"content":"The following example defines conversion operators between a structure called <ph id=\"ph1\">`digit`</ph> and a <ph id=\"ph2\">`Byte`</ph>.","source":"The following example defines conversion operators between a structure called `digit` and a `Byte`."},{"pos":[1418,1477],"content":"You can test the structure <ph id=\"ph1\">`digit`</ph> with the following code.","source":"You can test the structure `digit` with the following code."},{"pos":[1610,1618],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1622,1669],"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](./operator-procedures.md)</ept>","source":"[Operator Procedures](./operator-procedures.md)"},{"pos":[1672,1732],"content":"<bpt id=\"p1\">[</bpt>How to: Define an Operator<ept id=\"p1\">](./how-to-define-an-operator.md)</ept>","source":"[How to: Define an Operator](./how-to-define-an-operator.md)"},{"pos":[1735,1811],"content":"<bpt id=\"p1\">[</bpt>How to: Call an Operator Procedure<ept id=\"p1\">](./how-to-call-an-operator-procedure.md)</ept>","source":"[How to: Call an Operator Procedure](./how-to-call-an-operator-procedure.md)"},{"pos":[1814,1906],"content":"<bpt id=\"p1\">[</bpt>How to: Use a Class that Defines Operators<ept id=\"p1\">](./how-to-use-a-class-that-defines-operators.md)</ept>","source":"[How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md)"},{"pos":[1909,2007],"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/operator-statement.md)</ept>","source":"[Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md)"},{"pos":[2010,2110],"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept>","source":"[Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)"},{"pos":[2113,2245],"content":"<bpt id=\"p1\">[</bpt>How to: Declare a Structure<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)</ept>","source":"[How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)"},{"pos":[2248,2393],"content":"<bpt id=\"p1\">[</bpt>Implicit and Explicit Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept>","source":"[Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)"},{"pos":[2396,2543],"content":"<bpt id=\"p1\">[</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept>","source":"[Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)"}]}