{"content":"---\ntitle: \"while - C# Reference\"\nms.custom: seodec18\n\nms.date: 05/28/2018\nf1_keywords: \n  - \"while_CSharpKeyword\"\n  - \"while\"\nhelpviewer_keywords: \n  - \"while keyword [C#]\"\nms.assetid: 72a0765c-6852-4aca-b327-4a11cb7f5c59\n---\n# while (C# Reference)\n\nThe `while` statement executes a statement or a block of statements while a specified Boolean expression evaluates to `true`. Because that expression is evaluated before each execution of the loop, a `while` loop executes zero or more times. This differs from the [do](do.md) loop, which executes one or more times.\n\nAt any point within the `while` statement block, you can break out of the loop by using the [break](break.md) statement.\n\nYou can step directly to the evaluation of the `while` expression by using the [continue](continue.md) statement. If the expression evaluates to `true`, execution continues at the first statement in the loop. Otherwise, execution continues at the first statement after the loop.\n\nYou also can exit a `while` loop by the [goto](goto.md), [return](return.md), or [throw](throw.md) statements.\n\n## Example\n\nThe following example shows the usage of the `while` statement. Select **Run** to run the example code. After that you can modify the code and run it again.\n\n[!code-csharp-interactive[while loop example](~/samples/snippets/csharp/keywords/IterationKeywordsExamples.cs#3)]\n\n## C# language specification\n\nFor more information, see [The while statement](~/_csharplang/spec/statements.md#the-while-statement) section of the [C# language specification](../language-specification/index.md).\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Iteration Statements](iteration-statements.md)\n- [do statement](do.md)","nodes":[{"pos":[4,222],"embed":true,"restype":"x-metadata","content":"title: \"while - C# Reference\"\nms.custom: seodec18\n\nms.date: 05/28/2018\nf1_keywords: \n  - \"while_CSharpKeyword\"\n  - \"while\"\nhelpviewer_keywords: \n  - \"while keyword [C#]\"\nms.assetid: 72a0765c-6852-4aca-b327-4a11cb7f5c59","nodes":[{"content":"while - C# Reference","nodes":[{"pos":[0,20],"content":"while - C# Reference","nodes":[{"content":"while - C# Reference","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[229,249],"content":"while (C# Reference)","linkify":"while (C# Reference)","nodes":[{"content":"while (C# Reference)","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">`while`</ph> statement executes a statement or a block of statements while a specified Boolean expression evaluates to <ph id=\"ph2\">`true`</ph>.","pos":[251,376],"source":"The `while` statement executes a statement or a block of statements while a specified Boolean expression evaluates to `true`."},{"content":"Because that expression is evaluated before each execution of the loop, a <ph id=\"ph1\">`while`</ph> loop executes zero or more times.","pos":[377,492],"source":" Because that expression is evaluated before each execution of the loop, a `while` loop executes zero or more times."},{"content":"This differs from the <bpt id=\"p1\">[</bpt>do<ept id=\"p1\">](do.md)</ept> loop, which executes one or more times.","pos":[493,566],"source":" This differs from the [do](do.md) loop, which executes one or more times."},{"pos":[568,688],"content":"At any point within the <ph id=\"ph1\">`while`</ph> statement block, you can break out of the loop by using the <bpt id=\"p1\">[</bpt>break<ept id=\"p1\">](break.md)</ept> statement.","source":"At any point within the `while` statement block, you can break out of the loop by using the [break](break.md) statement."},{"content":"You can step directly to the evaluation of the <ph id=\"ph1\">`while`</ph> expression by using the <bpt id=\"p1\">[</bpt>continue<ept id=\"p1\">](continue.md)</ept> statement.","pos":[690,803],"source":"You can step directly to the evaluation of the `while` expression by using the [continue](continue.md) statement."},{"content":"If the expression evaluates to <ph id=\"ph1\">`true`</ph>, execution continues at the first statement in the loop.","pos":[804,898],"source":" If the expression evaluates to `true`, execution continues at the first statement in the loop."},{"content":"Otherwise, execution continues at the first statement after the loop.","pos":[899,968]},{"pos":[970,1080],"content":"You also can exit a <ph id=\"ph1\">`while`</ph> loop by the <bpt id=\"p1\">[</bpt>goto<ept id=\"p1\">](goto.md)</ept>, <bpt id=\"p2\">[</bpt>return<ept id=\"p2\">](return.md)</ept>, or <bpt id=\"p3\">[</bpt>throw<ept id=\"p3\">](throw.md)</ept> statements.","source":"You also can exit a `while` loop by the [goto](goto.md), [return](return.md), or [throw](throw.md) statements."},{"pos":[1085,1092],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the usage of the <ph id=\"ph1\">`while`</ph> statement.","pos":[1094,1157],"source":"The following example shows the usage of the `while` statement."},{"content":"Select <bpt id=\"p1\">**</bpt>Run<ept id=\"p1\">**</ept> to run the example code.","pos":[1158,1197],"source":" Select **Run** to run the example code."},{"content":"After that you can modify the code and run it again.","pos":[1198,1250]},{"pos":[1370,1395],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[1397,1578],"content":"For more information, see <bpt id=\"p1\">[</bpt>The while statement<ept id=\"p1\">](~/_csharplang/spec/statements.md#the-while-statement)</ept> section of the <bpt id=\"p2\">[</bpt>C# language specification<ept id=\"p2\">](../language-specification/index.md)</ept>.","source":"For more information, see [The while statement](~/_csharplang/spec/statements.md#the-while-statement) section of the [C# language specification](../language-specification/index.md)."},{"pos":[1583,1591],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1595,1622],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1625,1681],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1684,1707],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1710,1757],"content":"<bpt id=\"p1\">[</bpt>Iteration Statements<ept id=\"p1\">](iteration-statements.md)</ept>","source":"[Iteration Statements](iteration-statements.md)"},{"pos":[1760,1781],"content":"<bpt id=\"p1\">[</bpt>do statement<ept id=\"p1\">](do.md)</ept>","source":"[do statement](do.md)"}]}