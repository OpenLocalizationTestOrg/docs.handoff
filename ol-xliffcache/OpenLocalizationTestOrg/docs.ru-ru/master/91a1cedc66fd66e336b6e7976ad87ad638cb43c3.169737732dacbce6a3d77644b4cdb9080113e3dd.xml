{"content":"---\ntitle: \"Overridable (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"Overridable\"\n  - \"vb.Overridable\"\nhelpviewer_keywords: \n  - \"elements [Visual Basic], concrete\"\n  - \"properties [Visual Basic], redefining\"\n  - \"overriding, Overridable keyword\"\n  - \"elements [Visual Basic], virtual\"\n  - \"virtual [elements VB]\"\n  - \"procedures [Visual Basic], overriding\"\n  - \"concrete [elements VB]\"\n  - \"procedures [Visual Basic], redefining\"\n  - \"Overridable keyword [Visual Basic]\"\n  - \"properties [Visual Basic], overriding\"\nms.assetid: 612581e7-8a4c-4a5d-beff-3402fffa6f35\n---\n# Overridable (Visual Basic)\nSpecifies that a property or procedure can be overridden by an identically named property or procedure in a derived class.  \n  \n## Remarks  \n The `Overridable` modifier allows a property or method in a class to be overridden in a derived class. The [NotOverridable](../../../visual-basic/language-reference/modifiers/notoverridable.md) modifier prevents a property or method from being overridden in a derived class.  For more information, see [Inheritance Basics](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md).  \n  \n If the `Overridable` or `NotOverridable` modifier is not specified, the default setting depends on whether the property or method overrides a base class property or method. If the property or method overrides a base class property or method, the default setting is `Overridable`; otherwise, it is `NotOverridable`.  \n  \n You can shadow or override to redefine an inherited element, but there are significant differences between the two approaches. For more information, see [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md).  \n  \n An element that can be overridden is sometimes referred to as a *virtual* element. If it can be overridden, but does not have to be, it is sometimes also called a *concrete* element.  \n  \n You can use `Overridable` only in a property or procedure declaration statement.  \n  \n## Combined Modifiers  \n You cannot specify `Overridable` or `NotOverridable` for a `Private` method.  \n  \n You cannot specify `Overridable` together with `MustOverride`, `NotOverridable`, or `Shared` in the same declaration.  \n  \n Because an overriding element is implicitly overridable, you cannot combine `Overridable` with `Overrides`.  \n  \n## Usage  \n The `Overridable` modifier can be used in these contexts:  \n  \n [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)  \n  \n [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)  \n  \n [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n## See also\n\n- [Modifiers](../../../visual-basic/language-reference/modifiers/index.md)\n- [Inheritance Basics](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)\n- [MustOverride](../../../visual-basic/language-reference/modifiers/mustoverride.md)\n- [NotOverridable](../../../visual-basic/language-reference/modifiers/notoverridable.md)\n- [Overrides](../../../visual-basic/language-reference/modifiers/overrides.md)\n- [Keywords](../../../visual-basic/language-reference/keywords/index.md)\n- [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)\n","nodes":[{"pos":[4,574],"embed":true,"restype":"x-metadata","content":"title: \"Overridable (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"Overridable\"\n  - \"vb.Overridable\"\nhelpviewer_keywords: \n  - \"elements [Visual Basic], concrete\"\n  - \"properties [Visual Basic], redefining\"\n  - \"overriding, Overridable keyword\"\n  - \"elements [Visual Basic], virtual\"\n  - \"virtual [elements VB]\"\n  - \"procedures [Visual Basic], overriding\"\n  - \"concrete [elements VB]\"\n  - \"procedures [Visual Basic], redefining\"\n  - \"Overridable keyword [Visual Basic]\"\n  - \"properties [Visual Basic], overriding\"\nms.assetid: 612581e7-8a4c-4a5d-beff-3402fffa6f35","nodes":[{"content":"Overridable (Visual Basic)","nodes":[{"pos":[0,26],"content":"Overridable (Visual Basic)","nodes":[{"content":"Overridable (Visual Basic)","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[581,607],"content":"Overridable (Visual Basic)","linkify":"Overridable (Visual Basic)","nodes":[{"content":"Overridable (Visual Basic)","pos":[0,26]}]},{"content":"Specifies that a property or procedure can be overridden by an identically named property or procedure in a derived class.","pos":[608,730]},{"pos":[739,746],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`Overridable`</ph> modifier allows a property or method in a class to be overridden in a derived class.","pos":[750,852],"source":"The `Overridable` modifier allows a property or method in a class to be overridden in a derived class."},{"content":"The <bpt id=\"p1\">[</bpt>NotOverridable<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/notoverridable.md)</ept> modifier prevents a property or method from being overridden in a derived class.","pos":[853,1024],"source":" The [NotOverridable](../../../visual-basic/language-reference/modifiers/notoverridable.md) modifier prevents a property or method from being overridden in a derived class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Inheritance Basics<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept>.","pos":[1026,1174],"source":"  For more information, see [Inheritance Basics](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)."},{"content":"If the <ph id=\"ph1\">`Overridable`</ph> or <ph id=\"ph2\">`NotOverridable`</ph> modifier is not specified, the default setting depends on whether the property or method overrides a base class property or method.","pos":[1181,1353],"source":"If the `Overridable` or `NotOverridable` modifier is not specified, the default setting depends on whether the property or method overrides a base class property or method."},{"content":"If the property or method overrides a base class property or method, the default setting is <ph id=\"ph1\">`Overridable`</ph>; otherwise, it is <ph id=\"ph2\">`NotOverridable`</ph>.","pos":[1354,1495],"source":" If the property or method overrides a base class property or method, the default setting is `Overridable`; otherwise, it is `NotOverridable`."},{"content":"You can shadow or override to redefine an inherited element, but there are significant differences between the two approaches.","pos":[1502,1628]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Shadowing in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept>.","pos":[1629,1773],"source":" For more information, see [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)."},{"content":"An element that can be overridden is sometimes referred to as a <bpt id=\"p1\">*</bpt>virtual<ept id=\"p1\">*</ept> element.","pos":[1780,1862],"source":"An element that can be overridden is sometimes referred to as a *virtual* element."},{"content":"If it can be overridden, but does not have to be, it is sometimes also called a <bpt id=\"p1\">*</bpt>concrete<ept id=\"p1\">*</ept> element.","pos":[1863,1962],"source":" If it can be overridden, but does not have to be, it is sometimes also called a *concrete* element."},{"pos":[1969,2049],"content":"You can use <ph id=\"ph1\">`Overridable`</ph> only in a property or procedure declaration statement.","source":"You can use `Overridable` only in a property or procedure declaration statement."},{"pos":[2058,2076],"content":"Combined Modifiers","linkify":"Combined Modifiers","nodes":[{"content":"Combined Modifiers","pos":[0,18]}]},{"pos":[2080,2156],"content":"You cannot specify <ph id=\"ph1\">`Overridable`</ph> or <ph id=\"ph2\">`NotOverridable`</ph> for a <ph id=\"ph3\">`Private`</ph> method.","source":"You cannot specify `Overridable` or `NotOverridable` for a `Private` method."},{"pos":[2163,2280],"content":"You cannot specify <ph id=\"ph1\">`Overridable`</ph> together with <ph id=\"ph2\">`MustOverride`</ph>, <ph id=\"ph3\">`NotOverridable`</ph>, or <ph id=\"ph4\">`Shared`</ph> in the same declaration.","source":"You cannot specify `Overridable` together with `MustOverride`, `NotOverridable`, or `Shared` in the same declaration."},{"pos":[2287,2394],"content":"Because an overriding element is implicitly overridable, you cannot combine <ph id=\"ph1\">`Overridable`</ph> with <ph id=\"ph2\">`Overrides`</ph>.","source":"Because an overriding element is implicitly overridable, you cannot combine `Overridable` with `Overrides`."},{"pos":[2403,2408],"content":"Usage","linkify":"Usage","nodes":[{"content":"Usage","pos":[0,5]}]},{"pos":[2412,2469],"content":"The <ph id=\"ph1\">`Overridable`</ph> modifier can be used in these contexts:","source":"The `Overridable` modifier can be used in these contexts:"},{"pos":[2476,2571],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[2578,2673],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[2680,2765],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[2774,2782],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2786,2858],"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/index.md)</ept>","source":"[Modifiers](../../../visual-basic/language-reference/modifiers/index.md)"},{"pos":[2861,2982],"content":"<bpt id=\"p1\">[</bpt>Inheritance Basics<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept>","source":"[Inheritance Basics](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)"},{"pos":[2985,3067],"content":"<bpt id=\"p1\">[</bpt>MustOverride<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/mustoverride.md)</ept>","source":"[MustOverride](../../../visual-basic/language-reference/modifiers/mustoverride.md)"},{"pos":[3070,3156],"content":"<bpt id=\"p1\">[</bpt>NotOverridable<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/notoverridable.md)</ept>","source":"[NotOverridable](../../../visual-basic/language-reference/modifiers/notoverridable.md)"},{"pos":[3159,3235],"content":"<bpt id=\"p1\">[</bpt>Overrides<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/overrides.md)</ept>","source":"[Overrides](../../../visual-basic/language-reference/modifiers/overrides.md)"},{"pos":[3238,3308],"content":"<bpt id=\"p1\">[</bpt>Keywords<ept id=\"p1\">](../../../visual-basic/language-reference/keywords/index.md)</ept>","source":"[Keywords](../../../visual-basic/language-reference/keywords/index.md)"},{"pos":[3311,3428],"content":"<bpt id=\"p1\">[</bpt>Shadowing in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept>","source":"[Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)"}]}