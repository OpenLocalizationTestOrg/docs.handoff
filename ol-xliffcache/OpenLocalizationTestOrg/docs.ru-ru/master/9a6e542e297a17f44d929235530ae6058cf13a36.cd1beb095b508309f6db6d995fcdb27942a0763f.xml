{"content":"---\ntitle: \"Structure Variables (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"structures [Visual Basic], variables\"\n  - \"structures [Visual Basic], structure variables\"\n  - \"variables [Visual Basic], structure variables\"\n  - \"structure variables [Visual Basic]\"\nms.assetid: 156872f8-aabc-4454-8e2d-f2253c3c13c9\n---\n# Structure Variables (Visual Basic)\nOnce you have created a structure, you can declare procedure-level and module-level variables as that type. For example, you can create a structure that records information about a computer system. The following example demonstrates this.  \n  \n```  \nPublic Structure systemInfo  \n    Public cPU As String  \n    Public memory As Long  \n    Public purchaseDate As Date  \nEnd Structure  \n```  \n  \n You can now declare variables of that type. The following declaration illustrates this.  \n  \n```  \nDim mySystem, yourSystem As systemInfo  \n```  \n  \n> [!NOTE]\n>  In classes and modules, structures declared using the [Dim Statement](../../../../visual-basic/language-reference/statements/dim-statement.md) default to public access. If you intend a structure to be private, make sure you declare it using the [Private](../../../../visual-basic/language-reference/modifiers/private.md) keyword.  \n  \n## Access to Structure Values  \n To assign and retrieve values from the elements of a structure variable, you use the same syntax as you use to set and get properties on an object. You place the member access operator (`.`) between the structure variable name and the element name. The following example accesses elements of the variables previously declared as type `systemInfo`.  \n  \n```  \nmySystem.cPU = \"486\"  \nDim tooOld As Boolean  \nIf yourSystem.purchaseDate < #1/1/1992# Then tooOld = True  \n```  \n  \n## Assigning Structure Variables  \n You can also assign one variable to another if both are of the same structure type. This copies all the elements of one structure to the corresponding elements in the other. The following declaration illustrates this.  \n  \n```  \nyourSystem = mySystem  \n```  \n  \n If a structure element is a reference type, such as a `String`, `Object`, or array, the pointer to the data is copied. In the previous example, if `systemInfo` had included an object variable, then the preceding example would have copied the pointer from `mySystem` to `yourSystem`, and a change to the object's data through one structure would be in effect when accessed through the other structure.  \n  \n## See also\n\n- [Data Types](../../../../visual-basic/programming-guide/language-features/data-types/index.md)\n- [Elementary Data Types](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)\n- [Composite Data Types](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)\n- [Value Types and Reference Types](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)\n- [Structures](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)\n- [Troubleshooting Data Types](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)\n- [How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)\n- [Structures and Other Programming Elements](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)\n- [Structures and Classes](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)\n- [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)\n","nodes":[{"pos":[4,327],"embed":true,"restype":"x-metadata","content":"title: \"Structure Variables (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"structures [Visual Basic], variables\"\n  - \"structures [Visual Basic], structure variables\"\n  - \"variables [Visual Basic], structure variables\"\n  - \"structure variables [Visual Basic]\"\nms.assetid: 156872f8-aabc-4454-8e2d-f2253c3c13c9","nodes":[{"content":"Structure Variables (Visual Basic)","nodes":[{"pos":[0,34],"content":"Structure Variables (Visual Basic)","nodes":[{"content":"Structure Variables (Visual Basic)","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[334,368],"content":"Structure Variables (Visual Basic)","linkify":"Structure Variables (Visual Basic)","nodes":[{"content":"Structure Variables (Visual Basic)","pos":[0,34]}]},{"content":"Once you have created a structure, you can declare procedure-level and module-level variables as that type.","pos":[369,476]},{"content":"For example, you can create a structure that records information about a computer system.","pos":[477,566]},{"content":"The following example demonstrates this.","pos":[567,607]},{"content":"You can now declare variables of that type.","pos":[764,807]},{"content":"The following declaration illustrates this.","pos":[808,851]},{"pos":[915,1255],"content":"[!NOTE]\n In classes and modules, structures declared using the [Dim Statement](../../../../visual-basic/language-reference/statements/dim-statement.md) default to public access. If you intend a structure to be private, make sure you declare it using the [Private](../../../../visual-basic/language-reference/modifiers/private.md) keyword.","leadings":["","> "],"nodes":[{"content":"In classes and modules, structures declared using the [Dim Statement](../../../../visual-basic/language-reference/statements/dim-statement.md) default to public access. If you intend a structure to be private, make sure you declare it using the [Private](../../../../visual-basic/language-reference/modifiers/private.md) keyword.","pos":[9,338],"nodes":[{"content":"In classes and modules, structures declared using the <bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept> default to public access.","pos":[0,168],"source":"In classes and modules, structures declared using the [Dim Statement](../../../../visual-basic/language-reference/statements/dim-statement.md) default to public access."},{"content":"If you intend a structure to be private, make sure you declare it using the <bpt id=\"p1\">[</bpt>Private<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/private.md)</ept> keyword.","pos":[169,329],"source":" If you intend a structure to be private, make sure you declare it using the [Private](../../../../visual-basic/language-reference/modifiers/private.md) keyword."}]}]},{"pos":[1264,1290],"content":"Access to Structure Values","linkify":"Access to Structure Values","nodes":[{"content":"Access to Structure Values","pos":[0,26]}]},{"content":"To assign and retrieve values from the elements of a structure variable, you use the same syntax as you use to set and get properties on an object.","pos":[1294,1441]},{"content":"You place the member access operator (<ph id=\"ph1\">`.`</ph>) between the structure variable name and the element name.","pos":[1442,1542],"source":" You place the member access operator (`.`) between the structure variable name and the element name."},{"content":"The following example accesses elements of the variables previously declared as type <ph id=\"ph1\">`systemInfo`</ph>.","pos":[1543,1641],"source":" The following example accesses elements of the variables previously declared as type `systemInfo`."},{"pos":[1773,1802],"content":"Assigning Structure Variables","linkify":"Assigning Structure Variables","nodes":[{"content":"Assigning Structure Variables","pos":[0,29]}]},{"content":"You can also assign one variable to another if both are of the same structure type.","pos":[1806,1889]},{"content":"This copies all the elements of one structure to the corresponding elements in the other.","pos":[1890,1979]},{"content":"The following declaration illustrates this.","pos":[1980,2023]},{"content":"If a structure element is a reference type, such as a <ph id=\"ph1\">`String`</ph>, <ph id=\"ph2\">`Object`</ph>, or array, the pointer to the data is copied.","pos":[2069,2187],"source":"If a structure element is a reference type, such as a `String`, `Object`, or array, the pointer to the data is copied."},{"content":"In the previous example, if <ph id=\"ph1\">`systemInfo`</ph> had included an object variable, then the preceding example would have copied the pointer from <ph id=\"ph2\">`mySystem`</ph> to <ph id=\"ph3\">`yourSystem`</ph>, and a change to the object's data through one structure would be in effect when accessed through the other structure.","pos":[2188,2469],"source":" In the previous example, if `systemInfo` had included an object variable, then the preceding example would have copied the pointer from `mySystem` to `yourSystem`, and a change to the object's data through one structure would be in effect when accessed through the other structure."},{"pos":[2478,2486],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2490,2584],"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>","source":"[Data Types](../../../../visual-basic/programming-guide/language-features/data-types/index.md)"},{"pos":[2587,2708],"content":"<bpt id=\"p1\">[</bpt>Elementary Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)</ept>","source":"[Elementary Data Types](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)"},{"pos":[2711,2830],"content":"<bpt id=\"p1\">[</bpt>Composite Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)</ept>","source":"[Composite Data Types](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)"},{"pos":[2833,2974],"content":"<bpt id=\"p1\">[</bpt>Value Types and Reference Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept>","source":"[Value Types and Reference Types](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)"},{"pos":[2977,3076],"content":"<bpt id=\"p1\">[</bpt>Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept>","source":"[Structures](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)"},{"pos":[3079,3210],"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept>","source":"[Troubleshooting Data Types](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)"},{"pos":[3213,3345],"content":"<bpt id=\"p1\">[</bpt>How to: Declare a Structure<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)</ept>","source":"[How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)"},{"pos":[3348,3509],"content":"<bpt id=\"p1\">[</bpt>Structures and Other Programming Elements<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)</ept>","source":"[Structures and Other Programming Elements](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)"},{"pos":[3512,3635],"content":"<bpt id=\"p1\">[</bpt>Structures and Classes<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)</ept>","source":"[Structures and Classes](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)"},{"pos":[3638,3738],"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept>","source":"[Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)"}]}