{"content":"---\ntitle: \"IHostMemoryManager::VirtualFree Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IHostMemoryManager.VirtualFree\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualFree\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualFree method [.NET Framework hosting]\"\n  - \"VirtualFree method [.NET Framework hosting]\"\nms.assetid: 1a436e89-eb28-4d15-bcf1-a072f86dbd99\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# IHostMemoryManager::VirtualFree Method\nServes as a logical wrapper for the corresponding Win32 function. The Win32 implementation of `VirtualFree` releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process.  \n  \n## Syntax  \n  \n```  \nHRESULT VirtualFree (  \n    [in] LPVOID  lpAddress,  \n    [in] SIZE_T  dwSize,  \n    [in] DWORD   dwFreeType  \n);  \n```  \n  \n#### Parameters  \n `lpAddress`  \n [in] A pointer to the base address of the virtual memory pages to be freed.  \n  \n `dwSize`  \n [in] The size, in bytes, of the region to be freed.  \n  \n `dwFreeType`  \n [in] The type of freeing operation.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`VirtualFree` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n|HOST_E_INVALIDOPERATION|An attempt was made to free memory that was not allocated through the host.|  \n  \n## Remarks  \n `VirtualFree` frees virtual memory pages associated with the `lpAddress` parameter through an earlier call to the [IHostMemoryManager::VirtualAlloc](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-virtualalloc-method.md) function. Attempts to free memory that was not allocated through the host should return HOST_E_INVALIDOPERATION.  \n  \n The semantics are identical to those of the Win32 implementation of `VirtualFree`. For more information, see the Windows Platform documentation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)   \n [IHostMalloc Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmalloc-interface.md)","nodes":[{"pos":[4,710],"nodes":[{"content":"IHostMemoryManager::VirtualFree Method | Microsoft Docs","nodes":[{"pos":[0,55],"content":"IHostMemoryManager::VirtualFree Method | Microsoft Docs","nodes":[{"content":"IHostMemoryManager::VirtualFree Method | Microsoft Docs","pos":[0,55]}]}],"pos":[6,64],"yaml":true}],"content":"title: \"IHostMemoryManager::VirtualFree Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IHostMemoryManager.VirtualFree\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualFree\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualFree method [.NET Framework hosting]\"\n  - \"VirtualFree method [.NET Framework hosting]\"\nms.assetid: 1a436e89-eb28-4d15-bcf1-a072f86dbd99\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[717,755],"content":"IHostMemoryManager::VirtualFree Method","linkify":"IHostMemoryManager::VirtualFree Method","nodes":[{"content":"IHostMemoryManager::VirtualFree Method","pos":[0,38]}]},{"content":"Serves as a logical wrapper for the corresponding Win32 function.","pos":[756,821]},{"content":"The Win32 implementation of <ph id=\"ph1\">`VirtualFree`</ph> releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process.","pos":[822,985],"source":" The Win32 implementation of `VirtualFree` releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process."},{"pos":[994,1000],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1142,1152],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the base address of the virtual memory pages to be freed.","pos":[1171,1246]},{"content":"[in] The size, in bytes, of the region to be freed.","pos":[1265,1316]},{"content":"[in] The type of freeing operation.","pos":[1339,1374]},{"pos":[1383,1395],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1402,1409]},{"content":"Description","pos":[1410,1421]},{"content":"S_OK","pos":[1462,1466]},{"pos":[1467,1503],"content":"<ph id=\"ph1\">`VirtualFree`</ph> returned successfully.","source":"`VirtualFree` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1508,1530]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1531,1695]},{"content":"HOST_E_TIMEOUT","pos":[1700,1714]},{"content":"The call timed out.","pos":[1715,1734]},{"content":"HOST_E_NOT_OWNER","pos":[1739,1755]},{"content":"The caller does not own the lock.","pos":[1756,1789]},{"content":"HOST_E_ABANDONED","pos":[1794,1810]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1811,1883]},{"content":"E_FAIL","pos":[1888,1894]},{"content":"An unknown catastrophic failure occurred.","pos":[1895,1936]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1937,2014]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[2015,2081]},{"content":"HOST_E_INVALIDOPERATION","pos":[2086,2109]},{"content":"An attempt was made to free memory that was not allocated through the host.","pos":[2110,2185]},{"pos":[2195,2202],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`VirtualFree`</ph> frees virtual memory pages associated with the <ph id=\"ph2\">`lpAddress`</ph> parameter through an earlier call to the <bpt id=\"p1\">[</bpt>IHostMemoryManager::VirtualAlloc<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-virtualalloc-method.md)</ept> function.","pos":[2206,2456],"source":"`VirtualFree` frees virtual memory pages associated with the `lpAddress` parameter through an earlier call to the [IHostMemoryManager::VirtualAlloc](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-virtualalloc-method.md) function."},{"content":"Attempts to free memory that was not allocated through the host should return HOST_E_INVALIDOPERATION.","pos":[2457,2559]},{"content":"The semantics are identical to those of the Win32 implementation of <ph id=\"ph1\">`VirtualFree`</ph>.","pos":[2566,2648],"source":"The semantics are identical to those of the Win32 implementation of `VirtualFree`."},{"content":"For more information, see the Windows Platform documentation.","pos":[2649,2710]},{"pos":[2719,2731],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2735,2839],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2846,2867],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2874,2924],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2931,3039],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3048,3056],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IHostMemoryManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3060,3173],"source":"[IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>IHostMalloc Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmalloc-interface.md)</ept>","pos":[3177,3275],"source":"[IHostMalloc Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmalloc-interface.md)"}]}