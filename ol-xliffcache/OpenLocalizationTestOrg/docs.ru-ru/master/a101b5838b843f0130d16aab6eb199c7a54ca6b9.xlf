<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="additional-security-considerations-in-windows-forms.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a101b5838b843f0130d16aab6eb199c7a54ca6b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\additional-security-considerations-in-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84d08f17e5ca9e4c7b1103da7f7f14cd30481da7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8191a41e802c5e7c30415502d21132d1e14b7226</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Additional Security Considerations in Windows Forms</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Additional Security Considerations in Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> security settings might cause your application to run differently in a partial trust environment than on your local computer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> restricts access to such critical local resources as the file system, network, and unmanaged APIs, among other things.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The security settings affect the ability to call the Microsoft Windows API or other APIs that cannot be verified by the security system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Security also affects other aspects of your application, including file and data access, and printing.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about file and data access in a partial trust environment, see <bpt id="p1">[</bpt>More Secure File and Data Access in Windows Forms<ept id="p1">](more-secure-file-and-data-access-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information about printing in a partial trust environment, see <bpt id="p1">[</bpt>More Secure Printing in Windows Forms<ept id="p1">](more-secure-printing-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following sections discuss how to work with the Clipboard, perform window manipulation, and call the Windows API from applications that are running in a partial trust environment.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Clipboard Access</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> class controls access to the Clipboard, and the associated <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionClipboard&gt;</ph> enumeration value indicates the level of access.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table shows the possible permission levels.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>UIPermissionClipboard value</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Clipboard can be used without restriction.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Clipboard can be used with some restrictions.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The ability to put data on the Clipboard (Copy or Cut command operations) is unrestricted.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Intrinsic controls that accept paste, such as a text box, can accept Clipboard data, but user controls cannot programmatically read from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Clipboard cannot be used.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By default, the Local Intranet zone receives <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermissionClipboard.AllClipboard&gt;</ph> access and the Internet zone receives <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionClipboard.OwnClipboard&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that the application can copy data to the Clipboard, but the application cannot programmatically paste to or read from the Clipboard.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These restrictions prevent programs without full trust from reading content copied to the Clipboard by another application.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If your application requires full Clipboard access but you do not have the permissions, you will have to elevate the permissions for your application.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information about elevating permissions, see <bpt id="p1">[</bpt>General Security Policy Administration<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ed5htz45(v=vs.100))</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Window Manipulation</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> class also controls permission to perform window manipulation and other UI-related actions, and the associated <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow&gt;</ph> enumeration value indicates the level of access.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following table shows the possible permission levels.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>By default, the Local Intranet zone receives <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph> access and the Internet zone receives <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This means that in the Internet zone, the application can perform most windowing and UI actions, but the window's appearance will be modified.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The modified window displays a balloon notification when first run, contains modified title bar text, and requires a close button on the title bar.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The balloon notification and the title bar identify to the user of the application that the application is running under partial trust.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>UIPermissionWindow value</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Users can use all windows and user input events without restriction.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Users can use only safer top-level windows and safer subwindows for drawing, and can use only user input events for the user interface within those top-level windows and subwindows.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>These safer windows are clearly labeled and have minimum and maximum size restrictions.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The restrictions prevent potentially harmful spoofing attacks, such as imitating system logon screens or the system desktop, and restricts programmatic access to parent windows, focus-related APIs, and use of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> control,</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Users can use only safer subwindows for drawing, and can use only user input events for the user interface within that subwindow.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A control displayed within a browser is an example of a safer subwindow.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Users cannot use any windows or user interface events.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>No user interface can be used.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each permission level identified by the <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermissionWindow&gt;</ph> enumeration allows fewer actions than the level above it.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following tables indicate the actions that are restricted by the <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For exact permissions that are required for each member, see the reference for that member in the .NET Framework class library documentation.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> permission restricts the actions listed in the following table.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Component</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Restricted actions</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SafeTopLevelCaptionFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-   Getting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">`Region`</ph> property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> , <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph>, or <ph id="ph7">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> method if the control returned is not a child of the calling control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-   Modify control focus inside a container control.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Clip%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessTabKey%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-   Getting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property below 50%.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormWindowState.Minimized&gt;</ph> programmatically.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-   Using the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.None&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph><ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   Using the <ph id="ph1">&lt;xref:System.Windows.Forms.NotifyIcon&gt;</ph> component is completely restricted.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows&gt;</ph> value restricts the actions listed in the following table, in addition to the restrictions placed by the <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Component</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Restricted actions</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-   Showing a dialog box derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-   Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-   Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Hosting Third-Party Controls</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Another kind of window manipulation can occur if your forms host third-party controls.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A third-party control is any custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> that you have not developed and compiled yourself.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Although the hosting scenario is hard to exploit, it is theoretically possible for a third-party control to expand its rendering surface to cover the entire area of your form.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This control could then mimic a critical dialog box, and request information such as username/password combinations or bank account numbers from your users.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To limit this potential risk, use third-party controls only from vendors you can trust.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you use third-party controls you have downloaded from an unverifiable source, we recommend that you review the source code for potential exploits.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>After you've verified that the source is non-malicious, you should compile the assembly yourself to ensure that the source matches the assembly.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Windows API Calls</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If your application design requires calling a function from the Windows API, you are accessing unmanaged code.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In this case the code's actions to the window or operating system cannot be determined when you are working with Windows API calls or values.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> value of the <ph id="ph3">&lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;</ph> enumeration control access to unmanaged code.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An application can access unmanaged code only when it is granted the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>By default, only applications that are running locally can call unmanaged code.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Some Windows Forms members provide unmanaged access that requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following table lists the members in the <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> namespace that require the permission.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information about the permissions that are required for a member, see the .NET Framework class library documentation.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Component</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">`Exit`</ph> method</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.OwnerWndProc%2A&gt;</ph>\ method</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.Reset%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefWndProc%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Help.ShowHelp%2A&gt;</ph> methods</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Help.ShowHelpIndex%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Screen.FromHandle%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If your application does not have permission to call unmanaged code, your application must request <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission, or you must consider alternative ways of implementing features; in many cases, Windows Forms provides a managed alternative to Windows API functions.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If no alternative means exist and the application must access unmanaged code, you will have to elevate the permissions for the application.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Permission to call unmanaged code allows an application to perform most anything.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Therefore, permission to call unmanaged code should only be granted for applications that come from a trusted source.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Alternatively, depending on the application, the piece of application functionality that makes the call to unmanaged code could be optional, or enabled in the full trust environment only.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about dangerous permissions, see <bpt id="p1">[</bpt>Dangerous Permissions and Policy Administration<ept id="p1">](../misc/dangerous-permissions-and-policy-administration.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For more information about elevating permissions, see <bpt id="p1">[</bpt>General Security Policy Administration<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ed5htz45(v=vs.100))</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>More Secure File and Data Access in Windows Forms<ept id="p1">](more-secure-file-and-data-access-in-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>More Secure Printing in Windows Forms<ept id="p1">](more-secure-printing-in-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security in Windows Forms Overview<ept id="p1">](security-in-windows-forms-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms Security<ept id="p1">](windows-forms-security.md)</ept></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing ClickOnce Applications<ept id="p1">](/visualstudio/deployment/securing-clickonce-applications)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>