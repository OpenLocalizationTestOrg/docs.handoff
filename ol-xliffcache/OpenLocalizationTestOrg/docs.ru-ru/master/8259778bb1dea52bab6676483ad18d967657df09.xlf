<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="enumerations-and-name-qualification.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8259778bb1dea52bab6676483ad18d967657df09</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\constants-enums\enumerations-and-name-qualification.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94f3b5ebdccabe3cf73d1a2898c122d4078bcb18</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6a3d6e80321501733677c21da15379dd4812412</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Enumerations and Name Qualification (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enumerations and Name Qualification (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Normally, when referring to a member of an enumeration, you must qualify the member name with the enumeration name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, to refer to the <ph id="ph1">`Sunday`</ph> member of your <ph id="ph2">`Days`</ph> enumeration, you would use the following syntax:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using the Imports Statement</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can avoid using fully qualified names by adding an <ph id="ph1">`Imports`</ph> statement to the namespace declarations section of your code, as in the following example:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Imports`</ph> statement imports namespace names from referenced projects and assemblies and from within the same project as the module in which the statement appears.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Once this statement is added, you can refer to your enumeration members without qualification, as in the following example:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By organizing sets of related constants in enumerations, you can use the same constant names in different contexts.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, you can use the same names for the weekday constants in the <ph id="ph1">`Days`</ph> and <ph id="ph2">`WorkDays`</ph> enumerations.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`Imports`</ph> statement with your enumerations, you must be careful to avoid ambiguous references.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Assuming that <ph id="ph1">`Monday`</ph> is a member of both the <ph id="ph2">`Days`</ph> enumeration and the <ph id="ph3">`Workdays`</ph> enumeration, this code generates a compiler error.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To avoid ambiguous references when referring to an individual constant, qualify the constant name with its enumeration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following code refers to the <ph id="ph1">`Saturday`</ph> constants in the <ph id="ph2">`Days`</ph> and <ph id="ph3">`WorkDays`</ph> enumerations.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constants and Enumerations<ept id="p1">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Declare an Enumeration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Refer to an Enumeration Member<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Iterate Through An Enumeration in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-iterate-through-an-enumeration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Determine the String Associated with an Enumeration Value<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-determine-the-string-associated-with-an-enumeration-value.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When to Use an Enumeration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constant and Literal Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constant-and-literal-data-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enum Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/enum-statement.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Imports Statement (.NET Namespace and Type)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>