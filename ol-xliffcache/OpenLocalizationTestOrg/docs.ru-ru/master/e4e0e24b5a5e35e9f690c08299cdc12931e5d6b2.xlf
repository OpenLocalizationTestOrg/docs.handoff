<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-401ea83" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4e0e24b5a5e35e9f690c08299cdc12931e5d6b2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\whats-new.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9d55805ad8b1f1bcc8b9366c6516aa26c85ef3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4848cf785c880c90704107b45d805ced5b29759b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>What&amp;#39;s New in Windows Communication Foundation 4.5 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What&amp;#39;s New in Windows Communication Foundation 4.5</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses features new to <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>WCF Simplification Features</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Much work has been done to make WCF 4.5 applications easier to develop and maintain.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>WCF Simplification Features<ept id="p1">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Task-based Async Support</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By default, Add Service Reference generates Task-returning async service operation methods.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is done for both synchronous and asynchronous methods.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This allows you to call the service operations asynchronously using the new Task based async programming model.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you call the generated proxy method, WCF constructs a Task object to represent the asynchronous operation and returns that Task to you.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Task completes when the operation completes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When implementing an async operation you can implement it as a task-based async operation.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information see, <bpt id="p1">[</bpt>Synchronous and Asynchronous Operations<ept id="p1">](../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Simplified Generated Configuration Files</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you add a service reference in Visual Studio or use the SvcUtil.exe tool, a client configuration file is generated.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In previous versions of WCF these configuration files contained the value of every binding property even if its value is the default value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In WCF 4.5 the generated configuration files contain only those binding properties that are set to a non-default value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>WCF Simplification Features<ept id="p1">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Contract-First Development</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WCF now has support for contract-first development.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The svcutl.exe has a /serviceContract switch which allows you to generate service and data contracts from a WSDL document.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add Service Reference from a Portable Subset Project</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Portable subset projects enable .NET assembly programmers to maintain a single source tree and build system while still supporting multiple .NET platforms (desktop, Silverlight, Windows Phone, and XBOX).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Portable subset projects only reference .NET portable libraries which are a .NET framework assembly that can be used on any core .NET platform.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The developer experience is the same as adding a service reference within any other WCF client application.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Add Service Reference in a Portable Subset Project<ept id="p1">](../../../docs/framework/wcf/add-service-reference-in-a-portable-subset-project.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>ASP.NET Compatibility Mode Default Changed</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>WCF provides ASP.NET compatibility mode to grant developers full access to the features in the ASP.NET HTTP pipeline when writing WCF services.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To use this mode, you must set the <ph id="ph1">`aspNetCompatibilityEnabled`</ph> attribute to true in the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>serviceHostingEnvironment&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/servicehostingenvironment.md)</ept> section of web.config. Additionally, any service in this appDomain needs to have the <ph id="ph3">`RequirementsMode`</ph> property on its <ph id="ph4">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute&gt;</ph> set to <ph id="ph5">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph> or <ph id="ph6">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default <ph id="ph1">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute&gt;</ph>is now set to <ph id="ph2">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>What's New in Windows Communication Foundation<ept id="p1">](../../../docs/framework/wcf/whats-new.md)</ept> and <bpt id="p2">[</bpt>WCF Services and ASP.NET<ept id="p2">](../../../docs/framework/wcf/feature-details/wcf-services-and-aspnet.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>New Transport Default Values</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In order to simplify configuration a number of transport property default values have changed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>WCF Simplification Features<ept id="p1">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>XmlDictionaryReaderQuotas</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> contains configurable quota values for XML dictionary readers which limit the amount of memory utilized by an encoder while creating a message.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>While these quotas are configurable, the default values have changed to lessen the possibility that a developer will have to set them explicitly.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>WCF Simplification Features<ept id="p1">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>WCF Configuration Validation</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>As part of the build process within Visual Studio, WCF configuration files are now validated for attributes defined within the project.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A list of validation errors or warnings is displayed in Visual Studio if the validation fails.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>XML Editor Tooltips</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In order to help new and existing WCF service developers to configure their services, the Visual Studio XML editor now provides tooltips for every configuration element and its properties that is part of the service configuration file.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Streaming Improvements</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Added support for true asynchronous streaming where the send side now does not block threads if the receive side is not reading or slow in reading thereby increasing scalability.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Removed the limitation of message buffering when a client sends a streamed message to an IIS hosted WCF service.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>WCF Simplification Features<ept id="p1">](../../../docs/framework/wcf/wcf-simplification-features.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Simplifying Exposing an Endpoint Over HTTPS with IIS</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An HTTPS protocol mapping has been added to simplify exposing an endpoint over HTTPS.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To enable an HTTPS endpoint, ensure your website has an HTTPS binding and SSL certificate configured, and then simply enable HTTPS for the virtual directory that hosts the service.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If metadata is enabled for the service, it will be exposed over HTTPS as well.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Generating a Single WSDL Document</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Some third-party WSDL processing stacks are not able to process WSDL documents that have dependencies on other documents through a xsd:import.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>WCF now allows you to specify that all WSDL information be returned in a single document.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To request a single WSDL document append "?singleWSDL" to the URI when requesting metadata from the service.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>WebSocket Support</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>WebSockets is a technology that provides true bidirectional communication over ports 80 and 443 with performance characteristics similar to TCP.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Two new bindings have been added to support communication over a WebSocket transport.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.NetHttpsBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information see: <bpt id="p1">[</bpt>System-Provided Bindings<ept id="p1">](../../../docs/framework/wcf/system-provided-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>New Transport Default Values</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following table describes the settings that have changed and where to find additional information.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>On</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>New Default</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information see</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>channelInitializationTimeout</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>30 seconds</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>listenBacklog</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>12 * number of processors</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>maxPendingAccepts</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>ConnectionOrientedTransportBindingElement</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>SMSvcHost.exe</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>2 * number of processors for transport</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>4 <ph id="ph1">\*</ph> number of processors for SMSvcHost.exe</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts%2A&gt;</ph> <bpt id="p1">[</bpt>Configuring the Net.TCP Port Sharing Service<ept id="p1">](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>maxPendingConnections</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>ConnectionOrientedTransportBindingElement</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>12 * number of processors</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>receiveTimeout</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>SMSvcHost.exe</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>30 seconds</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring the Net.TCP Port Sharing Service<ept id="p1">](http://msdn.microsoft.com/en-us/b6dd81fa-68b7-4e1b-868e-88e5901b7ea0)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>XML Editor Tooltips</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In order to help new and existing WCF service developers to configure their services, the Visual Studio XML editor now provides tooltips for every configuration element and its properties that is part of the service configuration file.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Configuring WCF Services in Code</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> allows developers to configure services using configuration files or code.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Configuration files are useful when a service needs to be configured after being deployed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When using configuration files, an IT professional only needs to update the configuration file, no recompilation is required.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Configuration files, however, can be complex and difficult to maintain.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>There is no support for debugging configuration files and configuration elements are referenced by names which makes authoring configuration files error-prone and difficult.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> also allows you to configure services in code.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In earlier versions of <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> (4.0 and earlier) configuring services in code was easy in self-hosted scenarios, the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class allowed you to configure endpoints and behaviors prior to calling ServiceHost.Open.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In web hosted scenarios, however, you don’t have access to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To configure a web hosted service you were required to create a <ph id="ph1">`System.ServiceModel.ServiceHostFactory`</ph> that created the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and performed any needed configuration.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Starting with .NET 4.5, <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> provides an easier way to configure both self-hosted and web hosted services in code.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Configuring WCF Services in Code<ept id="p1">](../../../docs/framework/wcf/configuring-wcf-services-in-code.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>ChannelFactory Caching</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>WCF client applications use the <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> class to create a communication channel with a WCF service.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Creating <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> instances incurs some overhead because it involves the following operations:</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Constructing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> tree</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Reflecting all of the required CLR types</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Constructing the channel stack</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Disposing of resources</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To help minimize this overhead, WCF can cache channel factories when you are using a WCF client proxy.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Channel Factory and Caching<ept id="p1">](../../../docs/framework/wcf/feature-details/channel-factory-and-caching.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Compression and the Binary Encoder</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Beginning with WCF 4.5 the WCF binary encoder adds support for compression.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The type of compression is configured with the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Both the client and the service must configure the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Compression will work for HTTP, HTTPS, and TCP protocols.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If a client specifies to use compression but the service does not support it a protocol exception is thrown indicating a protocol mismatch.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Choosing a Message Encoder<ept id="p1">](../../../docs/framework/wcf/feature-details/choosing-a-message-encoder.md)</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>UDP</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Support has been added for a UDP transport which allows developers to write services that use "fire and forget" messaging.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A client sends a message to a service and expects no response from the service.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Multiple Authentication Support</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Support has been added to support multiple authentication modes, as supported by IIS, on a single WCF endpoint when using the HTTP transport and transport security.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>IIS allows you to enable multiple authentication modes on a virtual directory, this feature allows a single WCF endpoint to support the multiple authentication modes enabled for the virtual directory where the WCF service is hosted.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>IDN Support</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Support has been added to allow for WCF services with Internationalized Domain Names.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>WCF and Internationalized Domain Names<ept id="p1">](../../../docs/framework/wcf/feature-details/wcf-and-internationalized-domain-names.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>HttpClient</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A new class called <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> has been added to make working with HTTP requests much easier.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Making apps social and connected with HTTP services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231886)</ept> and the <bpt id="p2">[</bpt>HTTP Client Sample<ept id="p2">](http://code.msdn.microsoft.com/windowsapps/HttpClient-sample-55700664)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Configuration Intellisense</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Attribute values in configuration files for custom attributes defined in the project now support intellisense to facilitate working with configurations quickly and accurately.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Configuration tooltips</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> elements and attributes now have tooltips in the XML editor, to more easily and accurately identify the purpose of the element or attribute.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Paste Data as Classes</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In a WCF project, data types defined in XML (such as are exposed in a service) can be pasted directly into a code page.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The XML type will be pasted as a CLR type.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Generating Data Type Classes from XML<ept id="p1">](../../../docs/framework/wcf/generating-data-type-classes-from-xml.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>WebServiceHost and default endpoints</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>In Visual Studio 2010, WebServiceHost automatically created a default endpoint whether you explicitly specified an endpoint or not.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In Visual Studio 2012 WebServiceHost will only create a default endpoint if no endpoints are explicitly added.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If your client is expecting the default endpoint you can explicity add an endpoint and point the client to it.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Alternatively, you can tell WCF to revert back to the previous behavior by adding the following setting to you application’s configuration file</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>IHttpCookieContainerManager</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This interface, exposed by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601&gt;</ph>, makes working with cookies on the client side much easier.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>When AllowCookies is set to true on the binding, you can access cookies by using the following code:</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You can then retrieve or set the cookies from the <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>When AllowCookies is set to false, you can manually retrieve the cookies using <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> and send it in other requests using another <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> or message inspector.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The IHttpCookieContainerManager interface allows you to authenticate a user with a service and use the authentication cookie returned by that service to authenticate with other services.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>