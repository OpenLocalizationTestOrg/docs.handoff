<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-host-and-run-a-basic-wcf-service.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad9536b1f27ba3945bf76d0474de4825033a1e8b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\how-to-host-and-run-a-basic-wcf-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc52d1a50bbaf175e5a0b9cbc23e6affce2cfda3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5580e0c54f9f65e90d0374cefc4224c4f7e1207</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Tutorial: Host and run a basic Windows Communication Foundation service</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Tutorial: Host and run a basic Windows Communication Foundation service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This tutorial describes the third of five tasks required to create a basic Windows Communication Foundation (WCF) application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For an overview of the tutorials, see <bpt id="p1">[</bpt>Tutorial: Get started with Windows Communication Foundation applications<ept id="p1">](getting-started-tutorial.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The next task for creating a WCF application is to host a WCF service in a console application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A WCF service exposes one or more <bpt id="p1">*</bpt>endpoints<ept id="p1">*</ept>, each of which exposes one or more service operations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A service endpoint specifies the following information:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An address where you can find the service.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A binding that contains the information that describes how a client must communicate with the service.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A contract that defines the functionality that the service provides to its clients.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this tutorial, you learn how to:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create and configure a console app project for hosting a WCF service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add code to host the WCF service.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Update the configuration file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Start the WCF service and verify it's running.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create and configure a console app project for hosting the service</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a console app project in Visual Studio:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Open<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept> and browse to the <bpt id="p4">**</bpt>GettingStarted<ept id="p4">**</ept> solution you previously created (<bpt id="p5">*</bpt>GettingStarted.sln<ept id="p5">*</ept>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>View<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>GettingStarted<ept id="p2">**</ept> solution (top node), and then select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>New Project<ept id="p4">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> window, on the left side, select the <bpt id="p2">**</bpt>Windows Desktop<ept id="p2">**</ept> category under <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept> or <bpt id="p4">**</bpt>Visual Basic<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Console App (.NET Framework)<ept id="p1">**</ept> template, and enter <bpt id="p2">*</bpt>GettingStartedHost<ept id="p2">*</ept> for the <bpt id="p3">**</bpt>Name<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add a reference in the <bpt id="p1">**</bpt>GettingStartedHost<ept id="p1">**</ept> project to the <bpt id="p2">**</bpt>GettingStartedLib<ept id="p2">**</ept> project:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> folder under the <bpt id="p3">**</bpt>GettingStartedHost<ept id="p3">**</ept> project, and then select <bpt id="p4">**</bpt>Add Reference<ept id="p4">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> dialog, under <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> on the left side of the window, select <bpt id="p3">**</bpt>Solution<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>GettingStartedLib<ept id="p1">**</ept> in the center section of the window, and then select <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This action makes the types defined in the <bpt id="p1">**</bpt>GettingStartedLib<ept id="p1">**</ept> project available to the <bpt id="p2">**</bpt>GettingStartedHost<ept id="p2">**</ept> project.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add a reference in the <bpt id="p1">**</bpt>GettingStartedHost<ept id="p1">**</ept> project to the <ph id="ph1">&lt;xref:System.ServiceModel&gt;</ph> assembly:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> folder under the <bpt id="p3">**</bpt>GettingStartedHost<ept id="p3">**</ept> project, and then select <bpt id="p4">**</bpt>Add Reference<ept id="p4">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> window, under <bpt id="p2">**</bpt>Assemblies<ept id="p2">**</ept> on the left side of the window, select <bpt id="p3">**</bpt>Framework<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>System.ServiceModel<ept id="p1">**</ept>, and then select <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Save the solution by selecting <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Save All<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add code to host the service</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To host the service, you add code to do the following steps:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Create a URI for the base address.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create a class instance for hosting the service.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create a service endpoint.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enable metadata exchange.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Open the service host to listen for incoming messages.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Make the following changes to the code:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Module1.vb<ept id="p2">**</ept> file in the <bpt id="p3">**</bpt>GettingStartedHost<ept id="p3">**</ept> project and replace its code with the following code:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For information about how this code works, see <bpt id="p1">[</bpt>Service hosting program steps<ept id="p1">](#service-hosting-program-steps)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Update the project properties:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>GettingStartedHost<ept id="p2">**</ept> folder, and then select <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>GettingStartedHost<ept id="p1">**</ept> properties page, select the <bpt id="p2">**</bpt>Application<ept id="p2">**</ept> tab:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For C# projects, select <bpt id="p1">**</bpt>GettingStartedHost.Program<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Startup object<ept id="p2">**</ept> list.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For Visual Basic projects, select <bpt id="p1">**</bpt>Service.Program<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Startup object<ept id="p2">**</ept> list.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Save All<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Verify the service is working</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Build the solution, and then run the <bpt id="p1">**</bpt>GettingStartedHost<ept id="p1">**</ept> console application from inside Visual Studio.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The service must be run with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because you opened Visual Studio with administrator privileges, when you run <bpt id="p1">**</bpt>GettingStartedHost<ept id="p1">**</ept> in Visual Studio, the application is run with administrator privileges as well.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>As an alternative, you can open a new command prompt as an administrator (select <bpt id="p1">**</bpt>More<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Run as administrator<ept id="p2">**</ept> from the shortcut menu) and run <bpt id="p3">**</bpt>GettingStartedHost.exe<ept id="p3">**</ept> within it.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Open a web browser and browse to the service's page at <ph id="ph1">`http://localhost:8000/GettingStarted/CalculatorService`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Services such as this one require the proper permission to register HTTP addresses on the machine for listening.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Administrator accounts have this permission, but non-administrator accounts must be granted permission for HTTP namespaces.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more information about how to configure namespace reservations, see <bpt id="p1">[</bpt>Configuring HTTP and HTTPS<ept id="p1">](feature-details/configuring-http-and-https.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Service hosting program steps</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The steps in the code you added to host the service are described as follows:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Step 1<ept id="p1">**</ept>: Create an instance of the <ph id="ph1">`Uri`</ph> class to hold the base address of the service.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A URL that contains a base address has an optional URI that identifies a service.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The base address is formatted as follows: <ph id="ph1">`&lt;transport&gt;://&lt;machine-name or domain&gt;&lt;:optional port #&gt;/&lt;optional URI segment&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The base address for the calculator service uses the HTTP transport, localhost, port 8000, and the URI segment, GettingStarted.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Step 2<ept id="p1">**</ept>: Create an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class, which you use to host the service.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The constructor takes two parameters: the type of the class that implements the service contract and the base address of the service.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Step 3<ept id="p1">**</ept>: Create a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A service endpoint is composed of an address, a binding, and a service contract.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> constructor is composed of the service contract interface type, a binding, and an address.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The service contract is <ph id="ph1">`ICalculator`</ph>, which you defined and implement in the service type.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The binding for this sample is <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, which is a built-in binding and connects to endpoints that conform to the WS-* specifications.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about WCF bindings, see <bpt id="p1">[</bpt>WCF bindings overview<ept id="p1">](bindings-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You append the address to the base address to identify the endpoint.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The code specifies the address as CalculatorService and the fully qualified address for the endpoint as <ph id="ph1">`http://localhost:8000/GettingStarted/CalculatorService`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For .NET Framework Version 4 and later, adding a service endpoint is optional.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For these versions, if you don't add your code or configuration, WCF adds one default endpoint for each combination of base address and contract implemented by the service.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about default endpoints, see <bpt id="p1">[</bpt>Specifying an endpoint address<ept id="p1">](specifying-an-endpoint-address.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information about default endpoints, bindings, and behaviors, see <bpt id="p1">[</bpt>Simplified configuration<ept id="p1">](simplified-configuration.md)</ept> and <bpt id="p2">[</bpt>Simplified configuration for WCF services<ept id="p2">](samples/simplified-configuration-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Step 4<ept id="p1">**</ept>: Enable metadata exchange.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Clients use metadata exchange to generate proxies for calling the service operations.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To enable metadata exchange, create a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior&gt;</ph> instance, set its <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled&gt;</ph> property to <ph id="ph3">`true`</ph>, and add the <ph id="ph4">`ServiceMetadataBehavior`</ph> object to the <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> collection of the <ph id="ph6">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Step 5<ept id="p1">**</ept>: Open <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> to listen for incoming messages.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The application waits for you to press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After the application instantiates <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, it executes a try/catch block.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about safely catching exceptions thrown by <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, see <bpt id="p1">[</bpt>Use Close and Abort to release WCF client resources<ept id="p1">](samples/use-close-abort-release-wcf-client-resources.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When you add a WCF service library, Visual Studio hosts it for you if you debug it by starting a service host.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To avoid conflicts, you can prevent Visual Studio from hosting the WCF service library.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>GettingStartedLib<ept id="p1">**</ept> project in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and choose <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>WCF Options<ept id="p1">**</ept> and uncheck <bpt id="p2">**</bpt>Start WCF Service Host when debugging another project in the same solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Next steps</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In this tutorial, you learned how to:</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Create and configure a console app project for hosting a WCF service.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Add code to host the WCF service.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Update the configuration file.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Start the WCF service and verify it's running.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Advance to the next tutorial to learn how to create a WCF client.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tutorial: Create a WCF client<ept id="p1">](how-to-create-a-wcf-client.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>