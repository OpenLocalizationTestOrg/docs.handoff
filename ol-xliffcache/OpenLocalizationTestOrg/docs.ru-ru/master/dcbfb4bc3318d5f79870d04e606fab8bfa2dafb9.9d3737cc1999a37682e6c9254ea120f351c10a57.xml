{"content":"---\ntitle: \"Decision Structures (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"statements [Visual Basic], control flow\"\n  - \"If statement, decision structures\"\n  - \"If statement, If...Then...Else\"\n  - \"control flow, decision structures\"\n  - \"decision structures\"\n  - \"conditional statements, decision structures\"\nms.assetid: 2e2e0895-4483-442a-b17c-26aead751ec2\ncaps.latest.revision: 29\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Decision Structures (Visual Basic)\n[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] lets you test conditions and perform different operations depending on the results of that test. You can test for a condition being true or false, for various values of an expression, or for various exceptions generated when you execute a series of statements.  \n  \n The following illustration shows a decision structure that tests for a condition being true and takes different actions depending on whether it is true or false.  \n  \n ![Flow chart of an If...Then...Else construction](../../../../visual-basic/programming-guide/language-features/control-flow/media/ifthenelse.gif \"IfThenElse\")  \nTaking different actions when a condition is true and when it is false  \n  \n## If...Then...Else Construction  \n `If...Then...Else` constructions let you test for one or more conditions and run one or more statements depending on each condition. You can test conditions and take actions in the following ways:  \n  \n-   Run one or more statements if a condition is `True`  \n  \n-   Run one or more statements if a condition is `False`  \n  \n-   Run some statements if a condition is `True` and others if it is `False`  \n  \n-   Test an additional condition if a prior condition is `False`  \n  \n The control structure that offers all these possibilities is the [If...Then...Else Statement](../../../../visual-basic/language-reference/statements/if-then-else-statement.md). You can use a single-line version if you have just one test and one statement to run. If you have a more complex set of conditions and actions, you can use the multiple-line version.  \n  \n## Select...Case Construction  \n The `Select...Case` construction lets you evaluate an expression one time and run different sets of statements based on different possible values. For more information, see [Select...Case Statement](../../../../visual-basic/language-reference/statements/select-case-statement.md).  \n  \n## Try...Catch...Finally Construction  \n `Try...Catch...Finally` constructions let you run a set of statements under an environment that retains control if any one of your statements causes an exception. You can take different actions for different exceptions. You can optionally specify a block of code that runs before you exit the whole `Try...Catch...Finally` construction, regardless of what occurs. For more information, see [Try...Catch...Finally Statement](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md).  \n  \n> [!NOTE]\n>  For many control structures, when you click a keyword, all of the keywords in the structure are highlighted. For instance, when you click `If` in an `If...Then...Else` construction, all instances of `If`, `Then`, `ElseIf`, `Else`, and `End If` in the construction are highlighted. To move to the next or previous highlighted keyword, press CTRL+SHIFT+DOWN ARROW or CTRL+SHIFT+UP ARROW.  \n  \n## See Also  \n [Control Flow](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)   \n [Loop Structures](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)   \n [Other Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)   \n [Nested Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)   \n [If Operator](../../../../visual-basic/language-reference/operators/if-operator.md)","nodes":[{"pos":[4,790],"embed":true,"restype":"x-metadata","content":"title: \"Decision Structures (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"statements [Visual Basic], control flow\"\n  - \"If statement, decision structures\"\n  - \"If statement, If...Then...Else\"\n  - \"control flow, decision structures\"\n  - \"decision structures\"\n  - \"conditional statements, decision structures\"\nms.assetid: 2e2e0895-4483-442a-b17c-26aead751ec2\ncaps.latest.revision: 29\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"Decision Structures (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,51],"content":"Decision Structures (Visual Basic) | Microsoft Docs","nodes":[{"content":"Decision Structures (Visual Basic) | Microsoft Docs","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[797,831],"content":"Decision Structures (Visual Basic)","linkify":"Decision Structures (Visual Basic)","nodes":[{"content":"Decision Structures (Visual Basic)","pos":[0,34]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> lets you test conditions and perform different operations depending on the results of that test.","pos":[832,1021],"source":"[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] lets you test conditions and perform different operations depending on the results of that test."},{"content":"You can test for a condition being true or false, for various values of an expression, or for various exceptions generated when you execute a series of statements.","pos":[1022,1185]},{"content":"The following illustration shows a decision structure that tests for a condition being true and takes different actions depending on whether it is true or false.","pos":[1192,1353]},{"content":"<bpt id=\"p1\">![</bpt>Flow chart of an If...Then...Else construction<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../visual-basic/programming-guide/language-features/control-flow/media/ifthenelse.gif \"</bpt>IfThenElse<ept id=\"p2\">\")</ept>","pos":[1360,1518],"source":"![Flow chart of an If...Then...Else construction](../../../../visual-basic/programming-guide/language-features/control-flow/media/ifthenelse.gif \"IfThenElse\")"},{"content":"Taking different actions when a condition is true and when it is false","pos":[1521,1591]},{"pos":[1600,1629],"content":"If...Then...Else Construction","linkify":"If...Then...Else Construction","nodes":[{"content":"If...Then...Else Construction","pos":[0,29]}]},{"content":"<ph id=\"ph1\">`If...Then...Else`</ph> constructions let you test for one or more conditions and run one or more statements depending on each condition.","pos":[1633,1765],"source":"`If...Then...Else` constructions let you test for one or more conditions and run one or more statements depending on each condition."},{"content":"You can test conditions and take actions in the following ways:","pos":[1766,1829]},{"pos":[1839,1890],"content":"Run one or more statements if a condition is <ph id=\"ph1\">`True`</ph>","source":"Run one or more statements if a condition is `True`"},{"pos":[1900,1952],"content":"Run one or more statements if a condition is <ph id=\"ph1\">`False`</ph>","source":"Run one or more statements if a condition is `False`"},{"pos":[1962,2034],"content":"Run some statements if a condition is <ph id=\"ph1\">`True`</ph> and others if it is <ph id=\"ph2\">`False`</ph>","source":"Run some statements if a condition is `True` and others if it is `False`"},{"pos":[2044,2104],"content":"Test an additional condition if a prior condition is <ph id=\"ph1\">`False`</ph>","source":"Test an additional condition if a prior condition is `False`"},{"content":"The control structure that offers all these possibilities is the <bpt id=\"p1\">[</bpt>If...Then...Else Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/if-then-else-statement.md)</ept>.","pos":[2111,2287],"source":"The control structure that offers all these possibilities is the [If...Then...Else Statement](../../../../visual-basic/language-reference/statements/if-then-else-statement.md)."},{"content":"You can use a single-line version if you have just one test and one statement to run.","pos":[2288,2373]},{"content":"If you have a more complex set of conditions and actions, you can use the multiple-line version.","pos":[2374,2470]},{"pos":[2479,2505],"content":"Select...Case Construction","linkify":"Select...Case Construction","nodes":[{"content":"Select...Case Construction","pos":[0,26]}]},{"content":"The <ph id=\"ph1\">`Select...Case`</ph> construction lets you evaluate an expression one time and run different sets of statements based on different possible values.","pos":[2509,2655],"source":"The `Select...Case` construction lets you evaluate an expression one time and run different sets of statements based on different possible values."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Select...Case Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/select-case-statement.md)</ept>.","pos":[2656,2789],"source":" For more information, see [Select...Case Statement](../../../../visual-basic/language-reference/statements/select-case-statement.md)."},{"pos":[2798,2832],"content":"Try...Catch...Finally Construction","linkify":"Try...Catch...Finally Construction","nodes":[{"content":"Try...Catch...Finally Construction","pos":[0,34]}]},{"content":"<ph id=\"ph1\">`Try...Catch...Finally`</ph> constructions let you run a set of statements under an environment that retains control if any one of your statements causes an exception.","pos":[2836,2998],"source":"`Try...Catch...Finally` constructions let you run a set of statements under an environment that retains control if any one of your statements causes an exception."},{"content":"You can take different actions for different exceptions.","pos":[2999,3055]},{"content":"You can optionally specify a block of code that runs before you exit the whole <ph id=\"ph1\">`Try...Catch...Finally`</ph> construction, regardless of what occurs.","pos":[3056,3199],"source":" You can optionally specify a block of code that runs before you exit the whole `Try...Catch...Finally` construction, regardless of what occurs."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Try...Catch...Finally Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>.","pos":[3200,3347],"source":" For more information, see [Try...Catch...Finally Statement](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)."},{"pos":[3355,3751],"content":"[!NOTE]\n For many control structures, when you click a keyword, all of the keywords in the structure are highlighted. For instance, when you click `If` in an `If...Then...Else` construction, all instances of `If`, `Then`, `ElseIf`, `Else`, and `End If` in the construction are highlighted. To move to the next or previous highlighted keyword, press CTRL+SHIFT+DOWN ARROW or CTRL+SHIFT+UP ARROW.","leadings":["","> "],"nodes":[{"content":"For many control structures, when you click a keyword, all of the keywords in the structure are highlighted. For instance, when you click `If` in an `If...Then...Else` construction, all instances of `If`, `Then`, `ElseIf`, `Else`, and `End If` in the construction are highlighted. To move to the next or previous highlighted keyword, press CTRL+SHIFT+DOWN ARROW or CTRL+SHIFT+UP ARROW.","pos":[9,394],"nodes":[{"content":"For many control structures, when you click a keyword, all of the keywords in the structure are highlighted.","pos":[0,108]},{"content":"For instance, when you click <ph id=\"ph1\">`If`</ph> in an <ph id=\"ph2\">`If...Then...Else`</ph> construction, all instances of <ph id=\"ph3\">`If`</ph>, <ph id=\"ph4\">`Then`</ph>, <ph id=\"ph5\">`ElseIf`</ph>, <ph id=\"ph6\">`Else`</ph>, and <ph id=\"ph7\">`End If`</ph> in the construction are highlighted.","pos":[109,280],"source":" For instance, when you click `If` in an `If...Then...Else` construction, all instances of `If`, `Then`, `ElseIf`, `Else`, and `End If` in the construction are highlighted."},{"content":"To move to the next or previous highlighted keyword, press CTRL+SHIFT+DOWN ARROW or CTRL+SHIFT+UP ARROW.","pos":[281,385]}]}]},{"pos":[3760,3768],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Control Flow<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3772,3871],"source":"[Control Flow](../../../../visual-basic/programming-guide/language-features/control-flow/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Loop Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[3875,3987],"source":"[Loop Structures](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>Other Control Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[3991,4121],"source":"[Other Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>Nested Control Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[4125,4257],"source":"[Nested Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>If Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/if-operator.md)</ept>","pos":[4261,4344],"source":"[If Operator](../../../../visual-basic/language-reference/operators/if-operator.md)"}]}