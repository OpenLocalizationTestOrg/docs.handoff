{"content":"---\ntitle: \"SetPEKind Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink2.SetPEKind\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"SetPEKind\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"SetPEKind method\"\nms.assetid: 050e77ee-3014-45c0-9e29-2ebe29347b0d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 6\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# SetPEKind Method\nDetermines the portable executable type, either machine-specific or machine-agnostic.  \n  \n## Syntax  \n  \n```  \nHRESULT SetPEKind(  \n    mdAssembly AssemblyID,  \n    mdToken FileToken,  \n    DWORD dwPEKind,  \n    DWORD dwMachine  \n) PURE;   \n```  \n  \n#### Parameters  \n `AssemblyID`  \n ID of the assembly.  \n  \n `FileToken`  \n Token of file for which the PE type is to be set. Can be NULL if `AssemblyID` does not indicate an unbound netmodule.  \n  \n `dwPEKind`  \n The type of PE, as indicated by the [CorPEKind Enumeration](../../../../docs/framework/unmanaged-api/metadata/corpekind-enumeration.md).  \n  \n `dwMachine`  \n The target machine architecture, as indicated in the NT header.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See Also  \n [GetPEKind Method](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-getpekind-method.md)   \n [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)   \n [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)   \n [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)","nodes":[{"pos":[4,550],"nodes":[{"content":"SetPEKind Method | Microsoft Docs","nodes":[{"pos":[0,33],"content":"SetPEKind Method | Microsoft Docs","nodes":[{"content":"SetPEKind Method | Microsoft Docs","pos":[0,33]}]}],"pos":[6,42],"yaml":true}],"content":"title: \"SetPEKind Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink2.SetPEKind\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"SetPEKind\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"SetPEKind method\"\nms.assetid: 050e77ee-3014-45c0-9e29-2ebe29347b0d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 6\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[557,573],"content":"SetPEKind Method","linkify":"SetPEKind Method","nodes":[{"content":"SetPEKind Method","pos":[0,16]}]},{"content":"Determines the portable executable type, either machine-specific or machine-agnostic.","pos":[574,659]},{"pos":[668,674],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[830,840],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the assembly.","pos":[860,879]},{"content":"Token of file for which the PE type is to be set.","pos":[901,950]},{"content":"Can be NULL if <ph id=\"ph1\">`AssemblyID`</ph> does not indicate an unbound netmodule.","pos":[951,1018],"source":" Can be NULL if `AssemblyID` does not indicate an unbound netmodule."},{"content":"The type of PE, as indicated by the <bpt id=\"p1\">[</bpt>CorPEKind Enumeration<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/corpekind-enumeration.md)</ept>.","pos":[1039,1175],"source":"The type of PE, as indicated by the [CorPEKind Enumeration](../../../../docs/framework/unmanaged-api/metadata/corpekind-enumeration.md)."},{"content":"The target machine architecture, as indicated in the NT header.","pos":[1197,1260]},{"pos":[1269,1281],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1285,1321]},{"pos":[1330,1342],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[1346,1363]},{"pos":[1372,1380],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>GetPEKind Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-getpekind-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[1384,1491],"source":"[GetPEKind Method](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-getpekind-method.md) "},{"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1495,1584],"source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1588,1675],"source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","pos":[1679,1747],"source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}