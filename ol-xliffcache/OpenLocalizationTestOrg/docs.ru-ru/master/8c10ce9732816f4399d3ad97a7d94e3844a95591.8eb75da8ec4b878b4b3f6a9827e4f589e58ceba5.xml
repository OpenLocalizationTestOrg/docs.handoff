{"content":"---\ntitle: \"Compiling an Interop Project | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"interoperation with unmanaged code, compiling\"\n  - \"COM interop, compiling\"\n  - \"exposing COM components to .NET Framework\"\n  - \"compiling interop projects\"\n  - \"interoperation with unmanaged code, exposing COM components\"\n  - \"COM interop, exposing COM components\"\nms.assetid: 6fcf6588-5e25-41af-b4ae-780974f2c3df\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Compiling an Interop Project\nCOM interop projects that reference one or more assemblies containing imported COM types are compiled like any other managed project. You can reference interop assemblies in a development environment such as Visual Studio, or you can reference them when you use a command-line compiler. In either case, to compile properly, the interop assembly must be in the same directory as the other project files.  \n  \n There are two ways to reference interop assemblies:  \n  \n-   Embedded interop types: Beginning with the [!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)] and [!INCLUDE[vs_dev10_long](../../../includes/vs-dev10-long-md.md)], you can instruct the compiler to embed type information from an interop assembly into your executable. This is the recommended technique.  \n  \n-   Deploying interop assemblies: You can create a standard reference to an interop assembly. In this case, the interop assembly must be deployed with your application.  \n  \n The differences between these two techniques are discussed in greater detail in [Using COM Types in Managed Code](http://msdn.microsoft.com/en-us/1a95a8ca-c8b8-4464-90b0-5ee1a1135b66).  \n  \n Embedding interop types with Visual Studio is demonstrated in [Walkthrough: Embedding Type Information from Microsoft Office Assemblies](http://msdn.microsoft.com/library/85b55e05-bc5e-4665-b6ae-e1ada9299fd3) and [Walkthrough: Embedding Types from Managed Assemblies](http://msdn.microsoft.com/library/b28ec92c-1867-4847-95c0-61adfe095e21).  \n  \n To reference an interop assembly with a command-line compiler and embed type information in your executables, use the [/link (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/link-compiler-option.md) or the [/link (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/link.md) compiler switch and specify the name of the interop assembly.  \n  \n> [!NOTE]\n>  Visual C++ applications cannot embed type information, but they can interoperate with applications or add-ins that do.  \n  \n To compile an application that includes a primary interop assembly when it is deployed, use the **/reference** compiler switch and specify the name of the interop assembly.  \n  \n## See Also  \n [Exposing COM Components to the .NET Framework](../../../docs/framework/interop/exposing-com-components.md)   \n [Language Independence and Language-Independent Components](../../../docs/standard/language-independence-and-language-independent-components.md)   \n [Using COM Types in Managed Code](http://msdn.microsoft.com/en-us/1a95a8ca-c8b8-4464-90b0-5ee1a1135b66)   \n [Walkthrough: Embedding Type Information from Microsoft Office Assemblies](http://msdn.microsoft.com/library/85b55e05-bc5e-4665-b6ae-e1ada9299fd3)   \n [Walkthrough: Embedding Types from Managed Assemblies](http://msdn.microsoft.com/library/b28ec92c-1867-4847-95c0-61adfe095e21)   \n [Importing a Type Library as an Assembly](../../../docs/framework/interop/importing-a-type-library-as-an-assembly.md)","nodes":[{"pos":[12,57],"content":"Compiling an Interop Project | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiling an Interop Project | Microsoft Docs","pos":[0,45]}]},{"pos":[711,739],"content":"Compiling an Interop Project","linkify":"Compiling an Interop Project","nodes":[{"content":"Compiling an Interop Project","pos":[0,28]}]},{"content":"COM interop projects that reference one or more assemblies containing imported COM types are compiled like any other managed project.","pos":[740,873]},{"content":"You can reference interop assemblies in a development environment such as Visual Studio, or you can reference them when you use a command-line compiler.","pos":[874,1026]},{"content":"In either case, to compile properly, the interop assembly must be in the same directory as the other project files.","pos":[1027,1142]},{"content":"There are two ways to reference interop assemblies:","pos":[1149,1200]},{"content":"Embedded interop types: Beginning with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[vs_dev10_long](../../../includes/vs-dev10-long-md.md)]</ph>, you can instruct the compiler to embed type information from an interop assembly into your executable.","pos":[1210,1488],"source":"Embedded interop types: Beginning with the [!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)] and [!INCLUDE[vs_dev10_long](../../../includes/vs-dev10-long-md.md)], you can instruct the compiler to embed type information from an interop assembly into your executable."},{"content":"This is the recommended technique.","pos":[1489,1523]},{"content":"Deploying interop assemblies: You can create a standard reference to an interop assembly.","pos":[1533,1622]},{"content":"In this case, the interop assembly must be deployed with your application.","pos":[1623,1697]},{"pos":[1704,1888],"content":"The differences between these two techniques are discussed in greater detail in <bpt id=\"p1\">[</bpt>Using COM Types in Managed Code<ept id=\"p1\">](http://msdn.microsoft.com/en-us/1a95a8ca-c8b8-4464-90b0-5ee1a1135b66)</ept>.","source":"The differences between these two techniques are discussed in greater detail in [Using COM Types in Managed Code](http://msdn.microsoft.com/en-us/1a95a8ca-c8b8-4464-90b0-5ee1a1135b66)."},{"pos":[1895,2235],"content":"Embedding interop types with Visual Studio is demonstrated in <bpt id=\"p1\">[</bpt>Walkthrough: Embedding Type Information from Microsoft Office Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/library/85b55e05-bc5e-4665-b6ae-e1ada9299fd3)</ept> and <bpt id=\"p2\">[</bpt>Walkthrough: Embedding Types from Managed Assemblies<ept id=\"p2\">](http://msdn.microsoft.com/library/b28ec92c-1867-4847-95c0-61adfe095e21)</ept>.","source":"Embedding interop types with Visual Studio is demonstrated in [Walkthrough: Embedding Type Information from Microsoft Office Assemblies](http://msdn.microsoft.com/library/85b55e05-bc5e-4665-b6ae-e1ada9299fd3) and [Walkthrough: Embedding Types from Managed Assemblies](http://msdn.microsoft.com/library/b28ec92c-1867-4847-95c0-61adfe095e21)."},{"pos":[2242,2617],"content":"To reference an interop assembly with a command-line compiler and embed type information in your executables, use the <bpt id=\"p1\">[</bpt>/link (C# Compiler Options)<ept id=\"p1\">](~/docs/csharp/language-reference/compiler-options/link-compiler-option.md)</ept> or the <bpt id=\"p2\">[</bpt>/link (Visual Basic)<ept id=\"p2\">](~/docs/visual-basic/reference/command-line-compiler/link.md)</ept> compiler switch and specify the name of the interop assembly.","source":"To reference an interop assembly with a command-line compiler and embed type information in your executables, use the [/link (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/link-compiler-option.md) or the [/link (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/link.md) compiler switch and specify the name of the interop assembly."},{"pos":[2625,2754],"content":"[!NOTE]\n Visual C++ applications cannot embed type information, but they can interoperate with applications or add-ins that do.","leadings":["","> "],"nodes":[{"content":"Visual C++ applications cannot embed type information, but they can interoperate with applications or add-ins that do.","pos":[9,127]}]},{"pos":[2761,2933],"content":"To compile an application that includes a primary interop assembly when it is deployed, use the <bpt id=\"p1\">**</bpt>/reference<ept id=\"p1\">**</ept> compiler switch and specify the name of the interop assembly.","source":"To compile an application that includes a primary interop assembly when it is deployed, use the **/reference** compiler switch and specify the name of the interop assembly."},{"pos":[2942,2950],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Exposing COM Components to the .NET Framework<ept id=\"p1\">](../../../docs/framework/interop/exposing-com-components.md)</ept><ph id=\"ph1\"> </ph>","pos":[2954,3062],"source":"[Exposing COM Components to the .NET Framework](../../../docs/framework/interop/exposing-com-components.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Language Independence and Language-Independent Components<ept id=\"p1\">](../../../docs/standard/language-independence-and-language-independent-components.md)</ept><ph id=\"ph1\"> </ph>","pos":[3065,3211],"source":" [Language Independence and Language-Independent Components](../../../docs/standard/language-independence-and-language-independent-components.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Using COM Types in Managed Code<ept id=\"p1\">](http://msdn.microsoft.com/en-us/1a95a8ca-c8b8-4464-90b0-5ee1a1135b66)</ept><ph id=\"ph1\"> </ph>","pos":[3214,3319],"source":" [Using COM Types in Managed Code](http://msdn.microsoft.com/en-us/1a95a8ca-c8b8-4464-90b0-5ee1a1135b66) "},{"content":"<bpt id=\"p1\"> [</bpt>Walkthrough: Embedding Type Information from Microsoft Office Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/library/85b55e05-bc5e-4665-b6ae-e1ada9299fd3)</ept><ph id=\"ph1\"> </ph>","pos":[3322,3470],"source":" [Walkthrough: Embedding Type Information from Microsoft Office Assemblies](http://msdn.microsoft.com/library/85b55e05-bc5e-4665-b6ae-e1ada9299fd3) "},{"content":"<bpt id=\"p1\"> [</bpt>Walkthrough: Embedding Types from Managed Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/library/b28ec92c-1867-4847-95c0-61adfe095e21)</ept><ph id=\"ph1\"> </ph>","pos":[3473,3601],"source":" [Walkthrough: Embedding Types from Managed Assemblies](http://msdn.microsoft.com/library/b28ec92c-1867-4847-95c0-61adfe095e21) "},{"content":"<bpt id=\"p1\"> [</bpt>Importing a Type Library as an Assembly<ept id=\"p1\">](../../../docs/framework/interop/importing-a-type-library-as-an-assembly.md)</ept>","pos":[3604,3722],"source":" [Importing a Type Library as an Assembly](../../../docs/framework/interop/importing-a-type-library-as-an-assembly.md)"}]}