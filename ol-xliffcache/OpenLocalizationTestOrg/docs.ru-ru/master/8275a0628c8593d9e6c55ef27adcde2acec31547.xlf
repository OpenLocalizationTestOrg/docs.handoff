<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8275a0628c8593d9e6c55ef27adcde2acec31547</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\control-flow\nested-control-structures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92da0157f2353a088a003e254cdbcbb6fdc6d5f6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb50518fe5bc8085c9c65cd11b3777d71f3999f7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Nested Control Structures (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Nested Control Structures (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can place control statements inside other control statements, for example an <ph id="ph1">`If...Then...Else`</ph> block within a <ph id="ph2">`For...Next`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A control statement placed inside another control statement is said to be <bpt id="p1">*</bpt>nested<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Nesting Levels</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Control structures in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> can be nested to as many levels as you want.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is common practice to make nested structures more readable by indenting the body of each one.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The integrated development environment (IDE) editor automatically does this.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the following example, the procedure <ph id="ph1">`sumRows`</ph> adds together the positive elements of each row of the matrix.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the preceding example, the first <ph id="ph1">`Next`</ph> statement closes the inner <ph id="ph2">`For`</ph> loop and the last <ph id="ph3">`Next`</ph> statement closes the outer <ph id="ph4">`For`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Likewise, in nested <ph id="ph1">`If`</ph> statements, the <ph id="ph2">`End If`</ph> statements automatically apply to the nearest prior <ph id="ph3">`If`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Nested <ph id="ph1">`Do`</ph> loops work in a similar fashion, with the innermost <ph id="ph2">`Loop`</ph> statement matching the innermost <ph id="ph3">`Do`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For many control structures, when you click a keyword, all of the keywords in the structure are highlighted.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For instance, when you click <ph id="ph1">`If`</ph> in an <ph id="ph2">`If...Then...Else`</ph> construction, all instances of <ph id="ph3">`If`</ph>, <ph id="ph4">`Then`</ph>, <ph id="ph5">`ElseIf`</ph>, <ph id="ph6">`Else`</ph>, and <ph id="ph7">`End If`</ph> in the construction are highlighted.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To move to the next or previous highlighted keyword, press CTRL+SHIFT+DOWN ARROW or CTRL+SHIFT+UP ARROW.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Nesting Different Kinds of Control Structures</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can nest one kind of control structure within another kind.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">`With`</ph> block inside a <ph id="ph2">`For Each`</ph> loop and nested <ph id="ph3">`If`</ph> blocks inside the <ph id="ph4">`With`</ph> block.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Overlapping Control Structures</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You cannot overlap control structures.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that any nested structure must be completely contained within the next innermost structure.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, the following arrangement is invalid because the <ph id="ph1">`For`</ph> loop terminates before the inner <ph id="ph2">`With`</ph> block terminates.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Graphic diagram of invalid nesting<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/media/nestexampleinvalid.gif "NestExampleInvalid")</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Invalid nesting of For and With structures</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler detects such overlapping control structures and signals a compile-time error.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Control Flow<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Decision Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loop Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Other Control Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>