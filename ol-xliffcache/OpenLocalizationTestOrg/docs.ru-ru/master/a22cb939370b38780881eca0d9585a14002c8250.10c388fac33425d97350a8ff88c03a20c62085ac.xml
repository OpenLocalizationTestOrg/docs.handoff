{"content":"---\ntitle: \"Using foreach with arrays - C# Programming Guide\"\nms.custom: seodec18\nms.date: 05/23/2018\nhelpviewer_keywords: \n  - \"arrays [C#], foreach\"\n  - \"foreach statement [C#], using with arrays\"\nms.assetid: 5f2da2a9-1f56-4de5-94cc-e07f4f7a0244\n---\n# Using foreach with arrays (C# Programming Guide)\n\nThe [foreach](../../language-reference/keywords/foreach-in.md) statement provides a simple, clean way to iterate through the elements of an array.\n\nFor single-dimensional arrays, the `foreach` statement processes elements in increasing index order, starting with index 0 and ending with index `Length - 1`:\n\n [!code-csharp[csProgGuideArrays#28](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#28)]\n\nFor multi-dimensional arrays, elements are traversed such that the indices of the rightmost dimension are increased first, then the next left dimension, and so on to the left:\n\n [!code-csharp[csProgGuideArrays#29](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#29)]\n\nHowever, with multidimensional arrays, using a nested [for](../../language-reference/keywords/for.md) loop gives you more control over the order in which to process the array elements.\n\n## See also\n\n- <xref:System.Array>\n- [C# Programming Guide](../index.md)\n- [Arrays](index.md)\n- [Single-Dimensional Arrays](single-dimensional-arrays.md)\n- [Multidimensional Arrays](multidimensional-arrays.md)\n- [Jagged Arrays](jagged-arrays.md)\n","nodes":[{"pos":[4,247],"embed":true,"restype":"x-metadata","content":"title: \"Using foreach with arrays - C# Programming Guide\"\nms.custom: seodec18\nms.date: 05/23/2018\nhelpviewer_keywords: \n  - \"arrays [C#], foreach\"\n  - \"foreach statement [C#], using with arrays\"\nms.assetid: 5f2da2a9-1f56-4de5-94cc-e07f4f7a0244","nodes":[{"content":"Using foreach with arrays - C# Programming Guide","nodes":[{"pos":[0,48],"content":"Using foreach with arrays - C# Programming Guide","nodes":[{"content":"Using foreach with arrays - C# Programming Guide","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[254,302],"content":"Using foreach with arrays (C# Programming Guide)","linkify":"Using foreach with arrays (C# Programming Guide)","nodes":[{"content":"Using foreach with arrays (C# Programming Guide)","pos":[0,48]}]},{"pos":[304,450],"content":"The <bpt id=\"p1\">[</bpt>foreach<ept id=\"p1\">](../../language-reference/keywords/foreach-in.md)</ept> statement provides a simple, clean way to iterate through the elements of an array.","source":"The [foreach](../../language-reference/keywords/foreach-in.md) statement provides a simple, clean way to iterate through the elements of an array."},{"pos":[452,610],"content":"For single-dimensional arrays, the <ph id=\"ph1\">`foreach`</ph> statement processes elements in increasing index order, starting with index 0 and ending with index <ph id=\"ph2\">`Length - 1`</ph>:","source":"For single-dimensional arrays, the `foreach` statement processes elements in increasing index order, starting with index 0 and ending with index `Length - 1`:"},{"content":"For multi-dimensional arrays, elements are traversed such that the indices of the rightmost dimension are increased first, then the next left dimension, and so on to the left:","pos":[733,908]},{"pos":[1031,1215],"content":"However, with multidimensional arrays, using a nested <bpt id=\"p1\">[</bpt>for<ept id=\"p1\">](../../language-reference/keywords/for.md)</ept> loop gives you more control over the order in which to process the array elements.","source":"However, with multidimensional arrays, using a nested [for](../../language-reference/keywords/for.md) loop gives you more control over the order in which to process the array elements."},{"pos":[1220,1228],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1254,1289],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../index.md)</ept>","source":"[C# Programming Guide](../index.md)"},{"pos":[1292,1310],"content":"<bpt id=\"p1\">[</bpt>Arrays<ept id=\"p1\">](index.md)</ept>","source":"[Arrays](index.md)"},{"pos":[1313,1370],"content":"<bpt id=\"p1\">[</bpt>Single-Dimensional Arrays<ept id=\"p1\">](single-dimensional-arrays.md)</ept>","source":"[Single-Dimensional Arrays](single-dimensional-arrays.md)"},{"pos":[1373,1426],"content":"<bpt id=\"p1\">[</bpt>Multidimensional Arrays<ept id=\"p1\">](multidimensional-arrays.md)</ept>","source":"[Multidimensional Arrays](multidimensional-arrays.md)"},{"pos":[1429,1462],"content":"<bpt id=\"p1\">[</bpt>Jagged Arrays<ept id=\"p1\">](jagged-arrays.md)</ept>","source":"[Jagged Arrays](jagged-arrays.md)"}]}