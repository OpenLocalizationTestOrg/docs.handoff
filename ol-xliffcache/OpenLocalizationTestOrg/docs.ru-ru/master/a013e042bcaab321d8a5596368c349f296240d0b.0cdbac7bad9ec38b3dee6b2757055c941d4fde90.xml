{"content":"---\ntitle: \"Using XSLT to Transform an XML Tree (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 3390ca68-c270-4e1d-b64b-6a063a77017c\n---\n# Using XSLT to Transform an XML Tree (Visual Basic)\nYou can create an XML tree, create an <xref:System.Xml.XmlReader> from the XML tree, create a new document, and create an <xref:System.Xml.XmlWriter> that will write into the new document. Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> to the transformation. After the transformation successfully completes, the new XML tree is populated with the results of the transform.  \n  \n## Example  \n  \n```vb  \nDim xslMarkup As XDocument = _   \n    <?xml version='1.0'?>  \n    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  \n        <xsl:template match='/Parent'>  \n            <Root>  \n                <C1>  \n                    <xsl:value-of select='Child1'/>  \n                </C1>  \n                <C2>  \n                    <xsl:value-of select='Child2'/>  \n                </C2>  \n            </Root>  \n        </xsl:template>  \n    </xsl:stylesheet>  \n  \nDim xmlTree As XElement = _   \n    <Parent>  \n        <Child1>Child1 data</Child1>  \n        <Child2>Child2 data</Child2>  \n    </Parent>  \n  \nDim newTree As XDocument = New XDocument()  \n  \nUsing writer As XmlWriter = newTree.CreateWriter()  \n    ' Load the style sheet.  \n    Dim xslt As XslCompiledTransform = _  \n        New XslCompiledTransform()  \n    xslt.Load(xslMarkup.CreateReader())  \n  \n    ' Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateReader(), writer)  \nEnd Using  \n  \nConsole.WriteLine(newTree)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <C1>Child1 data</C1>  \n  <C2>Child2 data</C2>  \n</Root>  \n```  \n  \n## See also\n\n- <xref:System.Xml.Linq.XContainer.CreateWriter%2A?displayProperty=nameWithType>\n- <xref:System.Xml.Linq.XNode.CreateReader%2A?displayProperty=nameWithType>\n- [Advanced LINQ to XML Programming (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)\n","nodes":[{"pos":[4,132],"embed":true,"restype":"x-metadata","content":"title: \"Using XSLT to Transform an XML Tree (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 3390ca68-c270-4e1d-b64b-6a063a77017c","nodes":[{"content":"Using XSLT to Transform an XML Tree (Visual Basic)","nodes":[{"pos":[0,50],"content":"Using XSLT to Transform an XML Tree (Visual Basic)","nodes":[{"content":"Using XSLT to Transform an XML Tree (Visual Basic)","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[139,189],"content":"Using XSLT to Transform an XML Tree (Visual Basic)","linkify":"Using XSLT to Transform an XML Tree (Visual Basic)","nodes":[{"content":"Using XSLT to Transform an XML Tree (Visual Basic)","pos":[0,50]}]},{"content":"You can create an XML tree, create an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, create a new document, and create an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.","pos":[190,378],"source":"You can create an XML tree, create an <xref:System.Xml.XmlReader> from the XML tree, create a new document, and create an <xref:System.Xml.XmlWriter> that will write into the new document."},{"content":"Then, you can invoke the XSLT transformation, passing the <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transformation.","pos":[379,519],"source":" Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> to the transformation."},{"content":"After the transformation successfully completes, the new XML tree is populated with the results of the transform.","pos":[520,633]},{"pos":[642,649],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example produces the following output:","pos":[1722,1765]},{"pos":[1861,1869],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2030,2173],"content":"<bpt id=\"p1\">[</bpt>Advanced LINQ to XML Programming (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)</ept>","source":"[Advanced LINQ to XML Programming (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)"}]}