<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="security-considerations.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec0c799854530ab88285c45a9fc1ead4688a95e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\security-considerations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41f5cc9b3f2a7cb8c32cd63c86aafe4ef9b4e200</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f08a17fbcd86ba75b942ca04404d8813052a2b5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Security Considerations (Entity Framework) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Security Considerations (Entity Framework)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes security considerations that are specific to developing, deploying, and running <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You should also follow recommendations for creating secure <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Security Overview<ept id="p1">](../../../../../docs/framework/data/adonet/security-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>General Security Considerations</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following security considerations apply to all applications that use the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use only trusted data source providers.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To communicate with the data source, a provider must do the following:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Receive the connection string from the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Translate the command tree to the data source's native query language.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Assemble and return result sets.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>During the logon operation, information that is based on the user password is passed to the server through the network libraries of the underlying data source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A malicious provider can steal user credentials, generate malicious queries, or tamper with the result set.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Encrypt your connection to protect sensitive data.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> does not directly handle data encryption.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If users access data over a public network, your application should establish an encrypted connection to the data source to increase security.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see the security-related documentation for your data source.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For a SQL Server data source, see <bpt id="p1">[</bpt>Encrypting Connections to SQL Server<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=119544)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Secure the connection string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Protecting access to your data source is one of the most important goals when securing an application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A connection string presents a potential vulnerability if it is not secured or if it is improperly constructed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When you store connection information in plain text or persist it in memory, you risk compromising your entire system.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following are the recommended methods for securing connection strings:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use Windows Authentication with a SQL Server data source.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you use Windows Authentication to connect to a SQL Server data source, the connection string does not contain logon and password information.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Encrypt configuration file sections using protected configuration.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>ASP.NET provides a feature called protected configuration that enables you to encrypt sensitive information in a configuration file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Although primarily designed for ASP.NET, you can also use protected configuration to encrypt sections of configuration files in Windows applications.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For a detailed description of the new protected configuration capabilities, see <bpt id="p1">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id="p1">](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Store connection strings in secured configuration files.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You should never embed connection strings in your source code.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can store connection strings in configuration files, which eliminates the need to embed them in your application's code.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>By default, the Entity Data Model Wizard stores connection strings in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You must secure this file to prevent unauthorized access.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Use connection string builders when dynamically creating connections.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you must construct connection strings at runtime, use the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This string builder class helps prevent connection string injection attacks by validating and escaping invalid input information.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Build an EntityConnection Connection String<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Also use the appropriate string builder class to construct the data source connection string that is part of the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> connection string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For information about connection string builders for ADO.NET providers, see <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](../../../../../docs/framework/data/adonet/connection-string-builders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Protecting Connection Information<ept id="p1">](../../../../../docs/framework/data/adonet/protecting-connection-information.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Do not expose an EntityConnection to untrusted users.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> object exposes the connection string of the underlying connection.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A user with access to an <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> object can also change the <ph id="ph2">&lt;xref:System.Data.ConnectionState&gt;</ph> of the underlying connection.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> class is not thread safe.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Do not pass connections outside the security context.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After a connection has been established, you must not pass it outside the security context.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, one thread with permission to open a connection should not store the connection in a global location.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the connection is available in a global location, then another malicious thread can use the open connection without having that permission explicitly granted to it.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Be aware that logon information and passwords may be visible in a memory dump.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When data source logon and password information is supplied in the connection string, this information is maintained in memory until garbage collection reclaims the resources.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This makes it impossible to determine when a password string is no longer in memory.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If an application crashes, a memory dump file may contain sensitive security information, and the user running the application and any user with administrative access to the computer can view the memory dump file.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Use Windows Authentication for connections to Microsoft SQL Server.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Grant users only the necessary permissions in the data source.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A data source administrator should grant only the necessary permissions to users.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Even though <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> does not support DML statements that modify data, such as INSERT, UPDATE, or DELETE, users can still access the connection to the data source.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A malicious user could use this connection to execute DML statements in the native language of the data source.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Run applications with the minimum permissions.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When you allow a managed application to run with full-trust permission, the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph> does not limit the application's access to your computer.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This may enable a security vulnerability in your application to compromise the entire system.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To use code access security and other security mechanisms in the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph>, you should run applications by using partial-trust permissions and with the minimum set of permissions that are needed to enable the application to function.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following code access permissions are the minimum permissions your <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> application needs:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph>: <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;</ph> to open the specified metadata files or <ph id="ph3">&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;</ph> to search a directory for metadata files.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>: <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag&gt;</ph> to support LINQ to Entities queries.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions.DistributedTransactionPermission&gt;</ph>: <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> to enlist in a <ph id="ph3">&lt;xref:System.Transactions&gt;</ph><ph id="ph4">&lt;xref:System.Transactions.Transaction&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>: <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;</ph> to serialize exceptions by using the <ph id="ph3">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Permission to open a database connection and execute commands against the database, such as <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph> for a <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> database.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](../../../../../docs/framework/data/adonet/code-access-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Do not install untrusted applications.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> does not enforce any security permissions and will invoke any user-supplied data object code in process regardless of whether it is trusted or not.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Ensure that authentication and authorization of the client is performed by the data store and by your application.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Restrict access to all configuration files.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An administrator must restrict write access to all files that specify configuration for an application, including to enterprisesec.config, security.config, machine.conf, and the application configuration file <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>application<ept id="p1">*</ept>&gt;.exe.config.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The provider invariant name is modifiable in the app.config. The client application must take responsibility for accessing the underlying provider through the standard provider factory model by using a strong name.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Restrict permissions to the model and mapping files.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An administrator must restrict write access to the model and mapping files (.edmx, .csdl, .ssdl, and .msl) to only users who modify the model or mappings.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> only requires read access to these files at run time.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An administrator should also restrict access to object layer and pre-compiled view source code files that are generated by the <ph id="ph1">[!INCLUDE[adonet_edm](../../../../../includes/adonet-edm-md.md)]</ph> tools.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Security Considerations for Queries</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following security considerations apply when querying a conceptual model.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>These considerations apply to <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> queries using EntityClient and to object queries using LINQ, <ph id="ph2">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph>, and query builder methods.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Prevent SQL injection attacks.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Applications frequently take external input (from a user or another external agent) and perform actions based on that input.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Any input that is directly or indirectly derived from the user or an external agent might have content that uses the syntax of the target language in order to perform unauthorized actions.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When the target language is a Structured Query Language (SQL), such as <ph id="ph1">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph>, this manipulation is known as a SQL injection attack.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A malicious user can inject commands directly into the query and drop a database table, cause a denial of service, or otherwise change the nature of the operation being performed.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>injection attacks:</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>SQL injection attacks can be performed in <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> by supplying malicious input to values that are used in a query predicate and in parameter names.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To avoid the risk of SQL injection, you should never combine user input with <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> command text.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>queries accept parameters everywhere that literals are accepted.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You should use parameterized queries instead of injecting literals from an external agent directly into the query.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You should also consider using query builder methods to safely construct <bpt id="p1">[</bpt>Entity SQL<ept id="p1">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>injection attacks:</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Although query composition is possible in <ph id="ph1">[!INCLUDE[linq_entities](../../../../../includes/linq-entities-md.md)]</ph>, it is performed through the object model API.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Unlike <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> queries, <ph id="ph2">[!INCLUDE[linq_entities](../../../../../includes/linq-entities-md.md)]</ph> queries are not composed by using string manipulation or concatenation, and they are not susceptible to traditional SQL injection attacks.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Prevent very large result sets.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A very large result set could cause the client system to shut down if the client is performing operations that consume resources proportional to the size of the result set.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Unexpectedly large result sets can occur under the following conditions:</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In queries against a large database that do not include appropriate filter conditions.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In queries that create Cartesian joins on the server.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In nested <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> queries.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When accepting user input, you must make sure that the input cannot cause result sets to become larger than what the system can handle.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Linq.Queryable.Take%2A&gt;</ph> method in <ph id="ph2">[!INCLUDE[linq_entities](../../../../../includes/linq-entities-md.md)]</ph> or the <bpt id="p1">[</bpt>LIMIT<ept id="p1">](../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)</ept> operator in <ph id="ph3">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> to limit the size of the result set.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Avoid Returning IQueryable Results When Exposing Methods to Potentially Untrusted Callers.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Avoid returning <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> types from methods that are exposed to potentially untrusted callers for the following reasons:</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A consumer of a query that exposes an <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> type could call methods on the result that expose secure data or increase the size of the result set.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For example, consider the following method signature:</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A consumer of this query could call <ph id="ph1">`.Include("Orders")`</ph> on the returned <ph id="ph2">`IQueryable&lt;Customer&gt;`</ph> to retrieve data that the query did not intend to expose.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This can be avoided by changing the return type of the method to <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> and calling a method (such as <ph id="ph2">`.ToList()`</ph>) that materializes the results.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> queries are executed when the results are iterated over, a consumer of a query that exposes an <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph> type could catch exceptions that are thrown.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Exceptions could contain information not intended for the consumer.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Security Considerations for Entities</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following security considerations apply when generating and working with entity types.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Do not share an ObjectContext across application domains.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Sharing an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> with more than one application domain may expose information in the connection string.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Instead, you should transfer serialized objects or object graphs to the other application domain and then attach those objects to an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> in that application domain.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Prevent type safety violations.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If type safety is violated, the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> cannot guarantee the integrity of data in objects.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Type safety violations could occur if you allow untrusted applications to run with full-trust code access security.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Handle exceptions.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Access methods and properties of an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> within a try-catch block.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Catching exceptions prevents unhandled exceptions from exposing entries in the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph> or model information (such as table names) to users of your application.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Security Considerations for ASP.NET Applications</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following should be considered when you work with paths in <ph id="ph1">[!INCLUDE[vstecasp](../../../../../includes/vstecasp-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Verify whether your host performs path checks.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`|DataDirectory|`</ph> (enclosed in pipe symbols) substitution string is used, <ph id="ph2">[!INCLUDE[vstecado](../../../../../includes/vstecado-md.md)]</ph> verifies that the resolved path is supported.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For example, ".." is not allowed behind <ph id="ph1">`DataDirectory`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>That same check for resolving the Web application root operator (<ph id="ph1">`~`</ph>) is performed by the process hosting <ph id="ph2">[!INCLUDE[vstecasp](../../../../../includes/vstecasp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>IIS performs this check; however, hosts other than IIS may not verify that the resolved path is supported.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You should know the behavior of the host on which you deploy an <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Do not make assumptions about resolved path names.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Although the values to which the root operator (<ph id="ph1">`~`</ph>) and the <ph id="ph2">`DataDirectory`</ph> substitution string resolve should remain constant during the application's runtime, the <ph id="ph3">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> does not restrict the host from modifying these values.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Verify the path length before deployment.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Before deploying an <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> application, you should ensure that the values of the root operator (~) and <ph id="ph2">`DataDirectory`</ph> substitution string do not exceed the limits of the path length in the operating system.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecado](../../../../../includes/vstecado-md.md)]</ph> data providers do not ensure that the path length is within valid limits.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Security Considerations for ADO.NET Metadata</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The following security considerations apply when generating and working with model and mapping files.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Do not expose sensitive information through logging.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>metadata service components do not log any private information.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If there are results that cannot be returned because of access restrictions, database management systems and file systems should return zero results instead of raising an exception that could contain sensitive information.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Do not accept MetadataWorkspace objects from untrusted sources.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Applications should not accept instances of the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> class from untrusted sources.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Instead, you should explicitly construct and populate a workspace from such a source.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing ADO.NET Applications<ept id="p1">](../../../../../docs/framework/data/adonet/securing-ado-net-applications.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Deployment Considerations<ept id="p1">](../../../../../docs/framework/data/adonet/ef/deployment-considerations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration Considerations<ept id="p1">](../../../../../docs/framework/data/adonet/ef/migration-considerations.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>