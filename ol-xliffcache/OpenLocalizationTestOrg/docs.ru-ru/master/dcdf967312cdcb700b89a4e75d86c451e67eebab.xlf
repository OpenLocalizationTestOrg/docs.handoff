<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-reference-a-strong-named-assembly.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcdf967312cdcb700b89a4e75d86c451e67eebab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\app-domains\how-to-reference-a-strong-named-assembly.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9566b1541a215981302097dbd6ed4e09a578b586</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2162877f4eaf376448623299528d972a794a33a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Reference a Strong-Named Assembly | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Reference a Strong-Named Assembly</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The process for referencing types or resources in a strong-named assembly is usually transparent.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can make the reference either at compile time (early binding) or at run time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A compile-time reference occurs when you indicate to the compiler that your assembly explicitly references another assembly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When you use compile-time referencing, the compiler automatically gets the public key of the targeted strong-named assembly and places it in the assembly reference of the assembly being compiled.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A strong-named assembly can only use types from other strong-named assemblies.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Otherwise, the security of the strong-named assembly would be compromised.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To make a compile-time reference to a strong-named assembly</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>At the command prompt, type the following command:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>compiler command<ept id="p1">*</ept><ph id="ph2">&gt; </ph><bpt id="p2">**</bpt>/reference:<ept id="p2">**</ept><ph id="ph3">\&lt;</ph><bpt id="p3">*</bpt>assembly name<ept id="p3">*</ept><ph id="ph4">&gt;</ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this command, <bpt id="p1">*</bpt>compiler command<ept id="p1">*</ept> is the compiler command for the language you are using, and <bpt id="p2">*</bpt>assembly name<ept id="p2">*</ept> is the name of the strong-named assembly being referenced.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use other compiler options, such as the <bpt id="p1">**</bpt>/t:library<ept id="p1">**</ept> option for creating a library assembly.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example creates an assembly called <ph id="ph1">`myAssembly.dll`</ph> that references a strong-named assembly called <ph id="ph2">`myLibAssembly.dll`</ph> from a code module called <ph id="ph3">`myAssembly.cs`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To make a run-time reference to a strong-named assembly</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you make a run-time reference to a strong-named assembly (for example, by using the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName&gt;</ph> method), you must use the display name of the referenced strong-named assembly.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The syntax of a display name is as follows:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept><ph id="ph2">&gt;</ph><bpt id="p2">**</bpt>,<ept id="p2">**</ept> <ph id="ph3">\&lt;</ph><bpt id="p3">*</bpt>version number<ept id="p3">*</ept><ph id="ph4">&gt;</ph><bpt id="p4">**</bpt>,<ept id="p4">**</ept> <ph id="ph5">\&lt;</ph><bpt id="p5">*</bpt>culture<ept id="p5">*</ept><ph id="ph6">&gt;</ph><bpt id="p6">**</bpt>,<ept id="p6">**</ept> <ph id="ph7">\&lt;</ph><bpt id="p7">*</bpt>public key token<ept id="p7">*</ept><ph id="ph8">&gt;</ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`PublicKeyToken`</ph> is the hexadecimal form of the public key token.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If there is no culture value, use <ph id="ph1">`Culture=neutral`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following code example shows how to use this information with the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can print the hexadecimal format of the public key and public key token for a specific assembly by using the following <bpt id="p1">[</bpt>Strong Name (Sn.exe)<ept id="p1">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept> command:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sn -Tp <ph id="ph1">\&lt;</ph><ept id="p1">**</ept> <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept> <bpt id="p3">**</bpt><ph id="ph2">&gt;</ph><ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you have a public key file, you can use the following command instead (note the difference in case on the command-line option):</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>sn -tp <ph id="ph1">\&lt;</ph><ept id="p1">**</ept> <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept> <bpt id="p3">**</bpt><ph id="ph2">&gt;</ph><ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](../../../docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>