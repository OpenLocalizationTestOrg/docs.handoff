{"content":"---\ntitle: \"How to: Bind a Windows Forms Control to a Factory Object\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"controls [Windows Forms], binding\"\n  - \"factory objects [Windows Forms], binding to\"\n  - \"BindingSource component [Windows Forms], binding to a factory object\"\n  - \"BindingSource component [Windows Forms], examples\"\nms.assetid: 7d59af89-ff82-41d8-a48a-f1fbae788b0d\n---\n# How to: Bind a Windows Forms Control to a Factory Object\nWhen you are building controls that interact with data, you will sometimes find it necessary to bind a control to an object or method that generates other objects. Such an object or method is called a factory. Your data source might be, for example, the return value from a method call, instead of an object in memory or a type. You can bind a control to this kind of data source as long as the source returns a collection.  \n  \n You can easily bind a control to a factory object by using the <xref:System.Windows.Forms.BindingSource> control.  \n  \n## Example  \n The following example demonstrates how to bind a <xref:System.Windows.Forms.DataGridView> control to a factory method by using a <xref:System.Windows.Forms.BindingSource> control. The factory method is named `GetOrdersByCustomerId`, and it returns all the orders for a given customer in the Northwind database.  \n  \n [!code-cpp[System.Windows.Forms.DataConnector.BindToFactory#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.BindToFactory/CPP/form1.cpp#1)]\n [!code-csharp[System.Windows.Forms.DataConnector.BindToFactory#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.BindToFactory/CS/form1.cs#1)]\n [!code-vb[System.Windows.Forms.DataConnector.BindToFactory#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.BindToFactory/VB/form1.vb#1)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Data, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- <xref:System.Windows.Forms.BindingNavigator>\n- <xref:System.Windows.Forms.DataGridView>\n- <xref:System.Windows.Forms.BindingSource>\n- [BindingSource Component](bindingsource-component.md)\n- [How to: Bind a Windows Forms Control to a Type](how-to-bind-a-windows-forms-control-to-a-type.md)\n","nodes":[{"pos":[4,427],"embed":true,"restype":"x-metadata","content":"title: \"How to: Bind a Windows Forms Control to a Factory Object\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"controls [Windows Forms], binding\"\n  - \"factory objects [Windows Forms], binding to\"\n  - \"BindingSource component [Windows Forms], binding to a factory object\"\n  - \"BindingSource component [Windows Forms], examples\"\nms.assetid: 7d59af89-ff82-41d8-a48a-f1fbae788b0d","nodes":[{"content":"How to: Bind a Windows Forms Control to a Factory Object","nodes":[{"pos":[0,56],"content":"How to: Bind a Windows Forms Control to a Factory Object","nodes":[{"content":"How to: Bind a Windows Forms Control to a Factory Object","pos":[0,56]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[434,490],"content":"How to: Bind a Windows Forms Control to a Factory Object","linkify":"How to: Bind a Windows Forms Control to a Factory Object","nodes":[{"content":"How to: Bind a Windows Forms Control to a Factory Object","pos":[0,56]}]},{"content":"When you are building controls that interact with data, you will sometimes find it necessary to bind a control to an object or method that generates other objects.","pos":[491,654]},{"content":"Such an object or method is called a factory.","pos":[655,700]},{"content":"Your data source might be, for example, the return value from a method call, instead of an object in memory or a type.","pos":[701,819]},{"content":"You can bind a control to this kind of data source as long as the source returns a collection.","pos":[820,914]},{"pos":[921,1034],"content":"You can easily bind a control to a factory object by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> control.","source":"You can easily bind a control to a factory object by using the <xref:System.Windows.Forms.BindingSource> control."},{"pos":[1043,1050],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to bind a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a factory method by using a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> control.","pos":[1054,1233],"source":"The following example demonstrates how to bind a <xref:System.Windows.Forms.DataGridView> control to a factory method by using a <xref:System.Windows.Forms.BindingSource> control."},{"content":"The factory method is named <ph id=\"ph1\">`GetOrdersByCustomerId`</ph>, and it returns all the orders for a given customer in the Northwind database.","pos":[1234,1364],"source":" The factory method is named `GetOrdersByCustomerId`, and it returns all the orders for a given customer in the Northwind database."},{"pos":[1912,1930],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[1934,1956]},{"content":"References to the System, System.Data, System.Drawing and System.Windows.Forms assemblies.","pos":[1966,2056]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2063,2417],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[2418,2506]},{"pos":[2515,2523],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2661,2714],"content":"<bpt id=\"p1\">[</bpt>BindingSource Component<ept id=\"p1\">](bindingsource-component.md)</ept>","source":"[BindingSource Component](bindingsource-component.md)"},{"pos":[2717,2815],"content":"<bpt id=\"p1\">[</bpt>How to: Bind a Windows Forms Control to a Type<ept id=\"p1\">](how-to-bind-a-windows-forms-control-to-a-type.md)</ept>","source":"[How to: Bind a Windows Forms Control to a Type](how-to-bind-a-windows-forms-control-to-a-type.md)"}]}