<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="specifying-an-endpoint-address.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">721851c95c7848c1bf25f1c519bb90ce9d804887</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\specifying-an-endpoint-address.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88f52ef71d07dfbe9de1327296a45434dab965ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcf0f32627c3cff7b1228001d1556b00e54448f2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Specifying an Endpoint Address | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Specifying an Endpoint Address</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>All communication with a <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> service occurs through its endpoints.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> contains an <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Address%2A&gt;</ph>, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph>, and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Contract%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The contract specifies which operations are available.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The binding specifies how to communicate with the service, and the address specifies where to find the service.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Every endpoint must have a unique address.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The endpoint address is represented by the <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> class, which contains a Uniform Resource Identifier (URI) that represents the address of the service, an <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Identity%2A&gt;</ph>, which represents the security identity of the service, and a collection of optional <ph id="ph3">&lt;xref:System.ServiceModel.EndpointAddress.Headers%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The optional headers provide more detailed addressing information to identify or interact with the endpoint.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, headers can indicate how to process an incoming message, where the endpoint should send a reply message, or which instance of a service to use to process an incoming message from a particular user when multiple instances are available.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Definition of an Endpoint Address</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph>, an <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> models an endpoint reference (EPR) as defined in the WS-Addressing standard.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The address URI for most transports has four parts.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, this URI, "http://www.fabrikam.com:322/mathservice.svc/secureEndpoint" has the following four parts:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Scheme: http:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Machine: www.fabrikam.com</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(Optional) Port: 322</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Path: /mathservice.svc/secureEndpoint</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Part of the EPR model is that each endpoint reference can carry some reference parameters that add extra identifying information.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph>, these reference parameters are modeled as instances of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.AddressHeader&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The endpoint address for a service can be specified either imperatively by using code or declaratively through configuration.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Defining endpoints in code is usually not practical because the bindings and addresses for a deployed service are typically different from those used while the service is being developed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Generally, it is more practical to define service endpoints using configuration rather than code.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Keeping the binding and addressing information out of the code allows them to change without having to recompile and redeploy the application.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If no endpoints are specified in code or in configuration, then the runtime adds one default endpoint on each base address for each contract implemented by the service.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There are two ways to specify endpoint addresses for a service in <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can specify an absolute address for each endpoint associated with the service or you can provide a base address for the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> of a service and then specify an address for each endpoint associated with this service that is defined relative to this base address.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use each of these procedures to specify the endpoint addresses for a service in either configuration or code.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you do not specify a relative address, the service uses the base address.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can also have multiple base addresses for a service, but each service is allowed only one base address for each transport.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you have multiple endpoints, each of which is configured with a different binding, their addresses must be unique.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Endpoints that use the same binding but different contracts can use the same address.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When hosting with IIS, you do not manage the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance yourself.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The base address is always the address specified in the .svc file for the service when hosting in IIS.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>So you must use relative endpoint addresses for IIS-hosted service endpoints.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Supplying a fully-qualified endpoint address can lead to errors in the deployment of the service.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Deploying an Internet Information Services-Hosted WCF Service<ept id="p1">](../../../docs/framework/wcf/feature-details/deploying-an-internet-information-services-hosted-wcf-service.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Defining Endpoint Addresses in Configuration</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To define an endpoint in a configuration file, use the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>endpoint&gt;<ept id="p1">](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>S_UEHelloWorld#5<ept id="p2">](../../../samples/snippets/common/VS_Snippets_CFX/s_uehelloworld/common/serviceapp2.config#5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method is called (that is, when the hosting application attempts to start the service), the system looks for a <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>service&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/service.md)</ept> element with a name attribute that specifies "UE.Samples.HelloService".</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>service&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/service.md)</ept> element is found, the system loads the specified class and creates endpoints using the endpoint definitions provided in the configuration file.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This mechanism allows you to load and start a service with two lines of code while keeping binding and addressing information out of your code.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The advantage of this approach is that these changes can be made without having to recompile or redeploy the application.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The optional headers are declared in a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>headers&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/headers-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following is an example of the elements used to specify endpoints for a service in a configuration file that distinguishes between two headers: "Gold" clients from http://tempuri1.org/ and "Standard" clients from http://tempuri2.org/.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The client calling this service must have the appropriate <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>headers&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/headers-element.md)</ept> in its configuration file.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>S_UEHelloWorld#1<ept id="p2">](../../../samples/snippets/common/VS_Snippets_CFX/s_uehelloworld/common/serviceapp.config#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Headers can also be set on individual messages instead of all messages on an endpoint (as shown previously).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is done by using <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application to add a custom header to the outgoing message, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>OperationContextScope#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>OperationContextScope#4<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Endpoint Address in Metadata</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An endpoint address is represented in Web Services Description Language (WSDL) as a WS-Addressing <ph id="ph1">`EndpointReference`</ph> (EPR) element inside the corresponding endpoint's <ph id="ph2">`wsdl:port`</ph> element.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The EPR contains the endpoint's address as well as any address properties.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Note that the EPR inside <ph id="ph1">`wsdl:port`</ph> replaces <ph id="ph2">`soap:Address`</ph> as seen in the following example.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Defining Endpoint Addresses in Code</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An endpoint address can be created in code with the <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The URI specified for the endpoint address can be a fully-qualified path or a path that is relative to the service's base address.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to create an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> class and add it to the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance that is hosting the service.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to specify the full endpoint address in code.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>S_UEHelloWorld#2<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/s_uehelloworld/cs/snippet.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to add a relative address ("MyService") to the base address of the service host.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>S_UEHelloWorld#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/s_uehelloworld/cs/snippet.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Properties of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> in the service application must not be modified subsequent to the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method on <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Some members, such as the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph> property and the <ph id="ph2">`AddServiceEndpoint`</ph> methods on <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, throw an exception if modified after that point.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Others permit you to modify them, but the result is undefined.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Similarly, on the client the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> values must not be modified after the call to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.Credentials%2A&gt;</ph> property throws an exception if modified after that point.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The other client description values can be modified without error, but the result is undefined.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Whether for the service or client, it is recommended that you modify the description prior to calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Using Default Endpoints</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If no endpoints are specified in code or in configuration then the runtime provides default endpoints by adding one default endpoint on each base address for each service contract implemented by the service.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The base address can be specified in code or in configuration, and the default endpoints are added when <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> is called on the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If endpoints are explicitly provided, the default endpoints can still be added by calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> before calling <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> default endpoints, bindings, and behaviors, see <bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../docs/framework/wcf/simplified-configuration.md)</ept> and <bpt id="p2">[</bpt>Simplified Configuration for WCF Services<ept id="p2">](../../../docs/framework/wcf/samples/simplified-configuration-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Service Identity and Authentication<ept id="p1">](../../../docs/framework/wcf/feature-details/service-identity-and-authentication.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Endpoint Creation Overview<ept id="p1">](../../../docs/framework/wcf/endpoint-creation-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hosting<ept id="p1">](../../../docs/framework/wcf/feature-details/hosting.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>