{"content":"---\ntitle: \"Extension Indexer Property (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.XmlPropertyExtensionIndexer\"\nhelpviewer_keywords: \n  - \"Visual Basic code, accessing XML\"\n  - \"XML extension indexer [Visual Basic]\"\n  - \"extension indexer [Visual Basic]\"\n  - \"XML [Visual Basic], accessing\"\nms.assetid: a16a4b13-54be-432c-82b3-a87091464ada\n---\n# Extension Indexer Property (Visual Basic)\nProvides access to individual elements in a collection.  \n  \n## Syntax  \n  \n```  \nobject(index)  \n```  \n  \n## Parts  \n  \n|Term|Definition|  \n|---|---|  \n|`object`|Required. A queryable collection. That is, a collection that implements <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>.|  \n|(|Required. Denotes the start of the indexer property.|  \n|`index`|Required. An integer expression that specifies the zero-based position of an element of the collection.|  \n|)|Required. Denotes the end of the indexer property.|  \n  \n## Return Value  \n The object from the specified location in the collection, or `Nothing` if the index is out of range.  \n  \n## Remarks  \n You can use the extension indexer property to access individual elements in a collection. This indexer property is typically used on the output of XML axis properties. The XML child and XML descendent axis properties return collections of <xref:System.Xml.Linq.XElement> objects or an attribute value.  \n  \n The Visual Basic compiler converts extension indexer properties to calls to the `ElementAtOrDefault` method. Unlike an array indexer, the `ElementAtOrDefault` method returns `Nothing` if the index is out of range. This behavior is useful when you cannot easily determine the number of elements in a collection.  \n  \n This indexer property is like an extension property for collections that implement <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>: it is used only if the collection does not have an indexer or a default property.  \n  \n To access the value of the first element in a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute> objects, you can use the XML `Value` property. For more information, see [XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md).  \n  \n## Example  \n The following example shows how to use the extension indexer to access the second child node in a collection of <xref:System.Xml.Linq.XElement> objects. The collection is accessed by using the child axis property, which gets all child elements named `phone` in the `contact` object.  \n  \n [!code-vb[VbXMLSamples#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbXMLSamples/VB/XMLSamples11.vb#24)]  \n  \n This code displays the following text:  \n  \n `Second phone number: 425-555-0145`  \n  \n## See also\n\n- <xref:System.Xml.Linq.XElement>\n- [XML Axis Properties](../../../visual-basic/language-reference/xml-axis/index.md)\n- [XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)\n- [Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)\n- [XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)\n","nodes":[{"pos":[4,353],"embed":true,"restype":"x-metadata","content":"title: \"Extension Indexer Property (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.XmlPropertyExtensionIndexer\"\nhelpviewer_keywords: \n  - \"Visual Basic code, accessing XML\"\n  - \"XML extension indexer [Visual Basic]\"\n  - \"extension indexer [Visual Basic]\"\n  - \"XML [Visual Basic], accessing\"\nms.assetid: a16a4b13-54be-432c-82b3-a87091464ada","nodes":[{"content":"Extension Indexer Property (Visual Basic)","nodes":[{"pos":[0,41],"content":"Extension Indexer Property (Visual Basic)","nodes":[{"content":"Extension Indexer Property (Visual Basic)","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[360,401],"content":"Extension Indexer Property (Visual Basic)","linkify":"Extension Indexer Property (Visual Basic)","nodes":[{"content":"Extension Indexer Property (Visual Basic)","pos":[0,41]}]},{"content":"Provides access to individual elements in a collection.","pos":[402,457]},{"pos":[466,472],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[512,517],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Term","pos":[524,528]},{"content":"Definition","pos":[529,539]},{"content":"Required.","pos":[565,574]},{"content":"A queryable collection.","pos":[575,598]},{"content":"That is, a collection that implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Linq.IQueryable%601&gt;</ph>.","pos":[599,724],"source":" That is, a collection that implements <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>."},{"content":"(","pos":[729,730]},{"content":"Required.","pos":[731,740]},{"content":"Denotes the start of the indexer property.","pos":[741,783]},{"content":"Required.","pos":[796,805]},{"content":"An integer expression that specifies the zero-based position of an element of the collection.","pos":[806,899]},{"content":")","pos":[904,905]},{"content":"Required.","pos":[906,915]},{"content":"Denotes the end of the indexer property.","pos":[916,956]},{"pos":[966,978],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[982,1082],"content":"The object from the specified location in the collection, or <ph id=\"ph1\">`Nothing`</ph> if the index is out of range.","source":"The object from the specified location in the collection, or `Nothing` if the index is out of range."},{"pos":[1091,1098],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the extension indexer property to access individual elements in a collection.","pos":[1102,1191]},{"content":"This indexer property is typically used on the output of XML axis properties.","pos":[1192,1269]},{"content":"The XML child and XML descendent axis properties return collections of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects or an attribute value.","pos":[1270,1403],"source":" The XML child and XML descendent axis properties return collections of <xref:System.Xml.Linq.XElement> objects or an attribute value."},{"content":"The Visual Basic compiler converts extension indexer properties to calls to the <ph id=\"ph1\">`ElementAtOrDefault`</ph> method.","pos":[1410,1518],"source":"The Visual Basic compiler converts extension indexer properties to calls to the `ElementAtOrDefault` method."},{"content":"Unlike an array indexer, the <ph id=\"ph1\">`ElementAtOrDefault`</ph> method returns <ph id=\"ph2\">`Nothing`</ph> if the index is out of range.","pos":[1519,1623],"source":" Unlike an array indexer, the `ElementAtOrDefault` method returns `Nothing` if the index is out of range."},{"content":"This behavior is useful when you cannot easily determine the number of elements in a collection.","pos":[1624,1720]},{"pos":[1727,1979],"content":"This indexer property is like an extension property for collections that implement <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Linq.IQueryable%601&gt;</ph>: it is used only if the collection does not have an indexer or a default property.","source":"This indexer property is like an extension property for collections that implement <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>: it is used only if the collection does not have an indexer or a default property."},{"content":"To access the value of the first element in a collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects, you can use the XML <ph id=\"ph3\">`Value`</ph> property.","pos":[1986,2161],"source":"To access the value of the first element in a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute> objects, you can use the XML `Value` property."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML Value Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>.","pos":[2162,2282],"source":" For more information, see [XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)."},{"pos":[2291,2298],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to use the extension indexer to access the second child node in a collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[2302,2454],"source":"The following example shows how to use the extension indexer to access the second child node in a collection of <xref:System.Xml.Linq.XElement> objects."},{"content":"The collection is accessed by using the child axis property, which gets all child elements named <ph id=\"ph1\">`phone`</ph> in the <ph id=\"ph2\">`contact`</ph> object.","pos":[2455,2584],"source":" The collection is accessed by using the child axis property, which gets all child elements named `phone` in the `contact` object."},{"content":"This code displays the following text:","pos":[2713,2751]},{"pos":[2802,2810],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2848,2929],"content":"<bpt id=\"p1\">[</bpt>XML Axis Properties<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/index.md)</ept>","source":"[XML Axis Properties](../../../visual-basic/language-reference/xml-axis/index.md)"},{"pos":[2932,3010],"content":"<bpt id=\"p1\">[</bpt>XML Literals<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/index.md)</ept>","source":"[XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)"},{"pos":[3013,3122],"content":"<bpt id=\"p1\">[</bpt>Creating XML in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept>","source":"[Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)"},{"pos":[3125,3218],"content":"<bpt id=\"p1\">[</bpt>XML Value Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>","source":"[XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)"}]}