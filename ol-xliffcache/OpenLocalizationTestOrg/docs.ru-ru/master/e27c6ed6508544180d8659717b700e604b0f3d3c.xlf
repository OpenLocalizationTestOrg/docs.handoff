<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-import-custom-policy-assertions.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e27c6ed6508544180d8659717b700e604b0f3d3c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-import-custom-policy-assertions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0cff9c7ced9d946247ea226a741ff9c723b9bc4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d4d7bf2710a42e32ed3b51dc0c205b42a8356d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Import Custom Policy Assertions</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Import Custom Policy Assertions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Policy assertions describe the capabilities and requirements of a service endpoint.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Client applications can use policy assertions in service metadata to configure the client binding or to customize the service contract for a service endpoint.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Custom policy assertions are imported by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface and passing that object to the metadata system or by registering the implementation type in your application configuration file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Implementations of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface must provide a default constructor.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To import custom policy assertions</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface on a class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See the following procedures.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Insert the custom policy importer either by:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Using a configuration file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See the following procedures.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using a configuration file with <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See the following procedures.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Programmatically inserting the policy importer.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See the following procedures.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To implement the System.ServiceModel.Description.IPolicyImportExtension interface on any class</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A?displayProperty=nameWithType&gt;</ph> method, for each policy subject that you are interested in, find the policy assertions that you want to import by calling the appropriate method (depending upon the scope of the assertion that you want) on the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph> object passed to the method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate the custom policy assertion and remove it from the collection in one step.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you use the remove method to locate and remove the assertion, you do not have to perform step 4.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Process the policy assertions.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Note that the policy system does not normalize nested policies and <ph id="ph1">`wsp:optional`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You must process these constructs in your policy import extension implementation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Perform the customization to the binding or contract that supports the capability or requirement specified by the policy assertion.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Typically assertions indicate that a binding requires a particular configuration or a specific binding element.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Make these modifications by accessing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A?displayProperty=nameWithType&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Other assertions require that you modify the contract.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can access and modify the contract using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Note that your policy importer may get called multiple times for the same binding and contract, but different policy alternatives if importing a policy alternative fails.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Your code should be resilient to this behavior.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Remove the custom policy assertion from the assertion collection.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you do not remove the assertion Windows Communication Foundation (WCF) assumes that the policy import was unsuccessful and does not import the associated binding.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you used the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate the custom policy assertion and remove it from the collection in one step you do not have to perform this step.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To insert the custom policy importer into the metadata System using a configuration file</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add the importer type to the <ph id="ph1">`&lt;extensions&gt;`</ph> element inside the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>policyImporters&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/policyimporters.md)</ept> element in the client configuration file.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the client application, use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> to resolve the metadata and the importer is invoked automatically.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To insert the custom policy importer into the metadata system using Svcutil.exe</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add the importer type to the <ph id="ph1">`&lt;extensions&gt;`</ph> element inside the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>policyImporters&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/policyimporters.md)</ept> element in the Svcutil.exe.config configuration file.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also point Svcutil.exe to load policy importer types registered in a different configuration file by using the <ph id="ph1">`/svcutilConfig`</ph> option.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to import the metadata and the importer is invoked automatically.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To insert the custom policy importer into the metadata system programmatically</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add the importer to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property (for example, if you are using the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph>) prior to importing the metadata.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Extending the Metadata System<ept id="p1">](../../../../docs/framework/wcf/extending/extending-the-metadata-system.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>