{"content":"---\ntitle: \"Visual Basic Language Walkthroughs\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Visual Basic, walkthroughs\"\n  - \"examples [Visual Basic]\"\n  - \"Visual Basic code, walkthroughs\"\n  - \"walkthroughs [Visual Basic]\"\nms.assetid: e4e1f849-e1ce-4cf7-8483-d9b4c4887a8e\n---\n# Visual Basic Language Walkthroughs\nWalkthroughs give step-by-step instructions for common scenarios, which makes them a good place to start learning about the product or a particular feature area.  \n  \n [Writing an Async Program](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)  \n Shows how to create an asynchronous solution by using [Async](../visual-basic/language-reference/modifiers/async.md) and [Await](../visual-basic/language-reference/operators/await-operator.md).  \n  \n [Declaring and Raising Events](../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)  \n Illustrates how events are declared and raised in Visual Basic.  \n  \n [Handling Events](../visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)  \n Shows how to handle events using either the standard `WithEvents` keyword or the new `AddHandler`/`RemoveHandler` keywords.  \n  \n [Creating and Implementing Interfaces](../visual-basic/programming-guide/language-features/interfaces/walkthrough-creating-and-implementing-interfaces.md)  \n Shows how interfaces are declared and implemented in Visual Basic.  \n  \n [Defining Classes](../visual-basic/programming-guide/language-features/objects-and-classes/walkthrough-defining-classes.md)  \n Describes how to declare a class and its fields, properties, methods, and events.  \n  \n [Writing Queries in Visual Basic](../visual-basic/programming-guide/concepts/linq/walkthrough-writing-queries.md)  \n Demonstrates how you can use Visual Basic language features to write [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] query expressions.  \n  \n [Implementing IEnumerable(Of T) in Visual Basic](../visual-basic/programming-guide/language-features/control-flow/walkthrough-implementing-ienumerable-of-t.md)  \n Demonstrates how to create a class that implements the `IEnumerable(Of String)` interface and a class that implements the `IEnumerator(Of String)` interface to read a text file one line at a time.  \n  \n [Calling Windows APIs](../visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)  \n Explains how to use `Declare` statements and call Windows APIs. Includes information about using attributes to control marshaling for the API call and how to expose an API call as a method of a class.  \n  \n [Creating COM Objects with Visual Basic](../visual-basic/programming-guide/com-interop/walkthrough-creating-com-objects.md)  \n Demonstrates how to create COM objects in Visual Basic, both with and without the COM class template.  \n  \n [Implementing Inheritance with COM Objects](../visual-basic/programming-guide/com-interop/walkthrough-implementing-inheritance-with-com-objects.md)  \n Demonstrates how to use Visual Basic 6.0 to create a COM object containing a class, and then use it as a base class in Visual Basic.  \n  \n [Determining Where My.Application.Log Writes Information](../visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)  \n Describes the default `My.Application.Log` settings and how to determine the settings for your application.  \n  \n [Changing Where My.Application.Log Writes Information](../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)  \n Shows how to override the default `My.Application.Log` and `My.Log` settings for logging event information and cause the `Log` object to write to other log listeners.  \n  \n [Filtering My.Application.Log Output](../visual-basic/developing-apps/programming/log-info/walkthrough-filtering-my-application-log-output.md)  \n Demonstrates how to change the default log filtering for the `My.Application.Log` object.  \n  \n [Creating Custom Log Listeners](../visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md)  \n Demonstrates how to create a custom log listener and configure it to listen to the output of the `My.Application.Log` object.  \n  \n [Embedding Types from Managed Assemblies](../visual-basic/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-vs.md)  \n Describes how to create an assembly and a client program that embeds types from it.  \n  \n [Validating That Passwords Are Complex (Visual Basic)](../visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md)  \n Demonstrates how to check for strong-password characteristics and update a string parameter with information about which checks a password fails.  \n  \n [Encrypting and Decrypting Strings in Visual Basic](../visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md)  \n Shows how to use the <xref:System.Security.Cryptography.DESCryptoServiceProvider> class to encrypt and decrypt strings.  \n  \n [Manipulating Files and Folders in Visual Basic](../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)  \n Demonstrates how to use Visual Basic functions to determine information about a file, search for a string in a file, and write to a file.  \n  \n [Manipulating Files Using .NET Framework Methods](../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-by-using-net-framework-methods.md)  \n Demonstrates how to use [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] methods to determine information about a file, search for a string in a file, and write to a file.  \n  \n [Persisting an Object in Visual Basic](../visual-basic/programming-guide/concepts/serialization/walkthrough-persisting-an-object-in-visual-studio.md)  \n Demonstrates how to create a simple object and persist its data to a file.  \n  \n [Walkthrough: Test-First Support with the Generate From Usage Feature](/visualstudio/ide/walkthrough-test-first-support-with-the-generate-from-usage-feature)  \n Demonstrates how to do test-first development, in which you first write unit tests and then write the source code to make the tests succeed.\n","nodes":[{"pos":[4,273],"embed":true,"restype":"x-metadata","content":"title: \"Visual Basic Language Walkthroughs\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Visual Basic, walkthroughs\"\n  - \"examples [Visual Basic]\"\n  - \"Visual Basic code, walkthroughs\"\n  - \"walkthroughs [Visual Basic]\"\nms.assetid: e4e1f849-e1ce-4cf7-8483-d9b4c4887a8e","nodes":[{"content":"Visual Basic Language Walkthroughs","nodes":[{"pos":[0,34],"content":"Visual Basic Language Walkthroughs","nodes":[{"content":"Visual Basic Language Walkthroughs","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[280,314],"content":"Visual Basic Language Walkthroughs","linkify":"Visual Basic Language Walkthroughs","nodes":[{"content":"Visual Basic Language Walkthroughs","pos":[0,34]}]},{"content":"Walkthroughs give step-by-step instructions for common scenarios, which makes them a good place to start learning about the product or a particular feature area.","pos":[315,476]},{"content":"<bpt id=\"p1\">[</bpt>Writing an Async Program<ept id=\"p1\">](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>","pos":[483,603],"source":"[Writing an Async Program](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)"},{"content":"Shows how to create an asynchronous solution by using <bpt id=\"p1\">[</bpt>Async<ept id=\"p1\">](../visual-basic/language-reference/modifiers/async.md)</ept> and <bpt id=\"p2\">[</bpt>Await<ept id=\"p2\">](../visual-basic/language-reference/operators/await-operator.md)</ept>.","pos":[607,800],"source":"Shows how to create an asynchronous solution by using [Async](../visual-basic/language-reference/modifiers/async.md) and [Await](../visual-basic/language-reference/operators/await-operator.md)."},{"content":"<bpt id=\"p1\">[</bpt>Declaring and Raising Events<ept id=\"p1\">](../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)</ept>","pos":[807,941],"source":"[Declaring and Raising Events](../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)"},{"content":"Illustrates how events are declared and raised in Visual Basic.","pos":[945,1008]},{"content":"<bpt id=\"p1\">[</bpt>Handling Events<ept id=\"p1\">](../visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)</ept>","pos":[1015,1123],"source":"[Handling Events](../visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)"},{"content":"Shows how to handle events using either the standard <ph id=\"ph1\">`WithEvents`</ph> keyword or the new <ph id=\"ph2\">`AddHandler`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`RemoveHandler`</ph> keywords.","pos":[1127,1250],"source":"Shows how to handle events using either the standard `WithEvents` keyword or the new `AddHandler`/`RemoveHandler` keywords."},{"content":"<bpt id=\"p1\">[</bpt>Creating and Implementing Interfaces<ept id=\"p1\">](../visual-basic/programming-guide/language-features/interfaces/walkthrough-creating-and-implementing-interfaces.md)</ept>","pos":[1257,1411],"source":"[Creating and Implementing Interfaces](../visual-basic/programming-guide/language-features/interfaces/walkthrough-creating-and-implementing-interfaces.md)"},{"content":"Shows how interfaces are declared and implemented in Visual Basic.","pos":[1415,1481]},{"content":"<bpt id=\"p1\">[</bpt>Defining Classes<ept id=\"p1\">](../visual-basic/programming-guide/language-features/objects-and-classes/walkthrough-defining-classes.md)</ept>","pos":[1488,1611],"source":"[Defining Classes](../visual-basic/programming-guide/language-features/objects-and-classes/walkthrough-defining-classes.md)"},{"content":"Describes how to declare a class and its fields, properties, methods, and events.","pos":[1615,1696]},{"content":"<bpt id=\"p1\">[</bpt>Writing Queries in Visual Basic<ept id=\"p1\">](../visual-basic/programming-guide/concepts/linq/walkthrough-writing-queries.md)</ept>","pos":[1703,1816],"source":"[Writing Queries in Visual Basic](../visual-basic/programming-guide/concepts/linq/walkthrough-writing-queries.md)"},{"content":"Demonstrates how you can use Visual Basic language features to write <ph id=\"ph1\">[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]</ph> query expressions.","pos":[1820,1963],"source":"Demonstrates how you can use Visual Basic language features to write [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] query expressions."},{"content":"<bpt id=\"p1\">[</bpt>Implementing IEnumerable(Of T) in Visual Basic<ept id=\"p1\">](../visual-basic/programming-guide/language-features/control-flow/walkthrough-implementing-ienumerable-of-t.md)</ept>","pos":[1970,2129],"source":"[Implementing IEnumerable(Of T) in Visual Basic](../visual-basic/programming-guide/language-features/control-flow/walkthrough-implementing-ienumerable-of-t.md)"},{"content":"Demonstrates how to create a class that implements the <ph id=\"ph1\">`IEnumerable(Of String)`</ph> interface and a class that implements the <ph id=\"ph2\">`IEnumerator(Of String)`</ph> interface to read a text file one line at a time.","pos":[2133,2329],"source":"Demonstrates how to create a class that implements the `IEnumerable(Of String)` interface and a class that implements the `IEnumerator(Of String)` interface to read a text file one line at a time."},{"content":"<bpt id=\"p1\">[</bpt>Calling Windows APIs<ept id=\"p1\">](../visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)</ept>","pos":[2336,2441],"source":"[Calling Windows APIs](../visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)"},{"content":"Explains how to use <ph id=\"ph1\">`Declare`</ph> statements and call Windows APIs.","pos":[2445,2508],"source":"Explains how to use `Declare` statements and call Windows APIs."},{"content":"Includes information about using attributes to control marshaling for the API call and how to expose an API call as a method of a class.","pos":[2509,2645]},{"content":"<bpt id=\"p1\">[</bpt>Creating COM Objects with Visual Basic<ept id=\"p1\">](../visual-basic/programming-guide/com-interop/walkthrough-creating-com-objects.md)</ept>","pos":[2652,2775],"source":"[Creating COM Objects with Visual Basic](../visual-basic/programming-guide/com-interop/walkthrough-creating-com-objects.md)"},{"content":"Demonstrates how to create COM objects in Visual Basic, both with and without the COM class template.","pos":[2779,2880]},{"content":"<bpt id=\"p1\">[</bpt>Implementing Inheritance with COM Objects<ept id=\"p1\">](../visual-basic/programming-guide/com-interop/walkthrough-implementing-inheritance-with-com-objects.md)</ept>","pos":[2887,3034],"source":"[Implementing Inheritance with COM Objects](../visual-basic/programming-guide/com-interop/walkthrough-implementing-inheritance-with-com-objects.md)"},{"content":"Demonstrates how to use Visual Basic 6.0 to create a COM object containing a class, and then use it as a base class in Visual Basic.","pos":[3038,3170]},{"content":"<bpt id=\"p1\">[</bpt>Determining Where My.Application.Log Writes Information<ept id=\"p1\">](../visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>","pos":[3177,3359],"source":"[Determining Where My.Application.Log Writes Information](../visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)"},{"content":"Describes the default <ph id=\"ph1\">`My.Application.Log`</ph> settings and how to determine the settings for your application.","pos":[3363,3470],"source":"Describes the default `My.Application.Log` settings and how to determine the settings for your application."},{"content":"<bpt id=\"p1\">[</bpt>Changing Where My.Application.Log Writes Information<ept id=\"p1\">](../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept>","pos":[3477,3653],"source":"[Changing Where My.Application.Log Writes Information](../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)"},{"content":"Shows how to override the default <ph id=\"ph1\">`My.Application.Log`</ph> and <ph id=\"ph2\">`My.Log`</ph> settings for logging event information and cause the <ph id=\"ph3\">`Log`</ph> object to write to other log listeners.","pos":[3657,3823],"source":"Shows how to override the default `My.Application.Log` and `My.Log` settings for logging event information and cause the `Log` object to write to other log listeners."},{"content":"<bpt id=\"p1\">[</bpt>Filtering My.Application.Log Output<ept id=\"p1\">](../visual-basic/developing-apps/programming/log-info/walkthrough-filtering-my-application-log-output.md)</ept>","pos":[3830,3972],"source":"[Filtering My.Application.Log Output](../visual-basic/developing-apps/programming/log-info/walkthrough-filtering-my-application-log-output.md)"},{"content":"Demonstrates how to change the default log filtering for the <ph id=\"ph1\">`My.Application.Log`</ph> object.","pos":[3976,4065],"source":"Demonstrates how to change the default log filtering for the `My.Application.Log` object."},{"content":"<bpt id=\"p1\">[</bpt>Creating Custom Log Listeners<ept id=\"p1\">](../visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md)</ept>","pos":[4072,4202],"source":"[Creating Custom Log Listeners](../visual-basic/developing-apps/programming/log-info/walkthrough-creating-custom-log-listeners.md)"},{"content":"Demonstrates how to create a custom log listener and configure it to listen to the output of the <ph id=\"ph1\">`My.Application.Log`</ph> object.","pos":[4206,4331],"source":"Demonstrates how to create a custom log listener and configure it to listen to the output of the `My.Application.Log` object."},{"content":"<bpt id=\"p1\">[</bpt>Embedding Types from Managed Assemblies<ept id=\"p1\">](../visual-basic/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-vs.md)</ept>","pos":[4338,4499],"source":"[Embedding Types from Managed Assemblies](../visual-basic/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-vs.md)"},{"content":"Describes how to create an assembly and a client program that embeds types from it.","pos":[4503,4586]},{"content":"<bpt id=\"p1\">[</bpt>Validating That Passwords Are Complex (Visual Basic)<ept id=\"p1\">](../visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md)</ept>","pos":[4593,4761],"source":"[Validating That Passwords Are Complex (Visual Basic)](../visual-basic/programming-guide/language-features/strings/walkthrough-validating-that-passwords-are-complex.md)"},{"content":"Demonstrates how to check for strong-password characteristics and update a string parameter with information about which checks a password fails.","pos":[4765,4910]},{"content":"<bpt id=\"p1\">[</bpt>Encrypting and Decrypting Strings in Visual Basic<ept id=\"p1\">](../visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md)</ept>","pos":[4917,5078],"source":"[Encrypting and Decrypting Strings in Visual Basic](../visual-basic/programming-guide/language-features/strings/walkthrough-encrypting-and-decrypting-strings.md)"},{"content":"Shows how to use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider&gt;</ph> class to encrypt and decrypt strings.","pos":[5082,5201],"source":"Shows how to use the <xref:System.Security.Cryptography.DESCryptoServiceProvider> class to encrypt and decrypt strings."},{"content":"<bpt id=\"p1\">[</bpt>Manipulating Files and Folders in Visual Basic<ept id=\"p1\">](../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)</ept>","pos":[5208,5376],"source":"[Manipulating Files and Folders in Visual Basic](../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)"},{"content":"Demonstrates how to use Visual Basic functions to determine information about a file, search for a string in a file, and write to a file.","pos":[5380,5517]},{"content":"<bpt id=\"p1\">[</bpt>Manipulating Files Using .NET Framework Methods<ept id=\"p1\">](../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-by-using-net-framework-methods.md)</ept>","pos":[5524,5708],"source":"[Manipulating Files Using .NET Framework Methods](../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-by-using-net-framework-methods.md)"},{"content":"Demonstrates how to use <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> methods to determine information about a file, search for a string in a file, and write to a file.","pos":[5712,5888],"source":"Demonstrates how to use [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] methods to determine information about a file, search for a string in a file, and write to a file."},{"content":"<bpt id=\"p1\">[</bpt>Persisting an Object in Visual Basic<ept id=\"p1\">](../visual-basic/programming-guide/concepts/serialization/walkthrough-persisting-an-object-in-visual-studio.md)</ept>","pos":[5895,6044],"source":"[Persisting an Object in Visual Basic](../visual-basic/programming-guide/concepts/serialization/walkthrough-persisting-an-object-in-visual-studio.md)"},{"content":"Demonstrates how to create a simple object and persist its data to a file.","pos":[6048,6122]},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Test-First Support with the Generate From Usage Feature<ept id=\"p1\">](/visualstudio/ide/walkthrough-test-first-support-with-the-generate-from-usage-feature)</ept>","pos":[6129,6286],"source":"[Walkthrough: Test-First Support with the Generate From Usage Feature](/visualstudio/ide/walkthrough-test-first-support-with-the-generate-from-usage-feature)"},{"content":"Demonstrates how to do test-first development, in which you first write unit tests and then write the source code to make the tests succeed.","pos":[6290,6430]}]}