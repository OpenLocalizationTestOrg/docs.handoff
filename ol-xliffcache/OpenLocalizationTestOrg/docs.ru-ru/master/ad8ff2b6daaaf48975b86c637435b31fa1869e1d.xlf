<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="guidelines-for-migrating-an-application-built-using-wif-3-5-to-wif-4-5.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad8ff2b6daaaf48975b86c637435b31fa1869e1d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\security\guidelines-for-migrating-an-application-built-using-wif-3-5-to-wif-4-5.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">196975f76860af18cdee2b720e5e47d5dc08784f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d4558c5dfba36a2ac7c757831267c8fca49d0f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Guidelines for Migrating an Application Built Using WIF 3.5 to WIF 4.5</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Guidelines for Migrating an Application Built Using WIF 3.5 to WIF 4.5</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Microsoft® Windows® Identity Foundation (WIF) 3.5 and 4.5.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Windows Identity Foundation (WIF) was originally released in the .NET 3.5 SP1 timeframe.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>That version of WIF is referred to as WIF 3.5.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It was released as a separate runtime and SDK, which meant that every computer on which a WIF-enabled application ran had to have the WIF runtime installed and developers had to download and install the WIF SDK to get the Visual Studio templates and tooling that enabled development of WIF-enabled applications.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Beginning with .NET 4.5, WIF has been fully integrated into the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A separate runtime is no longer needed and the WIF tooling can be installed in Visual Studio 2012 by using the Visual Studio Extensions Manager.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This version of WIF is referred to as WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The integration of WIF into .NET necessitated several changes in the WIF API surface.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WIF 4.5 includes new namespaces, some changes to configuration elements, and new tooling for Visual Studio.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This topic provides guidance that you can use to help you migrate applications built using WIF 3.5 to WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There may be scenarios in which you need to run legacy applications built using WIF 3.5 on computers that are running Windows 8 or Windows Server 2012.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This topic also provides guidance about how to enable WIF 3.5 for these operating systems.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Changes Required for WIF 4.5</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This section describes the changes that are required to migrate a WIF 3.5 application to WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Assembly and Namespace Changes</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In WIF 3.5, all of the WIF classes were contained in the <ph id="ph1">`Microsoft.IdentityModel`</ph> assembly (microsoft.identitymicrosoft.identitymodel.dll).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In WIF 4.5, the WIF classes have been split across the following assemblies: <ph id="ph1">`mscorlib`</ph> (mscorlib.dll), <ph id="ph2">`System.IdentityModel`</ph> (System.IdentityModel.dll), <ph id="ph3">`System.IdentityModel.Services`</ph> (System.IdentityModel.Services.dll), and <ph id="ph4">`System.ServiceModel`</ph> (System.ServiceModel.dll).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The WIF 3.5 classes were all contained in one of the <ph id="ph1">`Microsoft.IdentityModel`</ph> namespaces; for example, <ph id="ph2">`Microsoft.IdentityModel`</ph>, <ph id="ph3">`Microsoft.IdentityModel.Tokens`</ph>, <ph id="ph4">`Microsoft.IdentityModel.Web`</ph>, and so on.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In WIF 4.5, the WIF classes are now spread across the <bpt id="p1">[</bpt>System.IdentityModel<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=272004)</ept> namespaces, the <ph id="ph1">&lt;xref:System.Security.Claims?displayProperty=nameWithType&gt;</ph> namespace, and the <ph id="ph2">&lt;xref:System.ServiceModel.Security?displayProperty=nameWithType&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In addition to this reorganization, some WIF 3.5 classes have been dropped in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following table shows some of the more important WIF 4.5 namespaces and the kind of classes they contain.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more detailed information about how namespaces map between WIF 3.5 and WIF 4.5 and about namespaces and classes that have been dropped in WIF 4.5, see <bpt id="p1">[</bpt>Namespace Mapping between WIF 3.5 and WIF 4.5<ept id="p1">](../../../docs/framework/security/namespace-mapping-between-wif-3-5-and-wif-4-5.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>WIF 4.5 Namespace</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Contains classes that represent cookie transforms, security token services, and specialized XML dictionary readers.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Contains classes from the following WIF 3.5 namespaces: <ph id="ph1">`Microsoft.IdentityModel`</ph>, <ph id="ph2">`Microsoft.IdentityModel.SecurityTokenService`</ph>, and <ph id="ph3">`Microsoft.IdentityModel.Threading`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Contains classes that represent claims, claims-based identities, claims based principals, and other claims based identity model artifacts.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Contains classes from the <ph id="ph1">`Microsoft.IdentityModel.Claims`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Contains classes that represent security tokens, security token handlers, and other security token artifacts.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Contains classes from the following WIF 3.5 namespaces: <ph id="ph1">`Microsoft.IdentityModel.Tokens`</ph>, <ph id="ph2">`Microsoft.IdentityModel.Tokens.Saml11`</ph>, and <ph id="ph3">`Microsoft.IdentityModel.Tokens.Saml2`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Contains classes that are used in passive (WS-Federation) scenarios.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Contains classes from the <ph id="ph1">`Microsoft.IdentityModel.Web`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Classes that represent WCF contracts, channels, service hosts and other artifacts that are used in active (WS-Trust) scenarios are now in this namespace.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In WIF 3.5 , these classes were in the <ph id="ph1">`Microsoft.IdentityModel.Protocols.WSTrust`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following <ph id="ph1">`System.IdentityModel`</ph> namespaces contain classes that implement the WCF claims-based identity model: <ph id="ph2">&lt;xref:System.IdentityModel.Claims?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.IdentityModel.Policy?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.IdentityModel.Selectors?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The WCF claims-based identity model is superseded by WIF.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You should not use classes in these three namespaces when building solutions based on WIF.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Changes Due to .NET Integration</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>WIF is now integrated into the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Most .NET identity and principal classes now derive from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results in the following changes in WIF 4.5:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>WIF classes that represent claims, identities, and principals now exist in the <ph id="ph1">&lt;xref:System.Security.Claims?displayProperty=nameWithType&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Claims?displayProperty=nameWithType&gt;</ph> namespace contains classes that represent artifacts in the WCF claims-based identity model.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Many of these classes have names that are the same as WIF classes; for example, <ph id="ph1">`Claims`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Do not use these classes when building solutions based on WIF.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>.NET identity and principal classes now derive directly from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal?displayProperty=nameWithType&gt;</ph>, which represent claims-based identities and principals.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For this reason, the WIF 3.5 interfaces <ph id="ph1">`IClaimsIdentity`</ph> and <ph id="ph2">`IClaimsPrincipal`</ph> are no longer needed and are not available in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Because.NET identity and principal classes such as <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Principal.WindowsPrincipal?displayProperty=nameWithType&gt;</ph> now derive from <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> and <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, they have claims functionality built-in.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For this reason, claims-specific identity and principal classes such as <ph id="ph1">`WindowsClaimsIdentity`</ph> and <ph id="ph2">`WindowsClaimsPrincipal`</ph> that were present in WIF 3.5 are no longer needed and do not exist in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Other Changes to WIF Functionality</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In addition to the namespace changes and the changes due to integration with .NET, the following general changes to WIF functionality occur in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Microsoft.IdentityModel.ExceptionMapper`</ph> class, which provided functionality that enabled you to map exceptions to specific SOAP Faults, is removed.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The exception surface has been greatly reduced.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Many of the classes that defined protocol or WS-* specific constants have been removed; for example, the <ph id="ph1">`Microsoft.IdentityModel.WSAddressing10Constants`</ph> class, which defined constants related to WS-Addressing 1.0.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Claims to Windows Token Service (c2wts) and its associated classes in the <ph id="ph1">`Microsoft.IdentityModel.WindowsTokenService`</ph> namespace are removed.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>WIF Configuration Changes</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Many of the changes in the configuration file have been caused by namespace updates in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example, consider the following WIF 3.5 entry in the <ph id="ph1">`&lt;httpModules&gt;`</ph> section to add the WS-Federation Authentication Manager to an application:</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This entry has been updated in WIF 4.5 to include the new namespaces and assembly version:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following list enumerates the major changes to the configuration file for WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;microsoft.identityModel&gt;`</ph> section is now the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>system.identityModel&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel.md)</ept> section.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;service&gt;`</ph> element is now the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>identityConfiguration&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A new section, <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>system.identityModel.services&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel-services.md)</ept>, has been added to specify settings that control behavior in passive (WS-Federation) scenarios.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>federationConfiguration&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)</ept> element and its child elements have been moved from the <ph id="ph2">`&lt;service&gt;`</ph> element in WIF 3.5 to the new <ph id="ph3">`&lt;system.identityModel.services&gt;`</ph> element .</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Several elements that could be specified at the service-level directly under the <ph id="ph1">`&lt;service&gt;`</ph> element in WIF 3.5 have been restricted to being specified under the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>securityTokenHandlerConfiguration&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>(They may still be specified under the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>identityConfiguration&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element in WIF 4.5 for backward compatibility.)</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For a complete list of the WIF 4.5 configuration elements, see <bpt id="p1">[</bpt>WIF Configuration Schema<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Visual Studio Tooling Changes</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The WIF 3.5 SDK offered a stand-alone federation utility, FedUtil.exe (FedUtil), that you could use to outsource identity management in WIF-enabled applications to a security token service (STS).</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This tool added WIF settings to the application configuration file to enable the application to get security tokens from one or more STSs, and was surfaced in Visual Studio through the <bpt id="p1">**</bpt>Add STS Service Reference<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>FedUtil does not ship with WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Instead, WIF 4.5 supports a new Visual Studio extension named the Identity and Access Tool for Visual Studio 2012 that you can use to modify your application’s configuration file with the WIF settings required to outsource identity management to an STS.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Identity and Access Tool also implements an STS called Local STS that you can use to test your WIF-enabled applications.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In many cases, this feature obviates the need to build custom STSs that were often necessary in WIF 3.5 to test solutions under development.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For this reason, the STS templates are no longer supported in Visual Studio 2012; however, the classes that support the development of STSs are still available in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can install the Identity and Access Tool from the Extensions and Updates Manager in Visual Studio or you can download it from the following page on Code Gallery: <bpt id="p1">[</bpt>Identity and Access Tool for Visual Studio 2012 on Code Gallery<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=245849)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The Visual Studio tooling changes are summarized in the following list:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The Add STS Service Reference functionality is removed.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The replacement is the Identity and Access Tool.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Visual Studio STS templates are removed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can use the Local STS that is available through the Identity and Access Tool to test identity solutions that you develop with WIF.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The Local STS configuration can be modified to customize the claims that it serves.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The stand-alone Federation Utility (FedUtil) is not available in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can use the Identity and Access Tool to modify your configuration files to outsource identity management to an STS.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For more information about the Identity and Access Tool, see <bpt id="p1">[</bpt>Identity and Access Tool for Visual Studio 2012<ept id="p1">](../../../docs/framework/security/identity-and-access-tool-for-vs.md)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Passive (WS-Federation) Scenarios:</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Classes that support passive scenarios have been moved to the <ph id="ph1">&lt;xref:System.IdentityModel.Services?displayProperty=nameWithType&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In WIF 3.5 these classes were in the <ph id="ph1">`Microsoft.IdentityModel.Web`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The classes in the <ph id="ph1">`Microsoft.IdentityModel.Web.Configuration`</ph> namespace have been moved to <ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>These classes represent objects specific to configuration in passive scenarios.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FederatedPassiveSignInControl`</ph> is no longer supported; all classes in the <ph id="ph2">`Microsoft.IdentityModel.Web.Controls`</ph> namespace have been removed from WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The WS-Federation Authentication Module (<ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph>) sign-out functionality is different than WIF 3.5.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more details about how sign-out works in WIF 4.5, see the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> class topic.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Active (WCF/WS-Trust) Scenarios:</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Microsoft.IdentityModel.Protocols.WSTrust`</ph> namespace has been split mainly into two namespaces in WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Classes that represent artifacts that are specific to the WS-Trust protocol are now in <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This includes classes like <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Classes that represent service contracts, channels, service hosts and other artifacts that are involved in using WS-Trust in WCF applications have been moved to <ph id="ph1">&lt;xref:System.ServiceModel.Security?displayProperty=nameWithType&gt;</ph>; for example, the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IWSTrust13AsyncContract&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Configuring a WCF application to use WIF has been greatly simplified.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Previously the <ph id="ph1">`Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement`</ph> had to be added as a behavior extension and this functionality was then used to wedge WIF into the service behavior by specifying a <ph id="ph2">`&lt;federatedServiceHostConfiguration&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>WIF 4.5 has been more tightly integrated with WCF.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Now you enable WIF on a WCF service by specifying the <ph id="ph1">`useIdentityConfiguration`</ph> attribute on the <ph id="ph2">`&lt;system.serviceModel&gt;`</ph><ph id="ph3">/</ph><ph id="ph4">`&lt;behaviors&gt;`</ph><ph id="ph5">/</ph><ph id="ph6">`&lt;serviceBehaviors&gt;`</ph><ph id="ph7">/</ph><ph id="ph8">`&lt;serviceCredentials&gt;`</ph> element as in the following XML:</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In WIF 4.5 the service certificate used by an active (WCF) service must be specified on the service host.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In configuration, you can do this through the <ph id="ph1">`&lt;system.serviceModel&gt;`</ph><ph id="ph2">/</ph><ph id="ph3">`&lt;behaviors&gt;`</ph><ph id="ph4">/</ph><ph id="ph5">`&lt;serviceBehaviors&gt;`</ph><ph id="ph6">/</ph><ph id="ph7">`&lt;serviceCredentials&gt;`</ph><ph id="ph8">/</ph><ph id="ph9">`&lt;serviceCertificate&gt;`</ph> element as shown in the preceding example.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In WIF 3.5 the service certificate could be specified through the <ph id="ph1">`&lt;serviceCertificate&gt;`</ph> child element of the WIF <ph id="ph2">`&lt;service&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This functionality does not exist in WIF 4.5; specify the <ph id="ph1">`&lt;serviceCertificate&gt;`</ph> element under the <ph id="ph2">`&lt;serviceCredentials&gt;`</ph> element instead.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The classes used to wedge WIF 3.5 into WCF no longer exist.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This includes the following classes in the <ph id="ph1">`Microsoft.IdentityModel.Tokens`</ph> namespace: <ph id="ph2">`FederatedSecurityTokenManager`</ph>, <ph id="ph3">`FederatedServiceCredentials`</ph>, and <ph id="ph4">`IdentityModelServiceAuthorizationManager`</ph>, as well as the <ph id="ph5">`Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement`</ph> class.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Enabling WIF 3.5 in Windows 8</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Because WIF 4.5 is part of .NET 4.5, it is automatically enabled on computers running Windows 8 and Windows Server 2012 and applications that are built using WIF 4.5 will run under Windows 8 or Windows Server 2012 by default.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>However, you may need to run applications that were built using WIF 3.5 on a computer that is running Windows 8 or Windows Server 2012.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In this case, you need to enable WIF 3.5 on the target computer.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>On a computer running Windows 8, you can do this by using the Deployment Image Servicing and Management (DISM) tool.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>On a computer running Windows Server 2012, you can use the DISM tool or you can use the Windows PowerShell <ph id="ph1">`Add-WindowsFeature`</ph> cmdlet.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In both cases, the appropriate commands can be invoked either at the command line or from inside the Windows PowerShell environment.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following commands show how to use the DISM tool from either the command line or from inside the Windows PowerShell environment.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>By default, the DISM PowerShell module is included in Windows 8 and Windows Server 2012 and does not need to be imported.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For more information about using DISM with Windows PowerShell, see <bpt id="p1">[</bpt>How to Use DISM in Windows PowerShell<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=254419)</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To enable WIF 3.5 using DISM:</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To disable WIF 3.5 using DISM:</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To check which features are enabled or disabled using DISM:</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Alternatively, on computers running Windows Server 2012, you can enable WIF 3.5 by using the Windows PowerShell <ph id="ph1">`Add-WindowsFeature`</ph> cmdlet.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To do so from the command line, you can enter the following command:</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>From inside the Windows PowerShell environment, you can enter the command directly:</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Because many of the classes in WIF 3.5 and WIF 4.5 share the same names, when you are using both WIF 3.5 and WIF 4.5 together, be sure to either use fully qualified class names or use namespace aliases to distinguish between classes in WIF 3.5 and WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WIF Configuration Schema<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace Mapping between WIF 3.5 and WIF 4.5<ept id="p1">](../../../docs/framework/security/namespace-mapping-between-wif-3-5-and-wif-4-5.md)</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>What's New in Windows Identity Foundation 4.5<ept id="p1">](../../../docs/framework/security/whats-new-in-wif.md)</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Identity and Access Tool for Visual Studio 2012<ept id="p1">](../../../docs/framework/security/identity-and-access-tool-for-vs.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>