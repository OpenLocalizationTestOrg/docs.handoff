{"content":"---\ntitle: \"DbConnection, DbCommand and DbException\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 58aab611-7e6f-4749-b983-28ab7ae87dbe\n---\n# DbConnection, DbCommand and DbException\nOnce you have created a <xref:System.Data.Common.DbProviderFactory> and a <xref:System.Data.Common.DbConnection>, you can then work with commands and data readers to retrieve data from the data source.  \n  \n## Retrieving Data Example  \n This example takes a `DbConnection` object as an argument. A <xref:System.Data.Common.DbCommand> is created to select data from the Categories table by setting the <xref:System.Data.Common.DbCommand.CommandText%2A> to a SQL SELECT statement. The code assumes that the Categories table exists at the data source. The connection is opened and the data is retrieved using a <xref:System.Data.Common.DbDataReader>.  \n  \n [!code-csharp[DataWorks DbProviderFactories.DbCommandData#1](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbCommandData/CS/source.cs#1)]\n [!code-vb[DataWorks DbProviderFactories.DbCommandData#1](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbCommandData/VB/source.vb#1)]  \n  \n## Executing a Command Example  \n This example takes a `DbConnection` object as an argument. If the `DbConnection` is valid, the connection is opened and a <xref:System.Data.Common.DbCommand> is created and executed. The <xref:System.Data.Common.DbCommand.CommandText%2A> is set to a SQL INSERT statement that performs an insert to the Categories table in the Northwind database. The code assumes that the Northwind database exists at the data source, and that the SQL syntax used in the INSERT statement is valid for the specified provider. Errors occurring at the data source are handled by the <xref:System.Data.Common.DbException> code block, and all other exceptions are handled in the <xref:System.Exception> block.  \n  \n [!code-csharp[DataWorks DbProviderFactories.DbCommand#1](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbCommand/CS/source.cs#1)]\n [!code-vb[DataWorks DbProviderFactories.DbCommand#1](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbCommand/VB/source.vb#1)]  \n  \n## Handling Data Errors with DbException  \n The <xref:System.Data.Common.DbException> class is the base class for all exceptions thrown on behalf of a data source. You can use it in your exception handling code to handle exceptions thrown by different providers without having to reference a specific exception class. The following code fragment demonstrates how to use <xref:System.Data.Common.DbException> to display error information returned by the data source using <xref:System.Exception.GetType%2A>, <xref:System.Exception.Source%2A>, <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>, and <xref:System.Exception.Message%2A> properties. The output will display the type of error, the source indicating the provider name, an error code, and the message associated with the error.  \n  \n```vb  \nTry  \n    ' Do work here.  \nCatch ex As DbException  \n    ' Display information about the exception.  \n    Console.WriteLine(\"GetType: {0}\", ex.GetType())  \n    Console.WriteLine(\"Source: {0}\", ex.Source)  \n    Console.WriteLine(\"ErrorCode: {0}\", ex.ErrorCode)  \n    Console.WriteLine(\"Message: {0}\", ex.Message)  \nFinally  \n    ' Perform cleanup here.  \nEnd Try  \n```  \n  \n```csharp  \ntry  \n{  \n    // Do work here.  \n}  \ncatch (DbException ex)  \n{  \n    // Display information about the exception.  \n    Console.WriteLine(\"GetType: {0}\", ex.GetType());  \n    Console.WriteLine(\"Source: {0}\", ex.Source);  \n    Console.WriteLine(\"ErrorCode: {0}\", ex.ErrorCode);  \n    Console.WriteLine(\"Message: {0}\", ex.Message);  \n}  \nfinally  \n{  \n    // Perform cleanup here.  \n}  \n```  \n  \n## See also\n\n- [DbProviderFactories](../../../../docs/framework/data/adonet/dbproviderfactories.md)\n- [Obtaining a DbProviderFactory](../../../../docs/framework/data/adonet/obtaining-a-dbproviderfactory.md)\n- [Modifying Data with a DbDataAdapter](../../../../docs/framework/data/adonet/modifying-data-with-a-dbdataadapter.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,157],"embed":true,"restype":"x-metadata","content":"title: \"DbConnection, DbCommand and DbException\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 58aab611-7e6f-4749-b983-28ab7ae87dbe","nodes":[{"content":"DbConnection, DbCommand and DbException","nodes":[{"pos":[0,39],"content":"DbConnection, DbCommand and DbException","nodes":[{"content":"DbConnection, DbCommand and DbException","pos":[0,39]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[164,203],"content":"DbConnection, DbCommand and DbException","linkify":"DbConnection, DbCommand and DbException","nodes":[{"content":"DbConnection, DbCommand and DbException","pos":[0,39]}]},{"pos":[204,405],"content":"Once you have created a <ph id=\"ph1\">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> and a <ph id=\"ph2\">&lt;xref:System.Data.Common.DbConnection&gt;</ph>, you can then work with commands and data readers to retrieve data from the data source.","source":"Once you have created a <xref:System.Data.Common.DbProviderFactory> and a <xref:System.Data.Common.DbConnection>, you can then work with commands and data readers to retrieve data from the data source."},{"pos":[414,437],"content":"Retrieving Data Example","linkify":"Retrieving Data Example","nodes":[{"content":"Retrieving Data Example","pos":[0,23]}]},{"content":"This example takes a <ph id=\"ph1\">`DbConnection`</ph> object as an argument.","pos":[441,499],"source":"This example takes a `DbConnection` object as an argument."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommand&gt;</ph> is created to select data from the Categories table by setting the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt;</ph> to a SQL SELECT statement.","pos":[500,682],"source":" A <xref:System.Data.Common.DbCommand> is created to select data from the Categories table by setting the <xref:System.Data.Common.DbCommand.CommandText%2A> to a SQL SELECT statement."},{"content":"The code assumes that the Categories table exists at the data source.","pos":[683,752]},{"content":"The connection is opened and the data is retrieved using a <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>.","pos":[753,851],"source":" The connection is opened and the data is retrieved using a <xref:System.Data.Common.DbDataReader>."},{"pos":[1224,1251],"content":"Executing a Command Example","linkify":"Executing a Command Example","nodes":[{"content":"Executing a Command Example","pos":[0,27]}]},{"content":"This example takes a <ph id=\"ph1\">`DbConnection`</ph> object as an argument.","pos":[1255,1313],"source":"This example takes a `DbConnection` object as an argument."},{"content":"If the <ph id=\"ph1\">`DbConnection`</ph> is valid, the connection is opened and a <ph id=\"ph2\">&lt;xref:System.Data.Common.DbCommand&gt;</ph> is created and executed.","pos":[1314,1437],"source":" If the `DbConnection` is valid, the connection is opened and a <xref:System.Data.Common.DbCommand> is created and executed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt;</ph> is set to a SQL INSERT statement that performs an insert to the Categories table in the Northwind database.","pos":[1438,1600],"source":" The <xref:System.Data.Common.DbCommand.CommandText%2A> is set to a SQL INSERT statement that performs an insert to the Categories table in the Northwind database."},{"content":"The code assumes that the Northwind database exists at the data source, and that the SQL syntax used in the INSERT statement is valid for the specified provider.","pos":[1601,1762]},{"content":"Errors occurring at the data source are handled by the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbException&gt;</ph> code block, and all other exceptions are handled in the <ph id=\"ph2\">&lt;xref:System.Exception&gt;</ph> block.","pos":[1763,1942],"source":" Errors occurring at the data source are handled by the <xref:System.Data.Common.DbException> code block, and all other exceptions are handled in the <xref:System.Exception> block."},{"pos":[2299,2336],"content":"Handling Data Errors with DbException","linkify":"Handling Data Errors with DbException","nodes":[{"content":"Handling Data Errors with DbException","pos":[0,37]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.DbException&gt;</ph> class is the base class for all exceptions thrown on behalf of a data source.","pos":[2340,2459],"source":"The <xref:System.Data.Common.DbException> class is the base class for all exceptions thrown on behalf of a data source."},{"content":"You can use it in your exception handling code to handle exceptions thrown by different providers without having to reference a specific exception class.","pos":[2460,2613]},{"content":"The following code fragment demonstrates how to use <ph id=\"ph1\">&lt;xref:System.Data.Common.DbException&gt;</ph> to display error information returned by the data source using <ph id=\"ph2\">&lt;xref:System.Exception.GetType%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Exception.Source%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Exception.Message%2A&gt;</ph> properties.","pos":[2614,2958],"source":" The following code fragment demonstrates how to use <xref:System.Data.Common.DbException> to display error information returned by the data source using <xref:System.Exception.GetType%2A>, <xref:System.Exception.Source%2A>, <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>, and <xref:System.Exception.Message%2A> properties."},{"content":"The output will display the type of error, the source indicating the provider name, an error code, and the message associated with the error.","pos":[2959,3100]},{"pos":[3897,3905],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3909,3993],"content":"<bpt id=\"p1\">[</bpt>DbProviderFactories<ept id=\"p1\">](../../../../docs/framework/data/adonet/dbproviderfactories.md)</ept>","source":"[DbProviderFactories](../../../../docs/framework/data/adonet/dbproviderfactories.md)"},{"pos":[3996,4100],"content":"<bpt id=\"p1\">[</bpt>Obtaining a DbProviderFactory<ept id=\"p1\">](../../../../docs/framework/data/adonet/obtaining-a-dbproviderfactory.md)</ept>","source":"[Obtaining a DbProviderFactory](../../../../docs/framework/data/adonet/obtaining-a-dbproviderfactory.md)"},{"pos":[4103,4219],"content":"<bpt id=\"p1\">[</bpt>Modifying Data with a DbDataAdapter<ept id=\"p1\">](../../../../docs/framework/data/adonet/modifying-data-with-a-dbdataadapter.md)</ept>","source":"[Modifying Data with a DbDataAdapter](../../../../docs/framework/data/adonet/modifying-data-with-a-dbdataadapter.md)"},{"pos":[4222,4326],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}