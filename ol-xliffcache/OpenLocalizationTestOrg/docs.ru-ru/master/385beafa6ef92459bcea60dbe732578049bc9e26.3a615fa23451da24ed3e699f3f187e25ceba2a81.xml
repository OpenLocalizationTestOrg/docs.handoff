{"content":"---\ntitle: \"How to: Set the Text Displayed by a Windows Forms Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Windows Forms, captions\"\n  - \"Button control [Windows Forms], button text\"\n  - \"StdFont object and CommandButton caption\"\n  - \"captions, Windows Forms controls\"\n  - \"Text property, Windows Forms control\"\n  - \"Button control [Windows Forms], text display\"\n  - \"labels, adding to CommandButton control\"\n  - \"buttons, text\"\n  - \"captions, setting\"\n  - \"text\"\n  - \"examples [Windows Forms], controls\"\n  - \"text, Windows Forms controls\"\n  - \"controls [Windows Forms], captions\"\n  - \"forms, captions\"\nms.assetid: 36b95bff-8780-479d-b86a-f1a0673653aa\ncaps.latest.revision: 18\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Set the Text Displayed by a Windows Forms Control\nWindows Forms controls usually display some text that is related to the primary function of the control. For example, a <xref:System.Windows.Forms.Button> control usually displays a caption indicating what action will be performed when the button is clicked. For all controls, you can set or return the text by using the <xref:System.Windows.Forms.Control.Text%2A> property. You can change the font by using the <xref:System.Windows.Forms.Control.Font%2A> property. You can also set the text using the designer.  Also see [How to: Create Access Keys for Windows Forms Controls Using the Designer](http://msdn.microsoft.com/library/ms233673\\(v=vs.110\\)), [How to: Set the Text Displayed by a Windows Forms Control Using the Designer](http://msdn.microsoft.com/library/ms233665\\(v=vs.110\\)), [How to: Set the Image Displayed by a Windows Forms Control Using the Designer](http://msdn.microsoft.com/library/ms233656\\(v=vs.110\\)).  \n  \n### To set the text displayed by a control programmatically  \n  \n1.  Set the <xref:System.Windows.Forms.Control.Text%2A> property to a string.  \n  \n     To create an underlined access key, includes an ampersand (&) before the letter that will be the access key.  \n  \n2.  Set the <xref:System.Windows.Forms.Control.Font%2A> property to an object of type <xref:System.Drawing.Font>.  \n  \n    ```vb  \n    Button1.Text = \"Click here to save changes\"  \n    Button1.Font = New Font(\"Arial\", 10, FontStyle.Bold, GraphicsUnit.Point)  \n    ```  \n  \n    ```csharp  \n    button1.Text = \"Click here to save changes\";  \n    button1.Font = new Font(\"Arial\", 10, FontStyle.Bold,  \n       GraphicsUnit.Point);  \n    ```  \n  \n    ```cpp#  \n    button1->Text = \"Click here to save changes\";  \n    button1->Font = new System::Drawing::Font(\"Arial\",  \n       10, FontStyle::Bold, GraphicsUnit::Point);  \n    ```  \n  \n    > [!NOTE]\n    >  You can use an escape character to display a special character in user-interface elements that would normally interpret them differently, such as menu items. For example, the following line of code sets the menu item's text to read \"& Now For Something Completely Different\":  \n  \n    ```vb  \n    MPMenuItem.Text = \"&& Now For Something Completely Different\"  \n    ```  \n  \n    ```csharp  \n    mpMenuItem.Text = \"&& Now For Something Completely Different\";  \n    ```  \n  \n    ```cpp#  \n    mpMenuItem->Text = \"&& Now For Something Completely Different\";  \n  \n    ```  \n  \n## See Also  \n <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName>   \n [How to: Create Access Keys for Windows Forms Controls](../../../../docs/framework/winforms/controls/how-to-create-access-keys-for-windows-forms-controls.md)   \n [How to: Respond to Windows Forms Button Clicks](../../../../docs/framework/winforms/controls/how-to-respond-to-windows-forms-button-clicks.md)","nodes":[{"pos":[12,86],"content":"How to: Set the Text Displayed by a Windows Forms Control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Set the Text Displayed by a Windows Forms Control | Microsoft Docs","pos":[0,74]}]},{"pos":[946,1003],"content":"How to: Set the Text Displayed by a Windows Forms Control","linkify":"How to: Set the Text Displayed by a Windows Forms Control","nodes":[{"content":"How to: Set the Text Displayed by a Windows Forms Control","pos":[0,57]}]},{"content":"Windows Forms controls usually display some text that is related to the primary function of the control.","pos":[1004,1108]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control usually displays a caption indicating what action will be performed when the button is clicked.","pos":[1109,1262],"source":" For example, a <xref:System.Windows.Forms.Button> control usually displays a caption indicating what action will be performed when the button is clicked."},{"content":"For all controls, you can set or return the text by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.","pos":[1263,1378],"source":" For all controls, you can set or return the text by using the <xref:System.Windows.Forms.Control.Text%2A> property."},{"content":"You can change the font by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property.","pos":[1379,1469],"source":" You can change the font by using the <xref:System.Windows.Forms.Control.Font%2A> property."},{"content":"You can also set the text using the designer.","pos":[1470,1515]},{"content":"Also see <bpt id=\"p1\">[</bpt>How to: Create Access Keys for Windows Forms Controls Using the Designer<ept id=\"p1\">](http://msdn.microsoft.com/library/ms233673\\(v=vs.110\\))</ept>, <bpt id=\"p2\">[</bpt>How to: Set the Text Displayed by a Windows Forms Control Using the Designer<ept id=\"p2\">](http://msdn.microsoft.com/library/ms233665\\(v=vs.110\\))</ept>, <bpt id=\"p3\">[</bpt>How to: Set the Image Displayed by a Windows Forms Control Using the Designer<ept id=\"p3\">](http://msdn.microsoft.com/library/ms233656\\(v=vs.110\\))</ept>.","pos":[1517,1930],"source":"  Also see [How to: Create Access Keys for Windows Forms Controls Using the Designer](http://msdn.microsoft.com/library/ms233673\\(v=vs.110\\)), [How to: Set the Text Displayed by a Windows Forms Control Using the Designer](http://msdn.microsoft.com/library/ms233665\\(v=vs.110\\)), [How to: Set the Image Displayed by a Windows Forms Control Using the Designer](http://msdn.microsoft.com/library/ms233656\\(v=vs.110\\))."},{"pos":[1940,1995],"content":"To set the text displayed by a control programmatically","linkify":"To set the text displayed by a control programmatically","nodes":[{"content":"To set the text displayed by a control programmatically","pos":[0,55]}]},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property to a string.","pos":[2005,2078],"source":"Set the <xref:System.Windows.Forms.Control.Text%2A> property to a string."},{"content":"To create an underlined access key, includes an ampersand (&amp;) before the letter that will be the access key.","pos":[2089,2197],"source":"To create an underlined access key, includes an ampersand (&) before the letter that will be the access key."},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property to an object of type <ph id=\"ph2\">&lt;xref:System.Drawing.Font&gt;</ph>.","pos":[2207,2316],"source":"Set the <xref:System.Windows.Forms.Control.Font%2A> property to an object of type <xref:System.Drawing.Font>."},{"pos":[2839,3129],"content":"[!NOTE]\nYou can use an escape character to display a special character in user-interface elements that would normally interpret them differently, such as menu items. For example, the following line of code sets the menu item's text to read \"& Now For Something Completely Different\":","leadings":["","    >  "],"nodes":[{"content":"You can use an escape character to display a special character in user-interface elements that would normally interpret them differently, such as menu items. For example, the following line of code sets the menu item's text to read \"& Now For Something Completely Different\":","pos":[8,283],"nodes":[{"content":"You can use an escape character to display a special character in user-interface elements that would normally interpret them differently, such as menu items.","pos":[0,157]},{"content":"For example, the following line of code sets the menu item's text to read \"&amp; Now For Something Completely Different\":","pos":[158,275],"source":" For example, the following line of code sets the menu item's text to read \"& Now For Something Completely Different\":"}]}]},{"pos":[3429,3437],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>How to: Create Access Keys for Windows Forms Controls<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-create-access-keys-for-windows-forms-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[3513,3672],"source":" [How to: Create Access Keys for Windows Forms Controls](../../../../docs/framework/winforms/controls/how-to-create-access-keys-for-windows-forms-controls.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Respond to Windows Forms Button Clicks<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-respond-to-windows-forms-button-clicks.md)</ept>","pos":[3675,3819],"source":" [How to: Respond to Windows Forms Button Clicks](../../../../docs/framework/winforms/controls/how-to-respond-to-windows-forms-button-clicks.md)"}]}