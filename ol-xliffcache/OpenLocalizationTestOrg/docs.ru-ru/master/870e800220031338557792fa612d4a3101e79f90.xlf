<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="creating-new-attributes-for-elements-in-the-dom.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">870e800220031338557792fa612d4a3101e79f90</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\creating-new-attributes-for-elements-in-the-dom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b48c20941701bc268401c90a564acd6747bbfcf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">196317752fc31cec28788779aa54d48be36faf86</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Creating New Attributes for Elements in the DOM</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating New Attributes for Elements in the DOM</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creating new attributes is different than creating other node types, because attributes are not nodes, but are properties of an element node and are contained in an <bpt id="p1">**</bpt>XmlAttributeCollection<ept id="p1">**</ept> associated with the element.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are multiple ways to create an attribute and attach it to an element:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Get the element node and use <bpt id="p1">**</bpt>SetAttribute<ept id="p1">**</ept> to add an attribute to the attribute collection of that element.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create an <bpt id="p1">**</bpt>XmlAttribute<ept id="p1">**</ept> node using the <bpt id="p2">**</bpt>CreateAttribute<ept id="p2">**</ept> method, get the element node, then use <bpt id="p3">**</bpt>SetAttributeNode<ept id="p3">**</ept> to add the node to the attribute collection of that element.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example shows how to add an attribute to an element using the <bpt id="p1">**</bpt>SetAttribute<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example shows a new attribute being created using the <bpt id="p1">**</bpt>CreateAttribute<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It then shows the attribute added to the attribute collection of the <bpt id="p1">**</bpt>book<ept id="p1">**</ept> element using the <bpt id="p2">**</bpt>SetAttributeNode<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Given the following XML:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>create a new attribute and give it a value:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>and attach it to the element:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Output<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The full code sample can be found at <ph id="ph1">&lt;xref:System.Xml.XmlDocument.CreateAttribute%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also create an <bpt id="p1">**</bpt>XmlAttribute<ept id="p1">**</ept> node and use the <bpt id="p2">**</bpt>InsertBefore<ept id="p2">**</ept> or <bpt id="p3">**</bpt>InsertAfter<ept id="p3">**</ept> methods to place it in the appropriate position in the collection.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If an attribute with the same name is already present in the attribute collection, the existing <bpt id="p1">**</bpt>XmlAttribute<ept id="p1">**</ept> node is removed from the collection and the new <bpt id="p2">**</bpt>XmlAttribute<ept id="p2">**</ept> node is inserted.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This performs the same way as the <bpt id="p1">**</bpt>SetAttribute<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These methods take, as a parameter, an existing node as a reference point to do the <bpt id="p1">**</bpt>InsertBefore<ept id="p1">**</ept> and <bpt id="p2">**</bpt>InsertAfter<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you do not provide a reference node indicating where to insert the new node, the default for the <bpt id="p1">**</bpt>InsertAfter<ept id="p1">**</ept> method is to insert the new node at the beginning of the collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default position for the <bpt id="p1">**</bpt>InsertBefore<ept id="p1">**</ept>, if no reference node is provided, is at the end of the collection.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you created an <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept> of attributes, you can add an attribute by name using the <ph id="ph1">&lt;xref:System.Xml.XmlNamedNodeMap.SetNamedItem%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Node Collections in NamedNodeMaps and NodeLists<ept id="p1">](../../../../docs/standard/data/xml/node-collections-in-namednodemaps-and-nodelists.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Default Attributes</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you create an element that is declared to have a default attribute, then a new default attribute with its default value is created by the XML Document Object Model (DOM) and attached to the element.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The child nodes of the default attribute are also created at this time.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Attribute Child Nodes</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The value of an attribute node becomes its child nodes.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There are only two types of valid child nodes: <bpt id="p1">**</bpt>XmlText<ept id="p1">**</ept> nodes, and <bpt id="p2">**</bpt>XmlEntityReference<ept id="p2">**</ept> nodes.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These are child nodes in the sense that methods such as <bpt id="p1">**</bpt>FirstChild<ept id="p1">**</ept> and <bpt id="p2">**</bpt>LastChild<ept id="p2">**</ept> process them as child nodes.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This distinction of an attribute having child nodes is important when trying to remove attributes or attribute child nodes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Removing Attributes from an Element Node in the DOM<ept id="p1">](../../../../docs/standard/data/xml/removing-attributes-from-an-element-node-in-the-dom.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>