{"content":"---\ntitle: \"How to: Return a Value from a Task\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"tasks, how to return a value\"\nms.assetid: c4bc0f44-eba2-4e96-9e03-1cc787461e61\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# How to: Return a Value from a Task\nThis example shows how to use the <xref:System.Threading.Tasks.Task%601?displayProperty=nameWithType> type to return a value from the <xref:System.Threading.Tasks.Task%601.Result%2A> property. It requires that the C:\\Users\\Public\\Pictures\\Sample Pictures\\ directory exists, and that it contains files.  \n  \n## Example  \n [!code-csharp[TPL#10](../../../samples/snippets/csharp/VS_Snippets_Misc/tpl/cs/returnavalue10.cs#10)]\n [!code-vb[TPL#10](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpl/vb/10_returnavalue.vb#10)]  \n  \n The <xref:System.Threading.Tasks.Task%601.Result%2A> property blocks the calling thread until the task finishes.  \n  \n To see how to pass the result of one <xref:System.Threading.Tasks.Task%601?displayProperty=nameWithType> to a continuation task, see [Chaining Tasks by Using Continuation Tasks](../../../docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).  \n  \n## See also\n\n- [Task-based Asynchronous Programming](../../../docs/standard/parallel-programming/task-based-asynchronous-programming.md)\n- [Lambda Expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)\n","nodes":[{"pos":[4,280],"embed":true,"restype":"x-metadata","content":"title: \"How to: Return a Value from a Task\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"tasks, how to return a value\"\nms.assetid: c4bc0f44-eba2-4e96-9e03-1cc787461e61\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"How to: Return a Value from a Task","nodes":[{"pos":[0,34],"content":"How to: Return a Value from a Task","nodes":[{"content":"How to: Return a Value from a Task","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[287,321],"content":"How to: Return a Value from a Task","linkify":"How to: Return a Value from a Task","nodes":[{"content":"How to: Return a Value from a Task","pos":[0,34]}]},{"content":"This example shows how to use the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601?displayProperty=nameWithType&gt;</ph> type to return a value from the <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> property.","pos":[322,514],"source":"This example shows how to use the <xref:System.Threading.Tasks.Task%601?displayProperty=nameWithType> type to return a value from the <xref:System.Threading.Tasks.Task%601.Result%2A> property."},{"content":"It requires that the C:\\Users\\Public\\Pictures\\Sample Pictures\\ directory exists, and that it contains files.","pos":[515,623]},{"pos":[632,639],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[856,968],"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> property blocks the calling thread until the task finishes.","source":"The <xref:System.Threading.Tasks.Task%601.Result%2A> property blocks the calling thread until the task finishes."},{"pos":[975,1244],"content":"To see how to pass the result of one <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601?displayProperty=nameWithType&gt;</ph> to a continuation task, see <bpt id=\"p1\">[</bpt>Chaining Tasks by Using Continuation Tasks<ept id=\"p1\">](../../../docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md)</ept>.","source":"To see how to pass the result of one <xref:System.Threading.Tasks.Task%601?displayProperty=nameWithType> to a continuation task, see [Chaining Tasks by Using Continuation Tasks](../../../docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md)."},{"pos":[1253,1261],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1265,1386],"content":"<bpt id=\"p1\">[</bpt>Task-based Asynchronous Programming<ept id=\"p1\">](../../../docs/standard/parallel-programming/task-based-asynchronous-programming.md)</ept>","source":"[Task-based Asynchronous Programming](../../../docs/standard/parallel-programming/task-based-asynchronous-programming.md)"},{"pos":[1389,1510],"content":"<bpt id=\"p1\">[</bpt>Lambda Expressions in PLINQ and TPL<ept id=\"p1\">](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)</ept>","source":"[Lambda Expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)"}]}