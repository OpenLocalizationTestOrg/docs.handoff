{"content":"---\ntitle: \"Best Practices for System.Net Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"sending data, best practices\"\n  - \"requesting data from Internet, best practices\"\n  - \"WebRequest class, best practices\"\n  - \"data requests, best practices\"\n  - \"WebResponse class, best practices\"\n  - \"best practices, data requests\"\n  - \"receiving data, best practices\"\nms.assetid: 716decc6-5952-47b7-9c5a-ba6fc5698684\ncaps.latest.revision: 9\nauthor: \"mcleblanc\"\nms.author: \"markl\"\nmanager: \"markl\"\n---\n# Best Practices for System.Net Classes\nThe following recommendations will help you use the classes contained in <xref:System.Net> to their best advantage:  \n  \n-   Use <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> whenever possible instead of type casting to descendant classes. Applications that use **WebRequest** and **WebResponse** can take advantage of new Internet protocols without needing extensive code changes.  \n  \n-   When writing ASP.NET applications that run on a server using the **System.Net** classes, it is often better, from a performance standpoint, to use the asynchronous methods for <xref:System.Net.WebRequest.GetResponse%2A> and <xref:System.Net.WebResponse.GetResponseStream%2A>.  \n  \n-   The number of connections opened to an Internet resource can have a significant impact on network performance and throughput. **System.Net** uses two connections per application per host by default. Setting the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property in the <xref:System.Net.ServicePoint> for your application can increase this number for a particular host. Setting the <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit?displayProperty=fullName> property can increase this default for all hosts.  \n  \n-   When writing socket-level protocols, try to use <xref:System.Net.Sockets.TcpClient> or <xref:System.Net.Sockets.UdpClient> whenever possible instead of writing directly to a <xref:System.Net.Sockets.Socket>. These two client classes encapsulate the creation of TCP and UDP sockets without requiring you to handle the details of the connection.  \n  \n-   When accessing sites that require credentials, use the <xref:System.Net.CredentialCache> class to create a cache of credentials rather than supplying them with every request. The **CredentialCache** class searches the cache to find the appropriate credential to present with a request, relieving you of the responsibility of creating and presenting credentials based on the URL.  \n  \n## See Also  \n [Network Programming in the .NET Framework](../../../docs/framework/network-programming/index.md)","nodes":[{"pos":[12,66],"content":"Best Practices for System.Net Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Best Practices for System.Net Classes | Microsoft Docs","pos":[0,54]}]},{"pos":[686,723],"content":"Best Practices for System.Net Classes","linkify":"Best Practices for System.Net Classes","nodes":[{"content":"Best Practices for System.Net Classes","pos":[0,37]}]},{"content":"The following recommendations will help you use the classes contained in <ph id=\"ph1\">&lt;xref:System.Net&gt;</ph> to their best advantage:","pos":[724,839],"source":"The following recommendations will help you use the classes contained in <xref:System.Net> to their best advantage:"},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.WebResponse&gt;</ph> whenever possible instead of type casting to descendant classes.","pos":[849,980],"source":"Use <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> whenever possible instead of type casting to descendant classes."},{"content":"Applications that use <bpt id=\"p1\">**</bpt>WebRequest<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>WebResponse<ept id=\"p2\">**</ept> can take advantage of new Internet protocols without needing extensive code changes.","pos":[981,1122],"source":" Applications that use **WebRequest** and **WebResponse** can take advantage of new Internet protocols without needing extensive code changes."},{"pos":[1132,1407],"content":"When writing ASP.NET applications that run on a server using the <bpt id=\"p1\">**</bpt>System.Net<ept id=\"p1\">**</ept> classes, it is often better, from a performance standpoint, to use the asynchronous methods for <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.WebResponse.GetResponseStream%2A&gt;</ph>.","source":"When writing ASP.NET applications that run on a server using the **System.Net** classes, it is often better, from a performance standpoint, to use the asynchronous methods for <xref:System.Net.WebRequest.GetResponse%2A> and <xref:System.Net.WebResponse.GetResponseStream%2A>."},{"content":"The number of connections opened to an Internet resource can have a significant impact on network performance and throughput.","pos":[1417,1542]},{"content":"<bpt id=\"p1\">**</bpt>System.Net<ept id=\"p1\">**</ept> uses two connections per application per host by default.","pos":[1543,1615],"source":"**System.Net** uses two connections per application per host by default."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint.ConnectionLimit%2A&gt;</ph> property in the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> for your application can increase this number for a particular host.","pos":[1616,1793],"source":" Setting the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property in the <xref:System.Net.ServicePoint> for your application can increase this number for a particular host."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit?displayProperty=fullName&gt;</ph> property can increase this default for all hosts.","pos":[1794,1951],"source":" Setting the <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit?displayProperty=fullName> property can increase this default for all hosts."},{"content":"When writing socket-level protocols, try to use <ph id=\"ph1\">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> whenever possible instead of writing directly to a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[1961,2168],"source":"When writing socket-level protocols, try to use <xref:System.Net.Sockets.TcpClient> or <xref:System.Net.Sockets.UdpClient> whenever possible instead of writing directly to a <xref:System.Net.Sockets.Socket>."},{"content":"These two client classes encapsulate the creation of TCP and UDP sockets without requiring you to handle the details of the connection.","pos":[2169,2304]},{"content":"When accessing sites that require credentials, use the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache&gt;</ph> class to create a cache of credentials rather than supplying them with every request.","pos":[2314,2488],"source":"When accessing sites that require credentials, use the <xref:System.Net.CredentialCache> class to create a cache of credentials rather than supplying them with every request."},{"content":"The <bpt id=\"p1\">**</bpt>CredentialCache<ept id=\"p1\">**</ept> class searches the cache to find the appropriate credential to present with a request, relieving you of the responsibility of creating and presenting credentials based on the URL.","pos":[2489,2692],"source":" The **CredentialCache** class searches the cache to find the appropriate credential to present with a request, relieving you of the responsibility of creating and presenting credentials based on the URL."},{"pos":[2701,2709],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2713,2810],"content":"<bpt id=\"p1\">[</bpt>Network Programming in the .NET Framework<ept id=\"p1\">](../../../docs/framework/network-programming/index.md)</ept>","source":"[Network Programming in the .NET Framework](../../../docs/framework/network-programming/index.md)"}]}