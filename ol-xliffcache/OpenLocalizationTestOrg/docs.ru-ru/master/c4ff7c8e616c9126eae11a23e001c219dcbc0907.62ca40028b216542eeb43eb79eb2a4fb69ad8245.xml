{"content":"---\ntitle: \"How to: Determine Whether Two Objects Are Related (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"inheritance [Visual Basic], Visual Basic objects\"\n  - \"objects [Visual Basic], inheritance\"\n  - \"object variables [Visual Basic], determining relation\"\nms.assetid: da002e3f-6616-4bad-a229-f842d06652bb\n---\n# How to: Determine Whether Two Objects Are Related (Visual Basic)\nYou can compare two objects to determine the relationship, if any, between the classes from which they are created. The <xref:System.Type.IsInstanceOfType%2A> method of the <xref:System.Type?displayProperty=nameWithType> class returns `True` if the specified class inherits from the current class, or if the current type is an interface supported by the specified class.  \n  \n### To determine if one object inherits from another object's class or interface  \n  \n1.  On the object you think might be of the base type, invoke the <xref:System.Object.GetType%2A> method.  \n  \n2.  On the <xref:System.Type?displayProperty=nameWithType> object returned by <xref:System.Object.GetType%2A>, invoke the <xref:System.Type.IsInstanceOfType%2A> method.  \n  \n3.  In the argument list for <xref:System.Type.IsInstanceOfType%2A>, specify the object you think might be of the derived type.  \n  \n     <xref:System.Type.IsInstanceOfType%2A> returns `True` if its argument type inherits from the <xref:System.Type?displayProperty=nameWithType> object type.  \n  \n## Example  \n The following example determines whether one object represents a class derived from another object's class.  \n  \n```  \nPublic Class baseClass  \nEnd Class  \nPublic Class derivedClass : Inherits baseClass  \nEnd Class  \nPublic Class testTheseClasses  \n    Public Sub seeIfRelated()  \n        Dim baseObj As Object = New baseClass()  \n        Dim derivedObj As Object = New derivedClass()  \n        Dim related As Boolean  \n        related = baseObj.GetType().IsInstanceOfType(derivedObj)  \n        MsgBox(CStr(related))  \n    End Sub  \nEnd Class  \n```  \n  \n Note the unexpected placement of the two object variables in the call to <xref:System.Type.IsInstanceOfType%2A>. The supposed base type is used to generate the <xref:System.Type?displayProperty=nameWithType> class, and the supposed derived type is passed as an argument to the <xref:System.Type.IsInstanceOfType%2A> method.  \n  \n## See also\n\n- <xref:System.Object.GetType%2A>\n- <xref:System.Type?displayProperty=nameWithType>\n- <xref:System.Type.IsInstanceOfType%2A>\n- [Object Data Type](../../../../visual-basic/language-reference/data-types/object-data-type.md)\n- [Object Variables](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)\n- [Object Variable Values](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)\n- [How to: Determine Whether Two Objects Are Identical](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)\n","nodes":[{"pos":[4,325],"embed":true,"restype":"x-metadata","content":"title: \"How to: Determine Whether Two Objects Are Related (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"inheritance [Visual Basic], Visual Basic objects\"\n  - \"objects [Visual Basic], inheritance\"\n  - \"object variables [Visual Basic], determining relation\"\nms.assetid: da002e3f-6616-4bad-a229-f842d06652bb","nodes":[{"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","nodes":[{"pos":[0,64],"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","nodes":[{"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","pos":[0,64]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[332,396],"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","linkify":"How to: Determine Whether Two Objects Are Related (Visual Basic)","nodes":[{"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","pos":[0,64]}]},{"content":"You can compare two objects to determine the relationship, if any, between the classes from which they are created.","pos":[397,512]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> class returns <ph id=\"ph3\">`True`</ph> if the specified class inherits from the current class, or if the current type is an interface supported by the specified class.","pos":[513,767],"source":" The <xref:System.Type.IsInstanceOfType%2A> method of the <xref:System.Type?displayProperty=nameWithType> class returns `True` if the specified class inherits from the current class, or if the current type is an interface supported by the specified class."},{"pos":[777,853],"content":"To determine if one object inherits from another object's class or interface","linkify":"To determine if one object inherits from another object's class or interface","nodes":[{"content":"To determine if one object inherits from another object's class or interface","pos":[0,76]}]},{"pos":[863,964],"content":"On the object you think might be of the base type, invoke the <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph> method.","source":"On the object you think might be of the base type, invoke the <xref:System.Object.GetType%2A> method."},{"pos":[974,1138],"content":"On the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> object returned by <ph id=\"ph2\">&lt;xref:System.Object.GetType%2A&gt;</ph>, invoke the <ph id=\"ph3\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> method.","source":"On the <xref:System.Type?displayProperty=nameWithType> object returned by <xref:System.Object.GetType%2A>, invoke the <xref:System.Type.IsInstanceOfType%2A> method."},{"pos":[1148,1271],"content":"In the argument list for <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph>, specify the object you think might be of the derived type.","source":"In the argument list for <xref:System.Type.IsInstanceOfType%2A>, specify the object you think might be of the derived type."},{"pos":[1282,1435],"content":"<ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> returns <ph id=\"ph2\">`True`</ph> if its argument type inherits from the <ph id=\"ph3\">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> object type.","source":"<xref:System.Type.IsInstanceOfType%2A> returns `True` if its argument type inherits from the <xref:System.Type?displayProperty=nameWithType> object type."},{"pos":[1444,1451],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example determines whether one object represents a class derived from another object's class.","pos":[1455,1562]},{"content":"Note the unexpected placement of the two object variables in the call to <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph>.","pos":[2010,2122],"source":"Note the unexpected placement of the two object variables in the call to <xref:System.Type.IsInstanceOfType%2A>."},{"content":"The supposed base type is used to generate the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> class, and the supposed derived type is passed as an argument to the <ph id=\"ph2\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> method.","pos":[2123,2333],"source":" The supposed base type is used to generate the <xref:System.Type?displayProperty=nameWithType> class, and the supposed derived type is passed as an argument to the <xref:System.Type.IsInstanceOfType%2A> method."},{"pos":[2342,2350],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2479,2573],"content":"<bpt id=\"p1\">[</bpt>Object Data Type<ept id=\"p1\">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>","source":"[Object Data Type](../../../../visual-basic/language-reference/data-types/object-data-type.md)"},{"pos":[2576,2686],"content":"<bpt id=\"p1\">[</bpt>Object Variables<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept>","source":"[Object Variables](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)"},{"pos":[2689,2811],"content":"<bpt id=\"p1\">[</bpt>Object Variable Values<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)</ept>","source":"[Object Variable Values](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)"},{"pos":[2814,2993],"content":"<bpt id=\"p1\">[</bpt>How to: Determine Whether Two Objects Are Identical<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)</ept>","source":"[How to: Determine Whether Two Objects Are Identical](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)"}]}