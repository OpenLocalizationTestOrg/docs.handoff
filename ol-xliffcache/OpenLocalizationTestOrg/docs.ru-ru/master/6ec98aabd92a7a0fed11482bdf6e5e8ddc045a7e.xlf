<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="map-algorithm-names-to-cryptography-classes.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ec98aabd92a7a0fed11482bdf6e5e8ddc045a7e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\configure-apps\map-algorithm-names-to-cryptography-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f94685140c424801480228607132995cf054faa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cc1530f265f4ee98fa01ce65a9456e1db511e67</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Mapping Algorithm Names to Cryptography Classes</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Mapping Algorithm Names to Cryptography Classes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are four ways a developer can create a cryptography object using the <ph id="ph1">[!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Create an object by using the <bpt id="p1">**</bpt>new<ept id="p1">**</ept> operator.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Create an object that implements a particular cryptography algorithm by calling the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> method on the abstract class for that algorithm.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create an object that implements a particular cryptography algorithm by calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create an object that implements a class of cryptographic algorithms (such as a symmetric block cipher) by calling the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> method on the abstract class for that type of algorithm (such as <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, suppose a developer wants to compute the SHA1 hash of a set of bytes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography&gt;</ph> namespace contains two implementations of the SHA1 algorithm, one purely managed implementation and one that wraps CryptoAPI.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The developer can choose to instantiate a particular SHA1 implementation (such as the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1Managed&gt;</ph>) by calling the <bpt id="p1">**</bpt>new<ept id="p1">**</ept> operator.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, if it does not matter which class the common language runtime loads as long as the class implements the SHA1 hash algorithm, the developer can create an object by calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This method calls <bpt id="p1">**</bpt>System.Security.Cryptography.CryptoConfig.CreateFromName("System.Security.Cryptography.SHA1")<ept id="p1">**</ept>, which must return an implementation of the SHA1 hash algorithm.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The developer can also call <bpt id="p1">**</bpt>System.Security.Cryptography.CryptoConfig.CreateFromName("SHA1")<ept id="p1">**</ept> because, by default, cryptography configuration includes short names for the algorithms shipped in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If it does not matter which hash algorithm is used, the developer can call the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%2A?displayProperty=nameWithType&gt;</ph> method, which returns an object that implements a hashing transformation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Mapping Algorithm Names in Configuration Files</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By default, the runtime returns a <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> object for all four scenarios.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, a machine administrator can change the type of object that the methods in the last two scenarios return.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To do this, you must map a friendly algorithm name to the class you want to use in the machine configuration file (Machine.config).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example shows how to configure the runtime so that <bpt id="p1">**</bpt>System.Security.Cryptography.SHA1.Create<ept id="p1">**</ept>, <bpt id="p2">**</bpt>System.Security.CryptoConfig.CreateFromName("SHA1")<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>System.Security.Cryptography.HashAlgorithm.Create<ept id="p3">**</ept> return a <ph id="ph1">`MySHA1HashClass`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can specify the name of the attribute in the <bpt id="p1">[</bpt>&lt;cryptoClass<ph id="ph1">\&gt;</ph> element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md)</ept> (the previous example names the attribute <ph id="ph2">`MySHA1Hash`</ph>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The value of the attribute in the <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>cryptoClass&gt;<ept id="p1">**</ept> element is a string that the common language runtime uses to find the class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use any string that meets the requirements specified in <bpt id="p1">[</bpt>Specifying Fully Qualified Type Names<ept id="p1">](../../../docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Many algorithm names can map to the same class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>nameEntry&gt; element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/cryptography/nameentry-element.md)</ept> maps a class to one friendly algorithm name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>name<ept id="p1">**</ept> attribute can be either a string that is used when calling the <bpt id="p2">**</bpt>System.Security.Cryptography.CryptoConfig.CreateFromName<ept id="p2">**</ept> method or the name of an abstract cryptography class in the <ph id="ph1">&lt;xref:System.Security.Cryptography&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>class<ept id="p1">**</ept> attribute is the name of the attribute in the <bpt id="p2">**</bpt><ph id="ph1">\&lt;</ph>cryptoClass&gt;<ept id="p2">**</ept> element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can get an SHA1 algorithm by calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1.Create%2A?displayProperty=nameWithType&gt;</ph> or the <bpt id="p1">**</bpt>Security.CryptoConfig.CreateFromName("SHA1")<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Each method guarantees only that it returns an object that implements the SHA1 algorithm.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You do not have to map each friendly name of an algorithm to the same class in the configuration file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For a list of default names and the classes they map to, see <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Cryptographic Services<ept id="p1">](../../../docs/standard/security/cryptographic-services.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Cryptography Classes<ept id="p1">](../../../docs/framework/configure-apps/configure-cryptography-classes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>