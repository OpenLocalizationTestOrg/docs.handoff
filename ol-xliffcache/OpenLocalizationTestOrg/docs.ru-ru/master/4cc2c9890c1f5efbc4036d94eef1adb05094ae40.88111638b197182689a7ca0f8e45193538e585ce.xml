{"content":"---\ntitle: \"How to: Execute Expression Trees (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 9dfb5ab3-f48f-417e-975f-f8f6f1cdc18d\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Execute Expression Trees (Visual Basic)\nThis topic shows you how to execute an expression tree. Executing an expression tree may return a value, or it may just perform an action such as calling a method.  \n  \n Only expression trees that represent lambda expressions can be executed. Expression trees that represent lambda expressions are of type <xref:System.Linq.Expressions.LambdaExpression> or <xref:System.Linq.Expressions.Expression%601>. To execute these expression trees, call the <xref:System.Linq.Expressions.LambdaExpression.Compile%2A> method to create an executable delegate, and then invoke the delegate.  \n  \n> [!NOTE]\n>  If the type of the delegate is not known, that is, the lambda expression is of type <xref:System.Linq.Expressions.LambdaExpression> and not <xref:System.Linq.Expressions.Expression%601>, you must call the <xref:System.Delegate.DynamicInvoke%2A> method on the delegate instead of invoking it directly.  \n  \n If an expression tree does not represent a lambda expression, you can create a new lambda expression that has the original expression tree as its body, by calling the <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29> method. Then, you can execute the lambda expression as described earlier in this section.  \n  \n## Example  \n The following code example demonstrates how to execute an expression tree that represents raising a number to a power by creating a lambda expression and executing it. The result, which represents the number raised to the power, is displayed.  \n  \n```vb  \n' The expression tree to execute.  \nDim be As BinaryExpression = Expression.Power(Expression.Constant(2.0R), Expression.Constant(3.0R))  \n  \n' Create a lambda expression.  \nDim le As Expression(Of Func(Of Double)) = Expression.Lambda(Of Func(Of Double))(be)  \n  \n' Compile the lambda expression.  \nDim compiledExpression As Func(Of Double) = le.Compile()  \n  \n' Execute the lambda expression.  \nDim result As Double = compiledExpression()  \n  \n' Display the result.  \nMsgBox(result)  \n  \n' This code produces the following output:  \n' 8  \n```  \n  \n## Compiling the Code  \n  \n-   Add a project reference to System.Core.dll if it is not already referenced.  \n  \n-   Include the System.Linq.Expressions namespace.  \n  \n## See Also  \n [Expression Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/expression-trees/index.md)   \n [How to: Modify Expression Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md)","nodes":[{"pos":[4,450],"nodes":[{"content":"How to: Execute Expression Trees (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,64],"content":"How to: Execute Expression Trees (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Execute Expression Trees (Visual Basic) | Microsoft Docs","pos":[0,64]}]}],"pos":[6,73],"yaml":true}],"content":"title: \"How to: Execute Expression Trees (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 9dfb5ab3-f48f-417e-975f-f8f6f1cdc18d\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[457,504],"content":"How to: Execute Expression Trees (Visual Basic)","linkify":"How to: Execute Expression Trees (Visual Basic)","nodes":[{"content":"How to: Execute Expression Trees (Visual Basic)","pos":[0,47]}]},{"content":"This topic shows you how to execute an expression tree.","pos":[505,560]},{"content":"Executing an expression tree may return a value, or it may just perform an action such as calling a method.","pos":[561,668]},{"content":"Only expression trees that represent lambda expressions can be executed.","pos":[675,747]},{"content":"Expression trees that represent lambda expressions are of type <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Linq.Expressions.Expression%601&gt;</ph>.","pos":[748,908],"source":" Expression trees that represent lambda expressions are of type <xref:System.Linq.Expressions.LambdaExpression> or <xref:System.Linq.Expressions.Expression%601>."},{"content":"To execute these expression trees, call the <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.LambdaExpression.Compile%2A&gt;</ph> method to create an executable delegate, and then invoke the delegate.","pos":[909,1082],"source":" To execute these expression trees, call the <xref:System.Linq.Expressions.LambdaExpression.Compile%2A> method to create an executable delegate, and then invoke the delegate."},{"pos":[1090,1401],"content":"[!NOTE]\n If the type of the delegate is not known, that is, the lambda expression is of type <xref:System.Linq.Expressions.LambdaExpression> and not <xref:System.Linq.Expressions.Expression%601>, you must call the <xref:System.Delegate.DynamicInvoke%2A> method on the delegate instead of invoking it directly.","leadings":["","> "],"nodes":[{"content":"If the type of the delegate is not known, that is, the lambda expression is of type <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> and not <ph id=\"ph2\">&lt;xref:System.Linq.Expressions.Expression%601&gt;</ph>, you must call the <ph id=\"ph3\">&lt;xref:System.Delegate.DynamicInvoke%2A&gt;</ph> method on the delegate instead of invoking it directly.","pos":[9,309],"source":"If the type of the delegate is not known, that is, the lambda expression is of type <xref:System.Linq.Expressions.LambdaExpression> and not <xref:System.Linq.Expressions.Expression%601>, you must call the <xref:System.Delegate.DynamicInvoke%2A> method on the delegate instead of invoking it directly."}]},{"content":"If an expression tree does not represent a lambda expression, you can create a new lambda expression that has the original expression tree as its body, by calling the <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29&gt;</ph> method.","pos":[1408,1768],"source":"If an expression tree does not represent a lambda expression, you can create a new lambda expression that has the original expression tree as its body, by calling the <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29> method."},{"content":"Then, you can execute the lambda expression as described earlier in this section.","pos":[1769,1850]},{"pos":[1859,1866],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to execute an expression tree that represents raising a number to a power by creating a lambda expression and executing it.","pos":[1870,2037]},{"content":"The result, which represents the number raised to the power, is displayed.","pos":[2038,2112]},{"pos":[2677,2695],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"Add a project reference to System.Core.dll if it is not already referenced.","pos":[2705,2780]},{"content":"Include the System.Linq.Expressions namespace.","pos":[2790,2836]},{"pos":[2845,2853],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Expression Trees (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/expression-trees/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2857,2970],"source":"[Expression Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/expression-trees/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Modify Expression Trees (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md)</ept>","pos":[2974,3126],"source":"[How to: Modify Expression Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md)"}]}