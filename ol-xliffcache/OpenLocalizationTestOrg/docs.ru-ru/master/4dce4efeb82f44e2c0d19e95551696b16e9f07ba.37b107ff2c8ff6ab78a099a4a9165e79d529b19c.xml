{"content":"---\ntitle: \"IHostThreadPoolManager::GetMaxThreads Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostThreadPoolManager.GetMaxThreads\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostThreadPoolManager::GetMaxThreads\"\nhelpviewer_keywords: \n  - \"IHostThreadPoolManager::GetMaxThreads method [.NET Framework hosting]\"\n  - \"GetMaxThreads method, IHostThreadPoolManager interface [.NET Framework hosting]\"\nms.assetid: db268876-6178-4a81-aca3-318ee7f96001\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# IHostThreadPoolManager::GetMaxThreads Method\nGets the maximum number of threads that the host maintains concurrently in the thread pool.  \n  \n## Syntax  \n  \n```  \nHRESULT GetMaxThreads (  \n    [out] DWORD *pdwMaxWorkerThreads  \n);  \n```  \n  \n## Parameters  \n `pdwMaxWorkerThreads`  \n [out] A pointer to the maximum number of threads that the host maintains in the thread pool.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`GetMaxThreads` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR( has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n|E_NOTIMPL|The host does not provide an implementation of `GetMaxThreads`.|  \n  \n## Remarks  \n The CLR calls `GetMaxThreads` to determine the total number of threads in the thread pool. The [GetAvailableThreads](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-getavailablethreads-method.md) method gets the number of threads that are not currently processing work items. All requests above the returned value of the `pdwMaxWorkerThreads` parameter remain queued until threads become available.  \n  \n If the host does not provide an implementation of `GetMaxThreads`, it should return an HRESULT value of E_NOTIMPL.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- <xref:System.Threading.ThreadPool.GetMaxThreads%2A>\n- <xref:System.Threading.ThreadPool>\n- [GetMinThreads Method](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-getminthreads-method.md)\n- [SetMaxThreads Method](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-setmaxthreads-method.md)\n- [IHostThreadPoolManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-interface.md)\n","nodes":[{"pos":[4,544],"embed":true,"restype":"x-metadata","content":"title: \"IHostThreadPoolManager::GetMaxThreads Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostThreadPoolManager.GetMaxThreads\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostThreadPoolManager::GetMaxThreads\"\nhelpviewer_keywords: \n  - \"IHostThreadPoolManager::GetMaxThreads method [.NET Framework hosting]\"\n  - \"GetMaxThreads method, IHostThreadPoolManager interface [.NET Framework hosting]\"\nms.assetid: db268876-6178-4a81-aca3-318ee7f96001\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"IHostThreadPoolManager::GetMaxThreads Method","nodes":[{"pos":[0,44],"content":"IHostThreadPoolManager::GetMaxThreads Method","nodes":[{"content":"IHostThreadPoolManager::GetMaxThreads Method","pos":[0,44]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[551,595],"content":"IHostThreadPoolManager::GetMaxThreads Method","linkify":"IHostThreadPoolManager::GetMaxThreads Method","nodes":[{"content":"IHostThreadPoolManager::GetMaxThreads Method","pos":[0,44]}]},{"content":"Gets the maximum number of threads that the host maintains concurrently in the thread pool.","pos":[596,687]},{"pos":[696,702],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[796,806],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to the maximum number of threads that the host maintains in the thread pool.","pos":[835,927]},{"pos":[936,948],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[955,962]},{"content":"Description","pos":[963,974]},{"content":"S_OK","pos":[1015,1019]},{"pos":[1020,1058],"content":"<ph id=\"ph1\">`GetMaxThreads`</ph> returned successfully.","source":"`GetMaxThreads` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1063,1085]},{"content":"The common language runtime (CLR( has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1086,1250]},{"content":"HOST_E_TIMEOUT","pos":[1255,1269]},{"content":"The call timed out.","pos":[1270,1289]},{"content":"HOST_E_NOT_OWNER","pos":[1294,1310]},{"content":"The caller does not own the lock.","pos":[1311,1344]},{"content":"HOST_E_ABANDONED","pos":[1349,1365]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1366,1438]},{"content":"E_FAIL","pos":[1443,1449]},{"content":"An unknown catastrophic failure occurred.","pos":[1450,1491]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1492,1569]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1570,1636]},{"content":"E_NOTIMPL","pos":[1641,1650]},{"pos":[1651,1714],"content":"The host does not provide an implementation of <ph id=\"ph1\">`GetMaxThreads`</ph>.","source":"The host does not provide an implementation of `GetMaxThreads`."},{"pos":[1724,1731],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The CLR calls <ph id=\"ph1\">`GetMaxThreads`</ph> to determine the total number of threads in the thread pool.","pos":[1735,1825],"source":"The CLR calls `GetMaxThreads` to determine the total number of threads in the thread pool."},{"content":"The <bpt id=\"p1\">[</bpt>GetAvailableThreads<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-getavailablethreads-method.md)</ept> method gets the number of threads that are not currently processing work items.","pos":[1826,2034],"source":" The [GetAvailableThreads](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-getavailablethreads-method.md) method gets the number of threads that are not currently processing work items."},{"content":"All requests above the returned value of the <ph id=\"ph1\">`pdwMaxWorkerThreads`</ph> parameter remain queued until threads become available.","pos":[2035,2157],"source":" All requests above the returned value of the `pdwMaxWorkerThreads` parameter remain queued until threads become available."},{"pos":[2164,2278],"content":"If the host does not provide an implementation of <ph id=\"ph1\">`GetMaxThreads`</ph>, it should return an HRESULT value of E_NOTIMPL.","source":"If the host does not provide an implementation of `GetMaxThreads`, it should return an HRESULT value of E_NOTIMPL."},{"pos":[2287,2299],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2303,2407],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2414,2435],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2442,2492],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2499,2607],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2616,2624],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2719,2838],"content":"<bpt id=\"p1\">[</bpt>GetMinThreads Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-getminthreads-method.md)</ept>","source":"[GetMinThreads Method](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-getminthreads-method.md)"},{"pos":[2841,2960],"content":"<bpt id=\"p1\">[</bpt>SetMaxThreads Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-setmaxthreads-method.md)</ept>","source":"[SetMaxThreads Method](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-setmaxthreads-method.md)"},{"pos":[2963,3083],"content":"<bpt id=\"p1\">[</bpt>IHostThreadPoolManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-interface.md)</ept>","source":"[IHostThreadPoolManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostthreadpoolmanager-interface.md)"}]}