<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9ab91d4258eb0962e1ce2fec8e4f729d5ddf41c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\preprocessor-directives\preprocessor-elif.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12937cdd970d5378dede3d4476ed413be5c73eb6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b507219aea5b1cb944a61d26d92f37e830edd8a9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>elif (C# Reference) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>#elif (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`#elif`</ph> lets you create a compound conditional directive.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`#elif`</ph> expression will be evaluated if neither the preceding <bpt id="p1">[</bpt>#if<ept id="p1">](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md)</ept> nor any preceding, optional, <ph id="ph2">`#elif`</ph> directive expressions evaluate to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`#elif`</ph> expression evaluates to <ph id="ph2">`true`</ph>, the compiler evaluates all the code between the <ph id="ph3">`#elif`</ph> and the next conditional directive.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the operators <ph id="ph1">`==`</ph> (equality), <ph id="ph2">`!=`</ph> (inequality), <ph id="ph3">`&amp;&amp;`</ph> (and), and <ph id="ph4">`||`</ph> (or), to evaluate multiple symbols.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can also group symbols and operators with parentheses.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`#elif`</ph> is equivalent to using:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`#elif`</ph> is simpler, because each <ph id="ph2">`#if`</ph> requires a <bpt id="p1">[</bpt>#endif<ept id="p1">](../../../csharp/language-reference/preprocessor-directives/preprocessor-endif.md)</ept>, whereas a <ph id="ph3">`#elif`</ph> can be used without a matching <ph id="ph4">`#endif`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>#if<ept id="p1">](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md)</ept> for an example of how to use <ph id="ph1">`#elif`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>C# Preprocessor Directives<ept id="p1">](../../../csharp/language-reference/preprocessor-directives/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>