{"content":"---\ntitle: \"Static Constructors - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"static constructors [C#]\"\n  - \"constructors [C#], static\"\nms.assetid: 151ec95e-3c4d-4ed7-885d-95b7a3be2e7d\n---\n# Static Constructors (C# Programming Guide)\nA static constructor is used to initialize any [static](../../../csharp/language-reference/keywords/static.md) data, or to perform a particular action that needs to be performed once only. It is called automatically before the first instance is created or any static members are referenced.  \n  \n [!code-csharp[csProgGuideObjects#14](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideObjects/CS/Objects.cs#14)]  \n  \n Static constructors have the following properties:  \n  \n-   A static constructor does not take access modifiers or have parameters.  \n  \n-   A static constructor is called automatically to initialize the [class](../../../csharp/language-reference/keywords/class.md) before the first instance is created or any static members are referenced.  \n  \n-   A static constructor cannot be called directly.  \n  \n-   The user has no control on when the static constructor is executed in the program.  \n  \n-   A typical use of static constructors is when the class is using a log file and the constructor is used to write entries to this file.  \n  \n-   Static constructors are also useful when creating wrapper classes for unmanaged code, when the constructor can call the `LoadLibrary` method.  \n  \n-   If a static constructor throws an exception, the runtime will not invoke it a second time, and the type will remain uninitialized for the lifetime of the application domain in which your program is running.  \n  \n## Example  \n In this example, class `Bus` has a static constructor. When the first instance of `Bus` is created (`bus1`), the static constructor is invoked to initialize the class. The sample output verifies that the static constructor runs only one time, even though two instances of `Bus` are created, and that it runs before the instance constructor runs.  \n  \n [!code-csharp[csProgGuideObjects#15](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideObjects/CS/Objects.cs#15)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)\n- [Constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md)\n- [Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)\n- [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md)\n","nodes":[{"pos":[4,229],"embed":true,"restype":"x-metadata","content":"title: \"Static Constructors - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"static constructors [C#]\"\n  - \"constructors [C#], static\"\nms.assetid: 151ec95e-3c4d-4ed7-885d-95b7a3be2e7d","nodes":[{"content":"Static Constructors - C# Programming Guide","nodes":[{"pos":[0,42],"content":"Static Constructors - C# Programming Guide","nodes":[{"content":"Static Constructors - C# Programming Guide","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[236,278],"content":"Static Constructors (C# Programming Guide)","linkify":"Static Constructors (C# Programming Guide)","nodes":[{"content":"Static Constructors (C# Programming Guide)","pos":[0,42]}]},{"content":"A static constructor is used to initialize any <bpt id=\"p1\">[</bpt>static<ept id=\"p1\">](../../../csharp/language-reference/keywords/static.md)</ept> data, or to perform a particular action that needs to be performed once only.","pos":[279,467],"source":"A static constructor is used to initialize any [static](../../../csharp/language-reference/keywords/static.md) data, or to perform a particular action that needs to be performed once only."},{"content":"It is called automatically before the first instance is created or any static members are referenced.","pos":[468,569]},{"content":"Static constructors have the following properties:","pos":[704,754]},{"content":"A static constructor does not take access modifiers or have parameters.","pos":[764,835]},{"pos":[845,1044],"content":"A static constructor is called automatically to initialize the <bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](../../../csharp/language-reference/keywords/class.md)</ept> before the first instance is created or any static members are referenced.","source":"A static constructor is called automatically to initialize the [class](../../../csharp/language-reference/keywords/class.md) before the first instance is created or any static members are referenced."},{"content":"A static constructor cannot be called directly.","pos":[1054,1101]},{"content":"The user has no control on when the static constructor is executed in the program.","pos":[1111,1193]},{"content":"A typical use of static constructors is when the class is using a log file and the constructor is used to write entries to this file.","pos":[1203,1336]},{"pos":[1346,1487],"content":"Static constructors are also useful when creating wrapper classes for unmanaged code, when the constructor can call the <ph id=\"ph1\">`LoadLibrary`</ph> method.","source":"Static constructors are also useful when creating wrapper classes for unmanaged code, when the constructor can call the `LoadLibrary` method."},{"content":"If a static constructor throws an exception, the runtime will not invoke it a second time, and the type will remain uninitialized for the lifetime of the application domain in which your program is running.","pos":[1497,1703]},{"pos":[1712,1719],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, class <ph id=\"ph1\">`Bus`</ph> has a static constructor.","pos":[1723,1777],"source":"In this example, class `Bus` has a static constructor."},{"content":"When the first instance of <ph id=\"ph1\">`Bus`</ph> is created (<ph id=\"ph2\">`bus1`</ph>), the static constructor is invoked to initialize the class.","pos":[1778,1890],"source":" When the first instance of `Bus` is created (`bus1`), the static constructor is invoked to initialize the class."},{"content":"The sample output verifies that the static constructor runs only one time, even though two instances of <ph id=\"ph1\">`Bus`</ph> are created, and that it runs before the instance constructor runs.","pos":[1891,2068],"source":" The sample output verifies that the static constructor runs only one time, even though two instances of `Bus` are created, and that it runs before the instance constructor runs."},{"pos":[2205,2213],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2217,2283],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2286,2371],"content":"<bpt id=\"p1\">[</bpt>Classes and Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/index.md)</ept>","source":"[Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)"},{"pos":[2374,2459],"content":"<bpt id=\"p1\">[</bpt>Constructors<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/constructors.md)</ept>","source":"[Constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md)"},{"pos":[2462,2601],"content":"<bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept>","source":"[Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)"},{"pos":[2604,2686],"content":"<bpt id=\"p1\">[</bpt>Finalizers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/destructors.md)</ept>","source":"[Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md)"}]}