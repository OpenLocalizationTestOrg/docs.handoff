<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="cor-heapobject-structure.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f8eacdde202aea1780d3a06f8ad5f0eed231296</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\cor-heapobject-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75ed4f5d1e25a51220b7443f421dcd919532fd3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9419129514af5f29ad6676dc37dfe9a560919412</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>COR_HEAPOBJECT Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COR_HEAPOBJECT Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides information about an object on the managed heap.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The address of the object in memory.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The total size of the object, in bytes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>COR_TYPEID<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md)</ept> token that represents the type of the object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`COR_HEAPOBJECT`</ph> instances can be retrieved by enumerating an <bpt id="p1">[</bpt>ICorDebugHeapEnum<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-interface.md)</ept> interface object that is populated by calling the <bpt id="p2">[</bpt>ICorDebugProcess5::EnumerateHeap<ept id="p2">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-enumerateheap-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`COR_HEAPOBJECT`</ph> instance provides information either about a live object on the managed heap, or about an object that is not rooted by any object but has not yet been collected by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For better performance, the <ph id="ph1">`COR_HEAPOBJECT.address`</ph> field is a <ph id="ph2">`CORDB_ADDRESS`</ph> value rather than the ICorDebugValue interface value used in much of the debugging API.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To obtain an ICorDebugValue object for a given object address, you can pass the <ph id="ph1">`CORDB_ADDRESS`</ph> value to the <bpt id="p1">[</bpt>ICorDebugProcess5::GetObject<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getobject-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For better performance, the <ph id="ph1">`COR_HEAPOBJECT.type`</ph> field is a <ph id="ph2">`COR_TYPEID`</ph> value rather than the ICorDebugType interface value used in much of the debugging API.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To obtain an ICorDebugType object for a given type ID, you can pass the <ph id="ph1">`COR_TYPEID`</ph> value to the <bpt id="p1">[</bpt>ICorDebugProcess5::GetTypeForTypeID<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-gettypefortypeid-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COR_HEAPOBJECT`</ph> structure includes a reference-counted COM interface.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you retrieve a <ph id="ph1">`COR_HEAPOBJECT`</ph> instance from the enumerator by calling the <bpt id="p1">[</bpt>ICorDebugHeapEnum::Next<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-next-method.md)</ept> method, you must subsequently release the reference.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorDebug.idl, CorDebug.h</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Structures<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>