<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="foreach-in.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa5408dbe214af2c21edd394f74fb8b675f2a099</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\foreach-in.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10b5e1e13a8dfc25168270163e7d0e102feb81d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d696b48a6cd28adf8e4476b5bbfa1e1541d1a16c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>foreach, in (C# Reference) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>foreach, in (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement repeats a group of embedded statements for each element in an array or an object collection that implements the <ph id="ph2">&lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement is used to iterate through the collection to get the information that you want, but can not be used to add or remove items from the source collection to avoid unpredictable side effects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you need to add or remove items from the source collection, use a <bpt id="p1">[</bpt>for<ept id="p1">](../../../csharp/language-reference/keywords/for.md)</ept> loop.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The embedded statements continue to execute for each element in the array or collection.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After the iteration has been completed for all the elements in the collection, control is transferred to the next statement following the <ph id="ph1">`foreach`</ph> block.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>At any point within the <ph id="ph1">`foreach`</ph> block, you can break out of the loop by using the <bpt id="p1">[</bpt>break<ept id="p1">](../../../csharp/language-reference/keywords/break.md)</ept> keyword, or step to the next iteration in the loop by using the <bpt id="p2">[</bpt>continue<ept id="p2">](../../../csharp/language-reference/keywords/continue.md)</ept> keyword.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`foreach`</ph> loop can also be exited by the <bpt id="p1">[</bpt>goto<ept id="p1">](../../../csharp/language-reference/keywords/goto.md)</ept>, <bpt id="p2">[</bpt>return<ept id="p2">](../../../csharp/language-reference/keywords/return.md)</ept>, or <bpt id="p3">[</bpt>throw<ept id="p3">](../../../csharp/language-reference/keywords/throw.md)</ept> statements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`foreach`</ph> keyword and code samples, see the following topics:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using foreach with Arrays<ept id="p1">](../../../csharp/programming-guide/arrays/using-foreach-with-arrays.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Access a Collection Class with foreach<ept id="p1">](../../../csharp/programming-guide/classes-and-structs/how-to-access-a-collection-class-with-foreach.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following code shows three examples:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>a typical <ph id="ph1">`foreach`</ph> loop that displays the contents of an array of integers</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>a <bpt id="p1">[</bpt>for<ept id="p1">](../../../csharp/language-reference/keywords/for.md)</ept> loop that does the same thing</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>a <ph id="ph1">`foreach`</ph> loop that maintains a count of the number of elements in the array</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>C# Language Specification</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Keywords<ept id="p1">](../../../csharp/language-reference/keywords/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Iteration Statements<ept id="p1">](../../../csharp/language-reference/keywords/iteration-statements.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>for<ept id="p1">](../../../csharp/language-reference/keywords/for.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>