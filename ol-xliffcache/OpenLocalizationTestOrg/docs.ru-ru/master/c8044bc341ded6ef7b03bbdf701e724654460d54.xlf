<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="x-xdata-intrinsic-xaml-type.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8044bc341ded6ef7b03bbdf701e724654460d54</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\x-xdata-intrinsic-xaml-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5fefe55922ba057d7de0ab08395ada1a0f8055e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">094974b9421a3d69fe6c70e5b5ee505b9264f4e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>x:XData Intrinsic XAML Type</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>x:XData Intrinsic XAML Type</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enables placement of XML data islands within a XAML production.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XML elements within <ph id="ph1">`x:XData`</ph> should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`x:XData`</ph> can contain arbitrary well-formed XML.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML Object Element Usage</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The single root element of the enclosed data island.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For most eventual consumers, XML that does not have a single root is considered invalid.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In particular, a single root is required if the <ph id="ph1">`x:XData`</ph> is intended as an XML data source for WPF or many other technologies that use XML sources for data binding.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XML that represents the XML data.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any number of elements can be contained as element data and nested elements can be contained in other elements; however, the general rules of XML apply.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The XML elements within an <ph id="ph1">`x:XData`</ph> object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Programmatic access to XML data and the <ph id="ph1">`x:XData`</ph> intrinsic XAML type is possible in .NET Framework XAML Services through the <ph id="ph2">&lt;xref:System.Windows.Markup.XData&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>WPF Usage Notes</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`x:XData`</ph> object is primarily used as a child object of an <ph id="ph2">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>, or alternatively, as the child object of the <ph id="ph3">&lt;xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType&gt;</ph> property (in XAML, this is typically expressed in property element syntax).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The data should typically redefine the base XML namespace within the data island to be a new default XML namespace (set to an empty string).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is easiest for simple data islands because the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> expressions that are used to reference and bind to the data can avoid inclusion of prefixes.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>More complex data islands might define multiple prefixes for the data and use a specific prefix for the XML namespace at the root.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this case, all <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> expression references should include the appropriate namespace-mapped prefix.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../wpf/data/data-binding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Technically, <ph id="ph1">`x:XData`</ph> can be used as the content of any property of type <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType&gt;</ph> is the only prominent implementation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../wpf/data/data-binding-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](../wpf/advanced/binding-markup-extension.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>