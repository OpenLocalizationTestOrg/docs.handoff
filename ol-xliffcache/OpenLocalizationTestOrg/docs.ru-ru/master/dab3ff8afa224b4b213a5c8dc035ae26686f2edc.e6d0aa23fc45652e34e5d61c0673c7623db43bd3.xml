{"content":"---\ntitle: \"ICorDebugStepper Interface1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugStepper\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugStepper\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorDebugStepper interface [.NET Framework debugging]\"\nms.assetid: ed8364eb-f01b-46f6-b5e3-5dda9cae2dfe\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugStepper Interface1\nRepresents a step in code execution that is performed by a debugger, serves as an identifier between the issuance and completion of a command, and provides a way to cancel a step.  \n  \n## Methods  \n  \n|Method|Description|  \n|------------|-----------------|  \n|[Deactivate Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-deactivate-method.md)|Causes this `ICorDebugStepper` to cancel the last step command it received.|  \n|[IsActive Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-isactive-method.md)|Gets a value that indicates whether this `ICorDebugStepper` is currently executing a step.|  \n|[SetInterceptMask Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md)|Sets a CorDebugIntercept value that specifies the types of code that are stepped into.|  \n|[SetRangeIL Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setrangeil-method.md)|Sets a value that indicates whether calls to [ICorDebugStepper::StepRange](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md) pass argument values relative to the native code or to Microsoft intermediate language (MSIL) code of the method that is being stepped through.|  \n|[SetUnmappedStopMask Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setunmappedstopmask-method.md)|Sets a CorDebugUnmappedStop value that specifies the type of unmapped code in which execution will halt.|  \n|[Step Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-step-method.md)|Causes this `ICorDebugStepper` to single-step through its containing thread, and optionally, to continue single-stepping through functions that are called within the thread.|  \n|[StepOut Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-stepout-method.md)|Causes this `ICorDebugStepper` to single-step through its containing thread, and to complete when the current frame returns control to the calling frame.|  \n|[StepRange Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md)|Causes this `ICorDebugStepper` to single-step through its containing thread, and to return when it reaches code beyond the last of the specified ranges.|  \n  \n## Remarks  \n The `ICorDebugStepper` interface serves the following purposes:  \n  \n-   It acts as an identifier between a step command that is issued and the completion of that command.  \n  \n-   It provides a central interface to encapsulate all the stepping that can be performed.  \n  \n-   It provides a way to prematurely cancel a stepping operation.  \n  \n There can be more than one stepper per thread. For example, a breakpoint may be hit while stepping over a function, and the user may wish to start a new stepping operation inside that function. It is up to the debugger to determine how to handle this situation. The debugger may want to cancel the original stepping operation or nest the two operations. The `ICorDebugStepper` interface supports both choices.  \n  \n A stepper may migrate between threads if the common language runtime (CLR) makes a cross-threaded, marshaled call.  \n  \n> [!NOTE]\n>  This interface does not support being called remotely, either cross-machine or cross-process.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)","nodes":[{"pos":[12,56],"content":"ICorDebugStepper Interface1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugStepper Interface1 | Microsoft Docs","pos":[0,44]}]},{"pos":[618,645],"content":"ICorDebugStepper Interface1","linkify":"ICorDebugStepper Interface1","nodes":[{"content":"ICorDebugStepper Interface1","pos":[0,27]}]},{"content":"Represents a step in code execution that is performed by a debugger, serves as an identifier between the issuance and completion of a command, and provides a way to cancel a step.","pos":[646,825]},{"pos":[834,841],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[848,854]},{"content":"Description","pos":[855,866]},{"pos":[906,1015],"content":"<bpt id=\"p1\">[</bpt>Deactivate Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-deactivate-method.md)</ept>","source":"[Deactivate Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-deactivate-method.md)"},{"pos":[1016,1091],"content":"Causes this <ph id=\"ph1\">`ICorDebugStepper`</ph> to cancel the last step command it received.","source":"Causes this `ICorDebugStepper` to cancel the last step command it received."},{"pos":[1096,1201],"content":"<bpt id=\"p1\">[</bpt>IsActive Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-isactive-method.md)</ept>","source":"[IsActive Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-isactive-method.md)"},{"pos":[1202,1292],"content":"Gets a value that indicates whether this <ph id=\"ph1\">`ICorDebugStepper`</ph> is currently executing a step.","source":"Gets a value that indicates whether this `ICorDebugStepper` is currently executing a step."},{"pos":[1297,1418],"content":"<bpt id=\"p1\">[</bpt>SetInterceptMask Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md)</ept>","source":"[SetInterceptMask Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md)"},{"content":"Sets a CorDebugIntercept value that specifies the types of code that are stepped into.","pos":[1419,1505]},{"pos":[1510,1619],"content":"<bpt id=\"p1\">[</bpt>SetRangeIL Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setrangeil-method.md)</ept>","source":"[SetRangeIL Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setrangeil-method.md)"},{"pos":[1620,1927],"content":"Sets a value that indicates whether calls to <bpt id=\"p1\">[</bpt>ICorDebugStepper::StepRange<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md)</ept> pass argument values relative to the native code or to Microsoft intermediate language (MSIL) code of the method that is being stepped through.","source":"Sets a value that indicates whether calls to [ICorDebugStepper::StepRange](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md) pass argument values relative to the native code or to Microsoft intermediate language (MSIL) code of the method that is being stepped through."},{"pos":[1932,2059],"content":"<bpt id=\"p1\">[</bpt>SetUnmappedStopMask Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setunmappedstopmask-method.md)</ept>","source":"[SetUnmappedStopMask Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setunmappedstopmask-method.md)"},{"content":"Sets a CorDebugUnmappedStop value that specifies the type of unmapped code in which execution will halt.","pos":[2060,2164]},{"pos":[2169,2266],"content":"<bpt id=\"p1\">[</bpt>Step Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-step-method.md)</ept>","source":"[Step Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-step-method.md)"},{"pos":[2267,2440],"content":"Causes this <ph id=\"ph1\">`ICorDebugStepper`</ph> to single-step through its containing thread, and optionally, to continue single-stepping through functions that are called within the thread.","source":"Causes this `ICorDebugStepper` to single-step through its containing thread, and optionally, to continue single-stepping through functions that are called within the thread."},{"pos":[2445,2548],"content":"<bpt id=\"p1\">[</bpt>StepOut Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-stepout-method.md)</ept>","source":"[StepOut Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-stepout-method.md)"},{"pos":[2549,2702],"content":"Causes this <ph id=\"ph1\">`ICorDebugStepper`</ph> to single-step through its containing thread, and to complete when the current frame returns control to the calling frame.","source":"Causes this `ICorDebugStepper` to single-step through its containing thread, and to complete when the current frame returns control to the calling frame."},{"pos":[2707,2814],"content":"<bpt id=\"p1\">[</bpt>StepRange Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md)</ept>","source":"[StepRange Method](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md)"},{"pos":[2815,2967],"content":"Causes this <ph id=\"ph1\">`ICorDebugStepper`</ph> to single-step through its containing thread, and to return when it reaches code beyond the last of the specified ranges.","source":"Causes this `ICorDebugStepper` to single-step through its containing thread, and to return when it reaches code beyond the last of the specified ranges."},{"pos":[2977,2984],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2988,3051],"content":"The <ph id=\"ph1\">`ICorDebugStepper`</ph> interface serves the following purposes:","source":"The `ICorDebugStepper` interface serves the following purposes:"},{"content":"It acts as an identifier between a step command that is issued and the completion of that command.","pos":[3061,3159]},{"content":"It provides a central interface to encapsulate all the stepping that can be performed.","pos":[3169,3255]},{"content":"It provides a way to prematurely cancel a stepping operation.","pos":[3265,3326]},{"content":"There can be more than one stepper per thread.","pos":[3333,3379]},{"content":"For example, a breakpoint may be hit while stepping over a function, and the user may wish to start a new stepping operation inside that function.","pos":[3380,3526]},{"content":"It is up to the debugger to determine how to handle this situation.","pos":[3527,3594]},{"content":"The debugger may want to cancel the original stepping operation or nest the two operations.","pos":[3595,3686]},{"content":"The <ph id=\"ph1\">`ICorDebugStepper`</ph> interface supports both choices.","pos":[3687,3742],"source":" The `ICorDebugStepper` interface supports both choices."},{"content":"A stepper may migrate between threads if the common language runtime (CLR) makes a cross-threaded, marshaled call.","pos":[3749,3863]},{"pos":[3871,3975],"content":"[!NOTE]\n This interface does not support being called remotely, either cross-machine or cross-process.","leadings":["","> "],"nodes":[{"content":"This interface does not support being called remotely, either cross-machine or cross-process.","pos":[9,102]}]},{"pos":[3984,3996],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4000,4104],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[4111,4147],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[4154,4179],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[4186,4294],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[4303,4311],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4315,4413],"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}