{"content":"---\ntitle: \"How to: Write Text to Files with a StreamWriter in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"files [Visual Basic], writing to\"\n  - \"text, writing to files\"\n  - \"writing to files [Visual Basic], StreamWriter\"\nms.assetid: 99762e57-ef46-4dcc-8959-a8f79c22f067\n---\n# How to: Write Text to Files with a StreamWriter in Visual Basic\nThis example opens a <xref:System.IO.StreamWriter> object with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the <xref:System.IO.TextWriter.WriteLine%2A> method of the <xref:System.IO.StreamWriter> class.  \n  \n## Example  \n [!code-vb[VbFileIOWrite#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbFileIOWrite/VB/Class1.vb#5)]  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   The file exists and is read-only (<xref:System.IO.IOException>).  \n  \n-   The disk is full (<xref:System.IO.IOException>).  \n  \n-   The pathname is too long (<xref:System.IO.PathTooLongException>).  \n  \n## .NET Framework Security  \n This example creates a new file, if the file does not already exist. If an application needs to create a file, that application needs `Create` access for the folder. If the file already exists, the application needs only `Write` access, a lesser privilege. Where possible, it is more secure to create the file during deployment, and only grant `Read` access to a single file, rather than `Create` access for a folder.  \n  \n## See also\n\n- <xref:System.IO.StreamWriter>\n- <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>\n- [How to: Read from Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)\n- [Writing to Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md)\n","nodes":[{"pos":[4,287],"embed":true,"restype":"x-metadata","content":"title: \"How to: Write Text to Files with a StreamWriter in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"files [Visual Basic], writing to\"\n  - \"text, writing to files\"\n  - \"writing to files [Visual Basic], StreamWriter\"\nms.assetid: 99762e57-ef46-4dcc-8959-a8f79c22f067","nodes":[{"content":"How to: Write Text to Files with a StreamWriter in Visual Basic","nodes":[{"pos":[0,63],"content":"How to: Write Text to Files with a StreamWriter in Visual Basic","nodes":[{"content":"How to: Write Text to Files with a StreamWriter in Visual Basic","pos":[0,63]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[294,357],"content":"How to: Write Text to Files with a StreamWriter in Visual Basic","linkify":"How to: Write Text to Files with a StreamWriter in Visual Basic","nodes":[{"content":"How to: Write Text to Files with a StreamWriter in Visual Basic","pos":[0,63]}]},{"pos":[358,621],"content":"This example opens a <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> object with the <ph id=\"ph2\">`My.Computer.FileSystem.OpenTextFileWriter`</ph> method and uses it to write a string to a text file with the <ph id=\"ph3\">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.IO.StreamWriter&gt;</ph> class.","source":"This example opens a <xref:System.IO.StreamWriter> object with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the <xref:System.IO.TextWriter.WriteLine%2A> method of the <xref:System.IO.StreamWriter> class."},{"pos":[630,637],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[759,777],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[781,829]},{"pos":[839,903],"content":"The file exists and is read-only (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The file exists and is read-only (<xref:System.IO.IOException>)."},{"pos":[913,961],"content":"The disk is full (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The disk is full (<xref:System.IO.IOException>)."},{"pos":[971,1036],"content":"The pathname is too long (<ph id=\"ph1\">&lt;xref:System.IO.PathTooLongException&gt;</ph>).","source":"The pathname is too long (<xref:System.IO.PathTooLongException>)."},{"pos":[1045,1068],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"This example creates a new file, if the file does not already exist.","pos":[1072,1140]},{"content":"If an application needs to create a file, that application needs <ph id=\"ph1\">`Create`</ph> access for the folder.","pos":[1141,1237],"source":" If an application needs to create a file, that application needs `Create` access for the folder."},{"content":"If the file already exists, the application needs only <ph id=\"ph1\">`Write`</ph> access, a lesser privilege.","pos":[1238,1328],"source":" If the file already exists, the application needs only `Write` access, a lesser privilege."},{"content":"Where possible, it is more secure to create the file during deployment, and only grant <ph id=\"ph1\">`Read`</ph> access to a single file, rather than <ph id=\"ph2\">`Create`</ph> access for a folder.","pos":[1329,1489],"source":" Where possible, it is more secure to create the file during deployment, and only grant `Read` access to a single file, rather than `Create` access for a folder."},{"pos":[1498,1506],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1613,1753],"content":"<bpt id=\"p1\">[</bpt>How to: Read from Text Files<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)</ept>","source":"[How to: Read from Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)"},{"pos":[1756,1873],"content":"<bpt id=\"p1\">[</bpt>Writing to Files<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md)</ept>","source":"[Writing to Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md)"}]}