{"content":"---\ntitle: \"ICorProfilerInfo3::GetModuleInfo2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo3.GetModuleInfo2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo3::GetModuleInfo2\"\nhelpviewer_keywords: \n  - \"ICorProfilerInfo3::GetModuleInfo2 method [.NET Framework profiling]\"\n  - \"GetModuleInfo2 method [.NET Framework profiling]\"\nms.assetid: f1f6b8f3-dcfc-49e8-be76-ea50ea90d5a7\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ICorProfilerInfo3::GetModuleInfo2 Method\nGiven a module ID, returns the file name of the module, the ID of the module's parent assembly, and a bitmask that describes the properties of the module.  \n  \n## Syntax  \n  \n```  \nHRESULT GetModuleInfo2(  \n    [in]  ModuleID   moduleId,  \n    [out] LPCBYTE    *ppBaseLoadAddress,  \n    [in]  ULONG      cchName,  \n    [out] ULONG      *pcchName,  \n    [out, annotation(\"__out_ecount_part(cchName, *pcchName)\")]  \n          WCHAR      szName[] ,  \n    [out] AssemblyID *pAssemblyId);  \n    [out] DWORD                 *pdwModuleFlags);  \n```  \n  \n## Parameters  \n `moduleId`  \n [in] The ID of the module for which information will be retrieved.  \n  \n `ppBaseLoadAddress`  \n [out] The base address at which the module is loaded.  \n  \n `cchName`  \n [in] The length, in characters, of the `szName` return buffer.  \n  \n `pcchName`  \n [out] A pointer to the total character length of the module's file name that is returned.  \n  \n `szName`  \n [out] A caller-provided wide character buffer. When the method returns, this buffer contains the file name of the module.  \n  \n `pAssemblyId`  \n [out] A pointer to the ID of the module's parent assembly.  \n  \n `pdwModuleFlags`  \n [out] A bitmask of values from the [COR_PRF_MODULE_FLAGS](../../../../docs/framework/unmanaged-api/profiling/cor-prf-module-flags-enumeration.md) enumeration that specify the properties of the module.  \n  \n## Remarks  \n For dynamic modules, the `szName` parameter is the metadata name of the module, and the base address is 0 (zero). The metadata name is the value in the Name column from the Module table inside metadata. This is also exposed as the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property to managed code, and as the `szName` parameter of the [IMetaDataImport::GetScopeProps](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-getscopeprops-method.md) method to unmanaged metadata client code.  \n  \n Although the `GetModuleInfo2` method may be called as soon as the module's ID exists, the ID of the parent assembly will not be available until the profiler receives the [ICorProfilerCallback::ModuleAttachedToAssembly](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleattachedtoassembly-method.md) callback.  \n  \n When `GetModuleInfo2` returns, you must verify that the `szName` buffer was large enough to contain the full file name of the module. To do this, compare the value that `pcchName` points to with the value of the `cchName` parameter. If `pcchName` points to a value that is larger than `cchName`, allocate a larger `szName` buffer, update `cchName` with the new, larger size, and call `GetModuleInfo2` again.  \n  \n Alternatively, you can first call `GetModuleInfo2` with a zero-length `szName` buffer to obtain the correct buffer size. You can then set the buffer size to the value returned in `pcchName` and call `GetModuleInfo2` again.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See also\n\n- [ICorProfilerInfo Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)\n- [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)\n- [Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)\n","nodes":[{"pos":[4,497],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerInfo3::GetModuleInfo2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo3.GetModuleInfo2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo3::GetModuleInfo2\"\nhelpviewer_keywords: \n  - \"ICorProfilerInfo3::GetModuleInfo2 method [.NET Framework profiling]\"\n  - \"GetModuleInfo2 method [.NET Framework profiling]\"\nms.assetid: f1f6b8f3-dcfc-49e8-be76-ea50ea90d5a7\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ICorProfilerInfo3::GetModuleInfo2 Method","nodes":[{"pos":[0,40],"content":"ICorProfilerInfo3::GetModuleInfo2 Method","nodes":[{"content":"ICorProfilerInfo3::GetModuleInfo2 Method","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[504,544],"content":"ICorProfilerInfo3::GetModuleInfo2 Method","linkify":"ICorProfilerInfo3::GetModuleInfo2 Method","nodes":[{"content":"ICorProfilerInfo3::GetModuleInfo2 Method","pos":[0,40]}]},{"content":"Given a module ID, returns the file name of the module, the ID of the module's parent assembly, and a bitmask that describes the properties of the module.","pos":[545,699]},{"pos":[708,714],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1095,1105],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the module for which information will be retrieved.","pos":[1123,1189]},{"content":"[out] The base address at which the module is loaded.","pos":[1219,1272]},{"content":"[in] The length, in characters, of the <ph id=\"ph1\">`szName`</ph> return buffer.","pos":[1292,1354],"source":"[in] The length, in characters, of the `szName` return buffer."},{"content":"[out] A pointer to the total character length of the module's file name that is returned.","pos":[1375,1464]},{"content":"[out] A caller-provided wide character buffer.","pos":[1483,1529]},{"content":"When the method returns, this buffer contains the file name of the module.","pos":[1530,1604]},{"content":"[out] A pointer to the ID of the module's parent assembly.","pos":[1628,1686]},{"content":"[out] A bitmask of values from the <bpt id=\"p1\">[</bpt>COR_PRF_MODULE_FLAGS<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-module-flags-enumeration.md)</ept> enumeration that specify the properties of the module.","pos":[1713,1913],"source":"[out] A bitmask of values from the [COR_PRF_MODULE_FLAGS](../../../../docs/framework/unmanaged-api/profiling/cor-prf-module-flags-enumeration.md) enumeration that specify the properties of the module."},{"pos":[1922,1929],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For dynamic modules, the <ph id=\"ph1\">`szName`</ph> parameter is the metadata name of the module, and the base address is 0 (zero).","pos":[1933,2046],"source":"For dynamic modules, the `szName` parameter is the metadata name of the module, and the base address is 0 (zero)."},{"content":"The metadata name is the value in the Name column from the Module table inside metadata.","pos":[2047,2135]},{"content":"This is also exposed as the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType&gt;</ph> property to managed code, and as the <ph id=\"ph2\">`szName`</ph> parameter of the <bpt id=\"p1\">[</bpt>IMetaDataImport::GetScopeProps<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-getscopeprops-method.md)</ept> method to unmanaged metadata client code.","pos":[2136,2466],"source":" This is also exposed as the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property to managed code, and as the `szName` parameter of the [IMetaDataImport::GetScopeProps](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-getscopeprops-method.md) method to unmanaged metadata client code."},{"pos":[2473,2809],"content":"Although the <ph id=\"ph1\">`GetModuleInfo2`</ph> method may be called as soon as the module's ID exists, the ID of the parent assembly will not be available until the profiler receives the <bpt id=\"p1\">[</bpt>ICorProfilerCallback::ModuleAttachedToAssembly<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleattachedtoassembly-method.md)</ept> callback.","source":"Although the `GetModuleInfo2` method may be called as soon as the module's ID exists, the ID of the parent assembly will not be available until the profiler receives the [ICorProfilerCallback::ModuleAttachedToAssembly](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleattachedtoassembly-method.md) callback."},{"content":"When <ph id=\"ph1\">`GetModuleInfo2`</ph> returns, you must verify that the <ph id=\"ph2\">`szName`</ph> buffer was large enough to contain the full file name of the module.","pos":[2816,2949],"source":"When `GetModuleInfo2` returns, you must verify that the `szName` buffer was large enough to contain the full file name of the module."},{"content":"To do this, compare the value that <ph id=\"ph1\">`pcchName`</ph> points to with the value of the <ph id=\"ph2\">`cchName`</ph> parameter.","pos":[2950,3048],"source":" To do this, compare the value that `pcchName` points to with the value of the `cchName` parameter."},{"content":"If <ph id=\"ph1\">`pcchName`</ph> points to a value that is larger than <ph id=\"ph2\">`cchName`</ph>, allocate a larger <ph id=\"ph3\">`szName`</ph> buffer, update <ph id=\"ph4\">`cchName`</ph> with the new, larger size, and call <ph id=\"ph5\">`GetModuleInfo2`</ph> again.","pos":[3049,3223],"source":" If `pcchName` points to a value that is larger than `cchName`, allocate a larger `szName` buffer, update `cchName` with the new, larger size, and call `GetModuleInfo2` again."},{"content":"Alternatively, you can first call <ph id=\"ph1\">`GetModuleInfo2`</ph> with a zero-length <ph id=\"ph2\">`szName`</ph> buffer to obtain the correct buffer size.","pos":[3230,3350],"source":"Alternatively, you can first call `GetModuleInfo2` with a zero-length `szName` buffer to obtain the correct buffer size."},{"content":"You can then set the buffer size to the value returned in <ph id=\"ph1\">`pcchName`</ph> and call <ph id=\"ph2\">`GetModuleInfo2`</ph> again.","pos":[3351,3452],"source":" You can then set the buffer size to the value returned in `pcchName` and call `GetModuleInfo2` again."},{"pos":[3461,3473],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3477,3581],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3588,3622],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[3629,3654],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3661,3769],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[3778,3786],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3790,3900],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept>","source":"[ICorProfilerInfo Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)"},{"pos":[3903,4001],"content":"<bpt id=\"p1\">[</bpt>Profiling Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept>","source":"[Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)"},{"pos":[4004,4076],"content":"<bpt id=\"p1\">[</bpt>Profiling<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept>","source":"[Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)"}]}