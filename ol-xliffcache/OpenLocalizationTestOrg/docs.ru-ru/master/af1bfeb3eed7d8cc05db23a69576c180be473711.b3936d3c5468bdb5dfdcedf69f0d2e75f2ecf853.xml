{"content":"---\ntitle: \"How to: Declare a Structure (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"declarations, structures\"\n  - \"structure statements\"\n  - \"statements [Visual Basic], structure\"\n  - \"structures, declaring\"\nms.assetid: d5e98381-eb81-47d4-af83-48cc534a2572\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Declare a Structure (Visual Basic)\nYou begin a structure declaration with the [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md), and you end it with the `End` `Structure` statement. Between these two statements you must declare at least one *element*. The elements can be of any data type, but at least one must be either a nonshared variable or a nonshared, noncustom event.  \n  \n You cannot initialize any of the structure elements in the structure declaration. When you declare a variable to be of a structure type, you assign values to the elements by accessing them through the variable.  \n  \n For a discussion of the differences between structures and classes, see [Structures and Classes](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md).  \n  \n For demonstration purposes, consider a situation where you want to keep track of an employee's name, telephone extension, and salary. A structure allows you to do this in a single variable.  \n  \n### To declare a structure  \n  \n1.  Create the beginning and ending statements for the structure.  \n  \n     You can specify the access level of a structure using the [Public](../../../../visual-basic/language-reference/modifiers/public.md), [Protected](../../../../visual-basic/language-reference/modifiers/protected.md), [Friend](../../../../visual-basic/language-reference/modifiers/friend.md), or [Private](../../../../visual-basic/language-reference/modifiers/private.md) keyword, or you can let it default to `Public`.  \n  \n    ```  \n    Private Structure employee  \n    End Structure  \n    ```  \n  \n2.  Add elements to the body of the structure.  \n  \n     A structure must have at least one element. You must declare every element and specify an access level for it. If you use the [Dim Statement](../../../../visual-basic/language-reference/statements/dim-statement.md) without any keywords, the accessibility defaults to `Public`.  \n  \n    ```  \n    Private Structure employee  \n        Public givenName As String  \n        Public familyName As String  \n        Public phoneExtension As Long  \n        Private salary As Decimal  \n        Public Sub giveRaise(raise As Double)  \n            salary *= raise  \n        End Sub  \n        Public Event salaryReviewTime()  \n    End Structure  \n    ```  \n  \n     The `salary` field in the preceding example is `Private`, which means it is inaccessible outside the structure, even from the containing class. However, the `giveRaise` procedure is `Public`, so it can be called from outside the structure. Similarly, you can raise the `salaryReviewTime` event from outside the structure.  \n  \n     In addition to variables, `Sub` procedures, and events, you can also define constants, `Function` procedures, and properties in a structure. You can designate at most one property as the *default property*, provided it takes at least one argument. You can handle an event with a [Shared](../../../../visual-basic/language-reference/modifiers/shared.md)`Sub` procedure. For more information, see [How to: Declare and Call a Default Property in Visual Basic](../../../../visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md).  \n  \n## See Also  \n [Data Types](../../../../visual-basic/programming-guide/language-features/data-types/index.md)   \n [Elementary Data Types](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)   \n [Composite Data Types](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)   \n [Value Types and Reference Types](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)   \n [Structures](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)   \n [Troubleshooting Data Types](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)   \n [Structure Variables](../../../../visual-basic/programming-guide/language-features/data-types/structure-variables.md)   \n [Structures and Other Programming Elements](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)   \n [Structures and Classes](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)   \n [User-Defined Data Type](../../../../visual-basic/language-reference/data-types/user-defined-data-type.md)","nodes":[{"pos":[4,688],"nodes":[{"content":"How to: Declare a Structure (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,59],"content":"How to: Declare a Structure (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Declare a Structure (Visual Basic) | Microsoft Docs","pos":[0,59]}]}],"pos":[6,68],"yaml":true}],"content":"title: \"How to: Declare a Structure (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"declarations, structures\"\n  - \"structure statements\"\n  - \"statements [Visual Basic], structure\"\n  - \"structures, declaring\"\nms.assetid: d5e98381-eb81-47d4-af83-48cc534a2572\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[695,737],"content":"How to: Declare a Structure (Visual Basic)","linkify":"How to: Declare a Structure (Visual Basic)","nodes":[{"content":"How to: Declare a Structure (Visual Basic)","pos":[0,42]}]},{"content":"You begin a structure declaration with the <bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept>, and you end it with the <ph id=\"ph1\">`End`</ph> <ph id=\"ph2\">`Structure`</ph> statement.","pos":[738,935],"source":"You begin a structure declaration with the [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md), and you end it with the `End` `Structure` statement."},{"content":"Between these two statements you must declare at least one <bpt id=\"p1\">*</bpt>element<ept id=\"p1\">*</ept>.","pos":[936,1005],"source":" Between these two statements you must declare at least one *element*."},{"content":"The elements can be of any data type, but at least one must be either a nonshared variable or a nonshared, noncustom event.","pos":[1006,1129]},{"content":"You cannot initialize any of the structure elements in the structure declaration.","pos":[1136,1217]},{"content":"When you declare a variable to be of a structure type, you assign values to the elements by accessing them through the variable.","pos":[1218,1346]},{"pos":[1353,1549],"content":"For a discussion of the differences between structures and classes, see <bpt id=\"p1\">[</bpt>Structures and Classes<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)</ept>.","source":"For a discussion of the differences between structures and classes, see [Structures and Classes](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)."},{"content":"For demonstration purposes, consider a situation where you want to keep track of an employee's name, telephone extension, and salary.","pos":[1556,1689]},{"content":"A structure allows you to do this in a single variable.","pos":[1690,1745]},{"pos":[1755,1777],"content":"To declare a structure","linkify":"To declare a structure","nodes":[{"content":"To declare a structure","pos":[0,22]}]},{"content":"Create the beginning and ending statements for the structure.","pos":[1787,1848]},{"pos":[1859,2274],"content":"You can specify the access level of a structure using the <bpt id=\"p1\">[</bpt>Public<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/public.md)</ept>, <bpt id=\"p2\">[</bpt>Protected<ept id=\"p2\">](../../../../visual-basic/language-reference/modifiers/protected.md)</ept>, <bpt id=\"p3\">[</bpt>Friend<ept id=\"p3\">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept>, or <bpt id=\"p4\">[</bpt>Private<ept id=\"p4\">](../../../../visual-basic/language-reference/modifiers/private.md)</ept> keyword, or you can let it default to <ph id=\"ph1\">`Public`</ph>.","source":"You can specify the access level of a structure using the [Public](../../../../visual-basic/language-reference/modifiers/public.md), [Protected](../../../../visual-basic/language-reference/modifiers/protected.md), [Friend](../../../../visual-basic/language-reference/modifiers/friend.md), or [Private](../../../../visual-basic/language-reference/modifiers/private.md) keyword, or you can let it default to `Public`."},{"content":"Add elements to the body of the structure.","pos":[2360,2402]},{"content":"A structure must have at least one element.","pos":[2413,2456]},{"content":"You must declare every element and specify an access level for it.","pos":[2457,2523]},{"content":"If you use the <bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept> without any keywords, the accessibility defaults to <ph id=\"ph1\">`Public`</ph>.","pos":[2524,2689],"source":" If you use the [Dim Statement](../../../../visual-basic/language-reference/statements/dim-statement.md) without any keywords, the accessibility defaults to `Public`."},{"content":"The <ph id=\"ph1\">`salary`</ph> field in the preceding example is <ph id=\"ph2\">`Private`</ph>, which means it is inaccessible outside the structure, even from the containing class.","pos":[3065,3208],"source":"The `salary` field in the preceding example is `Private`, which means it is inaccessible outside the structure, even from the containing class."},{"content":"However, the <ph id=\"ph1\">`giveRaise`</ph> procedure is <ph id=\"ph2\">`Public`</ph>, so it can be called from outside the structure.","pos":[3209,3304],"source":" However, the `giveRaise` procedure is `Public`, so it can be called from outside the structure."},{"content":"Similarly, you can raise the <ph id=\"ph1\">`salaryReviewTime`</ph> event from outside the structure.","pos":[3305,3386],"source":" Similarly, you can raise the `salaryReviewTime` event from outside the structure."},{"content":"In addition to variables, <ph id=\"ph1\">`Sub`</ph> procedures, and events, you can also define constants, <ph id=\"ph2\">`Function`</ph> procedures, and properties in a structure.","pos":[3397,3537],"source":"In addition to variables, `Sub` procedures, and events, you can also define constants, `Function` procedures, and properties in a structure."},{"content":"You can designate at most one property as the <bpt id=\"p1\">*</bpt>default property<ept id=\"p1\">*</ept>, provided it takes at least one argument.","pos":[3538,3644],"source":" You can designate at most one property as the *default property*, provided it takes at least one argument."},{"content":"You can handle an event with a <bpt id=\"p1\">[</bpt>Shared<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id=\"ph1\">`Sub`</ph> procedure.","pos":[3645,3765],"source":" You can handle an event with a [Shared](../../../../visual-basic/language-reference/modifiers/shared.md)`Sub` procedure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Declare and Call a Default Property in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md)</ept>.","pos":[3766,3973],"source":" For more information, see [How to: Declare and Call a Default Property in Visual Basic](../../../../visual-basic/programming-guide/language-features/procedures/how-to-declare-and-call-a-default-property.md)."},{"pos":[3982,3990],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3994,4089],"source":"[Data Types](../../../../visual-basic/programming-guide/language-features/data-types/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Elementary Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[4093,4215],"source":"[Elementary Data Types](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Composite Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[4219,4339],"source":"[Composite Data Types](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Value Types and Reference Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[4343,4485],"source":"[Value Types and Reference Types](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[4489,4589],"source":"[Structures](../../../../visual-basic/programming-guide/language-features/data-types/structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[4593,4725],"source":"[Troubleshooting Data Types](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structure Variables<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structure-variables.md)</ept><ph id=\"ph1\"> </ph>","pos":[4729,4847],"source":"[Structure Variables](../../../../visual-basic/programming-guide/language-features/data-types/structure-variables.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structures and Other Programming Elements<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)</ept><ph id=\"ph1\"> </ph>","pos":[4851,5013],"source":"[Structures and Other Programming Elements](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structures and Classes<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[5017,5141],"source":"[Structures and Classes](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-classes.md) "},{"content":"<bpt id=\"p1\">[</bpt>User-Defined Data Type<ept id=\"p1\">](../../../../visual-basic/language-reference/data-types/user-defined-data-type.md)</ept>","pos":[5145,5251],"source":"[User-Defined Data Type](../../../../visual-basic/language-reference/data-types/user-defined-data-type.md)"}]}