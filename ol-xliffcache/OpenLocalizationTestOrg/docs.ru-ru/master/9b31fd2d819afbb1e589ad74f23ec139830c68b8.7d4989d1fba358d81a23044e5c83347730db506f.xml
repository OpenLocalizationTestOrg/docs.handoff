{"content":"---\ntitle: \"Numeric and Comparison Operators\"\nms.date: \"03/30/2017\"\nms.assetid: 25b4a26a-06f2-4f80-87a9-76705ed46197\n---\n# Numeric and Comparison Operators\nArithmetic and comparison operators work as expected in the common language runtime (CLR) except as follows:  \n  \n-   SQL does not support the modulus operator on floating-point numbers.  \n  \n-   SQL does not support unchecked arithmetic.  \n  \n-   Increment and decrement operators cause side-effects when you use them in expressions that cannot be replicated in SQL and are, therefore, not supported.  \n  \n## Supported Operators  \n [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports the following operators.  \n  \n-   Basic arithmetic operators:  \n  \n    -   `+`  \n  \n    -   `-` (subtraction)  \n  \n    -   `*`  \n  \n    -   `/`  \n  \n    -   Visual Basic integer division (`\\`)  \n  \n    -   `%` (Visual Basic `Mod`)  \n  \n    -   `<<`  \n  \n    -   `>>`  \n  \n    -   `-` (unary negation)  \n  \n-   Basic comparison operators:  \n  \n    -   Visual Basic `=` and C# `==`  \n  \n    -   Visual Basic `<>` and C# `!=`  \n  \n    -   Visual Basic `Is/IsNot`  \n  \n    -   `<`  \n  \n    -   `<=`  \n  \n    -   `>`  \n  \n    -   `>=`  \n  \n## See also\n\n- [Data Types and Functions](../../../../../../docs/framework/data/adonet/sql/linq/data-types-and-functions.md)\n- [C# Operators](../../../../../../docs/csharp/language-reference/operators/index.md)\n- [Operators](../../../../../visual-basic/language-reference/operators/index.md)\n","nodes":[{"pos":[4,116],"embed":true,"restype":"x-metadata","content":"title: \"Numeric and Comparison Operators\"\nms.date: \"03/30/2017\"\nms.assetid: 25b4a26a-06f2-4f80-87a9-76705ed46197","nodes":[{"content":"Numeric and Comparison Operators","nodes":[{"pos":[0,32],"content":"Numeric and Comparison Operators","nodes":[{"content":"Numeric and Comparison Operators","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[123,155],"content":"Numeric and Comparison Operators","linkify":"Numeric and Comparison Operators","nodes":[{"content":"Numeric and Comparison Operators","pos":[0,32]}]},{"content":"Arithmetic and comparison operators work as expected in the common language runtime (CLR) except as follows:","pos":[156,264]},{"content":"SQL does not support the modulus operator on floating-point numbers.","pos":[274,342]},{"content":"SQL does not support unchecked arithmetic.","pos":[352,394]},{"content":"Increment and decrement operators cause side-effects when you use them in expressions that cannot be replicated in SQL and are, therefore, not supported.","pos":[404,557]},{"pos":[566,585],"content":"Supported Operators","linkify":"Supported Operators","nodes":[{"content":"Supported Operators","pos":[0,19]}]},{"pos":[589,690],"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> supports the following operators.","source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports the following operators."},{"content":"Basic arithmetic operators:","pos":[700,727]},{"pos":[758,775],"content":"<ph id=\"ph1\">`-`</ph> (subtraction)","source":"`-` (subtraction)"},{"pos":[823,858],"content":"Visual Basic integer division (<ph id=\"ph1\">`\\`</ph>)","source":"Visual Basic integer division (`\\`)"},{"pos":[872,896],"content":"<ph id=\"ph1\">`%`</ph> (Visual Basic <ph id=\"ph2\">`Mod`</ph>)","source":"`%` (Visual Basic `Mod`)"},{"pos":[946,966],"content":"<ph id=\"ph1\">`-`</ph> (unary negation)","source":"`-` (unary negation)"},{"content":"Basic comparison operators:","pos":[976,1003]},{"pos":[1017,1045],"content":"Visual Basic <ph id=\"ph1\">`=`</ph> and C# <ph id=\"ph2\">`==`</ph>","source":"Visual Basic `=` and C# `==`"},{"pos":[1059,1088],"content":"Visual Basic <ph id=\"ph1\">`&lt;&gt;`</ph> and C# <ph id=\"ph2\">`!=`</ph>","source":"Visual Basic `<>` and C# `!=`"},{"pos":[1102,1125],"content":"Visual Basic <ph id=\"ph1\">`Is/IsNot`</ph>","source":"Visual Basic `Is/IsNot`"},{"pos":[1204,1212],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1216,1325],"content":"<bpt id=\"p1\">[</bpt>Data Types and Functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/data-types-and-functions.md)</ept>","source":"[Data Types and Functions](../../../../../../docs/framework/data/adonet/sql/linq/data-types-and-functions.md)"},{"pos":[1328,1411],"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../../../../../../docs/csharp/language-reference/operators/index.md)</ept>","source":"[C# Operators](../../../../../../docs/csharp/language-reference/operators/index.md)"},{"pos":[1414,1492],"content":"<bpt id=\"p1\">[</bpt>Operators<ept id=\"p1\">](../../../../../visual-basic/language-reference/operators/index.md)</ept>","source":"[Operators](../../../../../visual-basic/language-reference/operators/index.md)"}]}