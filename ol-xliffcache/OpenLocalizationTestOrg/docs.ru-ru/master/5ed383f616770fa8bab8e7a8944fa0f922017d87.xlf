<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="corbindtoruntimeex-function.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ed383f616770fa8bab8e7a8944fa0f922017d87</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\hosting\corbindtoruntimeex-function.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fdbbfb64debb48c103c7d6bc3328e1f5e9a42d6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b842f681d5ae37e9b80bf24c9da08b71d077e06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>CorBindToRuntimeEx Function</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CorBindToRuntimeEx Function</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enables unmanaged hosts to load the common language runtime (CLR) into a process.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CorBindToRuntime<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntime-function.md)</ept> and <ph id="ph1">`CorBindToRuntimeEx`</ph> functions perform the same operation, but the <ph id="ph2">`CorBindToRuntimeEx`</ph> function allows you to set flags to specify the behavior of the CLR.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This function has been deprecated in the <ph id="ph1">[!INCLUDE[net_v40_long](../../../../includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This function takes a set of parameters that allow a host to do the following:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specify the version of the runtime that will be loaded.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Indicate whether the server or workstation build should be loaded.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Control whether concurrent garbage collection or non-concurrent garbage collection is done.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Concurrent garbage collection is not supported in applications running the WOW64 x86 emulator on 64-bit systems that implement the Intel Itanium architecture (formerly called IA-64).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about using WOW64 on 64-bit Windows systems, see <bpt id="p1">[</bpt>Running 32-bit Applications<ept id="p1">](/windows/desktop/WinProg64/running-32-bit-applications)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Control whether assemblies are loaded as domain-neutral.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Obtain an interface pointer to an <bpt id="p1">[</bpt>ICorRuntimeHost<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md)</ept> that can be used to set additional options for configuring an instance of the CLR before it is started.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>[in] A string describing the version of the CLR you want to load.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A version number in the .NET Framework consists of four parts separated by periods: <bpt id="p1">*</bpt>major.minor.build.revision<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The string passed as <ph id="ph1">`pwszVersion`</ph> must start with the character "v" followed by the first three parts of the version number (for example, "v1.0.1529").</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Some versions of the CLR are installed with a policy statement that specifies compatibility with previous versions of the CLR.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By default, the startup shim evaluates <ph id="ph1">`pwszVersion`</ph> against policy statements and loads the latest version of the runtime that is compatible with the version being requested.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A host can force the shim to skip policy evaluation and load the exact version specified in <ph id="ph1">`pwszVersion`</ph> by passing a value of  <ph id="ph2">`STARTUP_LOADER_SAFEMODE`</ph> for the <ph id="ph3">`startupFlags`</ph> parameter, as described below.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the caller specifies null for <ph id="ph1">`pwszVersion`</ph>, <ph id="ph2">`CorBindToRuntimeEx`</ph> identifies the set of installed runtimes whose version numbers are lower than the .NET Framework 4 runtime, and loads the latest version of the runtime from that set.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It won't load the .NET Framework 4 or later, and fails if no earlier version is installed.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that passing null gives the host no control over which version of the runtime is loaded.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Although this approach may be appropriate in some scenarios, it is strongly recommended that the host supply a specific version to load.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>[in] A string that specifies whether to load the server or the workstation build of the CLR.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Valid values are <ph id="ph1">`svr`</ph> and <ph id="ph2">`wks`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The server build is optimized to take advantage of multiple processors for garbage collections, and the workstation build is optimized for client applications running on a single-processor machine.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pwszBuildFlavor`</ph> is set to null, the workstation build is loaded.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When running on a single-processor machine, the workstation build is always loaded, even if <ph id="ph1">`pwszBuildFlavor`</ph> is set to <ph id="ph2">`svr`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, if <ph id="ph1">`pwszBuildFlavor`</ph> is set to <ph id="ph2">`svr`</ph> and concurrent garbage collection is specified (see the description of the <ph id="ph3">`startupFlags`</ph> parameter), the server build is loaded.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>[in] A combination of values of the <bpt id="p1">[</bpt>STARTUP_FLAGS<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/startup-flags-enumeration.md)</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These flags control concurrent garbage collection, domain-neutral code, and the behavior of the <ph id="ph1">`pwszVersion`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default is single domain if no flag is set.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following values are valid:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For descriptions of these flags, see the <bpt id="p1">[</bpt>STARTUP_FLAGS<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/startup-flags-enumeration.md)</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>[in] The <ph id="ph1">`CLSID`</ph> of the coclass that implements either the <bpt id="p1">[</bpt>ICorRuntimeHost<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md)</ept> or the <bpt id="p2">[</bpt>ICLRRuntimeHost<ept id="p2">](../../../../docs/framework/unmanaged-api/hosting/iclrruntimehost-interface.md)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Supported values are CLSID_CorRuntimeHost or CLSID_CLRRuntimeHost.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[in] The <ph id="ph1">`IID`</ph> of the requested interface from <ph id="ph2">`rclsid`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Supported values are IID_ICorRuntimeHost or IID_ICLRRuntimeHost.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>[out] The returned interface pointer to <ph id="ph1">`riid`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pwszVersion`</ph> specifies a runtime version that does not exist, <ph id="ph2">`CorBindToRuntimeEx`</ph> returns an HRESULT value of CLR_E_SHIM_RUNTIMELOAD.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Execution Context and Flow of Windows Identity</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In version 1 of the CLR, the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object does not flow across asynchronous points such as new threads, thread pools, or timer callbacks.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In version 2.0 of the CLR, an <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> object wraps some information about the currently executing thread and flows it across any asynchronous point, but not across application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object also flows across any asynchronous point.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Therefore, the current impersonation on the thread, if any, flows too.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can alter the flow in two ways:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By modifying the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> settings to suppress the flow on a per-thread basis (see the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecurityContext.SuppressFlow%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.SecurityContext.SuppressFlowWindowsIdentity%2A&gt;</ph> methods).</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>By changing the process default mode to the version 1 compatibility mode, where the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object does not flow across any asynchronous point, regardless of the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> settings on the current thread.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>How you change the default mode depends on whether you use a managed executable or an unmanaged hosting interface to load the CLR:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For managed executables, you must set the <ph id="ph1">`enabled`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>legacyImpersonationPolicy&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/runtime/legacyimpersonationpolicy-element.md)</ept> element to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For unmanaged hosting interfaces, set the <ph id="ph1">`STARTUP_LEGACY_IMPERSONATION`</ph> flag in the <ph id="ph2">`startupFlags`</ph> parameter when calling the <ph id="ph3">`CorBindToRuntimeEx`</ph> function.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The version 1 compatibility mode applies to the entire process and to all the application domains in the process.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> MSCorEE.h</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> MSCorEE.dll</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorBindToCurrentRuntime Function<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/corbindtocurrentruntime-function.md)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorBindToRuntime Function<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntime-function.md)</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorBindToRuntimeByCfg Function<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimebycfg-function.md)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorBindToRuntimeHost Function<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimehost-function.md)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorRuntimeHost Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Deprecated CLR Hosting Functions<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/deprecated-clr-hosting-functions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>