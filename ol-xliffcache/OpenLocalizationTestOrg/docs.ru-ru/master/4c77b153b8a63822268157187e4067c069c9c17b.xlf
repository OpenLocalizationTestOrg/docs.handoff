<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c77b153b8a63822268157187e4067c069c9c17b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\queries\order-by-clause.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c204bc2f5f1d26c79b5fbbf578ea7475bb60858f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41b12f621aedd286fd93e5f1747812251bd9a6b4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Order By Clause (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Order By Clause (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies the sort order for a query result.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One or more fields from the current query result that identify how to order the returned values.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The field names must be separated by commas (,).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can identify each field as sorted in ascending or descending order by using the <ph id="ph1">`Ascending`</ph> or <ph id="ph2">`Descending`</ph> keywords.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`Ascending`</ph> or <ph id="ph2">`Descending`</ph> keyword is specified, the default sort order is ascending.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The sort order fields are given precedence from left to right.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`Order By`</ph> clause to sort the results of a query.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Order By`</ph> clause can only sort a result based on the range variable for the current scope.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`Select`</ph> clause introduces a new scope in a query expression with new iteration variables for that scope.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Range variables defined before a <ph id="ph1">`Select`</ph> clause in a query are not available after the <ph id="ph2">`Select`</ph> clause.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Therefore, if you want to order your results by a field that is not available in the <ph id="ph1">`Select`</ph> clause, you must put the <ph id="ph2">`Order By`</ph> clause before the <ph id="ph3">`Select`</ph> clause.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>One example of when you would have to do this is when you want to sort your query by fields that are not returned as part of the result.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Ascending and descending order for a field is determined by the implementation of the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface for the data type of the field.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the data type does not implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface, the sort order is ignored.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following query expression uses a <ph id="ph1">`From`</ph> clause to declare a range variable <ph id="ph2">`book`</ph> for the <ph id="ph3">`books`</ph> collection.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Order By`</ph> clause sorts the query result by price in ascending order (the default).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Books with the same price are sorted by title in ascending order.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Select`</ph> clause selects the <ph id="ph2">`Title`</ph> and <ph id="ph3">`Price`</ph> properties as the values returned by the query.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbSimpleQuerySamples#24<ept id="p2">](../../../visual-basic/language-reference/queries/codesnippet/VisualBasic/order-by-clause_1.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following query expression uses the <ph id="ph1">`Order By`</ph> clause to sort the query result by price in descending order.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Books with the same price are sorted by title in ascending order.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbSimpleQuerySamples#25<ept id="p2">](../../../visual-basic/language-reference/queries/codesnippet/VisualBasic/order-by-clause_2.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following query expression uses a <ph id="ph1">`Select`</ph> clause to select the book title, price, publish date, and author.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It then populates the <ph id="ph1">`Title`</ph>, <ph id="ph2">`Price`</ph>, <ph id="ph3">`PublishDate`</ph>, and <ph id="ph4">`Author`</ph> fields of the range variable for the new scope.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Order By`</ph> clause orders the new range variable by author name, book title, and then price.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Each column is sorted in the default order (ascending).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbSimpleQuerySamples#26<ept id="p2">](../../../visual-basic/language-reference/queries/codesnippet/VisualBasic/order-by-clause_3.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Queries<ept id="p1">](../../../visual-basic/language-reference/queries/queries.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Select Clause<ept id="p1">](../../../visual-basic/language-reference/queries/select-clause.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>From Clause<ept id="p1">](../../../visual-basic/language-reference/queries/from-clause.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>