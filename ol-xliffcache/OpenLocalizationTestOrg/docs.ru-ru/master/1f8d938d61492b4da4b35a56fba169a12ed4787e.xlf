<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f8d938d61492b4da4b35a56fba169a12ed4787e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\commonly-used-collection-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e17228b95c1cbdce257b18b687b3f2719d63888c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56d1e2d62dd97385c7e3bc6e992b60da4b4afbed</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Commonly Used Collection Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Commonly Used Collection Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Collection types are the common variations of data collections, such as hash tables, queues, stacks, bags, dictionaries, and lists.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Collections are based on the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface, the <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> interface, or their generic counterparts.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface are both derived from the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> interface; therefore, all collections are based on the <ph id="ph4">&lt;xref:System.Collections.ICollection&gt;</ph> interface either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In collections based on the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface (such as <ph id="ph2">&lt;xref:System.Array&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>, or <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>) or directly on the <ph id="ph5">&lt;xref:System.Collections.ICollection&gt;</ph> interface (such as <ph id="ph6">&lt;xref:System.Collections.Queue&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.Stack&gt;</ph>, <ph id="ph9">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> or <ph id="ph10">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>), every element contains only a value.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In collections based on the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface (such as the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> classes, the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id="ph5">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>generic classes), or the <ph id="ph6">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> classes, every element contains both a key and a value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is unique because it is a list of values with keys embedded within the values and, therefore, it behaves like a list and like a dictionary.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generic collections are the best solution to strong typing.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, if your language does not support generics, the <ph id="ph1">&lt;xref:System.Collections&gt;</ph> namespace includes base collections, such as <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.DictionaryBase&gt;</ph>, which are abstract base classes that can be extended to create collection classes that are strongly typed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When efficient multi-threaded collection access is required, use the generic collections in the <ph id="ph1">&lt;xref:System.Collections.Concurrent&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Collections can vary, depending on how the elements are stored, how they are sorted, how searches are performed, and how comparisons are made.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class provide first-in-first-out lists, while the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph>generic class provide last-in-first-out lists.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic class provide sorted versions of the <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> or a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> are accessible only by the key of the element, but the elements of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> or a <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> are accessible either by the key or by the index of the element.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The indexes in all collections are zero-based, except <ph id="ph1">&lt;xref:System.Array&gt;</ph>, which allows arrays that are not zero-based.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The LINQ to Objects feature allows you to use LINQ queries to access in-memory objects as long as the object type implements <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data; are typically more concise and readable than standard <ph id="ph1">`foreach`</ph> loops; and provide filtering, ordering and grouping capabilities.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to Objects<ept id="p1">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept> and <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Title</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collections and Data Structures<ept id="p1">](../../../docs/standard/collections/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Discusses the various collection types available in the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>, including stacks, queues, lists, arrays, and dictionaries.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hashtable and Dictionary Collection Types<ept id="p1">](../../../docs/standard/collections/hashtable-and-dictionary-collection-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Describes the features of generic and nongeneric hash-based dictionary types.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sorted Collection Types<ept id="p1">](../../../docs/standard/collections/sorted-collection-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Describes classes that provide sorting functionality for lists and sets.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generics<ept id="p1">](../../../docs/standard/generics/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Describes the generics feature, including the generic collections, delegates, and interfaces provided by the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Provides links to feature documentation for C#, Visual Basic, and Visual C++, and to supporting technologies such as reflection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>