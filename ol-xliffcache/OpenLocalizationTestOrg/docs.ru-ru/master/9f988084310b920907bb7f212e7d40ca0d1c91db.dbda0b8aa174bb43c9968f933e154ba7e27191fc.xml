{"content":"---\ntitle: \"ICLRPolicyManager::SetUnhandledExceptionPolicy Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICLRPolicyManager.SetUnhandledExceptionPolicy\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRPolicyManager::SetUnhandledExceptionPolicy\"\nhelpviewer_keywords: \n  - \"ICLRPolicyManager::SetUnhandledExceptionPolicy method [.NET Framework hosting]\"\n  - \"SetUnhandledExceptionPolicy method [.NET Framework hosting]\"\nms.assetid: 5268480e-280a-4931-b7a3-dc3ffdf7f78f\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# ICLRPolicyManager::SetUnhandledExceptionPolicy Method\nSpecifies the behavior of the common language runtime (CLR) when an unhandled exception occurs.  \n  \n## Syntax  \n  \n```  \nHRESULT SetUnhandledExceptionPolicy (  \n    [in] EClrUnhandledExceptionPolicy policy  \n);  \n```  \n  \n## Parameters  \n `policy`  \n [in] One of the [EClrUnhandledException](../../../../docs/framework/unmanaged-api/hosting/eclrunhandledexception-enumeration.md) values, indicating whether the behavior is set by the CLR or the host.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`SetUnhandledExceptionPolicy` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. After a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n By default, the CLR is the final handler for all unhandled exceptions, and its default behavior is to tear down the process. The host can change this behavior by setting the `policy` value to eHostDeterminedPolicy. This value allows the host to implement its own default behavior, as with earlier versions of the CLR.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [EClrUnhandledException Enumeration](../../../../docs/framework/unmanaged-api/hosting/eclrunhandledexception-enumeration.md)\n- [ICLRControl Interface](../../../../docs/framework/unmanaged-api/hosting/iclrcontrol-interface.md)\n- [ICLRPolicyManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md)\n- [IHostPolicyManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostpolicymanager-interface.md)\n","nodes":[{"pos":[4,560],"embed":true,"restype":"x-metadata","content":"title: \"ICLRPolicyManager::SetUnhandledExceptionPolicy Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICLRPolicyManager.SetUnhandledExceptionPolicy\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRPolicyManager::SetUnhandledExceptionPolicy\"\nhelpviewer_keywords: \n  - \"ICLRPolicyManager::SetUnhandledExceptionPolicy method [.NET Framework hosting]\"\n  - \"SetUnhandledExceptionPolicy method [.NET Framework hosting]\"\nms.assetid: 5268480e-280a-4931-b7a3-dc3ffdf7f78f\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"ICLRPolicyManager::SetUnhandledExceptionPolicy Method","nodes":[{"pos":[0,53],"content":"ICLRPolicyManager::SetUnhandledExceptionPolicy Method","nodes":[{"content":"ICLRPolicyManager::SetUnhandledExceptionPolicy Method","pos":[0,53]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[567,620],"content":"ICLRPolicyManager::SetUnhandledExceptionPolicy Method","linkify":"ICLRPolicyManager::SetUnhandledExceptionPolicy Method","nodes":[{"content":"ICLRPolicyManager::SetUnhandledExceptionPolicy Method","pos":[0,53]}]},{"content":"Specifies the behavior of the common language runtime (CLR) when an unhandled exception occurs.","pos":[621,716]},{"pos":[725,731],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[847,857],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] One of the <bpt id=\"p1\">[</bpt>EClrUnhandledException<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/eclrunhandledexception-enumeration.md)</ept> values, indicating whether the behavior is set by the CLR or the host.","pos":[873,1072],"source":"[in] One of the [EClrUnhandledException](../../../../docs/framework/unmanaged-api/hosting/eclrunhandledexception-enumeration.md) values, indicating whether the behavior is set by the CLR or the host."},{"pos":[1081,1093],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1100,1107]},{"content":"Description","pos":[1108,1119]},{"content":"S_OK","pos":[1160,1164]},{"pos":[1165,1217],"content":"<ph id=\"ph1\">`SetUnhandledExceptionPolicy`</ph> returned successfully.","source":"`SetUnhandledExceptionPolicy` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1222,1244]},{"content":"The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1245,1383]},{"content":"HOST_E_TIMEOUT","pos":[1388,1402]},{"content":"The call timed out.","pos":[1403,1422]},{"content":"HOST_E_NOT_OWNER","pos":[1427,1443]},{"content":"The caller does not own the lock.","pos":[1444,1477]},{"content":"HOST_E_ABANDONED","pos":[1482,1498]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1499,1571]},{"content":"E_FAIL","pos":[1576,1582]},{"content":"An unknown catastrophic failure occurred.","pos":[1583,1624]},{"content":"After a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1625,1703]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1704,1770]},{"pos":[1780,1787],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the CLR is the final handler for all unhandled exceptions, and its default behavior is to tear down the process.","pos":[1791,1915]},{"content":"The host can change this behavior by setting the <ph id=\"ph1\">`policy`</ph> value to eHostDeterminedPolicy.","pos":[1916,2005],"source":" The host can change this behavior by setting the `policy` value to eHostDeterminedPolicy."},{"content":"This value allows the host to implement its own default behavior, as with earlier versions of the CLR.","pos":[2006,2108]},{"pos":[2117,2129],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2133,2237],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2244,2265],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2272,2322],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2329,2437],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2446,2454],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2458,2582],"content":"<bpt id=\"p1\">[</bpt>EClrUnhandledException Enumeration<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/eclrunhandledexception-enumeration.md)</ept>","source":"[EClrUnhandledException Enumeration](../../../../docs/framework/unmanaged-api/hosting/eclrunhandledexception-enumeration.md)"},{"pos":[2585,2683],"content":"<bpt id=\"p1\">[</bpt>ICLRControl Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrcontrol-interface.md)</ept>","source":"[ICLRControl Interface](../../../../docs/framework/unmanaged-api/hosting/iclrcontrol-interface.md)"},{"pos":[2686,2796],"content":"<bpt id=\"p1\">[</bpt>ICLRPolicyManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md)</ept>","source":"[ICLRPolicyManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md)"},{"pos":[2799,2911],"content":"<bpt id=\"p1\">[</bpt>IHostPolicyManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostpolicymanager-interface.md)</ept>","source":"[IHostPolicyManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostpolicymanager-interface.md)"}]}