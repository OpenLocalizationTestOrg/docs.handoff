{"content":"---\ntitle: \"Workflow Activity Authoring Using the CodeActivity Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: cfe315c1-f86d-43ec-b9ce-2f8c469b1106\ncaps.latest.revision: 11\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Workflow Activity Authoring Using the CodeActivity Class\nActivities created by inheriting from <xref:System.Activities.CodeActivity> can implement basic imperative behavior by overriding the <xref:System.Activities.CodeActivity.Execute%2A> method.  \n  \n## Using CodeActivityContext  \n Features of the workflow runtime can be accessed from within the <xref:System.Activities.CodeActivity.Execute%2A> method by using members of the `context` parameter, of type <xref:System.Activities.CodeActivityContext>. The features available through <xref:System.Activities.CodeActivityContext> include the following:  \n  \n-   Getting and setting the values of variables and arguments.  \n  \n-   Custom tracking features using <xref:System.Activities.CodeActivityContext.Track%2A>.  \n  \n-   Access to the activity’s execution properties using <xref:System.Activities.CodeActivityContext.GetProperty%2A>.  \n  \n#### To create a custom activity that inherits from CodeActivity  \n  \n1.  Open[!INCLUDE[vs2010](../../../includes/vs2010-md.md)].  \n  \n2.  Select **File**, **New**, and then **Project**. Select **Workflow 4.0** under **Visual C#** in the **Project Types** window, and select the **v2010** node. Select **Activity Library** in the **Templates** window. Name the new project HelloActivity.  \n  \n3.  Right-click Activity1.xaml in the HelloActivity project and select **Delete**.  \n  \n4.  Right-click the HelloActivity project and select **Add** , and then **Class**. Name the new class HelloActivity.cs.  \n  \n5.  In the HelloActivity.cs file, add the following `using` directives.  \n  \n    ```csharp  \n    using System.Activities;  \n    using System.Activities.Statements;  \n    ```  \n  \n6.  Make the new class inherit from <xref:System.Activities.CodeActivity> by adding a base class to the class declaration.  \n  \n    ```csharp  \n    class HelloActivity : CodeActivity  \n    ```  \n  \n7.  Add functionality to the class by adding an <xref:System.Activities.CodeActivity.Execute%2A> method.  \n  \n    ```csharp  \n    protected override void Execute(CodeActivityContext context)  \n    {  \n        Console.WriteLine(\"Hello World!\");  \n    }  \n    ```  \n  \n8.  Use the <xref:System.Activities.CodeActivityContext> to create a tracking record.  \n  \n    ```csharp  \n    protected override void Execute(CodeActivityContext context)  \n    {  \n        Console.WriteLine(\"Hello World!\");  \n        CustomTrackingRecord record = new CustomTrackingRecord(\"MyRecord\");  \n        record.Data.Add(new KeyValuePair<String, Object>(\"ExecutionTime\", DateTime.Now));  \n        context.Track(record);  \n    }  \n  \n    ```","nodes":[{"pos":[12,85],"content":"Workflow Activity Authoring Using the CodeActivity Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Workflow Activity Authoring Using the CodeActivity Class | Microsoft Docs","pos":[0,73]}]},{"pos":[351,407],"content":"Workflow Activity Authoring Using the CodeActivity Class","linkify":"Workflow Activity Authoring Using the CodeActivity Class","nodes":[{"content":"Workflow Activity Authoring Using the CodeActivity Class","pos":[0,56]}]},{"content":"Activities created by inheriting from <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity&gt;</ph> can implement basic imperative behavior by overriding the <ph id=\"ph2\">&lt;xref:System.Activities.CodeActivity.Execute%2A&gt;</ph> method.","pos":[408,598],"source":"Activities created by inheriting from <xref:System.Activities.CodeActivity> can implement basic imperative behavior by overriding the <xref:System.Activities.CodeActivity.Execute%2A> method."},{"pos":[607,632],"content":"Using CodeActivityContext","linkify":"Using CodeActivityContext","nodes":[{"content":"Using CodeActivityContext","pos":[0,25]}]},{"content":"Features of the workflow runtime can be accessed from within the <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity.Execute%2A&gt;</ph> method by using members of the <ph id=\"ph2\">`context`</ph> parameter, of type <ph id=\"ph3\">&lt;xref:System.Activities.CodeActivityContext&gt;</ph>.","pos":[636,855],"source":"Features of the workflow runtime can be accessed from within the <xref:System.Activities.CodeActivity.Execute%2A> method by using members of the `context` parameter, of type <xref:System.Activities.CodeActivityContext>."},{"content":"The features available through <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivityContext&gt;</ph> include the following:","pos":[856,954],"source":" The features available through <xref:System.Activities.CodeActivityContext> include the following:"},{"content":"Getting and setting the values of variables and arguments.","pos":[964,1022]},{"content":"Custom tracking features using <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivityContext.Track%2A&gt;</ph>.","pos":[1032,1117],"source":"Custom tracking features using <xref:System.Activities.CodeActivityContext.Track%2A>."},{"content":"Access to the activity’s execution properties using <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivityContext.GetProperty%2A&gt;</ph>.","pos":[1127,1239],"source":"Access to the activity’s execution properties using <xref:System.Activities.CodeActivityContext.GetProperty%2A>."},{"pos":[1250,1309],"content":"To create a custom activity that inherits from CodeActivity","linkify":"To create a custom activity that inherits from CodeActivity","nodes":[{"content":"To create a custom activity that inherits from CodeActivity","pos":[0,59]}]},{"pos":[1319,1374],"content":"Open<ph id=\"ph1\">[!INCLUDE[vs2010](../../../includes/vs2010-md.md)]</ph>.","source":"Open[!INCLUDE[vs2010](../../../includes/vs2010-md.md)]."},{"content":"Select <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, and then <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","pos":[1384,1431],"source":"Select **File**, **New**, and then **Project**."},{"content":"Select <bpt id=\"p1\">**</bpt>Workflow 4.0<ept id=\"p1\">**</ept> under <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> in the <bpt id=\"p3\">**</bpt>Project Types<ept id=\"p3\">**</ept> window, and select the <bpt id=\"p4\">**</bpt>v2010<ept id=\"p4\">**</ept> node.","pos":[1432,1539],"source":" Select **Workflow 4.0** under **Visual C#** in the **Project Types** window, and select the **v2010** node."},{"content":"Select <bpt id=\"p1\">**</bpt>Activity Library<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Templates<ept id=\"p2\">**</ept> window.","pos":[1540,1596],"source":" Select **Activity Library** in the **Templates** window."},{"content":"Name the new project HelloActivity.","pos":[1597,1632]},{"pos":[1642,1720],"content":"Right-click Activity1.xaml in the HelloActivity project and select <bpt id=\"p1\">**</bpt>Delete<ept id=\"p1\">**</ept>.","source":"Right-click Activity1.xaml in the HelloActivity project and select **Delete**."},{"content":"Right-click the HelloActivity project and select <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> , and then <bpt id=\"p2\">**</bpt>Class<ept id=\"p2\">**</ept>.","pos":[1730,1808],"source":"Right-click the HelloActivity project and select **Add** , and then **Class**."},{"content":"Name the new class HelloActivity.cs.","pos":[1809,1845]},{"pos":[1855,1922],"content":"In the HelloActivity.cs file, add the following <ph id=\"ph1\">`using`</ph> directives.","source":"In the HelloActivity.cs file, add the following `using` directives."},{"content":"Make the new class inherit from <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity&gt;</ph> by adding a base class to the class declaration.","pos":[2034,2152],"source":"Make the new class inherit from <xref:System.Activities.CodeActivity> by adding a base class to the class declaration."},{"content":"Add functionality to the class by adding an <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity.Execute%2A&gt;</ph> method.","pos":[2232,2332],"source":"Add functionality to the class by adding an <xref:System.Activities.CodeActivity.Execute%2A> method."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivityContext&gt;</ph> to create a tracking record.","pos":[2499,2580],"source":"Use the <xref:System.Activities.CodeActivityContext> to create a tracking record."}]}