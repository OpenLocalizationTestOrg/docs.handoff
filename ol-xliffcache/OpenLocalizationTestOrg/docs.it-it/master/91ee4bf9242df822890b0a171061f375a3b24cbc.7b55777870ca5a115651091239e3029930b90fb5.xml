{"content":"---\ntitle: \"Data type(s) of the type parameter(s) cannot be inferred from these arguments\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36644\"\n  - \"bc36647\"\n  - \"vbc36647\"\n  - \"vbc36644\"\nhelpviewer_keywords: \n  - \"BC36644\"\n  - \"BC36647\"\nms.assetid: 0e0050f2-2039-4311-b260-f0ebfde84189\n---\n# Data type(s) of the type parameter(s) cannot be inferred from these arguments\nData type(s) of the type parameter(s) cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.  \n  \n This error occurs when overload resolution has failed. It occurs as a subordinate message that states why a particular overload candidate has been eliminated. The error message explains that the compiler cannot use type inference to find data types for the type parameters.  \n  \n> [!NOTE]\n>  When specifying arguments is not an option (for example, for query operators in query expressions), the error message appears without the second sentence.  \n  \n The following code demonstrates the error.  \n  \n```vb  \nModule Module1  \n  \n    Sub Main()  \n  \n        '' Not Valid.  \n        'OverloadedGenericMethod(\"Hello\", \"World\")  \n  \n    End Sub  \n  \n    Sub OverloadedGenericMethod(Of T)(ByVal x As String,   \n                                      ByVal y As InterfaceExample(Of T))  \n    End Sub  \n  \n    Sub OverloadedGenericMethod(Of T, R)(ByVal x As T,   \n                                         ByVal y As InterfaceExample(Of R))  \n    End Sub  \n  \nEnd Module  \n  \nInterface InterfaceExample(Of T)  \nEnd Interface  \n```  \n  \n **Error ID:** BC36647 and BC36644  \n  \n## To correct this error  \n  \n-   You may be able to specify a data type for the type parameter or parameters instead of relying on type inference.  \n  \n## See also\n\n- [Relaxed Delegate Conversion](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)\n- [Generic Procedures in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-procedures.md)\n- [Type Conversions in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)\n","nodes":[{"pos":[4,281],"embed":true,"restype":"x-metadata","content":"title: \"Data type(s) of the type parameter(s) cannot be inferred from these arguments\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36644\"\n  - \"bc36647\"\n  - \"vbc36647\"\n  - \"vbc36644\"\nhelpviewer_keywords: \n  - \"BC36644\"\n  - \"BC36647\"\nms.assetid: 0e0050f2-2039-4311-b260-f0ebfde84189","nodes":[{"content":"Data type(s) of the type parameter(s) cannot be inferred from these arguments","nodes":[{"pos":[0,77],"content":"Data type(s) of the type parameter(s) cannot be inferred from these arguments","nodes":[{"content":"Data type(s) of the type parameter(s) cannot be inferred from these arguments","pos":[0,77]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[288,365],"content":"Data type(s) of the type parameter(s) cannot be inferred from these arguments","linkify":"Data type(s) of the type parameter(s) cannot be inferred from these arguments","nodes":[{"content":"Data type(s) of the type parameter(s) cannot be inferred from these arguments","pos":[0,77]}]},{"content":"Data type(s) of the type parameter(s) cannot be inferred from these arguments.","pos":[366,444]},{"content":"Specifying the data type(s) explicitly might correct this error.","pos":[445,509]},{"content":"This error occurs when overload resolution has failed.","pos":[516,570]},{"content":"It occurs as a subordinate message that states why a particular overload candidate has been eliminated.","pos":[571,674]},{"content":"The error message explains that the compiler cannot use type inference to find data types for the type parameters.","pos":[675,789]},{"pos":[797,962],"content":"[!NOTE]\n When specifying arguments is not an option (for example, for query operators in query expressions), the error message appears without the second sentence.","leadings":["","> "],"nodes":[{"content":"When specifying arguments is not an option (for example, for query operators in query expressions), the error message appears without the second sentence.","pos":[9,163]}]},{"content":"The following code demonstrates the error.","pos":[969,1011]},{"pos":[1544,1577],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36647 and BC36644","source":"**Error ID:** BC36647 and BC36644"},{"pos":[1586,1607],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"You may be able to specify a data type for the type parameter or parameters instead of relying on type inference.","pos":[1617,1730]},{"pos":[1739,1747],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1751,1880],"content":"<bpt id=\"p1\">[</bpt>Relaxed Delegate Conversion<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)</ept>","source":"[Relaxed Delegate Conversion](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)"},{"pos":[1883,2011],"content":"<bpt id=\"p1\">[</bpt>Generic Procedures in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/generic-procedures.md)</ept>","source":"[Generic Procedures in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-procedures.md)"},{"pos":[2014,2138],"content":"<bpt id=\"p1\">[</bpt>Type Conversions in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept>","source":"[Type Conversions in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)"}]}