{"content":"---\ntitle: \"Composing Nested Entity SQL Queries\"\nms.date: \"03/30/2017\"\nms.assetid: 685d4cd3-2c1f-419f-bb46-c9d97a351eeb\n---\n# Composing Nested Entity SQL Queries\n[!INCLUDE[esql](../../../../../../includes/esql-md.md)] is a rich functional language. The building block of [!INCLUDE[esql](../../../../../../includes/esql-md.md)] is an expression. Unlike conventional SQL, [!INCLUDE[esql](../../../../../../includes/esql-md.md)] is not limited to a tabular result set: [!INCLUDE[esql](../../../../../../includes/esql-md.md)] supports composing complex expressions that can have literals, parameters, or nested expressions. A value in the expression can be parameterized or composed of some other expression.  \n  \n## Nested Expressions  \n A nested expression can be placed anywhere a value of the type it returns is accepted. For example:  \n  \n```  \n-- Returns a hierarchical collection of three elements at top-level.   \n-- x must be passed in the parameter collection.  \nROW(@x, {@x}, {@x, 4, 5}, {@x, 7, 8, 9})  \n  \n-- Returns a hierarchical collection of one element at top-level.  \n-- x must be passed in the parameter collection.  \n{{{@x}}};  \n```  \n  \n A nested query can be placed in a projection clause. For example:  \n  \n```  \n-- Returns a collection of rows where each row contains an Address entity.  \n-- and a collection of references to its corresponding SalesOrderHeader entities.  \nSELECT address, (SELECT DEREF(soh)   \n                    FROM NAVIGATE(address, AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID) AS soh)   \n                    AS salesOrderHeader FROM AdventureWorksEntities.Address AS address  \n```  \n  \n In [!INCLUDE[esql](../../../../../../includes/esql-md.md)], nested queries must always be enclosed in parentheses:  \n  \n```  \n-- Pseudo-Entity SQL  \n( SELECT …  \nFROM … )  \nUNION ALL  \n( SELECT …  \nFROM … );  \n```  \n  \n The following example demonstrates how to properly nest expressions in [!INCLUDE[esql](../../../../../../includes/esql-md.md)]: [How to: Order the Union of Two Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896299(v=vs.100)).  \n  \n## Nested Queries in Projection  \n Nested queries in the project clause might get translated into Cartesian product queries on the server. In some backend servers, including SLQ Server, this can cause the TempDB table to get very large, which can adversely affect server performance.  \n  \n The following is an example of such a query:  \n  \n```  \nSELECT c, (SELECT c, (SELECT c FROM AdventureWorksModel.Vendor AS c  ) As Inner2 FROM AdventureWorksModel.JobCandidate AS c  ) As Inner1 FROM AdventureWorksModel.EmployeeDepartmentHistory AS c  \n```  \n  \n## Ordering Nested Queries  \n In the Entity Framework, a nested expression can be placed anywhere in the query. Because Entity SQL allows great flexibility in writing queries, it is possible to write a query that contains an ordering of nested queries. However, the order of a nested query is not preserved.  \n  \n```  \n-- The following query will order the results by last name.  \nSELECT C1.FirstName, C1.LastName  \n        FROM AdventureWorksModel.Contact as C1  \n        ORDER BY C1.LastName  \n```  \n  \n```  \n-- In the following query, ordering of the nested query is ignored.  \nSELECT C2.FirstName, C2.LastName  \n    FROM (SELECT C1.FirstName, C1.LastName  \n        FROM AdventureWorksModel.Contact as C1  \n        ORDER BY C1.LastName) as C2  \n```  \n  \n## See also\n\n- [Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)\n","nodes":[{"pos":[4,119],"embed":true,"restype":"x-metadata","content":"title: \"Composing Nested Entity SQL Queries\"\nms.date: \"03/30/2017\"\nms.assetid: 685d4cd3-2c1f-419f-bb46-c9d97a351eeb","nodes":[{"content":"Composing Nested Entity SQL Queries","nodes":[{"pos":[0,35],"content":"Composing Nested Entity SQL Queries","nodes":[{"content":"Composing Nested Entity SQL Queries","pos":[0,35]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[126,161],"content":"Composing Nested Entity SQL Queries","linkify":"Composing Nested Entity SQL Queries","nodes":[{"content":"Composing Nested Entity SQL Queries","pos":[0,35]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> is a rich functional language.","pos":[162,248],"source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] is a rich functional language."},{"content":"The building block of <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> is an expression.","pos":[249,344],"source":" The building block of [!INCLUDE[esql](../../../../../../includes/esql-md.md)] is an expression."},{"content":"Unlike conventional SQL, <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> is not limited to a tabular result set: <ph id=\"ph2\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> supports composing complex expressions that can have literals, parameters, or nested expressions.","pos":[345,619],"source":" Unlike conventional SQL, [!INCLUDE[esql](../../../../../../includes/esql-md.md)] is not limited to a tabular result set: [!INCLUDE[esql](../../../../../../includes/esql-md.md)] supports composing complex expressions that can have literals, parameters, or nested expressions."},{"content":"A value in the expression can be parameterized or composed of some other expression.","pos":[620,704]},{"pos":[713,731],"content":"Nested Expressions","linkify":"Nested Expressions","nodes":[{"content":"Nested Expressions","pos":[0,18]}]},{"content":"A nested expression can be placed anywhere a value of the type it returns is accepted.","pos":[735,821]},{"content":"For example:","pos":[822,834]},{"content":"A nested query can be placed in a projection clause.","pos":[1156,1208]},{"content":"For example:","pos":[1209,1221]},{"pos":[1650,1764],"content":"In <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph>, nested queries must always be enclosed in parentheses:","source":"In [!INCLUDE[esql](../../../../../../includes/esql-md.md)], nested queries must always be enclosed in parentheses:"},{"pos":[1870,2128],"content":"The following example demonstrates how to properly nest expressions in <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph>: <bpt id=\"p1\">[</bpt>How to: Order the Union of Two Queries<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896299(v=vs.100))</ept>.","source":"The following example demonstrates how to properly nest expressions in [!INCLUDE[esql](../../../../../../includes/esql-md.md)]: [How to: Order the Union of Two Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896299(v=vs.100))."},{"pos":[2137,2165],"content":"Nested Queries in Projection","linkify":"Nested Queries in Projection","nodes":[{"content":"Nested Queries in Projection","pos":[0,28]}]},{"content":"Nested queries in the project clause might get translated into Cartesian product queries on the server.","pos":[2169,2272]},{"content":"In some backend servers, including SLQ Server, this can cause the TempDB table to get very large, which can adversely affect server performance.","pos":[2273,2417]},{"content":"The following is an example of such a query:","pos":[2424,2468]},{"pos":[2687,2710],"content":"Ordering Nested Queries","linkify":"Ordering Nested Queries","nodes":[{"content":"Ordering Nested Queries","pos":[0,23]}]},{"content":"In the Entity Framework, a nested expression can be placed anywhere in the query.","pos":[2714,2795]},{"content":"Because Entity SQL allows great flexibility in writing queries, it is possible to write a query that contains an ordering of nested queries.","pos":[2796,2936]},{"content":"However, the order of a nested query is not preserved.","pos":[2937,2991]},{"pos":[3444,3452],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3456,3568],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept>","source":"[Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)"}]}