<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-open-a-file-that-is-dropped-on-a-richtextbox-control.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ffa4c9919788060dc4524e127c181ee8282e6f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\how-to-open-a-file-that-is-dropped-on-a-richtextbox-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">515ec16b8707d15339702c20ea3402720d426757</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bda75f56c6abafc398d29e5ce9b04428105bd82</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Open a File That is Dropped on a RichTextBox Control</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Open a File That is Dropped on a RichTextBox Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> controls all have built-in drag-and-drop functionality.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The built-in functionality enables drag-and-drop of text within and between the controls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, it does not enable opening a file by dropping the file on the control.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These controls also mark the drag-and-drop events as handled.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>As a result, by default, you cannot add your own event handlers to provide functionality to open dropped files.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To add additional handling for drag-and-drop events in these controls, use the <ph id="ph1">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> method to add your event handlers for the drag-and-drop events.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`handledEventsToo`</ph> parameter to <ph id="ph2">`true`</ph> to have the specified handler be invoked for a routed event that has already been marked as handled by another element along the event route.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can replace the built-in drag-and-drop functionality of <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> by handling the preview versions of the drag-and-drop events and marking the preview events as handled.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, this will disable the built-in drag-and-drop functionality, and is not recommended.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to add handlers for the <ph id="ph1">&lt;xref:System.Windows.DragDrop.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.DragDrop.Drop&gt;</ph> events on a <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> method and sets the <ph id="ph2">`handledEventsToo`</ph> parameter to <ph id="ph3">`true`</ph> so that the events handlers will be invoked even though the <ph id="ph4">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> marks these events as handled.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The code in the event handlers adds functionality to open a text file that is dropped on the <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To test this example, drag a text file or a rich text format (RTF) file from Windows Explorer to the <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The file will be opened in the <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you press the SHIFT key before the dropping the file, the file will be opened as plain text.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>