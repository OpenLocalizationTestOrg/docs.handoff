{"content":"---\ntitle: \"XMLSerializer Sample\"\nms.date: \"03/30/2017\"\nms.assetid: 7d134453-9a35-4202-ba77-9ca3a65babc3\n---\n# XMLSerializer Sample\nThis sample demonstrates how to serialize and deserialize types that are compatible with the <xref:System.Xml.Serialization.XmlSerializer>. The default Windows Communication Foundation (WCF) formatter is the <xref:System.Runtime.Serialization.DataContractSerializer> class. The <xref:System.Xml.Serialization.XmlSerializer> class can be used to serialize and deserialize types when the <xref:System.Runtime.Serialization.DataContractSerializer> class cannot be used. This is often the case when precise control over the XML is required - for example, if a piece of data must be an XML attribute and not an XML element. Also, the <xref:System.Xml.Serialization.XmlSerializer> often gets automatically selected when creating clients for non-WCF services.  \n  \n In this sample, the client is a console application (.exe) and the service is hosted by Internet Information Services (IIS).  \n  \n> [!NOTE]\n>  The setup procedure and build instructions for this sample are located at the end of this topic.  \n  \n The <xref:System.ServiceModel.ServiceContractAttribute> and <xref:System.ServiceModel.XmlSerializerFormatAttribute> must be applied to the interface as shown in the following sample code.  \n  \n```csharp  \n[ServiceContract(Namespace=\"http://Microsoft.ServiceModel.Samples\"), XmlSerializerFormat]  \npublic interface IXmlSerializerCalculator  \n{  \n    [OperationContract]  \n    ComplexNumber Add(ComplexNumber n1, ComplexNumber n2);  \n    [OperationContract]  \n    ComplexNumber Subtract(ComplexNumber n1, ComplexNumber n2);  \n    [OperationContract]  \n    ComplexNumber Multiply(ComplexNumber n1, ComplexNumber n2);  \n    [OperationContract]  \n    ComplexNumber Divide(ComplexNumber n1, ComplexNumber n2);  \n}  \n```  \n  \n The public members of `ComplexNumber` class are serialized by <xref:System.Xml.Serialization.XmlSerializer> as XML attributes. The <xref:System.Runtime.Serialization.DataContractSerializer> cannot be used to create this kind of XML instance.  \n  \n```csharp  \npublic class ComplexNumber  \n{  \n    private double real;  \n    private double imaginary;  \n  \n    [XmlAttribute]  \n    public double Real  \n    {  \n        get { return real; }  \n        set { real = value; }  \n    }  \n  \n    [XmlAttribute]  \n    public double Imaginary  \n    {  \n        get { return imaginary; }  \n        set { imaginary = value; }  \n    }  \n  \n    public ComplexNumber(double real, double imaginary)  \n    {  \n        this.Real = real;  \n        this.Imaginary = imaginary;  \n    }  \n    public ComplexNumber()  \n    {  \n        this.Real = 0;  \n        this.Imaginary = 0;  \n    }  \n  \n}  \n```  \n  \n The service implementation calculates and returns the appropriate result—accepting and returning values of the `ComplexNumber` type.  \n  \n```csharp  \npublic class XmlSerializerCalculatorService : IXmlSerializerCalculator  \n{  \n    public ComplexNumber Add(ComplexNumber n1, ComplexNumber n2)  \n    {  \n        return new ComplexNumber(n1.Real + n2.Real, n1.Imaginary +  \n                                                      n2.Imaginary);  \n    }  \n    …  \n}  \n```  \n  \n The client implementation also uses complex numbers. Both the service contract and the data types are defined in the generatedClient.cs source file, which was generated by the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) from service metadata. Svcutil.exe can detect when a contract is not serializable by the <xref:System.Runtime.Serialization.DataContractSerializer> and reverts to emitting `XmlSerializable` types in this case. If you want to force the use of the <xref:System.Xml.Serialization.XmlSerializer>, you can pass the /serializer:XmlSerializer (use XmlSerializer) command option to the Svcutil.exe tool.  \n  \n```csharp  \n// Create a client.  \nXmlSerializerCalculatorClient client = new  \n                         XmlSerializerCalculatorClient();  \n  \n// Call the Add service operation.  \nComplexNumber value1 = new ComplexNumber();  \nvalue1.Real = 1;  \nvalue1.Imaginary = 2;  \nComplexNumber value2 = new ComplexNumber();  \nvalue2.Real = 3;  \nvalue2.Imaginary = 4;  \nComplexNumber result = client.Add(value1, value2);  \nConsole.WriteLine(\"Add({0} + {1}i, {2} + {3}i) = {4} + {5}i\",  \n    value1.Real, value1.Imaginary, value2.Real, value2.Imaginary,   \n    result.Real, result.Imaginary);  \n    …  \n}  \n```  \n  \n When you run the sample, the operation requests and responses are displayed in the client console window. Press ENTER in the client window to shut down the client.  \n  \n```console  \nAdd(1 + 2i, 3 + 4i) = 4 + 6i  \nSubtract(1 + 2i, 3 + 4i) = -2 + -2i  \nMultiply(2 + 3i, 4 + 7i) = -13 + 26i  \nDivide(3 + 7i, 5 + -2i) = 0.0344827586206897 + 1.41379310344828i  \n  \nPress <ENTER> to terminate client.  \n```  \n  \n### To set up, build, and run the sample  \n  \n1.  Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md).  \n  \n2.  To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n3.  To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Client\\Interop\\XmlSerializer`  \n","nodes":[{"pos":[4,104],"embed":true,"restype":"x-metadata","content":"title: \"XMLSerializer Sample\"\nms.date: \"03/30/2017\"\nms.assetid: 7d134453-9a35-4202-ba77-9ca3a65babc3","nodes":[{"content":"XMLSerializer Sample","nodes":[{"pos":[0,20],"content":"XMLSerializer Sample","nodes":[{"content":"XMLSerializer Sample","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[111,131],"content":"XMLSerializer Sample","linkify":"XMLSerializer Sample","nodes":[{"content":"XMLSerializer Sample","pos":[0,20]}]},{"content":"This sample demonstrates how to serialize and deserialize types that are compatible with the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.","pos":[132,271],"source":"This sample demonstrates how to serialize and deserialize types that are compatible with the <xref:System.Xml.Serialization.XmlSerializer>."},{"content":"The default Windows Communication Foundation (WCF) formatter is the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> class.","pos":[272,405],"source":" The default Windows Communication Foundation (WCF) formatter is the <xref:System.Runtime.Serialization.DataContractSerializer> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class can be used to serialize and deserialize types when the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> class cannot be used.","pos":[406,598],"source":" The <xref:System.Xml.Serialization.XmlSerializer> class can be used to serialize and deserialize types when the <xref:System.Runtime.Serialization.DataContractSerializer> class cannot be used."},{"content":"This is often the case when precise control over the XML is required - for example, if a piece of data must be an XML attribute and not an XML element.","pos":[599,750]},{"content":"Also, the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> often gets automatically selected when creating clients for non-WCF services.","pos":[751,884],"source":" Also, the <xref:System.Xml.Serialization.XmlSerializer> often gets automatically selected when creating clients for non-WCF services."},{"content":"In this sample, the client is a console application (.exe) and the service is hosted by Internet Information Services (IIS).","pos":[891,1015]},{"pos":[1023,1130],"content":"[!NOTE]\n The setup procedure and build instructions for this sample are located at the end of this topic.","leadings":["","> "],"nodes":[{"content":"The setup procedure and build instructions for this sample are located at the end of this topic.","pos":[9,105]}]},{"pos":[1137,1324],"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph> must be applied to the interface as shown in the following sample code.","source":"The <xref:System.ServiceModel.ServiceContractAttribute> and <xref:System.ServiceModel.XmlSerializerFormatAttribute> must be applied to the interface as shown in the following sample code."},{"content":"The public members of <ph id=\"ph1\">`ComplexNumber`</ph> class are serialized by <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> as XML attributes.","pos":[1857,1983],"source":"The public members of `ComplexNumber` class are serialized by <xref:System.Xml.Serialization.XmlSerializer> as XML attributes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> cannot be used to create this kind of XML instance.","pos":[1984,2098],"source":" The <xref:System.Runtime.Serialization.DataContractSerializer> cannot be used to create this kind of XML instance."},{"pos":[2739,2871],"content":"The service implementation calculates and returns the appropriate result—accepting and returning values of the <ph id=\"ph1\">`ComplexNumber`</ph> type.","source":"The service implementation calculates and returns the appropriate result—accepting and returning values of the `ComplexNumber` type."},{"content":"The client implementation also uses complex numbers.","pos":[3211,3263]},{"content":"Both the service contract and the data types are defined in the generatedClient.cs source file, which was generated by the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> from service metadata.","pos":[3264,3542],"source":" Both the service contract and the data types are defined in the generatedClient.cs source file, which was generated by the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) from service metadata."},{"content":"Svcutil.exe can detect when a contract is not serializable by the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> and reverts to emitting <ph id=\"ph2\">`XmlSerializable`</ph> types in this case.","pos":[3543,3729],"source":" Svcutil.exe can detect when a contract is not serializable by the <xref:System.Runtime.Serialization.DataContractSerializer> and reverts to emitting `XmlSerializable` types in this case."},{"content":"If you want to force the use of the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>, you can pass the /serializer:XmlSerializer (use XmlSerializer) command option to the Svcutil.exe tool.","pos":[3730,3915],"source":" If you want to force the use of the <xref:System.Xml.Serialization.XmlSerializer>, you can pass the /serializer:XmlSerializer (use XmlSerializer) command option to the Svcutil.exe tool."},{"content":"When you run the sample, the operation requests and responses are displayed in the client console window.","pos":[4524,4629]},{"content":"Press ENTER in the client window to shut down the client.","pos":[4630,4687]},{"pos":[4934,4970],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[4980,5179],"content":"Ensure that you have performed the <bpt id=\"p1\">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.","source":"Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)."},{"pos":[5189,5398],"content":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"pos":[5408,5616],"content":"To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id=\"p1\">[</bpt>Running the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.","source":"To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md)."},{"pos":[5624,5756],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[5810,6120],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[6121,6171]}]}