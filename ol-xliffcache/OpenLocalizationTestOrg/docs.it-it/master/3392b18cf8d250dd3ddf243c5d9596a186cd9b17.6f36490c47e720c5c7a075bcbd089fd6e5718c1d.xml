{"content":"---\ntitle: \"ICorProfilerCallback::ExceptionUnwindFinallyLeave Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionUnwindFinallyLeave\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFinallyLeave\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFinallyLeave method [.NET Framework profiling]\"\n  - \"ExceptionUnwindFinallyLeave method [.NET Framework profiling]\"\nms.assetid: 2350351e-f253-4c0c-a191-f952bc5700e6\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerCallback::ExceptionUnwindFinallyLeave Method\nNotifies the profiler that the unwind phase of exception handling has left a `finally` clause.  \n  \n## Syntax  \n  \n```  \nHRESULT ExceptionUnwindFinallyLeave();  \n```  \n  \n## Remarks  \n The profiler should not block during this call because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled. If the profiler blocks here and a garbage collection is attempted, the runtime will block until this callback returns.  \n  \n Also, during this call, the profiler must not call into managed code or in any way cause a managed-memory allocation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)   \n [ExceptionUnwindFinallyEnter Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfinallyenter-method.md)","nodes":[{"pos":[12,85],"content":"ICorProfilerCallback::ExceptionUnwindFinallyLeave Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFinallyLeave Method | Microsoft Docs","pos":[0,73]}]},{"pos":[807,863],"content":"ICorProfilerCallback::ExceptionUnwindFinallyLeave Method","linkify":"ICorProfilerCallback::ExceptionUnwindFinallyLeave Method","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFinallyLeave Method","pos":[0,56]}]},{"pos":[864,958],"content":"Notifies the profiler that the unwind phase of exception handling has left a <ph id=\"ph1\">`finally`</ph> clause.","source":"Notifies the profiler that the unwind phase of exception handling has left a `finally` clause."},{"pos":[967,973],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1038,1045],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The profiler should not block during this call because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled.","pos":[1049,1230]},{"content":"If the profiler blocks here and a garbage collection is attempted, the runtime will block until this callback returns.","pos":[1231,1349]},{"content":"Also, during this call, the profiler must not call into managed code or in any way cause a managed-memory allocation.","pos":[1356,1473]},{"pos":[1482,1494],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1498,1602],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1609,1643],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[1650,1675],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1682,1790],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[1799,1807],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1811,1930],"source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ExceptionUnwindFinallyEnter Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfinallyenter-method.md)</ept>","pos":[1933,2081],"source":" [ExceptionUnwindFinallyEnter Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfinallyenter-method.md)"}]}