<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bc32045.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66daddf996bba5563244854ed77f3ce14352cf6d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc32045.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">946fda69d5b794f91664957dec68772018e67867</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a44cd2134bbd46f26d637ca5d3b1b4fa370fac1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Type '<ph id="ph1">&lt;typename&gt;</ph>' has no type parameters and so cannot have type arguments</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type '<ph id="ph1">\&lt;</ph>typename&gt;' has no type parameters and so cannot have type arguments</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A declaration or assignment statement includes an <bpt id="p1">[</bpt>Of<ept id="p1">](../../visual-basic/language-reference/statements/of-clause.md)</ept> clause when invoking a non-generic type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By its definition, a <bpt id="p1">*</bpt>generic type<ept id="p1">*</ept> is a class, structure, interface, procedure, or delegate that operates on data types you can specify through one or more <bpt id="p2">*</bpt>type parameters<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When the using code creates a type from this generic type, it supplies a <bpt id="p1">*</bpt>type argument<ept id="p1">*</ept> to each type parameter.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>As part of the creation of the type, each type argument replaces every occurrence of its corresponding type parameter in the generated code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Type parameters are defined with an <ph id="ph1">`Of`</ph> clause inside parentheses, and type arguments are supplied using an <ph id="ph2">`Of`</ph> clause inside parentheses.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Of`</ph> clause is used only when dealing with generic types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Non-generic types do not accept type parameters, and you cannot specify any type arguments when you invoke such a type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC32045</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Check the spelling of the type you are using in the declaration or assignment statement.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you are invoking a non-generic type, remove the <ph id="ph1">`Of`</ph> clause and its parentheses, if any.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Do not remove parentheses surrounding a standard argument list for a procedure, delegate, or class constructor.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Types in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type List<ept id="p1">](../../visual-basic/language-reference/statements/type-list.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Use a Generic Class<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>