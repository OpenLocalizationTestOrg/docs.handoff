{"content":"---\ntitle: \"LINQ and Strings (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 75ddb201-d97a-4f98-8cdf-4ad51714529a\n---\n# LINQ and Strings (Visual Basic)\nLINQ can be used to query and transform strings and collections of strings. It can be especially useful with semi-structured data in text files. LINQ queries can be combined with traditional string functions and regular expressions. For example, you can use the <xref:System.String.Split%2A> or <xref:System.Text.RegularExpressions.Regex.Split%2A> method to create an array of strings that you can then query or modify by using LINQ. You can use the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method in the `where` clause of a LINQ query. And you can use LINQ to query or modify the <xref:System.Text.RegularExpressions.MatchCollection> results returned by a regular expression.  \n  \n You can also use the techniques described in this section to transform semi-structured text data to XML. For more information, see [How to: Generate XML from CSV Files](how-to-generate-xml-from-csv-files.md).  \n  \n The examples in this section fall into two categories:  \n  \n## Querying a Block of Text  \n You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <xref:System.String.Split%2A> method or the <xref:System.Text.RegularExpressions.Regex.Split%2A> method. You can split the source text into words, sentences, paragraphs, pages, or any other criteria, and then perform additional splits if they are required in your query.  \n  \n [How to: Count Occurrences of a Word in a String (LINQ) (Visual Basic)](how-to-count-occurrences-of-a-word-in-a-string-linq.md)  \n Shows how to use LINQ for simple querying over text.  \n  \n [How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)](how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)\n\n Shows how to split text files on arbitrary boundaries and how to perform queries against each part.  \n  \n [How to: Query for Characters in a String (LINQ) (Visual Basic)](how-to-query-for-characters-in-a-string-linq.md)  \n Demonstrates that a string is a queryable type.  \n  \n [How to: Combine LINQ Queries with Regular Expressions (Visual Basic)](how-to-combine-linq-queries-with-regular-expressions.md)  \n Shows how to use regular expressions in LINQ queries for complex pattern matching on filtered query results.  \n  \n## Querying Semi-Structured Data in Text Format  \n Many different types of text files consist of a series of lines, often with similar formatting, such as tab- or comma-delimited files or fixed-length lines. After you read such a text file into memory, you can use LINQ to query and/or modify the lines. LINQ queries also simplify the task of combining data from multiple sources.  \n  \n [How to: Find the Set Difference Between Two Lists (LINQ) (Visual Basic)](how-to-find-the-set-difference-between-two-lists-linq.md)  \n Shows how to find all the strings that are present in one list but not the other.  \n  \n [How to: Sort or Filter Text Data by Any Word or Field (LINQ) (Visual Basic)](how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)  \n Shows how to sort text lines based on any word or field.  \n  \n [How to: Reorder the Fields of a Delimited File (LINQ) (Visual Basic)](how-to-reorder-the-fields-of-a-delimited-file.md)  \n Shows how to reorder fields in a line in a .csv file.  \n  \n [How to: Combine and Compare String Collections (LINQ) (Visual Basic)](how-to-combine-and-compare-string-collections-linq.md)  \n Shows how to combine string lists in various ways.  \n  \n [How to: Populate Object Collections from Multiple Sources (LINQ) (Visual Basic)](how-to-populate-object-collections-from-multiple-sources-linq.md)  \n Shows how to create object collections by using multiple text files as data sources.  \n  \n [How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)](how-to-join-content-from-dissimilar-files-linq.md)  \n Shows how to combine strings in two lists into a single string by using a matching key.  \n  \n [How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)](how-to-split-a-file-into-many-files-by-using-groups-linq.md)  \n Shows how to create new files by using a single file as a data source.  \n  \n [How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)](how-to-compute-column-values-in-a-csv-text-file-linq.md)  \n Shows how to perform mathematical computations on text data in .csv files.  \n  \n## See also\n\n- [Language-Integrated Query (LINQ) (Visual Basic)](index.md)\n- [How to: Generate XML from CSV Files](how-to-generate-xml-from-csv-files.md)\n","nodes":[{"pos":[4,113],"embed":true,"restype":"x-metadata","content":"title: \"LINQ and Strings (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 75ddb201-d97a-4f98-8cdf-4ad51714529a","nodes":[{"content":"LINQ and Strings (Visual Basic)","nodes":[{"pos":[0,31],"content":"LINQ and Strings (Visual Basic)","nodes":[{"content":"LINQ and Strings (Visual Basic)","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[120,151],"content":"LINQ and Strings (Visual Basic)","linkify":"LINQ and Strings (Visual Basic)","nodes":[{"content":"LINQ and Strings (Visual Basic)","pos":[0,31]}]},{"content":"LINQ can be used to query and transform strings and collections of strings.","pos":[152,227]},{"content":"It can be especially useful with semi-structured data in text files.","pos":[228,296]},{"content":"LINQ queries can be combined with traditional string functions and regular expressions.","pos":[297,384]},{"content":"For example, you can use the <ph id=\"ph1\">&lt;xref:System.String.Split%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt;</ph> method to create an array of strings that you can then query or modify by using LINQ.","pos":[385,585],"source":" For example, you can use the <xref:System.String.Split%2A> or <xref:System.Text.RegularExpressions.Regex.Split%2A> method to create an array of strings that you can then query or modify by using LINQ."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A&gt;</ph> method in the <ph id=\"ph2\">`where`</ph> clause of a LINQ query.","pos":[586,702],"source":" You can use the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method in the `where` clause of a LINQ query."},{"content":"And you can use LINQ to query or modify the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> results returned by a regular expression.","pos":[703,842],"source":" And you can use LINQ to query or modify the <xref:System.Text.RegularExpressions.MatchCollection> results returned by a regular expression."},{"content":"You can also use the techniques described in this section to transform semi-structured text data to XML.","pos":[849,953]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Generate XML from CSV Files<ept id=\"p1\">](how-to-generate-xml-from-csv-files.md)</ept>.","pos":[954,1057],"source":" For more information, see [How to: Generate XML from CSV Files](how-to-generate-xml-from-csv-files.md)."},{"content":"The examples in this section fall into two categories:","pos":[1064,1118]},{"pos":[1127,1151],"content":"Querying a Block of Text","linkify":"Querying a Block of Text","nodes":[{"content":"Querying a Block of Text","pos":[0,24]}]},{"content":"You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <ph id=\"ph1\">&lt;xref:System.String.Split%2A&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt;</ph> method.","pos":[1155,1379],"source":"You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <xref:System.String.Split%2A> method or the <xref:System.Text.RegularExpressions.Regex.Split%2A> method."},{"content":"You can split the source text into words, sentences, paragraphs, pages, or any other criteria, and then perform additional splits if they are required in your query.","pos":[1380,1545]},{"content":"<bpt id=\"p1\">[</bpt>How to: Count Occurrences of a Word in a String (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-count-occurrences-of-a-word-in-a-string-linq.md)</ept>","pos":[1552,1679],"source":"[How to: Count Occurrences of a Word in a String (LINQ) (Visual Basic)](how-to-count-occurrences-of-a-word-in-a-string-linq.md)"},{"content":"Shows how to use LINQ for simple querying over text.","pos":[1683,1735]},{"pos":[1742,1900],"content":"<bpt id=\"p1\">[</bpt>How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)</ept>","source":"[How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)](how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)"},{"content":"Shows how to split text files on arbitrary boundaries and how to perform queries against each part.","pos":[1903,2002]},{"content":"<bpt id=\"p1\">[</bpt>How to: Query for Characters in a String (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-query-for-characters-in-a-string-linq.md)</ept>","pos":[2009,2122],"source":"[How to: Query for Characters in a String (LINQ) (Visual Basic)](how-to-query-for-characters-in-a-string-linq.md)"},{"content":"Demonstrates that a string is a queryable type.","pos":[2126,2173]},{"content":"<bpt id=\"p1\">[</bpt>How to: Combine LINQ Queries with Regular Expressions (Visual Basic)<ept id=\"p1\">](how-to-combine-linq-queries-with-regular-expressions.md)</ept>","pos":[2180,2307],"source":"[How to: Combine LINQ Queries with Regular Expressions (Visual Basic)](how-to-combine-linq-queries-with-regular-expressions.md)"},{"content":"Shows how to use regular expressions in LINQ queries for complex pattern matching on filtered query results.","pos":[2311,2419]},{"pos":[2428,2472],"content":"Querying Semi-Structured Data in Text Format","linkify":"Querying Semi-Structured Data in Text Format","nodes":[{"content":"Querying Semi-Structured Data in Text Format","pos":[0,44]}]},{"content":"Many different types of text files consist of a series of lines, often with similar formatting, such as tab- or comma-delimited files or fixed-length lines.","pos":[2476,2632]},{"content":"After you read such a text file into memory, you can use LINQ to query and/or modify the lines.","pos":[2633,2728]},{"content":"LINQ queries also simplify the task of combining data from multiple sources.","pos":[2729,2805]},{"content":"<bpt id=\"p1\">[</bpt>How to: Find the Set Difference Between Two Lists (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-find-the-set-difference-between-two-lists-linq.md)</ept>","pos":[2812,2943],"source":"[How to: Find the Set Difference Between Two Lists (LINQ) (Visual Basic)](how-to-find-the-set-difference-between-two-lists-linq.md)"},{"content":"Shows how to find all the strings that are present in one list but not the other.","pos":[2947,3028]},{"content":"<bpt id=\"p1\">[</bpt>How to: Sort or Filter Text Data by Any Word or Field (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept>","pos":[3035,3174],"source":"[How to: Sort or Filter Text Data by Any Word or Field (LINQ) (Visual Basic)](how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)"},{"content":"Shows how to sort text lines based on any word or field.","pos":[3178,3234]},{"content":"<bpt id=\"p1\">[</bpt>How to: Reorder the Fields of a Delimited File (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-reorder-the-fields-of-a-delimited-file.md)</ept>","pos":[3241,3361],"source":"[How to: Reorder the Fields of a Delimited File (LINQ) (Visual Basic)](how-to-reorder-the-fields-of-a-delimited-file.md)"},{"content":"Shows how to reorder fields in a line in a .csv file.","pos":[3365,3418]},{"content":"<bpt id=\"p1\">[</bpt>How to: Combine and Compare String Collections (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-combine-and-compare-string-collections-linq.md)</ept>","pos":[3425,3550],"source":"[How to: Combine and Compare String Collections (LINQ) (Visual Basic)](how-to-combine-and-compare-string-collections-linq.md)"},{"content":"Shows how to combine string lists in various ways.","pos":[3554,3604]},{"content":"<bpt id=\"p1\">[</bpt>How to: Populate Object Collections from Multiple Sources (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-populate-object-collections-from-multiple-sources-linq.md)</ept>","pos":[3611,3758],"source":"[How to: Populate Object Collections from Multiple Sources (LINQ) (Visual Basic)](how-to-populate-object-collections-from-multiple-sources-linq.md)"},{"content":"Shows how to create object collections by using multiple text files as data sources.","pos":[3762,3846]},{"content":"<bpt id=\"p1\">[</bpt>How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-join-content-from-dissimilar-files-linq.md)</ept>","pos":[3853,3970],"source":"[How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)](how-to-join-content-from-dissimilar-files-linq.md)"},{"content":"Shows how to combine strings in two lists into a single string by using a matching key.","pos":[3974,4061]},{"content":"<bpt id=\"p1\">[</bpt>How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-split-a-file-into-many-files-by-using-groups-linq.md)</ept>","pos":[4068,4205],"source":"[How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)](how-to-split-a-file-into-many-files-by-using-groups-linq.md)"},{"content":"Shows how to create new files by using a single file as a data source.","pos":[4209,4279]},{"content":"<bpt id=\"p1\">[</bpt>How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)<ept id=\"p1\">](how-to-compute-column-values-in-a-csv-text-file-linq.md)</ept>","pos":[4286,4415],"source":"[How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)](how-to-compute-column-values-in-a-csv-text-file-linq.md)"},{"content":"Shows how to perform mathematical computations on text data in .csv files.","pos":[4419,4493]},{"pos":[4502,4510],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4514,4573],"content":"<bpt id=\"p1\">[</bpt>Language-Integrated Query (LINQ) (Visual Basic)<ept id=\"p1\">](index.md)</ept>","source":"[Language-Integrated Query (LINQ) (Visual Basic)](index.md)"},{"pos":[4576,4652],"content":"<bpt id=\"p1\">[</bpt>How to: Generate XML from CSV Files<ept id=\"p1\">](how-to-generate-xml-from-csv-files.md)</ept>","source":"[How to: Generate XML from CSV Files](how-to-generate-xml-from-csv-files.md)"}]}