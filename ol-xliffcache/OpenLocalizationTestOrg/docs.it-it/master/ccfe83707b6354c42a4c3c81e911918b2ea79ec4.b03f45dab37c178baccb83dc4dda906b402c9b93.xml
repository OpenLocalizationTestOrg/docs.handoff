{"content":"---\ntitle: \"ICorDebugModule3::CreateReaderForInMemorySymbols Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorDebugModule3.CreateReaderForInMemorySymbols\"\napi_location: \n  - \"CorDebug.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugModule3::CreateReaderForInMemorySymbols\"\nhelpviewer_keywords: \n  - \"CreateReaderForInMemorySymbols method, ICorDebugModule3 interface [.NET Framework debugging]\"\n  - \"ICorDebugModule3::CreateReaderForInMemorySymbols method [.NET Framework debugging]\"\nms.assetid: af317171-d66d-4114-89eb-063554c74940\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# ICorDebugModule3::CreateReaderForInMemorySymbols Method\nCreates a debug symbol reader for a dynamic module.  \n  \n## Syntax  \n  \n```  \nHRESULT CreateReaderForInMemorySymbols (  \n      [in] REFIID riid,  \n      [out][iid_is(riid)] void **    ppObj  \n```  \n  \n## Parameters  \n riid  \n [in] The IID of the COM interface to return. Typically, this is an [ISymUnmanagedReader Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md).  \n  \n ppObj  \n [out] Pointer to a pointer to the returned interface.  \n  \n## Return Value  \n S_OK  \n Successfully created the reader.  \n  \n CORDBG_E_MODULE_LOADED_FROM_DISK  \n The module is not an in-memory or dynamic module.  \n  \n CORDBG_E_SYMBOLS_NOT_AVAILABLE  \n Symbols have not been supplied by the application or are not yet available.  \n  \n E_FAIL (or other E_ return codes)  \n Unable to create the reader.  \n  \n## Remarks  \n This method can also be used to create a symbol reader object for in-memory (non-dynamic) modules, but only after the symbols are first available (indicated by the [UpdateModuleSymbols Method](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-updatemodulesymbols-method.md) callback).  \n  \n This method returns a new reader instance every time it is called (like [CComPtrBase::CoCreateInstance](/cpp/atl/reference/ccomptrbase-class#cocreateinstance)). Therefore, the debugger should cache the result and request a new instance only when the underlying data may have changed (that is, when a [LoadClass Method](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-loadclass-method.md) callback is received).  \n  \n Dynamic modules do not have any symbols available until the first type has been loaded (as indicated by the [LoadClass Method](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-loadclass-method.md) callback).  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** 4.5, 4, 3.5 SP1  \n  \n## See also\n\n- [ICorDebugRemoteTarget Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugremotetarget-interface.md)\n- [ICorDebug Interface](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)\n\n- [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)\n","nodes":[{"pos":[4,604],"embed":true,"restype":"x-metadata","content":"title: \"ICorDebugModule3::CreateReaderForInMemorySymbols Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorDebugModule3.CreateReaderForInMemorySymbols\"\napi_location: \n  - \"CorDebug.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugModule3::CreateReaderForInMemorySymbols\"\nhelpviewer_keywords: \n  - \"CreateReaderForInMemorySymbols method, ICorDebugModule3 interface [.NET Framework debugging]\"\n  - \"ICorDebugModule3::CreateReaderForInMemorySymbols method [.NET Framework debugging]\"\nms.assetid: af317171-d66d-4114-89eb-063554c74940\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"ICorDebugModule3::CreateReaderForInMemorySymbols Method","nodes":[{"pos":[0,55],"content":"ICorDebugModule3::CreateReaderForInMemorySymbols Method","nodes":[{"content":"ICorDebugModule3::CreateReaderForInMemorySymbols Method","pos":[0,55]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[611,666],"content":"ICorDebugModule3::CreateReaderForInMemorySymbols Method","linkify":"ICorDebugModule3::CreateReaderForInMemorySymbols Method","nodes":[{"content":"ICorDebugModule3::CreateReaderForInMemorySymbols Method","pos":[0,55]}]},{"content":"Creates a debug symbol reader for a dynamic module.","pos":[667,718]},{"pos":[727,733],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[871,881],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"riid","pos":[885,889]},{"content":"[in] The IID of the COM interface to return.","pos":[893,937]},{"content":"Typically, this is an <bpt id=\"p1\">[</bpt>ISymUnmanagedReader Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md)</ept>.","pos":[938,1079],"source":" Typically, this is an [ISymUnmanagedReader Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md)."},{"content":"ppObj","pos":[1086,1091]},{"content":"[out] Pointer to a pointer to the returned interface.","pos":[1095,1148]},{"pos":[1157,1169],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK","pos":[1173,1177]},{"content":"Successfully created the reader.","pos":[1181,1213]},{"content":"CORDBG_E_MODULE_LOADED_FROM_DISK","pos":[1220,1252]},{"content":"The module is not an in-memory or dynamic module.","pos":[1256,1305]},{"content":"CORDBG_E_SYMBOLS_NOT_AVAILABLE","pos":[1312,1342]},{"content":"Symbols have not been supplied by the application or are not yet available.","pos":[1346,1421]},{"content":"E_FAIL (or other E_ return codes)","pos":[1428,1461]},{"content":"Unable to create the reader.","pos":[1465,1493]},{"pos":[1502,1509],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1513,1823],"content":"This method can also be used to create a symbol reader object for in-memory (non-dynamic) modules, but only after the symbols are first available (indicated by the <bpt id=\"p1\">[</bpt>UpdateModuleSymbols Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-updatemodulesymbols-method.md)</ept> callback).","source":"This method can also be used to create a symbol reader object for in-memory (non-dynamic) modules, but only after the symbols are first available (indicated by the [UpdateModuleSymbols Method](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-updatemodulesymbols-method.md) callback)."},{"content":"This method returns a new reader instance every time it is called (like <bpt id=\"p1\">[</bpt>CComPtrBase::CoCreateInstance<ept id=\"p1\">](/cpp/atl/reference/ccomptrbase-class#cocreateinstance)</ept>).","pos":[1830,1990],"source":"This method returns a new reader instance every time it is called (like [CComPtrBase::CoCreateInstance](/cpp/atl/reference/ccomptrbase-class#cocreateinstance))."},{"content":"Therefore, the debugger should cache the result and request a new instance only when the underlying data may have changed (that is, when a <bpt id=\"p1\">[</bpt>LoadClass Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-loadclass-method.md)</ept> callback is received).","pos":[1991,2268],"source":" Therefore, the debugger should cache the result and request a new instance only when the underlying data may have changed (that is, when a [LoadClass Method](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-loadclass-method.md) callback is received)."},{"pos":[2275,2509],"content":"Dynamic modules do not have any symbols available until the first type has been loaded (as indicated by the <bpt id=\"p1\">[</bpt>LoadClass Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-loadclass-method.md)</ept> callback).","source":"Dynamic modules do not have any symbols available until the first type has been loaded (as indicated by the [LoadClass Method](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback-loadclass-method.md) callback)."},{"pos":[2518,2530],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2534,2638],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2645,2681],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2688,2713],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2720,2764],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> 4.5, 4, 3.5 SP1","source":"**.NET Framework Versions:** 4.5, 4, 3.5 SP1"},{"pos":[2773,2781],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2785,2905],"content":"<bpt id=\"p1\">[</bpt>ICorDebugRemoteTarget Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugremotetarget-interface.md)</ept>","source":"[ICorDebugRemoteTarget Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugremotetarget-interface.md)"},{"pos":[2908,3004],"content":"<bpt id=\"p1\">[</bpt>ICorDebug Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)</ept>","source":"[ICorDebug Interface](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)"},{"pos":[3008,3106],"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}