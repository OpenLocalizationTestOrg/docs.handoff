{"content":"---\ntitle: \"LINQ and Strings (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: dbe2d657-b3f3-487e-b645-21fb2d71cd7b\ncaps.latest.revision: 4\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# LINQ and Strings (C#)\nLINQ can be used to query and transform strings and collections of strings. It can be especially useful with semi-structured data in text files. LINQ queries can be combined with traditional string functions and regular expressions. For example, you can use the <xref:System.String.Split%2A> or <xref:System.Text.RegularExpressions.Regex.Split%2A> method to create an array of strings that you can then query or modify by using LINQ. You can use the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method in the `where` clause of a LINQ query. And you can use LINQ to query or modify the <xref:System.Text.RegularExpressions.MatchCollection> results returned by a regular expression.  \n  \n You can also use the techniques described in this section to transform semi-structured text data to XML. For more information, see [How to: Generate XML from CSV Files](http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd).  \n  \n The examples in this section fall into two categories:  \n  \n## Querying a Block of Text  \n You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <xref:System.String.Split%2A> method or the <xref:System.Text.RegularExpressions.Regex.Split%2A> method. You can split the source text into words, sentences, paragraphs, pages, or any other criteria, and then perform additional splits if they are required in your query.  \n  \n [How to: Count Occurrences of a Word in a String (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-count-occurrences-of-a-word-in-a-string-linq.md)  \n Shows how to use LINQ for simple querying over text.  \n  \n [How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words-linq.md)  \n Shows how to split text files on arbitrary boundaries and how to perform queries against each part.  \n  \n [How to: Query for Characters in a String (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-characters-in-a-string-linq.md)  \n Demonstrates that a string is a queryable type.  \n  \n [How to: Combine LINQ Queries with Regular Expressions (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)  \n Shows how to use regular expressions in LINQ queries for complex pattern matching on filtered query results.  \n  \n## Querying Semi-Structured Data in Text Format  \n Many different types of text files consist of a series of lines, often with similar formatting, such as tab- or comma-delimited files or fixed-length lines. After you read such a text file into memory, you can use LINQ to query and/or modify the lines. LINQ queries also simplify the task of combining data from multiple sources.  \n  \n [How to: Find the Set Difference Between Two Lists (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-find-the-set-difference-between-two-lists-linq.md)  \n Shows how to find all the strings that are present in one list but not the other.  \n  \n [How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)  \n Shows how to sort text lines based on any word or field.  \n  \n [How to: Reorder the Fields of a Delimited File (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-reorder-the-fields-of-a-delimited-file-linq.md)  \n Shows how to reorder fields in a line in a .csv file.  \n  \n [How to: Combine and Compare String Collections (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-combine-and-compare-string-collections-linq.md)  \n Shows how to combine string lists in various ways.  \n  \n [How to: Populate Object Collections from Multiple Sources (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-populate-object-collections-from-multiple-sources-linq.md)  \n Shows how to create object collections by using multiple text files as data sources.  \n  \n [How to: Join Content from Dissimilar Files (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md)  \n Shows how to combine strings in two lists into a single string by using a matching key.  \n  \n [How to: Split a File Into Many Files by Using Groups (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)  \n Shows how to create new files by using a single file as a data source.  \n  \n [How to: Compute Column Values in a CSV Text File (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)  \n Shows how to perform mathematical computations on text data in .csv files.  \n  \n## See Also  \n [Language-Integrated Query (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/index.md)   \n [How to: Generate XML from CSV Files](http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd)","nodes":[{"pos":[12,50],"content":"LINQ and Strings (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"LINQ and Strings (C#) | Microsoft Docs","pos":[0,38]}]},{"pos":[409,430],"content":"LINQ and Strings (C#)","linkify":"LINQ and Strings (C#)","nodes":[{"content":"LINQ and Strings (C#)","pos":[0,21]}]},{"content":"LINQ can be used to query and transform strings and collections of strings.","pos":[431,506]},{"content":"It can be especially useful with semi-structured data in text files.","pos":[507,575]},{"content":"LINQ queries can be combined with traditional string functions and regular expressions.","pos":[576,663]},{"content":"For example, you can use the <ph id=\"ph1\">&lt;xref:System.String.Split%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt;</ph> method to create an array of strings that you can then query or modify by using LINQ.","pos":[664,864],"source":" For example, you can use the <xref:System.String.Split%2A> or <xref:System.Text.RegularExpressions.Regex.Split%2A> method to create an array of strings that you can then query or modify by using LINQ."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A&gt;</ph> method in the <ph id=\"ph2\">`where`</ph> clause of a LINQ query.","pos":[865,981],"source":" You can use the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method in the `where` clause of a LINQ query."},{"content":"And you can use LINQ to query or modify the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> results returned by a regular expression.","pos":[982,1121],"source":" And you can use LINQ to query or modify the <xref:System.Text.RegularExpressions.MatchCollection> results returned by a regular expression."},{"content":"You can also use the techniques described in this section to transform semi-structured text data to XML.","pos":[1128,1232]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Generate XML from CSV Files<ept id=\"p1\">](http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd)</ept>.","pos":[1233,1369],"source":" For more information, see [How to: Generate XML from CSV Files](http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd)."},{"content":"The examples in this section fall into two categories:","pos":[1376,1430]},{"pos":[1439,1463],"content":"Querying a Block of Text","linkify":"Querying a Block of Text","nodes":[{"content":"Querying a Block of Text","pos":[0,24]}]},{"content":"You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <ph id=\"ph1\">&lt;xref:System.String.Split%2A&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt;</ph> method.","pos":[1467,1691],"source":"You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the <xref:System.String.Split%2A> method or the <xref:System.Text.RegularExpressions.Regex.Split%2A> method."},{"content":"You can split the source text into words, sentences, paragraphs, pages, or any other criteria, and then perform additional splits if they are required in your query.","pos":[1692,1857]},{"content":"<bpt id=\"p1\">[</bpt>How to: Count Occurrences of a Word in a String (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-count-occurrences-of-a-word-in-a-string-linq.md)</ept>","pos":[1864,2032],"source":"[How to: Count Occurrences of a Word in a String (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-count-occurrences-of-a-word-in-a-string-linq.md)"},{"content":"Shows how to use LINQ for simple querying over text.","pos":[2036,2088]},{"content":"<bpt id=\"p1\">[</bpt>How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words-linq.md)</ept>","pos":[2095,2299],"source":"[How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words-linq.md)"},{"content":"Shows how to split text files on arbitrary boundaries and how to perform queries against each part.","pos":[2303,2402]},{"content":"<bpt id=\"p1\">[</bpt>How to: Query for Characters in a String (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-characters-in-a-string-linq.md)</ept>","pos":[2409,2563],"source":"[How to: Query for Characters in a String (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-characters-in-a-string-linq.md)"},{"content":"Demonstrates that a string is a queryable type.","pos":[2567,2614]},{"content":"<bpt id=\"p1\">[</bpt>How to: Combine LINQ Queries with Regular Expressions (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)</ept>","pos":[2621,2789],"source":"[How to: Combine LINQ Queries with Regular Expressions (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)"},{"content":"Shows how to use regular expressions in LINQ queries for complex pattern matching on filtered query results.","pos":[2793,2901]},{"pos":[2910,2954],"content":"Querying Semi-Structured Data in Text Format","linkify":"Querying Semi-Structured Data in Text Format","nodes":[{"content":"Querying Semi-Structured Data in Text Format","pos":[0,44]}]},{"content":"Many different types of text files consist of a series of lines, often with similar formatting, such as tab- or comma-delimited files or fixed-length lines.","pos":[2958,3114]},{"content":"After you read such a text file into memory, you can use LINQ to query and/or modify the lines.","pos":[3115,3210]},{"content":"LINQ queries also simplify the task of combining data from multiple sources.","pos":[3211,3287]},{"content":"<bpt id=\"p1\">[</bpt>How to: Find the Set Difference Between Two Lists (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-find-the-set-difference-between-two-lists-linq.md)</ept>","pos":[3294,3466],"source":"[How to: Find the Set Difference Between Two Lists (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-find-the-set-difference-between-two-lists-linq.md)"},{"content":"Shows how to find all the strings that are present in one list but not the other.","pos":[3470,3551]},{"content":"<bpt id=\"p1\">[</bpt>How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept>","pos":[3558,3738],"source":"[How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)"},{"content":"Shows how to sort text lines based on any word or field.","pos":[3742,3798]},{"content":"<bpt id=\"p1\">[</bpt>How to: Reorder the Fields of a Delimited File (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-reorder-the-fields-of-a-delimited-file-linq.md)</ept>","pos":[3805,3971],"source":"[How to: Reorder the Fields of a Delimited File (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-reorder-the-fields-of-a-delimited-file-linq.md)"},{"content":"Shows how to reorder fields in a line in a .csv file.","pos":[3975,4028]},{"content":"<bpt id=\"p1\">[</bpt>How to: Combine and Compare String Collections (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-combine-and-compare-string-collections-linq.md)</ept>","pos":[4035,4201],"source":"[How to: Combine and Compare String Collections (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-combine-and-compare-string-collections-linq.md)"},{"content":"Shows how to combine string lists in various ways.","pos":[4205,4255]},{"content":"<bpt id=\"p1\">[</bpt>How to: Populate Object Collections from Multiple Sources (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-populate-object-collections-from-multiple-sources-linq.md)</ept>","pos":[4262,4450],"source":"[How to: Populate Object Collections from Multiple Sources (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-populate-object-collections-from-multiple-sources-linq.md)"},{"content":"Shows how to create object collections by using multiple text files as data sources.","pos":[4454,4538]},{"content":"<bpt id=\"p1\">[</bpt>How to: Join Content from Dissimilar Files (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md)</ept>","pos":[4545,4703],"source":"[How to: Join Content from Dissimilar Files (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md)"},{"content":"Shows how to combine strings in two lists into a single string by using a matching key.","pos":[4707,4794]},{"content":"<bpt id=\"p1\">[</bpt>How to: Split a File Into Many Files by Using Groups (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)</ept>","pos":[4801,4979],"source":"[How to: Split a File Into Many Files by Using Groups (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)"},{"content":"Shows how to create new files by using a single file as a data source.","pos":[4983,5053]},{"content":"<bpt id=\"p1\">[</bpt>How to: Compute Column Values in a CSV Text File (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)</ept>","pos":[5060,5230],"source":"[How to: Compute Column Values in a CSV Text File (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)"},{"content":"Shows how to perform mathematical computations on text data in .csv files.","pos":[5234,5308]},{"pos":[5317,5325],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Language-Integrated Query (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[5329,5430],"source":"[Language-Integrated Query (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Generate XML from CSV Files<ept id=\"p1\">](http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd)</ept>","pos":[5433,5543],"source":" [How to: Generate XML from CSV Files](http://msdn.microsoft.com/library/dd7bab8c-96fa-4343-94d0-9739dd6a74fd)"}]}