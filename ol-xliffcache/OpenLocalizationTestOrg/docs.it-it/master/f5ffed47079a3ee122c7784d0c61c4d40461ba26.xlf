<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="dotnet-svcutil.xmlserializer-guide.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5ffed47079a3ee122c7784d0c61c4d40461ba26</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\additional-tools\dotnet-svcutil.xmlserializer-guide.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc719b9310dae088820bbd8551778aa4510a6938</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55d27f3d80d9e44d22bfe9e5785d6e9ee7c6a94e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Using dotnet-svcutil.xmlserializer on .NET Core</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn how you can use the <ph id="ph1">`dotnet-svcutil.xmlserializer`</ph> NuGet package to pre-generate a serialization assembly for .NET Core projects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using dotnet-svcutil.xmlserializer on .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet-svcutil.xmlserializer`</ph> NuGet package can pre-generate a serialization assembly for .NET Core projects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It pre-generates C# serialization code for the types in the client application that are used by the WCF Service Contract and that can be serialized by the XmlSerializer.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This improves the startup performance of XML serialization when serializing or deserializing objects of those types.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 2.1 SDK<ept id="p1">](https://www.microsoft.com/net/download)</ept> or later</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Your favorite code editor</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use the command <ph id="ph1">`dotnet --info`</ph> to check which versions of .NET Core SDK and runtime you already have installed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Getting started</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`dotnet-svcutil.xmlserializer`</ph> in a .NET Core console application:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a WCF Service named 'MyWCFService' using the default template 'WCF Service Application' in .NET Framework.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">`[XmlSerializerFormat]`</ph> attribute on the service method like the following:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create a .NET Core console application as WCF client application that targets at .NET Core 2.1 or later versions.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, create an app named 'MyWCFClient' with the following command:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To ensure your project is targeting .NET Core 2.1 or later, inspect the <ph id="ph1">`TargetFramework`</ph> XML element in your project file:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add a package reference to <ph id="ph1">`System.ServiceModel.Http`</ph> by running the following command:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add the WCF Client code:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Add a reference to the <ph id="ph1">`dotnet-svcutil.xmlserializer`</ph> package by running the following command:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Running the command should add an entry to your project file similar to this:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Build the application by running <ph id="ph1">`dotnet build`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If everything succeeds, an assembly named <bpt id="p1">*</bpt>MyWCFClient.XmlSerializers.dll<ept id="p1">*</ept> is generated in the output folder.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the tool failed to generate the assembly, you'll see warnings in the build output.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Start the WCF service by, for example, running <ph id="ph1">`http://localhost:2561/Service1.svc`</ph> in the browser.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Then start the client application, and it will automatically load and use the pre-generated serializers at runtime.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>