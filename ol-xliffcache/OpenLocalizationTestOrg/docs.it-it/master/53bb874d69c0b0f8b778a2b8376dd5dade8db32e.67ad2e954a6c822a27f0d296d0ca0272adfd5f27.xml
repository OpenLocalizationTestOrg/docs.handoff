{"content":"---\ntitle: \"Customizing Operations: Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: a3546296-1443-4b88-aa6e-d41011041ba7\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Customizing Operations: Overview\nBy default, [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] generates dynamic SQL for insert, update, and delete operations based on mapping. However, in practice you typically want to add your own business logic to provide for security, validation, and so forth.  \n  \n [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] techniques for customizing these operations include the following.  \n  \n## Loading Options  \n In your queries, you can control how much data related to your main target is retrieved when you connect to the database. This functionality is implemented largely by using <xref:System.Data.Linq.DataLoadOptions>. For more information, see [Deferred versus Immediate Loading](../../../../../../docs/framework/data/adonet/sql/linq/deferred-versus-immediate-loading.md).  \n  \n## Partial Methods  \n In its default mapping, [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] provides partial methods to help you implement your business logic. For more information, see [Adding Business Logic By Using Partial Methods](../../../../../../docs/framework/data/adonet/sql/linq/adding-business-logic-by-using-partial-methods.md).  \n  \n## Stored Procedures and User-Defined Functions  \n [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports the use of stored procedures and user-defined functions. Stored procedures are frequently used to customize operations. For more information, see [Stored Procedures](../../../../../../docs/framework/data/adonet/sql/linq/stored-procedures.md).  \n  \n## See Also  \n [Customizing Insert, Update, and Delete Operations](../../../../../../docs/framework/data/adonet/sql/linq/customizing-insert-update-and-delete-operations.md)","nodes":[{"pos":[4,363],"embed":true,"restype":"x-metadata","content":"title: \"Customizing Operations: Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: a3546296-1443-4b88-aa6e-d41011041ba7\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"Customizing Operations: Overview | Microsoft Docs","nodes":[{"pos":[0,49],"content":"Customizing Operations: Overview | Microsoft Docs","nodes":[{"content":"Customizing Operations: Overview | Microsoft Docs","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[370,402],"content":"Customizing Operations: Overview","linkify":"Customizing Operations: Overview","nodes":[{"content":"Customizing Operations: Overview","pos":[0,32]}]},{"content":"By default, <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> generates dynamic SQL for insert, update, and delete operations based on mapping.","pos":[403,564],"source":"By default, [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] generates dynamic SQL for insert, update, and delete operations based on mapping."},{"content":"However, in practice you typically want to add your own business logic to provide for security, validation, and so forth.","pos":[565,686]},{"pos":[693,827],"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> techniques for customizing these operations include the following.","source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] techniques for customizing these operations include the following."},{"pos":[836,851],"content":"Loading Options","linkify":"Loading Options","nodes":[{"content":"Loading Options","pos":[0,15]}]},{"content":"In your queries, you can control how much data related to your main target is retrieved when you connect to the database.","pos":[855,976]},{"content":"This functionality is implemented largely by using <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph>.","pos":[977,1068],"source":" This functionality is implemented largely by using <xref:System.Data.Linq.DataLoadOptions>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Deferred versus Immediate Loading<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/deferred-versus-immediate-loading.md)</ept>.","pos":[1069,1223],"source":" For more information, see [Deferred versus Immediate Loading](../../../../../../docs/framework/data/adonet/sql/linq/deferred-versus-immediate-loading.md)."},{"pos":[1232,1247],"content":"Partial Methods","linkify":"Partial Methods","nodes":[{"content":"Partial Methods","pos":[0,15]}]},{"content":"In its default mapping, <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provides partial methods to help you implement your business logic.","pos":[1251,1410],"source":"In its default mapping, [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] provides partial methods to help you implement your business logic."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Adding Business Logic By Using Partial Methods<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/adding-business-logic-by-using-partial-methods.md)</ept>.","pos":[1411,1591],"source":" For more information, see [Adding Business Logic By Using Partial Methods](../../../../../../docs/framework/data/adonet/sql/linq/adding-business-logic-by-using-partial-methods.md)."},{"pos":[1600,1644],"content":"Stored Procedures and User-Defined Functions","linkify":"Stored Procedures and User-Defined Functions","nodes":[{"content":"Stored Procedures and User-Defined Functions","pos":[0,44]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> supports the use of stored procedures and user-defined functions.","pos":[1648,1781],"source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports the use of stored procedures and user-defined functions."},{"content":"Stored procedures are frequently used to customize operations.","pos":[1782,1844]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Stored Procedures<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/stored-procedures.md)</ept>.","pos":[1845,1967],"source":" For more information, see [Stored Procedures](../../../../../../docs/framework/data/adonet/sql/linq/stored-procedures.md)."},{"pos":[1976,1984],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1988,2145],"content":"<bpt id=\"p1\">[</bpt>Customizing Insert, Update, and Delete Operations<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/customizing-insert-update-and-delete-operations.md)</ept>","source":"[Customizing Insert, Update, and Delete Operations](../../../../../../docs/framework/data/adonet/sql/linq/customizing-insert-update-and-delete-operations.md)"}]}