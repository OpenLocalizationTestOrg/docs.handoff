{"content":"---\ntitle: \"event - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"event\"\n  - \"remove\"\n  - \"event_CSharpKeyword\"\n  - \"add\"\nhelpviewer_keywords: \n  - \"event keyword [C#]\"\nms.assetid: 7858fd85-153b-4259-85d0-6aa13c35f174\n---\n# event (C# Reference)\nThe `event` keyword is used to declare an event in a publisher class.  \n  \n## Example  \n The following example shows how to declare and raise an event that uses <xref:System.EventHandler> as the underlying delegate type. For the complete code example that also shows how to use the generic <xref:System.EventHandler%601> delegate type and how to subscribe to an event and create an event handler method, see [How to: Publish Events that Conform to .NET Framework Guidelines](../../../csharp/programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md).  \n  \n [!code-csharp[csrefKeywordsModifiers#7](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#7)]\n  \n Events are a special kind of multicast delegate that can only be invoked from within the class or struct where they are declared (the publisher class). If other classes or structs subscribe to the event, their event handler methods will be called when the publisher class raises the event. For more information and code examples, see [Events](../../../csharp/programming-guide/events/index.md) and [Delegates](../../../csharp/programming-guide/delegates/index.md).  \n  \n Events can be marked as [public](../../../csharp/language-reference/keywords/public.md), [private](../../../csharp/language-reference/keywords/private.md), [protected](../../../csharp/language-reference/keywords/protected.md), [internal](../../../csharp/language-reference/keywords/internal.md), [protected internal](../../../csharp/language-reference/keywords/protected-internal.md) or [private protected](../../../csharp/language-reference/keywords/private-protected.md). These access modifiers define how users of the class can access the event. For more information, see [Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md).  \n  \n## Keywords and Events  \n The following keywords apply to events.  \n  \n|Keyword|Description|For more information|  \n|-------------|-----------------|--------------------------|  \n|[static](../../../csharp/language-reference/keywords/static.md)|Makes the event available to callers at any time, even if no instance of the class exists.|[Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)|  \n|[virtual](../../../csharp/language-reference/keywords/virtual.md)|Allows derived classes to override the event behavior by using the [override](../../../csharp/language-reference/keywords/override.md) keyword.|[Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md)|  \n|[sealed](../../../csharp/language-reference/keywords/sealed.md)|Specifies that for derived classes it is no longer virtual.||  \n|[abstract](../../../csharp/language-reference/keywords/abstract.md)|The compiler will not generate the `add` and `remove` event accessor blocks and therefore derived classes must provide their own implementation.||  \n  \n An event may be declared as a static event by using the [static](../../../csharp/language-reference/keywords/static.md) keyword. This makes the event available to callers at any time, even if no instance of the class exists. For more information, see [Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md).  \n  \n An event can be marked as a virtual event by using the [virtual](../../../csharp/language-reference/keywords/virtual.md) keyword. This enables derived classes to override the event behavior by using the [override](../../../csharp/language-reference/keywords/override.md) keyword. For more information, see [Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md). An event overriding a virtual event can also be [sealed](../../../csharp/language-reference/keywords/sealed.md), which specifies that for derived classes it is no longer virtual. Lastly, an event can be declared [abstract](../../../csharp/language-reference/keywords/abstract.md), which means that the compiler will not generate the `add` and `remove` event accessor blocks. Therefore derived classes must provide their own implementation.  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]  \n  \n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [C# Keywords](../../../csharp/language-reference/keywords/index.md)\n- [add](../../../csharp/language-reference/keywords/add.md)\n- [remove](../../../csharp/language-reference/keywords/remove.md)\n- [Modifiers](../../../csharp/language-reference/keywords/modifiers.md)\n- [How to: Combine Delegates (Multicast Delegates)](../../../csharp/programming-guide/delegates/how-to-combine-delegates-multicast-delegates.md)\n","nodes":[{"pos":[4,245],"embed":true,"restype":"x-metadata","content":"title: \"event - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"event\"\n  - \"remove\"\n  - \"event_CSharpKeyword\"\n  - \"add\"\nhelpviewer_keywords: \n  - \"event keyword [C#]\"\nms.assetid: 7858fd85-153b-4259-85d0-6aa13c35f174","nodes":[{"content":"event - C# Reference","nodes":[{"pos":[0,20],"content":"event - C# Reference","nodes":[{"content":"event - C# Reference","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[252,272],"content":"event (C# Reference)","linkify":"event (C# Reference)","nodes":[{"content":"event (C# Reference)","pos":[0,20]}]},{"pos":[273,342],"content":"The <ph id=\"ph1\">`event`</ph> keyword is used to declare an event in a publisher class.","source":"The `event` keyword is used to declare an event in a publisher class."},{"pos":[351,358],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to declare and raise an event that uses <ph id=\"ph1\">&lt;xref:System.EventHandler&gt;</ph> as the underlying delegate type.","pos":[362,493],"source":"The following example shows how to declare and raise an event that uses <xref:System.EventHandler> as the underlying delegate type."},{"content":"For the complete code example that also shows how to use the generic <ph id=\"ph1\">&lt;xref:System.EventHandler%601&gt;</ph> delegate type and how to subscribe to an event and create an event handler method, see <bpt id=\"p1\">[</bpt>How to: Publish Events that Conform to .NET Framework Guidelines<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md)</ept>.","pos":[494,856],"source":" For the complete code example that also shows how to use the generic <xref:System.EventHandler%601> delegate type and how to subscribe to an event and create an event handler method, see [How to: Publish Events that Conform to .NET Framework Guidelines](../../../csharp/programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md)."},{"content":"Events are a special kind of multicast delegate that can only be invoked from within the class or struct where they are declared (the publisher class).","pos":[1010,1161]},{"content":"If other classes or structs subscribe to the event, their event handler methods will be called when the publisher class raises the event.","pos":[1162,1299]},{"content":"For more information and code examples, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](../../../csharp/programming-guide/events/index.md)</ept> and <bpt id=\"p2\">[</bpt>Delegates<ept id=\"p2\">](../../../csharp/programming-guide/delegates/index.md)</ept>.","pos":[1300,1474],"source":" For more information and code examples, see [Events](../../../csharp/programming-guide/events/index.md) and [Delegates](../../../csharp/programming-guide/delegates/index.md)."},{"content":"Events can be marked as <bpt id=\"p1\">[</bpt>public<ept id=\"p1\">](../../../csharp/language-reference/keywords/public.md)</ept>, <bpt id=\"p2\">[</bpt>private<ept id=\"p2\">](../../../csharp/language-reference/keywords/private.md)</ept>, <bpt id=\"p3\">[</bpt>protected<ept id=\"p3\">](../../../csharp/language-reference/keywords/protected.md)</ept>, <bpt id=\"p4\">[</bpt>internal<ept id=\"p4\">](../../../csharp/language-reference/keywords/internal.md)</ept>, <bpt id=\"p5\">[</bpt>protected internal<ept id=\"p5\">](../../../csharp/language-reference/keywords/protected-internal.md)</ept> or <bpt id=\"p6\">[</bpt>private protected<ept id=\"p6\">](../../../csharp/language-reference/keywords/private-protected.md)</ept>.","pos":[1481,1954],"source":"Events can be marked as [public](../../../csharp/language-reference/keywords/public.md), [private](../../../csharp/language-reference/keywords/private.md), [protected](../../../csharp/language-reference/keywords/protected.md), [internal](../../../csharp/language-reference/keywords/internal.md), [protected internal](../../../csharp/language-reference/keywords/protected-internal.md) or [private protected](../../../csharp/language-reference/keywords/private-protected.md)."},{"content":"These access modifiers define how users of the class can access the event.","pos":[1955,2029]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)</ept>.","pos":[2030,2150],"source":" For more information, see [Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)."},{"pos":[2159,2178],"content":"Keywords and Events","linkify":"Keywords and Events","nodes":[{"content":"Keywords and Events","pos":[0,19]}]},{"content":"The following keywords apply to events.","pos":[2182,2221]},{"content":"Keyword","pos":[2228,2235]},{"content":"Description","pos":[2236,2247]},{"content":"For more information","pos":[2248,2268]},{"pos":[2336,2399],"content":"<bpt id=\"p1\">[</bpt>static<ept id=\"p1\">](../../../csharp/language-reference/keywords/static.md)</ept>","source":"[static](../../../csharp/language-reference/keywords/static.md)"},{"content":"Makes the event available to callers at any time, even if no instance of the class exists.","pos":[2400,2490]},{"pos":[2491,2630],"content":"<bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept>","source":"[Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)"},{"pos":[2635,2700],"content":"<bpt id=\"p1\">[</bpt>virtual<ept id=\"p1\">](../../../csharp/language-reference/keywords/virtual.md)</ept>","source":"[virtual](../../../csharp/language-reference/keywords/virtual.md)"},{"pos":[2701,2844],"content":"Allows derived classes to override the event behavior by using the <bpt id=\"p1\">[</bpt>override<ept id=\"p1\">](../../../csharp/language-reference/keywords/override.md)</ept> keyword.","source":"Allows derived classes to override the event behavior by using the [override](../../../csharp/language-reference/keywords/override.md) keyword."},{"pos":[2845,2928],"content":"<bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/inheritance.md)</ept>","source":"[Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md)"},{"pos":[2933,2996],"content":"<bpt id=\"p1\">[</bpt>sealed<ept id=\"p1\">](../../../csharp/language-reference/keywords/sealed.md)</ept>","source":"[sealed](../../../csharp/language-reference/keywords/sealed.md)"},{"content":"Specifies that for derived classes it is no longer virtual.","pos":[2997,3056]},{"pos":[3062,3129],"content":"<bpt id=\"p1\">[</bpt>abstract<ept id=\"p1\">](../../../csharp/language-reference/keywords/abstract.md)</ept>","source":"[abstract](../../../csharp/language-reference/keywords/abstract.md)"},{"pos":[3130,3274],"content":"The compiler will not generate the <ph id=\"ph1\">`add`</ph> and <ph id=\"ph2\">`remove`</ph> event accessor blocks and therefore derived classes must provide their own implementation.","source":"The compiler will not generate the `add` and `remove` event accessor blocks and therefore derived classes must provide their own implementation."},{"content":"An event may be declared as a static event by using the <bpt id=\"p1\">[</bpt>static<ept id=\"p1\">](../../../csharp/language-reference/keywords/static.md)</ept> keyword.","pos":[3283,3411],"source":"An event may be declared as a static event by using the [static](../../../csharp/language-reference/keywords/static.md) keyword."},{"content":"This makes the event available to callers at any time, even if no instance of the class exists.","pos":[3412,3507]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept>.","pos":[3508,3674],"source":" For more information, see [Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)."},{"content":"An event can be marked as a virtual event by using the <bpt id=\"p1\">[</bpt>virtual<ept id=\"p1\">](../../../csharp/language-reference/keywords/virtual.md)</ept> keyword.","pos":[3681,3810],"source":"An event can be marked as a virtual event by using the [virtual](../../../csharp/language-reference/keywords/virtual.md) keyword."},{"content":"This enables derived classes to override the event behavior by using the <bpt id=\"p1\">[</bpt>override<ept id=\"p1\">](../../../csharp/language-reference/keywords/override.md)</ept> keyword.","pos":[3811,3960],"source":" This enables derived classes to override the event behavior by using the [override](../../../csharp/language-reference/keywords/override.md) keyword."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/inheritance.md)</ept>.","pos":[3961,4071],"source":" For more information, see [Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md)."},{"content":"An event overriding a virtual event can also be <bpt id=\"p1\">[</bpt>sealed<ept id=\"p1\">](../../../csharp/language-reference/keywords/sealed.md)</ept>, which specifies that for derived classes it is no longer virtual.","pos":[4072,4250],"source":" An event overriding a virtual event can also be [sealed](../../../csharp/language-reference/keywords/sealed.md), which specifies that for derived classes it is no longer virtual."},{"content":"Lastly, an event can be declared <bpt id=\"p1\">[</bpt>abstract<ept id=\"p1\">](../../../csharp/language-reference/keywords/abstract.md)</ept>, which means that the compiler will not generate the <ph id=\"ph1\">`add`</ph> and <ph id=\"ph2\">`remove`</ph> event accessor blocks.","pos":[4251,4446],"source":" Lastly, an event can be declared [abstract](../../../csharp/language-reference/keywords/abstract.md), which means that the compiler will not generate the `add` and `remove` event accessor blocks."},{"content":"Therefore derived classes must provide their own implementation.","pos":[4447,4511]},{"pos":[4520,4545],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[4617,4625],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4629,4688],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[4691,4757],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[4760,4827],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept>","source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md)"},{"pos":[4830,4887],"content":"<bpt id=\"p1\">[</bpt>add<ept id=\"p1\">](../../../csharp/language-reference/keywords/add.md)</ept>","source":"[add](../../../csharp/language-reference/keywords/add.md)"},{"pos":[4890,4953],"content":"<bpt id=\"p1\">[</bpt>remove<ept id=\"p1\">](../../../csharp/language-reference/keywords/remove.md)</ept>","source":"[remove](../../../csharp/language-reference/keywords/remove.md)"},{"pos":[4956,5025],"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](../../../csharp/language-reference/keywords/modifiers.md)</ept>","source":"[Modifiers](../../../csharp/language-reference/keywords/modifiers.md)"},{"pos":[5028,5170],"content":"<bpt id=\"p1\">[</bpt>How to: Combine Delegates (Multicast Delegates)<ept id=\"p1\">](../../../csharp/programming-guide/delegates/how-to-combine-delegates-multicast-delegates.md)</ept>","source":"[How to: Combine Delegates (Multicast Delegates)](../../../csharp/programming-guide/delegates/how-to-combine-delegates-multicast-delegates.md)"}]}