{"content":"---\ntitle: \"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionUnwindFunctionLeave\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionLeave\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionLeave method [.NET Framework profiling]\"\n  - \"ExceptionUnwindFunctionLeave method [.NET Framework profiling]\"\nms.assetid: ebaad1d5-ee0a-4cb0-96bc-8ba5d371b747\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerCallback::ExceptionUnwindFunctionLeave Method\nNotifies the profiler that the unwind phase of exception handling has finished unwinding a function.  \n  \n## Syntax  \n  \n```  \nHRESULT ExceptionUnwindFunctionLeave();  \n```  \n  \n## Remarks  \n When the `ExceptionUnwindFunctionLeave` method is called, the function instance and its stack data are removed from the stack.  \n  \n The profiler should not block during this call because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled. If the profiler blocks here and a garbage collection is attempted, the runtime will block until this callback returns.  \n  \n Also, during this call, the profiler must not call into managed code or in any way cause a managed-memory allocation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)   \n [ExceptionUnwindFunctionEnter Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfunctionenter-method.md)","nodes":[{"pos":[4,805],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionUnwindFunctionLeave\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionLeave\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionLeave method [.NET Framework profiling]\"\n  - \"ExceptionUnwindFunctionLeave method [.NET Framework profiling]\"\nms.assetid: ebaad1d5-ee0a-4cb0-96bc-8ba5d371b747\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method | Microsoft Docs","nodes":[{"pos":[0,74],"content":"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method | Microsoft Docs","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method | Microsoft Docs","pos":[0,74]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[812,869],"content":"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method","linkify":"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFunctionLeave Method","pos":[0,57]}]},{"content":"Notifies the profiler that the unwind phase of exception handling has finished unwinding a function.","pos":[870,970]},{"pos":[979,985],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1051,1058],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1062,1188],"content":"When the <ph id=\"ph1\">`ExceptionUnwindFunctionLeave`</ph> method is called, the function instance and its stack data are removed from the stack.","source":"When the `ExceptionUnwindFunctionLeave` method is called, the function instance and its stack data are removed from the stack."},{"content":"The profiler should not block during this call because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled.","pos":[1195,1376]},{"content":"If the profiler blocks here and a garbage collection is attempted, the runtime will block until this callback returns.","pos":[1377,1495]},{"content":"Also, during this call, the profiler must not call into managed code or in any way cause a managed-memory allocation.","pos":[1502,1619]},{"pos":[1628,1640],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1644,1748],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1755,1789],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[1796,1821],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1828,1936],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[1945,1953],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1957,2076],"source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>ExceptionUnwindFunctionEnter Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfunctionenter-method.md)</ept>","pos":[2080,2229],"source":"[ExceptionUnwindFunctionEnter Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfunctionenter-method.md)"}]}