<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="create-a-service-arbitrary-data-using-wcf.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c03450c66cf8de14d6c638550a510a91593c45b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\create-a-service-arbitrary-data-using-wcf.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aef480887110a943208cff97bcf491306172fc3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fa00197a54ad475eb0f67809635c0f9446941bb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a Service That Accepts Arbitrary Data using the WCF REST Programming Model</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Service That Accepts Arbitrary Data using the WCF REST Programming Model</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes developers must have full control of how data is returned from a service operation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is the case when a service operation must return data in a format not supported byWCF.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic discusses using the WCF REST Programming Model to create a service that receives arbitrary data.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To implement the service contract</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Define the service contract.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The operation that receives the arbitrary data must have a parameter of type <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In addition, this parameter must be the only parameter passed in the body of the request.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The operation described in this example also takes a filename parameter.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This parameter is passed within the URL of the request.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can specify that a parameter is passed within the URL by specifying a <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> in the <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this case the URI used to call this method ends in "UploadFile/Some-Filename".</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The "{filename}" portion of the URI template specifies that the filename parameter for the operation is passed within the URI used to call the operation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Implement the service contract.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The contract has only one method, <ph id="ph1">`UploadFile`</ph> that receives a file of arbitrary data in a stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The operation reads the stream counting the number of bytes read and then displays the filename and the number of bytes read.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To host the service</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Create a console application to host the service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create a variable to hold the base address for the service within the <ph id="ph1">`Main`</ph> method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance for the service that specifies the service class and the base address.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add an endpoint that specifies the contract, <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>, and <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Open the service host.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The service is now ready to receive requests.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To call the service programmatically</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> with the URI used to call the service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this code, the base address is combined with <ph id="ph1">`"/UploadFile/Text"`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`"UploadFile"`</ph> portion of the URI specifies the operation to call.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`"Test.txt"`</ph> portion of the URI specifies the filename parameter to pass to the <ph id="ph2">`UploadFile`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Both of these items map to the <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> applied to the operation contract.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> to <ph id="ph3">`POST`</ph> and the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property to <ph id="ph5">`"text/plain"`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This tells the service that the code is sending data and that data is in plain text.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> to get the request stream, create the data to send, write that data to the request stream, and close the stream.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Get the response from the service by calling <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> and display the response data to the console.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Close the service host.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following is a complete listing of the code for this example.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When compiling the code reference System.ServiceModel.dll and System.ServiceModel.Web.dll</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UriTemplate and UriTemplateTable<ept id="p1">](../../../../docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Web HTTP Programming Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Web HTTP Programming Model Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>