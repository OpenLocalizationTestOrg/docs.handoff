{"content":"---\ntitle: \"CorPinvokeMap Enumeration | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CorPinvokeMap\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"CorPinvokeMap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CorPinvokeMap enumeration [.NET Framework metadata]\"\nms.assetid: f14f986e-f6ce-42bc-aa23-18150c46d28c\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# CorPinvokeMap Enumeration\nSpecifies options for a PInvoke call.  \n  \n## Syntax  \n  \n```  \ntypedef enum  CorPinvokeMap {  \n  \n    pmNoMangle          = 0x0001,  \n  \n    pmCharSetMask       = 0x0006,  \n    pmCharSetNotSpec    = 0x0000,  \n    pmCharSetAnsi       = 0x0002,  \n    pmCharSetUnicode    = 0x0004,  \n    pmCharSetAuto       = 0x0006,  \n  \n    pmBestFitUseAssem   = 0x0000,  \n    pmBestFitEnabled    = 0x0010,  \n    pmBestFitDisabled   = 0x0020,  \n    pmBestFitMask       = 0x0030,  \n  \n    pmThrowOnUnmappableCharUseAssem   = 0x0000,  \n    pmThrowOnUnmappableCharEnabled    = 0x1000,  \n    pmThrowOnUnmappableCharDisabled   = 0x2000,  \n    pmThrowOnUnmappableCharMask       = 0x3000,  \n  \n    pmSupportsLastError = 0x0040,   \n  \n    pmCallConvMask      = 0x0700,  \n    pmCallConvWinapi    = 0x0100,  \n    pmCallConvCdecl     = 0x0200,  \n    pmCallConvStdcall   = 0x0300,  \n    pmCallConvThiscall  = 0x0400,  \n    pmCallConvFastcall  = 0x0500,  \n  \n    pmMaxValue          = 0xFFFF  \n  \n} CorPinvokeMap;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`pmNoMangle`|Use each member name as specified.|  \n|`pmCharSetMask`|Reserved.|  \n|`pmCharSetNotSpec`|Reserved.|  \n|`pmCharSetAnsi`|Marshal strings as multiple-byte character strings.|  \n|`pmCharSetUnicode`|Marshal strings as Unicode 2-byte characters.|  \n|`pmCharSetAuto`|Automatically marshal strings appropriately for the target operating system. The default is Unicode on Windows NT, Windows 2000, Windows XP, and the Windows Server 2003 family; the default is ANSI on Windows 98 and Windows Me.|  \n|`pmBestFitUseAssem`|Reserved.|  \n|`pmBestFitEnabled`|Perform best-fit mapping of Unicode characters that lack an exact match in the ANSI character set.|  \n|`pmBestFitDisabled`|Do not perform best-fit mapping of Unicode characters. In this case, all unmappable characters will be replaced by a ‘?’.|  \n|`pmBestFitMask`|Reserved.|  \n|`pmThrowOnUnmappableCharUseAssem`|Reserved.|  \n|`pmThrowOnUnmappableCharEnabled`|Throw an exception when the interop marshaler encounters an unmappable character.|  \n|`pmThrowOnUnmappableCharDisabled`|Do not throw an exception when the interop marshaler encounters an unmappable character.|  \n|`pmThrowOnUnmappableCharMask`|Reserved|  \n|`pmSupportsLastError`|Allow the callee to call the Win32 `SetLastError` function before returning from the attributed method.|  \n|`pmCallConvMask`|Reserved|  \n|`pmCallConvWinapi`|Use the default platform calling convention. For example, on Windows the default is `StdCall` and on Windows CE .NET it is `Cdecl`.|  \n|`pmCallConvCdecl`|Use the `Cdecl` calling convention. In this case, the caller cleans the stack. This enables calling functions with `varargs` (that is, functions that accept a variable number of parameters).|  \n|`pmCallConvStdcall`|Use the `StdCall` calling convention. In this case, the callee cleans the stack. This is the default convention for calling unmanaged functions with platform invoke.|  \n|`pmCallConvThiscall`|Use the `ThisCall` calling convention. In this case, the first parameter is the `this` pointer and is stored in register ECX. Other parameters are pushed on the stack. The `ThisCall` calling convention is used to call methods on classes exported from an unmanaged DLL.|  \n|`pmCallConvFastcall`|Reserved.|  \n|`pmMaxValue`|Reserved.|  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorHdr.h  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [Metadata Enumerations](../../../../docs/framework/unmanaged-api/metadata/metadata-enumerations.md)","nodes":[{"pos":[4,596],"embed":true,"restype":"x-metadata","content":"title: \"CorPinvokeMap Enumeration | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CorPinvokeMap\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"CorPinvokeMap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CorPinvokeMap enumeration [.NET Framework metadata]\"\nms.assetid: f14f986e-f6ce-42bc-aa23-18150c46d28c\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"CorPinvokeMap Enumeration | Microsoft Docs","nodes":[{"pos":[0,42],"content":"CorPinvokeMap Enumeration | Microsoft Docs","nodes":[{"content":"CorPinvokeMap Enumeration | Microsoft Docs","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[603,628],"content":"CorPinvokeMap Enumeration","linkify":"CorPinvokeMap Enumeration","nodes":[{"content":"CorPinvokeMap Enumeration","pos":[0,25]}]},{"content":"Specifies options for a PInvoke call.","pos":[629,666]},{"pos":[675,681],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1628,1635],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[1642,1648]},{"content":"Description","pos":[1649,1660]},{"content":"Use each member name as specified.","pos":[1713,1747]},{"content":"Reserved.","pos":[1768,1777]},{"content":"Reserved.","pos":[1801,1810]},{"content":"Marshal strings as multiple-byte character strings.","pos":[1831,1882]},{"content":"Marshal strings as Unicode 2-byte characters.","pos":[1906,1951]},{"content":"Automatically marshal strings appropriately for the target operating system.","pos":[1972,2048]},{"content":"The default is Unicode on Windows NT, Windows 2000, Windows XP, and the Windows Server 2003 family; the default is ANSI on Windows 98 and Windows Me.","pos":[2049,2198]},{"content":"Reserved.","pos":[2223,2232]},{"content":"Perform best-fit mapping of Unicode characters that lack an exact match in the ANSI character set.","pos":[2256,2354]},{"content":"Do not perform best-fit mapping of Unicode characters.","pos":[2379,2433]},{"content":"In this case, all unmappable characters will be replaced by a ‘?’.","pos":[2434,2500]},{"content":"Reserved.","pos":[2521,2530]},{"content":"Reserved.","pos":[2569,2578]},{"content":"Throw an exception when the interop marshaler encounters an unmappable character.","pos":[2616,2697]},{"content":"Do not throw an exception when the interop marshaler encounters an unmappable character.","pos":[2736,2824]},{"content":"Reserved","pos":[2859,2867]},{"pos":[2894,2997],"content":"Allow the callee to call the Win32 <ph id=\"ph1\">`SetLastError`</ph> function before returning from the attributed method.","source":"Allow the callee to call the Win32 `SetLastError` function before returning from the attributed method."},{"content":"Reserved","pos":[3019,3027]},{"content":"Use the default platform calling convention.","pos":[3051,3095]},{"content":"For example, on Windows the default is <ph id=\"ph1\">`StdCall`</ph> and on Windows CE .NET it is <ph id=\"ph2\">`Cdecl`</ph>.","pos":[3096,3182],"source":" For example, on Windows the default is `StdCall` and on Windows CE .NET it is `Cdecl`."},{"content":"Use the <ph id=\"ph1\">`Cdecl`</ph> calling convention.","pos":[3205,3240],"source":"Use the `Cdecl` calling convention."},{"content":"In this case, the caller cleans the stack.","pos":[3241,3283]},{"content":"This enables calling functions with <ph id=\"ph1\">`varargs`</ph> (that is, functions that accept a variable number of parameters).","pos":[3284,3395],"source":" This enables calling functions with `varargs` (that is, functions that accept a variable number of parameters)."},{"content":"Use the <ph id=\"ph1\">`StdCall`</ph> calling convention.","pos":[3420,3457],"source":"Use the `StdCall` calling convention."},{"content":"In this case, the callee cleans the stack.","pos":[3458,3500]},{"content":"This is the default convention for calling unmanaged functions with platform invoke.","pos":[3501,3585]},{"content":"Use the <ph id=\"ph1\">`ThisCall`</ph> calling convention.","pos":[3611,3649],"source":"Use the `ThisCall` calling convention."},{"content":"In this case, the first parameter is the <ph id=\"ph1\">`this`</ph> pointer and is stored in register ECX.","pos":[3650,3736],"source":" In this case, the first parameter is the `this` pointer and is stored in register ECX."},{"content":"Other parameters are pushed on the stack.","pos":[3737,3778]},{"content":"The <ph id=\"ph1\">`ThisCall`</ph> calling convention is used to call methods on classes exported from an unmanaged DLL.","pos":[3779,3879],"source":" The `ThisCall` calling convention is used to call methods on classes exported from an unmanaged DLL."},{"content":"Reserved.","pos":[3905,3914]},{"content":"Reserved.","pos":[3932,3941]},{"pos":[3951,3963],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3967,4071],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[4078,4098],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorHdr.h","source":"**Header:** CorHdr.h"},{"pos":[4105,4133],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"},{"pos":[4222,4230],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4234,4333],"content":"<bpt id=\"p1\">[</bpt>Metadata Enumerations<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/metadata-enumerations.md)</ept>","source":"[Metadata Enumerations](../../../../docs/framework/unmanaged-api/metadata/metadata-enumerations.md)"}]}