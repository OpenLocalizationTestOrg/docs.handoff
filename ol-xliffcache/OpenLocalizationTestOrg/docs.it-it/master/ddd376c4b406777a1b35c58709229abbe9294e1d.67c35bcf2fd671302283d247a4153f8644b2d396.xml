{"content":"---\ntitle: \"x:ClassModifier Directive | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"xClassModifier\"\n  - \"x:ClassModifier\"\n  - \"ClassModifier\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:ClassModifier attribute\"\n  - \"x:ClassModifier attribute [XAML Services]\"\n  - \"ClassModifier attribute in XAML [XAML Services]\"\nms.assetid: ef30ab78-d334-4668-917d-c9f66c3b6aea\ncaps.latest.revision: 22\nauthor: \"wadepickett\"\nms.author: \"wpickett\"\nmanager: \"wpickett\"\n---\n# x:ClassModifier Directive\nModifies XAML compilation behavior when `x:Class` is also provided. Specifically, instead of creating a partial `class` that has a `Public` access level (the default), the provided `x:Class` is created with a `NotPublic` access level. This behavior affects the access level for the class in the generated assemblies.  \n  \n## XAML Attribute Usage  \n  \n```  \n<object x:Class=\"namespace.classname\" x:ClassModifier=\"NotPublic\">  \n   ...  \n</object>  \n```  \n  \n## XAML Values  \n  \n|||  \n|-|-|  \n|*NotPublic*|The exact string to pass to specify <xref:System.Reflection.TypeAttributes?displayProperty=fullName> versus <xref:System.Reflection.TypeAttributes?displayProperty=fullName> varies, depending on the code-behind programming language that you use. See Remarks.|  \n  \n## Dependencies  \n [x:Class](../../../docs/framework/xaml-services/x-class-directive.md) must also be provided on the same element, and that element must be the root element in a page. For more information, see [\\[MS-XAML\\] Section 4.3.1.8](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n## Remarks  \n The value of `x:ClassModifier` in .NET Framework XAML Services usage varies by programming language. The string to use depends on how each language implements its <xref:System.CodeDom.Compiler.CodeDomProvider> and the type converters it returns to define the meanings for <xref:System.Reflection.TypeAttributes?displayProperty=fullName> and <xref:System.Reflection.TypeAttributes?displayProperty=fullName>, and whether that language is case sensitive.  \n  \n-   For [!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)], the string to pass to designate <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is `internal`.  \n  \n-   For [!INCLUDE[TLA2#tla_visualbnet](../../../includes/tla2sharptla-visualbnet-md.md)], the string to pass to designate <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is `Friend`.  \n  \n-   For [!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)], no targets exist that support compiling XAML; therefore, the value to pass is unspecified.  \n  \n You can also specify <xref:System.Reflection.TypeAttributes?displayProperty=fullName> (`public` in [!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)], `Public` in [!INCLUDE[TLA2#tla_visualb](../../../includes/tla2sharptla-visualb-md.md)]); however, specifying <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is infrequently done because <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is already the default behavior.  \n  \n Other values with equivalent user code access-level restrictions, such as `private` in [!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)], are not relevant for `x:ClassModifier` because nested class references are not supported in XAML, and therefore, the <xref:System.Reflection.TypeAttributes?displayProperty=fullName> modifier has the same effect.  \n  \n## Security Notes  \n The access level as declared in `x:ClassModifier` is still subject to interpretation by particular frameworks and their capabilities. WPF includes capabilities to load and instantiate types where `x:ClassModifier` is `internal`, if that class is referenced from a WPF resource through a pack URI reference. As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on `x:ClassModifier` to block all possible instantiation attempts.  \n  \n## See Also  \n [x:Class Directive](../../../docs/framework/xaml-services/x-class-directive.md)   \n [Code-Behind and XAML in WPF](../../../docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)   \n [x:FieldModifier Directive](../../../docs/framework/xaml-services/x-fieldmodifier-directive.md)   \n [Security (WPF)](../../../docs/framework/wpf/security-wpf.md)   \n [Types Migrated from WPF to System.Xaml](../../../docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)\n","nodes":[{"pos":[12,54],"content":"x:ClassModifier Directive | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"x:ClassModifier Directive | Microsoft Docs","pos":[0,42]}]},{"pos":[617,642],"content":"x:ClassModifier Directive","linkify":"x:ClassModifier Directive","nodes":[{"content":"x:ClassModifier Directive","pos":[0,25]}]},{"content":"Modifies XAML compilation behavior when <ph id=\"ph1\">`x:Class`</ph> is also provided.","pos":[643,710],"source":"Modifies XAML compilation behavior when `x:Class` is also provided."},{"content":"Specifically, instead of creating a partial <ph id=\"ph1\">`class`</ph> that has a <ph id=\"ph2\">`Public`</ph> access level (the default), the provided <ph id=\"ph3\">`x:Class`</ph> is created with a <ph id=\"ph4\">`NotPublic`</ph> access level.","pos":[711,877],"source":" Specifically, instead of creating a partial `class` that has a `Public` access level (the default), the provided `x:Class` is created with a `NotPublic` access level."},{"content":"This behavior affects the access level for the class in the generated assemblies.","pos":[878,959]},{"pos":[968,988],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[1102,1113],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1134,1145],"content":"<bpt id=\"p1\">*</bpt>NotPublic<ept id=\"p1\">*</ept>","source":"*NotPublic*"},{"content":"The exact string to pass to specify <ph id=\"ph1\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> versus <ph id=\"ph2\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> varies, depending on the code-behind programming language that you use.","pos":[1146,1390],"source":"The exact string to pass to specify <xref:System.Reflection.TypeAttributes?displayProperty=fullName> versus <xref:System.Reflection.TypeAttributes?displayProperty=fullName> varies, depending on the code-behind programming language that you use."},{"content":"See Remarks.","pos":[1391,1403]},{"pos":[1413,1425],"content":"Dependencies","linkify":"Dependencies","nodes":[{"content":"Dependencies","pos":[0,12]}]},{"content":"<bpt id=\"p1\">[</bpt>x:Class<ept id=\"p1\">](../../../docs/framework/xaml-services/x-class-directive.md)</ept> must also be provided on the same element, and that element must be the root element in a page.","pos":[1429,1594],"source":"[x:Class](../../../docs/framework/xaml-services/x-class-directive.md) must also be provided on the same element, and that element must be the root element in a page."},{"content":"For more information, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\[</ph>MS-XAML<ph id=\"ph2\">\\]</ph> Section 4.3.1.8<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=114525)</ept>.","pos":[1595,1698],"source":" For more information, see [\\[MS-XAML\\] Section 4.3.1.8](http://go.microsoft.com/fwlink/?LinkId=114525)."},{"pos":[1707,1714],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value of <ph id=\"ph1\">`x:ClassModifier`</ph> in .NET Framework XAML Services usage varies by programming language.","pos":[1718,1818],"source":"The value of `x:ClassModifier` in .NET Framework XAML Services usage varies by programming language."},{"content":"The string to use depends on how each language implements its <ph id=\"ph1\">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> and the type converters it returns to define the meanings for <ph id=\"ph2\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph>, and whether that language is case sensitive.","pos":[1819,2169],"source":" The string to use depends on how each language implements its <xref:System.CodeDom.Compiler.CodeDomProvider> and the type converters it returns to define the meanings for <xref:System.Reflection.TypeAttributes?displayProperty=fullName> and <xref:System.Reflection.TypeAttributes?displayProperty=fullName>, and whether that language is case sensitive."},{"pos":[2179,2366],"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, the string to pass to designate <ph id=\"ph2\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">`internal`</ph>.","source":"For [!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)], the string to pass to designate <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is `internal`."},{"pos":[2376,2571],"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_visualbnet](../../../includes/tla2sharptla-visualbnet-md.md)]</ph>, the string to pass to designate <ph id=\"ph2\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">`Friend`</ph>.","source":"For [!INCLUDE[TLA2#tla_visualbnet](../../../includes/tla2sharptla-visualbnet-md.md)], the string to pass to designate <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is `Friend`."},{"pos":[2581,2749],"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)]</ph>, no targets exist that support compiling XAML; therefore, the value to pass is unspecified.","source":"For [!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)], no targets exist that support compiling XAML; therefore, the value to pass is unspecified."},{"pos":[2756,3227],"content":"You can also specify <ph id=\"ph1\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> (<ph id=\"ph2\">`public`</ph> in <ph id=\"ph3\">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, <ph id=\"ph4\">`Public`</ph> in <ph id=\"ph5\">[!INCLUDE[TLA2#tla_visualb](../../../includes/tla2sharptla-visualb-md.md)]</ph>); however, specifying <ph id=\"ph6\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is infrequently done because <ph id=\"ph7\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is already the default behavior.","source":"You can also specify <xref:System.Reflection.TypeAttributes?displayProperty=fullName> (`public` in [!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)], `Public` in [!INCLUDE[TLA2#tla_visualb](../../../includes/tla2sharptla-visualb-md.md)]); however, specifying <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is infrequently done because <xref:System.Reflection.TypeAttributes?displayProperty=fullName> is already the default behavior."},{"pos":[3234,3604],"content":"Other values with equivalent user code access-level restrictions, such as <ph id=\"ph1\">`private`</ph> in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, are not relevant for <ph id=\"ph3\">`x:ClassModifier`</ph> because nested class references are not supported in XAML, and therefore, the <ph id=\"ph4\">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> modifier has the same effect.","source":"Other values with equivalent user code access-level restrictions, such as `private` in [!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)], are not relevant for `x:ClassModifier` because nested class references are not supported in XAML, and therefore, the <xref:System.Reflection.TypeAttributes?displayProperty=fullName> modifier has the same effect."},{"pos":[3613,3627],"content":"Security Notes","linkify":"Security Notes","nodes":[{"content":"Security Notes","pos":[0,14]}]},{"content":"The access level as declared in <ph id=\"ph1\">`x:ClassModifier`</ph> is still subject to interpretation by particular frameworks and their capabilities.","pos":[3631,3764],"source":"The access level as declared in `x:ClassModifier` is still subject to interpretation by particular frameworks and their capabilities."},{"content":"WPF includes capabilities to load and instantiate types where <ph id=\"ph1\">`x:ClassModifier`</ph> is <ph id=\"ph2\">`internal`</ph>, if that class is referenced from a WPF resource through a pack URI reference.","pos":[3765,3937],"source":" WPF includes capabilities to load and instantiate types where `x:ClassModifier` is `internal`, if that class is referenced from a WPF resource through a pack URI reference."},{"content":"As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on <ph id=\"ph1\">`x:ClassModifier`</ph> to block all possible instantiation attempts.","pos":[3938,4122],"source":" As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on `x:ClassModifier` to block all possible instantiation attempts."},{"pos":[4131,4139],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>x:Class Directive<ept id=\"p1\">](../../../docs/framework/xaml-services/x-class-directive.md)</ept><ph id=\"ph1\"> </ph>","pos":[4143,4223],"source":"[x:Class Directive](../../../docs/framework/xaml-services/x-class-directive.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Code-Behind and XAML in WPF<ept id=\"p1\">](../../../docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)</ept><ph id=\"ph1\"> </ph>","pos":[4226,4326],"source":" [Code-Behind and XAML in WPF](../../../docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md) "},{"content":"<bpt id=\"p1\"> [</bpt>x:FieldModifier Directive<ept id=\"p1\">](../../../docs/framework/xaml-services/x-fieldmodifier-directive.md)</ept><ph id=\"ph1\"> </ph>","pos":[4329,4426],"source":" [x:FieldModifier Directive](../../../docs/framework/xaml-services/x-fieldmodifier-directive.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Security (WPF)<ept id=\"p1\">](../../../docs/framework/wpf/security-wpf.md)</ept><ph id=\"ph1\"> </ph>","pos":[4429,4492],"source":" [Security (WPF)](../../../docs/framework/wpf/security-wpf.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Types Migrated from WPF to System.Xaml<ept id=\"p1\">](../../../docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>","pos":[4495,4617],"source":" [Types Migrated from WPF to System.Xaml](../../../docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)"}]}