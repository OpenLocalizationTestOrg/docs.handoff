{"content":"---\ntitle: \"if-else - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"if_CSharpKeyword\"\n  - \"else\"\n  - \"else_CSharpKeyword\"\n  - \"if\"\nhelpviewer_keywords: \n  - \"else keyword [C#]\"\n  - \"if keyword [C#]\"\nms.assetid: d9a1d562-8cf5-4bd4-9ba7-8ad970cd25b2\n---\n# if-else (C# Reference)\n\nAn `if` statement identifies which statement to run based on the value of a Boolean expression. In the following example, the `bool` variable `condition` is set to `true` and then checked in the `if` statement. The output is `The variable is set to true.`.\n\n[!code-csharp[csrefKeywordsSelection#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsSelection/CS/csrefKeywordsSelection.cs#1)]\n\nYou can run the examples in this topic by placing them in the `Main` method of a console app.\n\nAn `if` statement in C# can take two forms, as the following example shows.\n\n```csharp\n// if-else statement\nif (condition)\n{\n    then-statement;\n}\nelse\n{\n    else-statement;\n}\n// Next statement in the program.\n\n// if statement without an else\nif (condition)\n{\n    then-statement;\n}\n// Next statement in the program.\n```\n\nIn an `if-else` statement, if `condition` evaluates to true, the `then-statement` runs. If `condition` is false, the `else-statement` runs. Because `condition` can’t be simultaneously true and false, the `then-statement` and the `else-statement` of an `if-else` statement can never both run. After the `then-statement` or the `else-statement` runs, control is transferred to the next statement after the `if` statement.\n\nIn an `if` statement that doesn’t include an `else` statement, if `condition` is true, the `then-statement` runs. If `condition` is false, control is transferred to the next statement after the `if` statement.\n\nBoth the `then-statement` and the `else-statement` can consist of a single statement or multiple statements that are enclosed in braces (`{}`). For a single statement, the braces are optional but recommended.\n\nThe statement or statements in the `then-statement` and the `else-statement` can be of any kind, including another `if` statement nested inside the original `if` statement. In nested `if` statements, each `else` clause belongs to the last `if` that doesn’t have a corresponding `else`. In the following example, `Result1` appears if both `m > 10` and `n > 20` evaluate to true. If `m > 10` is true but `n > 20` is false, `Result2` appears.\n\n[!code-csharp[csrefKeywordsSelection#2](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsSelection/CS/csrefKeywordsSelection.cs#2)]\n\nIf, instead, you want `Result2` to appear when `(m > 10)` is false, you can specify that association by using braces to establish the start and end of the nested `if` statement, as the following example shows.\n\n[!code-csharp[csrefKeywordsSelection#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsSelection/CS/csrefKeywordsSelection.cs#3)]\n\n`Result2` appears if the condition `(m > 10)` evaluates to false.\n\n## Example\n\nIn the following example, you enter a character from the keyboard, and the program uses a nested `if` statement to determine whether the input character is an alphabetic character. If the input character is an alphabetic character, the program checks whether the input character is lowercase or uppercase. A message appears for each case.\n\n[!code-csharp[csrefKeywordsSelection#4](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsSelection/CS/csrefKeywordsSelection.cs#4)]\n\n## Example\n\nYou also can nest an `if` statement inside an else block, as the following partial code shows. The example nests `if` statements inside two else blocks and one then block. The comments specify which conditions are true or false in each block.\n\n[!code-csharp[csrefKeywordsSelection#5](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsSelection/CS/csrefKeywordsSelection.cs#5)]\n\n## Example\n\nThe following example determines whether an input character is a lowercase letter, an uppercase letter, or a number. If all three conditions are false, the character isn’t an alphanumeric character. The example displays a message for each case.\n\n[!code-csharp[csrefKeywordsSelection#6](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsSelection/CS/csrefKeywordsSelection.cs#6)]\n\nJust as a statement in the else block or the then block can be any valid statement, you can use any valid Boolean expression for the condition. You can use logical operators such as [&&](../operators/conditional-and-operator.md), [&](../operators/and-operator.md), [&#124;&#124;](../operators/conditional-or-operator.md), [&#124;](../operators/or-operator.md) and [!](../operators/logical-negation-operator.md) to make compound conditions. The following code shows examples.\n\n```csharp\n// NOT\nbool result = true;\nif (!result)\n{\n    Console.WriteLine(\"The condition is true (result is false).\");\n}\nelse\n{\n    Console.WriteLine(\"The condition is false (result is true).\");\n}\n\n// Short-circuit AND\nint m = 9;\nint n = 7;\nint p = 5;\nif (m >= n && m >= p)\n{\n    Console.WriteLine(\"Nothing is larger than m.\");\n}\n\n// AND and NOT\nif (m >= n && !(p > m))\n{\n    Console.WriteLine(\"Nothing is larger than m.\");\n}\n\n// Short-circuit OR\nif (m > n || m > p)\n{\n    Console.WriteLine(\"m isn't the smallest.\");\n}\n\n// NOT and OR\nm = 4;\nif (!(m >= n || m >= p))\n{\n    Console.WriteLine(\"Now m is the smallest.\");\n}\n// Output:\n// The condition is false (result is true).\n// Nothing is larger than m.\n// Nothing is larger than m.\n// m isn't the smallest.\n// Now m is the smallest.\n```\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [?: Operator](../operators/conditional-operator.md)\n- [if-else Statement (C++)](/cpp/cpp/if-else-statement-cpp)\n- [switch](switch.md)\n","nodes":[{"pos":[4,275],"embed":true,"restype":"x-metadata","content":"title: \"if-else - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"if_CSharpKeyword\"\n  - \"else\"\n  - \"else_CSharpKeyword\"\n  - \"if\"\nhelpviewer_keywords: \n  - \"else keyword [C#]\"\n  - \"if keyword [C#]\"\nms.assetid: d9a1d562-8cf5-4bd4-9ba7-8ad970cd25b2","nodes":[{"content":"if-else - C# Reference","nodes":[{"pos":[0,22],"content":"if-else - C# Reference","nodes":[{"content":"if-else - C# Reference","pos":[0,22]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[282,304],"content":"if-else (C# Reference)","linkify":"if-else (C# Reference)","nodes":[{"content":"if-else (C# Reference)","pos":[0,22]}]},{"content":"An <ph id=\"ph1\">`if`</ph> statement identifies which statement to run based on the value of a Boolean expression.","pos":[306,401],"source":"An `if` statement identifies which statement to run based on the value of a Boolean expression."},{"content":"In the following example, the <ph id=\"ph1\">`bool`</ph> variable <ph id=\"ph2\">`condition`</ph> is set to <ph id=\"ph3\">`true`</ph> and then checked in the <ph id=\"ph4\">`if`</ph> statement.","pos":[402,516],"source":" In the following example, the `bool` variable `condition` is set to `true` and then checked in the `if` statement."},{"content":"The output is <ph id=\"ph1\">`The variable is set to true.`</ph>.","pos":[517,562],"source":" The output is `The variable is set to true.`."},{"pos":[708,801],"content":"You can run the examples in this topic by placing them in the <ph id=\"ph1\">`Main`</ph> method of a console app.","source":"You can run the examples in this topic by placing them in the `Main` method of a console app."},{"pos":[803,878],"content":"An <ph id=\"ph1\">`if`</ph> statement in C# can take two forms, as the following example shows.","source":"An `if` statement in C# can take two forms, as the following example shows."},{"content":"In an <ph id=\"ph1\">`if-else`</ph> statement, if <ph id=\"ph2\">`condition`</ph> evaluates to true, the <ph id=\"ph3\">`then-statement`</ph> runs.","pos":[1124,1211],"source":"In an `if-else` statement, if `condition` evaluates to true, the `then-statement` runs."},{"content":"If <ph id=\"ph1\">`condition`</ph> is false, the <ph id=\"ph2\">`else-statement`</ph> runs.","pos":[1212,1263],"source":" If `condition` is false, the `else-statement` runs."},{"content":"Because <ph id=\"ph1\">`condition`</ph> can’t be simultaneously true and false, the <ph id=\"ph2\">`then-statement`</ph> and the <ph id=\"ph3\">`else-statement`</ph> of an <ph id=\"ph4\">`if-else`</ph> statement can never both run.","pos":[1264,1415],"source":" Because `condition` can’t be simultaneously true and false, the `then-statement` and the `else-statement` of an `if-else` statement can never both run."},{"content":"After the <ph id=\"ph1\">`then-statement`</ph> or the <ph id=\"ph2\">`else-statement`</ph> runs, control is transferred to the next statement after the <ph id=\"ph3\">`if`</ph> statement.","pos":[1416,1543],"source":" After the `then-statement` or the `else-statement` runs, control is transferred to the next statement after the `if` statement."},{"content":"In an <ph id=\"ph1\">`if`</ph> statement that doesn’t include an <ph id=\"ph2\">`else`</ph> statement, if <ph id=\"ph3\">`condition`</ph> is true, the <ph id=\"ph4\">`then-statement`</ph> runs.","pos":[1545,1658],"source":"In an `if` statement that doesn’t include an `else` statement, if `condition` is true, the `then-statement` runs."},{"content":"If <ph id=\"ph1\">`condition`</ph> is false, control is transferred to the next statement after the <ph id=\"ph2\">`if`</ph> statement.","pos":[1659,1754],"source":" If `condition` is false, control is transferred to the next statement after the `if` statement."},{"content":"Both the <ph id=\"ph1\">`then-statement`</ph> and the <ph id=\"ph2\">`else-statement`</ph> can consist of a single statement or multiple statements that are enclosed in braces (<ph id=\"ph3\">`{}`</ph>).","pos":[1756,1899],"source":"Both the `then-statement` and the `else-statement` can consist of a single statement or multiple statements that are enclosed in braces (`{}`)."},{"content":"For a single statement, the braces are optional but recommended.","pos":[1900,1964]},{"content":"The statement or statements in the <ph id=\"ph1\">`then-statement`</ph> and the <ph id=\"ph2\">`else-statement`</ph> can be of any kind, including another <ph id=\"ph3\">`if`</ph> statement nested inside the original <ph id=\"ph4\">`if`</ph> statement.","pos":[1966,2138],"source":"The statement or statements in the `then-statement` and the `else-statement` can be of any kind, including another `if` statement nested inside the original `if` statement."},{"content":"In nested <ph id=\"ph1\">`if`</ph> statements, each <ph id=\"ph2\">`else`</ph> clause belongs to the last <ph id=\"ph3\">`if`</ph> that doesn’t have a corresponding <ph id=\"ph4\">`else`</ph>.","pos":[2139,2251],"source":" In nested `if` statements, each `else` clause belongs to the last `if` that doesn’t have a corresponding `else`."},{"content":"In the following example, <ph id=\"ph1\">`Result1`</ph> appears if both <ph id=\"ph2\">`m &gt; 10`</ph> and <ph id=\"ph3\">`n &gt; 20`</ph> evaluate to true.","pos":[2252,2343],"source":" In the following example, `Result1` appears if both `m > 10` and `n > 20` evaluate to true."},{"content":"If <ph id=\"ph1\">`m &gt; 10`</ph> is true but <ph id=\"ph2\">`n &gt; 20`</ph> is false, <ph id=\"ph3\">`Result2`</ph> appears.","pos":[2344,2405],"source":" If `m > 10` is true but `n > 20` is false, `Result2` appears."},{"pos":[2551,2760],"content":"If, instead, you want <ph id=\"ph1\">`Result2`</ph> to appear when <ph id=\"ph2\">`(m &gt; 10)`</ph> is false, you can specify that association by using braces to establish the start and end of the nested <ph id=\"ph3\">`if`</ph> statement, as the following example shows.","source":"If, instead, you want `Result2` to appear when `(m > 10)` is false, you can specify that association by using braces to establish the start and end of the nested `if` statement, as the following example shows."},{"pos":[2906,2971],"content":"<ph id=\"ph1\">`Result2`</ph> appears if the condition <ph id=\"ph2\">`(m &gt; 10)`</ph> evaluates to false.","source":"`Result2` appears if the condition `(m > 10)` evaluates to false."},{"pos":[2976,2983],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following example, you enter a character from the keyboard, and the program uses a nested <ph id=\"ph1\">`if`</ph> statement to determine whether the input character is an alphabetic character.","pos":[2985,3165],"source":"In the following example, you enter a character from the keyboard, and the program uses a nested `if` statement to determine whether the input character is an alphabetic character."},{"content":"If the input character is an alphabetic character, the program checks whether the input character is lowercase or uppercase.","pos":[3166,3290]},{"content":"A message appears for each case.","pos":[3291,3323]},{"pos":[3472,3479],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"You also can nest an <ph id=\"ph1\">`if`</ph> statement inside an else block, as the following partial code shows.","pos":[3481,3575],"source":"You also can nest an `if` statement inside an else block, as the following partial code shows."},{"content":"The example nests <ph id=\"ph1\">`if`</ph> statements inside two else blocks and one then block.","pos":[3576,3652],"source":" The example nests `if` statements inside two else blocks and one then block."},{"content":"The comments specify which conditions are true or false in each block.","pos":[3653,3723]},{"pos":[3872,3879],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example determines whether an input character is a lowercase letter, an uppercase letter, or a number.","pos":[3881,3997]},{"content":"If all three conditions are false, the character isn’t an alphanumeric character.","pos":[3998,4079]},{"content":"The example displays a message for each case.","pos":[4080,4125]},{"content":"Just as a statement in the else block or the then block can be any valid statement, you can use any valid Boolean expression for the condition.","pos":[4271,4414]},{"content":"You can use logical operators such as <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&amp;&amp;</ph><ept id=\"p1\">](../operators/conditional-and-operator.md)</ept>, <bpt id=\"p2\">[</bpt><ph id=\"ph2\">&amp;</ph><ept id=\"p2\">](../operators/and-operator.md)</ept>, <bpt id=\"p3\">[</bpt>&amp;#124;&amp;#124;<ept id=\"p3\">](../operators/conditional-or-operator.md)</ept>, <bpt id=\"p4\">[</bpt>&amp;#124;<ept id=\"p4\">](../operators/or-operator.md)</ept> and <bpt id=\"p5\">[</bpt>!<ept id=\"p5\">](../operators/logical-negation-operator.md)</ept>","pos":[4415,4681],"source":" You can use logical operators such as [&&](../operators/conditional-and-operator.md), [&](../operators/and-operator.md), [&#124;&#124;](../operators/conditional-or-operator.md), [&#124;](../operators/or-operator.md) and [!](../operators/logical-negation-operator.md)"},{"content":"to make compound conditions.","pos":[4682,4710]},{"content":"The following code shows examples.","pos":[4711,4745]},{"pos":[5538,5563],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[5629,5637],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5641,5668],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[5671,5727],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[5730,5753],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[5756,5807],"content":"<bpt id=\"p1\">[</bpt>?: Operator<ept id=\"p1\">](../operators/conditional-operator.md)</ept>","source":"[?: Operator](../operators/conditional-operator.md)"},{"pos":[5810,5867],"content":"<bpt id=\"p1\">[</bpt>if-else Statement (C++)<ept id=\"p1\">](/cpp/cpp/if-else-statement-cpp)</ept>","source":"[if-else Statement (C++)](/cpp/cpp/if-else-statement-cpp)"},{"pos":[5870,5889],"content":"<bpt id=\"p1\">[</bpt>switch<ept id=\"p1\">](switch.md)</ept>","source":"[switch](switch.md)"}]}