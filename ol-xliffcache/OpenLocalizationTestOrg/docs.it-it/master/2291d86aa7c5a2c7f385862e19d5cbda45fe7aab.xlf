<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2291d86aa7c5a2c7f385862e19d5cbda45fe7aab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-configure-credentials-on-a-federation-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6b6c15ebc522d36126b0cab0912cb1bfb810708</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e8f140aba40d60c5227d1b969593fd742b999f0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Configure Credentials on a Federation Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Configure Credentials on a Federation Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>, creating a federated service consists of the following main procedures:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Configuring a <ph id="ph1">&lt;xref:System.ServiceModel.WSFederationHttpBinding&gt;</ph> or similar custom binding.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> creating an appropriate binding, see <bpt id="p1">[</bpt>How to: Create a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-wsfederationhttpbinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Configuring the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential&gt;</ph> that controls how issued tokens presented to the service are authenticated.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic provides details about the second step.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> how a federated service works, see <bpt id="p1">[</bpt>Federation<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To set the properties of IssuedTokenServiceCredential in code</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceCredentials&gt;</ph> class to return a reference to an <ph id="ph3">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The property is accessed from the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if self-issued tokens such as <ph id="ph3">[!INCLUDE[infocard](../../../../includes/infocard-md.md)]</ph> cards are to be authenticated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Populate the collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates%2A&gt;</ph> property with instances of the <ph id="ph2">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Each instance represents an issuer from which the service will authenticate tokens.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unlike the client-side collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates%2A&gt;</ph> property, the known certificates collection is not a keyed collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The service accepts the tokens that the specified certificates issue regardless of the address of the client that sent the message containing the issued token (subject to the further constraints, which are described later in this topic).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode%2A&gt;</ph> property to one of the <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can be done only in code.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;</ph>, then assign an instance of the custom <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class to the <ph id="ph4">&lt;xref:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode%2A&gt;</ph> is set to <ph id="ph2">`ChainTrust`</ph> or <ph id="ph3">`PeerOrChainTrust`</ph>, set the <ph id="ph4">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.RevocationMode%2A&gt;</ph> property to an appropriate value from the <ph id="ph5">&lt;xref:System.Security.Cryptography.X509Certificates.X509RevocationMode&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that the revocation mode is not used in <ph id="ph1">`PeerTrust`</ph> or <ph id="ph2">`Custom`</ph> validation modes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If needed, assign an instance of a custom <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSerializer&gt;</ph> class to the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.SamlSerializer%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A custom Security Assertions Markup Language (SAML) serializer is needed, for example, for parsing custom SAML assertions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To set the properties of IssuedTokenServiceCredential in configuration</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create an <ph id="ph1">`&lt;issuedTokenAuthentication&gt;`</ph> element as a child of a &lt;<ph id="ph2">`serviceCredentials`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`allowUntrustedRsaIssuers`</ph> attribute of the <ph id="ph2">`&lt;issuedTokenAuthentication&gt;`</ph> element to <ph id="ph3">`true`</ph> if authenticating a self-issued token, such as an <ph id="ph4">[!INCLUDE[infocard](../../../../includes/infocard-md.md)]</ph> card.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`&lt;knownCertificates&gt;`</ph> element as a child of the <ph id="ph2">`&lt;issuedTokenAuthentication&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create zero or more <ph id="ph1">`&lt;add&gt;`</ph> elements as children of the <ph id="ph2">`&lt;knownCertificates&gt;`</ph> element, and specify how to locate the certificate using the <ph id="ph3">`storeLocation`</ph>, <ph id="ph4">`storeName`</ph>, <ph id="ph5">`x509FindType`</ph>, and <ph id="ph6">`findValue`</ph> attributes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If necessary, set the <ph id="ph1">`samlSerializer`</ph> attribute of the &lt;<ph id="ph2">`issuedTokenAuthentication`</ph>&gt; element to the type name of the custom <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SamlSerializer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following example sets the properties of an <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential&gt;</ph> in code.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_FederatedService#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federatedservice/cs/source.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_FederatedService#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federatedservice/vb/source.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In order for a federated service to authenticate a client, the following must be true about the issued token:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the issued token’s digital signature uses an RSA security key identifier, the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers%2A&gt;</ph> property must be <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When the issued token’s signature uses an X.509 issuer serial number, X.509 subject key identifier, or X.509 thumbprint security identifier, the issued token must be signed by a certificate in the collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the issued token is signed using an X.509 certificate, the certificate must validate per the semantics specified by the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode%2A&gt;</ph> property, regardless of whether the certificate was sent to the relying party as a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;</ph> or was obtained from the <ph id="ph3">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> X.509 certificate validation, see <bpt id="p1">[</bpt>Working with Certificates<ept id="p1">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, setting the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;</ph> would authenticate any issued token whose signing certificate is in the <ph id="ph3">`TrustedPeople`</ph> certificate store.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In that case, set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.TrustedStoreLocation%2A&gt;</ph> property to either <ph id="ph2">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can select other modes, including <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Custom`</ph> is selected, you must assign an instance of the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class to the <ph id="ph3">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.CustomCertificateValidator%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The custom validator can validate certificates using any criteria it likes.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>How to: Create a Service that Employs a Custom Certificate Validator<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Federation<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Federation and Trust<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation-and-trust.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Federation Sample<ept id="p1">](../../../../docs/framework/wcf/samples/federation-sample.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Disable Secure Sessions on a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-disable-secure-sessions-on-a-wsfederationhttpbinding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-wsfederationhttpbinding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Federated Client<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-federated-client.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with Certificates<ept id="p1">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SecurityBindingElement Authentication Modes<ept id="p1">](../../../../docs/framework/wcf/feature-details/securitybindingelement-authentication-modes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>