<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-use-an-application-scope-resource-dictionary.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f7d2c452e720afefc1f9f67d98effae7f5b92ab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\app-development\how-to-use-an-application-scope-resource-dictionary.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4199ad61e60b28668f6673793e9b14bf1be82463</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">932ed8e12f6351a675897cce56e1baa1a98d480e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Use an Application-Scope Resource Dictionary | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use an Application-Scope Resource Dictionary</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to define and use an application-scope custom resource dictionary.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> exposes an application-scope store for shared resources:                      <ph id="ph2">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By default, the                      <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> property is initialized with an instance of the                      <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You use this instance when you get and set application-scope properties using                      <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>(For more information, see                      <bpt id="p1">[</bpt>How to: Get and Set an Application-Scope Resource<ept id="p1">](http://msdn.microsoft.com/en-us/39e0420c-c9fc-47dc-8956-fdd95b214095)</ept>.)</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you have multiple resources that you set using                      <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>, you can instead use a custom resource dictionary to store those resources and set                      <ph id="ph2">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> with it instead.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following shows how you declare a custom resource dictionary using                      XAML                     .</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Swapping entire resource dictionaries using                      <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> allows you to support application-scope themes, where each theme is encapsulated by a single resource dictionary.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example shows how to set the                      <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following shows how you can get application-scope resources from the resource dictionary exposed by                      <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> in XAML.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following shows how you can also get the resources in code.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are two considerations to make when using                      <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>First, the dictionary                      <bpt id="p1">*</bpt>key<ept id="p1">*</ept> is an object, so you must use exactly the same object instance when both setting and getting a property value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(Note that the key is case-sensitive when using a string.) Second, the dictionary                      <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is an object, so you will have to convert the value to the desired type when getting a property value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Resources<ept id="p1">](../../../../docs/framework/wpf/advanced/xaml-resources.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Merged Resource Dictionaries<ept id="p1">](../../../../docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>