{"content":"---\ntitle: \"Out-of-Order Message Processing | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 33fc62a5-5d59-461c-a37a-0e1b51ac763d\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Out-of-Order Message Processing\nWorkflow services may depend on messages being sent in a specific order. A workflow service contains one or more <xref:System.ServiceModel.Activities.Receive> activities and each <xref:System.ServiceModel.Activities.Receive> activity is expecting a specific message. Without particular transport delivery guarantees, messages sent by clients may be delayed and therefore delivered in an order the workflow service may not expect. Implementing a workflow service that does not require messages be sent in a specific order is normally done using a Parallel activity. For a more complicated application protocol, the workflow would become very complex very quickly.  The out-of-order message processing feature in [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] allows you to create such a workflow without all of the complexity of nested Parallel activities. Out-of-order message processing is only supported on channels that support <xref:System.ServiceModel.Channels.ReceiveContext> such as the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] MSMQ bindings.  \n  \n## Enabling Out-Of-Order Message Processing  \n Out-of-order message processing is enabled by setting the <xref:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive%2A> property to `true` on the WorkflowService. The following example shows how to set the <xref:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive%2A> property in code.  \n  \n```csharp  \n// Code: Opt-in to Buffered Receive processing...  \nWorkflowService service = new WorkflowService  \n{  \n    Name=\"MyService\",  \n    Body = workflow,  \n    AllowBufferedReceive = true  \n};  \n  \n```  \n  \n You can also apply the `AllowBufferedReceive` attribute to a workflow service in XAML as shown in the following example.  \n  \n```xaml  \n// Xaml: Opt-in to Buffered Receive processing...  \n<WorkflowService AllowBufferedReceive=\"True\">  \n   <!â€”the actual children activities -->  \n</Sequence>  \n```  \n  \n## See Also  \n <xref:System.ServiceModel.Channels.ReceiveContext>   \n [Workflow Services](../../../../docs/framework/wcf/feature-details/workflow-services.md)   \n [Queues and Reliable Sessions](../../../../docs/framework/wcf/feature-details/queues-and-reliable-sessions.md)","nodes":[{"pos":[4,352],"nodes":[{"content":"Out-of-Order Message Processing | Microsoft Docs","nodes":[{"pos":[0,48],"content":"Out-of-Order Message Processing | Microsoft Docs","nodes":[{"content":"Out-of-Order Message Processing | Microsoft Docs","pos":[0,48]}]}],"pos":[6,57],"yaml":true}],"content":"title: \"Out-of-Order Message Processing | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 33fc62a5-5d59-461c-a37a-0e1b51ac763d\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","yamlblock":true},{"pos":[359,390],"content":"Out-of-Order Message Processing","linkify":"Out-of-Order Message Processing","nodes":[{"content":"Out-of-Order Message Processing","pos":[0,31]}]},{"content":"Workflow services may depend on messages being sent in a specific order.","pos":[391,463]},{"content":"A workflow service contains one or more <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activities and each <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity is expecting a specific message.","pos":[464,657],"source":" A workflow service contains one or more <xref:System.ServiceModel.Activities.Receive> activities and each <xref:System.ServiceModel.Activities.Receive> activity is expecting a specific message."},{"content":"Without particular transport delivery guarantees, messages sent by clients may be delayed and therefore delivered in an order the workflow service may not expect.","pos":[658,820]},{"content":"Implementing a workflow service that does not require messages be sent in a specific order is normally done using a Parallel activity.","pos":[821,955]},{"content":"For a more complicated application protocol, the workflow would become very complex very quickly.","pos":[956,1053]},{"content":"The out-of-order message processing feature in <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> allows you to create such a workflow without all of the complexity of nested Parallel activities.","pos":[1055,1255],"source":"  The out-of-order message processing feature in [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] allows you to create such a workflow without all of the complexity of nested Parallel activities."},{"content":"Out-of-order message processing is only supported on channels that support <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReceiveContext&gt;</ph> such as the <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> MSMQ bindings.","pos":[1256,1464],"source":" Out-of-order message processing is only supported on channels that support <xref:System.ServiceModel.Channels.ReceiveContext> such as the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] MSMQ bindings."},{"pos":[1473,1513],"content":"Enabling Out-Of-Order Message Processing","linkify":"Enabling Out-Of-Order Message Processing","nodes":[{"content":"Enabling Out-Of-Order Message Processing","pos":[0,40]}]},{"content":"Out-of-order message processing is enabled by setting the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> on the WorkflowService.","pos":[1517,1695],"source":"Out-of-order message processing is enabled by setting the <xref:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive%2A> property to `true` on the WorkflowService."},{"content":"The following example shows how to set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive%2A&gt;</ph> property in code.","pos":[1696,1834],"source":" The following example shows how to set the <xref:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive%2A> property in code."},{"pos":[2055,2175],"content":"You can also apply the <ph id=\"ph1\">`AllowBufferedReceive`</ph> attribute to a workflow service in XAML as shown in the following example.","source":"You can also apply the `AllowBufferedReceive` attribute to a workflow service in XAML as shown in the following example."},{"pos":[2360,2368],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReceiveContext&gt;</ph>","pos":[2372,2422],"source":"<xref:System.ServiceModel.Channels.ReceiveContext> "},{"content":"<bpt id=\"p1\">[</bpt>Workflow Services<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/workflow-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[2427,2516],"source":"[Workflow Services](../../../../docs/framework/wcf/feature-details/workflow-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>Queues and Reliable Sessions<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/queues-and-reliable-sessions.md)</ept>","pos":[2520,2630],"source":"[Queues and Reliable Sessions](../../../../docs/framework/wcf/feature-details/queues-and-reliable-sessions.md)"}]}