{"content":"---\ntitle: \"Type constraint cannot be a 'NotInheritable' class\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32060\"\n  - \"bc32060\"\nhelpviewer_keywords: \n  - \"BC32060\"\nms.assetid: f45cc0b6-7df1-462a-b3df-c526c143e16a\n---\n# Type constraint cannot be a 'NotInheritable' class\nA constraint list includes a class that is marked as [NotInheritable](../../visual-basic/language-reference/modifiers/notinheritable.md).  \n  \n A constraint list on a type parameter can accept at most one class. A type argument supplied for that type parameter must inherit from that class. Therefore, the type parameter cannot accept a *sealed*, or `NotInheritable`, class as a constraint.  \n  \n **Error ID:** BC32060  \n  \n## To correct this error  \n  \n-   If the type parameter must be able to inherit from the class, and you have control over the definition of the class, remove the `NotInheritable` declaration from the class.  \n  \n-   If the class must remain `NotInheritable`, you cannot use it as a constraint. Remove the class name from the constraint list.  \n  \n## See also\n\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n","nodes":[{"pos":[4,211],"embed":true,"restype":"x-metadata","content":"title: \"Type constraint cannot be a 'NotInheritable' class\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32060\"\n  - \"bc32060\"\nhelpviewer_keywords: \n  - \"BC32060\"\nms.assetid: f45cc0b6-7df1-462a-b3df-c526c143e16a","nodes":[{"content":"Type constraint cannot be a 'NotInheritable' class","nodes":[{"pos":[0,50],"content":"Type constraint cannot be a 'NotInheritable' class","nodes":[{"content":"Type constraint cannot be a 'NotInheritable' class","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[218,268],"content":"Type constraint cannot be a 'NotInheritable' class","linkify":"Type constraint cannot be a 'NotInheritable' class","nodes":[{"content":"Type constraint cannot be a 'NotInheritable' class","pos":[0,50]}]},{"pos":[269,406],"content":"A constraint list includes a class that is marked as <bpt id=\"p1\">[</bpt>NotInheritable<ept id=\"p1\">](../../visual-basic/language-reference/modifiers/notinheritable.md)</ept>.","source":"A constraint list includes a class that is marked as [NotInheritable](../../visual-basic/language-reference/modifiers/notinheritable.md)."},{"content":"A constraint list on a type parameter can accept at most one class.","pos":[413,480]},{"content":"A type argument supplied for that type parameter must inherit from that class.","pos":[481,559]},{"content":"Therefore, the type parameter cannot accept a <bpt id=\"p1\">*</bpt>sealed<ept id=\"p1\">*</ept>, or <ph id=\"ph1\">`NotInheritable`</ph>, class as a constraint.","pos":[560,659],"source":" Therefore, the type parameter cannot accept a *sealed*, or `NotInheritable`, class as a constraint."},{"pos":[666,687],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32060","source":"**Error ID:** BC32060"},{"pos":[696,717],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[727,899],"content":"If the type parameter must be able to inherit from the class, and you have control over the definition of the class, remove the <ph id=\"ph1\">`NotInheritable`</ph> declaration from the class.","source":"If the type parameter must be able to inherit from the class, and you have control over the definition of the class, remove the `NotInheritable` declaration from the class."},{"content":"If the class must remain <ph id=\"ph1\">`NotInheritable`</ph>, you cannot use it as a constraint.","pos":[909,986],"source":"If the class must remain `NotInheritable`, you cannot use it as a constraint."},{"content":"Remove the class name from the constraint list.","pos":[987,1034]},{"pos":[1043,1051],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1055,1170],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"}]}