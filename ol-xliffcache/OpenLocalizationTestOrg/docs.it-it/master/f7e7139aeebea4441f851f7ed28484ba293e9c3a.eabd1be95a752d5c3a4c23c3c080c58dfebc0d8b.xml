{"content":"---\ntitle: \"How to: Use Components That Support the Event-based Asynchronous Pattern\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Event-based Asynchronous Pattern\"\n  - \"ProgressChangedEventArgs class\"\n  - \"BackgroundWorker component\"\n  - \"events [.NET Framework], asynchronous\"\n  - \"Asynchronous Pattern\"\n  - \"AsyncOperationManager class\"\n  - \"threading [.NET Framework], asynchronous features\"\n  - \"components [.NET Framework], asynchronous\"\n  - \"AsyncOperation class\"\n  - \"threading [Windows Forms], asynchronous features\"\n  - \"AsyncCompletedEventArgs class\"\nms.assetid: 35e9549c-1568-4768-ad07-17cc6dff11e1\n---\n# How to: Use Components That Support the Event-based Asynchronous Pattern\nMany components provide you with the option of performing their work asynchronously. The <xref:System.Media.SoundPlayer> and <xref:System.Windows.Forms.PictureBox> components, for example, enable you to load sounds and images \"in the background\" while your main thread continues running without interruption.  \n  \n Using asynchronous methods on a class that supports the [Event-based Asynchronous Pattern Overview](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md) can be as simple as attaching an event handler to the component's _MethodName_**Completed** event, just as you would for any other event. When you call the _MethodName_**Async** method, your application will continue running without interruption until the _MethodName_**Completed** event is raised. In your event handler, you can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> parameter to determine if the asynchronous operation successfully completed or if it was canceled.  \n  \n For more information about using event handlers, see [Event Handlers Overview](../../../docs/framework/winforms/event-handlers-overview-windows-forms.md).  \n  \n The following procedure shows how to use the asynchronous image-loading capability of a <xref:System.Windows.Forms.PictureBox> control.  \n  \n### To enable a PictureBox control to asynchronously load an image  \n  \n1.  Create an instance of the <xref:System.Windows.Forms.PictureBox> component in your form.  \n  \n2.  Assign an event handler to the <xref:System.Windows.Forms.PictureBox.LoadCompleted> event.  \n  \n     Check for any errors that may have occurred during the asynchronous download here. This is also where you check for cancellation.  \n  \n     [!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#2](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#2)]\n     [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#2](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#2)]  \n  \n     [!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#5](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#5)]\n     [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#5](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#5)]  \n  \n3.  Add two buttons, called `loadButton` and `cancelLoadButton`, to your form. Add <xref:System.Windows.Forms.Control.Click> event handlers to start and cancel the download.  \n  \n     [!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#3](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#3)]\n     [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#3](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#3)]  \n  \n     [!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#4](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#4)]\n     [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#4](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#4)]  \n  \n4.  Run your application.  \n  \n     As the image download proceeds, you can move the form freely, minimize it, and maximize it.  \n  \n## See also\n\n- [How to: Run an Operation in the Background](../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)\n- [Event-based Asynchronous Pattern Overview](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)\n","nodes":[{"pos":[4,679],"embed":true,"restype":"x-metadata","content":"title: \"How to: Use Components That Support the Event-based Asynchronous Pattern\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Event-based Asynchronous Pattern\"\n  - \"ProgressChangedEventArgs class\"\n  - \"BackgroundWorker component\"\n  - \"events [.NET Framework], asynchronous\"\n  - \"Asynchronous Pattern\"\n  - \"AsyncOperationManager class\"\n  - \"threading [.NET Framework], asynchronous features\"\n  - \"components [.NET Framework], asynchronous\"\n  - \"AsyncOperation class\"\n  - \"threading [Windows Forms], asynchronous features\"\n  - \"AsyncCompletedEventArgs class\"\nms.assetid: 35e9549c-1568-4768-ad07-17cc6dff11e1","nodes":[{"content":"How to: Use Components That Support the Event-based Asynchronous Pattern","nodes":[{"pos":[0,72],"content":"How to: Use Components That Support the Event-based Asynchronous Pattern","nodes":[{"content":"How to: Use Components That Support the Event-based Asynchronous Pattern","pos":[0,72]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[686,758],"content":"How to: Use Components That Support the Event-based Asynchronous Pattern","linkify":"How to: Use Components That Support the Event-based Asynchronous Pattern","nodes":[{"content":"How to: Use Components That Support the Event-based Asynchronous Pattern","pos":[0,72]}]},{"content":"Many components provide you with the option of performing their work asynchronously.","pos":[759,843]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> components, for example, enable you to load sounds and images \"in the background\" while your main thread continues running without interruption.","pos":[844,1067],"source":" The <xref:System.Media.SoundPlayer> and <xref:System.Windows.Forms.PictureBox> components, for example, enable you to load sounds and images \"in the background\" while your main thread continues running without interruption."},{"content":"Using asynchronous methods on a class that supports the <bpt id=\"p1\">[</bpt>Event-based Asynchronous Pattern Overview<ept id=\"p1\">](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept> can be as simple as attaching an event handler to the component's <bpt id=\"p2\">_</bpt>MethodName<ept id=\"p2\">_</ept><bpt id=\"p3\">**</bpt>Completed<ept id=\"p3\">**</ept> event, just as you would for any other event.","pos":[1074,1414],"source":"Using asynchronous methods on a class that supports the [Event-based Asynchronous Pattern Overview](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md) can be as simple as attaching an event handler to the component's _MethodName_**Completed** event, just as you would for any other event."},{"content":"When you call the <bpt id=\"p1\">_</bpt>MethodName<ept id=\"p1\">_</ept><bpt id=\"p2\">**</bpt>Async<ept id=\"p2\">**</ept> method, your application will continue running without interruption until the <bpt id=\"p3\">_</bpt>MethodName<ept id=\"p3\">_</ept><bpt id=\"p4\">**</bpt>Completed<ept id=\"p4\">**</ept> event is raised.","pos":[1415,1575],"source":" When you call the _MethodName_**Async** method, your application will continue running without interruption until the _MethodName_**Completed** event is raised."},{"content":"In your event handler, you can examine the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;</ph> parameter to determine if the asynchronous operation successfully completed or if it was canceled.","pos":[1576,1770],"source":" In your event handler, you can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> parameter to determine if the asynchronous operation successfully completed or if it was canceled."},{"pos":[1777,1931],"content":"For more information about using event handlers, see <bpt id=\"p1\">[</bpt>Event Handlers Overview<ept id=\"p1\">](../../../docs/framework/winforms/event-handlers-overview-windows-forms.md)</ept>.","source":"For more information about using event handlers, see [Event Handlers Overview](../../../docs/framework/winforms/event-handlers-overview-windows-forms.md)."},{"pos":[1938,2073],"content":"The following procedure shows how to use the asynchronous image-loading capability of a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control.","source":"The following procedure shows how to use the asynchronous image-loading capability of a <xref:System.Windows.Forms.PictureBox> control."},{"pos":[2083,2145],"content":"To enable a PictureBox control to asynchronously load an image","linkify":"To enable a PictureBox control to asynchronously load an image","nodes":[{"content":"To enable a PictureBox control to asynchronously load an image","pos":[0,62]}]},{"pos":[2155,2243],"content":"Create an instance of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> component in your form.","source":"Create an instance of the <xref:System.Windows.Forms.PictureBox> component in your form."},{"pos":[2253,2343],"content":"Assign an event handler to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PictureBox.LoadCompleted&gt;</ph> event.","source":"Assign an event handler to the <xref:System.Windows.Forms.PictureBox.LoadCompleted> event."},{"content":"Check for any errors that may have occurred during the asynchronous download here.","pos":[2354,2436]},{"content":"This is also where you check for cancellation.","pos":[2437,2483]},{"pos":[2494,2841],"content":"[!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#2](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#2)]\n [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#2](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#2)]","leadings":["","    "],"nodes":[]},{"pos":[2852,3199],"content":"[!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#5](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#5)]\n [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#5](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#5)]","leadings":["","    "],"nodes":[]},{"content":"Add two buttons, called <ph id=\"ph1\">`loadButton`</ph> and <ph id=\"ph2\">`cancelLoadButton`</ph>, to your form.","pos":[3209,3283],"source":"Add two buttons, called `loadButton` and `cancelLoadButton`, to your form."},{"content":"Add <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers to start and cancel the download.","pos":[3284,3378],"source":" Add <xref:System.Windows.Forms.Control.Click> event handlers to start and cancel the download."},{"pos":[3389,3736],"content":"[!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#3](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#3)]\n [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#3](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#3)]","leadings":["","    "],"nodes":[]},{"pos":[3747,4094],"content":"[!code-csharp[System.Windows.Forms.PictureBox.LoadAsync#4](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/CS/Form1.cs#4)]\n [!code-vb[System.Windows.Forms.PictureBox.LoadAsync#4](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PictureBox.LoadAsync/VB/Form1.vb#4)]","leadings":["","    "],"nodes":[]},{"content":"Run your application.","pos":[4104,4125]},{"content":"As the image download proceeds, you can move the form freely, minimize it, and maximize it.","pos":[4136,4227]},{"pos":[4236,4244],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4248,4380],"content":"<bpt id=\"p1\">[</bpt>How to: Run an Operation in the Background<ept id=\"p1\">](../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>","source":"[How to: Run an Operation in the Background](../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)"},{"pos":[4383,4529],"content":"<bpt id=\"p1\">[</bpt>Event-based Asynchronous Pattern Overview<ept id=\"p1\">](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>","source":"[Event-based Asynchronous Pattern Overview](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)"}]}