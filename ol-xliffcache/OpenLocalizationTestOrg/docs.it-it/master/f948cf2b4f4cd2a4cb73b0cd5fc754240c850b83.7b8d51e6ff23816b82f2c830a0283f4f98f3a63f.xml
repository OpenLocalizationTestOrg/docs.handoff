{"content":"---\ntitle: \"ProgressBar Styles and Templates\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"parts [WPF], ProgressBar\"\n  - \"ProgressBar [WPF], styles and templates\"\n  - \"styles [WPF], ProgressBar\"\n  - \"ControlTemplate [WPF], ProgressBar\"\n  - \"templates [WPF], ProgressBar\"\n  - \"states [WPF], ProgressBar\"\nms.assetid: 935aa600-16e6-4947-a905-37a189a583dd\n---\n# ProgressBar Styles and Templates\nThis topic describes the styles and templates for the <xref:System.Windows.Controls.ProgressBar> control. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](customizing-the-appearance-of-an-existing-control.md).  \n  \n## ProgressBar Parts  \n The following table lists the named parts for the <xref:System.Windows.Controls.ProgressBar> control.  \n  \n|Part|Type|Description|  \n|-|-|-|  \n|PART_Indicator|<xref:System.Windows.FrameworkElement>|The object that indicates progress.|  \n|PART_Track|<xref:System.Windows.FrameworkElement>|The object that defines the path of the progress indicator.|  \n|PART_GlowRect|<xref:System.Windows.FrameworkElement>|An object that embellishes the progress bar.|  \n  \n## ProgressBar States  \n The following table lists the visual states for the <xref:System.Windows.Controls.ProgressBar> control.  \n  \n|VisualState Name|VisualStateGroup Name|Description|  \n|----------------------|---------------------------|-----------------|  \n|Determinate|CommonStates|<xref:System.Windows.Controls.ProgressBar> reports progress based on the <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> property.|  \n|Indeterminate|CommonStates|<xref:System.Windows.Controls.ProgressBar> reports generic progress with a repeating pattern.|  \n|Valid|ValidationStates|The control uses the <xref:System.Windows.Controls.Validation> class and the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property is `false`.|  \n|InvalidFocused|ValidationStates|The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property is `true` has the control has focus.|  \n|InvalidUnfocused|ValidationStates|The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property is `true` has the control does not have focus.|  \n  \n## ProgressBar ControlTemplate Example  \n The following example shows how to define a <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ProgressBar> control.  \n  \n [!code-xaml[ControlTemplateExamples#ProgressBar](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/progressbar.xaml#progressbar)]  \n  \n The preceding example uses one or more of the following resources.  \n  \n [!code-xaml[ControlTemplateExamples#Resources](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/shared.xaml#resources)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Styles%20&%20Templates/IntroToStylingAndTemplating).  \n  \n## See also\n\n- <xref:System.Windows.FrameworkElement.Style%2A>\n- <xref:System.Windows.Controls.ControlTemplate>\n- [Control Styles and Templates](control-styles-and-templates.md)\n- [Control Customization](control-customization.md)\n- [Styling and Templating](styling-and-templating.md)\n- [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](customizing-the-appearance-of-an-existing-control.md)\n","nodes":[{"pos":[4,355],"embed":true,"restype":"x-metadata","content":"title: \"ProgressBar Styles and Templates\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"parts [WPF], ProgressBar\"\n  - \"ProgressBar [WPF], styles and templates\"\n  - \"styles [WPF], ProgressBar\"\n  - \"ControlTemplate [WPF], ProgressBar\"\n  - \"templates [WPF], ProgressBar\"\n  - \"states [WPF], ProgressBar\"\nms.assetid: 935aa600-16e6-4947-a905-37a189a583dd","nodes":[{"content":"ProgressBar Styles and Templates","nodes":[{"pos":[0,32],"content":"ProgressBar Styles and Templates","nodes":[{"content":"ProgressBar Styles and Templates","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[362,394],"content":"ProgressBar Styles and Templates","linkify":"ProgressBar Styles and Templates","nodes":[{"content":"ProgressBar Styles and Templates","pos":[0,32]}]},{"content":"This topic describes the styles and templates for the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ProgressBar&gt;</ph> control.","pos":[395,500],"source":"This topic describes the styles and templates for the <xref:System.Windows.Controls.ProgressBar> control."},{"content":"You can modify the default <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.","pos":[501,615],"source":" You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](customizing-the-appearance-of-an-existing-control.md)</ept>.","pos":[616,778],"source":" For more information, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](customizing-the-appearance-of-an-existing-control.md)."},{"pos":[787,804],"content":"ProgressBar Parts","linkify":"ProgressBar Parts","nodes":[{"content":"ProgressBar Parts","pos":[0,17]}]},{"pos":[808,909],"content":"The following table lists the named parts for the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ProgressBar&gt;</ph> control.","source":"The following table lists the named parts for the <xref:System.Windows.Controls.ProgressBar> control."},{"content":"Part","pos":[916,920]},{"content":"Type","pos":[921,925]},{"content":"Description","pos":[926,937]},{"content":"PART_Indicator","pos":[952,966]},{"content":"The object that indicates progress.","pos":[1006,1041]},{"content":"PART_Track","pos":[1046,1056]},{"content":"The object that defines the path of the progress indicator.","pos":[1096,1155]},{"content":"PART_GlowRect","pos":[1160,1173]},{"content":"An object that embellishes the progress bar.","pos":[1213,1257]},{"pos":[1267,1285],"content":"ProgressBar States","linkify":"ProgressBar States","nodes":[{"content":"ProgressBar States","pos":[0,18]}]},{"pos":[1289,1392],"content":"The following table lists the visual states for the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ProgressBar&gt;</ph> control.","source":"The following table lists the visual states for the <xref:System.Windows.Controls.ProgressBar> control."},{"content":"VisualState Name","pos":[1399,1415]},{"content":"VisualStateGroup Name","pos":[1416,1437]},{"content":"Description","pos":[1438,1449]},{"content":"Determinate","pos":[1527,1538]},{"content":"CommonStates","pos":[1539,1551]},{"pos":[1552,1695],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ProgressBar&gt;</ph> reports progress based on the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> property.","source":"<xref:System.Windows.Controls.ProgressBar> reports progress based on the <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> property."},{"content":"Indeterminate","pos":[1700,1713]},{"content":"CommonStates","pos":[1714,1726]},{"pos":[1727,1820],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ProgressBar&gt;</ph> reports generic progress with a repeating pattern.","source":"<xref:System.Windows.Controls.ProgressBar> reports generic progress with a repeating pattern."},{"content":"Valid","pos":[1825,1830]},{"content":"ValidationStates","pos":[1831,1847]},{"pos":[1848,2037],"content":"The control uses the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation&gt;</ph> class and the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph> attached property is <ph id=\"ph3\">`false`</ph>.","source":"The control uses the <xref:System.Windows.Controls.Validation> class and the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property is `false`."},{"content":"InvalidFocused","pos":[2042,2056]},{"content":"ValidationStates","pos":[2057,2073]},{"pos":[2074,2215],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph> attached property is <ph id=\"ph2\">`true`</ph> has the control has focus.","source":"The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property is `true` has the control has focus."},{"content":"InvalidUnfocused","pos":[2220,2236]},{"content":"ValidationStates","pos":[2237,2253]},{"pos":[2254,2405],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph> attached property is <ph id=\"ph2\">`true`</ph> has the control does not have focus.","source":"The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property is `true` has the control does not have focus."},{"pos":[2415,2450],"content":"ProgressBar ControlTemplate Example","linkify":"ProgressBar ControlTemplate Example","nodes":[{"content":"ProgressBar ControlTemplate Example","pos":[0,35]}]},{"pos":[2454,2604],"content":"The following example shows how to define a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ProgressBar&gt;</ph> control.","source":"The following example shows how to define a <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ProgressBar> control."},{"content":"The preceding example uses one or more of the following resources.","pos":[2776,2842]},{"pos":[3005,3178],"content":"For the complete sample, see <bpt id=\"p1\">[</bpt>Styling with ControlTemplates Sample<ept id=\"p1\">](https://github.com/Microsoft/WPF-Samples/tree/master/Styles%20&amp;%20Templates/IntroToStylingAndTemplating)</ept>.","source":"For the complete sample, see [Styling with ControlTemplates Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Styles%20&%20Templates/IntroToStylingAndTemplating)."},{"pos":[3187,3195],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3298,3361],"content":"<bpt id=\"p1\">[</bpt>Control Styles and Templates<ept id=\"p1\">](control-styles-and-templates.md)</ept>","source":"[Control Styles and Templates](control-styles-and-templates.md)"},{"pos":[3364,3413],"content":"<bpt id=\"p1\">[</bpt>Control Customization<ept id=\"p1\">](control-customization.md)</ept>","source":"[Control Customization](control-customization.md)"},{"pos":[3416,3467],"content":"<bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](styling-and-templating.md)</ept>","source":"[Styling and Templating](styling-and-templating.md)"},{"pos":[3470,3605],"content":"<bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](customizing-the-appearance-of-an-existing-control.md)</ept>","source":"[Customizing the Appearance of an Existing Control by Creating a ControlTemplate](customizing-the-appearance-of-an-existing-control.md)"}]}