<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">804cb9ff2b85f9b221eecd411e885c1afb1ba748</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc36581.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce5675789b4823a36f1d22a3d660427ad1f5d45a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e9d3f776652cb7a0428e46a7e7a0d133902f277</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Type arguments for extension method &amp;#39;<ph id="ph1">&amp;lt;</ph>methodName<ph id="ph2">&amp;gt;</ph>&amp;#39; defined in &amp;#39;<ph id="ph3">&amp;lt;</ph>typeName<ph id="ph4">&amp;gt;</ph>&amp;#39; could not be inferred from the delegate &amp;#39;<ph id="ph5">&amp;lt;</ph>delagateName<ph id="ph6">&amp;gt;</ph>&amp;#39; | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type arguments for extension method &amp;#39;<ph id="ph1">&amp;lt;</ph>methodName<ph id="ph2">&amp;gt;</ph>&amp;#39; defined in &amp;#39;<ph id="ph3">&amp;lt;</ph>typeName<ph id="ph4">&amp;gt;</ph>&amp;#39; could not be inferred from the delegate &amp;#39;<ph id="ph5">&amp;lt;</ph>delagateName<ph id="ph6">&amp;gt;</ph>&amp;#39;</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An assignment statement uses <ph id="ph1">`AddressOf`</ph> to assign the address of a generic extension method to a delegate, but it does not supply any type arguments to the extension method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Normally, when you invoke a generic method, you supply a type argument for each type parameter that the generic method defines.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you do not supply any type arguments, the compiler attempts to infer the types to be passed to the type parameters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the context does not provide enough information for the compiler to infer the types, an error is generated.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC36581</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`AddressOf`</ph> expression, specify the type arguments for the extension method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Types in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddressOf Operator<ept id="p1">](../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Generic Procedures in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/generic-procedures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type List<ept id="p1">](../../visual-basic/language-reference/statements/type-list.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Extension Methods<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>