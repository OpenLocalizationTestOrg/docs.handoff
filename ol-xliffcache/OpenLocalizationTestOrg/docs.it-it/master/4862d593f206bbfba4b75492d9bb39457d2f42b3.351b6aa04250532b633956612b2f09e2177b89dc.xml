{"content":"---\ntitle: \"x:XData Intrinsic XAML Type | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"x:XData\"\n  - \"XData\"\n  - \"xXData\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:XData directive element\"\n  - \"XData in XAML [XAML Services]\"\n  - \"x:XData XAML directive element [XAML Services]\"\nms.assetid: 7ce209c2-621b-4977-b643-565f7e663534\ncaps.latest.revision: 17\nauthor: \"wadepickett\"\nms.author: \"wpickett\"\nmanager: \"wpickett\"\n---\n# x:XData Intrinsic XAML Type\nEnables placement of XML data islands within a XAML production. XML elements within `x:XData` should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace. `x:XData` can contain arbitrary well-formed XML.  \n  \n## XAML Object Element Usage  \n  \n```  \n<x:XData>  \n  <elementDataRoot>  \n    [elementData]  \n  </elementDataRoot>  \n</x:XData>  \n```  \n  \n## XAML Values  \n  \n|||  \n|-|-|  \n|`elementDataRoot`|The single root element of the enclosed data island. For most eventual consumers, XML that does not have a single root is considered invalid. In particular, a single root is required if the `x:XData` is intended as an XML data source for WPF or many other technologies that use XML sources for data binding.|  \n|`[elementData]`|Optional. XML that represents the XML data. Any number of elements can be contained as element data and nested elements can be contained in other elements; however, the general rules of XML apply.|  \n  \n## Remarks  \n The XML elements within an `x:XData` object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data.  \n  \n Programmatic access to XML data and the `x:XData` intrinsic XAML type is possible in .NET Framework XAML Services through the <xref:System.Windows.Markup.XData> class.  \n  \n## WPF Usage Notes  \n The `x:XData` object is primarily used as a child object of an <xref:System.Windows.Data.XmlDataProvider>, or alternatively, as the child object of the <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=fullName> property (in XAML, this is typically expressed in property element syntax).  \n  \n The data should typically redefine the base XML namespace within the data island to be a new default XML namespace (set to an empty string). This is easiest for simple data islands because the <xref:System.Windows.Data.Binding.XPath%2A> expressions that are used to reference and bind to the data can avoid inclusion of prefixes. More complex data islands might define multiple prefixes for the data and use a specific prefix for the XML namespace at the root. In this case, all <xref:System.Windows.Data.Binding.XPath%2A> expression references should include the appropriate namespace-mapped prefix. For more information, see [Data Binding Overview](../../../docs/framework/wpf/data/data-binding-overview.md).  \n  \n Technically, `x:XData` can be used as the content of any property of type <xref:System.Xml.Serialization.IXmlSerializable>. However, <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=fullName> is the only prominent implementation.  \n  \n## See Also  \n <xref:System.Windows.Data.XmlDataProvider>   \n [Data Binding Overview](../../../docs/framework/wpf/data/data-binding-overview.md)   \n [Binding Markup Extension](../../../docs/framework/wpf/advanced/binding-markup-extension.md)\n","nodes":[{"pos":[4,575],"nodes":[{"content":"x:XData Intrinsic XAML Type | Microsoft Docs","nodes":[{"pos":[0,44],"content":"x:XData Intrinsic XAML Type | Microsoft Docs","nodes":[{"content":"x:XData Intrinsic XAML Type | Microsoft Docs","pos":[0,44]}]}],"pos":[6,53],"yaml":true}],"content":"title: \"x:XData Intrinsic XAML Type | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"x:XData\"\n  - \"XData\"\n  - \"xXData\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:XData directive element\"\n  - \"XData in XAML [XAML Services]\"\n  - \"x:XData XAML directive element [XAML Services]\"\nms.assetid: 7ce209c2-621b-4977-b643-565f7e663534\ncaps.latest.revision: 17\nauthor: \"wadepickett\"\nms.author: \"wpickett\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[582,609],"content":"x:XData Intrinsic XAML Type","linkify":"x:XData Intrinsic XAML Type","nodes":[{"content":"x:XData Intrinsic XAML Type","pos":[0,27]}]},{"content":"Enables placement of XML data islands within a XAML production.","pos":[610,673]},{"content":"XML elements within <ph id=\"ph1\">`x:XData`</ph> should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace.","pos":[674,832],"source":" XML elements within `x:XData` should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace."},{"content":"<ph id=\"ph1\">`x:XData`</ph> can contain arbitrary well-formed XML.","pos":[833,881],"source":"`x:XData` can contain arbitrary well-formed XML."},{"pos":[890,915],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]},{"pos":[1029,1040],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"content":"The single root element of the enclosed data island.","pos":[1079,1131]},{"content":"For most eventual consumers, XML that does not have a single root is considered invalid.","pos":[1132,1220]},{"content":"In particular, a single root is required if the <ph id=\"ph1\">`x:XData`</ph> is intended as an XML data source for WPF or many other technologies that use XML sources for data binding.","pos":[1221,1386],"source":" In particular, a single root is required if the `x:XData` is intended as an XML data source for WPF or many other technologies that use XML sources for data binding."},{"content":"Optional.","pos":[1407,1416]},{"content":"XML that represents the XML data.","pos":[1417,1450]},{"content":"Any number of elements can be contained as element data and nested elements can be contained in other elements; however, the general rules of XML apply.","pos":[1451,1603]},{"pos":[1613,1620],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1624,1761],"content":"The XML elements within an <ph id=\"ph1\">`x:XData`</ph> object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data.","source":"The XML elements within an `x:XData` object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data."},{"pos":[1768,1935],"content":"Programmatic access to XML data and the <ph id=\"ph1\">`x:XData`</ph> intrinsic XAML type is possible in .NET Framework XAML Services through the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XData&gt;</ph> class.","source":"Programmatic access to XML data and the `x:XData` intrinsic XAML type is possible in .NET Framework XAML Services through the <xref:System.Windows.Markup.XData> class."},{"pos":[1944,1959],"content":"WPF Usage Notes","linkify":"WPF Usage Notes","nodes":[{"content":"WPF Usage Notes","pos":[0,15]}]},{"pos":[1963,2275],"content":"The <ph id=\"ph1\">`x:XData`</ph> object is primarily used as a child object of an <ph id=\"ph2\">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>, or alternatively, as the child object of the <ph id=\"ph3\">&lt;xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=fullName&gt;</ph> property (in XAML, this is typically expressed in property element syntax).","source":"The `x:XData` object is primarily used as a child object of an <xref:System.Windows.Data.XmlDataProvider>, or alternatively, as the child object of the <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=fullName> property (in XAML, this is typically expressed in property element syntax)."},{"content":"The data should typically redefine the base XML namespace within the data island to be a new default XML namespace (set to an empty string).","pos":[2282,2422]},{"content":"This is easiest for simple data islands because the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> expressions that are used to reference and bind to the data can avoid inclusion of prefixes.","pos":[2423,2611],"source":" This is easiest for simple data islands because the <xref:System.Windows.Data.Binding.XPath%2A> expressions that are used to reference and bind to the data can avoid inclusion of prefixes."},{"content":"More complex data islands might define multiple prefixes for the data and use a specific prefix for the XML namespace at the root.","pos":[2612,2742]},{"content":"In this case, all <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> expression references should include the appropriate namespace-mapped prefix.","pos":[2743,2882],"source":" In this case, all <xref:System.Windows.Data.Binding.XPath%2A> expression references should include the appropriate namespace-mapped prefix."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../../../docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[2883,2992],"source":" For more information, see [Data Binding Overview](../../../docs/framework/wpf/data/data-binding-overview.md)."},{"content":"Technically, <ph id=\"ph1\">`x:XData`</ph> can be used as the content of any property of type <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.","pos":[2999,3122],"source":"Technically, `x:XData` can be used as the content of any property of type <xref:System.Xml.Serialization.IXmlSerializable>."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=fullName&gt;</ph> is the only prominent implementation.","pos":[3123,3254],"source":" However, <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=fullName> is the only prominent implementation."},{"pos":[3263,3271],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>","pos":[3275,3317],"source":"<xref:System.Windows.Data.XmlDataProvider> "},{"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[3322,3405],"source":"[Data Binding Overview](../../../docs/framework/wpf/data/data-binding-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Binding Markup Extension<ept id=\"p1\">](../../../docs/framework/wpf/advanced/binding-markup-extension.md)</ept>","pos":[3409,3501],"source":"[Binding Markup Extension](../../../docs/framework/wpf/advanced/binding-markup-extension.md)"}]}