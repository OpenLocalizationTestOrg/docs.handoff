{"content":"---\ntitle: \"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: a958af40-f754-4409-85f9-7746978d4cb3\n---\n# How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)\nThis topic shows how to get the descendant elements of a child element with a particular name.  \n  \n The XPath expression is:  \n  \n `./Paragraph//Text/text()`  \n  \n## Example  \n This example simulates the problems of extracting text from an XML representation of a word processing document. It first selects all `Paragraph` elements, and then it selects all `Text` descendant elements of each `Paragraph` element. This doesn't select the descendant `Text` elements of the `Comment` element.  \n  \n```vb  \nDim root As XElement = _  \n    <Root>  \n        <Paragraph>  \n            <Text>This is the start of</Text>  \n        </Paragraph>  \n        <Comment>  \n            <Text>This comment is not part of the paragraph text.</Text>  \n        </Comment>  \n        <Paragraph>  \n            <Annotation Emphasis='true'>  \n                <Text> a sentence.</Text>  \n            </Annotation>  \n        </Paragraph>  \n        <Paragraph>  \n            <Text>  This is a second sentence.</Text>  \n        </Paragraph>  \n    </Root>  \n  \n' LINQ to XML query  \nDim str1 As String = _  \n    root.<Paragraph>...<Text>.Select(Function(ByVal s) s.Value). _  \n    Aggregate( _  \n        New StringBuilder(), _  \n        Function(ByVal s, ByVal i) s.Append(i), _  \n        Function(ByVal s) s.ToString())  \n  \n' XPath expression  \nDim str2 As String = DirectCast(root.XPathEvaluate(\"./Paragraph//Text/text()\"), IEnumerable) _  \n    .Cast(Of XText)().Select(Function(ByVal s) s.Value) _  \n    .Aggregate( _  \n        New StringBuilder(), _  \n        Function(ByVal s, ByVal i) s.Append(i), _  \n        Function(ByVal s) s.ToString())  \n  \nIf str1 = str2 Then  \n    Console.WriteLine(\"Results are identical\")  \nElse  \n    Console.WriteLine(\"Results differ\")  \nEnd If  \nConsole.WriteLine(str2)  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \nThis is the start of a sentence.  This is a second sentence.  \n```  \n  \n## See also\n\n- [LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)\n","nodes":[{"pos":[4,160],"embed":true,"restype":"x-metadata","content":"title: \"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: a958af40-f754-4409-85f9-7746978d4cb3","nodes":[{"content":"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)","nodes":[{"pos":[0,78],"content":"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)","pos":[0,78]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[167,245],"content":"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)","linkify":"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Descendants of a Child Element (XPath-LINQ to XML) (Visual Basic)","pos":[0,78]}]},{"content":"This topic shows how to get the descendant elements of a child element with a particular name.","pos":[246,340]},{"content":"The XPath expression is:","pos":[347,371]},{"pos":[413,420],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example simulates the problems of extracting text from an XML representation of a word processing document.","pos":[424,536]},{"content":"It first selects all <ph id=\"ph1\">`Paragraph`</ph> elements, and then it selects all <ph id=\"ph2\">`Text`</ph> descendant elements of each <ph id=\"ph3\">`Paragraph`</ph> element.","pos":[537,659],"source":" It first selects all `Paragraph` elements, and then it selects all `Text` descendant elements of each `Paragraph` element."},{"content":"This doesn't select the descendant <ph id=\"ph1\">`Text`</ph> elements of the <ph id=\"ph2\">`Comment`</ph> element.","pos":[660,736],"source":" This doesn't select the descendant `Text` elements of the `Comment` element."},{"content":"This example produces the following output:","pos":[2035,2078]},{"pos":[2189,2197],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2201,2334],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}