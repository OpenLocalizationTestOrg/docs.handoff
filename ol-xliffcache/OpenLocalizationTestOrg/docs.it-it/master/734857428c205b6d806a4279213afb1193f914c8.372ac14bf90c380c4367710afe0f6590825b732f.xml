{"content":"---\ntitle: \"ISymUnmanagedWriter::SetMethodSourceRange Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedWriter.SetMethodSourceRange\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedWriter::SetMethodSourceRange\"\nhelpviewer_keywords: \n  - \"SetMethodSourceRange method [.NET Framework debugging]\"\n  - \"ISymUnmanagedWriter::SetMethodSourceRange method [.NET Framework debugging]\"\nms.assetid: c698b86e-ace7-4b21-9549-f52d6a034959\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedWriter::SetMethodSourceRange Method\nSpecifies the true start and end of a method within a source file. Use this method to specify the extent of a method independently of the sequence points that exist within the method.  \n  \n## Syntax  \n  \n```  \nHRESULT SetMethodSourceRange(  \n    [in] ISymUnmanagedDocumentWriter  *startDoc,  \n    [in] ULONG32                      startLine,  \n    [in] ULONG32                      startColumn,  \n    [in] ISymUnmanagedDocumentWriter  *endDoc,  \n    [in] ULONG32                      endLine,  \n    [in] ULONG32                      endColumn);  \n```  \n  \n## Parameters  \n `startDoc`  \n [in] A pointer to the document containing the starting position.  \n  \n `startLine`  \n [in] The starting line number.  \n  \n `startColumn`  \n [in] The starting column.  \n  \n `endDoc`  \n [in] A pointer to the document containing the ending position.  \n  \n `endLine`  \n [in] The ending line number.  \n  \n `endColumn`  \n [in] The ending column number.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See also\n\n- [ISymUnmanagedWriter Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md)\n","nodes":[{"pos":[4,539],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedWriter::SetMethodSourceRange Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedWriter.SetMethodSourceRange\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedWriter::SetMethodSourceRange\"\nhelpviewer_keywords: \n  - \"SetMethodSourceRange method [.NET Framework debugging]\"\n  - \"ISymUnmanagedWriter::SetMethodSourceRange method [.NET Framework debugging]\"\nms.assetid: c698b86e-ace7-4b21-9549-f52d6a034959\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedWriter::SetMethodSourceRange Method","nodes":[{"pos":[0,48],"content":"ISymUnmanagedWriter::SetMethodSourceRange Method","nodes":[{"content":"ISymUnmanagedWriter::SetMethodSourceRange Method","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[546,594],"content":"ISymUnmanagedWriter::SetMethodSourceRange Method","linkify":"ISymUnmanagedWriter::SetMethodSourceRange Method","nodes":[{"content":"ISymUnmanagedWriter::SetMethodSourceRange Method","pos":[0,48]}]},{"content":"Specifies the true start and end of a method within a source file.","pos":[595,661]},{"content":"Use this method to specify the extent of a method independently of the sequence points that exist within the method.","pos":[662,778]},{"pos":[787,793],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1154,1164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the document containing the starting position.","pos":[1182,1246]},{"content":"[in] The starting line number.","pos":[1268,1298]},{"content":"[in] The starting column.","pos":[1322,1347]},{"content":"[in] A pointer to the document containing the ending position.","pos":[1366,1428]},{"content":"[in] The ending line number.","pos":[1448,1476]},{"content":"[in] The ending column number.","pos":[1498,1528]},{"pos":[1537,1549],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[1553,1625]},{"pos":[1634,1646],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1650,1682],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[1691,1699],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1703,1821],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedWriter Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md)</ept>","source":"[ISymUnmanagedWriter Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md)"}]}