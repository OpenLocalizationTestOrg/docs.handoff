{"content":"---\ntitle: \"Default Values Table (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"constructors [C#], return values\"\n  - \"keywords [C#], new\"\n  - \"default constructor [C#]\"\n  - \"defaults [C#]\"\n  - \"value types [C#], initializing\"\n  - \"variables [C#], value types\"\n  - \"constructors [C#], default constructor\"\n  - \"types [C#], default constructor return values\"\nms.assetid: 4af2c1df-9e3a-48c1-83ac-b192986fc5bc\ncaps.latest.revision: 12\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Default Values Table (C# Reference)\nThe following table shows the default values of value types returned by the default constructors. Default constructors are invoked by using the `new` operator, as follows:  \n  \n```  \nint myInt = new int();  \n```  \n  \n The preceding statement has the same effect as the following statement:  \n  \n```  \nint myInt = 0;  \n```  \n  \n Remember that using uninitialized variables in C# is not allowed.  \n  \n|Value type|Default value|  \n|----------------|-------------------|  \n|[bool](../../../csharp/language-reference/keywords/bool.md)|`false`|  \n|[byte](../../../csharp/language-reference/keywords/byte.md)|0|  \n|[char](../../../csharp/language-reference/keywords/char.md)|'\\0'|  \n|[decimal](../../../csharp/language-reference/keywords/decimal.md)|0.0M|  \n|[double](../../../csharp/language-reference/keywords/double.md)|0.0D|  \n|[enum](../../../csharp/language-reference/keywords/enum.md)|The value produced by the expression (E)0, where E is the enum identifier.|  \n|[float](../../../csharp/language-reference/keywords/float.md)|0.0F|  \n|[int](../../../csharp/language-reference/keywords/int.md)|0|  \n|[long](../../../csharp/language-reference/keywords/long.md)|0L|  \n|[sbyte](../../../csharp/language-reference/keywords/sbyte.md)|0|  \n|[short](../../../csharp/language-reference/keywords/short.md)|0|  \n|[struct](../../../csharp/language-reference/keywords/struct.md)|The value produced by setting all value-type fields to their default values and all reference-type fields to `null`.|  \n|[uint](../../../csharp/language-reference/keywords/uint.md)|0|  \n|[ulong](../../../csharp/language-reference/keywords/ulong.md)|0|  \n|[ushort](../../../csharp/language-reference/keywords/ushort.md)|0|  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Value Types Table](../../../csharp/language-reference/keywords/value-types-table.md)   \n [Value Types](../../../csharp/language-reference/keywords/value-types.md)   \n [Built-In Types Table](../../../csharp/language-reference/keywords/built-in-types-table.md)   \n [Reference Tables for Types](../../../csharp/language-reference/keywords/reference-tables-for-types.md)","nodes":[{"pos":[12,64],"content":"Default Values Table (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Default Values Table (C# Reference) | Microsoft Docs","pos":[0,52]}]},{"pos":[818,853],"content":"Default Values Table (C# Reference)","linkify":"Default Values Table (C# Reference)","nodes":[{"content":"Default Values Table (C# Reference)","pos":[0,35]}]},{"content":"The following table shows the default values of value types returned by the default constructors.","pos":[854,951]},{"content":"Default constructors are invoked by using the <ph id=\"ph1\">`new`</ph> operator, as follows:","pos":[952,1025],"source":" Default constructors are invoked by using the `new` operator, as follows:"},{"content":"The preceding statement has the same effect as the following statement:","pos":[1072,1143]},{"content":"Remember that using uninitialized variables in C# is not allowed.","pos":[1182,1247]},{"content":"Value type","pos":[1254,1264]},{"content":"Default value","pos":[1265,1278]},{"pos":[1324,1383],"content":"<bpt id=\"p1\">[</bpt>bool<ept id=\"p1\">](../../../csharp/language-reference/keywords/bool.md)</ept>","source":"[bool](../../../csharp/language-reference/keywords/bool.md)"},{"pos":[1396,1455],"content":"<bpt id=\"p1\">[</bpt>byte<ept id=\"p1\">](../../../csharp/language-reference/keywords/byte.md)</ept>","source":"[byte](../../../csharp/language-reference/keywords/byte.md)"},{"content":"0","pos":[1456,1457]},{"pos":[1462,1521],"content":"<bpt id=\"p1\">[</bpt>char<ept id=\"p1\">](../../../csharp/language-reference/keywords/char.md)</ept>","source":"[char](../../../csharp/language-reference/keywords/char.md)"},{"content":"'\\0'","pos":[1522,1526]},{"pos":[1531,1596],"content":"<bpt id=\"p1\">[</bpt>decimal<ept id=\"p1\">](../../../csharp/language-reference/keywords/decimal.md)</ept>","source":"[decimal](../../../csharp/language-reference/keywords/decimal.md)"},{"content":"0.0M","pos":[1597,1601]},{"pos":[1606,1669],"content":"<bpt id=\"p1\">[</bpt>double<ept id=\"p1\">](../../../csharp/language-reference/keywords/double.md)</ept>","source":"[double](../../../csharp/language-reference/keywords/double.md)"},{"content":"0.0D","pos":[1670,1674]},{"pos":[1679,1738],"content":"<bpt id=\"p1\">[</bpt>enum<ept id=\"p1\">](../../../csharp/language-reference/keywords/enum.md)</ept>","source":"[enum](../../../csharp/language-reference/keywords/enum.md)"},{"content":"The value produced by the expression (E)0, where E is the enum identifier.","pos":[1739,1813]},{"pos":[1818,1879],"content":"<bpt id=\"p1\">[</bpt>float<ept id=\"p1\">](../../../csharp/language-reference/keywords/float.md)</ept>","source":"[float](../../../csharp/language-reference/keywords/float.md)"},{"content":"0.0F","pos":[1880,1884]},{"pos":[1889,1946],"content":"<bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept>","source":"[int](../../../csharp/language-reference/keywords/int.md)"},{"content":"0","pos":[1947,1948]},{"pos":[1953,2012],"content":"<bpt id=\"p1\">[</bpt>long<ept id=\"p1\">](../../../csharp/language-reference/keywords/long.md)</ept>","source":"[long](../../../csharp/language-reference/keywords/long.md)"},{"content":"0L","pos":[2013,2015]},{"pos":[2020,2081],"content":"<bpt id=\"p1\">[</bpt>sbyte<ept id=\"p1\">](../../../csharp/language-reference/keywords/sbyte.md)</ept>","source":"[sbyte](../../../csharp/language-reference/keywords/sbyte.md)"},{"content":"0","pos":[2082,2083]},{"pos":[2088,2149],"content":"<bpt id=\"p1\">[</bpt>short<ept id=\"p1\">](../../../csharp/language-reference/keywords/short.md)</ept>","source":"[short](../../../csharp/language-reference/keywords/short.md)"},{"content":"0","pos":[2150,2151]},{"pos":[2156,2219],"content":"<bpt id=\"p1\">[</bpt>struct<ept id=\"p1\">](../../../csharp/language-reference/keywords/struct.md)</ept>","source":"[struct](../../../csharp/language-reference/keywords/struct.md)"},{"pos":[2220,2336],"content":"The value produced by setting all value-type fields to their default values and all reference-type fields to <ph id=\"ph1\">`null`</ph>.","source":"The value produced by setting all value-type fields to their default values and all reference-type fields to `null`."},{"pos":[2341,2400],"content":"<bpt id=\"p1\">[</bpt>uint<ept id=\"p1\">](../../../csharp/language-reference/keywords/uint.md)</ept>","source":"[uint](../../../csharp/language-reference/keywords/uint.md)"},{"content":"0","pos":[2401,2402]},{"pos":[2407,2468],"content":"<bpt id=\"p1\">[</bpt>ulong<ept id=\"p1\">](../../../csharp/language-reference/keywords/ulong.md)</ept>","source":"[ulong](../../../csharp/language-reference/keywords/ulong.md)"},{"content":"0","pos":[2469,2470]},{"pos":[2475,2538],"content":"<bpt id=\"p1\">[</bpt>ushort<ept id=\"p1\">](../../../csharp/language-reference/keywords/ushort.md)</ept>","source":"[ushort](../../../csharp/language-reference/keywords/ushort.md)"},{"content":"0","pos":[2539,2540]},{"pos":[2550,2558],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2562,2622],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2625,2693],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Value Types Table<ept id=\"p1\">](../../../csharp/language-reference/keywords/value-types-table.md)</ept><ph id=\"ph1\"> </ph>","pos":[2696,2783],"source":" [Value Types Table](../../../csharp/language-reference/keywords/value-types-table.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Value Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/value-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2786,2861],"source":" [Value Types](../../../csharp/language-reference/keywords/value-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Built-In Types Table<ept id=\"p1\">](../../../csharp/language-reference/keywords/built-in-types-table.md)</ept><ph id=\"ph1\"> </ph>","pos":[2864,2957],"source":" [Built-In Types Table](../../../csharp/language-reference/keywords/built-in-types-table.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Reference Tables for Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/reference-tables-for-types.md)</ept>","pos":[2960,3064],"source":" [Reference Tables for Types](../../../csharp/language-reference/keywords/reference-tables-for-types.md)"}]}