{"content":"---\ntitle: \"explicit keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 08/24/2018\nf1_keywords: \n  - \"explicit_CSharpKeyword\"\n  - \"explicit\"\nhelpviewer_keywords: \n  - \"explicit keyword [C#]\"\nms.assetid: cfb8f42a-e411-4db2-af9b-796b05644846\n---\n# explicit (C# Reference)\n\nThe `explicit` keyword declares a user-defined type conversion operator that must be invoked with a cast.\n\nThe following example defines the operator that converts from a `Fahrenheit` class to a `Celsius` class. The operator must be defined either inside a `Fahrenheit` class or a `Celsius` class:\n\n[!code-csharp[csrefKeywordsConversion#2](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsConversion/CS/csrefKeywordsConversion.cs#2)]\n\nYou invoke the defined conversion operator with a cast, as the following example shows:\n\n[!code-csharp[csrefKeywordsConversion#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsConversion/CS/csrefKeywordsConversion.cs#3)]\n\nThe conversion operator converts from a source type to a target type. The source type provides the conversion operator. Unlike implicit conversion, explicit conversion operators must be invoked by means of a cast. If a conversion operation can cause exceptions or lose information, you should mark it `explicit`. This prevents the compiler from silently invoking the conversion operation with possibly unforeseen consequences.\n\nOmitting the cast results in compile-time error CS0266.\n\nFor more information, see [Using Conversion Operators](../../programming-guide/statements-expressions-operators/using-conversion-operators.md).\n\n## Example\n\nThe following example provides a `Fahrenheit` and a `Celsius` class, each of which provides an explicit conversion operator to the other class.\n\n[!code-csharp[csrefKeywordsConversion#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsConversion/CS/csrefKeywordsConversion.cs#1)]\n\n## Example\n\nThe following example defines a struct, `Digit`, that represents a single decimal digit. An operator is defined for conversions from `byte` to `Digit`, but because not all bytes can be converted to a `Digit`, the conversion is explicit.\n\n[!code-csharp[csrefKeywordsConversion#4](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsConversion/CS/csrefKeywordsConversion.cs#4)]\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [implicit](implicit.md)\n- [operator (C# Reference)](operator.md)\n- [How to: Implement User-Defined Conversions Between Structs](../../programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md)\n- [Chained user-defined explicit conversions in C#](https://blogs.msdn.microsoft.com/ericlippert/2007/04/16/chained-user-defined-explicit-conversions-in-c/)\n","nodes":[{"pos":[4,242],"embed":true,"restype":"x-metadata","content":"title: \"explicit keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 08/24/2018\nf1_keywords: \n  - \"explicit_CSharpKeyword\"\n  - \"explicit\"\nhelpviewer_keywords: \n  - \"explicit keyword [C#]\"\nms.assetid: cfb8f42a-e411-4db2-af9b-796b05644846","nodes":[{"content":"explicit keyword - C# Reference","nodes":[{"pos":[0,31],"content":"explicit keyword - C# Reference","nodes":[{"content":"explicit keyword - C# Reference","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[249,272],"content":"explicit (C# Reference)","linkify":"explicit (C# Reference)","nodes":[{"content":"explicit (C# Reference)","pos":[0,23]}]},{"pos":[274,379],"content":"The <ph id=\"ph1\">`explicit`</ph> keyword declares a user-defined type conversion operator that must be invoked with a cast.","source":"The `explicit` keyword declares a user-defined type conversion operator that must be invoked with a cast."},{"content":"The following example defines the operator that converts from a <ph id=\"ph1\">`Fahrenheit`</ph> class to a <ph id=\"ph2\">`Celsius`</ph> class.","pos":[381,485],"source":"The following example defines the operator that converts from a `Fahrenheit` class to a `Celsius` class."},{"content":"The operator must be defined either inside a <ph id=\"ph1\">`Fahrenheit`</ph> class or a <ph id=\"ph2\">`Celsius`</ph> class:","pos":[486,571],"source":" The operator must be defined either inside a `Fahrenheit` class or a `Celsius` class:"},{"content":"You invoke the defined conversion operator with a cast, as the following example shows:","pos":[720,807]},{"content":"The conversion operator converts from a source type to a target type.","pos":[956,1025]},{"content":"The source type provides the conversion operator.","pos":[1026,1075]},{"content":"Unlike implicit conversion, explicit conversion operators must be invoked by means of a cast.","pos":[1076,1169]},{"content":"If a conversion operation can cause exceptions or lose information, you should mark it <ph id=\"ph1\">`explicit`</ph>.","pos":[1170,1268],"source":" If a conversion operation can cause exceptions or lose information, you should mark it `explicit`."},{"content":"This prevents the compiler from silently invoking the conversion operation with possibly unforeseen consequences.","pos":[1269,1382]},{"content":"Omitting the cast results in compile-time error CS0266.","pos":[1384,1439]},{"pos":[1441,1584],"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Conversion Operators<ept id=\"p1\">](../../programming-guide/statements-expressions-operators/using-conversion-operators.md)</ept>.","source":"For more information, see [Using Conversion Operators](../../programming-guide/statements-expressions-operators/using-conversion-operators.md)."},{"pos":[1589,1596],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1598,1741],"content":"The following example provides a <ph id=\"ph1\">`Fahrenheit`</ph> and a <ph id=\"ph2\">`Celsius`</ph> class, each of which provides an explicit conversion operator to the other class.","source":"The following example provides a `Fahrenheit` and a `Celsius` class, each of which provides an explicit conversion operator to the other class."},{"pos":[1893,1900],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example defines a struct, <ph id=\"ph1\">`Digit`</ph>, that represents a single decimal digit.","pos":[1902,1990],"source":"The following example defines a struct, `Digit`, that represents a single decimal digit."},{"content":"An operator is defined for conversions from <ph id=\"ph1\">`byte`</ph> to <ph id=\"ph2\">`Digit`</ph>, but because not all bytes can be converted to a <ph id=\"ph3\">`Digit`</ph>, the conversion is explicit.","pos":[1991,2138],"source":" An operator is defined for conversions from `byte` to `Digit`, but because not all bytes can be converted to a `Digit`, the conversion is explicit."},{"pos":[2290,2315],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[2381,2389],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2393,2420],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[2423,2479],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[2482,2505],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2508,2531],"content":"<bpt id=\"p1\">[</bpt>implicit<ept id=\"p1\">](implicit.md)</ept>","source":"[implicit](implicit.md)"},{"pos":[2534,2572],"content":"<bpt id=\"p1\">[</bpt>operator (C# Reference)<ept id=\"p1\">](operator.md)</ept>","source":"[operator (C# Reference)](operator.md)"},{"pos":[2575,2754],"content":"<bpt id=\"p1\">[</bpt>How to: Implement User-Defined Conversions Between Structs<ept id=\"p1\">](../../programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md)</ept>","source":"[How to: Implement User-Defined Conversions Between Structs](../../programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md)"},{"pos":[2757,2911],"content":"<bpt id=\"p1\">[</bpt>Chained user-defined explicit conversions in C#<ept id=\"p1\">](https://blogs.msdn.microsoft.com/ericlippert/2007/04/16/chained-user-defined-explicit-conversions-in-c/)</ept>","source":"[Chained user-defined explicit conversions in C#](https://blogs.msdn.microsoft.com/ericlippert/2007/04/16/chained-user-defined-explicit-conversions-in-c/)"}]}