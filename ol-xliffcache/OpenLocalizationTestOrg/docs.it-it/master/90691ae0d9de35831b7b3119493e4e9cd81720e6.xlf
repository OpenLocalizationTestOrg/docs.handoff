<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="explicit-numeric-conversions-table.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90691ae0d9de35831b7b3119493e4e9cd81720e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\explicit-numeric-conversions-table.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f971023024216eb2dbf8c0a68961595e510a09fe</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e21fbc8d6bf43d2da96291d5def0c17a981495dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Explicit numeric conversions table - C# Reference</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Explicit numeric conversions table (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows the predefined explicit conversions between .NET numeric types for which there is no <bpt id="p1">[</bpt>implicit conversion<ept id="p1">](implicit-numeric-conversions-table.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>From</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sbyte<ept id="p1">](sbyte.md)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`byte`</ph>, <ph id="ph2">`ushort`</ph>, <ph id="ph3">`uint`</ph>, <ph id="ph4">`ulong`</ph>, or <ph id="ph5">`char`</ph></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>byte<ept id="p1">](byte.md)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph> or <ph id="ph2">`char`</ph></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>short<ept id="p1">](short.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`ushort`</ph>, <ph id="ph4">`uint`</ph>, <ph id="ph5">`ulong`</ph>, or <ph id="ph6">`char`</ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ushort<ept id="p1">](ushort.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, or <ph id="ph4">`char`</ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>int<ept id="p1">](int.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`uint`</ph>, <ph id="ph6">`ulong`</ph>,or <ph id="ph7">`char`</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uint<ept id="p1">](uint.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`int`</ph>, or <ph id="ph6">`char`</ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>long<ept id="p1">](long.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`uint`</ph>, <ph id="ph7">`ulong`</ph>, or <ph id="ph8">`char`</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ulong<ept id="p1">](ulong.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`uint`</ph>, <ph id="ph7">`long`</ph>, or <ph id="ph8">`char`</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>char<ept id="p1">](char.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, or <ph id="ph3">`short`</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>float<ept id="p1">](float.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`uint`</ph>, <ph id="ph7">`long`</ph>, <ph id="ph8">`ulong`</ph>, <ph id="ph9">`char`</ph>,or <ph id="ph10">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>double<ept id="p1">](double.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`uint`</ph>, <ph id="ph7">`long`</ph>, <ph id="ph8">`ulong`</ph>, <ph id="ph9">`char`</ph>, <ph id="ph10">`float`</ph>,or <ph id="ph11">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>decimal<ept id="p1">](decimal.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sbyte`</ph>, <ph id="ph2">`byte`</ph>, <ph id="ph3">`short`</ph>, <ph id="ph4">`ushort`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`uint`</ph>, <ph id="ph7">`long`</ph>, <ph id="ph8">`ulong`</ph>, <ph id="ph9">`char`</ph>, <ph id="ph10">`float`</ph>, or <ph id="ph11">`double`</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The explicit numeric conversion may cause loss of precision or result in throwing an exception, typically an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you convert a value of an integral type to another integral type, the result depends on the overflow <bpt id="p1">[</bpt>checking context<ept id="p1">](checked-and-unchecked.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In a checked context, the conversion succeeds if the source value is within the range of the destination type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In an unchecked context, the conversion always succeeds, and proceeds as follows:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the source type is larger than the destination type, then the source value is truncated by discarding its "extra" most significant bits.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The result is then treated as a value of the destination type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the source type is smaller than the destination type, then the source value is either sign-extended or zero-extended so that it is the same size as the destination type.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sign-extension is used if the source type is signed; zero-extension is used if the source type is unsigned.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result is then treated as a value of the destination type.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the source type is the same size as the destination type, then the source value is treated as a value of the destination type.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When you convert a <ph id="ph1">`decimal`</ph> value to an integral type, this value is rounded towards zero to the nearest integral value.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the resulting integral value is outside the range of the destination type, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When you convert a <ph id="ph1">`double`</ph> or <ph id="ph2">`float`</ph> value to an integral type, this value is rounded towards zero to the nearest integral value.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the resulting integral value is outside the range of the destination type, the result depends on the overflow <bpt id="p1">[</bpt>checking context<ept id="p1">](checked-and-unchecked.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In a checked context, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown, while in an unchecked context, the result is an unspecified value of the destination type.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When you convert <ph id="ph1">`double`</ph> to <ph id="ph2">`float`</ph>, the <ph id="ph3">`double`</ph> value is rounded to the nearest <ph id="ph4">`float`</ph> value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`double`</ph> value is too small or too large to fit into the destination type, the result will be zero or infinity.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you convert <ph id="ph1">`float`</ph> or <ph id="ph2">`double`</ph> to <ph id="ph3">`decimal`</ph>, the source value is converted to <ph id="ph4">`decimal`</ph> representation and rounded to the nearest number after the 28th decimal place if required.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Depending on the value of the source value, one of the following results may occur:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the source value is too small to be represented as a <ph id="ph1">`decimal`</ph>, the result becomes zero.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the source value is NaN (not a number), infinity, or too large to be represented as a <ph id="ph1">`decimal`</ph>, an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When you convert <ph id="ph1">`decimal`</ph> to <ph id="ph2">`float`</ph> or <ph id="ph3">`double`</ph>, the <ph id="ph4">`decimal`</ph> value is rounded to the nearest <ph id="ph5">`double`</ph> or <ph id="ph6">`float`</ph> value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about explicit conversions, see the <bpt id="p1">[</bpt>Explicit conversions<ept id="p1">](~/_csharplang/spec/conversions.md#explicit-conversions)</ept> section of the <bpt id="p2">[</bpt>C# language specification<ept id="p2">](../language-specification/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../index.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../programming-guide/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Casting and type conversions<ept id="p1">](../../programming-guide/types/casting-and-type-conversions.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>() Operator<ept id="p1">](../operators/invocation-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Integral types table<ept id="p1">](integral-types-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Floating-point types table<ept id="p1">](floating-point-types-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Built-in types table<ept id="p1">](built-in-types-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implicit numeric conversions table<ept id="p1">](implicit-numeric-conversions-table.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>