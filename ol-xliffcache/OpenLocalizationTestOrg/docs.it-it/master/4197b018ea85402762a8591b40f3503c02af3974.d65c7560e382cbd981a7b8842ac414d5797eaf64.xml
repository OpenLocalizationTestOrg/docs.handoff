{"content":"---\ntitle: \"ICorDebugILCode2::GetInstrumentedILMap Method\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"cpp\"\napi_name: \n  - \"ICorDebugILCode2.GetInstrumentedILMap\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nms.assetid: 7a4e3085-8f95-40ef-a4be-7d6146f47ce2\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# ICorDebugILCode2::GetInstrumentedILMap Method\n[Supported in the .NET Framework 4.5.2 and later versions]  \n  \n Returns a map from profiler-instrumented intermediate language (IL) offsets to original method IL offsets for this instance.  \n  \n## Syntax  \n  \n```cpp\nHRESULT GetInstrumentedILMap(  \n   [in] ULONG32 cMap,  \n   [out] ULONG32 *pcMap,  \n   [out, size_is(cMap), length_is(*pcMap)] COR_IL_MAP map[]  \n);  \n```  \n  \n## Parameters  \n cMap  \n [in] The storage capacity of the `map` array. See the Remarks section for more information.  \n  \n pcMap  \n [out] The number of COR_IL_MAP values written to the map array.  \n  \n map  \n [out] An array of COR_IL_MAP values that provide information on mappings from profiler-instrumented IL to the IL of the original method.  \n  \n## Remarks  \n If the profiler sets the mapping by calling the [ICorProfilerInfo::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilinstrumentedcodemap-method.md) method, the debugger can call this method to retrieve the mapping and to use the mapping internally when calculating IL offsets for stack traces and variable lifetimes.  \n  \n If `cMap` is 0 and `pcMap` is non-**null**, `pcMap` is set to the number of available COR_IL_MAP values. If `cMap` is non-zero, it represents the storage capacity of the `map` array. When the method returns, `map` contains a maximum of `cMap` items, and `pcMap` is set to the number of COR_IL_MAP values actually written to the `map` array.  \n  \n If the IL hasn't been instrumented or the mapping wasn't provided by a profiler, this method returns `S_OK` and sets `pcMap` to 0.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]  \n  \n## See also\n\n- [ICorProfilerInfo::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilinstrumentedcodemap-method.md)\n- [ICorDebugILCode2 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode2-interface.md)\n- [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)\n","nodes":[{"pos":[4,327],"embed":true,"restype":"x-metadata","content":"title: \"ICorDebugILCode2::GetInstrumentedILMap Method\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"cpp\"\napi_name: \n  - \"ICorDebugILCode2.GetInstrumentedILMap\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nms.assetid: 7a4e3085-8f95-40ef-a4be-7d6146f47ce2\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"ICorDebugILCode2::GetInstrumentedILMap Method","nodes":[{"pos":[0,45],"content":"ICorDebugILCode2::GetInstrumentedILMap Method","nodes":[{"content":"ICorDebugILCode2::GetInstrumentedILMap Method","pos":[0,45]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[334,379],"content":"ICorDebugILCode2::GetInstrumentedILMap Method","linkify":"ICorDebugILCode2::GetInstrumentedILMap Method","nodes":[{"content":"ICorDebugILCode2::GetInstrumentedILMap Method","pos":[0,45]}]},{"content":"[Supported in the .NET Framework 4.5.2 and later versions]","pos":[380,438]},{"content":"Returns a map from profiler-instrumented intermediate language (IL) offsets to original method IL offsets for this instance.","pos":[445,569]},{"pos":[578,584],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[759,769],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cMap","pos":[773,777]},{"content":"[in] The storage capacity of the <ph id=\"ph1\">`map`</ph> array.","pos":[781,826],"source":"[in] The storage capacity of the `map` array."},{"content":"See the Remarks section for more information.","pos":[827,872]},{"content":"pcMap","pos":[879,884]},{"content":"[out] The number of COR_IL_MAP values written to the map array.","pos":[888,951]},{"content":"map","pos":[958,961]},{"content":"[out] An array of COR_IL_MAP values that provide information on mappings from profiler-instrumented IL to the IL of the original method.","pos":[965,1101]},{"pos":[1110,1117],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1121,1486],"content":"If the profiler sets the mapping by calling the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetILInstrumentedCodeMap<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilinstrumentedcodemap-method.md)</ept> method, the debugger can call this method to retrieve the mapping and to use the mapping internally when calculating IL offsets for stack traces and variable lifetimes.","source":"If the profiler sets the mapping by calling the [ICorProfilerInfo::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilinstrumentedcodemap-method.md) method, the debugger can call this method to retrieve the mapping and to use the mapping internally when calculating IL offsets for stack traces and variable lifetimes."},{"content":"If <ph id=\"ph1\">`cMap`</ph> is 0 and <ph id=\"ph2\">`pcMap`</ph> is non-<bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept>, <ph id=\"ph3\">`pcMap`</ph> is set to the number of available COR_IL_MAP values.","pos":[1493,1597],"source":"If `cMap` is 0 and `pcMap` is non-**null**, `pcMap` is set to the number of available COR_IL_MAP values."},{"content":"If <ph id=\"ph1\">`cMap`</ph> is non-zero, it represents the storage capacity of the <ph id=\"ph2\">`map`</ph> array.","pos":[1598,1675],"source":" If `cMap` is non-zero, it represents the storage capacity of the `map` array."},{"content":"When the method returns, <ph id=\"ph1\">`map`</ph> contains a maximum of <ph id=\"ph2\">`cMap`</ph> items, and <ph id=\"ph3\">`pcMap`</ph> is set to the number of COR_IL_MAP values actually written to the <ph id=\"ph4\">`map`</ph> array.","pos":[1676,1833],"source":" When the method returns, `map` contains a maximum of `cMap` items, and `pcMap` is set to the number of COR_IL_MAP values actually written to the `map` array."},{"pos":[1840,1970],"content":"If the IL hasn't been instrumented or the mapping wasn't provided by a profiler, this method returns <ph id=\"ph1\">`S_OK`</ph> and sets <ph id=\"ph2\">`pcMap`</ph> to 0.","source":"If the IL hasn't been instrumented or the mapping wasn't provided by a profiler, this method returns `S_OK` and sets `pcMap` to 0."},{"pos":[1979,1991],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1995,2099],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2106,2142],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2149,2174],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2181,2291],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]"},{"pos":[2300,2308],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2312,2460],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetILInstrumentedCodeMap<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilinstrumentedcodemap-method.md)</ept>","source":"[ICorProfilerInfo::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilinstrumentedcodemap-method.md)"},{"pos":[2463,2573],"content":"<bpt id=\"p1\">[</bpt>ICorDebugILCode2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode2-interface.md)</ept>","source":"[ICorDebugILCode2 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode2-interface.md)"},{"pos":[2576,2674],"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}