{"content":"---\ntitle: \"Type parameters or types constructed with type parameters are not allowed in attribute arguments\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"BC32079\"\n  - \"vbc32079\"\nhelpviewer_keywords: \n  - \"BC32079\"\nms.assetid: 93eb59bd-e7db-4f73-a37f-405a83df48c1\n---\n# Type parameters or types constructed with type parameters are not allowed in attribute arguments\nAn attribute is applied using an argument that is either a type parameter or is constructed using a type parameter.  \n  \n Visual Basic and the .NET Framework do not currently support any combination of attributes and generic types. This means the following limitations apply:  \n  \n-   An attribute cannot be a generic type or be declared within a generic type.  \n  \n-   An attribute cannot inherit from a generic class, nor can a generic class inherit from an attribute.  \n  \n-   When you apply an attribute, you cannot supply an argument that is any of the following:  \n  \n    -   A generic type,  \n  \n    -   A type constructed from a generic type,  \n  \n    -   A type parameter of a containing type, or  \n  \n    -   A type constructed from a type parameter of a containing type.  \n  \n **Error ID:** BC32079  \n  \n## To correct this error  \n  \n-   Reconstruct the arguments supplied to the attribute so that they do not include any type parameters or any type constructed from a type parameter.  \n  \n## See also\n\n- <xref:System.Attribute>\n\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../visual-basic/language-reference/statements/type-list.md)\n","nodes":[{"pos":[4,257],"embed":true,"restype":"x-metadata","content":"title: \"Type parameters or types constructed with type parameters are not allowed in attribute arguments\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"BC32079\"\n  - \"vbc32079\"\nhelpviewer_keywords: \n  - \"BC32079\"\nms.assetid: 93eb59bd-e7db-4f73-a37f-405a83df48c1","nodes":[{"content":"Type parameters or types constructed with type parameters are not allowed in attribute arguments","nodes":[{"pos":[0,96],"content":"Type parameters or types constructed with type parameters are not allowed in attribute arguments","nodes":[{"content":"Type parameters or types constructed with type parameters are not allowed in attribute arguments","pos":[0,96]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[264,360],"content":"Type parameters or types constructed with type parameters are not allowed in attribute arguments","linkify":"Type parameters or types constructed with type parameters are not allowed in attribute arguments","nodes":[{"content":"Type parameters or types constructed with type parameters are not allowed in attribute arguments","pos":[0,96]}]},{"content":"An attribute is applied using an argument that is either a type parameter or is constructed using a type parameter.","pos":[361,476]},{"content":"Visual Basic and the .NET Framework do not currently support any combination of attributes and generic types.","pos":[483,592]},{"content":"This means the following limitations apply:","pos":[593,636]},{"content":"An attribute cannot be a generic type or be declared within a generic type.","pos":[646,721]},{"content":"An attribute cannot inherit from a generic class, nor can a generic class inherit from an attribute.","pos":[731,831]},{"content":"When you apply an attribute, you cannot supply an argument that is any of the following:","pos":[841,929]},{"content":"A generic type,","pos":[943,958]},{"content":"A type constructed from a generic type,","pos":[972,1011]},{"content":"A type parameter of a containing type, or","pos":[1025,1066]},{"content":"A type constructed from a type parameter of a containing type.","pos":[1080,1142]},{"pos":[1149,1170],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32079","source":"**Error ID:** BC32079"},{"pos":[1179,1200],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Reconstruct the arguments supplied to the attribute so that they do not include any type parameters or any type constructed from a type parameter.","pos":[1210,1356]},{"pos":[1365,1373],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1404,1519],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[1522,1596],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../visual-basic/language-reference/statements/type-list.md)"}]}