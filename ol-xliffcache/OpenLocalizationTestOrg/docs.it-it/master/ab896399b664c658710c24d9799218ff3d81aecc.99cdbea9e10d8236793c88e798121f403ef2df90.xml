{"content":"---\ntitle: \"XML Comment Literal (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.XmlLiteralComment\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"comment literal [Visual Basic]\"\n  - \"XML comments, adding [Visual Basic]\"\n  - \"XML comment literal [Visual Basic]\"\n  - \"XML literals [Visual Basic], comment\"\nms.assetid: 634c1cee-5e01-48d0-88d7-2dd55e4a9e52\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# XML Comment Literal (Visual Basic)\nA literal representing an <xref:System.Xml.Linq.XComment> object.  \n  \n## Syntax  \n  \n```  \n<!-- content -->  \n```  \n  \n## Parts  \n  \n|Term|Definition|  \n|---|---|  \n|`<!--`|Required. Denotes the start of the XML comment.|  \n|`content`|Required. Text to appear in the XML comment. Cannot contain a series of two hyphens (--) or end with a hyphen adjacent to the closing tag.|  \n|`-->`|Required. Denotes the end of the XML comment.|  \n  \n## Return Value  \n An <xref:System.Xml.Linq.XComment> object.  \n  \n## Remarks  \n XML comment literals do not contain document content; they contain information about the document. The XML comment section ends with the sequence \"-->\". This implies the following points:  \n  \n-   You cannot use an embedded expression in an XML comment literal because the embedded expression delimiters are valid XML comment content.  \n  \n-   XML comment sections cannot be nested, because `content` cannot contain the value \"-->\".  \n  \n You can assign an XML comment literal to a variable, or you can include it in an XML element literal.  \n  \n> [!NOTE]\n>  An XML literal can span multiple lines without using line continuation characters. This feature enables you to copy content from an XML document and paste it directly into a [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] program.  \n  \n The [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] compiler converts the XML comment literal to a call to the <xref:System.Xml.Linq.XComment.%23ctor%2A> constructor.  \n  \n## Example  \n The following example creates an XML comment that contains the text \"This is a comment\".  \n  \n [!code-vb[VbXMLSamples#9](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-comment-literal_1.vb)]  \n  \n## See Also  \n <xref:System.Xml.Linq.XComment>   \n [XML Element Literal](../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)   \n [XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)   \n [Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)","nodes":[{"pos":[4,742],"nodes":[{"content":"XML Comment Literal (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,51],"content":"XML Comment Literal (Visual Basic) | Microsoft Docs","nodes":[{"content":"XML Comment Literal (Visual Basic) | Microsoft Docs","pos":[0,51]}]}],"pos":[6,60],"yaml":true}],"content":"title: \"XML Comment Literal (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.XmlLiteralComment\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"comment literal [Visual Basic]\"\n  - \"XML comments, adding [Visual Basic]\"\n  - \"XML comment literal [Visual Basic]\"\n  - \"XML literals [Visual Basic], comment\"\nms.assetid: 634c1cee-5e01-48d0-88d7-2dd55e4a9e52\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[749,783],"content":"XML Comment Literal (Visual Basic)","linkify":"XML Comment Literal (Visual Basic)","nodes":[{"content":"XML Comment Literal (Visual Basic)","pos":[0,34]}]},{"content":"A literal representing an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> object.","pos":[784,849],"source":"A literal representing an <xref:System.Xml.Linq.XComment> object."},{"pos":[858,864],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[907,912],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Term","pos":[919,923]},{"content":"Definition","pos":[924,934]},{"content":"Required.","pos":[958,967]},{"content":"Denotes the start of the XML comment.","pos":[968,1005]},{"content":"Required.","pos":[1020,1029]},{"content":"Text to appear in the XML comment.","pos":[1030,1064]},{"content":"Cannot contain a series of two hyphens (--) or end with a hyphen adjacent to the closing tag.","pos":[1065,1158]},{"content":"Required.","pos":[1169,1178]},{"content":"Denotes the end of the XML comment.","pos":[1179,1214]},{"pos":[1224,1236],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> object.","pos":[1240,1282],"source":"An <xref:System.Xml.Linq.XComment> object."},{"pos":[1291,1298],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"XML comment literals do not contain document content; they contain information about the document.","pos":[1302,1400]},{"content":"The XML comment section ends with the sequence \"--&gt;\".","pos":[1401,1454],"source":" The XML comment section ends with the sequence \"-->\"."},{"content":"This implies the following points:","pos":[1455,1489]},{"content":"You cannot use an embedded expression in an XML comment literal because the embedded expression delimiters are valid XML comment content.","pos":[1499,1636]},{"pos":[1646,1734],"content":"XML comment sections cannot be nested, because <ph id=\"ph1\">`content`</ph> cannot contain the value \"--&gt;\".","source":"XML comment sections cannot be nested, because `content` cannot contain the value \"-->\"."},{"content":"You can assign an XML comment literal to a variable, or you can include it in an XML element literal.","pos":[1741,1842]},{"pos":[1850,2133],"content":"[!NOTE]\n An XML literal can span multiple lines without using line continuation characters. This feature enables you to copy content from an XML document and paste it directly into a [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] program.","leadings":["","> "],"nodes":[{"content":"An XML literal can span multiple lines without using line continuation characters. This feature enables you to copy content from an XML document and paste it directly into a [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] program.","pos":[9,281],"nodes":[{"content":"An XML literal can span multiple lines without using line continuation characters.","pos":[0,82]},{"content":"This feature enables you to copy content from an XML document and paste it directly into a <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> program.","pos":[83,272],"source":" This feature enables you to copy content from an XML document and paste it directly into a [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] program."}]}]},{"pos":[2140,2348],"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler converts the XML comment literal to a call to the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XComment.%23ctor%2A&gt;</ph> constructor.","source":"The [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] compiler converts the XML comment literal to a call to the <xref:System.Xml.Linq.XComment.%23ctor%2A> constructor."},{"pos":[2357,2364],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates an XML comment that contains the text \"This is a comment\".","pos":[2368,2456]},{"pos":[2463,2590],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbXMLSamples#9<ept id=\"p2\">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-comment-literal_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbXMLSamples#9](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-comment-literal_1.vb)]"},{"pos":[2599,2607],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph>","pos":[2611,2642],"source":"<xref:System.Xml.Linq.XComment> "},{"content":"<bpt id=\"p1\">[</bpt>XML Element Literal<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept><ph id=\"ph1\"> </ph>","pos":[2647,2747],"source":"[XML Element Literal](../../../visual-basic/language-reference/xml-literals/xml-element-literal.md) "},{"content":"<bpt id=\"p1\">[</bpt>XML Literals<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2751,2830],"source":"[XML Literals](../../../visual-basic/language-reference/xml-literals/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Creating XML in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept>","pos":[2834,2943],"source":"[Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)"}]}