{"content":"---\ntitle: \"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"change notifications, raising\"\n  - \"BindingSource component [Windows Forms], and IPropertyChange\"\n  - \"data sources, detecting changes\"\n  - \"examples [Windows Forms], BindingSource component\"\n  - \"change notifications\"\n  - \"INotifyPropertyChanged interface, using with BindingSource\"\n  - \"BindingSource component [Windows Forms], examples\"\nms.assetid: 7fa2cf51-c09f-4375-adf0-e36c5617f099\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface\nThe <xref:System.Windows.Forms.BindingSource> component will automatically detect changes in a data source when the type contained in the data source implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface and raises <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> events when a property value is changed. This is useful because controls bound to the <xref:System.Windows.Forms.BindingSource> will then automatically update as the data source values change.  \n  \n> [!NOTE]\n>  If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread. Instead, you should read the data on a background thread and merge the data into a list on the UI thread.  \n  \n## Example  \n The following code example demonstrates a simple implementation of the <xref:System.ComponentModel.INotifyPropertyChanged> interface. It also shows how the <xref:System.Windows.Forms.BindingSource> automatically passes a data source change to a bound control when the <xref:System.Windows.Forms.BindingSource> is bound to a list of the <xref:System.ComponentModel.INotifyPropertyChanged> type.  \n  \n If you use the `CallerMemberName` attribute, calls to the `NotifyPropertyChanged` method don't have to specify the property name as a string argument. For more information, see [Caller Information](http://msdn.microsoft.com/library/9cb2b8c0-c4f6-44b8-9c90-38948455b373).  \n  \n [!code-csharp[System.ComponentModel.IPropertyChangeExample#1](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/CS/Form1.cs#1)]\n [!code-vb[System.ComponentModel.IPropertyChangeExample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/VB/Form1.vb#1)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Data, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for [!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)] or [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] by pasting the code into a new project.  Also see [HYPERLINK \"http://msdn.microsoft.com/library/Bb129228(v=vs.110)\" How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\)).  \n  \n## See Also  \n <xref:System.ComponentModel.INotifyPropertyChanged>   \n [BindingSource Component](../../../../docs/framework/winforms/controls/bindingsource-component.md)   \n [How to: Raise Change Notifications Using the BindingSource ResetItem Method](../../../../docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)","nodes":[{"pos":[12,126],"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface | Microsoft Docs","pos":[0,114]}]},{"pos":[831,928],"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","linkify":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","nodes":[{"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","pos":[0,97]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component will automatically detect changes in a data source when the type contained in the data source implements the <ph id=\"ph2\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface and raises <ph id=\"ph3\">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> events when a property value is changed.","pos":[929,1275],"source":"The <xref:System.Windows.Forms.BindingSource> component will automatically detect changes in a data source when the type contained in the data source implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface and raises <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> events when a property value is changed."},{"content":"This is useful because controls bound to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> will then automatically update as the data source values change.","pos":[1276,1427],"source":" This is useful because controls bound to the <xref:System.Windows.Forms.BindingSource> will then automatically update as the data source values change."},{"pos":[1435,1753],"content":"[!NOTE]\n If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread. Instead, you should read the data on a background thread and merge the data into a list on the UI thread.","leadings":["","> "],"nodes":[{"content":" If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread. Instead, you should read the data on a background thread and merge the data into a list on the UI thread.","pos":[8,316],"nodes":[{"content":"If your data source implements <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and you are performing asynchronous operations, you should not make changes to the data source on a background thread.","pos":[1,202],"source":" If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread."},{"content":"Instead, you should read the data on a background thread and merge the data into a list on the UI thread.","pos":[203,308]}]}]},{"pos":[1762,1769],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates a simple implementation of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.","pos":[1773,1906],"source":"The following code example demonstrates a simple implementation of the <xref:System.ComponentModel.INotifyPropertyChanged> interface."},{"content":"It also shows how the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> automatically passes a data source change to a bound control when the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> is bound to a list of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> type.","pos":[1907,2166],"source":" It also shows how the <xref:System.Windows.Forms.BindingSource> automatically passes a data source change to a bound control when the <xref:System.Windows.Forms.BindingSource> is bound to a list of the <xref:System.ComponentModel.INotifyPropertyChanged> type."},{"content":"If you use the <ph id=\"ph1\">`CallerMemberName`</ph> attribute, calls to the <ph id=\"ph2\">`NotifyPropertyChanged`</ph> method don't have to specify the property name as a string argument.","pos":[2173,2323],"source":"If you use the `CallerMemberName` attribute, calls to the `NotifyPropertyChanged` method don't have to specify the property name as a string argument."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caller Information<ept id=\"p1\">](http://msdn.microsoft.com/library/9cb2b8c0-c4f6-44b8-9c90-38948455b373)</ept>.","pos":[2324,2443],"source":" For more information, see [Caller Information](http://msdn.microsoft.com/library/9cb2b8c0-c4f6-44b8-9c90-38948455b373)."},{"pos":[2450,2811],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.ComponentModel.IPropertyChangeExample#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/CS/Form1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.ComponentModel.IPropertyChangeExample#1<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/VB/Form1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.ComponentModel.IPropertyChangeExample#1](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/CS/Form1.cs#1)]\n [!code-vb[System.ComponentModel.IPropertyChangeExample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/VB/Form1.vb#1)]"},{"pos":[2820,2838],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[2842,2864]},{"content":"References to the System, System.Data, System.Drawing and System.Windows.Forms assemblies.","pos":[2874,2964]},{"content":"For information about building this example from the command line for <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2971,3406],"source":"For information about building this example from the command line for [!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)] or [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> by pasting the code into a new project.","pos":[3407,3535],"source":" You can also build this example in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] by pasting the code into a new project."},{"content":"Also see <bpt id=\"p1\">[</bpt>HYPERLINK \"http://msdn.microsoft.com/library/Bb129228(v=vs.110)\" How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio<ept id=\"p1\">](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\))</ept>.","pos":[3537,3751],"source":"  Also see [HYPERLINK \"http://msdn.microsoft.com/library/Bb129228(v=vs.110)\" How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\))."},{"pos":[3760,3768],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>","pos":[3772,3823],"source":"<xref:System.ComponentModel.INotifyPropertyChanged> "},{"content":"<bpt id=\"p1\"> [</bpt>BindingSource Component<ept id=\"p1\">](../../../../docs/framework/winforms/controls/bindingsource-component.md)</ept><ph id=\"ph1\"> </ph>","pos":[3827,3927],"source":" [BindingSource Component](../../../../docs/framework/winforms/controls/bindingsource-component.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Raise Change Notifications Using the BindingSource ResetItem Method<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)</ept>","pos":[3930,4132],"source":" [How to: Raise Change Notifications Using the BindingSource ResetItem Method](../../../../docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)"}]}