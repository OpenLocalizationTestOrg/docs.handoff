<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="namespaces-entity-sql.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bef2fa96ce090a600155d68ecc3daea55b675840</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\namespaces-entity-sql.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3822f8ffec8eb549a18e8f03295f7e1c27fee189</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd453c70679432dedda8510f3130cfc6ec0cb691</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Namespaces (Entity SQL)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Namespaces (Entity SQL)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> introduces namespaces to avoid name conflicts for global identifiers such as type names, entity sets, functions, and so on.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The namespace support in <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> is similar to the namespace support in the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> provides two forms of the USING clause: qualified namespaces (where a shorter alias is provided for the namespace), and unqualified namespaces, as illustrated in the following example:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Name Resolution Rules</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If an identifier cannot be resolved in the local scopes, <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> tries to locate the name in the global scopes (the namespaces).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> first tries to match the identifier (prefix) with one of the qualified namespaces.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If there is a match, <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> tries to resolve the rest of the identifier in the specified namespace.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If no match is found, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Next, <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> tries to search all unqualified namespaces (specified in the prolog) for the identifier.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the identifier can be located in exactly one namespace, that location is returned.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If more than one namespace has a match for that identifier, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If no namespace can be identified for the identifier, <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> passes the name onto the next outward scope (the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.Common.DbConnection&gt;</ph> object), as illustrated in the following example:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Differences from the .NET Framework</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../../includes/dnprdnshort-md.md)]</ph>, you can use partially qualified namespaces.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> does not allow this.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>ADO.NET Usage</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Queries are expressed through ADO.NET <ph id="ph1">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objects can be built over <ph id="ph2">&lt;xref:System.Data.Common.DbConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Namespaces can also be specified as part of the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> cannot resolve an identifier within the query itself, the external namespaces are probed (based on similar rules).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Reference<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Overview<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>