{"content":"---\ntitle: \"How to: Dispose of a System Resource (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Using statement [Visual Basic], disposing of system resources\"\n  - \"Visual Basic code, control flow\"\n  - \"system resources, disposing of\"\n  - \"resources [Visual Basic], disposing of system\"\n  - \"system resources\"\n  - \"Using statement [Visual Basic], Using...End Using\"\n  - \"Using block\"\nms.assetid: 8be2b239-8090-419b-8e7e-bcaa75b0ecc8\n---\n# How to: Dispose of a System Resource (Visual Basic)\nYou can use a `Using` block to guarantee that the system disposes of a resource when your code exits the block. This is useful if you are using a system resource that consumes a large amount of memory, or that other components also want to use.  \n  \n### To dispose of a database connection when your code is finished with it  \n  \n1.  Make sure you include the appropriate [Imports Statement (.NET Namespace and Type)](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md) for the database connection at the beginning of your source file (in this case, <xref:System.Data.SqlClient>).  \n  \n2.  Create a `Using` block with the `Using` and `End Using` statements. Inside the block, put the code that deals with the database connection.  \n  \n3.  Declare the connection and create an instance of it as part of the `Using` statement.  \n  \n    ```  \n    ' Insert the following line at the beginning of your source file.  \n    Imports System.Data.SqlClient  \n    Public Sub AccessSql(ByVal s As String)  \n        Using sqc As New System.Data.SqlClient.SqlConnection(s)  \n            MsgBox(\"Connected with string \"\"\" & sqc.ConnectionString & \"\"\"\")  \n        End Using  \n    End Sub  \n    ```  \n  \n     The system disposes of the resource no matter how you exit the block, including the case of an unhandled exception.  \n  \n     Note that you cannot access `sqc` from outside the `Using` block, because its scope is limited to the block.  \n  \n     You can use this same technique on a system resource such as a file handle or a COM wrapper. You use a `Using` block when you want to be sure to leave the resource available for other components after you have exited the `Using` block.  \n  \n## See also\n\n- <xref:System.Data.SqlClient.SqlConnection>\n- [Control Flow](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)\n- [Decision Structures](../../../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)\n- [Loop Structures](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)\n- [Other Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)\n- [Nested Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)\n- [Using Statement](../../../../visual-basic/language-reference/statements/using-statement.md)\n","nodes":[{"pos":[4,447],"embed":true,"restype":"x-metadata","content":"title: \"How to: Dispose of a System Resource (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Using statement [Visual Basic], disposing of system resources\"\n  - \"Visual Basic code, control flow\"\n  - \"system resources, disposing of\"\n  - \"resources [Visual Basic], disposing of system\"\n  - \"system resources\"\n  - \"Using statement [Visual Basic], Using...End Using\"\n  - \"Using block\"\nms.assetid: 8be2b239-8090-419b-8e7e-bcaa75b0ecc8","nodes":[{"content":"How to: Dispose of a System Resource (Visual Basic)","nodes":[{"pos":[0,51],"content":"How to: Dispose of a System Resource (Visual Basic)","nodes":[{"content":"How to: Dispose of a System Resource (Visual Basic)","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[454,505],"content":"How to: Dispose of a System Resource (Visual Basic)","linkify":"How to: Dispose of a System Resource (Visual Basic)","nodes":[{"content":"How to: Dispose of a System Resource (Visual Basic)","pos":[0,51]}]},{"content":"You can use a <ph id=\"ph1\">`Using`</ph> block to guarantee that the system disposes of a resource when your code exits the block.","pos":[506,617],"source":"You can use a `Using` block to guarantee that the system disposes of a resource when your code exits the block."},{"content":"This is useful if you are using a system resource that consumes a large amount of memory, or that other components also want to use.","pos":[618,750]},{"pos":[760,830],"content":"To dispose of a database connection when your code is finished with it","linkify":"To dispose of a database connection when your code is finished with it","nodes":[{"content":"To dispose of a database connection when your code is finished with it","pos":[0,70]}]},{"pos":[840,1134],"content":"Make sure you include the appropriate <bpt id=\"p1\">[</bpt>Imports Statement (.NET Namespace and Type)<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept> for the database connection at the beginning of your source file (in this case, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient&gt;</ph>).","source":"Make sure you include the appropriate [Imports Statement (.NET Namespace and Type)](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md) for the database connection at the beginning of your source file (in this case, <xref:System.Data.SqlClient>)."},{"content":"Create a <ph id=\"ph1\">`Using`</ph> block with the <ph id=\"ph2\">`Using`</ph> and <ph id=\"ph3\">`End Using`</ph> statements.","pos":[1144,1211],"source":"Create a `Using` block with the `Using` and `End Using` statements."},{"content":"Inside the block, put the code that deals with the database connection.","pos":[1212,1283]},{"pos":[1293,1378],"content":"Declare the connection and create an instance of it as part of the <ph id=\"ph1\">`Using`</ph> statement.","source":"Declare the connection and create an instance of it as part of the `Using` statement."},{"content":"The system disposes of the resource no matter how you exit the block, including the case of an unhandled exception.","pos":[1745,1860]},{"pos":[1871,1979],"content":"Note that you cannot access <ph id=\"ph1\">`sqc`</ph> from outside the <ph id=\"ph2\">`Using`</ph> block, because its scope is limited to the block.","source":"Note that you cannot access `sqc` from outside the `Using` block, because its scope is limited to the block."},{"content":"You can use this same technique on a system resource such as a file handle or a COM wrapper.","pos":[1990,2082]},{"content":"You use a <ph id=\"ph1\">`Using`</ph> block when you want to be sure to leave the resource available for other components after you have exited the <ph id=\"ph2\">`Using`</ph> block.","pos":[2083,2225],"source":" You use a `Using` block when you want to be sure to leave the resource available for other components after you have exited the `Using` block."},{"pos":[2234,2242],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2291,2389],"content":"<bpt id=\"p1\">[</bpt>Control Flow<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept>","source":"[Control Flow](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)"},{"pos":[2392,2511],"content":"<bpt id=\"p1\">[</bpt>Decision Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)</ept>","source":"[Decision Structures](../../../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)"},{"pos":[2514,2625],"content":"<bpt id=\"p1\">[</bpt>Loop Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept>","source":"[Loop Structures](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)"},{"pos":[2628,2757],"content":"<bpt id=\"p1\">[</bpt>Other Control Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)</ept>","source":"[Other Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)"},{"pos":[2760,2891],"content":"<bpt id=\"p1\">[</bpt>Nested Control Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)</ept>","source":"[Nested Control Structures](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)"},{"pos":[2894,2986],"content":"<bpt id=\"p1\">[</bpt>Using Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/using-statement.md)</ept>","source":"[Using Statement](../../../../visual-basic/language-reference/statements/using-statement.md)"}]}