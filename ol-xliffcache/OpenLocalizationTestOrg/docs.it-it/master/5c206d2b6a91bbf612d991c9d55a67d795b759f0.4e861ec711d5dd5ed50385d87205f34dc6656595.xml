{"content":"---\ntitle: \"IMetaDataImport::GetPropertyProps Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IMetaDataImport.GetPropertyProps\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IMetaDataImport::GetPropertyProps\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetPropertyProps method [.NET Framework metadata]\"\n  - \"IMetaDataImport::GetPropertyProps method [.NET Framework metadata]\"\nms.assetid: dc0ff3e6-7e7d-4f6c-948d-52b28f5cb78c\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# IMetaDataImport::GetPropertyProps Method\nGets the metadata for the property represented by the specified token.  \n  \n## Syntax  \n  \n```  \nHRESULT GetPropertyProps (  \n   [in]  mdProperty        prop,  \n   [out] mdTypeDef         *pClass,   \n   [out] LPCWSTR           szProperty,   \n   [in]  ULONG             cchProperty,   \n   [out] ULONG             *pchProperty,   \n   [out] DWORD             *pdwPropFlags,   \n   [out] PCCOR_SIGNATURE   *ppvSig,   \n   [out] ULONG             *pbSig,   \n   [out] DWORD             *pdwCPlusTypeFlag,   \n   [out] UVCP_CONSTANT     *ppDefaultValue,  \n   [out] ULONG             *pcchDefaultValue,  \n   [out] mdMethodDef       *pmdSetter,   \n   [out] mdMethodDef       *pmdGetter,   \n   [out] mdMethodDef       rmdOtherMethod[],  \n   [in]  ULONG             cMax,   \n   [out] ULONG             *pcOtherMethod   \n);  \n```  \n  \n#### Parameters  \n `prop`  \n [in] A token that represents the property to return metadata for.  \n  \n `pClass`  \n [out] A pointer to the TypeDef token that represents the type that implements the property.  \n  \n `szProperty`  \n [out] A buffer to hold the property name.  \n  \n `cchProperty`  \n [in] The size in wide characters of `szProperty`.  \n  \n `pchProperty`  \n [out] The number of wide characters returned in `szProperty`.  \n  \n `pdwPropFlags`  \n [out] A pointer to any attribute flags applied to the property. This value is a bitmask from the [CorPropertyAttr](../../../../docs/framework/unmanaged-api/metadata/corpropertyattr-enumeration.md) enumeration.  \n  \n `ppvSig`  \n [out] A pointer to the metadata signature of the property.  \n  \n `pbSig`  \n [out] The number of bytes returned in `ppvSig`.  \n  \n `pdwCPlusTypeFlag`  \n [out] A flag specifying the type of the constant that is the default value of the property. This value is from the CorElementType enumeration.  \n  \n `ppDefaultValue`  \n [out] A pointer to the bytes that store the default value for this property.  \n  \n `pcchDefaultValue`  \n [out] The size in wide characters of `ppDefaultValue`, if `pdwCPlusTypeFlag` is ELEMENT_TYPE_STRING; otherwise, this value is not relevant. In that case, the length of `ppDefaultValue` is inferred from the type that is specified by `pdwCPlusTypeFlag`.  \n  \n `pmdSetter`  \n [out] A pointer to the MethodDef token that represents the set accessor method for the property.  \n  \n `pmdGetter`  \n [out] A pointer to the MethodDef token that represents the get accessor method for the property.  \n  \n `rmdOtherMethod`  \n [out] An array of MethodDef tokens that represent other methods associated with the property.  \n  \n `cMax`  \n [in] The maximum size of the `rmdOtherMethod` array. If you do not provide an array large enough to hold all the methods, they are skipped without warning.  \n  \n `pcOtherMethod`  \n [out] The number of MethodDef tokens returned in `rmdOtherMethod`.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** Cor.h  \n  \n **Library:** Included as a resource in MsCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)   \n [IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)","nodes":[{"pos":[12,69],"content":"IMetaDataImport::GetPropertyProps Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IMetaDataImport::GetPropertyProps Method | Microsoft Docs","pos":[0,57]}]},{"pos":[729,769],"content":"IMetaDataImport::GetPropertyProps Method","linkify":"IMetaDataImport::GetPropertyProps Method","nodes":[{"content":"IMetaDataImport::GetPropertyProps Method","pos":[0,40]}]},{"content":"Gets the metadata for the property represented by the specified token.","pos":[770,840]},{"pos":[849,855],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1595,1605],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A token that represents the property to return metadata for.","pos":[1619,1684]},{"content":"[out] A pointer to the TypeDef token that represents the type that implements the property.","pos":[1703,1794]},{"content":"[out] A buffer to hold the property name.","pos":[1817,1858]},{"content":"[in] The size in wide characters of <ph id=\"ph1\">`szProperty`</ph>.","pos":[1882,1931],"source":" [in] The size in wide characters of `szProperty`."},{"content":"[out] The number of wide characters returned in <ph id=\"ph1\">`szProperty`</ph>.","pos":[1955,2016],"source":" [out] The number of wide characters returned in `szProperty`."},{"content":"[out] A pointer to any attribute flags applied to the property.","pos":[2041,2104]},{"content":"This value is a bitmask from the <bpt id=\"p1\">[</bpt>CorPropertyAttr<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/corpropertyattr-enumeration.md)</ept> enumeration.","pos":[2105,2250],"source":" This value is a bitmask from the [CorPropertyAttr](../../../../docs/framework/unmanaged-api/metadata/corpropertyattr-enumeration.md) enumeration."},{"content":"[out] A pointer to the metadata signature of the property.","pos":[2269,2327]},{"content":"[out] The number of bytes returned in <ph id=\"ph1\">`ppvSig`</ph>.","pos":[2345,2392],"source":" [out] The number of bytes returned in `ppvSig`."},{"content":"[out] A flag specifying the type of the constant that is the default value of the property.","pos":[2421,2512]},{"content":"This value is from the CorElementType enumeration.","pos":[2513,2563]},{"content":"[out] A pointer to the bytes that store the default value for this property.","pos":[2590,2666]},{"content":"[out] The size in wide characters of <ph id=\"ph1\">`ppDefaultValue`</ph>, if <ph id=\"ph2\">`pdwCPlusTypeFlag`</ph> is ELEMENT_TYPE_STRING; otherwise, this value is not relevant.","pos":[2695,2834],"source":" [out] The size in wide characters of `ppDefaultValue`, if `pdwCPlusTypeFlag` is ELEMENT_TYPE_STRING; otherwise, this value is not relevant."},{"content":"In that case, the length of <ph id=\"ph1\">`ppDefaultValue`</ph> is inferred from the type that is specified by <ph id=\"ph2\">`pdwCPlusTypeFlag`</ph>.","pos":[2835,2946],"source":" In that case, the length of `ppDefaultValue` is inferred from the type that is specified by `pdwCPlusTypeFlag`."},{"content":"[out] A pointer to the MethodDef token that represents the set accessor method for the property.","pos":[2968,3064]},{"content":"[out] A pointer to the MethodDef token that represents the get accessor method for the property.","pos":[3086,3182]},{"content":"[out] An array of MethodDef tokens that represent other methods associated with the property.","pos":[3209,3302]},{"content":"[in] The maximum size of the <ph id=\"ph1\">`rmdOtherMethod`</ph> array.","pos":[3319,3371],"source":" [in] The maximum size of the `rmdOtherMethod` array."},{"content":"If you do not provide an array large enough to hold all the methods, they are skipped without warning.","pos":[3372,3474]},{"content":"[out] The number of MethodDef tokens returned in <ph id=\"ph1\">`rmdOtherMethod`</ph>.","pos":[3500,3566],"source":" [out] The number of MethodDef tokens returned in `rmdOtherMethod`."},{"pos":[3575,3587],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3591,3695],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3702,3719],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> Cor.h","source":"**Header:** Cor.h"},{"pos":[3726,3776],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MsCorEE.dll","source":"**Library:** Included as a resource in MsCorEE.dll"},{"pos":[3783,3891],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[3900,3908],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IMetaDataImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3912,4020],"source":"[IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataImport2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)</ept>","pos":[4023,4133],"source":" [IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)"}]}