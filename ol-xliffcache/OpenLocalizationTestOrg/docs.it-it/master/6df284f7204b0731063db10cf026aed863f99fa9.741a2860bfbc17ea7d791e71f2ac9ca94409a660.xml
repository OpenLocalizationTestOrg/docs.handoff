{"content":"---\ntitle: \"How to: Read From Text Files with Multiple Formats in Visual Basic | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"TextFieldParser object, reading from a file\"\n  - \"TextFieldType enumeration\"\n  - \"My.Computer.FileSystem.WriteAllText method, parsing structured text files\"\n  - \"WriteAllText method, parsing structured text files\"\n  - \"PeekChars method, determining format of text\"\n  - \"reading text files, multiple formats\"\n  - \"I/O [Visual Basic], reading text files\"\n  - \"text files, reading\"\nms.assetid: 8d185eb2-79ca-42cd-95a7-d3ff44a5a0f8\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Read From Text Files with Multiple Formats in Visual Basic\nThe <xref:Microsoft.VisualBasic.FileIO.TextFieldParser> object provides a way to easily and efficiently parse structured text files, such as logs. You can process a file with multiple formats by using the `PeekChars` method to determine the format of each line as you parse through the file.  \n  \n### To parse a text file with multiple formats  \n  \n1.  Add a text file named testfile.txt to your project. Add the following content to the text file.  \n  \n    ```  \n    Err  1001 Cannot access resource.  \n    Err  2014 Resource not found.  \n    Acc  10/03/2009User1      Administrator.  \n    Err  0323 Warning: Invalid access attempt.  \n    Acc  10/03/2009User2      Standard user.  \n    Acc  10/04/2009User2      Standard user.  \n    ```  \n  \n2.  Define the expected format and the format used when an error is reported. The last entry in each array is -1, therefore the last field is assumed to be of variable width. This occurs when the last entry in the array is less than or equal to 0.  \n  \n     [!code-vb[VbFileIORead#4](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_1.vb)]  \n  \n3.  Create a new <xref:Microsoft.VisualBasic.FileIO.TextFieldParser> object, defining the width and format.  \n  \n     [!code-vb[VbFileIORead#5](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_2.vb)]  \n  \n4.  Loop through the rows, testing for format before reading.  \n  \n     [!code-vb[VbFileIORead#6](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_3.vb)]  \n  \n5.  Write errors to the console.  \n  \n     [!code-vb[VbFileIORead#7](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_4.vb)]  \n  \n## Example  \n Following is the complete example that reads from the file `testfile.txt`.  \n  \n [!code-vb[VbFileIORead#8](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_5.vb)]  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   A row cannot be parsed using the specified format (<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>). The exception message specifies the line causing the exception, while the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property is assigned to the text contained in the line.  \n  \n-   The specified file does not exist (<xref:System.IO.FileNotFoundException>).  \n  \n-   A partial-trust situation in which the user does not have sufficient permissions to access the file. (<xref:System.Security.SecurityException>).  \n  \n-   The path is too long (<xref:System.IO.PathTooLongException>).  \n  \n-   The user does not have sufficient permissions to access the file (<xref:System.UnauthorizedAccessException>).  \n  \n## See Also  \n <xref:Microsoft.VisualBasic.FileIO.TextFieldParser?displayProperty=fullName>   \n <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars%2A>   \n <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>   \n <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>   \n <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData%2A>   \n <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>   \n [How to: Read From Comma-Delimited Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)   \n [How to: Read From Fixed-width Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)   \n [Parsing Text Files with the TextFieldParser Object](../../../../visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)","nodes":[{"pos":[4,967],"nodes":[{"content":"How to: Read From Text Files with Multiple Formats in Visual Basic | Microsoft Docs","nodes":[{"pos":[0,83],"content":"How to: Read From Text Files with Multiple Formats in Visual Basic | Microsoft Docs","nodes":[{"content":"How to: Read From Text Files with Multiple Formats in Visual Basic | Microsoft Docs","pos":[0,83]}]}],"pos":[6,92],"yaml":true}],"content":"title: \"How to: Read From Text Files with Multiple Formats in Visual Basic | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"TextFieldParser object, reading from a file\"\n  - \"TextFieldType enumeration\"\n  - \"My.Computer.FileSystem.WriteAllText method, parsing structured text files\"\n  - \"WriteAllText method, parsing structured text files\"\n  - \"PeekChars method, determining format of text\"\n  - \"reading text files, multiple formats\"\n  - \"I/O [Visual Basic], reading text files\"\n  - \"text files, reading\"\nms.assetid: 8d185eb2-79ca-42cd-95a7-d3ff44a5a0f8\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[974,1040],"content":"How to: Read From Text Files with Multiple Formats in Visual Basic","linkify":"How to: Read From Text Files with Multiple Formats in Visual Basic","nodes":[{"content":"How to: Read From Text Files with Multiple Formats in Visual Basic","pos":[0,66]}]},{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser&gt;</ph> object provides a way to easily and efficiently parse structured text files, such as logs.","pos":[1041,1187],"source":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser> object provides a way to easily and efficiently parse structured text files, such as logs."},{"content":"You can process a file with multiple formats by using the <ph id=\"ph1\">`PeekChars`</ph> method to determine the format of each line as you parse through the file.","pos":[1188,1332],"source":" You can process a file with multiple formats by using the `PeekChars` method to determine the format of each line as you parse through the file."},{"pos":[1342,1384],"content":"To parse a text file with multiple formats","linkify":"To parse a text file with multiple formats","nodes":[{"content":"To parse a text file with multiple formats","pos":[0,42]}]},{"content":"Add a text file named testfile.txt to your project.","pos":[1394,1445]},{"content":"Add the following content to the text file.","pos":[1446,1489]},{"content":"Define the expected format and the format used when an error is reported.","pos":[1788,1861]},{"content":"The last entry in each array is -1, therefore the last field is assumed to be of variable width.","pos":[1862,1958]},{"content":"This occurs when the last entry in the array is less than or equal to 0.","pos":[1959,2031]},{"pos":[2042,2226],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbFileIORead#4<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbFileIORead#4](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_1.vb)]"},{"content":"Create a new <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser&gt;</ph> object, defining the width and format.","pos":[2236,2339],"source":"Create a new <xref:Microsoft.VisualBasic.FileIO.TextFieldParser> object, defining the width and format."},{"pos":[2350,2534],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbFileIORead#5<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbFileIORead#5](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_2.vb)]"},{"content":"Loop through the rows, testing for format before reading.","pos":[2544,2601]},{"pos":[2612,2796],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbFileIORead#6<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_3.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbFileIORead#6](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_3.vb)]"},{"content":"Write errors to the console.","pos":[2806,2834]},{"pos":[2845,3029],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbFileIORead#7<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_4.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbFileIORead#7](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_4.vb)]"},{"pos":[3038,3045],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3049,3123],"content":"Following is the complete example that reads from the file <ph id=\"ph1\">`testfile.txt`</ph>.","source":"Following is the complete example that reads from the file `testfile.txt`."},{"pos":[3130,3314],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbFileIORead#8<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_5.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbFileIORead#8](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files-with-multiple-formats_5.vb)]"},{"pos":[3323,3341],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[3345,3393]},{"content":"A row cannot be parsed using the specified format (<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph>).","pos":[3403,3514],"source":"A row cannot be parsed using the specified format (<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>)."},{"content":"The exception message specifies the line causing the exception, while the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</ph> property is assigned to the text contained in the line.","pos":[3515,3709],"source":" The exception message specifies the line causing the exception, while the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property is assigned to the text contained in the line."},{"content":"The specified file does not exist (<ph id=\"ph1\">&lt;xref:System.IO.FileNotFoundException&gt;</ph>).","pos":[3719,3794],"source":"The specified file does not exist (<xref:System.IO.FileNotFoundException>)."},{"content":"A partial-trust situation in which the user does not have sufficient permissions to access the file.","pos":[3804,3904]},{"content":"(<ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph>).","pos":[3905,3948],"source":" (<xref:System.Security.SecurityException>)."},{"content":"The path is too long (<ph id=\"ph1\">&lt;xref:System.IO.PathTooLongException&gt;</ph>).","pos":[3958,4019],"source":"The path is too long (<xref:System.IO.PathTooLongException>)."},{"content":"The user does not have sufficient permissions to access the file (<ph id=\"ph1\">&lt;xref:System.UnauthorizedAccessException&gt;</ph>).","pos":[4029,4138],"source":"The user does not have sufficient permissions to access the file (<xref:System.UnauthorizedAccessException>)."},{"pos":[4147,4155],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser?displayProperty=fullName&gt;</ph>","pos":[4159,4235],"source":"<xref:Microsoft.VisualBasic.FileIO.TextFieldParser?displayProperty=fullName> "},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars%2A&gt;</ph>","pos":[4240,4304],"source":"<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph>","pos":[4309,4367],"source":"<xref:Microsoft.VisualBasic.FileIO.MalformedLineException> "},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A&gt;</ph>","pos":[4372,4434],"source":"<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData%2A&gt;</ph>","pos":[4439,4503],"source":"<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph>","pos":[4508,4576],"source":"<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> "},{"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[4581,4754],"source":"[How to: Read From Comma-Delimited Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[4758,4923],"source":"[How to: Read From Fixed-width Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md) "},{"content":"<bpt id=\"p1\">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept>","pos":[4927,5112],"source":"[Parsing Text Files with the TextFieldParser Object](../../../../visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)"}]}