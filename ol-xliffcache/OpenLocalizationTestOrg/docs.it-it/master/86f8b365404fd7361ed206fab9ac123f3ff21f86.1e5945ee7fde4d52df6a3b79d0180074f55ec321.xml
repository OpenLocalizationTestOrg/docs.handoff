{"content":"---\ntitle: \"MissingRuntimeArtifactException Class (.NET Native) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: d5b3d13e-689f-4584-8ba6-44f5167a8590\ncaps.latest.revision: 8\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# MissingRuntimeArtifactException Class (.NET Native)\n**.NET for Windows apps for Windows 10, [!INCLUDE[net_native](../../../includes/net-native-md.md)] only**  \n  \n The exception that is thrown when metadata for a type or type member is available but its implementation has been removed.  \n  \n **Namespace:** System.Reflection  \n  \n> [!IMPORTANT]\n>  The `MissingRuntimeArtifactException` class is intended solely for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain. It is not intended for use in third-party code, nor should you handle the exception in your application code. Instead, you eliminate the exception by adding entries to your [runtime directives file](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md). For more information, see the Remarks section.  \n  \n## Syntax  \n [!code-csharp[ProjectN#22](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn/cs/missingruntimeartifactexception_syntax1.cs#22)]  \n  \n Note that the `MissingRuntimeArtifactException` class derives from <xref:System.MemberAccessException>.  \n  \n The `MissingRuntimeArtifactException` class has the following members:  \n  \n## Constructors  \n  \n|Constructor|Description|  \n|-----------------|-----------------|  \n|`public MissingRuntimeArtifactException()`|Initializes a new instance of the `MissingRuntimeArtifactException` class by using a system-supplied message that describes the error.<br /><br /> This constructor is for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain only.|  \n|`public MissingRuntimeArtifactException(String message)`|Initializes a new instance of the `MissingRuntimeArtifactException` class with a specified error message.<br /><br /> This constructor is for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain only.|  \n  \n## Properties  \n  \n|Property|Description|  \n|--------------|-----------------|  \n|`public IDictionary Data { get; }`|Gets a collection of key/value pairs that provide additional user-defined information about the exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public string HelpLink { get; set; }`|Gets or sets a link to the help file associated with this exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public int HResult { get; protected set; }`|Gets or sets the `HRESULT`, a coded numeric value that is assigned to a specific exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public Exception InnerException { get; }`|Gets the exception that caused the current exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public string Message { get; }`|Gets a message that describes the current exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public string Source { get; set; }`|Gets or sets the name of the application or object that caused the error. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public string StackTrace { get; }`|Gets a string representation of the immediate frames on the call stack. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public MethodBase TargetSite { get; }`|Gets the method that threw the current exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n  \n## Methods  \n  \n|Method|Description|  \n|------------|-----------------|  \n|`public bool Equals(Object obj)`|Determines whether the specified object is equal to the current object.  (Inherited from <xref:System.Object>.)|  \n|`protected void Finalize()`|Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from <xref:System.Object>.)|  \n|`public Exception GetBaseException()`|Returns the exception that is the root cause of one or more subsequent exceptions. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public int GetHashCode()`|Returns a hash code for a `MissingRuntimeArtifactException` instance.   (Inherited from <xref:System.Object>.)|  \n|`public void GetObjectData(SerializationInfo info, StreamingContext context)`|Sets a <xref:System.Runtime.Serialization.SerializationInfo> object with information about the exception.  (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`public Type GetType()`|Gets the runtime type of the current instance. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n|`protected Object MemberwiseClone()`|Creates a shallow copy of the current object. (Inherited from <xref:System.Object>.)|  \n|`public string ToString()`|Returns the string representation of the current exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n  \n## Events  \n  \n|Event|Description|  \n|-----------|-----------------|  \n|`protected event EventHandler<SafeSerializationEventArgs> SerializeObjectState`|Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception. (Inherited from <xref:System.Exception?displayProperty=fullName>.)|  \n  \n## Usage Details  \n The `MissingRuntimeArtifactException` exception is thrown when an attempt is made to instantiate a type or invoke a type member and, although the type or member's metadata is present, its implementation has been removed.  \n  \n Whether metadata and the implementation code to dynamically execute a method are available to an app at run time is defined by the runtime directives (XML configuration) file, *.rd.xml. To prevent your app from throwing this exception, you must modify \\*.rd.xml to ensure that the metadata needed by a type or type member is present at run time. For information about the format of the \\*.rd.xml file, see [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md).  \n  \n> [!IMPORTANT]\n>  Because this exception indicates that the implementation code needed by your application isn’t available at run time, you shouldn’t handle this exception in a `try`/`catch` block. Instead, you should diagnose the cause of the exception and eliminate it by using a runtime directives file. Typically, you eliminate this exception by specifying the appropriate `Activate` or `Dynamic` policy for a program element in the runtime directives file (*.rd.xml file). To get the entry that you can add to your runtime directives file that eliminates the exception, you can use one of two troubleshooters:  \n>   \n>  -   The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/type.html) for types.  \n> -   The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/method.html) for methods.  \n  \n The `MissingRuntimeArtifactException` class contains no unique members; all of its members are inherited from its base class, <xref:System.MemberAccessException>.  \n  \n## See Also  \n [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)   \n [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)","nodes":[{"pos":[12,80],"content":"MissingRuntimeArtifactException Class (.NET Native) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"MissingRuntimeArtifactException Class (.NET Native) | Microsoft Docs","pos":[0,68]}]},{"pos":[383,434],"content":"MissingRuntimeArtifactException Class (.NET Native)","linkify":"MissingRuntimeArtifactException Class (.NET Native)","nodes":[{"content":"MissingRuntimeArtifactException Class (.NET Native)","pos":[0,51]}]},{"pos":[435,540],"content":"<bpt id=\"p1\">**</bpt>.NET for Windows apps for Windows 10, <ph id=\"ph1\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> only<ept id=\"p1\">**</ept>","source":"**.NET for Windows apps for Windows 10, [!INCLUDE[net_native](../../../includes/net-native-md.md)] only**"},{"content":"The exception that is thrown when metadata for a type or type member is available but its implementation has been removed.","pos":[547,669]},{"pos":[676,708],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> System.Reflection","source":"**Namespace:** System.Reflection"},{"pos":[716,1230],"content":"[!IMPORTANT]\n The `MissingRuntimeArtifactException` class is intended solely for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain. It is not intended for use in third-party code, nor should you handle the exception in your application code. Instead, you eliminate the exception by adding entries to your [runtime directives file](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md). For more information, see the Remarks section.","leadings":["","> "],"nodes":[{"content":" The `MissingRuntimeArtifactException` class is intended solely for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain. It is not intended for use in third-party code, nor should you handle the exception in your application code. Instead, you eliminate the exception by adding entries to your [runtime directives file](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md). For more information, see the Remarks section.","pos":[13,512],"nodes":[{"content":"The <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> class is intended solely for internal use by the <ph id=\"ph2\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> tool chain.","pos":[1,158],"source":" The `MissingRuntimeArtifactException` class is intended solely for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain."},{"content":"It is not intended for use in third-party code, nor should you handle the exception in your application code.","pos":[159,268]},{"content":"Instead, you eliminate the exception by adding entries to your <bpt id=\"p1\">[</bpt>runtime directives file<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept>.","pos":[269,452],"source":" Instead, you eliminate the exception by adding entries to your [runtime directives file](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)."},{"content":"For more information, see the Remarks section.","pos":[453,499]}]}]},{"pos":[1239,1245],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1249,1384],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ProjectN#22<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn/cs/missingruntimeartifactexception_syntax1.cs#22)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[ProjectN#22](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn/cs/missingruntimeartifactexception_syntax1.cs#22)]"},{"pos":[1391,1494],"content":"Note that the <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> class derives from <ph id=\"ph2\">&lt;xref:System.MemberAccessException&gt;</ph>.","source":"Note that the `MissingRuntimeArtifactException` class derives from <xref:System.MemberAccessException>."},{"pos":[1501,1571],"content":"The <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> class has the following members:","source":"The `MissingRuntimeArtifactException` class has the following members:"},{"pos":[1580,1592],"content":"Constructors","linkify":"Constructors","nodes":[{"content":"Constructors","pos":[0,12]}]},{"content":"Constructor","pos":[1599,1610]},{"content":"Description","pos":[1611,1622]},{"content":"Initializes a new instance of the <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> class by using a system-supplied message that describes the error.","pos":[1710,1844],"source":"Initializes a new instance of the `MissingRuntimeArtifactException` class by using a system-supplied message that describes the error."},{"content":"This constructor is for internal use by the <ph id=\"ph1\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> tool chain only.","pos":[1857,1976],"source":" This constructor is for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain only."},{"content":"Initializes a new instance of the <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> class with a specified error message.","pos":[2038,2143],"source":"Initializes a new instance of the `MissingRuntimeArtifactException` class with a specified error message."},{"content":"This constructor is for internal use by the <ph id=\"ph1\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> tool chain only.","pos":[2156,2275],"source":" This constructor is for internal use by the [!INCLUDE[net_native](../../../includes/net-native-md.md)] tool chain only."},{"pos":[2285,2295],"content":"Properties","linkify":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"content":"Property","pos":[2302,2310]},{"content":"Description","pos":[2311,2322]},{"content":"Gets a collection of key/value pairs that provide additional user-defined information about the exception.","pos":[2399,2505]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[2506,2572],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets or sets a link to the help file associated with this exception.","pos":[2616,2684]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[2685,2751],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets or sets the <ph id=\"ph1\">`HRESULT`</ph>, a coded numeric value that is assigned to a specific exception.","pos":[2801,2892],"source":"Gets or sets the `HRESULT`, a coded numeric value that is assigned to a specific exception."},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[2893,2959],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets the exception that caused the current exception.","pos":[3007,3060]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[3061,3127],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets a message that describes the current exception.","pos":[3165,3217]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[3218,3284],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets or sets the name of the application or object that caused the error.","pos":[3326,3399]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[3400,3466],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets a string representation of the immediate frames on the call stack.","pos":[3507,3578]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[3579,3645],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets the method that threw the current exception.","pos":[3690,3739]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[3740,3806],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"pos":[3816,3823],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3830,3836]},{"content":"Description","pos":[3837,3848]},{"content":"Determines whether the specified object is equal to the current object.","pos":[3921,3992]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.)","pos":[3994,4032],"source":"  (Inherited from <xref:System.Object>.)"},{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[4065,4189]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.)","pos":[4190,4228],"source":" (Inherited from <xref:System.Object>.)"},{"content":"Returns the exception that is the root cause of one or more subsequent exceptions.","pos":[4271,4353]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[4354,4420],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Returns a hash code for a <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> instance.","pos":[4452,4521],"source":"Returns a hash code for a `MissingRuntimeArtifactException` instance."},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.)","pos":[4524,4562],"source":"   (Inherited from <xref:System.Object>.)"},{"content":"Sets a <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object with information about the exception.","pos":[4645,4750],"source":"Sets a <xref:System.Runtime.Serialization.SerializationInfo> object with information about the exception."},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[4752,4818],"source":"  (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Gets the runtime type of the current instance.","pos":[4847,4893]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[4894,4960],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"content":"Creates a shallow copy of the current object.","pos":[5002,5047]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.)","pos":[5048,5086],"source":" (Inherited from <xref:System.Object>.)"},{"content":"Returns the string representation of the current exception.","pos":[5118,5177]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[5178,5244],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"pos":[5254,5260],"content":"Events","linkify":"Events","nodes":[{"content":"Events","pos":[0,6]}]},{"content":"Event","pos":[5267,5272]},{"content":"Description","pos":[5273,5284]},{"content":"Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.","pos":[5403,5528]},{"content":"(Inherited from <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>.)","pos":[5529,5595],"source":" (Inherited from <xref:System.Exception?displayProperty=fullName>.)"},{"pos":[5605,5618],"content":"Usage Details","linkify":"Usage Details","nodes":[{"content":"Usage Details","pos":[0,13]}]},{"pos":[5622,5842],"content":"The <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> exception is thrown when an attempt is made to instantiate a type or invoke a type member and, although the type or member's metadata is present, its implementation has been removed.","source":"The `MissingRuntimeArtifactException` exception is thrown when an attempt is made to instantiate a type or invoke a type member and, although the type or member's metadata is present, its implementation has been removed."},{"content":"Whether metadata and the implementation code to dynamically execute a method are available to an app at run time is defined by the runtime directives (XML configuration) file, *.rd.xml.","pos":[5849,6034]},{"content":"To prevent your app from throwing this exception, you must modify <ph id=\"ph1\">\\*</ph>.rd.xml to ensure that the metadata needed by a type or type member is present at run time.","pos":[6035,6194],"source":" To prevent your app from throwing this exception, you must modify \\*.rd.xml to ensure that the metadata needed by a type or type member is present at run time."},{"content":"For information about the format of the <ph id=\"ph1\">\\*</ph>.rd.xml file, see <bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept>.","pos":[6195,6408],"source":" For information about the format of the \\*.rd.xml file, see [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)."},{"pos":[6416,7028],"content":"[!IMPORTANT]\n Because this exception indicates that the implementation code needed by your application isn’t available at run time, you shouldn’t handle this exception in a `try`/`catch` block. Instead, you should diagnose the cause of the exception and eliminate it by using a runtime directives file. Typically, you eliminate this exception by specifying the appropriate `Activate` or `Dynamic` policy for a program element in the runtime directives file (*.rd.xml file). To get the entry that you can add to your runtime directives file that eliminates the exception, you can use one of two troubleshooters:","leadings":["","> "],"nodes":[{"content":" Because this exception indicates that the implementation code needed by your application isn’t available at run time, you shouldn’t handle this exception in a `try`/`catch` block. Instead, you should diagnose the cause of the exception and eliminate it by using a runtime directives file. Typically, you eliminate this exception by specifying the appropriate `Activate` or `Dynamic` policy for a program element in the runtime directives file (*.rd.xml file). To get the entry that you can add to your runtime directives file that eliminates the exception, you can use one of two troubleshooters:","pos":[13,610],"nodes":[{"content":"Because this exception indicates that the implementation code needed by your application isn’t available at run time, you shouldn’t handle this exception in a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block.","pos":[1,180],"source":" Because this exception indicates that the implementation code needed by your application isn’t available at run time, you shouldn’t handle this exception in a `try`/`catch` block."},{"content":"Instead, you should diagnose the cause of the exception and eliminate it by using a runtime directives file.","pos":[181,289]},{"content":"Typically, you eliminate this exception by specifying the appropriate <ph id=\"ph1\">`Activate`</ph> or <ph id=\"ph2\">`Dynamic`</ph> policy for a program element in the runtime directives file (*.rd.xml file).","pos":[290,460],"source":" Typically, you eliminate this exception by specifying the appropriate `Activate` or `Dynamic` policy for a program element in the runtime directives file (*.rd.xml file)."},{"content":"To get the entry that you can add to your runtime directives file that eliminates the exception, you can use one of two troubleshooters:","pos":[461,597]}]}]},{"pos":[7043,7156],"content":"The <bpt id=\"p1\">[</bpt>MissingMetadataException troubleshooter<ept id=\"p1\">](http://dotnet.github.io/native/troubleshooter/type.html)</ept> for types.","source":"The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/type.html) for types."},{"pos":[7165,7282],"content":"The <bpt id=\"p1\">[</bpt>MissingMetadataException troubleshooter<ept id=\"p1\">](http://dotnet.github.io/native/troubleshooter/method.html)</ept> for methods.","source":"The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/method.html) for methods."},{"pos":[7289,7451],"content":"The <ph id=\"ph1\">`MissingRuntimeArtifactException`</ph> class contains no unique members; all of its members are inherited from its base class, <ph id=\"ph2\">&lt;xref:System.MemberAccessException&gt;</ph>.","source":"The `MissingRuntimeArtifactException` class contains no unique members; all of its members are inherited from its base class, <xref:System.MemberAccessException>."},{"pos":[7460,7468],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[7472,7625],"source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>","pos":[7628,7737],"source":" [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)"}]}