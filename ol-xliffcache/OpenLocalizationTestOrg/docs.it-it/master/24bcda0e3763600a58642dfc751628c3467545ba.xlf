<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24bcda0e3763600a58642dfc751628c3467545ba</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\federation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48e47cd558a4b501b23dc061922d4b605eec084b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a46f606700f63a0d37d6e6b605e11ecae2638782</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Federation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Federation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides a brief overview of the concept of federated security.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It also describes <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> support for deploying federated security architectures.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a sample application that demonstrates federation, see <bpt id="p1">[</bpt>Federation Sample<ept id="p1">](../../../../docs/framework/wcf/samples/federation-sample.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Definition of Federated Security</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Federated security allows for clean separation between the service a client is accessing and the associated authentication and authorization procedures.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Federated security also enables collaboration across multiple systems, networks, and organizations in different trust realms.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides support for building and deploying distributed systems that employ federated security.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Elements of a Federated Security Architecture</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The federated security architecture has three key elements, as described in the following table.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Domain/realm</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A single unit of security administration or trust.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A typical domain might include a single organization.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Federation</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A collection of domains that have established trust.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The level of trust may vary, but typically includes authentication and almost always includes authorization.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A typical federation might include a number of organizations that have established trust for shared access to a set of resources.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Security Token Service (STS)</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A Web service that issues security tokens; that is, it makes assertions based on evidence that it trusts, to whomever trusts it.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This forms the basis of trust brokering between domains.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example Scenario</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following illustration shows an example of federated security.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Federation<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/typicalfederatedsecurityscenario.gif "</bpt>TypicalFederatedSecurityScenario<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This scenario includes two organizations: A and B. Organization B has a Web resource (a Web service) that some users in organization A find valuable.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This section uses the terms <bpt id="p1">*</bpt>resource<ept id="p1">*</ept>, <bpt id="p2">*</bpt>service<ept id="p2">*</ept>, and <bpt id="p3">*</bpt>Web service<ept id="p3">*</ept> interchangeably.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Typically, organization B requires that a user from organization A provide some valid form of authentication before accessing the service.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In addition, the organization may also require that the user be authorized to access the specific resource in question.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>One way to address this problem and enable users in organization A to access the resource in organization B is as follows:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Users from organization A register their credentials (a user name and password) with organization B.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>During the resource access, users from organization A present their credentials to organization B and are authenticated before accessing the resource.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This approach has three significant drawbacks:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Organization B has to manage the credentials for users from organization A in addition to managing the credentials of its local users.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Users in organization A need to maintain an additional set of credentials (that is, remember an additional user name and password) apart from the credentials they normally use to gain access to resources within organization A. This usually encourages the practice of using the same user name and password at multiple service sites, which is a weak security measure.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The architecture does not scale as more organizations perceive the resource at organization B as being of some value.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An alternative approach, which addresses the previously mentioned drawbacks, is to employ federated security.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this approach, organizations A and B establish a trust relationship and employ Security Token Service (STS) to enable brokering of the established trust.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In a federated security architecture, users from organization A know that if they want to access the Web service in organization B that they must present a valid security token from the STS at organization B, which authenticates and authorizes their access to the specific service.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>On contacting the STS B, the users receive another level of indirection from the policy associated with the STS.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>They must present a valid security token from the STS A (that is, the client trust realm) before the STS B can issue them a security token.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This is a corollary of the trust relationship established between the two organizations and implies that organization B does not have to manage identities for users from organization A. In practice, STS B typically has a null <ph id="ph1">`issuerAddress`</ph> and <ph id="ph2">`issuerMetadataAddress`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>How to: Configure a Local Issuer<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-a-local-issuer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In that case, the client consults a local policy to locate STS A. This configuration is called <bpt id="p1">*</bpt>home realm federation<ept id="p1">*</ept> and it scales better because STS B does not have to maintain information about STS A.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The users then contact the STS at organization A and obtain a security token by presenting authentication credentials that they normally use to gain access to any other resource within organization A. This also alleviates the problem of users having to maintain multiple sets of credentials or using the same set of credentials at multiple service sites.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Once the users obtain a security token from the STS A, they present the token to the STS B. Organization B proceeds to perform authorization of the users' requests and issues a security token to the users from its own set of security tokens.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The users can then present their token to the resource at organization B and access the service.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Support for Federated Security in WCF</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides turnkey support for deploying federated security architectures through the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>wsFederationHttpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/wsfederationhttpbinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>wsFederationHttpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/wsfederationhttpbinding.md)</ept> element provides for a secure, reliable, interoperable binding that entails the use of HTTP as the underlying transport mechanism for request-reply communication style, employing text and XML as the wire format for encoding.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The use of <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>wsFederationHttpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/wsfederationhttpbinding.md)</ept> in a federated security scenario can be decoupled into two logically independent phases, as described in the following sections.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Phase 1: Design Phase</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>During the design phase, the client uses the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to read the policy the service endpoint exposes and to collect the service's authentication and authorization requirements.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The appropriate proxies are constructed to create the following federated security communication pattern at the client:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Obtain a security token from the STS in the client trust realm.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Present the token to the STS in the service trust realm.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Obtain a security token from the STS in the service trust realm.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Present the token to the service to access the service.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Phase 2: Run-Time Phase</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>During the run-time phase, the client instantiates an object of the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client class and makes a call using the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The underlying framework of <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> handles the previously mentioned steps in the federated security communication pattern and enables the client to seamlessly consume the service.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Sample Implementation Using WCF</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following illustration shows a sample implementation for a federated security architecture using native support from <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Federation security in WCF<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/federatedsecurityinwcf.gif "</bpt>FederatedSecurityInWCF<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Example MyService</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The service <ph id="ph1">`MyService`</ph> exposes a single endpoint through <ph id="ph2">`MyServiceEndpoint`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following illustration shows the address, binding, and contract associated with the endpoint.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Federation<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/myservice.gif "</bpt>MyService<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The service endpoint <ph id="ph1">`MyServiceEndpoint`</ph> uses the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>wsFederationHttpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/wsfederationhttpbinding.md)</ept> and requires a valid Security Assertions Markup Language (SAML) token with an <ph id="ph3">`accessAuthorized`</ph> claim issued by STS B. This is declaratively specified in the service configuration.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A subtle point should be noted about the claims required by <ph id="ph1">`MyService`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The second figure indicates that <ph id="ph1">`MyService`</ph> requires a SAML token with the <ph id="ph2">`accessAuthorized`</ph> claim.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To be more precise, this specifies the claim type that <ph id="ph1">`MyService`</ph> requires.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The fully-qualified name of this claim type is http://tempuri.org:accessAuthorized (along with the associated namespace), which is used in the service configuration file.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The value of this claim indicates the presence of this claim and is assumed to be set to <ph id="ph1">`true`</ph> by STS B.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>At runtime, this policy is enforced by the <ph id="ph1">`MyServiceOperationRequirement`</ph> class that is implemented as part of the <ph id="ph2">`MyService`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_Federation#0<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#0)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_Federation#0<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#0)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_Federation#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_Federation#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>STS B</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following illustration shows the STS B. As stated earlier, a security token service (STS) is also a Web service and can have its associated endpoints, policy, and so on.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Federation<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/msservicestsb.gif "</bpt>MsServiceSTSB<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>STS B exposes a single endpoint, called <ph id="ph1">`STSEndpoint`</ph> that can be use to request security tokens.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifically, STS B issues SAML tokens with the <ph id="ph1">`accessAuthorized`</ph> claim, which can be presented at the <ph id="ph2">`MyService`</ph> service site for accessing the service.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>However, STS B requires users to present a valid SAML token issued by STS A that contains the <ph id="ph1">`userAuthenticated`</ph> claim.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This is declaratively specified in the STS configuration.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Again, the <ph id="ph1">`userAuthenticated`</ph> claim is the claim type that is required by STS B. The fully-qualified name of this claim type is http://tempuri.org:userAuthenticated (along with the associated namespace), which is used in the STS configuration file.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The value of this claim indicates the presence of this claim and is assumed to be set to <ph id="ph1">`true`</ph> by STS A.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>At runtime, the <ph id="ph1">`STS_B_OperationRequirement`</ph> class enforces this policy, which is implemented as part of STS B.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_Federation#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_Federation#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If the access check is clear, STS B issues a SAML token with the <ph id="ph1">`accessAuthorized`</ph> claim.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_Federation#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_Federation#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>STS A</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The following illustration shows the STS A.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Federation<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/sts-b.gif "</bpt>STS_B<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Similar to the STS B, the STS A is also a Web service that issues security tokens and exposes a single endpoint for this purpose.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>However, it uses a different binding (<ph id="ph1">`wsHttpBinding`</ph>) and requires users to present a valid <ph id="ph2">[!INCLUDE[infocard](../../../../includes/infocard-md.md)]</ph> with an <ph id="ph3">`emailAddress`</ph> claim.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In response, it issues SAML tokens with the <ph id="ph1">`userAuthenticated`</ph> claim.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This is declaratively specified in the service configuration.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>At runtime, the <ph id="ph1">`STS_A_OperationRequirement`</ph> class enforces this policy, which is implemented as part of STS A.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_Federation#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_Federation#4<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If the access is <ph id="ph1">`true`</ph>, STS A issues a SAML token with <ph id="ph2">`userAuthenticated`</ph> claim.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_Federation#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>C_Federation#5<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Client at Organization A</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following illustration shows the client at organization A, along with the steps involved in making a <ph id="ph1">`MyService`</ph> service call.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The other functional components are also included for completeness.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Federation<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/federationclienta.gif "</bpt>FederationClientA<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Federated security provides a clean division of responsibility and helps to build secure, scalable service architectures.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>As a platform for building and deploying distributed applications, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides native support for implementing federated security.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/security.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>