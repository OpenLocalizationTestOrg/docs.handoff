<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ace83365af7135bf99d664099ba5af3a761e3dcb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\defining-a-property-in-windows-forms-controls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96bd54ed4c43de0798ccf904a3667c4cc598eab8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce2bdf12bd38c5d2ebaf5231506465b7c4d0e74f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defining a Property in Windows Forms Controls | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Defining a Property in Windows Forms Controls</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For an overview of properties, see <bpt id="p1">[</bpt>Properties Overview<ept id="p1">](http://msdn.microsoft.com/library/8f1a1ff1-0f05-40e0-bfdf-80de8fff7d52)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are a few important considerations when defining a property:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You must apply attributes to the properties you define.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Attributes specify how the designer should display a property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Design-Time Attributes for Components<ept id="p1">](http://msdn.microsoft.com/library/12050fe3-9327-4509-9e21-4ee2494b95c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If changing the property affects the visual display of the control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method (that your control inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>) from the <ph id="ph3">`set`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> in turn calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method, which redraws the control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> result in a single call to <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> for efficiency.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The .NET Framework class library provides type converters for common data types such as integers, decimal numbers, Boolean values, and others.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The purpose of a type converter is generally to provide string-to-value conversion (from string data to other data types).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Common data types are associated with default type converters that convert values into strings and strings into the appropriate data types.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you define a property that is a custom (that is, nonstandard) data type, you will have to apply an attribute that specifies the type converter to associate with that property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also use an attribute to associate a custom UI type editor with a property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A UI type editor provides a user interface for editing a property or data type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A color picker is an example of a UI type editor.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Examples of attributes are given at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a type converter or a UI type editor is not available for your custom property, you can implement one as described in <bpt id="p1">[</bpt>Extending Design-Time Support<ept id="p1">](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following code fragment defines a custom property named <ph id="ph1">`EndColor`</ph> for the custom control <ph id="ph2">`FlashTrackBar`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following code fragment associates a type converter and a UI type editor with the property <ph id="ph1">`Value`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this case <ph id="ph1">`Value`</ph> is an integer and has a default type converter, but the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute applies a custom type converter (<ph id="ph3">`FlashTrackBarValueConverter`</ph>) that enables the designer to display it as a percentage.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The UI type editor, <ph id="ph1">`FlashTrackBarValueEditor`</ph>, allows the percentage to be displayed visually.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example also shows that the type converter or editor specified by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> attribute overrides the default converter.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Properties in Windows Forms Controls<ept id="p1">](../../../../docs/framework/winforms/controls/properties-in-windows-forms-controls.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id="p1">](../../../../docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property-Changed Events<ept id="p1">](../../../../docs/framework/winforms/controls/property-changed-events.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attributes in Windows Forms Controls<ept id="p1">](../../../../docs/framework/winforms/controls/attributes-in-windows-forms-controls.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>