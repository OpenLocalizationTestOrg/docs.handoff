{"content":"---\ntitle: \"How to: Read Object Data from an XML File (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 6ad60d96-a4d9-48e6-a8b0-d7f6f803cafa\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Read Object Data from an XML File (C#)\nThis example reads object data that was previously written to an XML file using the <xref:System.Xml.Serialization.XmlSerializer> class.  \n  \n## Example  \n  \n```csharp  \npublic class Book  \n{  \n    public String title;  \n}         \n  \npublic void ReadXML()  \n{  \n    // First write something so that there is something to read ...  \n    var b = new Book { title = \"Serialization Overview\" };  \n    var writer = new System.Xml.Serialization.XmlSerializer(typeof(Book));  \n    var wfile = new System.IO.StreamWriter(@\"c:\\temp\\SerializationOverview.xml\");  \n    writer.Serialize(wfile, b);  \n    wfile.Close();  \n  \n    // Now we can read the serialized book ...  \n    System.Xml.Serialization.XmlSerializer reader =   \n        new System.Xml.Serialization.XmlSerializer(typeof(Book));  \n    System.IO.StreamReader file = new System.IO.StreamReader(  \n        @\"c:\\temp\\SerializationOverview.xml\");  \n    Book overview =  (Book)reader.Deserialize(file);  \n    file.Close();  \n  \n    Console.WriteLine(overview.title);  \n  \n}  \n```  \n  \n## Compiling the Code  \n Replace the file name \"c:\\temp\\SerializationOverview.xml\" with the name of the file containing the serialized data. For more information about serializing data, see [How to: Write Object Data to an XML File (C#)](../../../../csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md).  \n  \n The class must have a public constructor without parameters.  \n  \n Only public properties and fields are deserialized.  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   The class being serialized does not have a public, parameterless constructor.  \n  \n-   The data in the file does not represent data from the class to be deserialized.  \n  \n-   The file does not exist (<xref:System.IO.IOException>).  \n  \n## .NET Framework Security  \n Always verify inputs, and never deserialize data from an untrusted source. The re-created object runs on a local computer with the permissions of the code that deserialized it. Verify all inputs before using the data in your application.  \n  \n## See Also  \n <xref:System.IO.StreamWriter>   \n [How to: Write Object Data to an XML File (C#)](../../../../csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)   \n [Serialization (C# )](../../../../csharp/programming-guide/concepts/serialization/index.md)   \n [C# Programming Guide](../../../../csharp/programming-guide/index.md)","nodes":[{"pos":[12,75],"content":"How to: Read Object Data from an XML File (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Read Object Data from an XML File (C#) | Microsoft Docs","pos":[0,63]}]},{"pos":[434,480],"content":"How to: Read Object Data from an XML File (C#)","linkify":"How to: Read Object Data from an XML File (C#)","nodes":[{"content":"How to: Read Object Data from an XML File (C#)","pos":[0,46]}]},{"content":"This example reads object data that was previously written to an XML file using the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.","pos":[481,617],"source":"This example reads object data that was previously written to an XML file using the <xref:System.Xml.Serialization.XmlSerializer> class."},{"pos":[626,633],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1517,1535],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"Replace the file name \"c:\\temp\\SerializationOverview.xml\" with the name of the file containing the serialized data.","pos":[1539,1654]},{"content":"For more information about serializing data, see <bpt id=\"p1\">[</bpt>How to: Write Object Data to an XML File (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)</ept>.","pos":[1655,1856],"source":" For more information about serializing data, see [How to: Write Object Data to an XML File (C#)](../../../../csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)."},{"content":"The class must have a public constructor without parameters.","pos":[1863,1923]},{"content":"Only public properties and fields are deserialized.","pos":[1930,1981]},{"pos":[1990,2008],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[2012,2060]},{"content":"The class being serialized does not have a public, parameterless constructor.","pos":[2070,2147]},{"content":"The data in the file does not represent data from the class to be deserialized.","pos":[2157,2236]},{"content":"The file does not exist (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","pos":[2246,2301],"source":"The file does not exist (<xref:System.IO.IOException>)."},{"pos":[2310,2333],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"Always verify inputs, and never deserialize data from an untrusted source.","pos":[2337,2411]},{"content":"The re-created object runs on a local computer with the permissions of the code that deserialized it.","pos":[2412,2513]},{"content":"Verify all inputs before using the data in your application.","pos":[2514,2574]},{"pos":[2583,2591],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph>","pos":[2595,2624],"source":"<xref:System.IO.StreamWriter> "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Write Object Data to an XML File (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[2628,2781],"source":" [How to: Write Object Data to an XML File (C#)](../../../../csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Serialization (C# )<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/serialization/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2784,2877],"source":" [Serialization (C# )](../../../../csharp/programming-guide/concepts/serialization/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../../csharp/programming-guide/index.md)</ept>","pos":[2880,2950],"source":" [C# Programming Guide](../../../../csharp/programming-guide/index.md)"}]}