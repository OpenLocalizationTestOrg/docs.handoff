<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-one-way-contract.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4996dc963c572e2aeb14b9b366af33b8f23d480</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-create-a-one-way-contract.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6eb8d19139844583a243131ebdceec45cb9db61</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab4fdc8d934c9e78735262ce48dc4a1df6c79bf8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a One-Way Contract</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a One-Way Contract</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows the basic steps to create methods that use a one-way contract.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Such methods invoke operations on a Windows Communication Foundation (WCF) service from a client but do not expect a reply.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This type of contract can be used, for example, to publish notifications to many subscribers.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can also use one-way contracts when creating a duplex (two-way) contract, which allows clients and servers to communicate with each other independently so that either can initiate calls to the other.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This can allow, in particular, the server to make one-way calls to the client that the client can treat as events.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For detailed information about specifying one-way methods, see the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information about creating a client application for a duplex contract, see <bpt id="p1">[</bpt>How to: Access Services with One-Way and Request-Reply Contracts<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-access-wcf-services-with-one-way-and-request-reply-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a working sample, see the <bpt id="p1">[</bpt>One-Way<ept id="p1">](../../../../docs/framework/wcf/samples/one-way.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To create a one-way contract</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create the service contract by applying the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class to the interface that defines the methods the service is to implement.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Indicate which methods in the interface a client can invoked by applying the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> class to them.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Designate operations that must have no output (no return value and no out or ref parameters) as one-way by setting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note that the operations that carry the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> class satisfy a request-reply contract by default because the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is <ph id="ph3">`false`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>So you must explicitly specify the value of the attribute property to be <ph id="ph1">`true`</ph> if you want a one-way contract for the method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following code example defines a contract for a service that includes several one-way methods.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>All of the methods have one-way contracts except <ph id="ph1">`Equals`</ph>, which defaults to request-reply and returns a result.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Designing and Implementing Services<ept id="p1">](../../../../docs/framework/wcf/designing-and-implementing-services.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Service Contract<ept id="p1">](../../../../docs/framework/wcf/how-to-define-a-wcf-service-contract.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Session<ept id="p1">](../../../../docs/framework/wcf/samples/session.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Duplex Contract<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>