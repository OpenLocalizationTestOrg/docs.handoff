{"content":"---\ntitle: \"Custom Rendering Ink | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"custom-rendering ink\"\n  - \"classes, Stroke\"\n  - \"classes, DynamicRenderer\"\n  - \"ink, custom-rendering\"\n  - \"InkCanvas class\"\n  - \"Stroke class\"\n  - \"DynamicRenderer class\"\n  - \"classes, InkCanvas\"\nms.assetid: 65c978a7-0ee0-454f-ac7f-b1bd2efecac5\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Custom Rendering Ink\nThe <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property of a stroke allows you to specify the appearance of a stroke, such as its size, color, and shape, but there may be times that you want to customize the appearance beyond what <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> allow. You may want to customize the appearance of ink by rendering in the appearance of an air brush, oil paint, and many other effects. The [!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)] allows you to custom render ink by implementing a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and <xref:System.Windows.Ink.Stroke> object.  \n  \n This topic contains the following subsections:  \n  \n-   [Architecture](#Architecture)  \n  \n-   [Implementing a Dynamic Renderer](#ImplementingADynamicRenderer)  \n  \n-   [Implementing Custom Strokes](#ImplementingCustomStrokes)  \n  \n-   [Implementing a Custom InkCanvas](#ImplementingACustomInkCanvas)  \n  \n-   [Conclusion](#Conclusion)  \n  \n<a name=\"Architecture\"></a>   \n## Architecture  \n Ink rendering occurs two times; when a user writes ink to an inking surface, and again after the stroke is added to the ink-enabled surface. The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> renders the ink when the user moves the tablet pen on the digitizer, and the <xref:System.Windows.Ink.Stroke> renders itself once it is added to an element.  \n  \n There are three classes to implement when dynamically rendering ink.  \n  \n1.  **DynamicRenderer**: Implement a class that derives from <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>. This class is a specialized <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> that renders the stroke as it is drawn. The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> does the rendering on a separate thread, so the inking surface appears to collect ink even when the application user interface (UI) thread is blocked. For more information about the threading model, see [The Ink Threading Model](../../../../docs/framework/wpf/advanced/the-ink-threading-model.md). To customize dynamically rendering a stroke, override the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw%2A> method.  \n  \n2.  **Stroke**: Implement a class that derives from <xref:System.Windows.Ink.Stroke>. This class is responsible for static rendering of the <xref:System.Windows.Input.StylusPoint> data after it has been converted into a <xref:System.Windows.Ink.Stroke> object. Override the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method to ensure that static rendering of the stroke is consistent with dynamic rendering.  \n  \n3.  **InkCanvas:** Implement a class that derives from <xref:System.Windows.Controls.InkCanvas>. Assign the customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property. Override the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method and add a custom stroke to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property. This ensures that the appearance of the ink is consistent.  \n  \n<a name=\"ImplementingADynamicRenderer\"></a>   \n## Implementing a Dynamic Renderer  \n Although the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> class is a standard part of [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)], to perform more specialized rendering, you must create a customized dynamic renderer that derives from the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and override the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw%2A> method.  \n  \n The following example demonstrates a customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> that draws ink with a linear gradient brush effect.  \n  \n [!code-csharp[AdvancedInkTopicsSamples#19](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)]\n [!code-vb[AdvancedInkTopicsSamples#19](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)]  \n[!code-csharp[AdvancedInkTopicsSamples#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#1)]\n[!code-vb[AdvancedInkTopicsSamples#1](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#1)]  \n  \n<a name=\"ImplementingCustomStrokes\"></a>   \n## Implementing Custom Strokes  \n Implement a class that derives from <xref:System.Windows.Ink.Stroke>. This class is responsible for rendering <xref:System.Windows.Input.StylusPoint> data after it has been converted into a <xref:System.Windows.Ink.Stroke> object. Override the <xref:System.Windows.Ink.Stroke.DrawCore%2A> class to do the actual drawing.  \n  \n Your Stroke class can also store custom data by using the <xref:System.Windows.Ink.Stroke.AddPropertyData%2A> method. This data is stored with the stroke data when persisted.  \n  \n The <xref:System.Windows.Ink.Stroke> class can also perform hit testing. You can also implement your own hit testing algorithm by overriding the <xref:System.Windows.Ink.Stroke.HitTest%2A> method in the current class.  \n  \n The following C# code demonstrates a custom <xref:System.Windows.Ink.Stroke> class that renders <xref:System.Windows.Input.StylusPoint> data as a 3-D stroke.  \n  \n [!code-csharp[AdvancedInkTopicsSamples#19](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)]\n [!code-vb[AdvancedInkTopicsSamples#19](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)]  \n[!code-csharp[AdvancedInkTopicsSamples#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#2)]\n[!code-vb[AdvancedInkTopicsSamples#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#2)]  \n  \n<a name=\"ImplementingACustomInkCanvas\"></a>   \n## Implementing a Custom InkCanvas  \n The easiest way to use your customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and stroke is to implement a class that derives from <xref:System.Windows.Controls.InkCanvas> and uses these classes. The <xref:System.Windows.Controls.InkCanvas> has a <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property that specifies how the stroke is rendered when the user is drawing it.  \n  \n To custom render strokes on an <xref:System.Windows.Controls.InkCanvas> do the following:  \n  \n-   Create a class that derives from the <xref:System.Windows.Controls.InkCanvas>.  \n  \n-   Assign your customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A?displayProperty=fullName> property.  \n  \n-   Override the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method. In this method, remove the original stroke that was added to the InkCanvas. Then create a custom stroke, add it to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property, and call the base class with a new <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs> that contains the custom stroke.  \n  \n The following C# code demonstrates a custom <xref:System.Windows.Controls.InkCanvas> class that uses a customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and collects custom strokes.  \n  \n [!code-csharp[AdvancedInkTopicsSamples#9](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#9)]  \n  \n An <xref:System.Windows.Controls.InkCanvas> can have more than one <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>. You can add multiple <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> objects to the <xref:System.Windows.Controls.InkCanvas> by adding them to the <xref:System.Windows.UIElement.StylusPlugIns%2A> property.  \n  \n<a name=\"Conclusion\"></a>   \n## Conclusion  \n You can customize the appearance of ink by deriving your own <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>, <xref:System.Windows.Ink.Stroke>, and <xref:System.Windows.Controls.InkCanvas> classes. Together, these classes ensure that the appearance of the stroke is consistent when the user draws the stroke and after it is collected.  \n  \n## See Also  \n [Advanced Ink Handling](../../../../docs/framework/wpf/advanced/advanced-ink-handling.md)","nodes":[{"pos":[12,49],"content":"Custom Rendering Ink | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Custom Rendering Ink | Microsoft Docs","pos":[0,37]}]},{"pos":[581,601],"content":"Custom Rendering Ink","linkify":"Custom Rendering Ink","nodes":[{"content":"Custom Rendering Ink","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property of a stroke allows you to specify the appearance of a stroke, such as its size, color, and shape, but there may be times that you want to customize the appearance beyond what <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> allow.","pos":[602,904],"source":"The <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property of a stroke allows you to specify the appearance of a stroke, such as its size, color, and shape, but there may be times that you want to customize the appearance beyond what <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> allow."},{"content":"You may want to customize the appearance of ink by rendering in the appearance of an air brush, oil paint, and many other effects.","pos":[905,1035]},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)]</ph> allows you to custom render ink by implementing a custom <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.","pos":[1036,1267],"source":" The [!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)] allows you to custom render ink by implementing a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and <xref:System.Windows.Ink.Stroke> object."},{"content":"This topic contains the following subsections:","pos":[1274,1320]},{"pos":[1330,1359],"content":"<bpt id=\"p1\">[</bpt>Architecture<ept id=\"p1\">](#Architecture)</ept>","source":"[Architecture](#Architecture)"},{"pos":[1369,1433],"content":"<bpt id=\"p1\">[</bpt>Implementing a Dynamic Renderer<ept id=\"p1\">](#ImplementingADynamicRenderer)</ept>","source":"[Implementing a Dynamic Renderer](#ImplementingADynamicRenderer)"},{"pos":[1443,1500],"content":"<bpt id=\"p1\">[</bpt>Implementing Custom Strokes<ept id=\"p1\">](#ImplementingCustomStrokes)</ept>","source":"[Implementing Custom Strokes](#ImplementingCustomStrokes)"},{"pos":[1510,1574],"content":"<bpt id=\"p1\">[</bpt>Implementing a Custom InkCanvas<ept id=\"p1\">](#ImplementingACustomInkCanvas)</ept>","source":"[Implementing a Custom InkCanvas](#ImplementingACustomInkCanvas)"},{"pos":[1584,1609],"content":"<bpt id=\"p1\">[</bpt>Conclusion<ept id=\"p1\">](#Conclusion)</ept>","source":"[Conclusion](#Conclusion)"},{"pos":[1649,1661],"content":"Architecture","linkify":"Architecture","nodes":[{"content":"Architecture","pos":[0,12]}]},{"content":"Ink rendering occurs two times; when a user writes ink to an inking surface, and again after the stroke is added to the ink-enabled surface.","pos":[1665,1805]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> renders the ink when the user moves the tablet pen on the digitizer, and the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> renders itself once it is added to an element.","pos":[1806,2024],"source":" The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> renders the ink when the user moves the tablet pen on the digitizer, and the <xref:System.Windows.Ink.Stroke> renders itself once it is added to an element."},{"content":"There are three classes to implement when dynamically rendering ink.","pos":[2031,2099]},{"content":"<bpt id=\"p1\">**</bpt>DynamicRenderer<ept id=\"p1\">**</ept>: Implement a class that derives from <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>.","pos":[2109,2224],"source":"**DynamicRenderer**: Implement a class that derives from <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>."},{"content":"This class is a specialized <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> that renders the stroke as it is drawn.","pos":[2225,2347],"source":" This class is a specialized <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> that renders the stroke as it is drawn."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> does the rendering on a separate thread, so the inking surface appears to collect ink even when the application user interface (UI) thread is blocked.","pos":[2348,2560],"source":" The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> does the rendering on a separate thread, so the inking surface appears to collect ink even when the application user interface (UI) thread is blocked."},{"content":"For more information about the threading model, see <bpt id=\"p1\">[</bpt>The Ink Threading Model<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/the-ink-threading-model.md)</ept>.","pos":[2561,2707],"source":" For more information about the threading model, see [The Ink Threading Model](../../../../docs/framework/wpf/advanced/the-ink-threading-model.md)."},{"content":"To customize dynamically rendering a stroke, override the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw%2A&gt;</ph> method.","pos":[2708,2841],"source":" To customize dynamically rendering a stroke, override the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw%2A> method."},{"content":"<bpt id=\"p1\">**</bpt>Stroke<ept id=\"p1\">**</ept>: Implement a class that derives from <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[2851,2932],"source":"**Stroke**: Implement a class that derives from <xref:System.Windows.Ink.Stroke>."},{"content":"This class is responsible for static rendering of the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data after it has been converted into a <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.","pos":[2933,3107],"source":" This class is responsible for static rendering of the <xref:System.Windows.Input.StylusPoint> data after it has been converted into a <xref:System.Windows.Ink.Stroke> object."},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method to ensure that static rendering of the stroke is consistent with dynamic rendering.","pos":[3108,3256],"source":" Override the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method to ensure that static rendering of the stroke is consistent with dynamic rendering."},{"content":"<bpt id=\"p1\">**</bpt>InkCanvas:<ept id=\"p1\">**</ept> Implement a class that derives from <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.","pos":[3266,3358],"source":"**InkCanvas:** Implement a class that derives from <xref:System.Windows.Controls.InkCanvas>."},{"content":"Assign the customized <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> property.","pos":[3359,3515],"source":" Assign the customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property."},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A&gt;</ph> method and add a custom stroke to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property.","pos":[3516,3690],"source":" Override the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method and add a custom stroke to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property."},{"content":"This ensures that the appearance of the ink is consistent.","pos":[3691,3749]},{"pos":[3805,3836],"content":"Implementing a Dynamic Renderer","linkify":"Implementing a Dynamic Renderer","nodes":[{"content":"Implementing a Dynamic Renderer","pos":[0,31]}]},{"pos":[3840,4279],"content":"Although the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> class is a standard part of <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, to perform more specialized rendering, you must create a customized dynamic renderer that derives from the <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> and override the <ph id=\"ph4\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw%2A&gt;</ph> method.","source":"Although the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> class is a standard part of [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)], to perform more specialized rendering, you must create a customized dynamic renderer that derives from the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and override the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw%2A> method."},{"content":"The following example demonstrates a customized <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> that draws ink with a linear gradient brush effect.","pos":[4286,4443],"source":"The following example demonstrates a customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> that draws ink with a linear gradient brush effect."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>AdvancedInkTopicsSamples#19<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>AdvancedInkTopicsSamples#19<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)</ept><ept id=\"p3\">]</ept>","pos":[4450,4758],"source":"[!code-csharp[AdvancedInkTopicsSamples#19](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)]\n [!code-vb[AdvancedInkTopicsSamples#19](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>AdvancedInkTopicsSamples#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>AdvancedInkTopicsSamples#1<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#1)</ept><ept id=\"p3\">]</ept>","pos":[4761,5064],"source":"[!code-csharp[AdvancedInkTopicsSamples#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#1)]\n[!code-vb[AdvancedInkTopicsSamples#1](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#1)]"},{"pos":[5117,5144],"content":"Implementing Custom Strokes","linkify":"Implementing Custom Strokes","nodes":[{"content":"Implementing Custom Strokes","pos":[0,27]}]},{"content":"Implement a class that derives from <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[5148,5217],"source":"Implement a class that derives from <xref:System.Windows.Ink.Stroke>."},{"content":"This class is responsible for rendering <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data after it has been converted into a <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.","pos":[5218,5378],"source":" This class is responsible for rendering <xref:System.Windows.Input.StylusPoint> data after it has been converted into a <xref:System.Windows.Ink.Stroke> object."},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> class to do the actual drawing.","pos":[5379,5468],"source":" Override the <xref:System.Windows.Ink.Stroke.DrawCore%2A> class to do the actual drawing."},{"content":"Your Stroke class can also store custom data by using the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke.AddPropertyData%2A&gt;</ph> method.","pos":[5475,5592],"source":"Your Stroke class can also store custom data by using the <xref:System.Windows.Ink.Stroke.AddPropertyData%2A> method."},{"content":"This data is stored with the stroke data when persisted.","pos":[5593,5649]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class can also perform hit testing.","pos":[5656,5728],"source":"The <xref:System.Windows.Ink.Stroke> class can also perform hit testing."},{"content":"You can also implement your own hit testing algorithm by overriding the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> method in the current class.","pos":[5729,5873],"source":" You can also implement your own hit testing algorithm by overriding the <xref:System.Windows.Ink.Stroke.HitTest%2A> method in the current class."},{"content":"The following C# code demonstrates a custom <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class that renders <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as a 3-D stroke.","pos":[5880,6037],"source":"The following C# code demonstrates a custom <xref:System.Windows.Ink.Stroke> class that renders <xref:System.Windows.Input.StylusPoint> data as a 3-D stroke."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>AdvancedInkTopicsSamples#19<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>AdvancedInkTopicsSamples#19<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)</ept><ept id=\"p3\">]</ept>","pos":[6044,6352],"source":"[!code-csharp[AdvancedInkTopicsSamples#19](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)]\n [!code-vb[AdvancedInkTopicsSamples#19](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>AdvancedInkTopicsSamples#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>AdvancedInkTopicsSamples#2<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#2)</ept><ept id=\"p3\">]</ept>","pos":[6355,6658],"source":"[!code-csharp[AdvancedInkTopicsSamples#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#2)]\n[!code-vb[AdvancedInkTopicsSamples#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#2)]"},{"pos":[6714,6745],"content":"Implementing a Custom InkCanvas","linkify":"Implementing a Custom InkCanvas","nodes":[{"content":"Implementing a Custom InkCanvas","pos":[0,31]}]},{"content":"The easiest way to use your customized <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> and stroke is to implement a class that derives from <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> and uses these classes.","pos":[6749,6963],"source":"The easiest way to use your customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and stroke is to implement a class that derives from <xref:System.Windows.Controls.InkCanvas> and uses these classes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> property that specifies how the stroke is rendered when the user is drawing it.","pos":[6964,7154],"source":" The <xref:System.Windows.Controls.InkCanvas> has a <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property that specifies how the stroke is rendered when the user is drawing it."},{"content":"To custom render strokes on an <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> do the following:","pos":[7161,7250],"source":"To custom render strokes on an <xref:System.Windows.Controls.InkCanvas> do the following:"},{"content":"Create a class that derives from the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.","pos":[7260,7338],"source":"Create a class that derives from the <xref:System.Windows.Controls.InkCanvas>."},{"content":"Assign your customized <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A?displayProperty=fullName&gt;</ph> property.","pos":[7348,7530],"source":"Assign your customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A?displayProperty=fullName> property."},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A&gt;</ph> method.","pos":[7540,7622],"source":"Override the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method."},{"content":"In this method, remove the original stroke that was added to the InkCanvas.","pos":[7623,7698]},{"content":"Then create a custom stroke, add it to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property, and call the base class with a new <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs&gt;</ph> that contains the custom stroke.","pos":[7699,7936],"source":" Then create a custom stroke, add it to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property, and call the base class with a new <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs> that contains the custom stroke."},{"content":"The following C# code demonstrates a custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> class that uses a customized <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> and collects custom strokes.","pos":[7943,8143],"source":"The following C# code demonstrates a custom <xref:System.Windows.Controls.InkCanvas> class that uses a customized <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> and collects custom strokes."},{"pos":[8150,8295],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>AdvancedInkTopicsSamples#9<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#9)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[AdvancedInkTopicsSamples#9](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#9)]"},{"content":"An <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can have more than one <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>.","pos":[8302,8427],"source":"An <xref:System.Windows.Controls.InkCanvas> can have more than one <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>."},{"content":"You can add multiple <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> objects to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> by adding them to the <ph id=\"ph3\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property.","pos":[8428,8643],"source":" You can add multiple <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> objects to the <xref:System.Windows.Controls.InkCanvas> by adding them to the <xref:System.Windows.UIElement.StylusPlugIns%2A> property."},{"pos":[8681,8691],"content":"Conclusion","linkify":"Conclusion","nodes":[{"content":"Conclusion","pos":[0,10]}]},{"content":"You can customize the appearance of ink by deriving your own <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> classes.","pos":[8695,8902],"source":"You can customize the appearance of ink by deriving your own <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>, <xref:System.Windows.Ink.Stroke>, and <xref:System.Windows.Controls.InkCanvas> classes."},{"content":"Together, these classes ensure that the appearance of the stroke is consistent when the user draws the stroke and after it is collected.","pos":[8903,9039]},{"pos":[9048,9056],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[9060,9149],"content":"<bpt id=\"p1\">[</bpt>Advanced Ink Handling<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/advanced-ink-handling.md)</ept>","source":"[Advanced Ink Handling](../../../../docs/framework/wpf/advanced/advanced-ink-handling.md)"}]}