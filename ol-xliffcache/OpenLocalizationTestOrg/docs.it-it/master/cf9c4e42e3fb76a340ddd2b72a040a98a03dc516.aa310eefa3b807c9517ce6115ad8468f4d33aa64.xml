{"content":"---\ntitle: \"COR_PRF_FUNCTION_ARGUMENT_INFO Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"COR_PRF_FUNCTION_ARGUMENT_INFO\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_PRF_FUNCTION_ARGUMENT_INFO\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COR_PRF_FUNCTION_ARGUMENT_INFO structure [.NET Framework profiling]\"\nms.assetid: 07cf3bab-e193-4991-8205-3f41cf2d67b3\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 14\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# COR_PRF_FUNCTION_ARGUMENT_INFO Structure\nRepresents a function's arguments, in left-to-right order.  \n  \n## Syntax  \n  \n```  \ntypedef struct _COR_PRF_FUNCTION_ARGUMENT_INFO {  \n    ULONG numRanges;  \n    ULONG totalArgumentSize;  \n    COR_PRF_FUNCTION_ARGUMENT_RANGE ranges[1];  \n} COR_PRF_FUNCTION_ARGUMENT_INFO;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`numRanges`|The number of blocks of arguments. That is, this value is the number of [COR_PRF_FUNCTION_ARGUMENT_RANGE](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-range-structure.md) structures in the `ranges` array.|  \n|`totalArgumentSize`|The total size of all arguments. In other words, this value is the sum of the argument lengths.|  \n|`ranges`|An array of `COR_PRF_FUNCTION_ARGUMENT_RANGE` structures, each of which represents one block of function arguments.|  \n  \n## Remarks  \n A function may have many arguments. Those arguments might not be stored contiguously in memory. You might have a block of three arguments in one place, a block of two arguments in another place, and a final block of one argument in a different place. These arguments are all for the same function; they're just stored in different places.  \n  \n The `COR_PRF_FUNCTION_ARGUMENT_INFO` structure represents all the arguments of a single function. It uses an array to reference all the blocks of function arguments. So, for a single function, you have a single `COR_PRF_FUNCTION_ARGUMENT_INFO` structure, which references multiple `COR_PRF_FUNCTION_ARGUMENT_RANGE` structures, each of which points to one or more function arguments.  \n  \n Arguments that are stored in registers are spilled into memory to build the structures.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [Profiling Structures](../../../../docs/framework/unmanaged-api/profiling/profiling-structures.md)","nodes":[{"pos":[4,663],"embed":true,"restype":"x-metadata","content":"title: \"COR_PRF_FUNCTION_ARGUMENT_INFO Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"COR_PRF_FUNCTION_ARGUMENT_INFO\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_PRF_FUNCTION_ARGUMENT_INFO\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COR_PRF_FUNCTION_ARGUMENT_INFO structure [.NET Framework profiling]\"\nms.assetid: 07cf3bab-e193-4991-8205-3f41cf2d67b3\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 14\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"COR_PRF_FUNCTION_ARGUMENT_INFO Structure | Microsoft Docs","nodes":[{"pos":[0,57],"content":"COR_PRF_FUNCTION_ARGUMENT_INFO Structure | Microsoft Docs","nodes":[{"content":"COR_PRF_FUNCTION_ARGUMENT_INFO Structure | Microsoft Docs","pos":[0,57]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[670,710],"content":"COR_PRF_FUNCTION_ARGUMENT_INFO Structure","linkify":"COR_PRF_FUNCTION_ARGUMENT_INFO Structure","nodes":[{"content":"COR_PRF_FUNCTION_ARGUMENT_INFO Structure","pos":[0,40]}]},{"content":"Represents a function's arguments, in left-to-right order.","pos":[711,769]},{"pos":[778,784],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[998,1005],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[1012,1018]},{"content":"Description","pos":[1019,1030]},{"content":"The number of blocks of arguments.","pos":[1082,1116]},{"content":"That is, this value is the number of <bpt id=\"p1\">[</bpt>COR_PRF_FUNCTION_ARGUMENT_RANGE<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-range-structure.md)</ept> structures in the <ph id=\"ph1\">`ranges`</ph> array.","pos":[1117,1318],"source":" That is, this value is the number of [COR_PRF_FUNCTION_ARGUMENT_RANGE](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-range-structure.md) structures in the `ranges` array."},{"content":"The total size of all arguments.","pos":[1343,1375]},{"content":"In other words, this value is the sum of the argument lengths.","pos":[1376,1438]},{"pos":[1452,1567],"content":"An array of <ph id=\"ph1\">`COR_PRF_FUNCTION_ARGUMENT_RANGE`</ph> structures, each of which represents one block of function arguments.","source":"An array of `COR_PRF_FUNCTION_ARGUMENT_RANGE` structures, each of which represents one block of function arguments."},{"pos":[1577,1584],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A function may have many arguments.","pos":[1588,1623]},{"content":"Those arguments might not be stored contiguously in memory.","pos":[1624,1683]},{"content":"You might have a block of three arguments in one place, a block of two arguments in another place, and a final block of one argument in a different place.","pos":[1684,1838]},{"content":"These arguments are all for the same function; they're just stored in different places.","pos":[1839,1926]},{"content":"The <ph id=\"ph1\">`COR_PRF_FUNCTION_ARGUMENT_INFO`</ph> structure represents all the arguments of a single function.","pos":[1933,2030],"source":"The `COR_PRF_FUNCTION_ARGUMENT_INFO` structure represents all the arguments of a single function."},{"content":"It uses an array to reference all the blocks of function arguments.","pos":[2031,2098]},{"content":"So, for a single function, you have a single <ph id=\"ph1\">`COR_PRF_FUNCTION_ARGUMENT_INFO`</ph> structure, which references multiple <ph id=\"ph2\">`COR_PRF_FUNCTION_ARGUMENT_RANGE`</ph> structures, each of which points to one or more function arguments.","pos":[2099,2315],"source":" So, for a single function, you have a single `COR_PRF_FUNCTION_ARGUMENT_INFO` structure, which references multiple `COR_PRF_FUNCTION_ARGUMENT_RANGE` structures, each of which points to one or more function arguments."},{"content":"Arguments that are stored in registers are spilled into memory to build the structures.","pos":[2322,2409]},{"pos":[2418,2430],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2434,2538],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2545,2568],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl","source":"**Header:** CorProf.idl"},{"pos":[2575,2600],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2607,2635],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"},{"pos":[2724,2732],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2736,2834],"content":"<bpt id=\"p1\">[</bpt>Profiling Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-structures.md)</ept>","source":"[Profiling Structures](../../../../docs/framework/unmanaged-api/profiling/profiling-structures.md)"}]}