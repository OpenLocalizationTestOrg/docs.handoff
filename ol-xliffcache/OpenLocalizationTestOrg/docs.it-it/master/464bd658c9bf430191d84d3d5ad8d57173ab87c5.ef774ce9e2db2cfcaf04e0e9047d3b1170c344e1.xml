{"content":"---\ntitle: \"! operator - C# Reference\"\nms.custom: seodec18\nms.date: 02/14/2019\nf1_keywords: \n  - \"!_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"! operator [C#]\"\n  - \"logical negation operator (!) [C#]\"\n  - \"NOT operator [C#]\"\nms.assetid: f5ae133f-8f64-4560-b34f-cd9cd5eed4ad\n---\n# ! operator (C# Reference)\n\nThe logical negation operator `!` is a unary operator that computes logical negation of its [bool](../keywords/bool.md) operand. That is, it produces `true`, if the operand is `false`, and `false`, if the operand is `true`:\n\n[!code-csharp-interactive[logical negation](~/samples/snippets/csharp/language-reference/operators/LogicalNegationExamples.cs#Example)]\n\n## Operator overloadability\n\nUser-defined types can [overload](../keywords/operator.md) the `!` operator.\n\n## C# language specification\n\nFor more information, see the [Logical negation operator](~/_csharplang/spec/expressions.md#logical-negation-operator) section of the [C# language specification](../language-specification/index.md).\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Operators](index.md)","nodes":[{"pos":[4,272],"embed":true,"restype":"x-metadata","content":"title: \"! operator - C# Reference\"\nms.custom: seodec18\nms.date: 02/14/2019\nf1_keywords: \n  - \"!_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"! operator [C#]\"\n  - \"logical negation operator (!) [C#]\"\n  - \"NOT operator [C#]\"\nms.assetid: f5ae133f-8f64-4560-b34f-cd9cd5eed4ad","nodes":[{"content":"! operator - C# Reference","nodes":[{"pos":[0,25],"content":"! operator - C# Reference","nodes":[{"content":"! operator - C# Reference","pos":[0,25],"nodes":[{"content":"!","pos":[0,1]},{"content":"operator - C# Reference","pos":[2,25]}]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[279,304],"content":"! operator (C# Reference)","linkify":"! operator (C# Reference)","nodes":[{"content":"! operator (C# Reference)","pos":[0,25],"nodes":[{"content":"!","pos":[0,1]},{"content":"operator (C# Reference)","pos":[2,25]}]}]},{"content":"The logical negation operator <ph id=\"ph1\">`!`</ph> is a unary operator that computes logical negation of its <bpt id=\"p1\">[</bpt>bool<ept id=\"p1\">](../keywords/bool.md)</ept> operand.","pos":[306,434],"source":"The logical negation operator `!` is a unary operator that computes logical negation of its [bool](../keywords/bool.md) operand."},{"content":"That is, it produces <ph id=\"ph1\">`true`</ph>, if the operand is <ph id=\"ph2\">`false`</ph>, and <ph id=\"ph3\">`false`</ph>, if the operand is <ph id=\"ph4\">`true`</ph>:","pos":[435,529],"source":" That is, it produces `true`, if the operand is `false`, and `false`, if the operand is `true`:"},{"pos":[671,695],"content":"Operator overloadability","linkify":"Operator overloadability","nodes":[{"content":"Operator overloadability","pos":[0,24]}]},{"pos":[697,773],"content":"User-defined types can <bpt id=\"p1\">[</bpt>overload<ept id=\"p1\">](../keywords/operator.md)</ept> the <ph id=\"ph1\">`!`</ph> operator.","source":"User-defined types can [overload](../keywords/operator.md) the `!` operator."},{"pos":[778,803],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[805,1003],"content":"For more information, see the <bpt id=\"p1\">[</bpt>Logical negation operator<ept id=\"p1\">](~/_csharplang/spec/expressions.md#logical-negation-operator)</ept> section of the <bpt id=\"p2\">[</bpt>C# language specification<ept id=\"p2\">](../language-specification/index.md)</ept>.","source":"For more information, see the [Logical negation operator](~/_csharplang/spec/expressions.md#logical-negation-operator) section of the [C# language specification](../language-specification/index.md)."},{"pos":[1008,1016],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1020,1047],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1050,1106],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1109,1133],"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](index.md)</ept>","source":"[C# Operators](index.md)"}]}