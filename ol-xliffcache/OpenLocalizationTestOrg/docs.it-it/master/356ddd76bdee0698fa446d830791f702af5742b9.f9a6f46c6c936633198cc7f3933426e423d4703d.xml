{"content":"---\ntitle: \"How to:Determine the Discovery Version of a Probe Request\"\nms.date: \"03/30/2017\"\nms.assetid: b3c4e2e2-2957-4074-ae6a-776a5ca84278\n---\n# How to:Determine the Discovery Version of a Probe Request\nA discovery proxy may expose multiple discovery endpoints using different discovery versions. When a UDP multicast Probe request arrives at the proxy the proxy should respond with a multicast suppression message. In order to do this it would have to know the discovery version of the request.  \n  \n### To Determine the Discovery Version of a Probe Request  \n  \n1.  In the method that responds to a Probe request (for example <xref:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind%2A>) use the static <xref:System.ServiceModel.OperationContext.Current%2A> property to search for a <xref:System.ServiceModel.Discovery.DiscoveryOperationContextExtension> as shown in the following code.  \n  \n    ```  \n    DiscoveryOperationContextExtension doce = OperationContext.Current.Extensions.Find<DiscoveryOperationContextExtension>();  \n    // Access the discovery version from the DiscoveryOperationContextExtension  \n    doce.DiscoveryVersion;  \n    ```  \n  \n## See also\n\n- <xref:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion%2A>\n- [Implementing a Discovery Proxy](../../../../docs/framework/wcf/feature-details/implementing-a-discovery-proxy.md)\n","nodes":[{"pos":[4,141],"embed":true,"restype":"x-metadata","content":"title: \"How to:Determine the Discovery Version of a Probe Request\"\nms.date: \"03/30/2017\"\nms.assetid: b3c4e2e2-2957-4074-ae6a-776a5ca84278","nodes":[{"content":"How to:Determine the Discovery Version of a Probe Request","nodes":[{"pos":[0,57],"content":"How to:Determine the Discovery Version of a Probe Request","nodes":[{"content":"How to:Determine the Discovery Version of a Probe Request","pos":[0,57]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[148,205],"content":"How to:Determine the Discovery Version of a Probe Request","linkify":"How to:Determine the Discovery Version of a Probe Request","nodes":[{"content":"How to:Determine the Discovery Version of a Probe Request","pos":[0,57]}]},{"content":"A discovery proxy may expose multiple discovery endpoints using different discovery versions.","pos":[206,299]},{"content":"When a UDP multicast Probe request arrives at the proxy the proxy should respond with a multicast suppression message.","pos":[300,418]},{"content":"In order to do this it would have to know the discovery version of the request.","pos":[419,498]},{"pos":[508,561],"content":"To Determine the Discovery Version of a Probe Request","linkify":"To Determine the Discovery Version of a Probe Request","nodes":[{"content":"To Determine the Discovery Version of a Probe Request","pos":[0,53]}]},{"pos":[571,897],"content":"In the method that responds to a Probe request (for example <ph id=\"ph1\">&lt;xref:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind%2A&gt;</ph>) use the static <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to search for a <ph id=\"ph3\">&lt;xref:System.ServiceModel.Discovery.DiscoveryOperationContextExtension&gt;</ph> as shown in the following code.","source":"In the method that responds to a Probe request (for example <xref:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind%2A>) use the static <xref:System.ServiceModel.OperationContext.Current%2A> property to search for a <xref:System.ServiceModel.Discovery.DiscoveryOperationContextExtension> as shown in the following code."},{"pos":[1168,1176],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1281,1395],"content":"<bpt id=\"p1\">[</bpt>Implementing a Discovery Proxy<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/implementing-a-discovery-proxy.md)</ept>","source":"[Implementing a Discovery Proxy](../../../../docs/framework/wcf/feature-details/implementing-a-discovery-proxy.md)"}]}