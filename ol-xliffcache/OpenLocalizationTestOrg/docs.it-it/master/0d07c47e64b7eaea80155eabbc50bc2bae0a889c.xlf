<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-transform-xml-by-using-linq.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d07c47e64b7eaea80155eabbc50bc2bae0a889c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\how-to-transform-xml-by-using-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6c5fb8d466ba8396081d379b7d267cda067d372</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7fe311d187232a4d4537920bbb9320e6d66c9ad</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Transform XML by Using LINQ (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Transform XML by Using LINQ (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept> make it easy to read XML from one source and transform it to a new XML format.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can take advantage of LINQ queries to retrieve the content to transform, or change content in an existing document to a new XML format.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The example in this topic transforms content from an XML source document to HTML to be viewed in a browser.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To transform an XML document</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a new Visual Basic project in the <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept> project template.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Double-click the Module1.vb file created in the project to modify the Visual Basic code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Sub Main`</ph> of the <ph id="ph2">`Module1`</ph> module.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This code creates the source XML document as an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Load XML from a File, String, or Stream<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>After the code to create the source XML document, add the following code to retrieve all the <ph id="ph1">\&lt;</ph>Book&gt; elements from the object and transform them into an HTML document.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The list of <ph id="ph1">\&lt;</ph>Book&gt; elements is created by using a LINQ query that returns a collection of <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects that contain the transformed HTML.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use embedded expressions to put the values from the source document in the new XML format.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The resulting HTML document is written to a file by using the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>After <ph id="ph1">`Sub Main`</ph> of <ph id="ph2">`Module1`</ph>, add a new method (<ph id="ph3">`Sub`</ph>) to transform a <ph id="ph4">\&lt;</ph>Description&gt; node into the specified HTML format.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is called by the code in the previous step and is used to preserve the format of the <ph id="ph1">\&lt;</ph>Description&gt; elements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method replaces sub-elements of the <ph id="ph1">\&lt;</ph>Description&gt; element with HTML.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ReplaceWith`</ph> method is used to preserve the location of the sub-elements.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The transformed content of the <ph id="ph1">\&lt;</ph>Description&gt; element is included in an HTML paragraph (<ph id="ph2">\&lt;</ph>p&gt;) element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph> property is used to retrieve the transformed content of the <ph id="ph2">\&lt;</ph>Description&gt; element.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This ensures that sub-elements are included in the transformed content.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add the following code after <ph id="ph1">`Sub Main`</ph> of <ph id="ph2">`Module1`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Save your changes.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Press F5 to run the code.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resulting saved document will resemble the following:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulating XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Load XML from a File, String, or Stream<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>