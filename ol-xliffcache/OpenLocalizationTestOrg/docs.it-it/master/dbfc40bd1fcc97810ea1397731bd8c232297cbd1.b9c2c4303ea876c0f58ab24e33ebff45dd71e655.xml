{"content":"---\ntitle: Create a WPF application in Visual Studio\nms.date: 10/26/2018\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"getting started [WPF], WPF\"\n  - \"WPF [WPF], getting started\"\nms.assetid: b96bed40-8946-4285-8fe4-88045ab854ed\nauthor: mairaw\nms.author: mairaw\nms.custom: vs-dotnet\n---\n\n# Walkthrough: My first WPF desktop application\n\nThis article shows you how to develop a simple Windows Presentation Foundation (WPF) application that includes the elements that are common to most WPF applications: Extensible Application Markup Language (XAML) markup, code-behind, application definitions, controls, layout, data binding, and styles.\n\nThis walkthrough includes the following steps:\n\n- Use XAML to design the appearance of the application's user interface (UI).\n\n- Write code to build the application's behavior.\n\n- Create an application definition to manage the application.\n\n- Add controls and create the layout to compose the application UI.\n\n- Create styles for a consistent appearance throughout an application's UI.\n\n- Bind the UI to data to both populate the UI from data and keep the data and UI synchronized.\n\nBy the end of the walkthrough, you'll have built a standalone Windows application that allows users to view expense reports for selected people. The application is composed of several WPF pages that are hosted in a browser-style window.\n\n> [!TIP]\n> The sample code that is used to build this walkthrough is available for both Visual Basic and C# at [Introduction to Building WPF Applications](https://go.microsoft.com/fwlink/?LinkID=160008).\n\n## Prerequisites\n\n- Visual Studio 2017 or later\n\n   For more information about installing the latest version of Visual Studio, see [Install Visual Studio](/visualstudio/install/install-visual-studio).\n\n## Create the application project\n\nThe first step is to create the application infrastructure, which includes an application definition, two pages, and an image.\n\n1. Create a new WPF Application project in Visual Basic or Visual C# named **`ExpenseIt`**:\n\n   1. Open Visual Studio and select **File** > **New** > **Project**.\n\n      The **New Project** dialog opens.\n\n   2. Under the **Installed** category, expand either the **Visual C#** or **Visual Basic** node, and then select **Windows Desktop**.\n\n   3. Select the **WPF App (.NET Framework)** template. Enter the name **`ExpenseIt`** and then select **OK**.\n\n      ![New Project dialog with WPF app selected](./media/new-project-dialog.png)\n\n      Visual Studio creates the project and opens the designer for the default application window named **MainWindow.xaml**.\n\n   > [!NOTE]\n   > This walkthrough uses the <xref:System.Windows.Controls.DataGrid> control that is available in the .NET Framework 4 and later. Be sure that your project targets the .NET Framework 4 or later. For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).\n\n2. Open *Application.xaml* (Visual Basic) or *App.xaml* (C#).\n\n    This XAML file defines a WPF application and any application resources. You also use this file to specify the UI that automatically shows when the application starts; in this case, *MainWindow.xaml*.\n\n    Your XAML should look like this in Visual Basic:\n\n    [!code-xaml[ExpenseIt#1_A](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/Application.xaml#1_a)]\n\n    Or like this in C#:\n\n    [!code-xaml[ExpenseIt#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/App.xaml#1)]\n\n3. Open *MainWindow.xaml*.\n\n    This XAML file is the main window of your application and displays content created in pages. The <xref:System.Windows.Window> class defines the properties of a window, such as its title, size, or icon, and handles events, such as closing or hiding.\n\n4. Change the <xref:System.Windows.Window> element to a <xref:System.Windows.Navigation.NavigationWindow>, as shown in the following XAML:\n\n   ```xaml\n   <NavigationWindow x:Class=\"ExpenseIt.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        ...\n   </NavigationWindow>\n   ```\n\n   This app navigates to different content depending on the user input. This is why the main <xref:System.Windows.Window> needs to be changed to a <xref:System.Windows.Navigation.NavigationWindow>. <xref:System.Windows.Navigation.NavigationWindow> inherits all the properties of <xref:System.Windows.Window>. The <xref:System.Windows.Navigation.NavigationWindow> element in the XAML file creates an instance of the <xref:System.Windows.Navigation.NavigationWindow> class. For more information, see [Navigation overview](../app-development/navigation-overview.md).\n\n5. Change the following properties on the <xref:System.Windows.Navigation.NavigationWindow> element:\n\n    - Set the <xref:System.Windows.Window.Title%2A> property to \"`ExpenseIt`\".\n\n    - Set the <xref:System.Windows.FrameworkElement.Width%2A> property to 500 pixels.\n\n    - Set the <xref:System.Windows.FrameworkElement.Height%2A> property to 350 pixels.\n\n    - Remove the <xref:System.Windows.Controls.Grid> elements between the <xref:System.Windows.Navigation.NavigationWindow> tags.\n\n    Your XAML should look like this in Visual Basic:\n\n    [!code-xaml[ExpenseIt#2_A](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt/MainWindow.xaml#2_a)]\n\n    Or like this in C#:\n\n    [!code-xaml[ExpenseIt#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/MainWindow.xaml#2)]\n\n6. Open *MainWindow.xaml.vb* or *MainWindow.xaml.cs*.\n\n    This file is a code-behind file that contains code to handle the events declared in *MainWindow.xaml*. This file contains a partial class for the window defined in XAML.\n\n7. If you are using C#, change the `MainWindow` class to derive from <xref:System.Windows.Navigation.NavigationWindow>. (In Visual Basic, this happens automatically when you change the window in XAML.)\n\n   Your code should look like this:\n\n   [!code-csharp[ExpenseIt#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/MainWindow.xaml.cs#3)]\n   [!code-vb[ExpenseIt#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/MainWindow.xaml.vb#3)]\n\n   > [!TIP]\n   > You can toggle the code language of the sample code between C# and Visual Basic in the **Language** drop-down on the upper right side of this article.\n\n## Add files to the application\n\nIn this section, you'll add two pages and an image to the application.\n\n1. Add a new WPF page to the project, and name it *`ExpenseItHome.xaml`*:\n\n   1. In **Solution Explorer**, right-click on the **`ExpenseIt`** project node and choose **Add** > **Page**.\n\n   1. In the **Add New Item** dialog, the **Page (WPF)** template is already selected. Enter the name **`ExpenseItHome`**, and then select **Add**.\n\n    This page is the first page that's displayed when the application is launched. It will show a list of people to select from, to show an expense report for.\n\n2. Open *`ExpenseItHome.xaml`*.\n\n3. Set the <xref:System.Windows.Controls.Page.Title%2A> to \"`ExpenseIt - Home`\".\n\n    Your XAML should look like this in Visual Basic:\n\n    [!code-xaml[ExpenseIt#6_A](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/ExpenseItHome.xaml#6_a)]\n\n    Or this in C#:\n\n    [!code-xaml[ExpenseIt#6](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt2/ExpenseItHome.xaml#6)]\n\n4. Open *MainWindow.xaml*.\n\n5. Set the <xref:System.Windows.Navigation.NavigationWindow.Source%2A> property on the <xref:System.Windows.Navigation.NavigationWindow> to \"`ExpenseItHome.xaml`\".\n\n    This sets *`ExpenseItHome.xaml`* to be the first page opened when the application starts. Your XAML should look like this in Visual Basic:\n\n    [!code-xaml[ExpenseIt#7_A](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/MainWindow.xaml#7_a)]\n\n    Or this in C#:\n\n    [!code-xaml[ExpenseIt#7](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt2/MainWindow.xaml#7)]\n\n   > [!TIP]\n   > You can also set the **Source** property in the **Miscellaneous** category of the **Properties** window.\n   >\n   > ![Source property in Properties window](./media/properties-source.png)\n\n6. Add another new WPF page to the project, and name it *ExpenseReportPage.xaml*::\n\n   1. In **Solution Explorer**, right-click on the **`ExpenseIt`** project node and choose **Add** > **Page**.\n\n   1. In the **Add New Item** dialog, the **Page (WPF)** template is already selected. Enter the name **ExpenseReportPage**, and then select **Add**.\n\n    This page will show the expense report for the person that is selected on the **`ExpenseItHome`** page.\n\n7. Open *ExpenseReportPage.xaml*.\n\n8. Set the <xref:System.Windows.Controls.Page.Title%2A> to \"`ExpenseIt - View Expense`\".\n\n    Your XAML should look like this in Visual Basic:\n\n    [!code-xaml[ExpenseIt#4_A](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/ExpenseReportPage.xaml#4_a)]\n\n    Or this in C#:\n\n    [!code-xaml[ExpenseIt#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/ExpenseReportPage.xaml#4)]\n\n9. Open *ExpenseItHome.xaml.vb* and *ExpenseReportPage.xaml.vb*, or *ExpenseItHome.xaml.cs* and *ExpenseReportPage.xaml.cs*.\n\n    When you create a new Page file, Visual Studio automatically creates a *code-behind* file. These code-behind files handle the logic for responding to user input.\n\n    Your code should look like this for **`ExpenseItHome`**:\n\n    [!code-csharp[ExpenseIt#2_5](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt2/ExpenseItHome.xaml.cs#2_5)]\n    [!code-vb[ExpenseIt#2_5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/ExpenseItHome.xaml.vb#2_5)]\n\n    And like this for **ExpenseReportPage**:\n\n    [!code-csharp[ExpenseIt#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/ExpenseReportPage.xaml.cs#5)]\n    [!code-vb[ExpenseIt#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/ExpenseReportPage.xaml.vb#5)]\n\n10. Add an image named *watermark.png* to the project. You can create your own image, copy the file from the sample code, or get it [here](https://github.com/dotnet/docs/blob/master/docs/framework/wpf/getting-started/./media/watermark.png).\n\n    1. Right-click on the project node and select **Add** > **Existing Item**, or press **Shift**+**Alt**+**A**.\n\n    2. In the **Add Existing Item** dialog, browse to the image file you want to use, and then select **Add**.\n\n## Build and run the application\n\n1. To build and run the application, press **F5** or select **Start Debugging** from the **Debug** menu.\n\n    The following illustration shows the application with the <xref:System.Windows.Navigation.NavigationWindow> buttons:\n\n    ![ExpenseIt sample screenshot](./media/gettingstartedfigure1.png)\n\n2. Close the application to return to Visual Studio.\n\n## Create the layout\n\nLayout provides an ordered way to place UI elements, and also manages the size and position of those elements when a UI is resized. You typically create a layout with one of the following layout controls:\n\n- <xref:System.Windows.Controls.Canvas>\n- <xref:System.Windows.Controls.DockPanel>\n- <xref:System.Windows.Controls.Grid>\n- <xref:System.Windows.Controls.StackPanel>\n- <xref:System.Windows.Controls.VirtualizingStackPanel>\n- <xref:System.Windows.Controls.WrapPanel>\n\nEach of these layout controls supports a special type of layout for its child elements. `ExpenseIt` pages can be resized, and each page has elements that are arranged horizontally and vertically alongside other elements. Consequently, the <xref:System.Windows.Controls.Grid> is the ideal layout element for the application.\n\n> [!TIP]\n> For more information about <xref:System.Windows.Controls.Panel> elements, see [Panels overview](../controls/panels-overview.md). For more information about layout, see [Layout](../advanced/layout.md).\n\nIn the section, you create a single-column table with three rows and a 10-pixel margin by adding column and row definitions to the <xref:System.Windows.Controls.Grid> in *`ExpenseItHome.xaml`*.\n\n1. Open *`ExpenseItHome.xaml`*.\n\n2. Set the <xref:System.Windows.FrameworkElement.Margin%2A> property on the <xref:System.Windows.Controls.Grid> element to \"10,0,10,10\", which corresponds to left, top, right and bottom margins:\n\n   ```xaml\n   <Grid Margin=\"10,0,10,10\">\n   ```\n\n   > [!TIP]\n   > You can also set the **Margin** values in the **Properties** window, under the **Layout** category:\n   >\n   > ![Margin values in Properties window](./media/properties-margin.png)\n\n3. Add the following XAML between the <xref:System.Windows.Controls.Grid> tags to create the row and column definitions:\n\n    [!code-xaml[ExpenseIt#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt3/ExpenseItHome.xaml#8)]\n\n    The <xref:System.Windows.Controls.RowDefinition.Height%2A> of two rows is set to <xref:System.Windows.GridLength.Auto%2A>, which means that the rows are sized based on the content in the rows. The default <xref:System.Windows.Controls.RowDefinition.Height%2A> is <xref:System.Windows.GridUnitType.Star> sizing, which means that the row height is a weighted proportion of the available space. For example if two rows each have a <xref:System.Windows.Controls.RowDefinition.Height%2A> of \"*\", they each have a height that is half of the available space.\n\n    Your <xref:System.Windows.Controls.Grid> should now look like the following XAML:\n\n    [!code-xaml[ExpenseIt#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt3/ExpenseItHome.xaml#9)]\n\n## Add controls\n\nIn this section, you'll update the home page UI to show a list of people that a user can select from to show the expense report for. Controls are UI objects that allow users to interact with your application. For more information, see [Controls](../controls/index.md).\n\nTo create this UI, you'll add the following elements to *`ExpenseItHome.xaml`*:\n\n- <xref:System.Windows.Controls.ListBox> (for the list of people).\n- <xref:System.Windows.Controls.Label> (for the list header).\n- <xref:System.Windows.Controls.Button> (to click to view the expense report for the person that is selected in the list).\n\nEach control is placed in a row of the <xref:System.Windows.Controls.Grid> by setting the <xref:System.Windows.Controls.Grid.Row%2A?displayProperty=nameWithType> attached property. For more information about attached properties, see [Attached Properties Overview](../advanced/attached-properties-overview.md).\n\n1. Open *`ExpenseItHome.xaml`*.\n\n2. Add the following XAML somewhere between the <xref:System.Windows.Controls.Grid> tags:\n\n   [!code-xaml[ExpenseIt#10](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt4/ExpenseItHome.xaml#10)]\n\n   > [!TIP]\n   > You can also create the controls by dragging them from the **Toolbox** window onto the design window, and then setting their properties in the **Properties** window.\n\n3. Build and run the application.\n\nThe following illustration shows the controls you just created:\n\n![ExpenseIt sample screenshot](./media/gettingstartedfigure2.png)\n\n## Add an image and a title\n\nIn this section, you'll update the home page UI with an image and a page title.\n\n1. Open *`ExpenseItHome.xaml`*.\n\n2. Add another column to the <xref:System.Windows.Controls.Grid.ColumnDefinitions%2A> with a fixed <xref:System.Windows.Controls.ColumnDefinition.Width%2A> of 230 pixels:\n\n    [!code-xaml[ExpenseIt#11](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt5/ExpenseItHome.xaml#11)]\n\n3. Add another row to the <xref:System.Windows.Controls.Grid.RowDefinitions%2A>, for a total of four rows:\n\n    [!code-xaml[ExpenseIt#11b](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt5/ExpenseItHome.xaml#11b)]\n\n4. Move the controls to the second column by setting the <xref:System.Windows.Controls.Grid.Column%2A?displayProperty=nameWithType> property to 1 in each of the three controls (Border, ListBox, and Button).\n\n5. Move each control down a row, by incrementing its <xref:System.Windows.Controls.Grid.Row%2A?displayProperty=nameWithType> value by 1.\n\n   The XAML for the three controls now looks like this:\n\n    [!code-xaml[ExpenseIt#12](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt5/ExpenseItHome.xaml#12)]\n\n6. Set the <xref:System.Windows.Controls.Panel.Background%2A> of the <xref:System.Windows.Controls.Grid> to be the *watermark.png* image file, by adding the following XAML somewhere between the `<Grid>` and `</Grid>` tags:\n\n    [!code-xaml[ExpenseIt#14](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt5/ExpenseItHome.xaml#14)]\n\n7. Before the <xref:System.Windows.Controls.Border> element, add a <xref:System.Windows.Controls.Label> with the content \"View Expense Report\". This is the title of the page.\n\n    [!code-xaml[ExpenseIt#13](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt5/ExpenseItHome.xaml#13)]\n\n8. Build and run the application.\n\nThe following illustration shows the results of what you just added:\n\n![ExpenseIt sample screenshot](./media/gettingstartedfigure3.png)\n\n## Add code to handle events\n\n1. Open *`ExpenseItHome.xaml`*.\n\n2. Add a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler to the <xref:System.Windows.Controls.Button> element. For more information, see [How to: Create a simple event handler](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb675300(v=vs.100)).\n\n    [!code-xaml[ExpenseIt#15](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt6/ExpenseItHome.xaml#15)]\n\n3. Open *`ExpenseItHome.xaml.vb`* or *`ExpenseItHome.xaml.cs`*.\n\n4. Add the following code to the `ExpenseItHome` class to add a button click event handler. The event handler opens the **ExpenseReportPage** page.\n\n    [!code-csharp[ExpenseIt#16](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt6/ExpenseItHome.xaml.cs#16)]\n    [!code-vb[ExpenseIt#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt6/ExpenseItHome.xaml.vb#16)]\n\n## Create the UI for ExpenseReportPage\n\n*ExpenseReportPage.xaml* displays the expense report for the person that's selected on the **`ExpenseItHome`** page. In this section, you'll create the UI for **ExpenseReportPage**. You'll also add background and fill colors to the various UI elements.\n\n1. Open *ExpenseReportPage.xaml*.\n\n2. Add the following XAML between the <xref:System.Windows.Controls.Grid> tags:\n\n    [!code-xaml[ExpenseIt#17](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt6/ExpenseReportPage.xaml#17)]\n\n    This UI is similar to *`ExpenseItHome.xaml`*, except the report data is displayed in a <xref:System.Windows.Controls.DataGrid>.\n\n3. Build and run the application.\n\n    > [!NOTE]\n    > If you get an error that the <xref:System.Windows.Controls.DataGrid> was not found or does not exist, make sure that your project targets the .NET Framework 4 or later. For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).\n\n4. Select the **View** button.\n\n    The expense report page appears. Also notice that the back navigation button is enabled.\n\nThe following illustration shows the UI elements added to *ExpenseReportPage.xaml*.\n\n![ExpenseIt sample screenshot](./media/gettingstartedfigure4.png)\n\n## Style controls\n\nThe appearance of various elements is often the same for all elements of the same type in a UI. UI uses [styles](../controls/styling-and-templating.md) to make appearances reusable across multiple elements. The reusability of styles helps to simplify XAML creation and management. This section replaces the per-element attributes that were defined in previous steps with styles.\n\n1. Open *Application.xaml* or *App.xaml*.\n\n2. Add the following XAML between the <xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType> tags:\n\n    [!code-xaml[ExpenseIt#18](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt7/App.xaml#18)]\n\n    This XAML adds the following styles:\n\n    - `headerTextStyle`: To format the page title <xref:System.Windows.Controls.Label>.\n\n    - `labelStyle`: To format the <xref:System.Windows.Controls.Label> controls.\n\n    - `columnHeaderStyle`: To format the <xref:System.Windows.Controls.Primitives.DataGridColumnHeader>.\n\n    - `listHeaderStyle`: To format the list header <xref:System.Windows.Controls.Border> controls.\n\n    - `listHeaderTextStyle`: To format the list header <xref:System.Windows.Controls.Label>.\n\n    - `buttonStyle`: To format the <xref:System.Windows.Controls.Button> on `ExpenseItHome.xaml`.\n\n    Notice that the styles are resources and children of the <xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType> property element. In this location, the styles are applied to all the elements in an application. For an example of using resources in a .NET Framework application, see [Use Application Resources](../advanced/how-to-use-application-resources.md).\n\n3. Open *`ExpenseItHome.xaml`*.\n\n4. Replace everything between the <xref:System.Windows.Controls.Grid> elements with the following XAML:\n\n    [!code-xaml[ExpenseIt#19](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt7/ExpenseItHome.xaml#19)]\n\n    The properties such as <xref:System.Windows.VerticalAlignment> and <xref:System.Windows.Media.FontFamily> that define the look of each control are removed and replaced by applying the styles. For example, the `headerTextStyle` is applied to the \"View Expense Report\" <xref:System.Windows.Controls.Label>.\n\n5. Open *ExpenseReportPage.xaml*.\n\n6. Replace everything between the <xref:System.Windows.Controls.Grid> elements with the following XAML:\n\n    [!code-xaml[ExpenseIt#20](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt7/ExpenseReportPage.xaml#20)]\n\n    This adds styles to the <xref:System.Windows.Controls.Label> and <xref:System.Windows.Controls.Border> elements.\n\n## Bind data to a control\n\nIn this section, you'll create the XML data that is bound to various controls.\n\n1. Open *`ExpenseItHome.xaml`*.\n\n2. After the opening <xref:System.Windows.Controls.Grid> element, add the following XAML to create an <xref:System.Windows.Data.XmlDataProvider> that contains the data for each person:\n\n    [!code-xaml[ExpenseIt#21](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#21)]\n    [!code-xaml[ExpenseIt#23](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#23)]\n    [!code-xaml[ExpenseIt#22](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#22)]\n\n    The data is created as a <xref:System.Windows.Controls.Grid> resource. Normally this would be loaded as a file, but for simplicity the data is added inline.\n\n3. Within the `<Grid.Resources>` element, add the following <xref:System.Windows.DataTemplate>, which defines how to display the data in the <xref:System.Windows.Controls.ListBox>:\n\n    [!code-xaml[ExpenseIt#21](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#21)]\n    [!code-xaml[ExpenseIt#24](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#24)]\n    [!code-xaml[ExpenseIt#22](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#22)]\n\n    For more information about data templates, see [Data templating overview](../data/data-templating-overview.md).\n\n4. Replace the existing <xref:System.Windows.Controls.ListBox> with the following XAML:\n\n    [!code-xaml[ExpenseIt#25](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#25)]\n\n    This XAML binds the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of the <xref:System.Windows.Controls.ListBox> to the data source and applies the data template as the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>.\n\n## Connect data to controls\n\nNext, you'll add code to retrieve the name that's selected on the **`ExpenseItHome`** page and pass it to the constructor of **ExpenseReportPage**. **ExpenseReportPage** sets its data context with the passed item, which is what the controls defined in *ExpenseReportPage.xaml* bind to.\n\n1. Open *ExpenseReportPage.xaml.vb* or *ExpenseReportPage.xaml.cs*.\n\n2. Add a constructor that takes an object so you can pass the expense report data of the selected person.\n\n    [!code-csharp[ExpenseIt#26](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseReportPage.xaml.cs#26)]\n    [!code-vb[ExpenseIt#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt8/ExpenseReportPage.xaml.vb#26)]\n\n3. Open *`ExpenseItHome.xaml.vb`* or *`ExpenseItHome.xaml.cs`*.\n\n4. Change the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler to call the new constructor passing the expense report data of the selected person.\n\n    [!code-csharp[ExpenseIt#27](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml.cs#27)]\n    [!code-vb[ExpenseIt#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt8/ExpenseItHome.xaml.vb#27)]\n\n## Style data with data templates\n\nIn this section, you'll update the UI for each item in the data-bound lists by using data templates.\n\n1. Open *ExpenseReportPage.xaml*.\n\n2. Bind the content of the \"Name\" and \"Department\" <xref:System.Windows.Controls.Label> elements to the appropriate data source property. For more information about data binding, see [Data binding overview](../data/data-binding-overview.md).\n\n    [!code-xaml[ExpenseIt#31](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt9/ExpenseReportPage.xaml#31)]\n\n3. After the opening <xref:System.Windows.Controls.Grid> element, add the following data templates, which define how to display the expense report data:\n\n    [!code-xaml[ExpenseIt#30](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt9/ExpenseReportPage.xaml#30)]\n\n4. Replace the <xref:System.Windows.Controls.DataGridTextColumn> elements with <xref:System.Windows.Controls.DataGridTemplateColumn> under the <xref:System.Windows.Controls.DataGrid> element and apply the templates to them.\n\n    [!code-xaml[ExpenseIt#32](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt9/ExpenseReportPage.xaml#32)]\n\n5. Build and run the application.\n\n6. Select a person and then select the **View** button.\n\nThe following illustration shows both pages of the `ExpenseIt` application with controls, layout, styles, data binding, and data templates applied:\n\n![ExpenseIt sample screenshots](./media/gettingstartedfigure5.png)\n\n> [!NOTE]\n> This sample demonstrates a specific feature of WPF and doesn't follow all best practices for things like security, localization, and accessibility. For comprehensive coverage of WPF and the .NET Framework application development best practices, see the following topics:\n>\n> - [Accessibility](../../ui-automation/accessibility-best-practices.md)\n>\n> - [Security](../security-wpf.md)\n>\n> - [WPF globalization and localization](../advanced/wpf-globalization-and-localization-overview.md)\n>\n> - [WPF performance](../advanced/optimizing-wpf-application-performance.md)\n\n## Next steps\n\nIn this walkthrough you learned a number of techniques for creating a UI using Windows Presentation Foundation (WPF). You should now have a basic understanding of the building blocks of a data-bound, .NET Framework application. For more information about the WPF architecture and programming models, see the following topics:\n\n- [WPF architecture](../advanced/wpf-architecture.md)\n- [XAML overview (WPF)](../advanced/xaml-overview-wpf.md)\n- [Dependency properties overview](../advanced/dependency-properties-overview.md)\n- [Layout](../advanced/layout.md)\n\nFor more information about creating applications, see the following topics:\n\n- [Application development](../app-development/index.md)\n- [Controls](../controls/index.md)\n- [Data binding overview](../data/data-binding-overview.md)\n- [Graphics and multimedia](../graphics-multimedia/index.md)\n- [Documents in WPF](../advanced/documents-in-wpf.md)\n\n## See also\n\n- [Panels overview](../controls/panels-overview.md)\n- [Data templating overview](../data/data-templating-overview.md)\n- [Build a WPF application](../app-development/building-a-wpf-application-wpf.md)\n- [Styles and templates](../controls/styles-and-templates.md)\n","nodes":[{"pos":[4,295],"embed":true,"restype":"x-metadata","content":"title: Create a WPF application in Visual Studio\nms.date: 10/26/2018\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"getting started [WPF], WPF\"\n  - \"WPF [WPF], getting started\"\nms.assetid: b96bed40-8946-4285-8fe4-88045ab854ed\nauthor: mairaw\nms.author: mairaw\nms.custom: vs-dotnet","nodes":[{"content":"Create a WPF application in Visual Studio","nodes":[{"pos":[0,41],"content":"Create a WPF application in Visual Studio","nodes":[{"content":"Create a WPF application in Visual Studio","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[303,348],"content":"Walkthrough: My first WPF desktop application","linkify":"Walkthrough: My first WPF desktop application","nodes":[{"content":"Walkthrough: My first WPF desktop application","pos":[0,45]}]},{"content":"This article shows you how to develop a simple Windows Presentation Foundation (WPF) application that includes the elements that are common to most WPF applications: Extensible Application Markup Language (XAML) markup, code-behind, application definitions, controls, layout, data binding, and styles.","pos":[350,651]},{"content":"This walkthrough includes the following steps:","pos":[653,699]},{"content":"Use XAML to design the appearance of the application's user interface (UI).","pos":[703,778]},{"content":"Write code to build the application's behavior.","pos":[782,829]},{"content":"Create an application definition to manage the application.","pos":[833,892]},{"content":"Add controls and create the layout to compose the application UI.","pos":[896,961]},{"content":"Create styles for a consistent appearance throughout an application's UI.","pos":[965,1038]},{"content":"Bind the UI to data to both populate the UI from data and keep the data and UI synchronized.","pos":[1042,1134]},{"content":"By the end of the walkthrough, you'll have built a standalone Windows application that allows users to view expense reports for selected people.","pos":[1136,1280]},{"content":"The application is composed of several WPF pages that are hosted in a browser-style window.","pos":[1281,1372]},{"pos":[1376,1577],"content":"[!TIP]\nThe sample code that is used to build this walkthrough is available for both Visual Basic and C# at [Introduction to Building WPF Applications](https://go.microsoft.com/fwlink/?LinkID=160008).","leadings":["","> "],"nodes":[{"content":"The sample code that is used to build this walkthrough is available for both Visual Basic and C# at <bpt id=\"p1\">[</bpt>Introduction to Building WPF Applications<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=160008)</ept>.","pos":[7,199],"source":"The sample code that is used to build this walkthrough is available for both Visual Basic and C# at [Introduction to Building WPF Applications](https://go.microsoft.com/fwlink/?LinkID=160008)."}]},{"pos":[1582,1595],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"Visual Studio 2017 or later","pos":[1599,1626]},{"pos":[1631,1779],"content":"For more information about installing the latest version of Visual Studio, see <bpt id=\"p1\">[</bpt>Install Visual Studio<ept id=\"p1\">](/visualstudio/install/install-visual-studio)</ept>.","source":"For more information about installing the latest version of Visual Studio, see [Install Visual Studio](/visualstudio/install/install-visual-studio)."},{"pos":[1784,1814],"content":"Create the application project","linkify":"Create the application project","nodes":[{"content":"Create the application project","pos":[0,30]}]},{"content":"The first step is to create the application infrastructure, which includes an application definition, two pages, and an image.","pos":[1816,1942]},{"pos":[1947,2035],"content":"Create a new WPF Application project in Visual Basic or Visual C# named <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`ExpenseIt`</ph><ept id=\"p1\">**</ept>:","source":"Create a new WPF Application project in Visual Basic or Visual C# named **`ExpenseIt`**:"},{"pos":[2043,2106],"content":"Open Visual Studio and select <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"Open Visual Studio and select **File** > **New** > **Project**."},{"pos":[2114,2147],"content":"The <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog opens.","source":"The **New Project** dialog opens."},{"pos":[2155,2283],"content":"Under the <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept> category, expand either the <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>Visual Basic<ept id=\"p3\">**</ept> node, and then select <bpt id=\"p4\">**</bpt>Windows Desktop<ept id=\"p4\">**</ept>.","source":"Under the **Installed** category, expand either the **Visual C#** or **Visual Basic** node, and then select **Windows Desktop**."},{"content":"Select the <bpt id=\"p1\">**</bpt>WPF App (.NET Framework)<ept id=\"p1\">**</ept> template.","pos":[2291,2340],"source":"Select the **WPF App (.NET Framework)** template."},{"content":"Enter the name <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`ExpenseIt`</ph><ept id=\"p1\">**</ept> and then select <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","pos":[2341,2395],"source":" Enter the name **`ExpenseIt`** and then select **OK**."},{"content":"New Project dialog with WPF app selected","pos":[2405,2445]},{"pos":[2486,2604],"content":"Visual Studio creates the project and opens the designer for the default application window named <bpt id=\"p1\">**</bpt>MainWindow.xaml<ept id=\"p1\">**</ept>.","source":"Visual Studio creates the project and opens the designer for the default application window named **MainWindow.xaml**."},{"pos":[2611,2958],"content":"[!NOTE]\nThis walkthrough uses the <xref:System.Windows.Controls.DataGrid> control that is available in the .NET Framework 4 and later. Be sure that your project targets the .NET Framework 4 or later. For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).","leadings":["","   > "],"nodes":[{"content":"This walkthrough uses the <xref:System.Windows.Controls.DataGrid> control that is available in the .NET Framework 4 and later. Be sure that your project targets the .NET Framework 4 or later. For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).","pos":[8,342],"nodes":[{"content":"This walkthrough uses the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> control that is available in the .NET Framework 4 and later.","pos":[0,126],"source":"This walkthrough uses the <xref:System.Windows.Controls.DataGrid> control that is available in the .NET Framework 4 and later."},{"content":"Be sure that your project targets the .NET Framework 4 or later.","pos":[127,191]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Target a Version of the .NET Framework<ept id=\"p1\">](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework)</ept>.","pos":[192,334],"source":" For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework)."}]}]},{"pos":[2963,3021],"content":"Open <bpt id=\"p1\">*</bpt>Application.xaml<ept id=\"p1\">*</ept> (Visual Basic) or <bpt id=\"p2\">*</bpt>App.xaml<ept id=\"p2\">*</ept> (C#).","source":"Open *Application.xaml* (Visual Basic) or *App.xaml* (C#)."},{"content":"This XAML file defines a WPF application and any application resources.","pos":[3027,3098]},{"content":"You also use this file to specify the UI that automatically shows when the application starts; in this case, <bpt id=\"p1\">*</bpt>MainWindow.xaml<ept id=\"p1\">*</ept>.","pos":[3099,3226],"source":" You also use this file to specify the UI that automatically shows when the application starts; in this case, *MainWindow.xaml*."},{"content":"Your XAML should look like this in Visual Basic:","pos":[3232,3280]},{"content":"Or like this in C#:","pos":[3414,3433]},{"pos":[3550,3573],"content":"Open <bpt id=\"p1\">*</bpt>MainWindow.xaml<ept id=\"p1\">*</ept>.","source":"Open *MainWindow.xaml*."},{"content":"This XAML file is the main window of your application and displays content created in pages.","pos":[3579,3671]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> class defines the properties of a window, such as its title, size, or icon, and handles events, such as closing or hiding.","pos":[3672,3827],"source":" The <xref:System.Windows.Window> class defines the properties of a window, such as its title, size, or icon, and handles events, such as closing or hiding."},{"pos":[3832,3967],"content":"Change the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> element to a <ph id=\"ph2\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, as shown in the following XAML:","source":"Change the <xref:System.Windows.Window> element to a <xref:System.Windows.Navigation.NavigationWindow>, as shown in the following XAML:"},{"content":"This app navigates to different content depending on the user input.","pos":[4215,4283]},{"content":"This is why the main <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> needs to be changed to a <ph id=\"ph2\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.","pos":[4284,4409],"source":" This is why the main <xref:System.Windows.Window> needs to be changed to a <xref:System.Windows.Navigation.NavigationWindow>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> inherits all the properties of <ph id=\"ph2\">&lt;xref:System.Windows.Window&gt;</ph>.","pos":[4410,4520],"source":"<xref:System.Windows.Navigation.NavigationWindow> inherits all the properties of <xref:System.Windows.Window>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> element in the XAML file creates an instance of the <ph id=\"ph2\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> class.","pos":[4521,4683],"source":" The <xref:System.Windows.Navigation.NavigationWindow> element in the XAML file creates an instance of the <xref:System.Windows.Navigation.NavigationWindow> class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Navigation overview<ept id=\"p1\">](../app-development/navigation-overview.md)</ept>.","pos":[4684,4775],"source":" For more information, see [Navigation overview](../app-development/navigation-overview.md)."},{"pos":[4780,4877],"content":"Change the following properties on the <ph id=\"ph1\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> element:","source":"Change the following properties on the <xref:System.Windows.Navigation.NavigationWindow> element:"},{"pos":[4885,4957],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Window.Title%2A&gt;</ph> property to \"<ph id=\"ph2\">`ExpenseIt`</ph>\".","source":"Set the <xref:System.Windows.Window.Title%2A> property to \"`ExpenseIt`\"."},{"pos":[4965,5044],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> property to 500 pixels.","source":"Set the <xref:System.Windows.FrameworkElement.Width%2A> property to 500 pixels."},{"pos":[5052,5132],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> property to 350 pixels.","source":"Set the <xref:System.Windows.FrameworkElement.Height%2A> property to 350 pixels."},{"pos":[5140,5263],"content":"Remove the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements between the <ph id=\"ph2\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> tags.","source":"Remove the <xref:System.Windows.Controls.Grid> elements between the <xref:System.Windows.Navigation.NavigationWindow> tags."},{"content":"Your XAML should look like this in Visual Basic:","pos":[5269,5317]},{"content":"Or like this in C#:","pos":[5447,5466]},{"pos":[5590,5640],"content":"Open <bpt id=\"p1\">*</bpt>MainWindow.xaml.vb<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>MainWindow.xaml.cs<ept id=\"p2\">*</ept>.","source":"Open *MainWindow.xaml.vb* or *MainWindow.xaml.cs*."},{"content":"This file is a code-behind file that contains code to handle the events declared in <bpt id=\"p1\">*</bpt>MainWindow.xaml<ept id=\"p1\">*</ept>.","pos":[5646,5748],"source":"This file is a code-behind file that contains code to handle the events declared in *MainWindow.xaml*."},{"content":"This file contains a partial class for the window defined in XAML.","pos":[5749,5815]},{"content":"If you are using C#, change the <ph id=\"ph1\">`MainWindow`</ph> class to derive from <ph id=\"ph2\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.","pos":[5820,5936],"source":"If you are using C#, change the `MainWindow` class to derive from <xref:System.Windows.Navigation.NavigationWindow>."},{"content":"(In Visual Basic, this happens automatically when you change the window in XAML.)","pos":[5937,6018]},{"content":"Your code should look like this:","pos":[6023,6055]},{"pos":[6060,6300],"content":"[!code-csharp[ExpenseIt#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/MainWindow.xaml.cs#3)]\n[!code-vb[ExpenseIt#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/MainWindow.xaml.vb#3)]","leadings":["","   "],"nodes":[]},{"pos":[6307,6469],"content":"[!TIP]\nYou can toggle the code language of the sample code between C# and Visual Basic in the **Language** drop-down on the upper right side of this article.","leadings":["","   > "],"nodes":[{"content":"You can toggle the code language of the sample code between C# and Visual Basic in the <bpt id=\"p1\">**</bpt>Language<ept id=\"p1\">**</ept> drop-down on the upper right side of this article.","pos":[7,157],"source":"You can toggle the code language of the sample code between C# and Visual Basic in the **Language** drop-down on the upper right side of this article."}]},{"pos":[6474,6502],"content":"Add files to the application","linkify":"Add files to the application","nodes":[{"content":"Add files to the application","pos":[0,28]}]},{"content":"In this section, you'll add two pages and an image to the application.","pos":[6504,6574]},{"pos":[6579,6649],"content":"Add a new WPF page to the project, and name it <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>:","source":"Add a new WPF page to the project, and name it *`ExpenseItHome.xaml`*:"},{"pos":[6657,6761],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click on the <bpt id=\"p2\">**</bpt><ph id=\"ph1\">`ExpenseIt`</ph><ept id=\"p2\">**</ept> project node and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p4\">**</bpt>Page<ept id=\"p4\">**</ept>.","source":"In **Solution Explorer**, right-click on the **`ExpenseIt`** project node and choose **Add** > **Page**."},{"content":"In the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> dialog, the <bpt id=\"p2\">**</bpt>Page (WPF)<ept id=\"p2\">**</ept> template is already selected.","pos":[6769,6849],"source":"In the **Add New Item** dialog, the **Page (WPF)** template is already selected."},{"content":"Enter the name <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`ExpenseItHome`</ph><ept id=\"p1\">**</ept>, and then select <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","pos":[6850,6910],"source":" Enter the name **`ExpenseItHome`**, and then select **Add**."},{"content":"This page is the first page that's displayed when the application is launched.","pos":[6916,6994]},{"content":"It will show a list of people to select from, to show an expense report for.","pos":[6995,7071]},{"pos":[7076,7104],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"pos":[7109,7186],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Page.Title%2A&gt;</ph> to \"<ph id=\"ph2\">`ExpenseIt - Home`</ph>\".","source":"Set the <xref:System.Windows.Controls.Page.Title%2A> to \"`ExpenseIt - Home`\"."},{"content":"Your XAML should look like this in Visual Basic:","pos":[7192,7240]},{"content":"Or this in C#:","pos":[7376,7390]},{"pos":[7518,7541],"content":"Open <bpt id=\"p1\">*</bpt>MainWindow.xaml<ept id=\"p1\">*</ept>.","source":"Open *MainWindow.xaml*."},{"pos":[7546,7706],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Navigation.NavigationWindow.Source%2A&gt;</ph> property on the <ph id=\"ph2\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> to \"<ph id=\"ph3\">`ExpenseItHome.xaml`</ph>\".","source":"Set the <xref:System.Windows.Navigation.NavigationWindow.Source%2A> property on the <xref:System.Windows.Navigation.NavigationWindow> to \"`ExpenseItHome.xaml`\"."},{"content":"This sets <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept> to be the first page opened when the application starts.","pos":[7712,7801],"source":"This sets *`ExpenseItHome.xaml`* to be the first page opened when the application starts."},{"content":"Your XAML should look like this in Visual Basic:","pos":[7802,7850]},{"content":"Or this in C#:","pos":[7983,7997]},{"pos":[8124,8240],"content":"[!TIP]\nYou can also set the **Source** property in the **Miscellaneous** category of the **Properties** window.","leadings":["","   > "],"nodes":[{"content":"You can also set the <bpt id=\"p1\">**</bpt>Source<ept id=\"p1\">**</ept> property in the <bpt id=\"p2\">**</bpt>Miscellaneous<ept id=\"p2\">**</ept> category of the <bpt id=\"p3\">**</bpt>Properties<ept id=\"p3\">**</ept> window.","pos":[7,111],"source":"You can also set the **Source** property in the **Miscellaneous** category of the **Properties** window."}]},{"content":"Source property in Properties window","pos":[8253,8289]},{"pos":[8326,8405],"content":"Add another new WPF page to the project, and name it <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept>::","source":"Add another new WPF page to the project, and name it *ExpenseReportPage.xaml*::"},{"pos":[8413,8517],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click on the <bpt id=\"p2\">**</bpt><ph id=\"ph1\">`ExpenseIt`</ph><ept id=\"p2\">**</ept> project node and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p4\">**</bpt>Page<ept id=\"p4\">**</ept>.","source":"In **Solution Explorer**, right-click on the **`ExpenseIt`** project node and choose **Add** > **Page**."},{"content":"In the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> dialog, the <bpt id=\"p2\">**</bpt>Page (WPF)<ept id=\"p2\">**</ept> template is already selected.","pos":[8525,8605],"source":"In the **Add New Item** dialog, the **Page (WPF)** template is already selected."},{"content":"Enter the name <bpt id=\"p1\">**</bpt>ExpenseReportPage<ept id=\"p1\">**</ept>, and then select <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","pos":[8606,8668],"source":" Enter the name **ExpenseReportPage**, and then select **Add**."},{"pos":[8674,8777],"content":"This page will show the expense report for the person that is selected on the <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`ExpenseItHome`</ph><ept id=\"p1\">**</ept> page.","source":"This page will show the expense report for the person that is selected on the **`ExpenseItHome`** page."},{"pos":[8782,8812],"content":"Open <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept>.","source":"Open *ExpenseReportPage.xaml*."},{"pos":[8817,8902],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Page.Title%2A&gt;</ph> to \"<ph id=\"ph2\">`ExpenseIt - View Expense`</ph>\".","source":"Set the <xref:System.Windows.Controls.Page.Title%2A> to \"`ExpenseIt - View Expense`\"."},{"content":"Your XAML should look like this in Visual Basic:","pos":[8908,8956]},{"content":"Or this in C#:","pos":[9096,9110]},{"pos":[9241,9362],"content":"Open <bpt id=\"p1\">*</bpt>ExpenseItHome.xaml.vb<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>ExpenseReportPage.xaml.vb<ept id=\"p2\">*</ept>, or <bpt id=\"p3\">*</bpt>ExpenseItHome.xaml.cs<ept id=\"p3\">*</ept> and <bpt id=\"p4\">*</bpt>ExpenseReportPage.xaml.cs<ept id=\"p4\">*</ept>.","source":"Open *ExpenseItHome.xaml.vb* and *ExpenseReportPage.xaml.vb*, or *ExpenseItHome.xaml.cs* and *ExpenseReportPage.xaml.cs*."},{"content":"When you create a new Page file, Visual Studio automatically creates a <bpt id=\"p1\">*</bpt>code-behind<ept id=\"p1\">*</ept> file.","pos":[9368,9458],"source":"When you create a new Page file, Visual Studio automatically creates a *code-behind* file."},{"content":"These code-behind files handle the logic for responding to user input.","pos":[9459,9529]},{"pos":[9535,9591],"content":"Your code should look like this for <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`ExpenseItHome`</ph><ept id=\"p1\">**</ept>:","source":"Your code should look like this for **`ExpenseItHome`**:"},{"pos":[9597,9853],"content":"[!code-csharp[ExpenseIt#2_5](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt2/ExpenseItHome.xaml.cs#2_5)]\n [!code-vb[ExpenseIt#2_5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/ExpenseItHome.xaml.vb#2_5)]","leadings":["","   "],"nodes":[]},{"pos":[9859,9899],"content":"And like this for <bpt id=\"p1\">**</bpt>ExpenseReportPage<ept id=\"p1\">**</ept>:","source":"And like this for **ExpenseReportPage**:"},{"pos":[9905,10160],"content":"[!code-csharp[ExpenseIt#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt/ExpenseReportPage.xaml.cs#5)]\n [!code-vb[ExpenseIt#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt1_A/ExpenseReportPage.xaml.vb#5)]","leadings":["","   "],"nodes":[]},{"content":"Add an image named <bpt id=\"p1\">*</bpt>watermark.png<ept id=\"p1\">*</ept> to the project.","pos":[10166,10216],"source":"Add an image named *watermark.png* to the project."},{"content":"You can create your own image, copy the file from the sample code, or get it <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](https://github.com/dotnet/docs/blob/master/docs/framework/wpf/getting-started/./media/watermark.png)</ept>.","pos":[10217,10402],"source":" You can create your own image, copy the file from the sample code, or get it [here](https://github.com/dotnet/docs/blob/master/docs/framework/wpf/getting-started/./media/watermark.png)."},{"pos":[10411,10516],"content":"Right-click on the project node and select <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Existing Item<ept id=\"p2\">**</ept>, or press <bpt id=\"p3\">**</bpt>Shift<ept id=\"p3\">**</ept><ph id=\"ph2\">+</ph><bpt id=\"p4\">**</bpt>Alt<ept id=\"p4\">**</ept><ph id=\"ph3\">+</ph><bpt id=\"p5\">**</bpt>A<ept id=\"p5\">**</ept>.","source":"Right-click on the project node and select **Add** > **Existing Item**, or press **Shift**+**Alt**+**A**."},{"pos":[10525,10628],"content":"In the <bpt id=\"p1\">**</bpt>Add Existing Item<ept id=\"p1\">**</ept> dialog, browse to the image file you want to use, and then select <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","source":"In the **Add Existing Item** dialog, browse to the image file you want to use, and then select **Add**."},{"pos":[10633,10662],"content":"Build and run the application","linkify":"Build and run the application","nodes":[{"content":"Build and run the application","pos":[0,29]}]},{"pos":[10667,10768],"content":"To build and run the application, press <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> or select <bpt id=\"p2\">**</bpt>Start Debugging<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Debug<ept id=\"p3\">**</ept> menu.","source":"To build and run the application, press **F5** or select **Start Debugging** from the **Debug** menu."},{"pos":[10774,10890],"content":"The following illustration shows the application with the <ph id=\"ph1\">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> buttons:","source":"The following illustration shows the application with the <xref:System.Windows.Navigation.NavigationWindow> buttons:"},{"content":"ExpenseIt sample screenshot","pos":[10898,10925]},{"content":"Close the application to return to Visual Studio.","pos":[10966,11015]},{"pos":[11020,11037],"content":"Create the layout","linkify":"Create the layout","nodes":[{"content":"Create the layout","pos":[0,17]}]},{"content":"Layout provides an ordered way to place UI elements, and also manages the size and position of those elements when a UI is resized.","pos":[11039,11170]},{"content":"You typically create a layout with one of the following layout controls:","pos":[11171,11243]},{"content":"Each of these layout controls supports a special type of layout for its child elements.","pos":[11510,11597]},{"content":"<ph id=\"ph1\">`ExpenseIt`</ph> pages can be resized, and each page has elements that are arranged horizontally and vertically alongside other elements.","pos":[11598,11730],"source":"`ExpenseIt` pages can be resized, and each page has elements that are arranged horizontally and vertically alongside other elements."},{"content":"Consequently, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is the ideal layout element for the application.","pos":[11731,11833],"source":" Consequently, the <xref:System.Windows.Controls.Grid> is the ideal layout element for the application."},{"pos":[11837,12046],"content":"[!TIP]\nFor more information about <xref:System.Windows.Controls.Panel> elements, see [Panels overview](../controls/panels-overview.md). For more information about layout, see [Layout](../advanced/layout.md).","leadings":["","> "],"nodes":[{"content":"For more information about <xref:System.Windows.Controls.Panel> elements, see [Panels overview](../controls/panels-overview.md). For more information about layout, see [Layout](../advanced/layout.md).","pos":[7,207],"nodes":[{"content":"For more information about <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements, see <bpt id=\"p1\">[</bpt>Panels overview<ept id=\"p1\">](../controls/panels-overview.md)</ept>.","pos":[0,128],"source":"For more information about <xref:System.Windows.Controls.Panel> elements, see [Panels overview](../controls/panels-overview.md)."},{"content":"For more information about layout, see <bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](../advanced/layout.md)</ept>.","pos":[129,200],"source":" For more information about layout, see [Layout](../advanced/layout.md)."}]}]},{"pos":[12048,12241],"content":"In the section, you create a single-column table with three rows and a 10-pixel margin by adding column and row definitions to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> in <bpt id=\"p1\">*</bpt><ph id=\"ph2\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"In the section, you create a single-column table with three rows and a 10-pixel margin by adding column and row definitions to the <xref:System.Windows.Controls.Grid> in *`ExpenseItHome.xaml`*."},{"pos":[12246,12274],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"pos":[12279,12470],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> property on the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element to \"10,0,10,10\", which corresponds to left, top, right and bottom margins:","source":"Set the <xref:System.Windows.FrameworkElement.Margin%2A> property on the <xref:System.Windows.Controls.Grid> element to \"10,0,10,10\", which corresponds to left, top, right and bottom margins:"},{"pos":[12526,12637],"content":"[!TIP]\nYou can also set the **Margin** values in the **Properties** window, under the **Layout** category:","leadings":["","   > "],"nodes":[{"content":"You can also set the <bpt id=\"p1\">**</bpt>Margin<ept id=\"p1\">**</ept> values in the <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> window, under the <bpt id=\"p3\">**</bpt>Layout<ept id=\"p3\">**</ept> category:","pos":[7,106],"source":"You can also set the **Margin** values in the **Properties** window, under the **Layout** category:"}]},{"content":"Margin values in Properties window","pos":[12650,12684]},{"pos":[12721,12838],"content":"Add the following XAML between the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> tags to create the row and column definitions:","source":"Add the following XAML between the <xref:System.Windows.Controls.Grid> tags to create the row and column definitions:"},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RowDefinition.Height%2A&gt;</ph> of two rows is set to <ph id=\"ph2\">&lt;xref:System.Windows.GridLength.Auto%2A&gt;</ph>, which means that the rows are sized based on the content in the rows.","pos":[12967,13159],"source":"The <xref:System.Windows.Controls.RowDefinition.Height%2A> of two rows is set to <xref:System.Windows.GridLength.Auto%2A>, which means that the rows are sized based on the content in the rows."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RowDefinition.Height%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph> sizing, which means that the row height is a weighted proportion of the available space.","pos":[13160,13358],"source":" The default <xref:System.Windows.Controls.RowDefinition.Height%2A> is <xref:System.Windows.GridUnitType.Star> sizing, which means that the row height is a weighted proportion of the available space."},{"content":"For example if two rows each have a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RowDefinition.Height%2A&gt;</ph> of \"*\", they each have a height that is half of the available space.","pos":[13359,13518],"source":" For example if two rows each have a <xref:System.Windows.Controls.RowDefinition.Height%2A> of \"*\", they each have a height that is half of the available space."},{"pos":[13524,13605],"content":"Your <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> should now look like the following XAML:","source":"Your <xref:System.Windows.Controls.Grid> should now look like the following XAML:"},{"pos":[13733,13745],"content":"Add controls","linkify":"Add controls","nodes":[{"content":"Add controls","pos":[0,12]}]},{"content":"In this section, you'll update the home page UI to show a list of people that a user can select from to show the expense report for.","pos":[13747,13879]},{"content":"Controls are UI objects that allow users to interact with your application.","pos":[13880,13955]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../controls/index.md)</ept>.","pos":[13956,14015],"source":" For more information, see [Controls](../controls/index.md)."},{"pos":[14017,14096],"content":"To create this UI, you'll add the following elements to <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>:","source":"To create this UI, you'll add the following elements to *`ExpenseItHome.xaml`*:"},{"pos":[14100,14164],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> (for the list of people).","source":"<xref:System.Windows.Controls.ListBox> (for the list of people)."},{"pos":[14167,14226],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> (for the list header).","source":"<xref:System.Windows.Controls.Label> (for the list header)."},{"pos":[14229,14349],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> (to click to view the expense report for the person that is selected in the list).","source":"<xref:System.Windows.Controls.Button> (to click to view the expense report for the person that is selected in the list)."},{"content":"Each control is placed in a row of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid.Row%2A?displayProperty=nameWithType&gt;</ph> attached property.","pos":[14351,14531],"source":"Each control is placed in a row of the <xref:System.Windows.Controls.Grid> by setting the <xref:System.Windows.Controls.Grid.Row%2A?displayProperty=nameWithType> attached property."},{"content":"For more information about attached properties, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](../advanced/attached-properties-overview.md)</ept>.","pos":[14532,14660],"source":" For more information about attached properties, see [Attached Properties Overview](../advanced/attached-properties-overview.md)."},{"pos":[14665,14693],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"pos":[14698,14784],"content":"Add the following XAML somewhere between the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> tags:","source":"Add the following XAML somewhere between the <xref:System.Windows.Controls.Grid> tags:"},{"pos":[14915,15092],"content":"[!TIP]\nYou can also create the controls by dragging them from the **Toolbox** window onto the design window, and then setting their properties in the **Properties** window.","leadings":["","   > "],"nodes":[{"content":"You can also create the controls by dragging them from the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept> window onto the design window, and then setting their properties in the <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> window.","pos":[7,172],"source":"You can also create the controls by dragging them from the **Toolbox** window onto the design window, and then setting their properties in the **Properties** window."}]},{"content":"Build and run the application.","pos":[15097,15127]},{"content":"The following illustration shows the controls you just created:","pos":[15129,15192]},{"content":"ExpenseIt sample screenshot","pos":[15196,15223]},{"pos":[15264,15288],"content":"Add an image and a title","linkify":"Add an image and a title","nodes":[{"content":"Add an image and a title","pos":[0,24]}]},{"content":"In this section, you'll update the home page UI with an image and a page title.","pos":[15290,15369]},{"pos":[15374,15402],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"pos":[15407,15574],"content":"Add another column to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid.ColumnDefinitions%2A&gt;</ph> with a fixed <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ColumnDefinition.Width%2A&gt;</ph> of 230 pixels:","source":"Add another column to the <xref:System.Windows.Controls.Grid.ColumnDefinitions%2A> with a fixed <xref:System.Windows.Controls.ColumnDefinition.Width%2A> of 230 pixels:"},{"pos":[15704,15807],"content":"Add another row to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid.RowDefinitions%2A&gt;</ph>, for a total of four rows:","source":"Add another row to the <xref:System.Windows.Controls.Grid.RowDefinitions%2A>, for a total of four rows:"},{"pos":[15939,16142],"content":"Move the controls to the second column by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid.Column%2A?displayProperty=nameWithType&gt;</ph> property to 1 in each of the three controls (Border, ListBox, and Button).","source":"Move the controls to the second column by setting the <xref:System.Windows.Controls.Grid.Column%2A?displayProperty=nameWithType> property to 1 in each of the three controls (Border, ListBox, and Button)."},{"pos":[16147,16280],"content":"Move each control down a row, by incrementing its <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid.Row%2A?displayProperty=nameWithType&gt;</ph> value by 1.","source":"Move each control down a row, by incrementing its <xref:System.Windows.Controls.Grid.Row%2A?displayProperty=nameWithType> value by 1."},{"content":"The XAML for the three controls now looks like this:","pos":[16285,16337]},{"pos":[16467,16686],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel.Background%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to be the <bpt id=\"p1\">*</bpt>watermark.png<ept id=\"p1\">*</ept> image file, by adding the following XAML somewhere between the <ph id=\"ph3\">`&lt;Grid&gt;`</ph> and <ph id=\"ph4\">`&lt;/Grid&gt;`</ph> tags:","source":"Set the <xref:System.Windows.Controls.Panel.Background%2A> of the <xref:System.Windows.Controls.Grid> to be the *watermark.png* image file, by adding the following XAML somewhere between the `<Grid>` and `</Grid>` tags:"},{"content":"Before the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Border&gt;</ph> element, add a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph> with the content \"View Expense Report\".","pos":[16816,16956],"source":"Before the <xref:System.Windows.Controls.Border> element, add a <xref:System.Windows.Controls.Label> with the content \"View Expense Report\"."},{"content":"This is the title of the page.","pos":[16957,16987]},{"content":"Build and run the application.","pos":[17117,17147]},{"content":"The following illustration shows the results of what you just added:","pos":[17149,17217]},{"content":"ExpenseIt sample screenshot","pos":[17221,17248]},{"pos":[17289,17314],"content":"Add code to handle events","linkify":"Add code to handle events","nodes":[{"content":"Add code to handle events","pos":[0,25]}]},{"pos":[17319,17347],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"content":"Add a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> element.","pos":[17352,17484],"source":"Add a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler to the <xref:System.Windows.Controls.Button> element."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create a simple event handler<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb675300(v=vs.100))</ept>.","pos":[17485,17648],"source":" For more information, see [How to: Create a simple event handler](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb675300(v=vs.100))."},{"pos":[17778,17838],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml.vb`</ph><ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt><ph id=\"ph2\">`ExpenseItHome.xaml.cs`</ph><ept id=\"p2\">*</ept>.","source":"Open *`ExpenseItHome.xaml.vb`* or *`ExpenseItHome.xaml.cs`*."},{"content":"Add the following code to the <ph id=\"ph1\">`ExpenseItHome`</ph> class to add a button click event handler.","pos":[17843,17931],"source":"Add the following code to the `ExpenseItHome` class to add a button click event handler."},{"content":"The event handler opens the <bpt id=\"p1\">**</bpt>ExpenseReportPage<ept id=\"p1\">**</ept> page.","pos":[17932,17987],"source":" The event handler opens the **ExpenseReportPage** page."},{"pos":[17993,18243],"content":"[!code-csharp[ExpenseIt#16](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt6/ExpenseItHome.xaml.cs#16)]\n [!code-vb[ExpenseIt#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt6/ExpenseItHome.xaml.vb#16)]","leadings":["","   "],"nodes":[]},{"pos":[18248,18283],"content":"Create the UI for ExpenseReportPage","linkify":"Create the UI for ExpenseReportPage","nodes":[{"content":"Create the UI for ExpenseReportPage","pos":[0,35]}]},{"content":"<bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept> displays the expense report for the person that's selected on the <bpt id=\"p2\">**</bpt><ph id=\"ph1\">`ExpenseItHome`</ph><ept id=\"p2\">**</ept> page.","pos":[18285,18401],"source":"*ExpenseReportPage.xaml* displays the expense report for the person that's selected on the **`ExpenseItHome`** page."},{"content":"In this section, you'll create the UI for <bpt id=\"p1\">**</bpt>ExpenseReportPage<ept id=\"p1\">**</ept>.","pos":[18402,18466],"source":" In this section, you'll create the UI for **ExpenseReportPage**."},{"content":"You'll also add background and fill colors to the various UI elements.","pos":[18467,18537]},{"pos":[18542,18572],"content":"Open <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept>.","source":"Open *ExpenseReportPage.xaml*."},{"pos":[18577,18653],"content":"Add the following XAML between the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> tags:","source":"Add the following XAML between the <xref:System.Windows.Controls.Grid> tags:"},{"pos":[18788,18915],"content":"This UI is similar to <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>, except the report data is displayed in a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>.","source":"This UI is similar to *`ExpenseItHome.xaml`*, except the report data is displayed in a <xref:System.Windows.Controls.DataGrid>."},{"content":"Build and run the application.","pos":[18920,18950]},{"pos":[18958,19283],"content":"[!NOTE]\nIf you get an error that the <xref:System.Windows.Controls.DataGrid> was not found or does not exist, make sure that your project targets the .NET Framework 4 or later. For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).","leadings":["","    > "],"nodes":[{"content":"If you get an error that the <xref:System.Windows.Controls.DataGrid> was not found or does not exist, make sure that your project targets the .NET Framework 4 or later. For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).","pos":[8,319],"nodes":[{"content":"If you get an error that the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> was not found or does not exist, make sure that your project targets the .NET Framework 4 or later.","pos":[0,168],"source":"If you get an error that the <xref:System.Windows.Controls.DataGrid> was not found or does not exist, make sure that your project targets the .NET Framework 4 or later."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Target a Version of the .NET Framework<ept id=\"p1\">](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework)</ept>.","pos":[169,311],"source":" For more information, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework)."}]}]},{"pos":[19288,19315],"content":"Select the <bpt id=\"p1\">**</bpt>View<ept id=\"p1\">**</ept> button.","source":"Select the **View** button."},{"content":"The expense report page appears.","pos":[19321,19353]},{"content":"Also notice that the back navigation button is enabled.","pos":[19354,19409]},{"pos":[19411,19494],"content":"The following illustration shows the UI elements added to <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept>.","source":"The following illustration shows the UI elements added to *ExpenseReportPage.xaml*."},{"content":"ExpenseIt sample screenshot","pos":[19498,19525]},{"pos":[19566,19580],"content":"Style controls","linkify":"Style controls","nodes":[{"content":"Style controls","pos":[0,14]}]},{"content":"The appearance of various elements is often the same for all elements of the same type in a UI.","pos":[19582,19677]},{"content":"UI uses <bpt id=\"p1\">[</bpt>styles<ept id=\"p1\">](../controls/styling-and-templating.md)</ept> to make appearances reusable across multiple elements.","pos":[19678,19788],"source":" UI uses [styles](../controls/styling-and-templating.md) to make appearances reusable across multiple elements."},{"content":"The reusability of styles helps to simplify XAML creation and management.","pos":[19789,19862]},{"content":"This section replaces the per-element attributes that were defined in previous steps with styles.","pos":[19863,19960]},{"pos":[19965,20003],"content":"Open <bpt id=\"p1\">*</bpt>Application.xaml<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>App.xaml<ept id=\"p2\">*</ept>.","source":"Open *Application.xaml* or *App.xaml*."},{"pos":[20008,20124],"content":"Add the following XAML between the <ph id=\"ph1\">&lt;xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType&gt;</ph> tags:","source":"Add the following XAML between the <xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType> tags:"},{"content":"This XAML adds the following styles:","pos":[20245,20281]},{"pos":[20289,20370],"content":"<ph id=\"ph1\">`headerTextStyle`</ph>: To format the page title <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph>.","source":"`headerTextStyle`: To format the page title <xref:System.Windows.Controls.Label>."},{"pos":[20378,20452],"content":"<ph id=\"ph1\">`labelStyle`</ph>: To format the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph> controls.","source":"`labelStyle`: To format the <xref:System.Windows.Controls.Label> controls."},{"pos":[20460,20558],"content":"<ph id=\"ph1\">`columnHeaderStyle`</ph>: To format the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Primitives.DataGridColumnHeader&gt;</ph>.","source":"`columnHeaderStyle`: To format the <xref:System.Windows.Controls.Primitives.DataGridColumnHeader>."},{"pos":[20566,20658],"content":"<ph id=\"ph1\">`listHeaderStyle`</ph>: To format the list header <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Border&gt;</ph> controls.","source":"`listHeaderStyle`: To format the list header <xref:System.Windows.Controls.Border> controls."},{"pos":[20666,20752],"content":"<ph id=\"ph1\">`listHeaderTextStyle`</ph>: To format the list header <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph>.","source":"`listHeaderTextStyle`: To format the list header <xref:System.Windows.Controls.Label>."},{"pos":[20760,20851],"content":"<ph id=\"ph1\">`buttonStyle`</ph>: To format the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> on <ph id=\"ph3\">`ExpenseItHome.xaml`</ph>.","source":"`buttonStyle`: To format the <xref:System.Windows.Controls.Button> on `ExpenseItHome.xaml`."},{"content":"Notice that the styles are resources and children of the <ph id=\"ph1\">&lt;xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType&gt;</ph> property element.","pos":[20857,21007],"source":"Notice that the styles are resources and children of the <xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType> property element."},{"content":"In this location, the styles are applied to all the elements in an application.","pos":[21008,21087]},{"content":"For an example of using resources in a .NET Framework application, see <bpt id=\"p1\">[</bpt>Use Application Resources<ept id=\"p1\">](../advanced/how-to-use-application-resources.md)</ept>.","pos":[21088,21236],"source":" For an example of using resources in a .NET Framework application, see [Use Application Resources](../advanced/how-to-use-application-resources.md)."},{"pos":[21241,21269],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"pos":[21274,21374],"content":"Replace everything between the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements with the following XAML:","source":"Replace everything between the <xref:System.Windows.Controls.Grid> elements with the following XAML:"},{"content":"The properties such as <ph id=\"ph1\">&lt;xref:System.Windows.VerticalAlignment&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.FontFamily&gt;</ph> that define the look of each control are removed and replaced by applying the styles.","pos":[21505,21696],"source":"The properties such as <xref:System.Windows.VerticalAlignment> and <xref:System.Windows.Media.FontFamily> that define the look of each control are removed and replaced by applying the styles."},{"content":"For example, the <ph id=\"ph1\">`headerTextStyle`</ph> is applied to the \"View Expense Report\" <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph>.","pos":[21697,21809],"source":" For example, the `headerTextStyle` is applied to the \"View Expense Report\" <xref:System.Windows.Controls.Label>."},{"pos":[21814,21844],"content":"Open <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept>.","source":"Open *ExpenseReportPage.xaml*."},{"pos":[21849,21949],"content":"Replace everything between the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements with the following XAML:","source":"Replace everything between the <xref:System.Windows.Controls.Grid> elements with the following XAML:"},{"pos":[22084,22196],"content":"This adds styles to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Border&gt;</ph> elements.","source":"This adds styles to the <xref:System.Windows.Controls.Label> and <xref:System.Windows.Controls.Border> elements."},{"pos":[22201,22223],"content":"Bind data to a control","linkify":"Bind data to a control","nodes":[{"content":"Bind data to a control","pos":[0,22]}]},{"content":"In this section, you'll create the XML data that is bound to various controls.","pos":[22225,22303]},{"pos":[22308,22336],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml`</ph><ept id=\"p1\">*</ept>.","source":"Open *`ExpenseItHome.xaml`*."},{"pos":[22341,22522],"content":"After the opening <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element, add the following XAML to create an <ph id=\"ph2\">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> that contains the data for each person:","source":"After the opening <xref:System.Windows.Controls.Grid> element, add the following XAML to create an <xref:System.Windows.Data.XmlDataProvider> that contains the data for each person:"},{"pos":[22528,22895],"content":"[!code-xaml[ExpenseIt#21](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#21)]\n [!code-xaml[ExpenseIt#23](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#23)]\n [!code-xaml[ExpenseIt#22](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#22)]","leadings":["","   ","   "],"nodes":[]},{"content":"The data is created as a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> resource.","pos":[22901,22971],"source":"The data is created as a <xref:System.Windows.Controls.Grid> resource."},{"content":"Normally this would be loaded as a file, but for simplicity the data is added inline.","pos":[22972,23057]},{"pos":[23062,23239],"content":"Within the <ph id=\"ph1\">`&lt;Grid.Resources&gt;`</ph> element, add the following <ph id=\"ph2\">&lt;xref:System.Windows.DataTemplate&gt;</ph>, which defines how to display the data in the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>:","source":"Within the `<Grid.Resources>` element, add the following <xref:System.Windows.DataTemplate>, which defines how to display the data in the <xref:System.Windows.Controls.ListBox>:"},{"pos":[23245,23612],"content":"[!code-xaml[ExpenseIt#21](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#21)]\n [!code-xaml[ExpenseIt#24](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#24)]\n [!code-xaml[ExpenseIt#22](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml#22)]","leadings":["","   ","   "],"nodes":[]},{"pos":[23618,23729],"content":"For more information about data templates, see <bpt id=\"p1\">[</bpt>Data templating overview<ept id=\"p1\">](../data/data-templating-overview.md)</ept>.","source":"For more information about data templates, see [Data templating overview](../data/data-templating-overview.md)."},{"pos":[23734,23818],"content":"Replace the existing <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> with the following XAML:","source":"Replace the existing <xref:System.Windows.Controls.ListBox> with the following XAML:"},{"pos":[23949,24199],"content":"This XAML binds the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> to the data source and applies the data template as the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A&gt;</ph>.","source":"This XAML binds the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of the <xref:System.Windows.Controls.ListBox> to the data source and applies the data template as the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>."},{"pos":[24204,24228],"content":"Connect data to controls","linkify":"Connect data to controls","nodes":[{"content":"Connect data to controls","pos":[0,24]}]},{"content":"Next, you'll add code to retrieve the name that's selected on the <bpt id=\"p1\">**</bpt><ph id=\"ph1\">`ExpenseItHome`</ph><ept id=\"p1\">**</ept> page and pass it to the constructor of <bpt id=\"p2\">**</bpt>ExpenseReportPage<ept id=\"p2\">**</ept>.","pos":[24230,24377],"source":"Next, you'll add code to retrieve the name that's selected on the **`ExpenseItHome`** page and pass it to the constructor of **ExpenseReportPage**."},{"content":"<bpt id=\"p1\">**</bpt>ExpenseReportPage<ept id=\"p1\">**</ept> sets its data context with the passed item, which is what the controls defined in <bpt id=\"p2\">*</bpt>ExpenseReportPage.xaml<ept id=\"p2\">*</ept> bind to.","pos":[24378,24515],"source":"**ExpenseReportPage** sets its data context with the passed item, which is what the controls defined in *ExpenseReportPage.xaml* bind to."},{"pos":[24520,24584],"content":"Open <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml.vb<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>ExpenseReportPage.xaml.cs<ept id=\"p2\">*</ept>.","source":"Open *ExpenseReportPage.xaml.vb* or *ExpenseReportPage.xaml.cs*."},{"content":"Add a constructor that takes an object so you can pass the expense report data of the selected person.","pos":[24589,24691]},{"pos":[24697,24955],"content":"[!code-csharp[ExpenseIt#26](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseReportPage.xaml.cs#26)]\n [!code-vb[ExpenseIt#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt8/ExpenseReportPage.xaml.vb#26)]","leadings":["","   "],"nodes":[]},{"pos":[24960,25020],"content":"Open <bpt id=\"p1\">*</bpt><ph id=\"ph1\">`ExpenseItHome.xaml.vb`</ph><ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt><ph id=\"ph2\">`ExpenseItHome.xaml.cs`</ph><ept id=\"p2\">*</ept>.","source":"Open *`ExpenseItHome.xaml.vb`* or *`ExpenseItHome.xaml.cs`*."},{"pos":[25025,25192],"content":"Change the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler to call the new constructor passing the expense report data of the selected person.","source":"Change the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler to call the new constructor passing the expense report data of the selected person."},{"pos":[25198,25448],"content":"[!code-csharp[ExpenseIt#27](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpenseIt/CSharp/ExpenseIt8/ExpenseItHome.xaml.cs#27)]\n [!code-vb[ExpenseIt#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpenseIt/VB/ExpenseIt8/ExpenseItHome.xaml.vb#27)]","leadings":["","   "],"nodes":[]},{"pos":[25453,25483],"content":"Style data with data templates","linkify":"Style data with data templates","nodes":[{"content":"Style data with data templates","pos":[0,30]}]},{"content":"In this section, you'll update the UI for each item in the data-bound lists by using data templates.","pos":[25485,25585]},{"pos":[25590,25620],"content":"Open <bpt id=\"p1\">*</bpt>ExpenseReportPage.xaml<ept id=\"p1\">*</ept>.","source":"Open *ExpenseReportPage.xaml*."},{"content":"Bind the content of the \"Name\" and \"Department\" <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> elements to the appropriate data source property.","pos":[25625,25759],"source":"Bind the content of the \"Name\" and \"Department\" <xref:System.Windows.Controls.Label> elements to the appropriate data source property."},{"content":"For more information about data binding, see <bpt id=\"p1\">[</bpt>Data binding overview<ept id=\"p1\">](../data/data-binding-overview.md)</ept>.","pos":[25760,25863],"source":" For more information about data binding, see [Data binding overview](../data/data-binding-overview.md)."},{"pos":[25997,26146],"content":"After the opening <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element, add the following data templates, which define how to display the expense report data:","source":"After the opening <xref:System.Windows.Controls.Grid> element, add the following data templates, which define how to display the expense report data:"},{"pos":[26280,26500],"content":"Replace the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGridTextColumn&gt;</ph> elements with <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DataGridTemplateColumn&gt;</ph> under the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> element and apply the templates to them.","source":"Replace the <xref:System.Windows.Controls.DataGridTextColumn> elements with <xref:System.Windows.Controls.DataGridTemplateColumn> under the <xref:System.Windows.Controls.DataGrid> element and apply the templates to them."},{"content":"Build and run the application.","pos":[26634,26664]},{"pos":[26669,26721],"content":"Select a person and then select the <bpt id=\"p1\">**</bpt>View<ept id=\"p1\">**</ept> button.","source":"Select a person and then select the **View** button."},{"pos":[26723,26870],"content":"The following illustration shows both pages of the <ph id=\"ph1\">`ExpenseIt`</ph> application with controls, layout, styles, data binding, and data templates applied:","source":"The following illustration shows both pages of the `ExpenseIt` application with controls, layout, styles, data binding, and data templates applied:"},{"content":"ExpenseIt sample screenshots","pos":[26874,26902]},{"pos":[26942,27222],"content":"[!NOTE]\nThis sample demonstrates a specific feature of WPF and doesn't follow all best practices for things like security, localization, and accessibility. For comprehensive coverage of WPF and the .NET Framework application development best practices, see the following topics:","leadings":["","> "],"nodes":[{"content":"This sample demonstrates a specific feature of WPF and doesn't follow all best practices for things like security, localization, and accessibility. For comprehensive coverage of WPF and the .NET Framework application development best practices, see the following topics:","pos":[8,278],"nodes":[{"content":"This sample demonstrates a specific feature of WPF and doesn't follow all best practices for things like security, localization, and accessibility.","pos":[0,147]},{"content":"For comprehensive coverage of WPF and the .NET Framework application development best practices, see the following topics:","pos":[148,270]}]}]},{"pos":[27229,27297],"content":"<bpt id=\"p1\">[</bpt>Accessibility<ept id=\"p1\">](../../ui-automation/accessibility-best-practices.md)</ept>","source":"[Accessibility](../../ui-automation/accessibility-best-practices.md)"},{"pos":[27304,27334],"content":"<bpt id=\"p1\">[</bpt>Security<ept id=\"p1\">](../security-wpf.md)</ept>","source":"[Security](../security-wpf.md)"},{"pos":[27341,27437],"content":"<bpt id=\"p1\">[</bpt>WPF globalization and localization<ept id=\"p1\">](../advanced/wpf-globalization-and-localization-overview.md)</ept>","source":"[WPF globalization and localization](../advanced/wpf-globalization-and-localization-overview.md)"},{"pos":[27444,27516],"content":"<bpt id=\"p1\">[</bpt>WPF performance<ept id=\"p1\">](../advanced/optimizing-wpf-application-performance.md)</ept>","source":"[WPF performance](../advanced/optimizing-wpf-application-performance.md)"},{"pos":[27521,27531],"content":"Next steps","linkify":"Next steps","nodes":[{"content":"Next steps","pos":[0,10]}]},{"content":"In this walkthrough you learned a number of techniques for creating a UI using Windows Presentation Foundation (WPF).","pos":[27533,27650]},{"content":"You should now have a basic understanding of the building blocks of a data-bound, .NET Framework application.","pos":[27651,27760]},{"content":"For more information about the WPF architecture and programming models, see the following topics:","pos":[27761,27858]},{"pos":[27862,27913],"content":"<bpt id=\"p1\">[</bpt>WPF architecture<ept id=\"p1\">](../advanced/wpf-architecture.md)</ept>","source":"[WPF architecture](../advanced/wpf-architecture.md)"},{"pos":[27916,27971],"content":"<bpt id=\"p1\">[</bpt>XAML overview (WPF)<ept id=\"p1\">](../advanced/xaml-overview-wpf.md)</ept>","source":"[XAML overview (WPF)](../advanced/xaml-overview-wpf.md)"},{"pos":[27974,28053],"content":"<bpt id=\"p1\">[</bpt>Dependency properties overview<ept id=\"p1\">](../advanced/dependency-properties-overview.md)</ept>","source":"[Dependency properties overview](../advanced/dependency-properties-overview.md)"},{"pos":[28056,28087],"content":"<bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](../advanced/layout.md)</ept>","source":"[Layout](../advanced/layout.md)"},{"content":"For more information about creating applications, see the following topics:","pos":[28089,28164]},{"pos":[28168,28222],"content":"<bpt id=\"p1\">[</bpt>Application development<ept id=\"p1\">](../app-development/index.md)</ept>","source":"[Application development](../app-development/index.md)"},{"pos":[28225,28257],"content":"<bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../controls/index.md)</ept>","source":"[Controls](../controls/index.md)"},{"pos":[28260,28317],"content":"<bpt id=\"p1\">[</bpt>Data binding overview<ept id=\"p1\">](../data/data-binding-overview.md)</ept>","source":"[Data binding overview](../data/data-binding-overview.md)"},{"pos":[28320,28378],"content":"<bpt id=\"p1\">[</bpt>Graphics and multimedia<ept id=\"p1\">](../graphics-multimedia/index.md)</ept>","source":"[Graphics and multimedia](../graphics-multimedia/index.md)"},{"pos":[28381,28432],"content":"<bpt id=\"p1\">[</bpt>Documents in WPF<ept id=\"p1\">](../advanced/documents-in-wpf.md)</ept>","source":"[Documents in WPF](../advanced/documents-in-wpf.md)"},{"pos":[28437,28445],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[28449,28498],"content":"<bpt id=\"p1\">[</bpt>Panels overview<ept id=\"p1\">](../controls/panels-overview.md)</ept>","source":"[Panels overview](../controls/panels-overview.md)"},{"pos":[28501,28564],"content":"<bpt id=\"p1\">[</bpt>Data templating overview<ept id=\"p1\">](../data/data-templating-overview.md)</ept>","source":"[Data templating overview](../data/data-templating-overview.md)"},{"pos":[28567,28646],"content":"<bpt id=\"p1\">[</bpt>Build a WPF application<ept id=\"p1\">](../app-development/building-a-wpf-application-wpf.md)</ept>","source":"[Build a WPF application](../app-development/building-a-wpf-application-wpf.md)"},{"pos":[28649,28708],"content":"<bpt id=\"p1\">[</bpt>Styles and templates<ept id=\"p1\">](../controls/styles-and-templates.md)</ept>","source":"[Styles and templates](../controls/styles-and-templates.md)"}]}