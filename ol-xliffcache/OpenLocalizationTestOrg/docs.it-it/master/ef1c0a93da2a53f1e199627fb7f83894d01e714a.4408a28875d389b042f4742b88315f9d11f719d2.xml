{"content":"---\ntitle: \"Restrictions on using accessibility levels - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"access modifiers [C#], accessibility level restrictions\"\nms.assetid: 987e2f22-46bf-4fea-80ee-270b9cd01045\n---\n# Restrictions on using accessibility levels (C# Reference)\n\nWhen you specify a type in a declaration, check whether the accessibility level of the type is dependent on the accessibility level of a member or of another type. For example, the direct base class must be at least as accessible as the derived class. The following declarations cause a compiler error because the base class `BaseClass` is less accessible than `MyClass`:\n\n```csharp\nclass BaseClass {...}\npublic class MyClass: BaseClass {...} // Error\n```\n\nThe following table summarizes the restrictions on declared accessibility levels.\n\n|Context|Remarks|\n|-------------|-------------|\n|[Classes](../../programming-guide/classes-and-structs/classes.md)|The direct base class of a class type must be at least as accessible as the class type itself.|\n|[Interfaces](../../programming-guide/interfaces/index.md)|The explicit base interfaces of an interface type must be at least as accessible as the interface type itself.|\n|[Delegates](../../programming-guide/delegates/index.md)|The return type and parameter types of a delegate type must be at least as accessible as the delegate type itself.|\n|[Constants](../../programming-guide/classes-and-structs/constants.md)|The type of a constant must be at least as accessible as the constant itself.|\n|[Fields](../../programming-guide/classes-and-structs/fields.md)|The type of a field must be at least as accessible as the field itself.|\n|[Methods](../../programming-guide/classes-and-structs/methods.md)|The return type and parameter types of a method must be at least as accessible as the method itself.|\n|[Properties](../../programming-guide/classes-and-structs/properties.md)|The type of a property must be at least as accessible as the property itself.|\n|[Events](../../programming-guide/events/index.md)|The type of an event must be at least as accessible as the event itself.|\n|[Indexers](../../programming-guide/indexers/index.md)|The type and parameter types of an indexer must be at least as accessible as the indexer itself.|\n|[Operators](../../programming-guide/statements-expressions-operators/operators.md)|The return type and parameter types of an operator must be at least as accessible as the operator itself.|\n|[Constructors](../../programming-guide/classes-and-structs/constructors.md)|The parameter types of a constructor must be at least as accessible as the constructor itself.|\n\n## Example\n\nThe following example contains erroneous declarations of different types. The comment following each declaration indicates the expected compiler error.\n\n```csharp\n// Restrictions on Using Accessibility Levels\n// CS0052 expected as well as CS0053, CS0056, and CS0057\n// To make the program work, change access level of both class B\n// and MyPrivateMethod() to public.\n\nusing System;\n\n// A delegate:\ndelegate int MyDelegate();\n\nclass B\n{\n    // A private method:\n    static int MyPrivateMethod()\n    {\n        return 0;\n    }\n}\n\npublic class A\n{\n    // Error: The type B is less accessible than the field A.myField.\n    public B myField = new B();\n\n    // Error: The type B is less accessible\n    // than the constant A.myConst.\n    public readonly B myConst = new B();\n\n    public B MyMethod()\n    {\n        // Error: The type B is less accessible \n        // than the method A.MyMethod.\n        return new B();\n    }\n\n    // Error: The type B is less accessible than the property A.MyProp\n    public B MyProp\n    {\n        set\n        {\n        }\n    }\n\n    MyDelegate d = new MyDelegate(B.MyPrivateMethod);\n    // Even when B is declared public, you still get the error: \n    // \"The parameter B.MyPrivateMethod is not accessible due to \n    // protection level.\"\n\n    public static B operator +(A m1, B m2)\n    {\n        // Error: The type B is less accessible\n        // than the operator A.operator +(A,B)\n        return new B();\n    }\n\n    static void Main()\n    {\n        Console.Write(\"Compiled successfully\");\n    }\n}\n```\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../../language-reference/index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](../../language-reference/keywords/index.md)\n- [Access Modifiers](../../language-reference/keywords/access-modifiers.md)\n- [Accessibility Domain](../../language-reference/keywords/accessibility-domain.md)\n- [Accessibility Levels](../../language-reference/keywords/accessibility-levels.md)\n- [Access Modifiers](../../programming-guide/classes-and-structs/access-modifiers.md)\n- [public](../../language-reference/keywords/public.md)\n- [private](../../language-reference/keywords/private.md)\n- [protected](../../language-reference/keywords/protected.md)\n- [internal](../../language-reference/keywords/internal.md)","nodes":[{"pos":[4,244],"embed":true,"restype":"x-metadata","content":"title: \"Restrictions on using accessibility levels - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"access modifiers [C#], accessibility level restrictions\"\nms.assetid: 987e2f22-46bf-4fea-80ee-270b9cd01045","nodes":[{"content":"Restrictions on using accessibility levels - C# Reference","nodes":[{"pos":[0,57],"content":"Restrictions on using accessibility levels - C# Reference","nodes":[{"content":"Restrictions on using accessibility levels - C# Reference","pos":[0,57]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[251,308],"content":"Restrictions on using accessibility levels (C# Reference)","linkify":"Restrictions on using accessibility levels (C# Reference)","nodes":[{"content":"Restrictions on using accessibility levels (C# Reference)","pos":[0,57]}]},{"content":"When you specify a type in a declaration, check whether the accessibility level of the type is dependent on the accessibility level of a member or of another type.","pos":[310,473]},{"content":"For example, the direct base class must be at least as accessible as the derived class.","pos":[474,561]},{"content":"The following declarations cause a compiler error because the base class <ph id=\"ph1\">`BaseClass`</ph> is less accessible than <ph id=\"ph2\">`MyClass`</ph>:","pos":[562,681],"source":" The following declarations cause a compiler error because the base class `BaseClass` is less accessible than `MyClass`:"},{"content":"The following table summarizes the restrictions on declared accessibility levels.","pos":[767,848]},{"content":"Context","pos":[851,858]},{"content":"Remarks","pos":[859,866]},{"pos":[899,964],"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../programming-guide/classes-and-structs/classes.md)</ept>","source":"[Classes](../../programming-guide/classes-and-structs/classes.md)"},{"content":"The direct base class of a class type must be at least as accessible as the class type itself.","pos":[965,1059]},{"pos":[1062,1119],"content":"<bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../programming-guide/interfaces/index.md)</ept>","source":"[Interfaces](../../programming-guide/interfaces/index.md)"},{"content":"The explicit base interfaces of an interface type must be at least as accessible as the interface type itself.","pos":[1120,1230]},{"pos":[1233,1288],"content":"<bpt id=\"p1\">[</bpt>Delegates<ept id=\"p1\">](../../programming-guide/delegates/index.md)</ept>","source":"[Delegates](../../programming-guide/delegates/index.md)"},{"content":"The return type and parameter types of a delegate type must be at least as accessible as the delegate type itself.","pos":[1289,1403]},{"pos":[1406,1475],"content":"<bpt id=\"p1\">[</bpt>Constants<ept id=\"p1\">](../../programming-guide/classes-and-structs/constants.md)</ept>","source":"[Constants](../../programming-guide/classes-and-structs/constants.md)"},{"content":"The type of a constant must be at least as accessible as the constant itself.","pos":[1476,1553]},{"pos":[1556,1619],"content":"<bpt id=\"p1\">[</bpt>Fields<ept id=\"p1\">](../../programming-guide/classes-and-structs/fields.md)</ept>","source":"[Fields](../../programming-guide/classes-and-structs/fields.md)"},{"content":"The type of a field must be at least as accessible as the field itself.","pos":[1620,1691]},{"pos":[1694,1759],"content":"<bpt id=\"p1\">[</bpt>Methods<ept id=\"p1\">](../../programming-guide/classes-and-structs/methods.md)</ept>","source":"[Methods](../../programming-guide/classes-and-structs/methods.md)"},{"content":"The return type and parameter types of a method must be at least as accessible as the method itself.","pos":[1760,1860]},{"pos":[1863,1934],"content":"<bpt id=\"p1\">[</bpt>Properties<ept id=\"p1\">](../../programming-guide/classes-and-structs/properties.md)</ept>","source":"[Properties](../../programming-guide/classes-and-structs/properties.md)"},{"content":"The type of a property must be at least as accessible as the property itself.","pos":[1935,2012]},{"pos":[2015,2064],"content":"<bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](../../programming-guide/events/index.md)</ept>","source":"[Events](../../programming-guide/events/index.md)"},{"content":"The type of an event must be at least as accessible as the event itself.","pos":[2065,2137]},{"pos":[2140,2193],"content":"<bpt id=\"p1\">[</bpt>Indexers<ept id=\"p1\">](../../programming-guide/indexers/index.md)</ept>","source":"[Indexers](../../programming-guide/indexers/index.md)"},{"content":"The type and parameter types of an indexer must be at least as accessible as the indexer itself.","pos":[2194,2290]},{"pos":[2293,2375],"content":"<bpt id=\"p1\">[</bpt>Operators<ept id=\"p1\">](../../programming-guide/statements-expressions-operators/operators.md)</ept>","source":"[Operators](../../programming-guide/statements-expressions-operators/operators.md)"},{"content":"The return type and parameter types of an operator must be at least as accessible as the operator itself.","pos":[2376,2481]},{"pos":[2484,2559],"content":"<bpt id=\"p1\">[</bpt>Constructors<ept id=\"p1\">](../../programming-guide/classes-and-structs/constructors.md)</ept>","source":"[Constructors](../../programming-guide/classes-and-structs/constructors.md)"},{"content":"The parameter types of a constructor must be at least as accessible as the constructor itself.","pos":[2560,2654]},{"pos":[2660,2667],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example contains erroneous declarations of different types.","pos":[2669,2742]},{"content":"The comment following each declaration indicates the expected compiler error.","pos":[2743,2820]},{"pos":[4203,4228],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[4294,4302],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4306,4355],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../language-reference/index.md)</ept>","source":"[C# Reference](../../language-reference/index.md)"},{"pos":[4358,4414],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[4417,4474],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../language-reference/keywords/index.md)</ept>","source":"[C# Keywords](../../language-reference/keywords/index.md)"},{"pos":[4477,4550],"content":"<bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../language-reference/keywords/access-modifiers.md)</ept>","source":"[Access Modifiers](../../language-reference/keywords/access-modifiers.md)"},{"pos":[4553,4634],"content":"<bpt id=\"p1\">[</bpt>Accessibility Domain<ept id=\"p1\">](../../language-reference/keywords/accessibility-domain.md)</ept>","source":"[Accessibility Domain](../../language-reference/keywords/accessibility-domain.md)"},{"pos":[4637,4718],"content":"<bpt id=\"p1\">[</bpt>Accessibility Levels<ept id=\"p1\">](../../language-reference/keywords/accessibility-levels.md)</ept>","source":"[Accessibility Levels](../../language-reference/keywords/accessibility-levels.md)"},{"pos":[4721,4804],"content":"<bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../programming-guide/classes-and-structs/access-modifiers.md)</ept>","source":"[Access Modifiers](../../programming-guide/classes-and-structs/access-modifiers.md)"},{"pos":[4807,4860],"content":"<bpt id=\"p1\">[</bpt>public<ept id=\"p1\">](../../language-reference/keywords/public.md)</ept>","source":"[public](../../language-reference/keywords/public.md)"},{"pos":[4863,4918],"content":"<bpt id=\"p1\">[</bpt>private<ept id=\"p1\">](../../language-reference/keywords/private.md)</ept>","source":"[private](../../language-reference/keywords/private.md)"},{"pos":[4921,4980],"content":"<bpt id=\"p1\">[</bpt>protected<ept id=\"p1\">](../../language-reference/keywords/protected.md)</ept>","source":"[protected](../../language-reference/keywords/protected.md)"},{"pos":[4983,5040],"content":"<bpt id=\"p1\">[</bpt>internal<ept id=\"p1\">](../../language-reference/keywords/internal.md)</ept>","source":"[internal](../../language-reference/keywords/internal.md)"}]}