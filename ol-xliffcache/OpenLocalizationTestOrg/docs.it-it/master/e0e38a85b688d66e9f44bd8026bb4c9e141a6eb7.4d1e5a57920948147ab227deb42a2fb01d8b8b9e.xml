{"content":"---\ntitle: \"StrongNameGetPublicKey Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"StrongNameGetPublicKey\"\napi_location: \n  - \"mscoree.dll\"\n  - \"mscorsn.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"StrongNameGetPublicKey\"\nhelpviewer_keywords: \n  - \"StrongNameGetPublicKey function [.NET Framework strong naming]\"\nms.assetid: 5b58c87f-3f72-40df-9b9a-291076931cc3\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# StrongNameGetPublicKey Function\nGets the public key from a private/public key pair. The key pair can be supplied either as a key container name within a cryptographic service provider (CSP) or as a raw collection of bytes.  \n  \n This function has been deprecated. Use the [ICLRStrongName::StrongNameGetPublicKey](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md) method instead.  \n  \n## Syntax  \n  \n```  \nBOOLEAN StrongNameGetPublicKey (   \n    [in]  LPCWSTR   szKeyContainer,  \n    [in]  BYTE      *pbKeyBlob,  \n    [in]  ULONG     cbKeyBlob,  \n    [out] BYTE      **ppbPublicKeyBlob,  \n    [out] ULONG     *pcbPublicKeyBlob  \n);  \n```  \n  \n## Parameters  \n `szKeyContainer`  \n [in] The name of the key container that contains the public/private key pair. If `pbKeyBlob` is null, `szKeyContainer` must specify a valid container within the CSP. In this case, `StrongNameGetPublicKey` extracts the public key from the key pair stored in the container.  \n  \n If `pbKeyBlob` is not null, the key pair is assumed to be contained in the key binary large object (BLOB).  \n  \n The keys must be 1024-bit Rivest-Shamir-Adleman (RSA) signing keys. No other types of keys are supported at this time.  \n  \n `pbKeyBlob`  \n [in] A pointer to the public/private key pair. This pair is in the format created by the Win32 `CryptExportKey` function. If `pbKeyBlob` is null, the key container specified by `szKeyContainer` is assumed to contain the key pair.  \n  \n `cbKeyBlob`  \n [in] The size, in bytes, of `pbKeyBlob`.  \n  \n `ppbPublicKeyBlob`  \n [out] The returned public key BLOB. The `ppbPublicKeyBlob` parameter is allocated by the common language runtime and returned to the caller. The caller must free the memory by using the [StrongNameFreeBuffer](../../../../docs/framework/unmanaged-api/strong-naming/strongnamefreebuffer-function.md) function.  \n  \n `pcbPublicKeyBlob`  \n [out] The size of the returned public key BLOB.  \n  \n## Return Value  \n `true` on successful completion; otherwise, `false`.  \n  \n## Remarks  \n The public key is contained in a [PublicKeyBlob](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md) structure.  \n  \n If the `StrongNameGetPublicKey` function does not complete successfully, call the [StrongNameErrorInfo](../../../../docs/framework/unmanaged-api/strong-naming/strongnameerrorinfo-function.md) function to retrieve the last generated error.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** StrongName.h  \n  \n **Library:** Included as a resource in MsCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See also\n\n- [StrongNameGetPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)\n- [StrongNameTokenFromPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnametokenfrompublickey-method.md)\n- [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)\n- [PublicKeyBlob Structure](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)\n","nodes":[{"pos":[4,433],"embed":true,"restype":"x-metadata","content":"title: \"StrongNameGetPublicKey Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"StrongNameGetPublicKey\"\napi_location: \n  - \"mscoree.dll\"\n  - \"mscorsn.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"StrongNameGetPublicKey\"\nhelpviewer_keywords: \n  - \"StrongNameGetPublicKey function [.NET Framework strong naming]\"\nms.assetid: 5b58c87f-3f72-40df-9b9a-291076931cc3\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"StrongNameGetPublicKey Function","nodes":[{"pos":[0,31],"content":"StrongNameGetPublicKey Function","nodes":[{"content":"StrongNameGetPublicKey Function","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[440,471],"content":"StrongNameGetPublicKey Function","linkify":"StrongNameGetPublicKey Function","nodes":[{"content":"StrongNameGetPublicKey Function","pos":[0,31]}]},{"content":"Gets the public key from a private/public key pair.","pos":[472,523]},{"content":"The key pair can be supplied either as a key container name within a cryptographic service provider (CSP) or as a raw collection of bytes.","pos":[524,662]},{"content":"This function has been deprecated.","pos":[669,703]},{"content":"Use the <bpt id=\"p1\">[</bpt>ICLRStrongName::StrongNameGetPublicKey<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)</ept> method instead.","pos":[704,866],"source":" Use the [ICLRStrongName::StrongNameGetPublicKey](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md) method instead."},{"pos":[875,881],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1133,1143],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The name of the key container that contains the public/private key pair.","pos":[1167,1244]},{"content":"If <ph id=\"ph1\">`pbKeyBlob`</ph> is null, <ph id=\"ph2\">`szKeyContainer`</ph> must specify a valid container within the CSP.","pos":[1245,1332],"source":" If `pbKeyBlob` is null, `szKeyContainer` must specify a valid container within the CSP."},{"content":"In this case, <ph id=\"ph1\">`StrongNameGetPublicKey`</ph> extracts the public key from the key pair stored in the container.","pos":[1333,1438],"source":" In this case, `StrongNameGetPublicKey` extracts the public key from the key pair stored in the container."},{"pos":[1445,1551],"content":"If <ph id=\"ph1\">`pbKeyBlob`</ph> is not null, the key pair is assumed to be contained in the key binary large object (BLOB).","source":"If `pbKeyBlob` is not null, the key pair is assumed to be contained in the key binary large object (BLOB)."},{"content":"The keys must be 1024-bit Rivest-Shamir-Adleman (RSA) signing keys.","pos":[1558,1625]},{"content":"No other types of keys are supported at this time.","pos":[1626,1676]},{"content":"[in] A pointer to the public/private key pair.","pos":[1698,1744]},{"content":"This pair is in the format created by the Win32 <ph id=\"ph1\">`CryptExportKey`</ph> function.","pos":[1745,1819],"source":" This pair is in the format created by the Win32 `CryptExportKey` function."},{"content":"If <ph id=\"ph1\">`pbKeyBlob`</ph> is null, the key container specified by <ph id=\"ph2\">`szKeyContainer`</ph> is assumed to contain the key pair.","pos":[1820,1927],"source":" If `pbKeyBlob` is null, the key container specified by `szKeyContainer` is assumed to contain the key pair."},{"content":"[in] The size, in bytes, of <ph id=\"ph1\">`pbKeyBlob`</ph>.","pos":[1949,1989],"source":"[in] The size, in bytes, of `pbKeyBlob`."},{"content":"[out] The returned public key BLOB.","pos":[2018,2053]},{"content":"The <ph id=\"ph1\">`ppbPublicKeyBlob`</ph> parameter is allocated by the common language runtime and returned to the caller.","pos":[2054,2158],"source":" The `ppbPublicKeyBlob` parameter is allocated by the common language runtime and returned to the caller."},{"content":"The caller must free the memory by using the <bpt id=\"p1\">[</bpt>StrongNameFreeBuffer<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/strong-naming/strongnamefreebuffer-function.md)</ept> function.","pos":[2159,2325],"source":" The caller must free the memory by using the [StrongNameFreeBuffer](../../../../docs/framework/unmanaged-api/strong-naming/strongnamefreebuffer-function.md) function."},{"content":"[out] The size of the returned public key BLOB.","pos":[2354,2401]},{"pos":[2410,2422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2426,2478],"content":"<ph id=\"ph1\">`true`</ph> on successful completion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` on successful completion; otherwise, `false`."},{"pos":[2487,2494],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2498,2640],"content":"The public key is contained in a <bpt id=\"p1\">[</bpt>PublicKeyBlob<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)</ept> structure.","source":"The public key is contained in a [PublicKeyBlob](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md) structure."},{"pos":[2647,2885],"content":"If the <ph id=\"ph1\">`StrongNameGetPublicKey`</ph> function does not complete successfully, call the <bpt id=\"p1\">[</bpt>StrongNameErrorInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/strong-naming/strongnameerrorinfo-function.md)</ept> function to retrieve the last generated error.","source":"If the `StrongNameGetPublicKey` function does not complete successfully, call the [StrongNameErrorInfo](../../../../docs/framework/unmanaged-api/strong-naming/strongnameerrorinfo-function.md) function to retrieve the last generated error."},{"pos":[2894,2906],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2910,3014],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3021,3045],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> StrongName.h","source":"**Header:** StrongName.h"},{"pos":[3052,3102],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MsCorEE.dll","source":"**Library:** Included as a resource in MsCorEE.dll"},{"pos":[3109,3217],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[3226,3234],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3238,3367],"content":"<bpt id=\"p1\">[</bpt>StrongNameGetPublicKey Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)</ept>","source":"[StrongNameGetPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)"},{"pos":[3370,3511],"content":"<bpt id=\"p1\">[</bpt>StrongNameTokenFromPublicKey Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnametokenfrompublickey-method.md)</ept>","source":"[StrongNameTokenFromPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnametokenfrompublickey-method.md)"},{"pos":[3514,3618],"content":"<bpt id=\"p1\">[</bpt>ICLRStrongName Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)</ept>","source":"[ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)"},{"pos":[3621,3729],"content":"<bpt id=\"p1\">[</bpt>PublicKeyBlob Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)</ept>","source":"[PublicKeyBlob Structure](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)"}]}