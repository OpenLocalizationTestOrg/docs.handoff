{"content":"---\ntitle: \"External Mapping | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 076606b8-d889-4ba0-b5da-ae577b146f23\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# External Mapping\n[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports *external mapping*, a process by which you use a separate XML file to specify mapping between the data model of the database and your object model. Advantages of using an external mapping file include the following:  \n  \n-   You can keep your mapping code out of your application code. This approach reduces clutter in your application code.  \n  \n-   You can treat an external mapping file something like a configuration file. For example, you can update how your application behaves after shipping the binaries by just swapping out the external mapping file.  \n  \n## Requirements  \n The mapping file must be an XML file, and the file must validate against a [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] schema definition (.xsd) file.  \n  \n The following rules apply:  \n  \n-   The mapping file must be an XML file.  \n  \n-   The XML mapping file must be valid against the XML schema definition file. For more information, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).  \n  \n-   External mapping overrides attribute-based mapping. In other words, when you use an external mapping source to create a <xref:System.Data.Linq.DataContext>, the <xref:System.Data.Linq.DataContext> ignores all mapping attributes you have created on classes. This behavior is true whether the class is included in the external mapping file.  \n  \n-   [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] does not support the hybrid use of the two mapping approaches (attribute-based and external).  \n  \n## XML Schema Definition File  \n External mapping in [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] must be valid against the following XML schema definition.  \n  \n Distinguish this schema definition file from the schema definition file that is used to validate a DBML file. For more information, see [Code Generation in LINQ to SQL](../../../../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)).  \n  \n> [!NOTE]\n>  [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"LinqToSqlMapping.xsd\". To use this file correctly for validating an external mapping file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).  \n  \n```  \n?<?xml version=\"1.0\" encoding=\"utf-16\"?>  \n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.microsoft.com/linqtosql/mapping/2007\" xmlns=\"http://schemas.microsoft.com/linqtosql/mapping/2007\"  \nelementFormDefault=\"qualified\" >  \n  <xs:element name=\"Database\" type=\"Database\" />  \n  <xs:complexType name=\"Database\">  \n    <xs:sequence>  \n      <xs:element name=\"Table\" type=\"Table\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      <xs:element name=\"Function\" type=\"Function\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n    </xs:sequence>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Provider\" type=\"xs:string\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Table\">  \n    <xs:sequence>  \n      <xs:element name=\"Type\" type=\"Type\" minOccurs=\"1\" maxOccurs=\"1\" />  \n    </xs:sequence>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Type\">  \n    <xs:sequence>  \n      <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">  \n        <xs:element name=\"Column\" type=\"Column\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n        <xs:element name=\"Association\" type=\"Association\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      </xs:choice>  \n      <xs:element name=\"Type\" type=\"Type\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n    </xs:sequence>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"InheritanceCode\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsInheritanceDefault\" type=\"xs:boolean\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Column\">  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Storage\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"DbType\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsPrimaryKey\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"IsDbGenerated\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"CanBeNull\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"UpdateCheck\" type=\"UpdateCheck\" use=\"optional\" />  \n    <xs:attribute name=\"IsDiscriminator\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"Expression\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsVersion\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"AutoSync\" type=\"AutoSync\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Association\">  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Storage\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"ThisKey\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"OtherKey\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsForeignKey\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"IsUnique\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"DeleteRule\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"DeleteOnNull\" type=\"xs:boolean\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Function\">  \n    <xs:sequence>  \n      <xs:element name=\"Parameter\" type=\"Parameter\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      <xs:choice>  \n        <xs:element name=\"ElementType\" type=\"Type\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n        <xs:element name=\"Return\" type=\"Return\" minOccurs=\"0\" maxOccurs=\"1\" />  \n      </xs:choice>  \n    </xs:sequence>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Method\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"IsComposable\" type=\"xs:boolean\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Parameter\">  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Parameter\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"DbType\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Direction\" type=\"ParameterDirection\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Return\">  \n    <xs:attribute name=\"DbType\" type=\"xs:string\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:simpleType name=\"UpdateCheck\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Always\" />  \n      <xs:enumeration value=\"Never\" />  \n      <xs:enumeration value=\"WhenChanged\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"ParameterDirection\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"In\" />  \n      <xs:enumeration value=\"Out\" />  \n      <xs:enumeration value=\"InOut\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"AutoSync\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Never\" />  \n      <xs:enumeration value=\"OnInsert\" />  \n      <xs:enumeration value=\"OnUpdate\" />  \n      <xs:enumeration value=\"Always\" />  \n      <xs:enumeration value=\"Default\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n</xs:schema>  \n```  \n  \n## See Also  \n [Code Generation in LINQ to SQL](../../../../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)   \n [Reference](../../../../../../docs/framework/data/adonet/sql/linq/reference.md)   \n [How to: Generate the Object Model as an External File](../../../../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-as-an-external-file.md)","nodes":[{"pos":[4,347],"embed":true,"restype":"x-metadata","content":"title: \"External Mapping | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 076606b8-d889-4ba0-b5da-ae577b146f23\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"External Mapping | Microsoft Docs","nodes":[{"pos":[0,33],"content":"External Mapping | Microsoft Docs","nodes":[{"content":"External Mapping | Microsoft Docs","pos":[0,33]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[354,370],"content":"External Mapping","linkify":"External Mapping","nodes":[{"content":"External Mapping","pos":[0,16]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> supports <bpt id=\"p1\">*</bpt>external mapping<ept id=\"p1\">*</ept>, a process by which you use a separate XML file to specify mapping between the data model of the database and your object model.","pos":[371,595],"source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports *external mapping*, a process by which you use a separate XML file to specify mapping between the data model of the database and your object model."},{"content":"Advantages of using an external mapping file include the following:","pos":[596,663]},{"content":"You can keep your mapping code out of your application code.","pos":[673,733]},{"content":"This approach reduces clutter in your application code.","pos":[734,789]},{"content":"You can treat an external mapping file something like a configuration file.","pos":[799,874]},{"content":"For example, you can update how your application behaves after shipping the binaries by just swapping out the external mapping file.","pos":[875,1007]},{"pos":[1016,1028],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1032,1205],"content":"The mapping file must be an XML file, and the file must validate against a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> schema definition (.xsd) file.","source":"The mapping file must be an XML file, and the file must validate against a [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] schema definition (.xsd) file."},{"content":"The following rules apply:","pos":[1212,1238]},{"content":"The mapping file must be an XML file.","pos":[1248,1285]},{"content":"The XML mapping file must be valid against the XML schema definition file.","pos":[1295,1369]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Validate DBML and External Mapping Files<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md)</ept>.","pos":[1370,1553],"source":" For more information, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md)."},{"content":"External mapping overrides attribute-based mapping.","pos":[1563,1614]},{"content":"In other words, when you use an external mapping source to create a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> ignores all mapping attributes you have created on classes.","pos":[1615,1819],"source":" In other words, when you use an external mapping source to create a <xref:System.Data.Linq.DataContext>, the <xref:System.Data.Linq.DataContext> ignores all mapping attributes you have created on classes."},{"content":"This behavior is true whether the class is included in the external mapping file.","pos":[1820,1901]},{"pos":[1911,2072],"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> does not support the hybrid use of the two mapping approaches (attribute-based and external).","source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] does not support the hybrid use of the two mapping approaches (attribute-based and external)."},{"pos":[2081,2107],"content":"XML Schema Definition File","linkify":"XML Schema Definition File","nodes":[{"content":"XML Schema Definition File","pos":[0,26]}]},{"pos":[2111,2257],"content":"External mapping in <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> must be valid against the following XML schema definition.","source":"External mapping in [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] must be valid against the following XML schema definition."},{"content":"Distinguish this schema definition file from the schema definition file that is used to validate a DBML file.","pos":[2264,2373]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Generation in LINQ to SQL<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)</ept>).","pos":[2374,2523],"source":" For more information, see [Code Generation in LINQ to SQL](../../../../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md))."},{"pos":[2531,2943],"content":"[!NOTE]\n [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"LinqToSqlMapping.xsd\". To use this file correctly for validating an external mapping file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).","leadings":["","> "],"nodes":[{"content":"[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"LinqToSqlMapping.xsd\". To use this file correctly for validating an external mapping file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).","pos":[9,410],"nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph> users will also find this XSD file in the XML Schemas dialog box as \"LinqToSqlMapping.xsd\".","pos":[0,171],"source":"[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"LinqToSqlMapping.xsd\"."},{"content":"To use this file correctly for validating an external mapping file, see <bpt id=\"p1\">[</bpt>How to: Validate DBML and External Mapping Files<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md)</ept>.","pos":[172,401],"source":" To use this file correctly for validating an external mapping file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md)."}]}]},{"pos":[8260,8268],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Code Generation in LINQ to SQL<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)</ept><ph id=\"ph1\"> </ph>","pos":[8272,8394],"source":"[Code Generation in LINQ to SQL](../../../../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md) "},{"content":"<bpt id=\"p1\">[</bpt>Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[8398,8478],"source":"[Reference](../../../../../../docs/framework/data/adonet/sql/linq/reference.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Generate the Object Model as an External File<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-as-an-external-file.md)</ept>","pos":[8482,8648],"source":"[How to: Generate the Object Model as an External File](../../../../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-as-an-external-file.md)"}]}