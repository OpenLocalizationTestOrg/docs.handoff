{"content":"---\ntitle: \"Data Binding in a Windows Forms Client | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: a2a30b37-d6e2-4552-820e-e60b2bbe8829\ncaps.latest.revision: 9\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Data Binding in a Windows Forms Client\nThis sample demonstrates how to bind to data returned by a [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service in a Windows Forms application.  \n  \n> [!NOTE]\n>  The setup procedure and build instructions for this sample are located at the end of this article.  \n  \n This sample demonstrates a service that implements a contract that defines a request-reply communication pattern. The sample consists of a client Windows Forms application (.exe) and a [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] service hosted by Internet Information Services (IIS).  \n  \n The contract is defined by the `IWeatherService` interface, which exposes an operation named `GetWeatherData`. This operation accepts an array of cities and returns an array of `WeatherData` objects that represent the high and low forecasted temperature for a city.  \n  \n The data binding occurs on the client in the Windows Forms application. A `DataGridView` is defined in the Windows Forms designer, which is a graphical representation of the data. An intermediary named `BindingSource` is also created. The data source of `BindingSource` is set to the data array returned by the service. The purpose of the `BindingSource` is to provide a layer of indirection between the data and the data view. All interaction with the data, such as navigating, sorting, filtering, and updating, is accomplished with calls to the `BindingSource` component. To accomplish data binding to the `DataGridView`, the `datasource` of the `DataGridView` is then set to the `BindingSource` object. All of the data returned from the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] service is then displayed graphically to the user.  Every time the user clicks the button, the returned data is automatically updated in the data-bound `DataGridView`.  \n  \n### To set up, build, and run the sample  \n  \n1.  Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md).  \n  \n2.  To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n3.  To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Scenario\\DataBinding\\WindowsForms`  \n  \n## See Also","nodes":[{"pos":[12,67],"content":"Data Binding in a Windows Forms Client | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Data Binding in a Windows Forms Client | Microsoft Docs","pos":[0,55]}]},{"pos":[365,403],"content":"Data Binding in a Windows Forms Client","linkify":"Data Binding in a Windows Forms Client","nodes":[{"content":"Data Binding in a Windows Forms Client","pos":[0,38]}]},{"pos":[404,558],"content":"This sample demonstrates how to bind to data returned by a <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service in a Windows Forms application.","source":"This sample demonstrates how to bind to data returned by a [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service in a Windows Forms application."},{"pos":[566,675],"content":"[!NOTE]\n The setup procedure and build instructions for this sample are located at the end of this article.","leadings":["","> "],"nodes":[{"content":"The setup procedure and build instructions for this sample are located at the end of this article.","pos":[9,107]}]},{"content":"This sample demonstrates a service that implements a contract that defines a request-reply communication pattern.","pos":[682,795]},{"content":"The sample consists of a client Windows Forms application (.exe) and a <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service hosted by Internet Information Services (IIS).","pos":[796,977],"source":" The sample consists of a client Windows Forms application (.exe) and a [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] service hosted by Internet Information Services (IIS)."},{"content":"The contract is defined by the <ph id=\"ph1\">`IWeatherService`</ph> interface, which exposes an operation named <ph id=\"ph2\">`GetWeatherData`</ph>.","pos":[984,1094],"source":"The contract is defined by the `IWeatherService` interface, which exposes an operation named `GetWeatherData`."},{"content":"This operation accepts an array of cities and returns an array of <ph id=\"ph1\">`WeatherData`</ph> objects that represent the high and low forecasted temperature for a city.","pos":[1095,1249],"source":" This operation accepts an array of cities and returns an array of `WeatherData` objects that represent the high and low forecasted temperature for a city."},{"content":"The data binding occurs on the client in the Windows Forms application.","pos":[1256,1327]},{"content":"A <ph id=\"ph1\">`DataGridView`</ph> is defined in the Windows Forms designer, which is a graphical representation of the data.","pos":[1328,1435],"source":" A `DataGridView` is defined in the Windows Forms designer, which is a graphical representation of the data."},{"content":"An intermediary named <ph id=\"ph1\">`BindingSource`</ph> is also created.","pos":[1436,1490],"source":" An intermediary named `BindingSource` is also created."},{"content":"The data source of <ph id=\"ph1\">`BindingSource`</ph> is set to the data array returned by the service.","pos":[1491,1575],"source":" The data source of `BindingSource` is set to the data array returned by the service."},{"content":"The purpose of the <ph id=\"ph1\">`BindingSource`</ph> is to provide a layer of indirection between the data and the data view.","pos":[1576,1683],"source":" The purpose of the `BindingSource` is to provide a layer of indirection between the data and the data view."},{"content":"All interaction with the data, such as navigating, sorting, filtering, and updating, is accomplished with calls to the <ph id=\"ph1\">`BindingSource`</ph> component.","pos":[1684,1829],"source":" All interaction with the data, such as navigating, sorting, filtering, and updating, is accomplished with calls to the `BindingSource` component."},{"content":"To accomplish data binding to the <ph id=\"ph1\">`DataGridView`</ph>, the <ph id=\"ph2\">`datasource`</ph> of the <ph id=\"ph3\">`DataGridView`</ph> is then set to the <ph id=\"ph4\">`BindingSource`</ph> object.","pos":[1830,1961],"source":" To accomplish data binding to the `DataGridView`, the `datasource` of the `DataGridView` is then set to the `BindingSource` object."},{"content":"All of the data returned from the <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service is then displayed graphically to the user.","pos":[1962,2102],"source":" All of the data returned from the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] service is then displayed graphically to the user."},{"content":"Every time the user clicks the button, the returned data is automatically updated in the data-bound <ph id=\"ph1\">`DataGridView`</ph>.","pos":[2104,2219],"source":"  Every time the user clicks the button, the returned data is automatically updated in the data-bound `DataGridView`."},{"pos":[2229,2265],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[2275,2474],"content":"Ensure that you have performed the <bpt id=\"p1\">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.","source":"Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)."},{"pos":[2484,2693],"content":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"pos":[2703,2911],"content":"To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id=\"p1\">[</bpt>Running the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.","source":"To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md)."},{"pos":[2919,3051],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[3105,3431],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[3432,3482]},{"pos":[3572,3580],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}