{"content":"---\ntitle: \"How to: Respond to Clicks in the Windows Forms DataGrid Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Click event [Windows Forms], monitoring in DataGrid controls\"\n  - \"DataGrid control [Windows Forms], examples\"\n  - \"DataGrid control [Windows Forms], returning clicked cell value\"\n  - \"cells [Windows Forms], location in DataGrid\"\n  - \"examples [Windows Forms], DataGrid control\"\n  - \"DataGrid control [Windows Forms], click events\"\nms.assetid: a0aa204b-8351-4d82-9933-ee21a5c9e409\n---\n# How to: Respond to Clicks in the Windows Forms DataGrid Control\n> [!NOTE]\n>  The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).  \n  \n After the Windows Forms <xref:System.Windows.Forms.DataGrid> is connected to a database, you can monitor which cell the user clicked.  \n  \n### To detect when the user of the DataGrid selects a different cell  \n  \n-   In the <xref:System.Windows.Forms.DataGrid.CurrentCellChanged> event handler, write code to respond appropriately.  \n  \n    ```vb  \n    Private Sub myDataGrid_CurrentCellChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles myDataGrid.CurrentCellChanged  \n       MessageBox.Show(\"Col is \" & myDataGrid.CurrentCell.ColumnNumber _  \n          & \", Row is \" & myDataGrid.CurrentCell.RowNumber _  \n          & \", Value is \" & myDataGrid.Item(myDataGrid.CurrentCell))  \n    End Sub  \n    ```  \n  \n    ```csharp  \n    private void myDataGrid_CurrentCellChanged(object sender,   \n    System.EventArgs e)  \n    {  \n       MessageBox.Show (\"Col is \" + myDataGrid.CurrentCell.ColumnNumber  \n          + \", Row is \" + myDataGrid.CurrentCell.RowNumber   \n          + \", Value is \" + myDataGrid[myDataGrid.CurrentCell] );  \n    }  \n    ```  \n  \n     (Visual C#) Place the following code in the form's constructor to register the event handler.  \n  \n    ```csharp  \n    this.myDataGrid.CurrentCellChanged += new  \n       System.EventHandler(this.myDataGrid_CurrentCellChanged);  \n    ```  \n  \n### To determine which part of the DataGrid the user clicked  \n  \n-   Call the <xref:System.Windows.Forms.DataGrid.HitTest%2A> method in an appropriate event handler, such as for the <xref:System.Windows.Forms.Control.MouseDown> or <xref:System.Windows.Forms.Control.Click> event.  \n  \n     The <xref:System.Windows.Forms.DataGrid.HitTest%2A> method returns a <xref:System.Windows.Forms.DataGrid.HitTestInfo> object that contains the row and column of a clicked area.  \n  \n    ```vb  \n    Private Sub myDataGrid_MouseDown(ByVal sender As Object, _  \n    ByVal e As MouseEventArgs) Handles myDataGrid.MouseDown  \n       Dim myGrid As DataGrid = CType(sender, DataGrid)  \n       Dim hti As System.Windows.Forms.DataGrid.HitTestInfo  \n       hti = myGrid.HitTest(e.X, e.Y)  \n       Dim message As String = \"You clicked \"  \n  \n       Select Case hti.Type  \n          Case System.Windows.Forms.DataGrid.HitTestType.None  \n             message &= \"the background.\"  \n          Case System.Windows.Forms.DataGrid.HitTestType.Cell  \n             message &= \"cell at row \" & hti.Row & \", col \" & hti.Column  \n          Case System.Windows.Forms.DataGrid.HitTestType.ColumnHeader  \n             message &= \"the column header for column \" & hti.Column  \n          Case System.Windows.Forms.DataGrid.HitTestType.RowHeader  \n             message &= \"the row header for row \" & hti.Row  \n          Case System.Windows.Forms.DataGrid.HitTestType.ColumnResize  \n             message &= \"the column resizer for column \" & hti.Column  \n          Case System.Windows.Forms.DataGrid.HitTestType.RowResize  \n             message &= \"the row resizer for row \" & hti.Row  \n          Case System.Windows.Forms.DataGrid.HitTestType.Caption  \n             message &= \"the caption\"  \n          Case System.Windows.Forms.DataGrid.HitTestType.ParentRows  \n             message &= \"the parent row\"  \n       End Select  \n  \n       Console.WriteLine(message)  \n    End Sub  \n    ```  \n  \n    ```csharp  \n    private void myDataGrid_MouseDown(object sender,   \n    System.Windows.Forms.MouseEventArgs e)  \n    {  \n       DataGrid myGrid = (DataGrid) sender;  \n       System.Windows.Forms.DataGrid.HitTestInfo hti;  \n       hti = myGrid.HitTest(e.X, e.Y);  \n       string message = \"You clicked \";  \n  \n       switch (hti.Type)   \n       {  \n          case System.Windows.Forms.DataGrid.HitTestType.None :  \n             message += \"the background.\";  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.Cell :  \n             message += \"cell at row \" + hti.Row + \", col \" + hti.Column;  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.ColumnHeader :  \n             message += \"the column header for column \" + hti.Column;  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.RowHeader :  \n             message += \"the row header for row \" + hti.Row;  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.ColumnResize :  \n             message += \"the column resizer for column \" + hti.Column;  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.RowResize :  \n             message += \"the row resizer for row \" + hti.Row;  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.Caption :  \n             message += \"the caption\";  \n             break;  \n          case System.Windows.Forms.DataGrid.HitTestType.ParentRows :  \n             message += \"the parent row\";  \n             break;  \n          }  \n  \n          Console.WriteLine(message);  \n    }  \n    ```  \n  \n     (Visual C#) Place the following code in the form's constructor to register the event handler.  \n  \n    ```csharp  \n    this.myDataGrid.MouseDown += new  \n       System.Windows.Forms.MouseEventHandler  \n       (this.myDataGrid_MouseDown);  \n    ```  \n  \n## See also\n\n- [DataGrid Control](datagrid-control-windows-forms.md)\n- [How to: Change Displayed Data at Run Time in the Windows Forms DataGrid Control](change-displayed-data-at-run-time-wf-datagrid-control.md)\n","nodes":[{"pos":[4,540],"embed":true,"restype":"x-metadata","content":"title: \"How to: Respond to Clicks in the Windows Forms DataGrid Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Click event [Windows Forms], monitoring in DataGrid controls\"\n  - \"DataGrid control [Windows Forms], examples\"\n  - \"DataGrid control [Windows Forms], returning clicked cell value\"\n  - \"cells [Windows Forms], location in DataGrid\"\n  - \"examples [Windows Forms], DataGrid control\"\n  - \"DataGrid control [Windows Forms], click events\"\nms.assetid: a0aa204b-8351-4d82-9933-ee21a5c9e409","nodes":[{"content":"How to: Respond to Clicks in the Windows Forms DataGrid Control","nodes":[{"pos":[0,63],"content":"How to: Respond to Clicks in the Windows Forms DataGrid Control","nodes":[{"content":"How to: Respond to Clicks in the Windows Forms DataGrid Control","pos":[0,63]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[547,610],"content":"How to: Respond to Clicks in the Windows Forms DataGrid Control","linkify":"How to: Respond to Clicks in the Windows Forms DataGrid Control","nodes":[{"content":"How to: Respond to Clicks in the Windows Forms DataGrid Control","pos":[0,63]}]},{"pos":[613,1073],"content":"[!NOTE]\n The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).","leadings":["","> "],"nodes":[{"content":"The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).","pos":[9,458],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control replaces and adds functionality to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control; however, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is retained for both backward compatibility and future use, if you choose.","pos":[0,270],"source":"The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id=\"p1\">](differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.","pos":[271,449],"source":" For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)."}]}]},{"pos":[1080,1213],"content":"After the Windows Forms <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> is connected to a database, you can monitor which cell the user clicked.","source":"After the Windows Forms <xref:System.Windows.Forms.DataGrid> is connected to a database, you can monitor which cell the user clicked."},{"pos":[1223,1287],"content":"To detect when the user of the DataGrid selects a different cell","linkify":"To detect when the user of the DataGrid selects a different cell","nodes":[{"content":"To detect when the user of the DataGrid selects a different cell","pos":[0,64]}]},{"pos":[1297,1411],"content":"In the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid.CurrentCellChanged&gt;</ph> event handler, write code to respond appropriately.","source":"In the <xref:System.Windows.Forms.DataGrid.CurrentCellChanged> event handler, write code to respond appropriately."},{"content":"(Visual C#) Place the following code in the form's constructor to register the event handler.","pos":[2149,2242]},{"pos":[2395,2451],"content":"To determine which part of the DataGrid the user clicked","linkify":"To determine which part of the DataGrid the user clicked","nodes":[{"content":"To determine which part of the DataGrid the user clicked","pos":[0,56]}]},{"pos":[2461,2671],"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method in an appropriate event handler, such as for the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.","source":"Call the <xref:System.Windows.Forms.DataGrid.HitTest%2A> method in an appropriate event handler, such as for the <xref:System.Windows.Forms.Control.MouseDown> or <xref:System.Windows.Forms.Control.Click> event."},{"pos":[2682,2858],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> object that contains the row and column of a clicked area.","source":"The <xref:System.Windows.Forms.DataGrid.HitTest%2A> method returns a <xref:System.Windows.Forms.DataGrid.HitTestInfo> object that contains the row and column of a clicked area."},{"content":"(Visual C#) Place the following code in the form's constructor to register the event handler.","pos":[5999,6092]},{"pos":[6255,6263],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6267,6320],"content":"<bpt id=\"p1\">[</bpt>DataGrid Control<ept id=\"p1\">](datagrid-control-windows-forms.md)</ept>","source":"[DataGrid Control](datagrid-control-windows-forms.md)"},{"pos":[6323,6462],"content":"<bpt id=\"p1\">[</bpt>How to: Change Displayed Data at Run Time in the Windows Forms DataGrid Control<ept id=\"p1\">](change-displayed-data-at-run-time-wf-datagrid-control.md)</ept>","source":"[How to: Change Displayed Data at Run Time in the Windows Forms DataGrid Control](change-displayed-data-at-run-time-wf-datagrid-control.md)"}]}