{"content":"---\ntitle: \"How to: Provide a Toolbox Bitmap for a Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Toolbox [Windows Forms], adding bitmaps for custom controls\"\n  - \"custom controls [Windows Forms], Toolbox bitmaps\"\n  - \"bitmaps [Windows Forms], custom controls\"\nms.assetid: 0ed0840a-616d-41ba-a27d-3573241932ad\n---\n# How to: Provide a Toolbox Bitmap for a Control\nIf you want to have a special icon for your control appear in the **Toolbox**, you can specify a particular image by using the <xref:System.Drawing.ToolboxBitmapAttribute>. This class is an *attribute*, a special kind of class you can attach to other classes. For more information about attributes, see [Attributes overview (Visual Basic)](../../../visual-basic/programming-guide/concepts/attributes/index.md) for Visual Basic or [Attributes (C#)](../../../csharp/programming-guide/concepts/attributes/index.md) for C#.  \n  \n Using the <xref:System.Drawing.ToolboxBitmapAttribute>, you can specify a string that indicates the path and file name for a 16 by 16 pixel bitmap. This bitmap then appears next to your control when added to the **Toolbox**. You can also specify a <xref:System.Type>, in which case the bitmap associated with that type is loaded. If you specify both a <xref:System.Type> and a string, the control searches for an image resource with the name specified by the string parameter in the assembly containing the type specified by the <xref:System.Type> parameter.  \n  \n### To specify a Toolbox bitmap for your control  \n  \n1.  Add the <xref:System.Drawing.ToolboxBitmapAttribute> to the class declaration of your control before the `Class` keyword for visual Basic, and above the class declaration for Visual C#.  \n  \n    ```vb  \n    ' Specifies the bitmap associated with the Button type.  \n    <ToolboxBitmap(GetType(Button))> Class MyControl1  \n    ' Specifies a bitmap file.  \n    End Class  \n    <ToolboxBitmap(\"C:\\Documents and Settings\\Joe\\MyPics\\myImage.bmp\")> _  \n       Class MyControl2  \n    End Class  \n    ' Specifies a type that indicates the assembly to search, and the name   \n    ' of an image resource to look for.  \n    <ToolboxBitmap(GetType(MyControl), \"MyControlBitmap\")> Class MyControl  \n    End Class  \n    ```  \n  \n    ```csharp  \n    // Specifies the bitmap associated with the Button type.  \n    [ToolboxBitmap(typeof(Button))]  \n    class MyControl1 : UserControl  \n    {  \n    }  \n    // Specifies a bitmap file.  \n    [ToolboxBitmap(@\"C:\\Documents and Settings\\Joe\\MyPics\\myImage.bmp\")]  \n    class MyControl2 : UserControl  \n    {  \n    }  \n    // Specifies a type that indicates the assembly to search, and the name   \n    // of an image resource to look for.  \n    [ToolboxBitmap(typeof(MyControl), \"MyControlBitmap\")]  \n    class MyControl : UserControl  \n    {  \n    }  \n    ```  \n  \n2.  Rebuild the project.  \n  \n    > [!NOTE]\n    >  The bitmap does not appear in the Toolbox for autogenerated controls and components. To see the bitmap, reload the control by using the **Choose Toolbox Items** dialog box. For more information, see [Walkthrough: Automatically Populating the Toolbox with Custom Components](walkthrough-automatically-populating-the-toolbox-with-custom-components.md).  \n  \n## See also\n\n- <xref:System.Drawing.ToolboxBitmapAttribute>\n- [Walkthrough: Automatically Populating the Toolbox with Custom Components](walkthrough-automatically-populating-the-toolbox-with-custom-components.md)\n- [Developing Windows Forms Controls at Design Time](developing-windows-forms-controls-at-design-time.md)\n- [Attributes overview (Visual Basic)](../../../visual-basic/programming-guide/concepts/attributes/index.md)\n- [Attributes (C#)](../../../csharp/programming-guide/concepts/attributes/index.md)\n","nodes":[{"pos":[4,354],"embed":true,"restype":"x-metadata","content":"title: \"How to: Provide a Toolbox Bitmap for a Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Toolbox [Windows Forms], adding bitmaps for custom controls\"\n  - \"custom controls [Windows Forms], Toolbox bitmaps\"\n  - \"bitmaps [Windows Forms], custom controls\"\nms.assetid: 0ed0840a-616d-41ba-a27d-3573241932ad","nodes":[{"content":"How to: Provide a Toolbox Bitmap for a Control","nodes":[{"pos":[0,46],"content":"How to: Provide a Toolbox Bitmap for a Control","nodes":[{"content":"How to: Provide a Toolbox Bitmap for a Control","pos":[0,46]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[361,407],"content":"How to: Provide a Toolbox Bitmap for a Control","linkify":"How to: Provide a Toolbox Bitmap for a Control","nodes":[{"content":"How to: Provide a Toolbox Bitmap for a Control","pos":[0,46]}]},{"content":"If you want to have a special icon for your control appear in the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>, you can specify a particular image by using the <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>.","pos":[408,580],"source":"If you want to have a special icon for your control appear in the **Toolbox**, you can specify a particular image by using the <xref:System.Drawing.ToolboxBitmapAttribute>."},{"content":"This class is an <bpt id=\"p1\">*</bpt>attribute<ept id=\"p1\">*</ept>, a special kind of class you can attach to other classes.","pos":[581,667],"source":" This class is an *attribute*, a special kind of class you can attach to other classes."},{"content":"For more information about attributes, see <bpt id=\"p1\">[</bpt>Attributes overview (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/attributes/index.md)</ept> for Visual Basic or <bpt id=\"p2\">[</bpt>Attributes (C#)<ept id=\"p2\">](../../../csharp/programming-guide/concepts/attributes/index.md)</ept> for C#.","pos":[668,927],"source":" For more information about attributes, see [Attributes overview (Visual Basic)](../../../visual-basic/programming-guide/concepts/attributes/index.md) for Visual Basic or [Attributes (C#)](../../../csharp/programming-guide/concepts/attributes/index.md) for C#."},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>, you can specify a string that indicates the path and file name for a 16 by 16 pixel bitmap.","pos":[934,1081],"source":"Using the <xref:System.Drawing.ToolboxBitmapAttribute>, you can specify a string that indicates the path and file name for a 16 by 16 pixel bitmap."},{"content":"This bitmap then appears next to your control when added to the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>.","pos":[1082,1158],"source":" This bitmap then appears next to your control when added to the **Toolbox**."},{"content":"You can also specify a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph>, in which case the bitmap associated with that type is loaded.","pos":[1159,1263],"source":" You can also specify a <xref:System.Type>, in which case the bitmap associated with that type is loaded."},{"content":"If you specify both a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> and a string, the control searches for an image resource with the name specified by the string parameter in the assembly containing the type specified by the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> parameter.","pos":[1264,1492],"source":" If you specify both a <xref:System.Type> and a string, the control searches for an image resource with the name specified by the string parameter in the assembly containing the type specified by the <xref:System.Type> parameter."},{"pos":[1502,1546],"content":"To specify a Toolbox bitmap for your control","linkify":"To specify a Toolbox bitmap for your control","nodes":[{"content":"To specify a Toolbox bitmap for your control","pos":[0,44]}]},{"pos":[1556,1741],"content":"Add the <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> to the class declaration of your control before the <ph id=\"ph2\">`Class`</ph> keyword for visual Basic, and above the class declaration for Visual C#.","source":"Add the <xref:System.Drawing.ToolboxBitmapAttribute> to the class declaration of your control before the `Class` keyword for visual Basic, and above the class declaration for Visual C#."},{"content":"Rebuild the project.","pos":[2853,2873]},{"pos":[2885,3250],"content":"[!NOTE]\nThe bitmap does not appear in the Toolbox for autogenerated controls and components. To see the bitmap, reload the control by using the **Choose Toolbox Items** dialog box. For more information, see [Walkthrough: Automatically Populating the Toolbox with Custom Components](walkthrough-automatically-populating-the-toolbox-with-custom-components.md).","leadings":["","    >  "],"nodes":[{"content":"The bitmap does not appear in the Toolbox for autogenerated controls and components. To see the bitmap, reload the control by using the **Choose Toolbox Items** dialog box. For more information, see [Walkthrough: Automatically Populating the Toolbox with Custom Components](walkthrough-automatically-populating-the-toolbox-with-custom-components.md).","pos":[8,358],"nodes":[{"content":"The bitmap does not appear in the Toolbox for autogenerated controls and components.","pos":[0,84]},{"content":"To see the bitmap, reload the control by using the <bpt id=\"p1\">**</bpt>Choose Toolbox Items<ept id=\"p1\">**</ept> dialog box.","pos":[85,172],"source":" To see the bitmap, reload the control by using the **Choose Toolbox Items** dialog box."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Automatically Populating the Toolbox with Custom Components<ept id=\"p1\">](walkthrough-automatically-populating-the-toolbox-with-custom-components.md)</ept>.","pos":[173,350],"source":" For more information, see [Walkthrough: Automatically Populating the Toolbox with Custom Components](walkthrough-automatically-populating-the-toolbox-with-custom-components.md)."}]}]},{"pos":[3259,3267],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3318,3468],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Automatically Populating the Toolbox with Custom Components<ept id=\"p1\">](walkthrough-automatically-populating-the-toolbox-with-custom-components.md)</ept>","source":"[Walkthrough: Automatically Populating the Toolbox with Custom Components](walkthrough-automatically-populating-the-toolbox-with-custom-components.md)"},{"pos":[3471,3574],"content":"<bpt id=\"p1\">[</bpt>Developing Windows Forms Controls at Design Time<ept id=\"p1\">](developing-windows-forms-controls-at-design-time.md)</ept>","source":"[Developing Windows Forms Controls at Design Time](developing-windows-forms-controls-at-design-time.md)"},{"pos":[3577,3683],"content":"<bpt id=\"p1\">[</bpt>Attributes overview (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/attributes/index.md)</ept>","source":"[Attributes overview (Visual Basic)](../../../visual-basic/programming-guide/concepts/attributes/index.md)"},{"pos":[3686,3767],"content":"<bpt id=\"p1\">[</bpt>Attributes (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/attributes/index.md)</ept>","source":"[Attributes (C#)](../../../csharp/programming-guide/concepts/attributes/index.md)"}]}