{"content":"---\ntitle: \"How to: Receive Strings From Serial Ports in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"serial ports, retrieving strings\"\n  - \"strings [Visual Basic], retrieving from serial ports\"\n  - \"My.Resources object\"\nms.assetid: 8371ce2c-e1c7-476b-a86d-9afc2614b6b7\n---\n# How to: Receive Strings From Serial Ports in Visual Basic\nThis topic describes how to use `My.Computer.Ports` to receive strings from the computer's serial ports in Visual Basic.  \n  \n### To receive strings from the serial port  \n  \n1.  Initialize the return string.  \n  \n     [!code-vb[VbVbalrMyComputer#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#38)]  \n  \n2.  Determine which serial port should provide the strings. This example assumes it is `COM1`.  \n  \n3.  Use the `My.Computer.Ports.OpenSerialPort` method to obtain a reference to the port. For more information, see <xref:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort%2A>.  \n  \n     The `Try...Catch...Finally` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block.  \n  \n     [!code-vb[VbVbalrMyComputer#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#39)]  \n  \n4.  Create a `Do` loop for reading lines of text until no more lines are available.  \n  \n     [!code-vb[VbVbalrMyComputer#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#40)]  \n  \n5.  Use the <xref:System.IO.Ports.SerialPort.ReadLine> method to read the next available line of text from the serial port.  \n  \n     [!code-vb[VbVbalrMyComputer#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#41)]  \n  \n6.  Use an `If` statement to determine if the <xref:System.IO.Ports.SerialPort.ReadLine> method returns `Nothing` (which means no more text is available). If it does return `Nothing`, exit the `Do` loop.  \n  \n     [!code-vb[VbVbalrMyComputer#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#42)]  \n  \n7.  Add an `Else` block to the `If` statement to handle the case if the string is actually read. The block appends the string from the serial port to the return string.  \n  \n     [!code-vb[VbVbalrMyComputer#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#43)]  \n  \n8.  Return the string.  \n  \n     [!code-vb[VbVbalrMyComputer#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#44)]  \n  \n## Example  \n [!code-vb[VbVbalrMyComputer#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#37)]  \n  \n This code example is also available as an IntelliSense code snippet. In the code snippet picker, it is located in **Connectivity and Networking**. For more information, see [Code Snippets](/visualstudio/ide/code-snippets).  \n  \n## Compiling the Code  \n This example assumes the computer is using `COM1`.  \n  \n## Robust Programming  \n This example assumes the computer is using `COM1`. For more flexibility, the code should allow the user to select the desired serial port from a list of available ports. For more information, see [How to: Show Available Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).  \n  \n This example uses a `Try...Catch...Finally` block to make sure that the application closes the port and to catch any timeout exceptions. For more information, see [Try...Catch...Finally Statement](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md).  \n  \n## See also\n\n- <xref:Microsoft.VisualBasic.Devices.Ports>\n- <xref:System.IO.Ports.SerialPort?displayProperty=nameWithType>\n- [How to: Dial Modems Attached to Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)\n- [How to: Send Strings to Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)\n- [How to: Show Available Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)\n","nodes":[{"pos":[4,285],"embed":true,"restype":"x-metadata","content":"title: \"How to: Receive Strings From Serial Ports in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"serial ports, retrieving strings\"\n  - \"strings [Visual Basic], retrieving from serial ports\"\n  - \"My.Resources object\"\nms.assetid: 8371ce2c-e1c7-476b-a86d-9afc2614b6b7","nodes":[{"content":"How to: Receive Strings From Serial Ports in Visual Basic","nodes":[{"pos":[0,57],"content":"How to: Receive Strings From Serial Ports in Visual Basic","nodes":[{"content":"How to: Receive Strings From Serial Ports in Visual Basic","pos":[0,57]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[292,349],"content":"How to: Receive Strings From Serial Ports in Visual Basic","linkify":"How to: Receive Strings From Serial Ports in Visual Basic","nodes":[{"content":"How to: Receive Strings From Serial Ports in Visual Basic","pos":[0,57]}]},{"pos":[350,470],"content":"This topic describes how to use <ph id=\"ph1\">`My.Computer.Ports`</ph> to receive strings from the computer's serial ports in Visual Basic.","source":"This topic describes how to use `My.Computer.Ports` to receive strings from the computer's serial ports in Visual Basic."},{"pos":[480,519],"content":"To receive strings from the serial port","linkify":"To receive strings from the serial port","nodes":[{"content":"To receive strings from the serial port","pos":[0,39]}]},{"content":"Initialize the return string.","pos":[529,558]},{"content":"Determine which serial port should provide the strings.","pos":[698,753]},{"content":"This example assumes it is <ph id=\"ph1\">`COM1`</ph>.","pos":[754,788],"source":" This example assumes it is `COM1`."},{"content":"Use the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method to obtain a reference to the port.","pos":[798,882],"source":"Use the `My.Computer.Ports.OpenSerialPort` method to obtain a reference to the port."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort%2A&gt;</ph>.","pos":[883,970],"source":" For more information, see <xref:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort%2A>."},{"content":"The <ph id=\"ph1\">`Try...Catch...Finally`</ph> block allows the application to close the serial port even if it generates an exception.","pos":[981,1097],"source":"The `Try...Catch...Finally` block allows the application to close the serial port even if it generates an exception."},{"content":"All code that manipulates the serial port should appear within this block.","pos":[1098,1172]},{"pos":[1312,1391],"content":"Create a <ph id=\"ph1\">`Do`</ph> loop for reading lines of text until no more lines are available.","source":"Create a `Do` loop for reading lines of text until no more lines are available."},{"pos":[1531,1650],"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadLine&gt;</ph> method to read the next available line of text from the serial port.","source":"Use the <xref:System.IO.Ports.SerialPort.ReadLine> method to read the next available line of text from the serial port."},{"content":"Use an <ph id=\"ph1\">`If`</ph> statement to determine if the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.ReadLine&gt;</ph> method returns <ph id=\"ph3\">`Nothing`</ph> (which means no more text is available).","pos":[1790,1940],"source":"Use an `If` statement to determine if the <xref:System.IO.Ports.SerialPort.ReadLine> method returns `Nothing` (which means no more text is available)."},{"content":"If it does return <ph id=\"ph1\">`Nothing`</ph>, exit the <ph id=\"ph2\">`Do`</ph> loop.","pos":[1941,1989],"source":" If it does return `Nothing`, exit the `Do` loop."},{"content":"Add an <ph id=\"ph1\">`Else`</ph> block to the <ph id=\"ph2\">`If`</ph> statement to handle the case if the string is actually read.","pos":[2129,2221],"source":"Add an `Else` block to the `If` statement to handle the case if the string is actually read."},{"content":"The block appends the string from the serial port to the return string.","pos":[2222,2293]},{"content":"Return the string.","pos":[2433,2451]},{"pos":[2590,2597],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This code example is also available as an IntelliSense code snippet.","pos":[2727,2795]},{"content":"In the code snippet picker, it is located in <bpt id=\"p1\">**</bpt>Connectivity and Networking<ept id=\"p1\">**</ept>.","pos":[2796,2873],"source":" In the code snippet picker, it is located in **Connectivity and Networking**."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Snippets<ept id=\"p1\">](/visualstudio/ide/code-snippets)</ept>.","pos":[2874,2949],"source":" For more information, see [Code Snippets](/visualstudio/ide/code-snippets)."},{"pos":[2958,2976],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[2980,3030],"content":"This example assumes the computer is using <ph id=\"ph1\">`COM1`</ph>.","source":"This example assumes the computer is using `COM1`."},{"pos":[3039,3057],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"This example assumes the computer is using <ph id=\"ph1\">`COM1`</ph>.","pos":[3061,3111],"source":"This example assumes the computer is using `COM1`."},{"content":"For more flexibility, the code should allow the user to select the desired serial port from a list of available ports.","pos":[3112,3230]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Show Available Serial Ports<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)</ept>.","pos":[3231,3406],"source":" For more information, see [How to: Show Available Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)."},{"content":"This example uses a <ph id=\"ph1\">`Try...Catch...Finally`</ph> block to make sure that the application closes the port and to catch any timeout exceptions.","pos":[3413,3549],"source":"This example uses a `Try...Catch...Finally` block to make sure that the application closes the port and to catch any timeout exceptions."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Try...Catch...Finally Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>.","pos":[3550,3697],"source":" For more information, see [Try...Catch...Finally Statement](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)."},{"pos":[3706,3714],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3828,3994],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[3997,4147],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[4150,4298],"content":"<bpt id=\"p1\">[</bpt>How to: Show Available Serial Ports<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)</ept>","source":"[How to: Show Available Serial Ports](../../../../visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)"}]}