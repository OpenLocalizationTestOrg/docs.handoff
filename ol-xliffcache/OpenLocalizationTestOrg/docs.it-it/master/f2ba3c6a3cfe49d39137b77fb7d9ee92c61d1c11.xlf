<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2ba3c6a3cfe49d39137b77fb7d9ee92c61d1c11</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\reading-and-writing-xml-schemas.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3291fdcaa179877269364642b53dd751d37cc008</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6f92542358998ddf15833e6ef6c6c343def8bda</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reading and Writing XML Schemas | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Reading and Writing XML Schemas</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Schema Object Model (SOM) API can be used to read and write XML Schema definition language (XSD) schemas from files or other sources and build XML schemas in-memory using the classes in the <ph id="ph1">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace that map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reading and Writing XML Schemas</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema.Write%2A&gt;</ph> methods to read and write XML schemas.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object representing the XML schema and takes an optional <ph id="ph3">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> as a parameter to handle schema validation warnings and errors encountered while reading an XML schema.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Write%2A&gt;</ph> method writes XML schemas to <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects and can take an optional <ph id="ph5">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object as a parameter.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> is used to handle namespaces encountered in an XML schema.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> class, see <bpt id="p1">[</bpt>Managing Namespaces in an XML Document<ept id="p1">](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following code example illustrates reading and writing XML schemas from and to a file.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code example takes the <ph id="ph1">`example.xsd`</ph> file, reads it into an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object using the <ph id="ph3">`static`</ph><ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> method, and then writes the file to the console and a new <ph id="ph5">`new.xsd`</ph> file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The code example also provides a <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> as a parameter to the <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> method to handle any schema validation warnings or errors encountered while reading the XML schema.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is not specified (<ph id="ph2">`null`</ph>), no warnings or errors are reported.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XmlSchemaReadWriteExample#1<ept id="p2">](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaReadWriteExample/CPP/XmlSchemaReadWriteExample.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XmlSchemaReadWriteExample#1<ept id="p4">](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaReadWriteExample/CS/XmlSchemaReadWriteExample.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XmlSchemaReadWriteExample#1<ept id="p6">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaReadWriteExample/VB/XmlSchemaReadWriteExample.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The example takes the <ph id="ph1">`example.xsd`</ph> as input.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Schema Object Model Overview<ept id="p1">](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/building-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Traversing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/traversing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Editing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/editing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Including or Importing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XmlSchemaSet for Schema Compilation<ept id="p1">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Post-Schema Compilation Infoset<ept id="p1">](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managing Namespaces in an XML Document<ept id="p1">](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>