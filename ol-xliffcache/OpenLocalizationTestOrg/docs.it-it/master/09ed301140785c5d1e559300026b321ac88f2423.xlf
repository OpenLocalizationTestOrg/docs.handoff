<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09ed301140785c5d1e559300026b321ac88f2423</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\xml-schema-object-model-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5e96f404ca598e4c7ae53db51b975985d2367e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4fb73673ce9b8075a3e6921d95db4b2cf967e7c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XML Schema Object Model Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XML Schema Object Model Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Schema Object Model (SOM) in the Microsoft .NET Framework is a rich API that allows you to create, edit, and validate schemas programmatically.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The SOM operates on XML schema documents similarly to the way the Document Object Model (DOM) operates on XML documents.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>XML schema documents are valid XML files that, once loaded into the SOM, convey meaning about the structure and validity of other XML documents which conform to the schema.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A schema is an XML document that defines a class of XML documents by specifying the structure or model of XML documents for a particular schema.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A schema identifies the constraints on the content of the XML documents, and describes the vocabulary (rules or grammar) that compliant XML documents must follow in order to be considered schema-valid with that particular schema.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Validation of an XML document is the process that ensures that the document conforms to the grammar specified by the schema.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following are ways the SOM API in the .NET Framework enables you to create, edit, and validate schemas.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Load and save valid schemas to and from files.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create in-memory schemas using strongly typed classes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Interact with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class to cache, compile, and retrieve schemas.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Interact with the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> class to validate XML instance documents against schemas.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Build editors for creating and maintaining schemas.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Dynamically edit a schema that can be complied and saved for use in the validation of XML instance documents.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Schema Object Model</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The SOM consists of an extensive set of classes in the <ph id="ph1">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace corresponding to the elements in an XML schema.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`&lt;xsd:schema&gt;...&lt;/xsd:schema&gt;`</ph> element maps to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema?displayProperty=fullName&gt;</ph> class, and all the information that can be contained within an <ph id="ph3">`&lt;xsd:schema/&gt;`</ph> element can be represented using the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Similarly, the <ph id="ph1">`&lt;xsd:element&gt;...&lt;/xsd:element&gt;`</ph> and <ph id="ph2">`&lt;xsd:attribute&gt;...&lt;/xsd:attribute&gt;`</ph> elements map to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement?displayProperty=fullName&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute?displayProperty=fullName&gt;</ph> classes respectively.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This mapping continues for all the elements of an XML schema creating an XML schema object model in the <ph id="ph1">&lt;xref:System.Xml.Schema&gt;</ph> namespace illustrated in the diagram that follows.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>System.Xml.Schema Object Model<ept id="p1">]</ept><bpt id="p2">(../../../../docs/standard/data/xml/media/xmlschemaobjmodeloverview.gif "</bpt>XMLSchemaObjModelOverview<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information about each class in the <ph id="ph1">&lt;xref:System.Xml.Schema&gt;</ph> namespace, see the <ph id="ph2">&lt;xref:System.Xml.Schema&gt;</ph> namespace reference documentation in the .NET Framework class library.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reading and Writing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/reading-and-writing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Building XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/building-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Traversing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/traversing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Editing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/editing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Including or Importing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XmlSchemaSet for Schema Compilation<ept id="p1">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Post-Schema Compilation Infoset<ept id="p1">](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>