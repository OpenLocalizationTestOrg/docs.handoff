{"content":"---\ntitle: \"Intercepting Input from the Stylus\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"architecture [WPF], \"\n  - \", \"\n  - \", \"\n  - \", \"\nms.assetid: 791bb2f0-4e5c-4569-ac3c-211996808d44\n---\n# Intercepting Input from the Stylus\nThe <xref:System.Windows.Input.StylusPlugIns> architecture provides a mechanism for implementing low-level control over <xref:System.Windows.Input.Stylus> input and the creation of digital ink <xref:System.Windows.Ink.Stroke> objects. The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> class provides a mechanism for you to implement custom behavior and apply it to the stream of data coming from the stylus device for the optimal performance.  \n  \n This topic contains the following subsections:  \n  \n-   [Architecture](#Architecture)  \n  \n-   [Implementing Stylus Plug-ins](#ImplementingStylusPlugins)  \n  \n-   [Adding Your Plug-in to an InkCanvas](#AddingYourPluginToAnInkCanvas)  \n  \n-   [Conclusion](#Conclusion)  \n  \n<a name=\"Architecture\"></a>   \n## Architecture  \n The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> is the evolution of the [StylusInput](https://go.microsoft.com/fwlink/?LinkId=50753&clcid=0x409) APIs, described in [Accessing and Manipulating Pen Input](https://go.microsoft.com/fwlink/?LinkId=50752&clcid=0x409), in the [Microsoft Windows XP Tablet PC Edition Software Development Kit 1.7](https://go.microsoft.com/fwlink/?linkid=11782&clcid=0x409).  \n  \n Each <xref:System.Windows.UIElement> has a <xref:System.Windows.UIElement.StylusPlugIns%2A> property that is a <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>. You can add a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> to an element's <xref:System.Windows.UIElement.StylusPlugIns%2A> property to manipulate <xref:System.Windows.Input.StylusPoint> data as it is generated. <xref:System.Windows.Input.StylusPoint> data consists of all the properties supported by the system digitizer, including the <xref:System.Windows.Input.StylusPoint.X%2A> and <xref:System.Windows.Input.StylusPoint.Y%2A> point data, as well as <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> data.  \n  \n Your <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> objects are inserted directly into the stream of data coming from the <xref:System.Windows.Input.Stylus> device when you add the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> to the <xref:System.Windows.UIElement.StylusPlugIns%2A> property. The order in which plug-ins are added to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection dictates the order in which they will receive <xref:System.Windows.Input.StylusPoint> data. For example, if you add a filter plug-in that restricts input to a particular region, and then add a plug-in that recognizes gestures as they are written, the plug-in that recognizes gestures will receive filtered <xref:System.Windows.Input.StylusPoint> data.  \n  \n<a name=\"ImplementingStylusPlugins\"></a>   \n## Implementing Stylus Plug-ins  \n To implement a plug-in, derive a class from <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn>. This class is applied o the stream of data as it comes in from the <xref:System.Windows.Input.Stylus>. In this class you can modify the values of the <xref:System.Windows.Input.StylusPoint> data.  \n  \n> [!CAUTION]\n>  If a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> throws or causes an exception, the application will close. You should thoroughly test controls that consume a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> and only use a control if you are certain the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> will not throw an exception.  \n  \n The following example demonstrates a plug-in that restricts the stylus input by modifying the <xref:System.Windows.Input.StylusPoint.X%2A> and <xref:System.Windows.Input.StylusPoint.Y%2A> values in the <xref:System.Windows.Input.StylusPoint> data as it comes in from the <xref:System.Windows.Input.Stylus> device.  \n  \n [!code-csharp[AdvancedInkTopicsSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)]\n [!code-vb[AdvancedInkTopicsSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)]  \n[!code-csharp[AdvancedInkTopicsSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#3)]\n[!code-vb[AdvancedInkTopicsSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#3)]  \n  \n<a name=\"AddingYourPluginToAnInkCanvas\"></a>   \n## Adding Your Plug-in to an InkCanvas  \n The easiest way to use your custom plug-in is to implement a class that derives from InkCanvas and add it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> property.  \n  \n The following example demonstrates a custom <xref:System.Windows.Controls.InkCanvas> that filters the ink.  \n  \n [!code-csharp[AdvancedInkTopicsSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#4)]  \n  \n If you add a `FilterInkCanvas` to your application and run it, you will notice that the ink isn't restricted to a region until after the user completes a stroke. This is because the <xref:System.Windows.Controls.InkCanvas> has a <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property, which is a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> and is already a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection. The custom <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> you added to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection receives the <xref:System.Windows.Input.StylusPoint> data after <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> receives data. As a result, the <xref:System.Windows.Input.StylusPoint> data will not be filtered until after the user lifts the pen to end a stroke. To filter the ink as the user draws it, you must insert the `FilterPlugin` before the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>.  \n  \n The following C# code demonstrates a custom <xref:System.Windows.Controls.InkCanvas> that filters the ink as it is drawn.  \n  \n [!code-csharp[AdvancedInkTopicsSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#5)]  \n  \n<a name=\"Conclusion\"></a>   \n## Conclusion  \n By deriving your own <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> classes and inserting them into <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> collections, you can greatly enhance the behavior of your digital ink. You have access to the <xref:System.Windows.Input.StylusPoint> data as it is generated, giving you the opportunity to customize the <xref:System.Windows.Input.Stylus> input. Because you have such low-level access to the <xref:System.Windows.Input.StylusPoint> data, you can implement ink collection and rendering with optimal performance for your application.  \n  \n## See also\n\n- [Advanced Ink Handling](advanced-ink-handling.md)\n- [Accessing and Manipulating Pen Input](https://go.microsoft.com/fwlink/?LinkId=50752&clcid=0x409)\n","nodes":[{"pos":[4,228],"embed":true,"restype":"x-metadata","content":"title: \"Intercepting Input from the Stylus\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"architecture [WPF], \"\n  - \", \"\n  - \", \"\n  - \", \"\nms.assetid: 791bb2f0-4e5c-4569-ac3c-211996808d44","nodes":[{"content":"Intercepting Input from the Stylus","nodes":[{"pos":[0,34],"content":"Intercepting Input from the Stylus","nodes":[{"content":"Intercepting Input from the Stylus","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[235,269],"content":"Intercepting Input from the Stylus","linkify":"Intercepting Input from the Stylus","nodes":[{"content":"Intercepting Input from the Stylus","pos":[0,34]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns&gt;</ph> architecture provides a mechanism for implementing low-level control over <ph id=\"ph2\">&lt;xref:System.Windows.Input.Stylus&gt;</ph> input and the creation of digital ink <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects.","pos":[270,504],"source":"The <xref:System.Windows.Input.StylusPlugIns> architecture provides a mechanism for implementing low-level control over <xref:System.Windows.Input.Stylus> input and the creation of digital ink <xref:System.Windows.Ink.Stroke> objects."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> class provides a mechanism for you to implement custom behavior and apply it to the stream of data coming from the stylus device for the optimal performance.","pos":[505,721],"source":" The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> class provides a mechanism for you to implement custom behavior and apply it to the stream of data coming from the stylus device for the optimal performance."},{"content":"This topic contains the following subsections:","pos":[728,774]},{"pos":[784,813],"content":"<bpt id=\"p1\">[</bpt>Architecture<ept id=\"p1\">](#Architecture)</ept>","source":"[Architecture](#Architecture)"},{"pos":[823,881],"content":"<bpt id=\"p1\">[</bpt>Implementing Stylus Plug-ins<ept id=\"p1\">](#ImplementingStylusPlugins)</ept>","source":"[Implementing Stylus Plug-ins](#ImplementingStylusPlugins)"},{"pos":[891,960],"content":"<bpt id=\"p1\">[</bpt>Adding Your Plug-in to an InkCanvas<ept id=\"p1\">](#AddingYourPluginToAnInkCanvas)</ept>","source":"[Adding Your Plug-in to an InkCanvas](#AddingYourPluginToAnInkCanvas)"},{"pos":[970,995],"content":"<bpt id=\"p1\">[</bpt>Conclusion<ept id=\"p1\">](#Conclusion)</ept>","source":"[Conclusion](#Conclusion)"},{"pos":[1035,1047],"content":"Architecture","linkify":"Architecture","nodes":[{"content":"Architecture","pos":[0,12]}]},{"pos":[1051,1461],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> is the evolution of the <bpt id=\"p1\">[</bpt>StylusInput<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=50753&amp;clcid=0x409)</ept> APIs, described in <bpt id=\"p2\">[</bpt>Accessing and Manipulating Pen Input<ept id=\"p2\">](https://go.microsoft.com/fwlink/?LinkId=50752&amp;clcid=0x409)</ept>, in the <bpt id=\"p3\">[</bpt>Microsoft Windows XP Tablet PC Edition Software Development Kit 1.7<ept id=\"p3\">](https://go.microsoft.com/fwlink/?linkid=11782&amp;clcid=0x409)</ept>.","source":"The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> is the evolution of the [StylusInput](https://go.microsoft.com/fwlink/?LinkId=50753&clcid=0x409) APIs, described in [Accessing and Manipulating Pen Input](https://go.microsoft.com/fwlink/?LinkId=50752&clcid=0x409), in the [Microsoft Windows XP Tablet PC Edition Software Development Kit 1.7](https://go.microsoft.com/fwlink/?linkid=11782&clcid=0x409)."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property that is a <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph>.","pos":[1468,1644],"source":"Each <xref:System.Windows.UIElement> has a <xref:System.Windows.UIElement.StylusPlugIns%2A> property that is a <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>."},{"content":"You can add a <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> to an element's <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property to manipulate <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as it is generated.","pos":[1645,1866],"source":" You can add a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> to an element's <xref:System.Windows.UIElement.StylusPlugIns%2A> property to manipulate <xref:System.Windows.Input.StylusPoint> data as it is generated."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data consists of all the properties supported by the system digitizer, including the <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPoint.X%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPoint.Y%2A&gt;</ph> point data, as well as <ph id=\"ph4\">&lt;xref:System.Windows.Input.StylusPoint.PressureFactor%2A&gt;</ph> data.","pos":[1867,2172],"source":"<xref:System.Windows.Input.StylusPoint> data consists of all the properties supported by the system digitizer, including the <xref:System.Windows.Input.StylusPoint.X%2A> and <xref:System.Windows.Input.StylusPoint.Y%2A> point data, as well as <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> data."},{"content":"Your <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> objects are inserted directly into the stream of data coming from the <ph id=\"ph2\">&lt;xref:System.Windows.Input.Stylus&gt;</ph> device when you add the <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> to the <ph id=\"ph4\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property.","pos":[2179,2488],"source":"Your <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> objects are inserted directly into the stream of data coming from the <xref:System.Windows.Input.Stylus> device when you add the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> to the <xref:System.Windows.UIElement.StylusPlugIns%2A> property."},{"content":"The order in which plug-ins are added to the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection dictates the order in which they will receive <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data.","pos":[2489,2685],"source":" The order in which plug-ins are added to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection dictates the order in which they will receive <xref:System.Windows.Input.StylusPoint> data."},{"content":"For example, if you add a filter plug-in that restricts input to a particular region, and then add a plug-in that recognizes gestures as they are written, the plug-in that recognizes gestures will receive filtered <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data.","pos":[2686,2945],"source":" For example, if you add a filter plug-in that restricts input to a particular region, and then add a plug-in that recognizes gestures as they are written, the plug-in that recognizes gestures will receive filtered <xref:System.Windows.Input.StylusPoint> data."},{"pos":[2998,3026],"content":"Implementing Stylus Plug-ins","linkify":"Implementing Stylus Plug-ins","nodes":[{"content":"Implementing Stylus Plug-ins","pos":[0,28]}]},{"content":"To implement a plug-in, derive a class from <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph>.","pos":[3030,3129],"source":"To implement a plug-in, derive a class from <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn>."},{"content":"This class is applied o the stream of data as it comes in from the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Stylus&gt;</ph>.","pos":[3130,3232],"source":" This class is applied o the stream of data as it comes in from the <xref:System.Windows.Input.Stylus>."},{"content":"In this class you can modify the values of the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data.","pos":[3233,3325],"source":" In this class you can modify the values of the <xref:System.Windows.Input.StylusPoint> data."},{"pos":[3333,3701],"content":"[!CAUTION]\n If a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> throws or causes an exception, the application will close. You should thoroughly test controls that consume a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> and only use a control if you are certain the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> will not throw an exception.","leadings":["","> "],"nodes":[{"content":"If a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> throws or causes an exception, the application will close. You should thoroughly test controls that consume a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> and only use a control if you are certain the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> will not throw an exception.","pos":[12,366],"nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> throws or causes an exception, the application will close.","pos":[0,118],"source":"If a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> throws or causes an exception, the application will close."},{"content":"You should thoroughly test controls that consume a <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> and only use a control if you are certain the <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> will not throw an exception.","pos":[119,354],"source":" You should thoroughly test controls that consume a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> and only use a control if you are certain the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> will not throw an exception."}]}]},{"pos":[3708,4021],"content":"The following example demonstrates a plug-in that restricts the stylus input by modifying the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint.X%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPoint.Y%2A&gt;</ph> values in the <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as it comes in from the <ph id=\"ph4\">&lt;xref:System.Windows.Input.Stylus&gt;</ph> device.","source":"The following example demonstrates a plug-in that restricts the stylus input by modifying the <xref:System.Windows.Input.StylusPoint.X%2A> and <xref:System.Windows.Input.StylusPoint.Y%2A> values in the <xref:System.Windows.Input.StylusPoint> data as it comes in from the <xref:System.Windows.Input.Stylus> device."},{"pos":[4659,4694],"content":"Adding Your Plug-in to an InkCanvas","linkify":"Adding Your Plug-in to an InkCanvas","nodes":[{"content":"Adding Your Plug-in to an InkCanvas","pos":[0,35]}]},{"pos":[4698,4869],"content":"The easiest way to use your custom plug-in is to implement a class that derives from InkCanvas and add it to the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property.","source":"The easiest way to use your custom plug-in is to implement a class that derives from InkCanvas and add it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> property."},{"pos":[4876,4982],"content":"The following example demonstrates a custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> that filters the ink.","source":"The following example demonstrates a custom <xref:System.Windows.Controls.InkCanvas> that filters the ink."},{"content":"If you add a <ph id=\"ph1\">`FilterInkCanvas`</ph> to your application and run it, you will notice that the ink isn't restricted to a region until after the user completes a stroke.","pos":[5131,5292],"source":"If you add a `FilterInkCanvas` to your application and run it, you will notice that the ink isn't restricted to a region until after the user completes a stroke."},{"content":"This is because the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> property, which is a <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> and is already a member of the <ph id=\"ph4\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection.","pos":[5293,5587],"source":" This is because the <xref:System.Windows.Controls.InkCanvas> has a <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property, which is a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> and is already a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection."},{"content":"The custom <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> you added to the <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection receives the <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data after <ph id=\"ph4\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> receives data.","pos":[5588,5867],"source":" The custom <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> you added to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection receives the <xref:System.Windows.Input.StylusPoint> data after <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> receives data."},{"content":"As a result, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data will not be filtered until after the user lifts the pen to end a stroke.","pos":[5868,6002],"source":" As a result, the <xref:System.Windows.Input.StylusPoint> data will not be filtered until after the user lifts the pen to end a stroke."},{"content":"To filter the ink as the user draws it, you must insert the <ph id=\"ph1\">`FilterPlugin`</ph> before the <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>.","pos":[6003,6147],"source":" To filter the ink as the user draws it, you must insert the `FilterPlugin` before the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>."},{"pos":[6154,6275],"content":"The following C# code demonstrates a custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> that filters the ink as it is drawn.","source":"The following C# code demonstrates a custom <xref:System.Windows.Controls.InkCanvas> that filters the ink as it is drawn."},{"pos":[6455,6465],"content":"Conclusion","linkify":"Conclusion","nodes":[{"content":"Conclusion","pos":[0,10]}]},{"content":"By deriving your own <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> classes and inserting them into <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph> collections, you can greatly enhance the behavior of your digital ink.","pos":[6469,6712],"source":"By deriving your own <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> classes and inserting them into <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> collections, you can greatly enhance the behavior of your digital ink."},{"content":"You have access to the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as it is generated, giving you the opportunity to customize the <ph id=\"ph2\">&lt;xref:System.Windows.Input.Stylus&gt;</ph> input.","pos":[6713,6886],"source":" You have access to the <xref:System.Windows.Input.StylusPoint> data as it is generated, giving you the opportunity to customize the <xref:System.Windows.Input.Stylus> input."},{"content":"Because you have such low-level access to the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data, you can implement ink collection and rendering with optimal performance for your application.","pos":[6887,7072],"source":" Because you have such low-level access to the <xref:System.Windows.Input.StylusPoint> data, you can implement ink collection and rendering with optimal performance for your application."},{"pos":[7081,7089],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7093,7142],"content":"<bpt id=\"p1\">[</bpt>Advanced Ink Handling<ept id=\"p1\">](advanced-ink-handling.md)</ept>","source":"[Advanced Ink Handling](advanced-ink-handling.md)"},{"pos":[7145,7242],"content":"<bpt id=\"p1\">[</bpt>Accessing and Manipulating Pen Input<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=50752&amp;clcid=0x409)</ept>","source":"[Accessing and Manipulating Pen Input](https://go.microsoft.com/fwlink/?LinkId=50752&clcid=0x409)"}]}