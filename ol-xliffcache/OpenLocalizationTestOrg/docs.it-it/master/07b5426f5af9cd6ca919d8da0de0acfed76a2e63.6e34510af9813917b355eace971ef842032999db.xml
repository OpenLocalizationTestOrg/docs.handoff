{"content":"---\ntitle: \"Parallel Programming in .NET\"\nms.date: 09/12/2018\nms.technology: dotnet-standard\nhelpviewer_keywords:\n  - \"parallel programming\"\nms.assetid: 4d83c690-ad2d-489e-a2e0-b85b898a672d\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# Parallel Programming in .NET\n\nMany personal computers and workstations have multiple CPU cores that enable multiple threads to be executed simultaneously. To take advantage of the hardware, you can parallelize your code to distribute work across multiple processors.\n\nIn the past, parallelization required low-level manipulation of threads and locks. Visual Studio and the .NET Framework enhance support for parallel programming by providing a runtime, class library types, and diagnostic tools. These features, which were introduced with the .NET Framework 4, simplify parallel development. You can write efficient, fine-grained, and scalable parallel code in a natural idiom without having to work directly with threads or the thread pool.\n\nThe following illustration provides a high-level overview of the parallel programming architecture in the .NET Framework:\n\n![.NET Parallel Programming Architecture](./media/tpl-architecture.png)\n\n## Related Topics\n\n|Technology|Description|\n|----------------|-----------------|\n|[Task Parallel Library (TPL)](../../../docs/standard/parallel-programming/task-parallel-library-tpl.md)|Provides documentation for the <xref:System.Threading.Tasks.Parallel?displayProperty=nameWithType> class, which includes parallel versions of `For` and `ForEach` loops, and also for the <xref:System.Threading.Tasks.Task?displayProperty=nameWithType> class, which represents the preferred way to express asynchronous operations.|\n|[Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)|A parallel implementation of LINQ to Objects that significantly improves performance in many scenarios.|\n|[Data Structures for Parallel Programming](../../../docs/standard/parallel-programming/data-structures-for-parallel-programming.md)|Provides links to documentation for thread-safe collection classes, lightweight synchronization types, and types for lazy initialization.|\n|[Parallel Diagnostic Tools](../../../docs/standard/parallel-programming/parallel-diagnostic-tools.md)|Provides links to documentation for Visual Studio debugger windows for tasks and parallel stacks, and for the [Concurrency Visualizer](/visualstudio/profiling/concurrency-visualizer).|\n|[Custom Partitioners for PLINQ and TPL](../../../docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)|Describes how partitioners work and how to configure the default partitioners or create a new partitioner.|\n|[Task Schedulers](xref:System.Threading.Tasks.TaskScheduler)|Describes how schedulers work and how the default schedulers may be configured.|\n|[Lambda Expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)|Provides a brief overview of lambda expressions in C# and Visual Basic, and shows how they are used in PLINQ and the Task Parallel Library.|\n|[For Further Reading](../../../docs/standard/parallel-programming/for-further-reading-parallel-programming.md)|Provides links to additional information and sample resources for parallel programming in .NET.|\n\n## See also\n\n- [Async Overview](../async.md)\n- [Managed Threading](../threading/index.md)\n","nodes":[{"pos":[4,229],"embed":true,"restype":"x-metadata","content":"title: \"Parallel Programming in .NET\"\nms.date: 09/12/2018\nms.technology: dotnet-standard\nhelpviewer_keywords:\n  - \"parallel programming\"\nms.assetid: 4d83c690-ad2d-489e-a2e0-b85b898a672d\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Parallel Programming in .NET","nodes":[{"pos":[0,28],"content":"Parallel Programming in .NET","nodes":[{"content":"Parallel Programming in .NET","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[236,264],"content":"Parallel Programming in .NET","linkify":"Parallel Programming in .NET","nodes":[{"content":"Parallel Programming in .NET","pos":[0,28]}]},{"content":"Many personal computers and workstations have multiple CPU cores that enable multiple threads to be executed simultaneously.","pos":[266,390]},{"content":"To take advantage of the hardware, you can parallelize your code to distribute work across multiple processors.","pos":[391,502]},{"content":"In the past, parallelization required low-level manipulation of threads and locks.","pos":[504,586]},{"content":"Visual Studio and the .NET Framework enhance support for parallel programming by providing a runtime, class library types, and diagnostic tools.","pos":[587,731]},{"content":"These features, which were introduced with the .NET Framework 4, simplify parallel development.","pos":[732,827]},{"content":"You can write efficient, fine-grained, and scalable parallel code in a natural idiom without having to work directly with threads or the thread pool.","pos":[828,977]},{"content":"The following illustration provides a high-level overview of the parallel programming architecture in the .NET Framework:","pos":[979,1100]},{"content":".NET Parallel Programming Architecture","pos":[1104,1142]},{"pos":[1178,1192],"content":"Related Topics","linkify":"Related Topics","nodes":[{"content":"Related Topics","pos":[0,14]}]},{"content":"Technology","pos":[1195,1205]},{"content":"Description","pos":[1206,1217]},{"pos":[1257,1360],"content":"<bpt id=\"p1\">[</bpt>Task Parallel Library (TPL)<ept id=\"p1\">](../../../docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept>","source":"[Task Parallel Library (TPL)](../../../docs/standard/parallel-programming/task-parallel-library-tpl.md)"},{"pos":[1361,1688],"content":"Provides documentation for the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Parallel?displayProperty=nameWithType&gt;</ph> class, which includes parallel versions of <ph id=\"ph2\">`For`</ph> and <ph id=\"ph3\">`ForEach`</ph> loops, and also for the <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.Task?displayProperty=nameWithType&gt;</ph> class, which represents the preferred way to express asynchronous operations.","source":"Provides documentation for the <xref:System.Threading.Tasks.Parallel?displayProperty=nameWithType> class, which includes parallel versions of `For` and `ForEach` loops, and also for the <xref:System.Threading.Tasks.Task?displayProperty=nameWithType> class, which represents the preferred way to express asynchronous operations."},{"pos":[1691,1782],"content":"<bpt id=\"p1\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>","source":"[Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)"},{"content":"A parallel implementation of LINQ to Objects that significantly improves performance in many scenarios.","pos":[1783,1886]},{"pos":[1889,2020],"content":"<bpt id=\"p1\">[</bpt>Data Structures for Parallel Programming<ept id=\"p1\">](../../../docs/standard/parallel-programming/data-structures-for-parallel-programming.md)</ept>","source":"[Data Structures for Parallel Programming](../../../docs/standard/parallel-programming/data-structures-for-parallel-programming.md)"},{"content":"Provides links to documentation for thread-safe collection classes, lightweight synchronization types, and types for lazy initialization.","pos":[2021,2158]},{"pos":[2161,2262],"content":"<bpt id=\"p1\">[</bpt>Parallel Diagnostic Tools<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-diagnostic-tools.md)</ept>","source":"[Parallel Diagnostic Tools](../../../docs/standard/parallel-programming/parallel-diagnostic-tools.md)"},{"pos":[2263,2446],"content":"Provides links to documentation for Visual Studio debugger windows for tasks and parallel stacks, and for the <bpt id=\"p1\">[</bpt>Concurrency Visualizer<ept id=\"p1\">](/visualstudio/profiling/concurrency-visualizer)</ept>.","source":"Provides links to documentation for Visual Studio debugger windows for tasks and parallel stacks, and for the [Concurrency Visualizer](/visualstudio/profiling/concurrency-visualizer)."},{"pos":[2449,2574],"content":"<bpt id=\"p1\">[</bpt>Custom Partitioners for PLINQ and TPL<ept id=\"p1\">](../../../docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>","source":"[Custom Partitioners for PLINQ and TPL](../../../docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)"},{"content":"Describes how partitioners work and how to configure the default partitioners or create a new partitioner.","pos":[2575,2681]},{"pos":[2684,2744],"content":"<bpt id=\"p1\">[</bpt>Task Schedulers<ept id=\"p1\">](xref:System.Threading.Tasks.TaskScheduler)</ept>","source":"[Task Schedulers](xref:System.Threading.Tasks.TaskScheduler)"},{"content":"Describes how schedulers work and how the default schedulers may be configured.","pos":[2745,2824]},{"pos":[2827,2948],"content":"<bpt id=\"p1\">[</bpt>Lambda Expressions in PLINQ and TPL<ept id=\"p1\">](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)</ept>","source":"[Lambda Expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)"},{"content":"Provides a brief overview of lambda expressions in C# and Visual Basic, and shows how they are used in PLINQ and the Task Parallel Library.","pos":[2949,3088]},{"pos":[3091,3201],"content":"<bpt id=\"p1\">[</bpt>For Further Reading<ept id=\"p1\">](../../../docs/standard/parallel-programming/for-further-reading-parallel-programming.md)</ept>","source":"[For Further Reading](../../../docs/standard/parallel-programming/for-further-reading-parallel-programming.md)"},{"content":"Provides links to additional information and sample resources for parallel programming in .NET.","pos":[3202,3297]},{"pos":[3303,3311],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3315,3344],"content":"<bpt id=\"p1\">[</bpt>Async Overview<ept id=\"p1\">](../async.md)</ept>","source":"[Async Overview](../async.md)"},{"pos":[3347,3389],"content":"<bpt id=\"p1\">[</bpt>Managed Threading<ept id=\"p1\">](../threading/index.md)</ept>","source":"[Managed Threading](../threading/index.md)"}]}