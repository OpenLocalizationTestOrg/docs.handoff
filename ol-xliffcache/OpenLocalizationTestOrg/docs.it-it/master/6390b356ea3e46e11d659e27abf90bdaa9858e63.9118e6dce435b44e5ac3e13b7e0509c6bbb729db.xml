{"content":"---\ntitle: \"How to: Reference .NET Types from COM | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"importing type library\"\n  - \"COM interop, referencing .NET types\"\n  - \"interoperation with unmanaged code, referencing .NET types\"\n  - \"referencing .NET types\"\n  - \"interoperation with unmanaged code, importing type library\"\n  - \"type libraries\"\n  - \"COM interop, importing type library\"\nms.assetid: 54917f6f-cb18-4103-b622-856b55da93f3\ncaps.latest.revision: 7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# How to: Reference .NET Types from COM\nFrom the point of view of client and server code, the differences between COM and the .NET Framework are largely invisible. Microsoft Visual Basic clients can view a .NET object in the object browser, which exposes the object methods and syntax, properties, and fields exactly as if it were any other COM object.  \n  \n The process for importing a type library is slightly more complicated for C++ clients, although you use the same tools to export metadata to a COM type library. To reference .NET object members from an unmanaged C++ client, reference the TLB file (produced with Tlbexp.exe) with the **#import** directive. When referencing a type library from C++, you must either specify the **raw_interfaces_only** option or import the definitions in the base class library, Mscorlib.tlb.  \n  \n### To import a library  \n  \n-   Specify the **raw_interfaces_only** option in the **#import** directive. For example:  \n  \n    ```cpp  \n    #import \"..\\LoanLib\\LoanLib.tlb\" raw_interfaces_only  \n    ```  \n  \n     -or-  \n  \n-   Include an #import directive for Mscorlib.tlb. For example:  \n  \n    ```cpp  \n    #import \"mscorlib.tlb\"  \n    #import \"..\\LoanLib\\LoanLib.tlb\"  \n    ```  \n  \n## See Also  \n [Exposing .NET Framework Components to COM](../../../docs/framework/interop/exposing-dotnet-components-to-com.md)   \n [Registering Assemblies with COM](../../../docs/framework/interop/registering-assemblies-with-com.md)   \n [Calling a .NET Object](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33)   \n [Deploying an Application for COM Access](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce)","nodes":[{"pos":[4,734],"nodes":[{"content":"How to: Reference .NET Types from COM | Microsoft Docs","nodes":[{"pos":[0,54],"content":"How to: Reference .NET Types from COM | Microsoft Docs","nodes":[{"content":"How to: Reference .NET Types from COM | Microsoft Docs","pos":[0,54]}]}],"pos":[6,63],"yaml":true}],"content":"title: \"How to: Reference .NET Types from COM | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"importing type library\"\n  - \"COM interop, referencing .NET types\"\n  - \"interoperation with unmanaged code, referencing .NET types\"\n  - \"referencing .NET types\"\n  - \"interoperation with unmanaged code, importing type library\"\n  - \"type libraries\"\n  - \"COM interop, importing type library\"\nms.assetid: 54917f6f-cb18-4103-b622-856b55da93f3\ncaps.latest.revision: 7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[741,778],"content":"How to: Reference .NET Types from COM","linkify":"How to: Reference .NET Types from COM","nodes":[{"content":"How to: Reference .NET Types from COM","pos":[0,37]}]},{"content":"From the point of view of client and server code, the differences between COM and the .NET Framework are largely invisible.","pos":[779,902]},{"content":"Microsoft Visual Basic clients can view a .NET object in the object browser, which exposes the object methods and syntax, properties, and fields exactly as if it were any other COM object.","pos":[903,1091]},{"content":"The process for importing a type library is slightly more complicated for C++ clients, although you use the same tools to export metadata to a COM type library.","pos":[1098,1258]},{"content":"To reference .NET object members from an unmanaged C++ client, reference the TLB file (produced with Tlbexp.exe) with the <bpt id=\"p1\">**</bpt>#import<ept id=\"p1\">**</ept> directive.","pos":[1259,1403],"source":" To reference .NET object members from an unmanaged C++ client, reference the TLB file (produced with Tlbexp.exe) with the **#import** directive."},{"content":"When referencing a type library from C++, you must either specify the <bpt id=\"p1\">**</bpt>raw_interfaces_only<ept id=\"p1\">**</ept> option or import the definitions in the base class library, Mscorlib.tlb.","pos":[1404,1571],"source":" When referencing a type library from C++, you must either specify the **raw_interfaces_only** option or import the definitions in the base class library, Mscorlib.tlb."},{"pos":[1581,1600],"content":"To import a library","linkify":"To import a library","nodes":[{"content":"To import a library","pos":[0,19]}]},{"content":"Specify the <bpt id=\"p1\">**</bpt>raw_interfaces_only<ept id=\"p1\">**</ept> option in the <bpt id=\"p2\">**</bpt>#import<ept id=\"p2\">**</ept> directive.","pos":[1610,1682],"source":"Specify the **raw_interfaces_only** option in the **#import** directive."},{"content":"For example:","pos":[1683,1695]},{"content":"-or-","pos":[1791,1795]},{"content":"Include an #import directive for Mscorlib.tlb.","pos":[1805,1851]},{"content":"For example:","pos":[1852,1864]},{"pos":[1967,1975],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Exposing .NET Framework Components to COM<ept id=\"p1\">](../../../docs/framework/interop/exposing-dotnet-components-to-com.md)</ept><ph id=\"ph1\"> </ph>","pos":[1979,2093],"source":"[Exposing .NET Framework Components to COM](../../../docs/framework/interop/exposing-dotnet-components-to-com.md) "},{"content":"<bpt id=\"p1\">[</bpt>Registering Assemblies with COM<ept id=\"p1\">](../../../docs/framework/interop/registering-assemblies-with-com.md)</ept><ph id=\"ph1\"> </ph>","pos":[2097,2199],"source":"[Registering Assemblies with COM](../../../docs/framework/interop/registering-assemblies-with-com.md) "},{"content":"<bpt id=\"p1\">[</bpt>Calling a .NET Object<ept id=\"p1\">](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33)</ept><ph id=\"ph1\"> </ph>","pos":[2203,2297],"source":"[Calling a .NET Object](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33) "},{"content":"<bpt id=\"p1\">[</bpt>Deploying an Application for COM Access<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce)</ept>","pos":[2301,2412],"source":"[Deploying an Application for COM Access](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce)"}]}