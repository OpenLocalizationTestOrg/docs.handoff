<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ui-automation-properties-for-clients.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a75b502dc02f0541b9debb6cd1ae23ba10eed8b1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\ui-automation\ui-automation-properties-for-clients.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7aaa6bde88c3c05dd6e5ef3505daf6b910c73d03</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba3c53a1cb6bec8d32031945b21aeb0608e36ca9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>UI Automation Properties for Clients</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>UI Automation Properties for Clients</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This documentation is intended for .NET Framework developers who want to use the managed <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> classes defined in the <ph id="ph2">&lt;xref:System.Windows.Automation&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For the latest information about <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, see <bpt id="p1">[</bpt>Windows Automation API: UI Automation<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=156746)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This overview introduces you to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> properties as they are exposed to UI Automation client applications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Properties on <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> objects contain information about <ph id="ph2">[!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)]</ph> elements, usually controls.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The properties of an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> are generic; that is, not specific to a control type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Many of these properties are exposed in the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.AutomationElementInformation&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Control patterns also have properties.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The properties of control patterns are specific to the pattern.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Automation.ScrollPattern&gt;</ph> has properties that enable a client application to discover whether a window is vertically or horizontally scrollable, and what the current view sizes and scroll positions are.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Control patterns expose all their properties through a structure; for example, <ph id="ph1">&lt;xref:System.Windows.Automation.ScrollPattern.ScrollPatternInformation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> properties are read-only.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To set properties of a control, you must use the methods of the appropriate control pattern.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, use <ph id="ph1">&lt;xref:System.Windows.Automation.ScrollPattern.Scroll%2A&gt;</ph> to change the position values of a scrolling window.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To improve performance, property values of controls and control patterns can be cached when <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> objects are retrieved.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Caching in UI Automation Clients<ept id="p1">](../../../docs/framework/ui-automation/caching-in-ui-automation-clients.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Property IDs</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Property <ph id="ph1">[!INCLUDE[TLA#tla_id#plural](../../../includes/tlasharptla-idsharpplural-md.md)]</ph> are unique, constant values that are encapsulated in <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationProperty&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>UI Automation client applications get these <ph id="ph1">[!INCLUDE[TLA2#tla_id#plural](../../../includes/tla2sharptla-idsharpplural-md.md)]</ph> from the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> class or from the appropriate control pattern class, such as <ph id="ph3">&lt;xref:System.Windows.Automation.ScrollPattern&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>UI Automation providers get them from <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementIdentifiers&gt;</ph> or from one of the control pattern identifiers classes, such as <ph id="ph2">&lt;xref:System.Windows.Automation.ScrollPatternIdentifiers&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The numeric <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationIdentifier.Id%2A&gt;</ph> of an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationProperty&gt;</ph> is used by providers to identify properties that are being queried for in the <ph id="ph3">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In general, client applications do not need to examine the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationIdentifier.Id%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationIdentifier.ProgrammaticName%2A&gt;</ph> is used only for debugging and diagnostic purposes.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Property Conditions</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property <ph id="ph1">[!INCLUDE[TLA2#tla_id#plural](../../../includes/tla2sharptla-idsharpplural-md.md)]</ph> are used in constructing <ph id="ph2">&lt;xref:System.Windows.Automation.PropertyCondition&gt;</ph> objects used to find <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, you might wish to find an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that has a certain name, or all controls that are enabled.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Automation.PropertyCondition&gt;</ph> specifies an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationProperty&gt;</ph> identifier and the value that the property must match.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see the following reference topics:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieving Properties</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Some properties of <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> and all properties of a control pattern class are exposed as nested properties of the <ph id="ph2">`Current`</ph> or <ph id="ph3">`Cached`</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> or control pattern object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In addition, any <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> or control pattern property, including a property that is not available in the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.Cached%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.Current%2A&gt;</ph> structure, can be retrieved by using one of the following methods:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These methods offer slightly better performance as well as access to the full range of properties.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following code example shows the two ways of retrieving a property on an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To retrieve properties of control patterns supported by the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>, you do not need to retrieve the control pattern object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Simply pass one of the pattern property identifiers to the method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following code example shows the two ways of retrieving a property on a control pattern.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Get`</ph> methods return an <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The application must cast the returned object to the proper type before using the value.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Default Property Values</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If a UI Automation provider does not implement a property, the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> system is able to supply a default value.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, if the provider for a control does not support the property identified by <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.HelpTextProperty&gt;</ph>, <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> returns an empty string.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Similarly, if the provider does not support the property identified by <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty&gt;</ph>, <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can change this behavior by using the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A?displayProperty=nameWithType&gt;</ph> method overloads.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you specify <ph id="ph1">`true`</ph> as the second parameter, <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> does not return a default value, but instead returns the special value <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.NotSupported&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example code attempts to retrieve a property from an element, and if the property is not supported, an application-defined value is used instead.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To discover what properties are supported by an element, use <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetSupportedProperties%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This returns an array of <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperty&gt;</ph> identifiers.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Property-changed Events</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When a property value on an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> or control pattern changes, an event is raised.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An application can subscribe to such events by calling <ph id="ph1">&lt;xref:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler%2A&gt;</ph>, supplying an array of <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationProperty&gt;</ph> identifiers as the last parameter in order to specify the properties of interest.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationPropertyChangedEventHandler&gt;</ph>, you can identify the property that has changed by checking the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationPropertyChangedEventArgs.Property%2A&gt;</ph> member of the event arguments.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The arguments also contain the old and new values of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> property that has changed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These values are of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> and must be cast to the correct type before being used.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Additional AutomationElement Properties</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.Current%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.Cached%2A&gt;</ph> property structures, <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> has the following properties, which are retrieved through simple property accessors.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A collection of child <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> objects that are in the cache.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> parent object that is in the cache.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>(Static property) The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that has the input focus.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(Static property) The root <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Caching in UI Automation Clients<ept id="p1">](../../../docs/framework/ui-automation/caching-in-ui-automation-clients.md)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Server-Side UI Automation Provider Implementation<ept id="p1">](../../../docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Subscribe to UI Automation Events<ept id="p1">](../../../docs/framework/ui-automation/subscribe-to-ui-automation-events.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>