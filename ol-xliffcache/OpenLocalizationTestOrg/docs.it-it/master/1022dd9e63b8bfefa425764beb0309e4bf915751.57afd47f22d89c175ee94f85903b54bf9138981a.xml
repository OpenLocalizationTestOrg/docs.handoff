{"content":"---\ntitle: \"ICorDebugMetaDataLocator::GetMetaData Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugMetaDataLocator.GetMetaData\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugMetaDataLocator::GetMetaData\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorDebugMetaDataLocator::GetMetaData method [.NET Framework debugging]\"\n  - \"GetMetaData method, ICorDebugMetaDataLocator interface [.NET Framework debugging]\"\nms.assetid: f9b0ff22-54db-45eb-9cc3-508000a3141d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugMetaDataLocator::GetMetaData Method\nAsks the debugger to return the full path to a module whose metadata is needed to complete an operation the debugger requested.  \n  \n## Syntax  \n  \n```  \nHRESULT GetMetaData(  \n      [in] LPCWSTR wszImagePath,  \n      [in] DWORD   dwImageTimeStamp,  \n      [in] DWORD   dwImageSize,  \n      [in] ULONG32 cchPathBuffer,  \n      [out] ULONG32 * pcchPathBuffer,  \n      [out, size_is(cchPathBuffer), length_is(*pcchPathBuffer)]  \n               WCHAR wszPathBuffer[]  \n      );  \n```  \n  \n#### Parameters  \n `wszImagePath`  \n [in] A null-terminated string that represents the full path to the file. If the full path is not available, the name and extension of the file (*filename*.*extension*).  \n  \n `dwImageTimeStamp`  \n [in] The time stamp from the image's PE file headers. This parameter can potentially be used for a symbol server ([SymSrv](http://msdn.microsoft.com/library/cc266470.aspx)) lookup.  \n  \n `dwImageSize`  \n [in] The image size from PE file headers. This parameter can potentially be used for a SymSrv lookup.  \n  \n `cchPathBuffer`  \n [in] The character count in `wszPathBuffer`.  \n  \n `pcchPathBuffer`  \n [out] The count of `WCHAR`s written to `wszPathBuffer`.  \n  \n If the method returns E_NOT_SUFFICIENT_BUFFER, contains the count of `WCHAR`s needed to store the path.  \n  \n `wszPathBuffer`  \n [out] Pointer to a buffer into which the debugger will copy the full path of the file that contains the requested metadata.  \n  \n The `ofReadOnly` flag from the [CorOpenFlags](../../../../docs/framework/unmanaged-api/metadata/coropenflags-enumeration.md) enumeration is used to request read-only access to the metadata in this file.  \n  \n## Return Value  \n This method returns the following specific HRESULTs as well as HRESULT errors that indicate method failure. All other failure HRESULTs indicate that the file is not retrievable.  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|The method completed successfully. `wszPathBuffer` contains the full path to the file and is null-terminated.|  \n|E_NOT_SUFFICIENT_BUFFER|The current size of `wszPathBuffer` is not sufficient to hold the full path. In this case, `pcchPathBuffer` contains the needed count of `WCHAR`s, including the terminating null character, and `GetMetaData` is called a second time with the requested buffer size.|  \n  \n## Remarks  \n If `wszImagePath` contains a full path for a module from a dump, it specifies the path from the computer where the dump was collected. The file may not exist at this location, or an incorrect file with the same name may be stored on the path.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See Also  \n [ICorDebugThread4 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugthread4-interface.md)   \n [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)   \n [Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)","nodes":[{"pos":[4,774],"nodes":[{"content":"ICorDebugMetaDataLocator::GetMetaData Method | Microsoft Docs","nodes":[{"pos":[0,61],"content":"ICorDebugMetaDataLocator::GetMetaData Method | Microsoft Docs","nodes":[{"content":"ICorDebugMetaDataLocator::GetMetaData Method | Microsoft Docs","pos":[0,61]}]}],"pos":[6,70],"yaml":true}],"content":"title: \"ICorDebugMetaDataLocator::GetMetaData Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugMetaDataLocator.GetMetaData\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugMetaDataLocator::GetMetaData\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorDebugMetaDataLocator::GetMetaData method [.NET Framework debugging]\"\n  - \"GetMetaData method, ICorDebugMetaDataLocator interface [.NET Framework debugging]\"\nms.assetid: f9b0ff22-54db-45eb-9cc3-508000a3141d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[781,825],"content":"ICorDebugMetaDataLocator::GetMetaData Method","linkify":"ICorDebugMetaDataLocator::GetMetaData Method","nodes":[{"content":"ICorDebugMetaDataLocator::GetMetaData Method","pos":[0,44]}]},{"content":"Asks the debugger to return the full path to a module whose metadata is needed to complete an operation the debugger requested.","pos":[826,953]},{"pos":[962,968],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1317,1327],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A null-terminated string that represents the full path to the file.","pos":[1349,1421]},{"content":"If the full path is not available, the name and extension of the file (<bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept>.<bpt id=\"p2\">*</bpt>extension<ept id=\"p2\">*</ept>).","pos":[1422,1517],"source":" If the full path is not available, the name and extension of the file (*filename*.*extension*)."},{"content":"[in] The time stamp from the image's PE file headers.","pos":[1546,1599]},{"content":"This parameter can potentially be used for a symbol server (<bpt id=\"p1\">[</bpt>SymSrv<ept id=\"p1\">](http://msdn.microsoft.com/library/cc266470.aspx)</ept>) lookup.","pos":[1600,1726],"source":" This parameter can potentially be used for a symbol server ([SymSrv](http://msdn.microsoft.com/library/cc266470.aspx)) lookup."},{"content":"[in] The image size from PE file headers.","pos":[1750,1791]},{"content":"This parameter can potentially be used for a SymSrv lookup.","pos":[1792,1851]},{"content":"[in] The character count in <ph id=\"ph1\">`wszPathBuffer`</ph>.","pos":[1877,1921],"source":"[in] The character count in `wszPathBuffer`."},{"content":"[out] The count of <ph id=\"ph1\">`WCHAR`</ph>s written to <ph id=\"ph2\">`wszPathBuffer`</ph>.","pos":[1948,2003],"source":"[out] The count of `WCHAR`s written to `wszPathBuffer`."},{"pos":[2010,2113],"content":"If the method returns E_NOT_SUFFICIENT_BUFFER, contains the count of <ph id=\"ph1\">`WCHAR`</ph>s needed to store the path.","source":"If the method returns E_NOT_SUFFICIENT_BUFFER, contains the count of `WCHAR`s needed to store the path."},{"content":"[out] Pointer to a buffer into which the debugger will copy the full path of the file that contains the requested metadata.","pos":[2139,2262]},{"pos":[2269,2471],"content":"The <ph id=\"ph1\">`ofReadOnly`</ph> flag from the <bpt id=\"p1\">[</bpt>CorOpenFlags<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/coropenflags-enumeration.md)</ept> enumeration is used to request read-only access to the metadata in this file.","source":"The `ofReadOnly` flag from the [CorOpenFlags](../../../../docs/framework/unmanaged-api/metadata/coropenflags-enumeration.md) enumeration is used to request read-only access to the metadata in this file."},{"pos":[2480,2492],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"This method returns the following specific HRESULTs as well as HRESULT errors that indicate method failure.","pos":[2496,2603]},{"content":"All other failure HRESULTs indicate that the file is not retrievable.","pos":[2604,2673]},{"content":"HRESULT","pos":[2680,2687]},{"content":"Description","pos":[2688,2699]},{"content":"S_OK","pos":[2740,2744]},{"content":"The method completed successfully.","pos":[2745,2779]},{"content":"<ph id=\"ph1\">`wszPathBuffer`</ph> contains the full path to the file and is null-terminated.","pos":[2780,2854],"source":"`wszPathBuffer` contains the full path to the file and is null-terminated."},{"content":"E_NOT_SUFFICIENT_BUFFER","pos":[2859,2882]},{"content":"The current size of <ph id=\"ph1\">`wszPathBuffer`</ph> is not sufficient to hold the full path.","pos":[2883,2959],"source":"The current size of `wszPathBuffer` is not sufficient to hold the full path."},{"content":"In this case, <ph id=\"ph1\">`pcchPathBuffer`</ph> contains the needed count of <ph id=\"ph2\">`WCHAR`</ph>s, including the terminating null character, and <ph id=\"ph3\">`GetMetaData`</ph> is called a second time with the requested buffer size.","pos":[2960,3145],"source":" In this case, `pcchPathBuffer` contains the needed count of `WCHAR`s, including the terminating null character, and `GetMetaData` is called a second time with the requested buffer size."},{"pos":[3155,3162],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`wszImagePath`</ph> contains a full path for a module from a dump, it specifies the path from the computer where the dump was collected.","pos":[3166,3300],"source":"If `wszImagePath` contains a full path for a module from a dump, it specifies the path from the computer where the dump was collected."},{"content":"The file may not exist at this location, or an incorrect file with the same name may be stored on the path.","pos":[3301,3408]},{"pos":[3417,3429],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3433,3537],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3544,3580],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[3587,3612],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3619,3727],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[3736,3744],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugThread4 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugthread4-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3748,3859],"source":"[ICorDebugThread4 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugthread4-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept><ph id=\"ph1\"> </ph>","pos":[3863,3962],"source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md) "},{"content":"<bpt id=\"p1\">[</bpt>Debugging<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept>","pos":[3966,4038],"source":"[Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)"}]}