<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-tree-from-an-xmlreader.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0826112821394ac6a81ba03e7803187aaec2796</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-create-a-tree-from-an-xmlreader.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a935704596788b1a5363943cf65807da35f093ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d7e741c0283434df9e761f888a0228f7f4935de</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a Tree from an XmlReader (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Tree from an XmlReader (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to create an XML tree directly from an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, you must position the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> on an element node.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> will skip comments and processing instructions, but if the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on a text node, an error will be thrown.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To avoid such errors, always position the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> on an element before you create an XML tree from the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Books (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following code creates an <ph id="ph1">`T:System.Xml.XmlReader`</ph> object, and then reads nodes until it finds the first element node.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It then loads the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>