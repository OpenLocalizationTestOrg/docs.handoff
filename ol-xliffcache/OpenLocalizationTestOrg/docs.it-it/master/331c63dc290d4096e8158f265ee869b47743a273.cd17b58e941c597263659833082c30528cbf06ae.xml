{"content":"---\ntitle: \"Protected Friend (Visual Basic)\"\nms.date: 05/10/2018\nhelpviewer_keywords: \n  - \"Protected Friend keyword [Visual Basic]\"\n  - \"Protected Friend keyword [Visual Basic], syntax\"\n---\n# Protected Friend (Visual Basic)\n\nThe `Protected Friend` keyword combination is a member access modifier. It confers both [Friend](friend.md) access and [Protected](protected.md) access on the declared elements, so they are accessible from anywhere in the same assembly, from their own class, and from derived classes. You can specify `Protected Friend` only on members of classes; you cannot apply `Protected Friend` to members of a structure because structures cannot be inherited.\n\n> [!NOTE]\n> In Visual Studio, selecting F1 help on `protected friend` provides help for either [protected](protected.md) or [friend](friend.md). The IDE picks the single token under the cursor rather than the compound word.\n\n## Rules\n\n- **Declaration Context.** You can use `Protected Friend` only at the class level. This means the declaration context for a `Protected` element must be a class, and cannot be a source file, namespace, interface, module, structure, or procedure. \n\n## See also\n\n- [Public](../../../visual-basic/language-reference/modifiers/public.md)\n- [Protected](../../../visual-basic/language-reference/modifiers/protected.md)\n- [Friend](friend.md)\n- [Private](../../../visual-basic/language-reference/modifiers/private.md)\n- [Private Protected](./private-protected.md)\n- [Access levels in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)\n- [Procedures](../../../visual-basic/programming-guide/language-features/procedures/index.md)\n- [Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)\n- [Objects and Classes](../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)\n","nodes":[{"pos":[4,186],"embed":true,"restype":"x-metadata","content":"title: \"Protected Friend (Visual Basic)\"\nms.date: 05/10/2018\nhelpviewer_keywords: \n  - \"Protected Friend keyword [Visual Basic]\"\n  - \"Protected Friend keyword [Visual Basic], syntax\"","nodes":[{"content":"Protected Friend (Visual Basic)","nodes":[{"pos":[0,31],"content":"Protected Friend (Visual Basic)","nodes":[{"content":"Protected Friend (Visual Basic)","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[193,224],"content":"Protected Friend (Visual Basic)","linkify":"Protected Friend (Visual Basic)","nodes":[{"content":"Protected Friend (Visual Basic)","pos":[0,31]}]},{"content":"The <ph id=\"ph1\">`Protected Friend`</ph> keyword combination is a member access modifier.","pos":[226,297],"source":"The `Protected Friend` keyword combination is a member access modifier."},{"content":"It confers both <bpt id=\"p1\">[</bpt>Friend<ept id=\"p1\">](friend.md)</ept> access and <bpt id=\"p2\">[</bpt>Protected<ept id=\"p2\">](protected.md)</ept> access on the declared elements, so they are accessible from anywhere in the same assembly, from their own class, and from derived classes.","pos":[298,510],"source":" It confers both [Friend](friend.md) access and [Protected](protected.md) access on the declared elements, so they are accessible from anywhere in the same assembly, from their own class, and from derived classes."},{"content":"You can specify <ph id=\"ph1\">`Protected Friend`</ph> only on members of classes; you cannot apply <ph id=\"ph2\">`Protected Friend`</ph> to members of a structure because structures cannot be inherited.","pos":[511,675],"source":" You can specify `Protected Friend` only on members of classes; you cannot apply `Protected Friend` to members of a structure because structures cannot be inherited."},{"pos":[679,900],"content":"[!NOTE]\nIn Visual Studio, selecting F1 help on `protected friend` provides help for either [protected](protected.md) or [friend](friend.md). The IDE picks the single token under the cursor rather than the compound word.","leadings":["","> "],"nodes":[{"content":"In Visual Studio, selecting F1 help on `protected friend` provides help for either [protected](protected.md) or [friend](friend.md). The IDE picks the single token under the cursor rather than the compound word.","pos":[8,219],"nodes":[{"content":"In Visual Studio, selecting F1 help on <ph id=\"ph1\">`protected friend`</ph> provides help for either <bpt id=\"p1\">[</bpt>protected<ept id=\"p1\">](protected.md)</ept> or <bpt id=\"p2\">[</bpt>friend<ept id=\"p2\">](friend.md)</ept>.","pos":[0,132],"source":"In Visual Studio, selecting F1 help on `protected friend` provides help for either [protected](protected.md) or [friend](friend.md)."},{"content":"The IDE picks the single token under the cursor rather than the compound word.","pos":[133,211]}]}]},{"pos":[905,910],"content":"Rules","linkify":"Rules","nodes":[{"content":"Rules","pos":[0,5]}]},{"content":"<bpt id=\"p1\">**</bpt>Declaration Context.<ept id=\"p1\">**</ept>","pos":[914,938],"source":"**Declaration Context.**"},{"content":"You can use <ph id=\"ph1\">`Protected Friend`</ph> only at the class level.","pos":[939,994],"source":" You can use `Protected Friend` only at the class level."},{"content":"This means the declaration context for a <ph id=\"ph1\">`Protected`</ph> element must be a class, and cannot be a source file, namespace, interface, module, structure, or procedure.","pos":[995,1156],"source":" This means the declaration context for a `Protected` element must be a class, and cannot be a source file, namespace, interface, module, structure, or procedure."},{"pos":[1162,1170],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1174,1244],"content":"<bpt id=\"p1\">[</bpt>Public<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/public.md)</ept>","source":"[Public](../../../visual-basic/language-reference/modifiers/public.md)"},{"pos":[1247,1323],"content":"<bpt id=\"p1\">[</bpt>Protected<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>","source":"[Protected](../../../visual-basic/language-reference/modifiers/protected.md)"},{"pos":[1326,1345],"content":"<bpt id=\"p1\">[</bpt>Friend<ept id=\"p1\">](friend.md)</ept>","source":"[Friend](friend.md)"},{"pos":[1348,1420],"content":"<bpt id=\"p1\">[</bpt>Private<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/private.md)</ept>","source":"[Private](../../../visual-basic/language-reference/modifiers/private.md)"},{"pos":[1423,1466],"content":"<bpt id=\"p1\">[</bpt>Private Protected<ept id=\"p1\">](./private-protected.md)</ept>","source":"[Private Protected](./private-protected.md)"},{"pos":[1469,1594],"content":"<bpt id=\"p1\">[</bpt>Access levels in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>","source":"[Access levels in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)"},{"pos":[1597,1688],"content":"<bpt id=\"p1\">[</bpt>Procedures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/index.md)</ept>","source":"[Procedures](../../../visual-basic/programming-guide/language-features/procedures/index.md)"},{"pos":[1691,1787],"content":"<bpt id=\"p1\">[</bpt>Structures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept>","source":"[Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)"},{"pos":[1790,1899],"content":"<bpt id=\"p1\">[</bpt>Objects and Classes<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept>","source":"[Objects and Classes](../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)"}]}