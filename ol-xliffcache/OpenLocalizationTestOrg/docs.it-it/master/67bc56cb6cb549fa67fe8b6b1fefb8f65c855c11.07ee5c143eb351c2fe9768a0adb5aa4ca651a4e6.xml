{"content":"---\ntitle: \"Context Exchange Correlation | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 1e2852be-3601-45ae-b507-ccc465d45c60\ncaps.latest.revision: 18\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Context Exchange Correlation\nContext correlation is based on the context exchange mechanism described in the [.NET Context Exchange Protocol Specification](http://go.microsoft.com/fwlink/?LinkId=166059). Context correlation uses a well-known context header or cookie to relate messages to the correct instance. To use context correlation, a context-based binding such as <xref:System.ServiceModel.BasicHttpContextBinding>, <xref:System.ServiceModel.WSHttpContextBinding>, or <xref:System.ServiceModel.NetTcpContextBinding> must be used on the endpoint provided to the <xref:System.ServiceModel.Activities.WorkflowServiceHost>. This topic explains how to use context correlation with messaging activities in a workflow service.  \n  \n## Using Context Correlation  \n Context correlation is used when a client must make repeated calls into a workflow service and the service is hosted using one of the context bindings. This type of correlation is initialized by a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair in the workflow service. The context is sent back to the client together with the reply, and then the client attaches this context on subsequent calls to the service.  \n  \n### Configuring Context Correlation in a Workflow Service  \n Context correlation is initialized by using a <xref:System.ServiceModel.Activities.ContextCorrelationInitializer> that is associated with the <xref:System.ServiceModel.Activities.SendReply> activity that replies to the initial incoming message. In the following example, the <xref:System.ServiceModel.Activities.SendReply> is configured to initialize a context correlation.  \n  \n```csharp  \nVariable<string> Item = new Variable<string>();  \nVariable<CorrelationHandle> OrderHandle = new Variable<CorrelationHandle>();  \n  \nReceive StartOrder = new Receive  \n{  \n    CanCreateInstance = true,  \n    ServiceContractName = \"IOrderService\",  \n    OperationName = \"StartOrder\"  \n};  \n  \nSendReply ReplyToStartOrder = new SendReply  \n{  \n    Request = StartOrder,  \n    CorrelationInitializers =  \n    {  \n        new ContextCorrelationInitializer  \n        {  \n            CorrelationHandle = OrderHandle  \n        }  \n    }  \n};  \n```  \n  \n> [!NOTE]\n>  In this example, there are actually two types of correlation being used: context correlation and request-reply correlation. The context correlation is used so that calls from clients are routed to the correct instance. The request-reply correlation is used by the <xref:System.ServiceModel.Activities.Receive> and the <xref:System.ServiceModel.Activities.SendReply> activities together to implement the two-way operation modeled by these activities. In this example, only the context correlation is explicitly configured, and the <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is using the default request-reply correlation that is provided by the implicit <xref:System.ServiceModel.Activities.CorrelationHandle> management of <xref:System.ServiceModel.Activities.WorkflowServiceHost>. When using the **ReceiveAndSendReply** activity template in the workflow designer, request-reply correlation is explicitly configured. [!INCLUDE[crabout](../../../../includes/crabout-md.md)]request-reply correlation and implicit correlation handle management, see [Request-Reply](../../../../docs/framework/wcf/feature-details/request-reply-correlation.md) and [Correlation Overview](../../../../docs/framework/wcf/feature-details/correlation-overview.md). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] the **ReceiveAndSendReply** activity template, see [ReceiveAndSendReply](/visualstudio/workflow-designer/receiveandsendreply-template-designer).  \n  \n Subsequent <xref:System.ServiceModel.Activities.Receive> activities in the workflow service can reference the <xref:System.ServiceModel.Activities.CorrelationHandle> that was initialized by the <xref:System.ServiceModel.Activities.SendReply> in the previous example.  \n  \n```csharp  \nReceive AddItem = new Receive  \n{  \n    ServiceContractName = \"IOrderService\",  \n    OperationName = \"AddItem\",  \n    CorrelatesWith = OrderHandle  \n};  \n```  \n  \n The endpoint is then configured on the <xref:System.ServiceModel.Activities.WorkflowServiceHost> to use a context-based binding, such as <xref:System.ServiceModel.BasicHttpContextBinding>.  \n  \n```xml  \n<endpoint  \n  contract=\"IOrderContract\"  \n  binding = \"basicHttpContextBinding\"  \n  address=\"http://localhost:8080/OrderService\" />  \n```  \n  \n### Configuring Context Correlation in a Workflow Client  \n When the client is another workflow, context correlation must be configured on the client as well. On the client workflow, the <xref:System.ServiceModel.Activities.ReceiveReply> of the <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair that makes the initial call to the workflow service must be configured with a <xref:System.ServiceModel.Activities.ContextCorrelationInitializer>.  \n  \n```csharp  \nVariable<CorrelationHandle> cchandle = new Variable<CorrelationHandle>();  \nSend request = new Send  \n{  \n    // Activity configuration omitted.  \n};  \n  \nReceiveReply reply = new ReceiveReply  \n{  \n    Request = request,  \n    CorrelationInitializers =   \n    {  \n        new ContextCorrelationInitializer  \n        {  \n            CorrelationHandle = cchandle  \n        }  \n    }  \n};  \n```  \n  \n After the correlation is initialized, subsequent <xref:System.ServiceModel.Activities.Send> activities can use the <xref:System.ServiceModel.Activities.CorrelationHandle> to invoke methods on the same service instance.  \n  \n```csharp  \nSend request2 = new Send  \n{  \n    CorrelatesWith = cchandle,  \n    // Remaining activity configuration omitted.  \n};  \n```  \n  \n Note that in these examples, the context correlation has been explicitly configured. If the client workflow is not also hosted in a <xref:System.ServiceModel.Activities.WorkflowServiceHost>, then correlation must be explicitly configured, unless the activities are contained within a <xref:System.ServiceModel.Activities.CorrelationScope> activity. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] context correlation, see the [NetContextExchangeCorrelation](http://msdn.microsoft.com/en-us/93c74a1a-b9e2-46c6-95c0-c9b0e9472caf) sample.  \n  \n If the client that is making calls to the workflow service is not a workflow, then it can still make repeated calls as long as it explicitly passes back the context that is returned from the first call to the workflow service. Proxies generated by adding a service reference in [!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)] store and pass this context by default.","nodes":[{"pos":[12,57],"content":"Context Exchange Correlation | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Context Exchange Correlation | Microsoft Docs","pos":[0,45]}]},{"pos":[356,384],"content":"Context Exchange Correlation","linkify":"Context Exchange Correlation","nodes":[{"content":"Context Exchange Correlation","pos":[0,28]}]},{"content":"Context correlation is based on the context exchange mechanism described in the <bpt id=\"p1\">[</bpt>.NET Context Exchange Protocol Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=166059)</ept>.","pos":[385,559],"source":"Context correlation is based on the context exchange mechanism described in the [.NET Context Exchange Protocol Specification](http://go.microsoft.com/fwlink/?LinkId=166059)."},{"content":"Context correlation uses a well-known context header or cookie to relate messages to the correct instance.","pos":[560,666]},{"content":"To use context correlation, a context-based binding such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpContextBinding&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.WSHttpContextBinding&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.ServiceModel.NetTcpContextBinding&gt;</ph> must be used on the endpoint provided to the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>.","pos":[667,982],"source":" To use context correlation, a context-based binding such as <xref:System.ServiceModel.BasicHttpContextBinding>, <xref:System.ServiceModel.WSHttpContextBinding>, or <xref:System.ServiceModel.NetTcpContextBinding> must be used on the endpoint provided to the <xref:System.ServiceModel.Activities.WorkflowServiceHost>."},{"content":"This topic explains how to use context correlation with messaging activities in a workflow service.","pos":[983,1082]},{"pos":[1091,1116],"content":"Using Context Correlation","linkify":"Using Context Correlation","nodes":[{"content":"Using Context Correlation","pos":[0,25]}]},{"content":"Context correlation is used when a client must make repeated calls into a workflow service and the service is hosted using one of the context bindings.","pos":[1120,1271]},{"content":"This type of correlation is initialized by a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair in the workflow service.","pos":[1272,1440],"source":" This type of correlation is initialized by a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair in the workflow service."},{"content":"The context is sent back to the client together with the reply, and then the client attaches this context on subsequent calls to the service.","pos":[1441,1582]},{"pos":[1592,1645],"content":"Configuring Context Correlation in a Workflow Service","linkify":"Configuring Context Correlation in a Workflow Service","nodes":[{"content":"Configuring Context Correlation in a Workflow Service","pos":[0,53]}]},{"content":"Context correlation is initialized by using a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.ContextCorrelationInitializer&gt;</ph> that is associated with the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> activity that replies to the initial incoming message.","pos":[1649,1893],"source":"Context correlation is initialized by using a <xref:System.ServiceModel.Activities.ContextCorrelationInitializer> that is associated with the <xref:System.ServiceModel.Activities.SendReply> activity that replies to the initial incoming message."},{"content":"In the following example, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> is configured to initialize a context correlation.","pos":[1894,2022],"source":" In the following example, the <xref:System.ServiceModel.Activities.SendReply> is configured to initialize a context correlation."},{"pos":[2587,4093],"content":"[!NOTE]\n In this example, there are actually two types of correlation being used: context correlation and request-reply correlation. The context correlation is used so that calls from clients are routed to the correct instance. The request-reply correlation is used by the <xref:System.ServiceModel.Activities.Receive> and the <xref:System.ServiceModel.Activities.SendReply> activities together to implement the two-way operation modeled by these activities. In this example, only the context correlation is explicitly configured, and the <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is using the default request-reply correlation that is provided by the implicit <xref:System.ServiceModel.Activities.CorrelationHandle> management of <xref:System.ServiceModel.Activities.WorkflowServiceHost>. When using the **ReceiveAndSendReply** activity template in the workflow designer, request-reply correlation is explicitly configured. [!INCLUDE[crabout](../../../../includes/crabout-md.md)]request-reply correlation and implicit correlation handle management, see [Request-Reply](../../../../docs/framework/wcf/feature-details/request-reply-correlation.md) and [Correlation Overview](../../../../docs/framework/wcf/feature-details/correlation-overview.md). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] the **ReceiveAndSendReply** activity template, see [ReceiveAndSendReply](/visualstudio/workflow-designer/receiveandsendreply-template-designer).","leadings":["","> "],"nodes":[{"content":" In this example, there are actually two types of correlation being used: context correlation and request-reply correlation. The context correlation is used so that calls from clients are routed to the correct instance. The request-reply correlation is used by the <xref:System.ServiceModel.Activities.Receive> and the <xref:System.ServiceModel.Activities.SendReply> activities together to implement the two-way operation modeled by these activities. In this example, only the context correlation is explicitly configured, and the <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is using the default request-reply correlation that is provided by the implicit <xref:System.ServiceModel.Activities.CorrelationHandle> management of <xref:System.ServiceModel.Activities.WorkflowServiceHost>. When using the **ReceiveAndSendReply** activity template in the workflow designer, request-reply correlation is explicitly configured. [!INCLUDE[crabout](../../../../includes/crabout-md.md)]request-reply correlation and implicit correlation handle management, see [Request-Reply](../../../../docs/framework/wcf/feature-details/request-reply-correlation.md) and [Correlation Overview](../../../../docs/framework/wcf/feature-details/correlation-overview.md). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] the **ReceiveAndSendReply** activity template, see [ReceiveAndSendReply](/visualstudio/workflow-designer/receiveandsendreply-template-designer).","pos":[8,1504],"nodes":[{"content":"In this example, there are actually two types of correlation being used: context correlation and request-reply correlation.","pos":[1,124]},{"content":"The context correlation is used so that calls from clients are routed to the correct instance.","pos":[125,219]},{"content":"The request-reply correlation is used by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> activities together to implement the two-way operation modeled by these activities.","pos":[220,450],"source":" The request-reply correlation is used by the <xref:System.ServiceModel.Activities.Receive> and the <xref:System.ServiceModel.Activities.SendReply> activities together to implement the two-way operation modeled by these activities."},{"content":"In this example, only the context correlation is explicitly configured, and the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair is using the default request-reply correlation that is provided by the implicit <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.CorrelationHandle&gt;</ph> management of <ph id=\"ph5\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>.","pos":[451,838],"source":" In this example, only the context correlation is explicitly configured, and the <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is using the default request-reply correlation that is provided by the implicit <xref:System.ServiceModel.Activities.CorrelationHandle> management of <xref:System.ServiceModel.Activities.WorkflowServiceHost>."},{"content":"When using the <bpt id=\"p1\">**</bpt>ReceiveAndSendReply<ept id=\"p1\">**</ept> activity template in the workflow designer, request-reply correlation is explicitly configured.","pos":[839,973],"source":" When using the **ReceiveAndSendReply** activity template in the workflow designer, request-reply correlation is explicitly configured."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph>request-reply correlation and implicit correlation handle management, see <bpt id=\"p1\">[</bpt>Request-Reply<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/request-reply-correlation.md)</ept> and <bpt id=\"p2\">[</bpt>Correlation Overview<ept id=\"p2\">](../../../../docs/framework/wcf/feature-details/correlation-overview.md)</ept>.","pos":[974,1295],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)]request-reply correlation and implicit correlation handle management, see [Request-Reply](../../../../docs/framework/wcf/feature-details/request-reply-correlation.md) and [Correlation Overview](../../../../docs/framework/wcf/feature-details/correlation-overview.md)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> the <bpt id=\"p1\">**</bpt>ReceiveAndSendReply<ept id=\"p1\">**</ept> activity template, see <bpt id=\"p2\">[</bpt>ReceiveAndSendReply<ept id=\"p2\">](/visualstudio/workflow-designer/receiveandsendreply-template-designer)</ept>.","pos":[1296,1496],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] the **ReceiveAndSendReply** activity template, see [ReceiveAndSendReply](/visualstudio/workflow-designer/receiveandsendreply-template-designer)."}]}]},{"content":"Subsequent <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activities in the workflow service can reference the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.CorrelationHandle&gt;</ph> that was initialized by the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> in the previous example.","pos":[4100,4366],"source":"Subsequent <xref:System.ServiceModel.Activities.Receive> activities in the workflow service can reference the <xref:System.ServiceModel.Activities.CorrelationHandle> that was initialized by the <xref:System.ServiceModel.Activities.SendReply> in the previous example."},{"content":"The endpoint is then configured on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> to use a context-based binding, such as <ph id=\"ph2\">&lt;xref:System.ServiceModel.BasicHttpContextBinding&gt;</ph>.","pos":[4548,4736],"source":"The endpoint is then configured on the <xref:System.ServiceModel.Activities.WorkflowServiceHost> to use a context-based binding, such as <xref:System.ServiceModel.BasicHttpContextBinding>."},{"pos":[4898,4950],"content":"Configuring Context Correlation in a Workflow Client","linkify":"Configuring Context Correlation in a Workflow Client","nodes":[{"content":"Configuring Context Correlation in a Workflow Client","pos":[0,52]}]},{"content":"When the client is another workflow, context correlation must be configured on the client as well.","pos":[4954,5052]},{"content":"On the client workflow, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> pair that makes the initial call to the workflow service must be configured with a <ph id=\"ph5\">&lt;xref:System.ServiceModel.Activities.ContextCorrelationInitializer&gt;</ph>.","pos":[5053,5384],"source":" On the client workflow, the <xref:System.ServiceModel.Activities.ReceiveReply> of the <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair that makes the initial call to the workflow service must be configured with a <xref:System.ServiceModel.Activities.ContextCorrelationInitializer>."},{"content":"After the correlation is initialized, subsequent <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph> activities can use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.CorrelationHandle&gt;</ph> to invoke methods on the same service instance.","pos":[5801,6019],"source":"After the correlation is initialized, subsequent <xref:System.ServiceModel.Activities.Send> activities can use the <xref:System.ServiceModel.Activities.CorrelationHandle> to invoke methods on the same service instance."},{"content":"Note that in these examples, the context correlation has been explicitly configured.","pos":[6167,6251]},{"content":"If the client workflow is not also hosted in a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>, then correlation must be explicitly configured, unless the activities are contained within a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph> activity.","pos":[6252,6515],"source":" If the client workflow is not also hosted in a <xref:System.ServiceModel.Activities.WorkflowServiceHost>, then correlation must be explicitly configured, unless the activities are contained within a <xref:System.ServiceModel.Activities.CorrelationScope> activity."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> context correlation, see the <bpt id=\"p1\">[</bpt>NetContextExchangeCorrelation<ept id=\"p1\">](http://msdn.microsoft.com/en-us/93c74a1a-b9e2-46c6-95c0-c9b0e9472caf)</ept> sample.","pos":[6516,6710],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] context correlation, see the [NetContextExchangeCorrelation](http://msdn.microsoft.com/en-us/93c74a1a-b9e2-46c6-95c0-c9b0e9472caf) sample."},{"content":"If the client that is making calls to the workflow service is not a workflow, then it can still make repeated calls as long as it explicitly passes back the context that is returned from the first call to the workflow service.","pos":[6717,6943]},{"content":"Proxies generated by adding a service reference in <ph id=\"ph1\">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> store and pass this context by default.","pos":[6944,7106],"source":" Proxies generated by adding a service reference in [!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)] store and pass this context by default."}]}