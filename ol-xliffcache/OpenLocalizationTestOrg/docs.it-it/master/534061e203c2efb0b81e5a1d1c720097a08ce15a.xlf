<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="message-security-anonymous.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">534061e203c2efb0b81e5a1d1c720097a08ce15a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\message-security-anonymous.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3309c9fbda951bf699062cc0709fec44d414e66c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">154acd3a6ddfa4e6282e796ab75b7a63811b6f01</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Message Security Anonymous</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Message Security Anonymous</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Message Security Anonymous sample demonstrates how to implement a Windows Communication Foundation (WCF) application that uses message-level security with no client authentication but that requires server authentication using the server's X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>All application messages between the client and server are signed and encrypted.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This sample is based on the <bpt id="p1">[</bpt>WSHttpBinding<ept id="p1">](../../../../docs/framework/wcf/samples/wshttpbinding.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This sample consists of a client console program (.exe) and a service library (.dll) hosted by Internet Information Services (IIS).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The service implements a contract that defines a request-reply communication pattern.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The setup procedure and build instructions for this sample are located at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This sample adds a new operation to the calculator interface that returns <ph id="ph1">`True`</ph> if the client was not authenticated.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The service exposes a single endpoint for communicating with the service, defined using a configuration file (Web.config).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The endpoint consists of an address, a binding, and a contract.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The binding is configured with a <ph id="ph1">`wsHttpBinding`</ph> binding.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default security mode for the <ph id="ph1">`wsHttpBinding`</ph> binding is <ph id="ph2">`Message`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`clientCredentialType`</ph> attribute is set to <ph id="ph2">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The credentials to be used for service authentication are specified in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behavior&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The server certificate must contain the same value for the <ph id="ph1">`SubjectName`</ph> as the value specified for the <ph id="ph2">`findValue`</ph> attribute as shown in the following sample code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The client endpoint configuration consists of an absolute address for the service endpoint, the binding, and the contract.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The client security mode for the <ph id="ph1">`wsHttpBinding`</ph> binding is <ph id="ph2">`Message`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`clientCredentialType`</ph> attribute is set to <ph id="ph2">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The sample sets the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust&gt;</ph> for authenticating the service's certificate.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is done in the client's App.config file in the <ph id="ph1">`behaviors`</ph> section.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This means that if the certificate is in the user's Trusted People store, then it is trusted without performing a validation of the certificate's issuer chain.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This setting is used here for convenience so that the sample can be run without requiring certificates issued by a certification authority (CA).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This setting is less secure than the default, ChainTrust.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The security implications of this setting should be carefully considered before using <ph id="ph1">`PeerOrChainTrust`</ph> in production code.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The client implementation adds a call to the <ph id="ph1">`IsCallerAnonymous`</ph> method and otherwise does not differ from the <bpt id="p1">[</bpt>WSHttpBinding<ept id="p1">](../../../../docs/framework/wcf/samples/wshttpbinding.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you run the sample, the operation requests and responses are displayed in the client console window.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Press ENTER in the client window to shut down the client.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Setup.bat batch file included with the Message Security Anonymous sample enables you to configure the server with a relevant certificate to run a hosted application that requires certificate-based security.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The batch file can be run in two modes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To run the batch file in the single-computer mode, type <ph id="ph1">`setup.bat`</ph> at the command line.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To run it in service mode, type <ph id="ph1">`setup.bat service`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use this mode when running the sample across computers.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See the setup procedure at the end of this topic for details.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following provides a brief overview of the different sections of the batch files:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creating the server certificate.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following lines from the Setup.bat batch file create the server certificate to be used.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The %SERVER_NAME% variable specifies the server name.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The certificate is stored in the LocalMachine store.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the setup batch file is run with an argument of service (such as <ph id="ph1">`setup.bat service`</ph>) the %SERVER_NAME% contains the fully-qualified domain name of the computer.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Otherwise it defaults to localhost.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Installing the server certificate into the client's trusted certificate store.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following line copies the server certificate into the client trusted people store.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This step is required because certificates generated by Makecert.exe are not implicitly trusted by the client system.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you already have a certificate that is rooted in a client trusted root certificate—for example, a Microsoft-issued certificate—this step of populating the client certificate store with the server certificate is not required.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Granting permissions on the certificate's private key.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following lines in the Setup.bat batch file make the server certificate stored in the LocalMachine store accessible to the <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> worker process account.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you are using a non-U.S. English edition of Windows you must edit the Setup.bat file and replace the <ph id="ph1">`NT AUTHORITY\NETWORK SERVICE`</ph> account name with your regional equivalent.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Ensure that you have performed the <bpt id="p1">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id="p1">[</bpt>Building the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To run the sample on the same computer</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Ensure that the path includes the folder where Makecert.exe and FindPrivateKey.exe are located.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Run Setup.bat from the sample install folder in a Developer Command Prompt for Visual Studio run with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This installs all the certificates required for running the sample.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The setup batch file is designed to be run from a  Developer Command Prompt for Visual Studio.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It requires that the path environment variable point to the directory where the SDK is installed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This environment variable is automatically set within a Developer Command Prompt for Visual Studio.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Verify access to the service using a browser by entering the address <ph id="ph1">`http://localhost/servicemodelsamples/service.svc`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Launch Client.exe from \client\bin.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Client activity is displayed on the client console application.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the client and service are not able to communicate, see <bpt id="p1">[</bpt>Troubleshooting Tips for WCF Samples<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms751511(v=vs.90))</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To run the sample across computers</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create a directory on the service computer.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Create a virtual application named servicemodelsamples for this directory by using the Internet Information Services (IIS) management tool.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Copy the service program files from \inetpub\wwwroot\servicemodelsamples to the virtual directory on the service computer.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Ensure that you copy the files in the \bin subdirectory.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Also copy the Setup.bat and Cleanup.bat files to the service computer.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Create a directory on the client computer for the client binaries.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Copy the client program files to the client directory on the client computer.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Also copy the Setup.bat, Cleanup.bat, and ImportServiceCert.bat files to the client.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>On the server, run <ph id="ph1">`setup.bat service`</ph> in a Developer Command Prompt for Visual Studio opened with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Running <ph id="ph1">`setup.bat`</ph> with the <ph id="ph2">`service`</ph> argument creates a service certificate with the fully-qualified domain name of the computer and exports the service certificate to a file named Service.cer.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Edit Web.config to reflect the new certificate name (in the <ph id="ph1">`findValue`</ph> attribute in the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>serviceCertificate&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/servicecertificate-of-servicecredentials.md)</ept>), which is the same as the fully-qualified domain name of the computer.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Copy the Service.cer file from the service directory to the client directory on the client computer.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the Client.exe.config file on the client computer, change the address value of the endpoint to match the new address of your service.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>On the client, run ImportServiceCert.bat in a Developer Command Prompt for Visual Studio opened with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This imports the service certificate from the Service.cer file into the CurrentUser - TrustedPeople store.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>On the client computer, launch Client.exe from a command prompt.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the client and service are not able to communicate, see <bpt id="p1">[</bpt>Troubleshooting Tips for WCF Samples<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms751511(v=vs.90))</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To clean up after the sample</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Run Cleanup.bat in the samples folder after you have finished running the sample.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This script does not remove service certificates on a client when running this sample across computers.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you have run Windows Communication Foundation (WCF) samples that use certificates across computers, be sure to clear the service certificates that have been installed in the CurrentUser - TrustedPeople store.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To do this, use the following command: <ph id="ph1">`certmgr -del -r CurrentUser -s TrustedPeople -c -n &lt;Fully Qualified Server Machine Name&gt;`</ph> For example: <ph id="ph2">`certmgr -del -r CurrentUser -s TrustedPeople -c -n server1.contoso.com.`</ph></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>