<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="expressions.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7643279c2db5608c028e0a1213802ab609a2d347</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b0fcd5a97616391fa6e8fe2981e816fbb2f6812</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">498e1aee4dd0a5fa163b4903900879cf4f92765c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Expressions1</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Expressions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A Windows Workflow Foundation (WF) expression is any activity that returns a result.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>All expression activities derive indirectly from <ph id="ph1">&lt;xref:System.Activities.Activity%601&gt;</ph>, which contains an <ph id="ph2">&lt;xref:System.Activities.OutArgument&gt;</ph> property named <ph id="ph3">&lt;xref:System.Activities.Activity%601.Result%2A&gt;</ph> as the activityâ€™s return value.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[wf1](../../../includes/wf1-md.md)]</ph> ships with a wide range of expression activities from simple ones like <ph id="ph2">&lt;xref:System.Activities.Expressions.VariableValue%601&gt;</ph> and <ph id="ph3">&lt;xref:System.Activities.Expressions.VariableReference%601&gt;</ph>, which provide access to single workflow variable through operator activities, to complex activities such as <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> and <ph id="ph5">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601&gt;</ph> that offer access to the full breadth of Visual Basic language to produce the result.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Additional expression activities can be created by deriving from <ph id="ph1">&lt;xref:System.Activities.CodeActivity%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using Expressions</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Workflow designer uses <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> for all expressions in Visual Basic projects, and <ph id="ph3">&lt;xref:Microsoft.CSharp.Activities.CSharpValue%601&gt;</ph> and <ph id="ph4">&lt;xref:Microsoft.CSharp.Activities.CSharpReference%601&gt;</ph> for expressions in C# workflow projects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Support for C# expressions in workflow projects was introduced in <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>C# Expressions<ept id="p1">](csharp-expressions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Workflows produced by designer are saved in XAML, where expressions appear enclosed in square brackets, as in the following example.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When defining a workflow in code, any expression activities can be used.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example shows the usage of a composition of operator activities to add three numbers.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The same workflow can be expressed more compactly by using C# lambda expressions, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The workflow can also be expressed by using Visual Basic expression activities, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Extending Available Expressions with Custom Expression Activities</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Expressions in <ph id="ph1">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph> are extensible allowing for additional expression activities to be created.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example shows an activity that returns a sum of three integer values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>With this new activity you can rewrite the previous workflow that added three values as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about using expressions in code, see <bpt id="p1">[</bpt>Authoring Workflows, Activities, and Expressions Using Imperative Code<ept id="p1">](authoring-workflows-activities-and-expressions-using-imperative-code.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>