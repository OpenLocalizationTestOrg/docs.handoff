{"content":"---\ntitle: \"How to: Position the Child Elements of a Grid\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Grid control [WPF], positioning child elements\"\nms.assetid: 27b3ba9b-ad32-44e2-bcab-a79d573a463c\n---\n# How to: Position the Child Elements of a Grid\nThis example shows how to use the get and set methods that are defined on <xref:System.Windows.Controls.Grid> to position child elements.  \n  \n## Example  \n The following example defines a parent <xref:System.Windows.Controls.Grid> element (`grid1`) that has three columns and three rows. A child <xref:System.Windows.Shapes.Rectangle> element (`rect1`) is added to the <xref:System.Windows.Controls.Grid> in column position zero, row position zero. <xref:System.Windows.Controls.Button> elements represent methods that can be called to reposition the <xref:System.Windows.Shapes.Rectangle> element within the <xref:System.Windows.Controls.Grid>. When a user clicks a button, the related method is activated.  \n  \n [!code-xaml[gridGetSetMethods](~/samples/snippets/csharp/VS_Snippets_Wpf/gridGetSetMethods/CSharp/Window1.xaml)]  \n  \n The following code-behind example handles the methods that the button <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events raise. The example writes these method calls to <xref:System.Windows.Controls.TextBlock> elements that use related get methods to output the new property values as strings.  \n  \n [!code-csharp[gridGetSetMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/gridGetSetMethods/CSharp/Window1.xaml.cs#2)]\n [!code-vb[gridGetSetMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/gridGetSetMethods/VisualBasic/Window1.xaml.vb#2)]  \n Here is the finished result!\n \n ![a screenshot depicts a WPF user interface with two columns, the right side has a 3 x 3 grid and the left has buttons to move a colored rectangle between the columns and rows of the grid](././media/grid-methods-sample.png) \n  \n## See also\n\n- <xref:System.Windows.Controls.Grid>\n- [Panels Overview](panels-overview.md)\n","nodes":[{"pos":[4,238],"embed":true,"restype":"x-metadata","content":"title: \"How to: Position the Child Elements of a Grid\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"Grid control [WPF], positioning child elements\"\nms.assetid: 27b3ba9b-ad32-44e2-bcab-a79d573a463c","nodes":[{"content":"How to: Position the Child Elements of a Grid","nodes":[{"pos":[0,45],"content":"How to: Position the Child Elements of a Grid","nodes":[{"content":"How to: Position the Child Elements of a Grid","pos":[0,45]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[245,290],"content":"How to: Position the Child Elements of a Grid","linkify":"How to: Position the Child Elements of a Grid","nodes":[{"content":"How to: Position the Child Elements of a Grid","pos":[0,45]}]},{"pos":[291,428],"content":"This example shows how to use the get and set methods that are defined on <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to position child elements.","source":"This example shows how to use the get and set methods that are defined on <xref:System.Windows.Controls.Grid> to position child elements."},{"pos":[437,444],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example defines a parent <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element (<ph id=\"ph2\">`grid1`</ph>) that has three columns and three rows.","pos":[448,579],"source":"The following example defines a parent <xref:System.Windows.Controls.Grid> element (`grid1`) that has three columns and three rows."},{"content":"A child <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> element (<ph id=\"ph2\">`rect1`</ph>) is added to the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> in column position zero, row position zero.","pos":[580,740],"source":" A child <xref:System.Windows.Shapes.Rectangle> element (`rect1`) is added to the <xref:System.Windows.Controls.Grid> in column position zero, row position zero."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements represent methods that can be called to reposition the <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> element within the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.","pos":[741,937],"source":"<xref:System.Windows.Controls.Button> elements represent methods that can be called to reposition the <xref:System.Windows.Shapes.Rectangle> element within the <xref:System.Windows.Controls.Grid>."},{"content":"When a user clicks a button, the related method is activated.","pos":[938,999]},{"content":"The following code-behind example handles the methods that the button <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> events raise.","pos":[1125,1267],"source":"The following code-behind example handles the methods that the button <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events raise."},{"content":"The example writes these method calls to <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements that use related get methods to output the new property values as strings.","pos":[1268,1433],"source":" The example writes these method calls to <xref:System.Windows.Controls.TextBlock> elements that use related get methods to output the new property values as strings."},{"content":"Here is the finished result!","pos":[1694,1722]},{"content":"a screenshot depicts a WPF user interface with two columns, the right side has a 3 x 3 grid and the left has buttons to move a colored rectangle between the columns and rows of the grid","pos":[1728,1913]},{"pos":[1957,1965],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2007,2044],"content":"<bpt id=\"p1\">[</bpt>Panels Overview<ept id=\"p1\">](panels-overview.md)</ept>","source":"[Panels Overview](panels-overview.md)"}]}