{"content":"---\ntitle: \"Security Concerns for Message Logging | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 21f513f2-815b-47f3-85a6-03c008510038\ncaps.latest.revision: 17\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"\n---\n# Security Concerns for Message Logging\nThis topic describes how you can protect sensitive data from being exposed in message logs, as well as events generated by message logging.  \n  \n## Security Concerns  \n  \n### Logging Sensitive Information  \n [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] does not modify any data in application-specific headers and body. [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] also does not track personal information in application-specific headers or body data.  \n  \n When message logging is enabled, personal information in application-specific headers, such as, a query string; and body information, such as, a credit card number, can become visible in the logs. The application deployer is responsible for enforcing access control on the configuration and log files. If you do not want this kind of information to be visible, you should disable logging, or filter out part of the data if you want to share the logs.  \n  \n The following tips can help you to prevent the content of a log file from being exposed unintentionally:  \n  \n-   Ensure that the log files are protected by Access Control Lists (ACL) both in Web-host and self-host scenarios.  \n  \n-   Choose a file extension that cannot be easily served using a Web request. For example, the .xml file extension is not a safe choice. You can check the Internet Information Services (IIS) administration guide to see a list of extensions that can be served.  \n  \n-   Specify an absolute path for the log file location, which should be outside of the Web host vroot public directory to prevent it from being accessed by an external party using a Web browser.  \n  \n By default, keys and personally identifiable information (PII) such as username and password are not logged in traces and logged messages. A machine administrator, however, can use the `enableLoggingKnownPII` attribute in the `machineSettings` element of the Machine.config file to permit applications running on the machine to log known personally identifiable information (PII). The following configuration demonstrates how to do this:  \n  \n```  \n<configuration>  \n   <system.serviceModel>  \n      <machineSettings enableLoggingKnownPii=\"true\"/>  \n   </system.serviceModel>  \n</configuration>   \n```  \n  \n An application deployer can then use the `logKnownPii` attribute in either the App.config or Web.config file to enable PII logging as follows:  \n  \n```  \n<system.diagnostics>  \n  <sources>  \n      <source name=\"System.ServiceModel.MessageLogging\"  \n        logKnownPii=\"true\">  \n        <listeners>  \n                 <add name=\"messages\"  \n                 type=\"System.Diagnostics.XmlWriterTraceListener\"  \n                 initializeData=\"c:\\logs\\messages.svclog\" />  \n          </listeners>  \n      </source>  \n    </sources>  \n</system.diagnostics>  \n```  \n  \n Only when both settings are `true` is PII logging enabled. The combination of two switches allows the flexibility to log known PII for each application.  \n  \n> [!IMPORTANT]\n>  In [!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)] the `logEntireMessage` and `logKnownPii` flags must also be set to `true` in the Web.config file or the App.config file to enable PII logging, as show in the following example `<system.serviceModel><messageLogging logEntireMessage=\"true\" logKnownPii=\"true\" â€¦`.  \n  \n You should be aware that if you specify two or more custom sources in a configuration file, only the attributes of the first source are read. The others are ignored. This means that, for the following App.config, file, PII is not logged for both sources even though PII logging is explicitly enabled for the second source.  \n  \n```  \n<system.diagnostics>  \n   <sources>  \n      <source name=\"System.ServiceModel.MessageLogging\"  \n              logKnownPii=\"false\">  \n              <listeners>  \n                 <add name=\"messages\"  \n                      type=\"System.Diagnostics.XmlWriterTraceListener\"  \n                      initializeData=\"c:\\logs\\messages.svclog\" />  \n              </listeners>  \n            </source>  \n      <source name=\"System.ServiceModel\"   \n              logKnownPii=\"true\">  \n              <listeners>  \n                 <add name=\"traces\"  \n                      type=\"System.Diagnostics.XmlWriterTraceListener\"  \n                      initializeData=\"c:\\logs\\traces.svclog\" />  \n              </listeners>  \n      </source>  \n   </sources>  \n</system.diagnostics>  \n```  \n  \n If the `<machineSettings enableLoggingKnownPii=\"Boolean\"/>` element exists outside the Machine.config file, the system throws a <xref:System.Configuration.ConfigurationErrorsException>.  \n  \n The changes are effective only when the application starts or restarts. An event is logged at startup when both attributes are set to `true`. An event is also logged if `logKnownPii` is set to `true` but `enableLoggingKnownPii` is `false`.  \n  \n The machine administrator and application deployer should exercise extreme caution when using these two switches. If PII logging is enabled, security keys and PII are logged. If it is disabled, sensitive and application-specific data is still logged in message headers and bodies. For a more thorough discussion about privacy and protecting PII from being exposed, see [User Privacy](http://go.microsoft.com/fwlink/?LinkID=94647).  \n  \n> [!CAUTION]\n>  PII is not hidden in malformed messages. Such messaged are logged as-is without any modification. Attributes mentioned previously have no effect on this.  \n  \n### Custom Trace Listener  \n Adding a custom trace listener on the Message Logging trace source is a privilege that should be restricted to the administrator. This is because malicious custom listeners can be configured to send messages remotely, which leads to sensitive information disclosure. In addition, if you configure a custom listener to send messages on the wire, such as, to a remote database, you should enforce proper access control on the message logs in the remote machine.  \n  \n## Events Triggered by Message Logging  \n The following lists all the events emitted by message logging.  \n  \n-   Message logging on: This event is emitted when message logging is enabled in configuration, or through WMI. The content of the event is \"Message logging has been turned on. Sensitive information may be logged in clear text, even if they were encrypted on the wire, for example, message bodies.\"  \n  \n-   Message logging off: This event is emitted when message logging is disabled through WMI. The content of the event is \"Message logging has been turned off.\"  \n  \n-   Log Known PII On: This event is emitted when logging of known PII is enabled. This happens when the `enableLoggingKnownPii` attribute in the `machineSettings` element of the Machine.config file is set to `true`, and the `logKnownPii` attribute of the `source` element in either the App.config or Web.config file is set to `true`.  \n  \n-   Log Known PII Not Allowed: This event is emitted when logging of known PII is not allowed. This happens when the `logKnownPii` attribute of the `source` element in either the App.config or Web.config file is set to `true`, but the `enableLoggingKnownPii` attribute in the `machineSettings` element of the Machine.config file is set to `false`. No exception is thrown.  \n  \n These events can be viewed in the Event Viewer tool that comes with Windows. For more information on this, see [Event Logging](../../../../docs/framework/wcf/diagnostics/event-logging/index.md).  \n  \n## See Also  \n [Message Logging](../../../../docs/framework/wcf/diagnostics/message-logging.md)   \n [Security Concerns and Useful Tips for Tracing](../../../../docs/framework/wcf/diagnostics/tracing/security-concerns-and-useful-tips-for-tracing.md)","nodes":[{"pos":[4,369],"nodes":[{"content":"Security Concerns for Message Logging | Microsoft Docs","nodes":[{"pos":[0,54],"content":"Security Concerns for Message Logging | Microsoft Docs","nodes":[{"content":"Security Concerns for Message Logging | Microsoft Docs","pos":[0,54]}]}],"pos":[6,63],"yaml":true}],"content":"title: \"Security Concerns for Message Logging | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 21f513f2-815b-47f3-85a6-03c008510038\ncaps.latest.revision: 17\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"","yamlblock":true},{"pos":[376,413],"content":"Security Concerns for Message Logging","linkify":"Security Concerns for Message Logging","nodes":[{"content":"Security Concerns for Message Logging","pos":[0,37]}]},{"content":"This topic describes how you can protect sensitive data from being exposed in message logs, as well as events generated by message logging.","pos":[414,553]},{"pos":[562,579],"content":"Security Concerns","linkify":"Security Concerns","nodes":[{"content":"Security Concerns","pos":[0,17]}]},{"pos":[589,618],"content":"Logging Sensitive Information","linkify":"Logging Sensitive Information","nodes":[{"content":"Logging Sensitive Information","pos":[0,29]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> does not modify any data in application-specific headers and body.","pos":[622,744],"source":"[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] does not modify any data in application-specific headers and body."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> also does not track personal information in application-specific headers or body data.","pos":[745,887],"source":"[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] also does not track personal information in application-specific headers or body data."},{"content":"When message logging is enabled, personal information in application-specific headers, such as, a query string; and body information, such as, a credit card number, can become visible in the logs.","pos":[894,1090]},{"content":"The application deployer is responsible for enforcing access control on the configuration and log files.","pos":[1091,1195]},{"content":"If you do not want this kind of information to be visible, you should disable logging, or filter out part of the data if you want to share the logs.","pos":[1196,1344]},{"content":"The following tips can help you to prevent the content of a log file from being exposed unintentionally:","pos":[1351,1455]},{"content":"Ensure that the log files are protected by Access Control Lists (ACL) both in Web-host and self-host scenarios.","pos":[1465,1576]},{"content":"Choose a file extension that cannot be easily served using a Web request.","pos":[1586,1659]},{"content":"For example, the .xml file extension is not a safe choice.","pos":[1660,1718]},{"content":"You can check the Internet Information Services (IIS) administration guide to see a list of extensions that can be served.","pos":[1719,1841]},{"content":"Specify an absolute path for the log file location, which should be outside of the Web host vroot public directory to prevent it from being accessed by an external party using a Web browser.","pos":[1851,2041]},{"content":"By default, keys and personally identifiable information (PII) such as username and password are not logged in traces and logged messages.","pos":[2048,2186]},{"content":"A machine administrator, however, can use the <ph id=\"ph1\">`enableLoggingKnownPII`</ph> attribute in the <ph id=\"ph2\">`machineSettings`</ph> element of the Machine.config file to permit applications running on the machine to log known personally identifiable information (PII).","pos":[2187,2428],"source":" A machine administrator, however, can use the `enableLoggingKnownPII` attribute in the `machineSettings` element of the Machine.config file to permit applications running on the machine to log known personally identifiable information (PII)."},{"content":"The following configuration demonstrates how to do this:","pos":[2429,2485]},{"pos":[2656,2798],"content":"An application deployer can then use the <ph id=\"ph1\">`logKnownPii`</ph> attribute in either the App.config or Web.config file to enable PII logging as follows:","source":"An application deployer can then use the `logKnownPii` attribute in either the App.config or Web.config file to enable PII logging as follows:"},{"content":"Only when both settings are <ph id=\"ph1\">`true`</ph> is PII logging enabled.","pos":[3222,3280],"source":"Only when both settings are `true` is PII logging enabled."},{"content":"The combination of two switches allows the flexibility to log known PII for each application.","pos":[3281,3374]},{"pos":[3382,3739],"content":"[!IMPORTANT]\n In [!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)] the `logEntireMessage` and `logKnownPii` flags must also be set to `true` in the Web.config file or the App.config file to enable PII logging, as show in the following example `<system.serviceModel><messageLogging logEntireMessage=\"true\" logKnownPii=\"true\" â€¦`.","leadings":["","> "],"nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph> the <ph id=\"ph2\">`logEntireMessage`</ph> and <ph id=\"ph3\">`logKnownPii`</ph> flags must also be set to <ph id=\"ph4\">`true`</ph> in the Web.config file or the App.config file to enable PII logging, as show in the following example <ph id=\"ph5\">`&lt;system.serviceModel&gt;&lt;messageLogging logEntireMessage=\"true\" logKnownPii=\"true\" â€¦`</ph>.","pos":[14,355],"source":"In [!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)] the `logEntireMessage` and `logKnownPii` flags must also be set to `true` in the Web.config file or the App.config file to enable PII logging, as show in the following example `<system.serviceModel><messageLogging logEntireMessage=\"true\" logKnownPii=\"true\" â€¦`."}]},{"content":"You should be aware that if you specify two or more custom sources in a configuration file, only the attributes of the first source are read.","pos":[3746,3887]},{"content":"The others are ignored.","pos":[3888,3911]},{"content":"This means that, for the following App.config, file, PII is not logged for both sources even though PII logging is explicitly enabled for the second source.","pos":[3912,4068]},{"pos":[4857,5042],"content":"If the <ph id=\"ph1\">`&lt;machineSettings enableLoggingKnownPii=\"Boolean\"/&gt;`</ph> element exists outside the Machine.config file, the system throws a <ph id=\"ph2\">&lt;xref:System.Configuration.ConfigurationErrorsException&gt;</ph>.","source":"If the `<machineSettings enableLoggingKnownPii=\"Boolean\"/>` element exists outside the Machine.config file, the system throws a <xref:System.Configuration.ConfigurationErrorsException>."},{"content":"The changes are effective only when the application starts or restarts.","pos":[5049,5120]},{"content":"An event is logged at startup when both attributes are set to <ph id=\"ph1\">`true`</ph>.","pos":[5121,5190],"source":" An event is logged at startup when both attributes are set to `true`."},{"content":"An event is also logged if <ph id=\"ph1\">`logKnownPii`</ph> is set to <ph id=\"ph2\">`true`</ph> but <ph id=\"ph3\">`enableLoggingKnownPii`</ph> is <ph id=\"ph4\">`false`</ph>.","pos":[5191,5288],"source":" An event is also logged if `logKnownPii` is set to `true` but `enableLoggingKnownPii` is `false`."},{"content":"The machine administrator and application deployer should exercise extreme caution when using these two switches.","pos":[5295,5408]},{"content":"If PII logging is enabled, security keys and PII are logged.","pos":[5409,5469]},{"content":"If it is disabled, sensitive and application-specific data is still logged in message headers and bodies.","pos":[5470,5575]},{"content":"For a more thorough discussion about privacy and protecting PII from being exposed, see <bpt id=\"p1\">[</bpt>User Privacy<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=94647)</ept>.","pos":[5576,5725],"source":" For a more thorough discussion about privacy and protecting PII from being exposed, see [User Privacy](http://go.microsoft.com/fwlink/?LinkID=94647)."},{"pos":[5733,5900],"content":"[!CAUTION]\n PII is not hidden in malformed messages. Such messaged are logged as-is without any modification. Attributes mentioned previously have no effect on this.","leadings":["","> "],"nodes":[{"content":"PII is not hidden in malformed messages. Such messaged are logged as-is without any modification. Attributes mentioned previously have no effect on this.","pos":[12,165],"nodes":[{"content":"PII is not hidden in malformed messages.","pos":[0,40]},{"content":"Such messaged are logged as-is without any modification.","pos":[41,97]},{"content":"Attributes mentioned previously have no effect on this.","pos":[98,153]}]}]},{"pos":[5910,5931],"content":"Custom Trace Listener","linkify":"Custom Trace Listener","nodes":[{"content":"Custom Trace Listener","pos":[0,21]}]},{"content":"Adding a custom trace listener on the Message Logging trace source is a privilege that should be restricted to the administrator.","pos":[5935,6064]},{"content":"This is because malicious custom listeners can be configured to send messages remotely, which leads to sensitive information disclosure.","pos":[6065,6201]},{"content":"In addition, if you configure a custom listener to send messages on the wire, such as, to a remote database, you should enforce proper access control on the message logs in the remote machine.","pos":[6202,6394]},{"pos":[6403,6438],"content":"Events Triggered by Message Logging","linkify":"Events Triggered by Message Logging","nodes":[{"content":"Events Triggered by Message Logging","pos":[0,35]}]},{"content":"The following lists all the events emitted by message logging.","pos":[6442,6504]},{"content":"Message logging on: This event is emitted when message logging is enabled in configuration, or through WMI.","pos":[6514,6621]},{"content":"The content of the event is \"Message logging has been turned on.","pos":[6622,6686]},{"content":"Sensitive information may be logged in clear text, even if they were encrypted on the wire, for example, message bodies.\"","pos":[6687,6808]},{"content":"Message logging off: This event is emitted when message logging is disabled through WMI.","pos":[6818,6906]},{"content":"The content of the event is \"Message logging has been turned off.\"","pos":[6907,6973]},{"content":"Log Known PII On: This event is emitted when logging of known PII is enabled.","pos":[6983,7060]},{"content":"This happens when the <ph id=\"ph1\">`enableLoggingKnownPii`</ph> attribute in the <ph id=\"ph2\">`machineSettings`</ph> element of the Machine.config file is set to <ph id=\"ph3\">`true`</ph>, and the <ph id=\"ph4\">`logKnownPii`</ph> attribute of the <ph id=\"ph5\">`source`</ph> element in either the App.config or Web.config file is set to <ph id=\"ph6\">`true`</ph>.","pos":[7061,7312],"source":" This happens when the `enableLoggingKnownPii` attribute in the `machineSettings` element of the Machine.config file is set to `true`, and the `logKnownPii` attribute of the `source` element in either the App.config or Web.config file is set to `true`."},{"content":"Log Known PII Not Allowed: This event is emitted when logging of known PII is not allowed.","pos":[7322,7412]},{"content":"This happens when the <ph id=\"ph1\">`logKnownPii`</ph> attribute of the <ph id=\"ph2\">`source`</ph> element in either the App.config or Web.config file is set to <ph id=\"ph3\">`true`</ph>, but the <ph id=\"ph4\">`enableLoggingKnownPii`</ph> attribute in the <ph id=\"ph5\">`machineSettings`</ph> element of the Machine.config file is set to <ph id=\"ph6\">`false`</ph>.","pos":[7413,7665],"source":" This happens when the `logKnownPii` attribute of the `source` element in either the App.config or Web.config file is set to `true`, but the `enableLoggingKnownPii` attribute in the `machineSettings` element of the Machine.config file is set to `false`."},{"content":"No exception is thrown.","pos":[7666,7689]},{"content":"These events can be viewed in the Event Viewer tool that comes with Windows.","pos":[7696,7772]},{"content":"For more information on this, see <bpt id=\"p1\">[</bpt>Event Logging<ept id=\"p1\">](../../../../docs/framework/wcf/diagnostics/event-logging/index.md)</ept>.","pos":[7773,7890],"source":" For more information on this, see [Event Logging](../../../../docs/framework/wcf/diagnostics/event-logging/index.md)."},{"pos":[7899,7907],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Message Logging<ept id=\"p1\">](../../../../docs/framework/wcf/diagnostics/message-logging.md)</ept><ph id=\"ph1\"> </ph>","pos":[7911,7992],"source":"[Message Logging](../../../../docs/framework/wcf/diagnostics/message-logging.md) "},{"content":"<bpt id=\"p1\">[</bpt>Security Concerns and Useful Tips for Tracing<ept id=\"p1\">](../../../../docs/framework/wcf/diagnostics/tracing/security-concerns-and-useful-tips-for-tracing.md)</ept>","pos":[7996,8144],"source":"[Security Concerns and Useful Tips for Tracing](../../../../docs/framework/wcf/diagnostics/tracing/security-concerns-and-useful-tips-for-tracing.md)"}]}