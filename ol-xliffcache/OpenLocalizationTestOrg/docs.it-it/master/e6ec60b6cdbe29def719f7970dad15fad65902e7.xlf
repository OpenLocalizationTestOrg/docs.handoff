<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6ec60b6cdbe29def719f7970dad15fad65902e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\expression-trees.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f38f5395d730a9563a93a1305720f721a22d8b54</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">870b30bc8062b0331307c3ceca59ee2bdc1bfa2c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Expression Trees</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Expression Trees</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Expression Trees</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you have used LINQ, you have experience with a rich library where the <ph id="ph1">`Func`</ph> types are part of the API set.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(If you are not familiar with LINQ, you probably want to read <bpt id="p1">[</bpt>the LINQ tutorial<ept id="p1">](linq/index.md)</ept> and the tutorial on <bpt id="p2">[</bpt>lambda expressions<ept id="p2">](lambda-expressions.md)</ept> before this one.) <bpt id="p3">*</bpt>Expression Trees<ept id="p3">*</ept> provide richer interaction with the arguments that are functions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You write function arguments, typically using Lambda Expressions, when you create LINQ queries.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In a typical LINQ query, those function arguments are transformed into a delegate the compiler creates.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you want to have a richer interaction, you need to use <bpt id="p1">*</bpt>Expression Trees<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Expression Trees represent code as a structure that you can examine, modify, or execute.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These tools give you the power to manipulate code during run time.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can write code that examines running algorithms, or injects new capabilities.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In more advanced scenarios, you can modify running algorithms, and even translate C# expressions into another form for execution in another environment.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You've likely already written code that uses Expression Trees.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Entity Framework's LINQ APIs accept Expression Trees as the arguments for the LINQ Query Expression Pattern.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>That enables <bpt id="p1">[</bpt>Entity Framework<ept id="p1">](http://docs.efproject.net/en/latest/)</ept> to translate the query you wrote in C# into SQL that executes in the database engine.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Another example is <bpt id="p1">[</bpt>Moq<ept id="p1">](https://github.com/Moq/moq)</ept>, which is a popular mocking framework for .NET.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The remaining sections of this tutorial will explore what Expression Trees are, examine the framework classes that support expression trees, and show you how to work with expression trees.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You'll learn how to read expression trees, how to create expression trees, how to create modified expression trees, and how to execute the code represented by expression trees.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After reading, you will be ready to use these structures to create rich adaptive algorithms.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;style type="text/css"&gt;</bpt> ol { list-style-type: upper-roman; } <ept id="p1">&lt;/style&gt;</ept><bpt id="p2">
1. [</bpt>Expression Trees Explained<ept id="p2">](expression-trees-explained.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Framework Types Supporting Expression Trees<ept id="p1">](expression-classes.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Learn about the structures and classes that define and manipulate expression trees.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Executing Expressions<ept id="p1">](expression-trees-execution.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Learn how to convert an expression tree represented as a Lambda Expression into a delegate and execute the resulting delegate.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interpreting Expressions<ept id="p1">](expression-trees-interpreting.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Learn how to traverse and examine <bpt id="p1">*</bpt>expression trees<ept id="p1">*</ept> to understand what code the expression tree represents.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building Expressions<ept id="p1">](expression-trees-building.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Learn how to construct the nodes for an expression tree and build expression trees.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Translating Expressions<ept id="p1">](expression-trees-translating.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Learn how to build a modified copy of an expression tree, or translate an expression tree into a different format.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Summing up<ept id="p1">](expression-trees-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Review the information on expression trees.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>