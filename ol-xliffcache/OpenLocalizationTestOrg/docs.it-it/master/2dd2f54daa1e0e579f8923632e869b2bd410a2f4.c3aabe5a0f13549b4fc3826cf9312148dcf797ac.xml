{"content":"---\ntitle: \"ANYELEMENT (Entity SQL) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 475a9ad6-8c8d-4f49-9970-af273e5360f1\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# ANYELEMENT (Entity SQL)\nExtracts an element from a multivalued collection.  \n  \n## Syntax  \n  \n```  \n  \nANYELEMENT ( expression )  \n```  \n  \n## Arguments  \n `expression`  \n Any valid query expression that returns a collection to extract an element from.  \n  \n## Return Value  \n A single element in the collection or an arbitrary element if the collection has more than one; if the collection is empty, returns `null`. If`collection`is a collection of type `Collection<T>`, then `ANYELEMENT(collection)` is a valid expression that yields an instance of type `T`.  \n  \n## Remarks  \n ANYELEMENT extracts an arbitrary element from a multivalued collection. For example, the following example attempts to extract a singleton element from the set `Customers`.  \n  \n```  \nANYELEMENT(Customers)  \n```  \n  \n## Example  \n The following [!INCLUDE[esql](../../../../../../includes/esql-md.md)] query uses the ANYELEMENT operator to extract an element from a multivalued collection. The query is based on the AdventureWorks Sales Model. To compile and run this query, follow these steps:  \n  \n1.  Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md).  \n  \n2.  Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:  \n  \n [!code-csharp[DP EntityServices Concepts 2#ANYELEMENT](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#anyelement)]  \n  \n## See Also  \n [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)   \n [Nullable Structured Types](../../../../../../docs/framework/data/adonet/ef/language-reference/nullable-structured-types-entity-sql.md)","nodes":[{"pos":[12,52],"content":"ANYELEMENT (Entity SQL) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ANYELEMENT (Entity SQL) | Microsoft Docs","pos":[0,40]}]},{"pos":[405,428],"content":"ANYELEMENT (Entity SQL)","linkify":"ANYELEMENT (Entity SQL)","nodes":[{"content":"ANYELEMENT (Entity SQL)","pos":[0,23]}]},{"content":"Extracts an element from a multivalued collection.","pos":[429,479]},{"pos":[488,494],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[549,558],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Any valid query expression that returns a collection to extract an element from.","pos":[578,658]},{"pos":[667,679],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A single element in the collection or an arbitrary element if the collection has more than one; if the collection is empty, returns <ph id=\"ph1\">`null`</ph>.","pos":[683,822],"source":"A single element in the collection or an arbitrary element if the collection has more than one; if the collection is empty, returns `null`."},{"content":"If<ph id=\"ph1\">`collection`</ph>is a collection of type <ph id=\"ph2\">`Collection&lt;T&gt;`</ph>, then <ph id=\"ph3\">`ANYELEMENT(collection)`</ph> is a valid expression that yields an instance of type <ph id=\"ph4\">`T`</ph>.","pos":[823,966],"source":" If`collection`is a collection of type `Collection<T>`, then `ANYELEMENT(collection)` is a valid expression that yields an instance of type `T`."},{"pos":[975,982],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"ANYELEMENT extracts an arbitrary element from a multivalued collection.","pos":[986,1057]},{"content":"For example, the following example attempts to extract a singleton element from the set <ph id=\"ph1\">`Customers`</ph>.","pos":[1058,1158],"source":" For example, the following example attempts to extract a singleton element from the set `Customers`."},{"pos":[1206,1213],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> query uses the ANYELEMENT operator to extract an element from a multivalued collection.","pos":[1217,1374],"source":"The following [!INCLUDE[esql](../../../../../../includes/esql-md.md)] query uses the ANYELEMENT operator to extract an element from a multivalued collection."},{"content":"The query is based on the AdventureWorks Sales Model.","pos":[1375,1428]},{"content":"To compile and run this query, follow these steps:","pos":[1429,1479]},{"pos":[1489,1686],"content":"Follow the procedure in <bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns StructuralType Results<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)</ept>.","source":"Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)."},{"pos":[1696,1779],"content":"Pass the following query as an argument to the <ph id=\"ph1\">`ExecuteStructuralTypeQuery`</ph> method:","source":"Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:"},{"pos":[1786,1957],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DP EntityServices Concepts 2#ANYELEMENT<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#anyelement)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[DP EntityServices Concepts 2#ANYELEMENT](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#anyelement)]"},{"pos":[1966,1974],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[1978,2093],"source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Nullable Structured Types<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/nullable-structured-types-entity-sql.md)</ept>","pos":[2096,2232],"source":" [Nullable Structured Types](../../../../../../docs/framework/data/adonet/ef/language-reference/nullable-structured-types-entity-sql.md)"}]}