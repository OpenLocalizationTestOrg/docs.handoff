{"content":"---\ntitle: \"Feed Customization (WCF Data Services)\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"WCF Data Services, feeds\"\n  - \"WCF Data Services, Atom protocol\"\n  - \"Atom Publishing Protocol [WCF Data Services]\"\n  - \"WCF Data Services, customizing feeds\"\nms.assetid: 0d1a39bc-6462-4683-bd7d-e74e0fd28a85\n---\n# Feed Customization (WCF Data Services)\n[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] uses the [!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)] to expose data as a feed. [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] supports both Atom and JavaScript Object Notation (JSON) formats for data feeds. When you use an Atom feed, [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] provides a standard method to serialize data, such as entities and relationships, into an XML format that can be included in the body of HTTP message. [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] defines a default entity-property mapping between the data that is contained in entities and Atom elements. For more information, see [OData: Atom Format](https://go.microsoft.com/fwlink/?LinkID=185794).  \n  \n You may have an application scenario that requires that the property data returned by the data service be serialized in a customized manner rather than in the standard feed format. With [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)], you can customize the serialization in a data feed so that properties of an entity may be mapped to unused elements and attributes of an entry or to custom elements of an entry in the feed.  \n  \n> [!NOTE]\n>  Feed customization is only supported for Atom feeds. Custom feeds are not returned when the JSON format is requested for the returned feed.  \n  \n With [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)], you can define an alternate entity-property mapping for an Atom payload by manually applying attributes to entity types in the data model. The data source provider of the data service determines how you should apply these attributes.  \n  \n> [!IMPORTANT]\n>  When you define custom feeds, you must guarantee that all entity properties that have custom mappings defined are included in the projection. When a mapped entity property is not included in the projection, data loss might occur. For more information, see [Query Projections](../../../../docs/framework/data/wcf/query-projections-wcf-data-services.md).  \n  \n## Customizing Feeds with the Entity Framework Provider  \n The data model used with the [!INCLUDE[adonet_ef](../../../../includes/adonet-ef-md.md)] provider is represented as XML in the .edmx file. In this case, the attributes that define custom feeds are added to the `EntityType` and `Property` elements that represent entity types and properties in the data model. These feed customization attributes are not defined in [\\[MC-CSDL\\]: Conceptual Schema Definition File Format](https://go.microsoft.com/fwlink/?LinkId=159072), which is the format that the [!INCLUDE[adonet_ef](../../../../includes/adonet-ef-md.md)] provider uses to define the data model. Therefore, you must declare feed customization attributes in a specific schema namespace, which is defined as `m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"`. The following XML fragment shows feed customization attributes applied to `Property` elements of the `Products` entity type that define the `ProductName`, `ReorderLevel`, and `UnitsInStock` properties.  \n  \n [!code-xml[Astoria Custom Feeds#EdmFeedAttributes](../../../../samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/northwind.csdl#edmfeedattributes)]  \n  \n These attributes produce the following customized data feed for the `Products` entity set. In the customized data feed, the `ProductName` property value is displayed in both in the `author` element and as the `ProductName` property element, and the `UnitsInStock` property is displayed in a custom element that has its own unique namespace and with the `ReorderLevel` property as an attribute:  \n  \n [!code-xml[Astoria Custom Feeds#EdmFeedResultProduct](../../../../samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/edmfeedresult.xml#edmfeedresultproduct)]  \n  \n For more information, see [How to: Customize Feeds with the Entity Framework Provider](../../../../docs/framework/data/wcf/how-to-customize-feeds-with-ef-provider-wcf-data-services.md).  \n  \n> [!NOTE]\n>  Because extensions to the data model are not supported by the Entity Designer, you must manually modify the XML file that contains the data model. For more information about the .edmx file that is generated by the [!INCLUDE[adonet_edm](../../../../includes/adonet-edm-md.md)] tools, see [.edmx File Overview (Entity Framework)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/cc982042(v=vs.100)).  \n  \n### Custom Feed Attributes  \n The following table shows the XML attributes that customize feeds that you can add to the conceptual schema definition language (CSDL) that defines the data model. These attributes are equivalent to the properties of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> used with the reflection provider.  \n  \n|Attribute name|Description|  \n|--------------------|-----------------|  \n|`FC_ContentKind`|Indicates the type of the content. The following keywords define syndication content types.<br /><br /> `text:` The property value is displayed in the feed as text.<br /><br /> `html:` The property value is displayed in the feed as HTML.<br /><br /> `xhtml:` The property value is displayed in the feed as XML-formatted HTML.<br /><br /> These keywords are equivalent to the values of the <xref:System.Data.Services.Common.SyndicationTextContentKind> enumeration used with the reflection provider.<br /><br /> This attribute is not supported when the `FC_NsPrefix` and `FC_NsUri` attributes are used.<br /><br /> When you specify a value of `xhtml` for the `FC_ContentKind` attribute, you must ensure that the property value contains properly formatted XML. The data service returns the value without performing any transformations. You must also ensure that any XML element prefixes in the returned XML have a namespace URI and prefix defined in the mapped feed.|  \n|`FC_KeepInContent`|Indicates that the referenced property value should be included both in the content section of the feed and in the mapped location. Valid values are `true` and `false`. To make the resulting feed backward-compatible with earlier versions of [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)], specify a value of `true` to make sure that the value is included in the content section of the feed.|  \n|`FC_NsPrefix`|The namespace prefix of the XML element in a non-syndication mapping. This attribute must be used with the `FC_NsUri` attribute and cannot be used with the `FC_ContentKind` attribute.|  \n|`FC_NsUri`|The namespace URI of the XML element in a non-syndication mapping. This attribute must be used with the `FC_NsPrefix` attribute and cannot be used with the `FC_ContentKind` attribute.|  \n|`FC_SourcePath`|The path of the property of the entity to which this feed mapping rule applies. This attribute is only supported when it is used in an `EntityType` element.<br /><br /> The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot directly reference a complex type. For complex types, you must use a path expression where property names are separated by a backslash (`/`) character. For example, the following values are allowed for an entity type `Person` with an integer property `Age` and a complex property<br /><br /> `Address`:<br /><br /> `Age`<br /><br /> `Address/Street`<br /><br /> The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot be set to a value that contains a space or any other character that is not valid in a property name.|  \n|`FC_TargetPath`|The name of the target element of the resulting feed to map the property. This element can be an element defined by the Atom specification or a custom element.<br /><br /> The following keywords are predefined syndication target-path values that point to specific location in an [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] feed.<br /><br /> `SyndicationAuthorEmail:` The `atom:email` child element of the `atom:author` element.<br /><br /> `SyndicationAuthorName:` The `atom:name` child element of the `atom:author` element.<br /><br /> `SyndicationAuthorUri:` The `atom:uri` child element of the `atom:author` element.<br /><br /> `SyndicationContributorEmail:` The `atom:email` child element of the `atom:contributor` element.<br /><br /> `SyndicationContributorName:` The `atom:name` child element of the `atom:contributor` element.<br /><br /> `SyndicationContributorUri:` The `atom:uri` child element of the `atom:contributor` element.<br /><br /> `SyndicationCustomProperty:` A custom property element. When mapping to a custom element, the target must be a path expression in which nested elements are separated by a backslash (`/`) and attributes are specified by an ampersand (`@`). In the following example, the string `UnitsInStock/@ReorderLevel` maps a property value to an attribute named `ReorderLevel` on a child element named `UnitsInStock` of the root entry element.<br /><br /> `<Property Name=\"ReorderLevel\" Type=\"Int16\"               m:FC_TargetPath=\"UnitsInStock/@ReorderLevel\"               m:FC_NsPrefix=\"Northwind\"               m:FC_NsUri=\"http://schemas.examples.microsoft.com/dataservices\"               m:FC_KeepInContent=\"false\"               />`<br /><br /> When the target is a custom element name, the `FC_NsPrefix` and `FC_NsUri` attributes must also be specified.<br /><br /> `SyndicationPublished:` The `atom:published` element.<br /><br /> `SyndicationRights:` The `atom:rights` element.<br /><br /> `SyndicationSummary:` The `atom:summary` element.<br /><br /> `SyndicationTitle:` The `atom:title` element.<br /><br /> `SyndicationUpdated:` The `atom:updated` element.<br /><br /> These keywords are equivalent to the values of the <xref:System.Data.Services.Common.SyndicationItemProperty> enumeration used with the reflection provider.|  \n  \n> [!NOTE]\n>  Attribute names and values are case-sensitive. Attributes can be applied either to the `EntityType` element or to one or more `Property` elements, but not to both.  \n  \n## Customizing Feeds with the Reflection Provider  \n To customize feeds for a data model that was implemented by using the reflection provider, add one or more instances of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> attribute to the classes that represent entity types in the data model. The properties of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> class correspond to the feed customization attributes that are described in the previous section. The following is an example of the declaration of the `Order` type, with custom feed mapping defined for both properties.  \n  \n> [!NOTE]\n>  The data model for this example is defined in the topic [How to: Create a Data Service Using the Reflection Provider](../../../../docs/framework/data/wcf/create-a-data-service-using-rp-wcf-data-services.md).  \n  \n [!code-csharp[Astoria Custom Feeds#CustomOrderFeed](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria custom feeds/cs/orderitems.svc.cs#customorderfeed)]\n [!code-vb[Astoria Custom Feeds#CustomOrderFeed](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria custom feeds/vb/orderitems.svc.vb#customorderfeed)]  \n  \n These attributes produce the following customized data feed for the `Orders` entity set. In this customized feed, the `OrderId` property value displays only in the `title` element of the `entry` and the `Customer` property value displays both in the `author` element and as the `Customer` property element:  \n  \n [!code-xml[Astoria Custom Feeds#IQueryableFeedResult](../../../../samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/iqueryablefeedresult.xml#iqueryablefeedresult)]  \n  \n For more information, see [How to: Customize Feeds with the Reflection Provider](../../../../docs/framework/data/wcf/how-to-customize-feeds-with-the-reflection-provider-wcf-data-services.md).  \n  \n## Customizing Feeds with a Custom Data Service Provider  \n Feed customization for a data model defined by using a custom data service provider is defined for a resource type by calling the <xref:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute%2A> on the <xref:System.Data.Services.Providers.ResourceType> that represents an entity type in the data model. For more information, see [Custom Data Service Providers](../../../../docs/framework/data/wcf/custom-data-service-providers-wcf-data-services.md).  \n  \n## Consuming Custom Feeds  \n When your application directly consumes an [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] feed, it must be able to process any customized elements and attributes in the returned feed. When you have implemented custom feeds in your data model, regardless of the data service provider, the `$metadata` endpoint returns custom feed information as custom feed attributes in the CSDL returned by the data service. When you use the **Add Service Reference** dialog or the [datasvcutil.exe](../../../../docs/framework/data/wcf/wcf-data-service-client-utility-datasvcutil-exe.md) tool to generate client data service classes, the customized feed attributes are used to guarantee that requests and responses to the data service are handled correctly.  \n  \n## Feed Customization Considerations  \n You should consider the following when defining custom feed mappings.  \n  \n-   The [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] client treats mapped elements in a feed as empty when they contain only white space. Because of this, mapped elements that contain only white space are not materialized on the client with the same white space. To preserve this white space on the client, you must set the value of `KeepInContext` to `true` in the feed mapping attribute.  \n  \n## Versioning Requirements  \n Feed customization has the following [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] protocol versioning requirements:  \n  \n-   Feed customization requires that both the client and data service support version 2.0 of the [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] protocol and later versions.  \n  \n For more information, see [Data Service Versioning](../../../../docs/framework/data/wcf/data-service-versioning-wcf-data-services.md).  \n  \n## See also\n\n- [Reflection Provider](../../../../docs/framework/data/wcf/reflection-provider-wcf-data-services.md)\n- [Entity Framework Provider](../../../../docs/framework/data/wcf/entity-framework-provider-wcf-data-services.md)\n","nodes":[{"pos":[4,342],"embed":true,"restype":"x-metadata","content":"title: \"Feed Customization (WCF Data Services)\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"WCF Data Services, feeds\"\n  - \"WCF Data Services, Atom protocol\"\n  - \"Atom Publishing Protocol [WCF Data Services]\"\n  - \"WCF Data Services, customizing feeds\"\nms.assetid: 0d1a39bc-6462-4683-bd7d-e74e0fd28a85","nodes":[{"content":"Feed Customization (WCF Data Services)","nodes":[{"pos":[0,38],"content":"Feed Customization (WCF Data Services)","nodes":[{"content":"Feed Customization (WCF Data Services)","pos":[0,38]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[349,387],"content":"Feed Customization (WCF Data Services)","linkify":"Feed Customization (WCF Data Services)","nodes":[{"content":"Feed Customization (WCF Data Services)","pos":[0,38]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> uses the <ph id=\"ph2\">[!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)]</ph> to expose data as a feed.","pos":[388,546],"source":"[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] uses the [!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)] to expose data as a feed."},{"content":"<ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> supports both Atom and JavaScript Object Notation (JSON) formats for data feeds.","pos":[547,693],"source":"[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] supports both Atom and JavaScript Object Notation (JSON) formats for data feeds."},{"content":"When you use an Atom feed, <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> provides a standard method to serialize data, such as entities and relationships, into an XML format that can be included in the body of HTTP message.","pos":[694,937],"source":" When you use an Atom feed, [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] provides a standard method to serialize data, such as entities and relationships, into an XML format that can be included in the body of HTTP message."},{"content":"<ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> defines a default entity-property mapping between the data that is contained in entities and Atom elements.","pos":[938,1111],"source":"[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] defines a default entity-property mapping between the data that is contained in entities and Atom elements."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>OData: Atom Format<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=185794)</ept>.","pos":[1112,1207],"source":" For more information, see [OData: Atom Format](https://go.microsoft.com/fwlink/?LinkID=185794)."},{"content":"You may have an application scenario that requires that the property data returned by the data service be serialized in a customized manner rather than in the standard feed format.","pos":[1214,1394]},{"content":"With <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph>, you can customize the serialization in a data feed so that properties of an entity may be mapped to unused elements and attributes of an entry or to custom elements of an entry in the feed.","pos":[1395,1656],"source":" With [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)], you can customize the serialization in a data feed so that properties of an entity may be mapped to unused elements and attributes of an entry or to custom elements of an entry in the feed."},{"pos":[1664,1814],"content":"[!NOTE]\n Feed customization is only supported for Atom feeds. Custom feeds are not returned when the JSON format is requested for the returned feed.","leadings":["","> "],"nodes":[{"content":"Feed customization is only supported for Atom feeds. Custom feeds are not returned when the JSON format is requested for the returned feed.","pos":[9,148],"nodes":[{"content":"Feed customization is only supported for Atom feeds.","pos":[0,52]},{"content":"Custom feeds are not returned when the JSON format is requested for the returned feed.","pos":[53,139]}]}]},{"content":"With <ph id=\"ph1\">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph>, you can define an alternate entity-property mapping for an Atom payload by manually applying attributes to entity types in the data model.","pos":[1821,2025],"source":"With [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)], you can define an alternate entity-property mapping for an Atom payload by manually applying attributes to entity types in the data model."},{"content":"The data source provider of the data service determines how you should apply these attributes.","pos":[2026,2120]},{"pos":[2128,2496],"content":"[!IMPORTANT]\n When you define custom feeds, you must guarantee that all entity properties that have custom mappings defined are included in the projection. When a mapped entity property is not included in the projection, data loss might occur. For more information, see [Query Projections](../../../../docs/framework/data/wcf/query-projections-wcf-data-services.md).","leadings":["","> "],"nodes":[{"content":"When you define custom feeds, you must guarantee that all entity properties that have custom mappings defined are included in the projection. When a mapped entity property is not included in the projection, data loss might occur. For more information, see [Query Projections](../../../../docs/framework/data/wcf/query-projections-wcf-data-services.md).","pos":[14,366],"nodes":[{"content":"When you define custom feeds, you must guarantee that all entity properties that have custom mappings defined are included in the projection.","pos":[0,141]},{"content":"When a mapped entity property is not included in the projection, data loss might occur.","pos":[142,229]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Projections<ept id=\"p1\">](../../../../docs/framework/data/wcf/query-projections-wcf-data-services.md)</ept>.","pos":[230,352],"source":" For more information, see [Query Projections](../../../../docs/framework/data/wcf/query-projections-wcf-data-services.md)."}]}]},{"pos":[2505,2557],"content":"Customizing Feeds with the Entity Framework Provider","linkify":"Customizing Feeds with the Entity Framework Provider","nodes":[{"content":"Customizing Feeds with the Entity Framework Provider","pos":[0,52]}]},{"content":"The data model used with the <ph id=\"ph1\">[!INCLUDE[adonet_ef](../../../../includes/adonet-ef-md.md)]</ph> provider is represented as XML in the .edmx file.","pos":[2561,2699],"source":"The data model used with the [!INCLUDE[adonet_ef](../../../../includes/adonet-ef-md.md)] provider is represented as XML in the .edmx file."},{"content":"In this case, the attributes that define custom feeds are added to the <ph id=\"ph1\">`EntityType`</ph> and <ph id=\"ph2\">`Property`</ph> elements that represent entity types and properties in the data model.","pos":[2700,2869],"source":" In this case, the attributes that define custom feeds are added to the `EntityType` and `Property` elements that represent entity types and properties in the data model."},{"content":"These feed customization attributes are not defined in <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\[</ph>MC-CSDL<ph id=\"ph2\">\\]</ph>: Conceptual Schema Definition File Format<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=159072)</ept>, which is the format that the <ph id=\"ph3\">[!INCLUDE[adonet_ef](../../../../includes/adonet-ef-md.md)]</ph> provider uses to define the data model.","pos":[2870,3158],"source":" These feed customization attributes are not defined in [\\[MC-CSDL\\]: Conceptual Schema Definition File Format](https://go.microsoft.com/fwlink/?LinkId=159072), which is the format that the [!INCLUDE[adonet_ef](../../../../includes/adonet-ef-md.md)] provider uses to define the data model."},{"content":"Therefore, you must declare feed customization attributes in a specific schema namespace, which is defined as <ph id=\"ph1\">`m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"`</ph>.","pos":[3159,3338],"source":" Therefore, you must declare feed customization attributes in a specific schema namespace, which is defined as `m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"`."},{"content":"The following XML fragment shows feed customization attributes applied to <ph id=\"ph1\">`Property`</ph> elements of the <ph id=\"ph2\">`Products`</ph> entity type that define the <ph id=\"ph3\">`ProductName`</ph>, <ph id=\"ph4\">`ReorderLevel`</ph>, and <ph id=\"ph5\">`UnitsInStock`</ph> properties.","pos":[3339,3540],"source":" The following XML fragment shows feed customization attributes applied to `Property` elements of the `Products` entity type that define the `ProductName`, `ReorderLevel`, and `UnitsInStock` properties."},{"content":"These attributes produce the following customized data feed for the <ph id=\"ph1\">`Products`</ph> entity set.","pos":[3714,3804],"source":"These attributes produce the following customized data feed for the `Products` entity set."},{"content":"In the customized data feed, the <ph id=\"ph1\">`ProductName`</ph> property value is displayed in both in the <ph id=\"ph2\">`author`</ph> element and as the <ph id=\"ph3\">`ProductName`</ph> property element, and the <ph id=\"ph4\">`UnitsInStock`</ph> property is displayed in a custom element that has its own unique namespace and with the <ph id=\"ph5\">`ReorderLevel`</ph> property as an attribute:","pos":[3805,4107],"source":" In the customized data feed, the `ProductName` property value is displayed in both in the `author` element and as the `ProductName` property element, and the `UnitsInStock` property is displayed in a custom element that has its own unique namespace and with the `ReorderLevel` property as an attribute:"},{"pos":[4290,4475],"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Customize Feeds with the Entity Framework Provider<ept id=\"p1\">](../../../../docs/framework/data/wcf/how-to-customize-feeds-with-ef-provider-wcf-data-services.md)</ept>.","source":"For more information, see [How to: Customize Feeds with the Entity Framework Provider](../../../../docs/framework/data/wcf/how-to-customize-feeds-with-ef-provider-wcf-data-services.md)."},{"pos":[4483,4911],"content":"[!NOTE]\n Because extensions to the data model are not supported by the Entity Designer, you must manually modify the XML file that contains the data model. For more information about the .edmx file that is generated by the [!INCLUDE[adonet_edm](../../../../includes/adonet-edm-md.md)] tools, see [.edmx File Overview (Entity Framework)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/cc982042(v=vs.100)).","leadings":["","> "],"nodes":[{"content":"Because extensions to the data model are not supported by the Entity Designer, you must manually modify the XML file that contains the data model. For more information about the .edmx file that is generated by the [!INCLUDE[adonet_edm](../../../../includes/adonet-edm-md.md)] tools, see [.edmx File Overview (Entity Framework)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/cc982042(v=vs.100)).","pos":[9,426],"nodes":[{"content":"Because extensions to the data model are not supported by the Entity Designer, you must manually modify the XML file that contains the data model.","pos":[0,146]},{"content":"For more information about the .edmx file that is generated by the <ph id=\"ph1\">[!INCLUDE[adonet_edm](../../../../includes/adonet-edm-md.md)]</ph> tools, see <bpt id=\"p1\">[</bpt>.edmx File Overview (Entity Framework)<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/cc982042(v=vs.100))</ept>.","pos":[147,417],"source":" For more information about the .edmx file that is generated by the [!INCLUDE[adonet_edm](../../../../includes/adonet-edm-md.md)] tools, see [.edmx File Overview (Entity Framework)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/cc982042(v=vs.100))."}]}]},{"pos":[4921,4943],"content":"Custom Feed Attributes","linkify":"Custom Feed Attributes","nodes":[{"content":"Custom Feed Attributes","pos":[0,22]}]},{"content":"The following table shows the XML attributes that customize feeds that you can add to the conceptual schema definition language (CSDL) that defines the data model.","pos":[4947,5110]},{"content":"These attributes are equivalent to the properties of the <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.EntityPropertyMappingAttribute&gt;</ph> used with the reflection provider.","pos":[5111,5268],"source":" These attributes are equivalent to the properties of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> used with the reflection provider."},{"content":"Attribute name","pos":[5275,5289]},{"content":"Description","pos":[5290,5301]},{"content":"Indicates the type of the content.","pos":[5366,5400]},{"content":"The following keywords define syndication content types.","pos":[5401,5457]},{"content":"<ph id=\"ph1\">`text:`</ph> The property value is displayed in the feed as text.","pos":[5470,5530],"source":"`text:` The property value is displayed in the feed as text."},{"content":"<ph id=\"ph1\">`html:`</ph> The property value is displayed in the feed as HTML.","pos":[5543,5603],"source":"`html:` The property value is displayed in the feed as HTML."},{"content":"<ph id=\"ph1\">`xhtml:`</ph> The property value is displayed in the feed as XML-formatted HTML.","pos":[5616,5691],"source":"`xhtml:` The property value is displayed in the feed as XML-formatted HTML."},{"content":"These keywords are equivalent to the values of the <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.SyndicationTextContentKind&gt;</ph> enumeration used with the reflection provider.","pos":[5704,5863],"source":"These keywords are equivalent to the values of the <xref:System.Data.Services.Common.SyndicationTextContentKind> enumeration used with the reflection provider."},{"content":"This attribute is not supported when the <ph id=\"ph1\">`FC_NsPrefix`</ph> and <ph id=\"ph2\">`FC_NsUri`</ph> attributes are used.","pos":[5876,5966],"source":"This attribute is not supported when the `FC_NsPrefix` and `FC_NsUri` attributes are used."},{"content":"When you specify a value of <ph id=\"ph1\">`xhtml`</ph> for the <ph id=\"ph2\">`FC_ContentKind`</ph> attribute, you must ensure that the property value contains properly formatted XML.","pos":[5979,6123],"source":"When you specify a value of `xhtml` for the `FC_ContentKind` attribute, you must ensure that the property value contains properly formatted XML."},{"content":"The data service returns the value without performing any transformations.","pos":[6124,6198]},{"content":"You must also ensure that any XML element prefixes in the returned XML have a namespace URI and prefix defined in the mapped feed.","pos":[6199,6329]},{"content":"Indicates that the referenced property value should be included both in the content section of the feed and in the mapped location.","pos":[6353,6484]},{"content":"Valid values are <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph>.","pos":[6485,6521],"source":" Valid values are `true` and `false`."},{"content":"To make the resulting feed backward-compatible with earlier versions of <ph id=\"ph1\">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph>, specify a value of <ph id=\"ph2\">`true`</ph> to make sure that the value is included in the content section of the feed.","pos":[6522,6756],"source":" To make the resulting feed backward-compatible with earlier versions of [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)], specify a value of `true` to make sure that the value is included in the content section of the feed."},{"content":"The namespace prefix of the XML element in a non-syndication mapping.","pos":[6775,6844]},{"content":"This attribute must be used with the <ph id=\"ph1\">`FC_NsUri`</ph> attribute and cannot be used with the <ph id=\"ph2\">`FC_ContentKind`</ph> attribute.","pos":[6845,6958],"source":" This attribute must be used with the `FC_NsUri` attribute and cannot be used with the `FC_ContentKind` attribute."},{"content":"The namespace URI of the XML element in a non-syndication mapping.","pos":[6974,7040]},{"content":"This attribute must be used with the <ph id=\"ph1\">`FC_NsPrefix`</ph> attribute and cannot be used with the <ph id=\"ph2\">`FC_ContentKind`</ph> attribute.","pos":[7041,7157],"source":" This attribute must be used with the `FC_NsPrefix` attribute and cannot be used with the `FC_ContentKind` attribute."},{"content":"The path of the property of the entity to which this feed mapping rule applies.","pos":[7178,7257]},{"content":"This attribute is only supported when it is used in an <ph id=\"ph1\">`EntityType`</ph> element.","pos":[7258,7334],"source":" This attribute is only supported when it is used in an `EntityType` element."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A&gt;</ph> property cannot directly reference a complex type.","pos":[7347,7481],"source":"The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot directly reference a complex type."},{"content":"For complex types, you must use a path expression where property names are separated by a backslash (<ph id=\"ph1\">`/`</ph>) character.","pos":[7482,7598],"source":" For complex types, you must use a path expression where property names are separated by a backslash (`/`) character."},{"content":"For example, the following values are allowed for an entity type <ph id=\"ph1\">`Person`</ph> with an integer property <ph id=\"ph2\">`Age`</ph> and a complex property","pos":[7599,7726],"source":" For example, the following values are allowed for an entity type `Person` with an integer property `Age` and a complex property"},{"content":"<ph id=\"ph1\">`Address`</ph>:","pos":[7739,7749],"source":"`Address`:"},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A&gt;</ph> property cannot be set to a value that contains a space or any other character that is not valid in a property name.","pos":[7809,8009],"source":"The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot be set to a value that contains a space or any other character that is not valid in a property name."},{"content":"The name of the target element of the resulting feed to map the property.","pos":[8030,8103]},{"content":"This element can be an element defined by the Atom specification or a custom element.","pos":[8104,8189]},{"content":"The following keywords are predefined syndication target-path values that point to specific location in an <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> feed.","pos":[8202,8380],"source":"The following keywords are predefined syndication target-path values that point to specific location in an [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] feed."},{"content":"<ph id=\"ph1\">`SyndicationAuthorEmail:`</ph> The <ph id=\"ph2\">`atom:email`</ph> child element of the <ph id=\"ph3\">`atom:author`</ph> element.","pos":[8393,8479],"source":"`SyndicationAuthorEmail:` The `atom:email` child element of the `atom:author` element."},{"content":"<ph id=\"ph1\">`SyndicationAuthorName:`</ph> The <ph id=\"ph2\">`atom:name`</ph> child element of the <ph id=\"ph3\">`atom:author`</ph> element.","pos":[8492,8576],"source":"`SyndicationAuthorName:` The `atom:name` child element of the `atom:author` element."},{"content":"<ph id=\"ph1\">`SyndicationAuthorUri:`</ph> The <ph id=\"ph2\">`atom:uri`</ph> child element of the <ph id=\"ph3\">`atom:author`</ph> element.","pos":[8589,8671],"source":"`SyndicationAuthorUri:` The `atom:uri` child element of the `atom:author` element."},{"content":"<ph id=\"ph1\">`SyndicationContributorEmail:`</ph> The <ph id=\"ph2\">`atom:email`</ph> child element of the <ph id=\"ph3\">`atom:contributor`</ph> element.","pos":[8684,8780],"source":"`SyndicationContributorEmail:` The `atom:email` child element of the `atom:contributor` element."},{"content":"<ph id=\"ph1\">`SyndicationContributorName:`</ph> The <ph id=\"ph2\">`atom:name`</ph> child element of the <ph id=\"ph3\">`atom:contributor`</ph> element.","pos":[8793,8887],"source":"`SyndicationContributorName:` The `atom:name` child element of the `atom:contributor` element."},{"content":"<ph id=\"ph1\">`SyndicationContributorUri:`</ph> The <ph id=\"ph2\">`atom:uri`</ph> child element of the <ph id=\"ph3\">`atom:contributor`</ph> element.","pos":[8900,8992],"source":"`SyndicationContributorUri:` The `atom:uri` child element of the `atom:contributor` element."},{"content":"<ph id=\"ph1\">`SyndicationCustomProperty:`</ph> A custom property element.","pos":[9005,9060],"source":"`SyndicationCustomProperty:` A custom property element."},{"content":"When mapping to a custom element, the target must be a path expression in which nested elements are separated by a backslash (<ph id=\"ph1\">`/`</ph>) and attributes are specified by an ampersand (<ph id=\"ph2\">`@`</ph>).","pos":[9061,9243],"source":" When mapping to a custom element, the target must be a path expression in which nested elements are separated by a backslash (`/`) and attributes are specified by an ampersand (`@`)."},{"content":"In the following example, the string <ph id=\"ph1\">`UnitsInStock/@ReorderLevel`</ph> maps a property value to an attribute named <ph id=\"ph2\">`ReorderLevel`</ph> on a child element named <ph id=\"ph3\">`UnitsInStock`</ph> of the root entry element.","pos":[9244,9435],"source":" In the following example, the string `UnitsInStock/@ReorderLevel` maps a property value to an attribute named `ReorderLevel` on a child element named `UnitsInStock` of the root entry element."},{"content":"When the target is a custom element name, the <ph id=\"ph1\">`FC_NsPrefix`</ph> and <ph id=\"ph2\">`FC_NsUri`</ph> attributes must also be specified.","pos":[9740,9849],"source":"When the target is a custom element name, the `FC_NsPrefix` and `FC_NsUri` attributes must also be specified."},{"content":"<ph id=\"ph1\">`SyndicationPublished:`</ph> The <ph id=\"ph2\">`atom:published`</ph> element.","pos":[9862,9915],"source":"`SyndicationPublished:` The `atom:published` element."},{"content":"<ph id=\"ph1\">`SyndicationRights:`</ph> The <ph id=\"ph2\">`atom:rights`</ph> element.","pos":[9928,9975],"source":"`SyndicationRights:` The `atom:rights` element."},{"content":"<ph id=\"ph1\">`SyndicationSummary:`</ph> The <ph id=\"ph2\">`atom:summary`</ph> element.","pos":[9988,10037],"source":"`SyndicationSummary:` The `atom:summary` element."},{"content":"<ph id=\"ph1\">`SyndicationTitle:`</ph> The <ph id=\"ph2\">`atom:title`</ph> element.","pos":[10050,10095],"source":"`SyndicationTitle:` The `atom:title` element."},{"content":"<ph id=\"ph1\">`SyndicationUpdated:`</ph> The <ph id=\"ph2\">`atom:updated`</ph> element.","pos":[10108,10157],"source":"`SyndicationUpdated:` The `atom:updated` element."},{"content":"These keywords are equivalent to the values of the <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.SyndicationItemProperty&gt;</ph> enumeration used with the reflection provider.","pos":[10170,10326],"source":"These keywords are equivalent to the values of the <xref:System.Data.Services.Common.SyndicationItemProperty> enumeration used with the reflection provider."},{"pos":[10335,10509],"content":"[!NOTE]\n Attribute names and values are case-sensitive. Attributes can be applied either to the `EntityType` element or to one or more `Property` elements, but not to both.","leadings":["","> "],"nodes":[{"content":"Attribute names and values are case-sensitive. Attributes can be applied either to the `EntityType` element or to one or more `Property` elements, but not to both.","pos":[9,172],"nodes":[{"content":"Attribute names and values are case-sensitive.","pos":[0,46]},{"content":"Attributes can be applied either to the <ph id=\"ph1\">`EntityType`</ph> element or to one or more <ph id=\"ph2\">`Property`</ph> elements, but not to both.","pos":[47,163],"source":" Attributes can be applied either to the `EntityType` element or to one or more `Property` elements, but not to both."}]}]},{"pos":[10518,10564],"content":"Customizing Feeds with the Reflection Provider","linkify":"Customizing Feeds with the Reflection Provider","nodes":[{"content":"Customizing Feeds with the Reflection Provider","pos":[0,46]}]},{"content":"To customize feeds for a data model that was implemented by using the reflection provider, add one or more instances of the <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.EntityPropertyMappingAttribute&gt;</ph> attribute to the classes that represent entity types in the data model.","pos":[10568,10829],"source":"To customize feeds for a data model that was implemented by using the reflection provider, add one or more instances of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> attribute to the classes that represent entity types in the data model."},{"content":"The properties of the <ph id=\"ph1\">&lt;xref:System.Data.Services.Common.EntityPropertyMappingAttribute&gt;</ph> class correspond to the feed customization attributes that are described in the previous section.","pos":[10830,11015],"source":" The properties of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> class correspond to the feed customization attributes that are described in the previous section."},{"content":"The following is an example of the declaration of the <ph id=\"ph1\">`Order`</ph> type, with custom feed mapping defined for both properties.","pos":[11016,11137],"source":" The following is an example of the declaration of the `Order` type, with custom feed mapping defined for both properties."},{"pos":[11145,11363],"content":"[!NOTE]\n The data model for this example is defined in the topic [How to: Create a Data Service Using the Reflection Provider](../../../../docs/framework/data/wcf/create-a-data-service-using-rp-wcf-data-services.md).","leadings":["","> "],"nodes":[{"content":"The data model for this example is defined in the topic <bpt id=\"p1\">[</bpt>How to: Create a Data Service Using the Reflection Provider<ept id=\"p1\">](../../../../docs/framework/data/wcf/create-a-data-service-using-rp-wcf-data-services.md)</ept>.","pos":[9,216],"source":"The data model for this example is defined in the topic [How to: Create a Data Service Using the Reflection Provider](../../../../docs/framework/data/wcf/create-a-data-service-using-rp-wcf-data-services.md)."}]},{"content":"These attributes produce the following customized data feed for the <ph id=\"ph1\">`Orders`</ph> entity set.","pos":[11708,11796],"source":"These attributes produce the following customized data feed for the `Orders` entity set."},{"content":"In this customized feed, the <ph id=\"ph1\">`OrderId`</ph> property value displays only in the <ph id=\"ph2\">`title`</ph> element of the <ph id=\"ph3\">`entry`</ph> and the <ph id=\"ph4\">`Customer`</ph> property value displays both in the <ph id=\"ph5\">`author`</ph> element and as the <ph id=\"ph6\">`Customer`</ph> property element:","pos":[11797,12014],"source":" In this customized feed, the `OrderId` property value displays only in the `title` element of the `entry` and the `Customer` property value displays both in the `author` element and as the `Customer` property element:"},{"pos":[12204,12395],"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Customize Feeds with the Reflection Provider<ept id=\"p1\">](../../../../docs/framework/data/wcf/how-to-customize-feeds-with-the-reflection-provider-wcf-data-services.md)</ept>.","source":"For more information, see [How to: Customize Feeds with the Reflection Provider](../../../../docs/framework/data/wcf/how-to-customize-feeds-with-the-reflection-provider-wcf-data-services.md)."},{"pos":[12404,12457],"content":"Customizing Feeds with a Custom Data Service Provider","linkify":"Customizing Feeds with a Custom Data Service Provider","nodes":[{"content":"Customizing Feeds with a Custom Data Service Provider","pos":[0,53]}]},{"content":"Feed customization for a data model defined by using a custom data service provider is defined for a resource type by calling the <ph id=\"ph1\">&lt;xref:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute%2A&gt;</ph> on the <ph id=\"ph2\">&lt;xref:System.Data.Services.Providers.ResourceType&gt;</ph> that represents an entity type in the data model.","pos":[12461,12786],"source":"Feed customization for a data model defined by using a custom data service provider is defined for a resource type by calling the <xref:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute%2A> on the <xref:System.Data.Services.Providers.ResourceType> that represents an entity type in the data model."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Custom Data Service Providers<ept id=\"p1\">](../../../../docs/framework/data/wcf/custom-data-service-providers-wcf-data-services.md)</ept>.","pos":[12787,12933],"source":" For more information, see [Custom Data Service Providers](../../../../docs/framework/data/wcf/custom-data-service-providers-wcf-data-services.md)."},{"pos":[12942,12964],"content":"Consuming Custom Feeds","linkify":"Consuming Custom Feeds","nodes":[{"content":"Consuming Custom Feeds","pos":[0,22]}]},{"content":"When your application directly consumes an <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> feed, it must be able to process any customized elements and attributes in the returned feed.","pos":[12968,13170],"source":"When your application directly consumes an [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] feed, it must be able to process any customized elements and attributes in the returned feed."},{"content":"When you have implemented custom feeds in your data model, regardless of the data service provider, the <ph id=\"ph1\">`$metadata`</ph> endpoint returns custom feed information as custom feed attributes in the CSDL returned by the data service.","pos":[13171,13395],"source":" When you have implemented custom feeds in your data model, regardless of the data service provider, the `$metadata` endpoint returns custom feed information as custom feed attributes in the CSDL returned by the data service."},{"content":"When you use the <bpt id=\"p1\">**</bpt>Add Service Reference<ept id=\"p1\">**</ept> dialog or the <bpt id=\"p2\">[</bpt>datasvcutil.exe<ept id=\"p2\">](../../../../docs/framework/data/wcf/wcf-data-service-client-utility-datasvcutil-exe.md)</ept> tool to generate client data service classes, the customized feed attributes are used to guarantee that requests and responses to the data service are handled correctly.","pos":[13396,13728],"source":" When you use the **Add Service Reference** dialog or the [datasvcutil.exe](../../../../docs/framework/data/wcf/wcf-data-service-client-utility-datasvcutil-exe.md) tool to generate client data service classes, the customized feed attributes are used to guarantee that requests and responses to the data service are handled correctly."},{"pos":[13737,13770],"content":"Feed Customization Considerations","linkify":"Feed Customization Considerations","nodes":[{"content":"Feed Customization Considerations","pos":[0,33]}]},{"content":"You should consider the following when defining custom feed mappings.","pos":[13774,13843]},{"content":"The <ph id=\"ph1\">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client treats mapped elements in a feed as empty when they contain only white space.","pos":[13853,14001],"source":"The [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] client treats mapped elements in a feed as empty when they contain only white space."},{"content":"Because of this, mapped elements that contain only white space are not materialized on the client with the same white space.","pos":[14002,14126]},{"content":"To preserve this white space on the client, you must set the value of <ph id=\"ph1\">`KeepInContext`</ph> to <ph id=\"ph2\">`true`</ph> in the feed mapping attribute.","pos":[14127,14253],"source":" To preserve this white space on the client, you must set the value of `KeepInContext` to `true` in the feed mapping attribute."},{"pos":[14262,14285],"content":"Versioning Requirements","linkify":"Versioning Requirements","nodes":[{"content":"Versioning Requirements","pos":[0,23]}]},{"pos":[14289,14425],"content":"Feed customization has the following <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> protocol versioning requirements:","source":"Feed customization has the following [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] protocol versioning requirements:"},{"pos":[14435,14622],"content":"Feed customization requires that both the client and data service support version 2.0 of the <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> protocol and later versions.","source":"Feed customization requires that both the client and data service support version 2.0 of the [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] protocol and later versions."},{"pos":[14629,14763],"content":"For more information, see <bpt id=\"p1\">[</bpt>Data Service Versioning<ept id=\"p1\">](../../../../docs/framework/data/wcf/data-service-versioning-wcf-data-services.md)</ept>.","source":"For more information, see [Data Service Versioning](../../../../docs/framework/data/wcf/data-service-versioning-wcf-data-services.md)."},{"pos":[14772,14780],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[14784,14883],"content":"<bpt id=\"p1\">[</bpt>Reflection Provider<ept id=\"p1\">](../../../../docs/framework/data/wcf/reflection-provider-wcf-data-services.md)</ept>","source":"[Reflection Provider](../../../../docs/framework/data/wcf/reflection-provider-wcf-data-services.md)"},{"pos":[14886,14997],"content":"<bpt id=\"p1\">[</bpt>Entity Framework Provider<ept id=\"p1\">](../../../../docs/framework/data/wcf/entity-framework-provider-wcf-data-services.md)</ept>","source":"[Entity Framework Provider](../../../../docs/framework/data/wcf/entity-framework-provider-wcf-data-services.md)"}]}