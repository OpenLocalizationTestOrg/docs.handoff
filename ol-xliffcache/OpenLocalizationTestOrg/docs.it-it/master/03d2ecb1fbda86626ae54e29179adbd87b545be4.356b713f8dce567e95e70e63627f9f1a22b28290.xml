{"content":"---\ntitle: \"How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 74c06201-0b1b-4b5e-b3ac-0092980614e6\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#)\nSometimes you want to find the immediate preceding sibling to a node. Due to the difference in the semantics of positional predicates for the preceding sibling axes in XPath as opposed to [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)], this is one of the more interesting comparisons.  \n  \n## Example  \n In this example, the [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] query uses the <xref:System.Linq.Enumerable.Last%2A> operator to find the last node in the collection returned by <xref:System.Xml.Linq.XNode.ElementsBeforeSelf%2A>. By contrast, the XPath expression uses a predicate with a value of 1 to find the immediately preceding element.  \n  \n```csharp  \nXElement root = XElement.Parse(  \n    @\"<Root>  \n    <Child1/>  \n    <Child2/>  \n    <Child3/>  \n    <Child4/>  \n</Root>\");  \nXElement child4 = root.Element(\"Child4\");  \n  \n// LINQ to XML query  \nXElement el1 =  \n    child4  \n    .ElementsBeforeSelf()  \n    .Last();  \n  \n// XPath expression  \nXElement el2 =  \n    ((IEnumerable)child4  \n                 .XPathEvaluate(\"preceding-sibling::*[1]\"))  \n                 .Cast<XElement>()  \n                 .First();  \n  \nif (el1 == el2)  \n    Console.WriteLine(\"Results are identical\");  \nelse  \n    Console.WriteLine(\"Results differ\");  \nConsole.WriteLine(el1);  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \n<Child3 />  \n```  \n  \n## See Also  \n [LINQ to XML for XPath Users (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)","nodes":[{"pos":[12,98],"content":"How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#) | Microsoft Docs","pos":[0,86]}]},{"pos":[383,452],"content":"How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#)","linkify":"How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#)","nodes":[{"content":"How to: Find the Immediate Preceding Sibling (XPath-LINQ to XML) (C#)","pos":[0,69]}]},{"content":"Sometimes you want to find the immediate preceding sibling to a node.","pos":[453,522]},{"content":"Due to the difference in the semantics of positional predicates for the preceding sibling axes in XPath as opposed to <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>, this is one of the more interesting comparisons.","pos":[523,793],"source":" Due to the difference in the semantics of positional predicates for the preceding sibling axes in XPath as opposed to [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)], this is one of the more interesting comparisons."},{"pos":[802,809],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, the <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> query uses the <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.Last%2A&gt;</ph> operator to find the last node in the collection returned by <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XNode.ElementsBeforeSelf%2A&gt;</ph>.","pos":[813,1102],"source":"In this example, the [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] query uses the <xref:System.Linq.Enumerable.Last%2A> operator to find the last node in the collection returned by <xref:System.Xml.Linq.XNode.ElementsBeforeSelf%2A>."},{"content":"By contrast, the XPath expression uses a predicate with a value of 1 to find the immediately preceding element.","pos":[1103,1214]},{"content":"This example produces the following output:","pos":[1855,1898]},{"pos":[1959,1967],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1971,2088],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}