{"content":"---\ntitle: \"FunctionEnter3WithInfo Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"FunctionEnter3WithInfo\"\napi_location: \n  - \"mscorwks.cll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"FunctionEnter3WithInfo\"\nhelpviewer_keywords: \n  - \"FunctionEnter3WithInfo function [.NET Framework profiling]\"\nms.assetid: 277c3344-d0cb-431e-beae-eb1eeeba8eea\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# FunctionEnter3WithInfo Function\nNotifies the profiler that control is being passed to a function, and provides a handle that can be passed to the [ICorProfilerInfo3::GetFunctionEnter3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md) to retrieve the stack frame and function arguments.  \n  \n## Syntax  \n  \n```  \nvoid __stdcall FunctionEnter3WithInfo(  \n               [in] FunctionIDOrClientID functionIDOrClientID,  \n               [in] COR_PRF_ELT_INFO eltInfo);  \n```  \n  \n## Parameters  \n `functionIDOrClientID`  \n [in] The identifier of the function to which control is passed.  \n  \n `eltInfo`  \n [in] An opaque handle that represents information about a given stack frame. This handle is valid only during the callback to which it is passed.  \n  \n## Remarks  \n The `FunctionEnter3WithInfo` callback method notifies the profiler as functions are called, and enables the profiler to use the [ICorProfilerInfo3::GetFunctionEnter3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md) to inspect argument values. To access argument information, the `COR_PRF_ENABLE_FUNCTION_ARGS` flag has to be set. The profiler can use the [ICorProfilerInfo::SetEventMask method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) to set the event flags, and then use the [ICorProfilerInfo3::SetEnterLeaveFunctionHooks3WithInfo method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md) to register your implementation of this function.  \n  \n The `FunctionEnter3WithInfo` function is a callback; you must implement it. The implementation must use the `__declspec(naked)` storage-class attribute.  \n  \n The execution engine does not save any registers before calling this function.  \n  \n-   On entry, you must save all registers that you use, including those in the floating-point unit (FPU).  \n  \n-   On exit, you must restore the stack by popping off all the parameters that were pushed by its caller.  \n  \n The implementation of `FunctionEnter3WithInfo` should not block, because it will delay garbage collection. The implementation should not attempt a garbage collection, because the stack may not be in a garbage collection-friendly state. If a garbage collection is attempted, the runtime will block until `FunctionEnter3WithInfo` returns.  \n  \n The `FunctionEnter3WithInfo` function must not call into managed code or cause a managed memory allocation in any way.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [GetFunctionEnter3Info](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md)\n- [FunctionEnter3](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md)\n- [FunctionLeave3](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md)\n- [Profiling Global Static Functions](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)\n","nodes":[{"pos":[4,403],"embed":true,"restype":"x-metadata","content":"title: \"FunctionEnter3WithInfo Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"FunctionEnter3WithInfo\"\napi_location: \n  - \"mscorwks.cll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"FunctionEnter3WithInfo\"\nhelpviewer_keywords: \n  - \"FunctionEnter3WithInfo function [.NET Framework profiling]\"\nms.assetid: 277c3344-d0cb-431e-beae-eb1eeeba8eea\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"FunctionEnter3WithInfo Function","nodes":[{"pos":[0,31],"content":"FunctionEnter3WithInfo Function","nodes":[{"content":"FunctionEnter3WithInfo Function","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[410,441],"content":"FunctionEnter3WithInfo Function","linkify":"FunctionEnter3WithInfo Function","nodes":[{"content":"FunctionEnter3WithInfo Function","pos":[0,31]}]},{"pos":[442,759],"content":"Notifies the profiler that control is being passed to a function, and provides a handle that can be passed to the <bpt id=\"p1\">[</bpt>ICorProfilerInfo3::GetFunctionEnter3Info method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md)</ept> to retrieve the stack frame and function arguments.","source":"Notifies the profiler that control is being passed to a function, and provides a handle that can be passed to the [ICorProfilerInfo3::GetFunctionEnter3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md) to retrieve the stack frame and function arguments."},{"pos":[768,774],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[953,963],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The identifier of the function to which control is passed.","pos":[993,1056]},{"content":"[in] An opaque handle that represents information about a given stack frame.","pos":[1076,1152]},{"content":"This handle is valid only during the callback to which it is passed.","pos":[1153,1221]},{"pos":[1230,1237],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> callback method notifies the profiler as functions are called, and enables the profiler to use the <bpt id=\"p1\">[</bpt>ICorProfilerInfo3::GetFunctionEnter3Info method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md)</ept> to inspect argument values.","pos":[1241,1548],"source":"The `FunctionEnter3WithInfo` callback method notifies the profiler as functions are called, and enables the profiler to use the [ICorProfilerInfo3::GetFunctionEnter3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md) to inspect argument values."},{"content":"To access argument information, the <ph id=\"ph1\">`COR_PRF_ENABLE_FUNCTION_ARGS`</ph> flag has to be set.","pos":[1549,1635],"source":" To access argument information, the `COR_PRF_ENABLE_FUNCTION_ARGS` flag has to be set."},{"content":"The profiler can use the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetEventMask method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md)</ept> to set the event flags, and then use the <bpt id=\"p2\">[</bpt>ICorProfilerInfo3::SetEnterLeaveFunctionHooks3WithInfo method<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md)</ept> to register your implementation of this function.","pos":[1636,2063],"source":" The profiler can use the [ICorProfilerInfo::SetEventMask method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) to set the event flags, and then use the [ICorProfilerInfo3::SetEnterLeaveFunctionHooks3WithInfo method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md) to register your implementation of this function."},{"content":"The <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> function is a callback; you must implement it.","pos":[2070,2145],"source":"The `FunctionEnter3WithInfo` function is a callback; you must implement it."},{"content":"The implementation must use the <ph id=\"ph1\">`__declspec(naked)`</ph> storage-class attribute.","pos":[2146,2222],"source":" The implementation must use the `__declspec(naked)` storage-class attribute."},{"content":"The execution engine does not save any registers before calling this function.","pos":[2229,2307]},{"content":"On entry, you must save all registers that you use, including those in the floating-point unit (FPU).","pos":[2317,2418]},{"content":"On exit, you must restore the stack by popping off all the parameters that were pushed by its caller.","pos":[2428,2529]},{"content":"The implementation of <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> should not block, because it will delay garbage collection.","pos":[2536,2642],"source":"The implementation of `FunctionEnter3WithInfo` should not block, because it will delay garbage collection."},{"content":"The implementation should not attempt a garbage collection, because the stack may not be in a garbage collection-friendly state.","pos":[2643,2771]},{"content":"If a garbage collection is attempted, the runtime will block until <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> returns.","pos":[2772,2872],"source":" If a garbage collection is attempted, the runtime will block until `FunctionEnter3WithInfo` returns."},{"pos":[2879,2997],"content":"The <ph id=\"ph1\">`FunctionEnter3WithInfo`</ph> function must not call into managed code or cause a managed memory allocation in any way.","source":"The `FunctionEnter3WithInfo` function must not call into managed code or cause a managed memory allocation in any way."},{"pos":[3006,3018],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3022,3126],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3133,3156],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl","source":"**Header:** CorProf.idl"},{"pos":[3163,3188],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3195,3303],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3312,3320],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3324,3449],"content":"<bpt id=\"p1\">[</bpt>GetFunctionEnter3Info<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md)</ept>","source":"[GetFunctionEnter3Info](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctionenter3info-method.md)"},{"pos":[3452,3547],"content":"<bpt id=\"p1\">[</bpt>FunctionEnter3<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md)</ept>","source":"[FunctionEnter3](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md)"},{"pos":[3550,3645],"content":"<bpt id=\"p1\">[</bpt>FunctionLeave3<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md)</ept>","source":"[FunctionLeave3](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md)"},{"pos":[3648,3772],"content":"<bpt id=\"p1\">[</bpt>Profiling Global Static Functions<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)</ept>","source":"[Profiling Global Static Functions](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)"}]}