<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="setting-the-use-and-style-properties.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64cf64cf5d53ef0dfb4bc38cf86f91c7acd2e5af</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\setting-the-use-and-style-properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7320f9690dcb80f288e3e1a7985e3a9df9b32a21</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb0af3f4e00efda397b60e12a60d98d50246602b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Setting the Use and Style properties - WCF samples</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Setting the Use and Style Properties</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to use the Use and Style properties on the <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.DataContractFormatAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These properties affect how messages are formatted.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, the message body is formatted with the style set to <ph id="ph1">&lt;xref:System.ServiceModel.OperationFormatStyle.Document&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These settings can be specified at either the service contract level or the operation contract level.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The setup procedure and build instructions for this sample are located at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.DataContractFormatAttribute.Style%2A&gt;</ph> style property determines how the WSDL metadata for the service is formatted.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">&lt;xref:System.ServiceModel.OperationFormatStyle.Document&gt;</ph>, and <ph id="ph2">&lt;xref:System.ServiceModel.OperationFormatStyle.Rpc&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>RPC means that the WSDL representation of messages exchanged for an operation contains parameters as if it were a remote procedure call.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following is an example.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Setting the style to <ph id="ph1">&lt;xref:System.ServiceModel.OperationFormatStyle.Document&gt;</ph> means that the WSDL representation contains a single element that represents the document that is exchanged for an operation as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Use%2A&gt;</ph> property determines the format of the message.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">&lt;xref:System.ServiceModel.OperationFormatUse.Literal&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationFormatUse.Encoded&gt;</ph>; the default value is <ph id="ph3">&lt;xref:System.ServiceModel.OperationFormatUse.Literal&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Literal means that the message is a literal instance of the schema in the WSDL as shown in the following Document/ Literal example.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Encoded means that the schemas in the WSDL are abstract specifications that are encoded according to the rules found in SOAP 1.1 section 5.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following is an RPC/Encoded example.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The WS-I Basic Profile 1.0 prohibits the use of <ph id="ph1">&lt;xref:System.ServiceModel.OperationFormatUse.Encoded&gt;</ph> and you should only use it when required by legacy services.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Encoded`</ph> message format is only available when using the XmlSerializer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To allow you to see the messages being sent and received, this sample is based on the <bpt id="p1">[</bpt>Tracing and Message Logging<ept id="p1">](tracing-and-message-logging.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The service configuration and source code have been modified to enable and utilize tracing and message logging.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> has been configured without security, so the logged messages can be viewed in an unencrypted format.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The resulting trace logs (System.ServiceModel.e2e and Message.log) should be viewed by using the <bpt id="p1">[</bpt>Service Trace Viewer Tool (SvcTraceViewer.exe)<ept id="p1">](../service-trace-viewer-tool-svctraceviewer-exe.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The traces are configured to be created in the C:\LOGS folder.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create the folder before running the sample.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To view message contents in the Trace Viewer tool, select <bpt id="p1">**</bpt>Messages<ept id="p1">**</ept> in both the left and the right panes of the tool.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code shows the service contract with the <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Use%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.ServiceModel.OperationFormatUse&gt;</ph> and the format of the message body changed from the default <ph id="ph3">&lt;xref:System.ServiceModel.OperationFormatStyle&gt;</ph> to <ph id="ph4">&lt;xref:System.ServiceModel.OperationFormatStyle.Document&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To see the difference between the different <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Use%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Style%2A&gt;</ph> settings, modify them in the service, regenerate the client, run the sample, and examine the c:\logs\message.logs file with the Service Trace Viewer tool.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Also observe the impact on the metadata by viewing <ph id="ph1">`http://localhost/ServiceModelSamples/service.svc?wsdl`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The metadata for services is typically broken up into multiple pages.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The main wsdl page contains the WSDL bindings, but view <ph id="ph1">`http://localhost/ServiceModelSamples/service.svc?wsdl=wsdl0`</ph> to observe the message definitions.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Ensure that you have performed the <bpt id="p1">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id="p1">](one-time-setup-procedure-for-the-wcf-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create a C:\LOGS directory for logging messages.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Give the user Network Service write permissions for this directory.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id="p1">[</bpt>Building the Windows Communication Foundation Samples<ept id="p1">](building-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id="p1">[</bpt>Running the Windows Communication Foundation Samples<ept id="p1">](running-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id="ph1">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>