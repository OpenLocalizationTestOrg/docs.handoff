{"content":"---\ntitle: \"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)\"\nms.date: 07/20/2015\nms.assetid: 7c04d42f-4a78-42c8-9ec8-57ef18fe13a9\n---\n# How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)\nThe following example shows how to sort lines of structured text, such as comma-separated values, by any field in the line. The field may be dynamically specified at runtime. Assume that the fields in scores.csv represent a student's ID number, followed by a series of four test scores.  \n  \n### To create a file that contains data  \n  \n1.  Copy the scores.csv data from the topic [How to: Join Content from Dissimilar Files (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md) and save it to your solution folder.  \n  \n## Example  \n  \n```csharp  \npublic class SortLines  \n{  \n    static void Main()  \n    {  \n        // Create an IEnumerable data source  \n        string[] scores = System.IO.File.ReadAllLines(@\"../../../scores.csv\");  \n  \n        // Change this to any value from 0 to 4.  \n        int sortField = 1;  \n  \n        Console.WriteLine(\"Sorted highest to lowest by field [{0}]:\", sortField);  \n  \n        // Demonstrates how to return query from a method.  \n        // The query is executed here.  \n        foreach (string str in RunQuery(scores, sortField))  \n        {  \n            Console.WriteLine(str);  \n        }  \n  \n        // Keep the console window open in debug mode.  \n        Console.WriteLine(\"Press any key to exit\");  \n        Console.ReadKey();  \n    }  \n  \n    // Returns the query variable, not query results!  \n    static IEnumerable<string> RunQuery(IEnumerable<string> source, int num)  \n    {  \n        // Split the string and sort on field[num]  \n        var scoreQuery = from line in source  \n                         let fields = line.Split(',')  \n                         orderby fields[num] descending  \n                         select line;  \n  \n        return scoreQuery;  \n    }  \n}  \n/* Output (if sortField == 1):  \n   Sorted highest to lowest by field [1]:  \n    116, 99, 86, 90, 94  \n    120, 99, 82, 81, 79  \n    111, 97, 92, 81, 60  \n    114, 97, 89, 85, 82  \n    121, 96, 85, 91, 60  \n    122, 94, 92, 91, 91  \n    117, 93, 92, 80, 87  \n    118, 92, 90, 83, 78  \n    113, 88, 94, 65, 91  \n    112, 75, 84, 91, 39  \n    119, 68, 79, 88, 92  \n    115, 35, 72, 91, 70  \n */  \n```  \n  \n This example also demonstrates how to return a query variable from a method.  \n  \n## Compiling the Code  \n\n Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces.  \n  \n## See also\n\n- [LINQ and Strings (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)\n","nodes":[{"pos":[4,147],"embed":true,"restype":"x-metadata","content":"title: \"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)\"\nms.date: 07/20/2015\nms.assetid: 7c04d42f-4a78-42c8-9ec8-57ef18fe13a9","nodes":[{"content":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","nodes":[{"pos":[0,65],"content":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","nodes":[{"content":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","pos":[0,65]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[154,219],"content":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","linkify":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","nodes":[{"content":"How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)","pos":[0,65]}]},{"content":"The following example shows how to sort lines of structured text, such as comma-separated values, by any field in the line.","pos":[220,343]},{"content":"The field may be dynamically specified at runtime.","pos":[344,394]},{"content":"Assume that the fields in scores.csv represent a student's ID number, followed by a series of four test scores.","pos":[395,506]},{"pos":[516,551],"content":"To create a file that contains data","linkify":"To create a file that contains data","nodes":[{"content":"To create a file that contains data","pos":[0,35]}]},{"pos":[561,796],"content":"Copy the scores.csv data from the topic <bpt id=\"p1\">[</bpt>How to: Join Content from Dissimilar Files (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md)</ept> and save it to your solution folder.","source":"Copy the scores.csv data from the topic [How to: Join Content from Dissimilar Files (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md) and save it to your solution folder."},{"pos":[805,812],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example also demonstrates how to return a query variable from a method.","pos":[2419,2495]},{"pos":[2504,2522],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[2527,2704],"content":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and <ph id=\"ph1\">`using`</ph> directives for the System.Linq and System.IO namespaces.","source":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces."},{"pos":[2713,2721],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2725,2820],"content":"<bpt id=\"p1\">[</bpt>LINQ and Strings (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)</ept>","source":"[LINQ and Strings (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)"}]}