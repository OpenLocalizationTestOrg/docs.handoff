<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-decrypt-xml-elements-with-symmetric-keys.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c000fdb52e30e135fc4cae28ce1146677aec9da8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\security\how-to-decrypt-xml-elements-with-symmetric-keys.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fbe58ce578ce9914ab8a6b977476e4d53d5c2f5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">716b3359fc0badb97599f5b43cd646580a863f04</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Decrypt XML Elements with Symmetric Keys | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Decrypt XML Elements with Symmetric Keys</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use the classes in the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml&gt;</ph> namespace to encrypt an element within an XML document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XML Encryption allows you to store or transport sensitive XML, without worrying about the data being easily read.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This code example decrypts an XML element using the Advanced Encryption Standard (AES) algorithm, also known as Rijndael.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For information about how to encrypt an XML element using this procedure, see <bpt id="p1">[</bpt>How to: Encrypt XML Elements with Symmetric Keys<ept id="p1">](../../../docs/standard/security/how-to-encrypt-xml-elements-with-symmetric-keys.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you use a symmetric algorithm like AES to encrypt XML data, you must use the same key to encrypt and decrypt the XML data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The example in this procedure assumes that the encrypted XML was encrypted using the same key, and that the encrypting and decrypting parties agree on the algorithm and key to use.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example does not store or encrypt the AES key within the encrypted XML.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example is appropriate for situations where a single application needs to encrypt data based on a session key stored in memory, or based on a cryptographically strong key derived from a password.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For situations where two or more applications need to share encrypted XML data, consider using an encryption scheme based on an asymmetric algorithm or an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To decrypt an XML element with a symmetric key</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Encrypt an XML element with the previously generated key using the techniques described in <bpt id="p1">[</bpt>How to: Encrypt XML Elements with Symmetric Keys<ept id="p1">](../../../docs/standard/security/how-to-encrypt-xml-elements-with-symmetric-keys.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Find the &lt;<ph id="ph1">`EncryptedData`</ph>&gt; element (defined by the XML Encryption standard) in an <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> object that contains the encrypted XML and create a new <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> object to represent that element.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create an <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt;</ph> object by loading the raw XML data from the previously created <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt;</ph> object and use it to decrypt the XML data using the same key that was used for encryption.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Replace the encrypted element with the newly decrypted plaintext element within the XML document.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example assumes that a file named <ph id="ph1">`"test.xml"`</ph> exists in the same directory as the compiled program.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It also assumes that <ph id="ph1">`"test.xml"`</ph> contains a <ph id="ph2">`"creditcard"`</ph> element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can place the following XML into a file called <ph id="ph1">`test.xml`</ph> and use it with this example.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To compile this example, you need to include a reference to <ph id="ph1">`System.Security.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Include the following namespaces: <ph id="ph1">&lt;xref:System.Xml&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Never store a cryptographic key in plaintext or transfer a key between machines in plaintext.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you are done using a symmetric cryptographic key, clear it from memory by setting each byte to zero or by calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A&gt;</ph> method of the managed cryptography class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml&gt;</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Encrypt XML Elements with Symmetric Keys<ept id="p1">](../../../docs/standard/security/how-to-encrypt-xml-elements-with-symmetric-keys.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>