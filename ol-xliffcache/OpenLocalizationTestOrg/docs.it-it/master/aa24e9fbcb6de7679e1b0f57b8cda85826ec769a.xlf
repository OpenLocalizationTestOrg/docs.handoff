<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa24e9fbcb6de7679e1b0f57b8cda85826ec769a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\reflection-and-codedom\toc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">p1-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecea541ed67a46b54d4b76d6e8b88b564a5bf0a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04359522aca09ab4b87b130a365abe1cb1e6e497</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dynamic Programming<ept id="p1">](index.md)</ept></source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reflection<ept id="p1">](reflection.md)</ept></source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Viewing Type Information<ept id="p1">](viewing-type-information.md)</ept></source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reflection and Generic Types<ept id="p1">](reflection-and-generic-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Examine and Instantiate Generic Types with Reflection<ept id="p1">](how-to-examine-and-instantiate-generic-types-with-reflection.md)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](security-considerations-for-reflection.md)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dynamically Loading and Using Types<ept id="p1">](dynamically-loading-and-using-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id="p1">](how-to-load-assemblies-into-the-reflection-only-context.md)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Accessing Custom Attributes<ept id="p1">](accessing-custom-attributes.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Specifying Fully Qualified Type Names<ept id="p1">](specifying-fully-qualified-type-names.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Hook Up a Delegate Using Reflection<ept id="p1">](how-to-hook-up-a-delegate-using-reflection.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reflection in the .NET Framework for Windows Store Apps<ept id="p1">](reflection-for-windows-store-apps.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Emitting Dynamic Methods and Assemblies<ept id="p1">](emitting-dynamic-methods-and-assemblies.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Issues in Reflection Emit<ept id="p1">](security-issues-in-reflection-emit.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Emitting Code in Partial Trust Scenarios<ept id="p1">](walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define and Execute Dynamic Methods<ept id="p1">](how-to-define-and-execute-dynamic-methods.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Generic Type with Reflection Emit<ept id="p1">](how-to-define-a-generic-type-with-reflection-emit.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Generic Method with Reflection Emit<ept id="p1">](how-to-define-a-generic-method-with-reflection-emit.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dynamic Language Runtime Overview<ept id="p1">](dynamic-language-runtime-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dynamic Source Code Generation and Compilation<ept id="p1">](dynamic-source-code-generation-and-compilation.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using the CodeDOM<ept id="p1">](using-the-codedom.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generating and Compiling Source Code from a CodeDOM Graph<ept id="p1">](generating-and-compiling-source-code-from-a-codedom-graph.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create an XML Documentation File Using CodeDOM<ept id="p1">](how-to-create-an-xml-documentation-file-using-codedom.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Class Using CodeDOM<ept id="p1">](how-to-create-a-class-using-codedom.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>