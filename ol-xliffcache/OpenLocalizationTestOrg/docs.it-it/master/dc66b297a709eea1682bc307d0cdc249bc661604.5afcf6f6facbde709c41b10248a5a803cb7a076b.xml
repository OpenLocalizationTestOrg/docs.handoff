{"content":"---\ntitle: \"into (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"into_CSharpKeyword\"\n  - \"into\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"into keyword [C#]\"\nms.assetid: 81ec62c1-f0b1-4755-8a31-959876e77f65\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# into (C# Reference)\nThe `into` contextual keyword can be used to create a temporary identifier to store the results of a [group](../../../csharp/language-reference/keywords/group-clause.md), [join](../../../csharp/language-reference/keywords/join-clause.md) or [select](../../../csharp/language-reference/keywords/select-clause.md) clause into a new identifier. This identifier can itself be a generator for additional query commands. When used in a `group` or `select` clause, the use of the new identifier is sometimes referred to as a *continuation*.  \n  \n## Example  \n The following example shows the use of the `into` keyword to enable a temporary identifier `fruitGroup` which has an inferred type of `IGrouping`. By using the identifier, you can invoke the <xref:System.Linq.Enumerable.Count%2A> method on each group and select only those groups that contain two or more words.  \n  \n [!code-cs[cscsrefQueryKeywords#18](../../../csharp/language-reference/keywords/codesnippet/CSharp/into_1.cs)]  \n  \n The use of `into` in a `group` clause is only necessary when you want to perform additional query operations on each group. For more information, see [group clause](../../../csharp/language-reference/keywords/group-clause.md).  \n  \n For an example of the use of `into` in a `join` clause, see [join clause](../../../csharp/language-reference/keywords/join-clause.md).  \n  \n## See Also  \n [Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md)   \n [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)   \n [group clause](../../../csharp/language-reference/keywords/group-clause.md)","nodes":[{"pos":[4,560],"nodes":[{"content":"into (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,36],"content":"into (C# Reference) | Microsoft Docs","nodes":[{"content":"into (C# Reference) | Microsoft Docs","pos":[0,36]}]}],"pos":[6,45],"yaml":true}],"content":"title: \"into (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"into_CSharpKeyword\"\n  - \"into\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"into keyword [C#]\"\nms.assetid: 81ec62c1-f0b1-4755-8a31-959876e77f65\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[567,586],"content":"into (C# Reference)","linkify":"into (C# Reference)","nodes":[{"content":"into (C# Reference)","pos":[0,19]}]},{"content":"The <ph id=\"ph1\">`into`</ph> contextual keyword can be used to create a temporary identifier to store the results of a <bpt id=\"p1\">[</bpt>group<ept id=\"p1\">](../../../csharp/language-reference/keywords/group-clause.md)</ept>, <bpt id=\"p2\">[</bpt>join<ept id=\"p2\">](../../../csharp/language-reference/keywords/join-clause.md)</ept> or <bpt id=\"p3\">[</bpt>select<ept id=\"p3\">](../../../csharp/language-reference/keywords/select-clause.md)</ept> clause into a new identifier.","pos":[587,928],"source":"The `into` contextual keyword can be used to create a temporary identifier to store the results of a [group](../../../csharp/language-reference/keywords/group-clause.md), [join](../../../csharp/language-reference/keywords/join-clause.md) or [select](../../../csharp/language-reference/keywords/select-clause.md) clause into a new identifier."},{"content":"This identifier can itself be a generator for additional query commands.","pos":[929,1001]},{"content":"When used in a <ph id=\"ph1\">`group`</ph> or <ph id=\"ph2\">`select`</ph> clause, the use of the new identifier is sometimes referred to as a <bpt id=\"p1\">*</bpt>continuation<ept id=\"p1\">*</ept>.","pos":[1002,1120],"source":" When used in a `group` or `select` clause, the use of the new identifier is sometimes referred to as a *continuation*."},{"pos":[1129,1136],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the use of the <ph id=\"ph1\">`into`</ph> keyword to enable a temporary identifier <ph id=\"ph2\">`fruitGroup`</ph> which has an inferred type of <ph id=\"ph3\">`IGrouping`</ph>.","pos":[1140,1286],"source":"The following example shows the use of the `into` keyword to enable a temporary identifier `fruitGroup` which has an inferred type of `IGrouping`."},{"content":"By using the identifier, you can invoke the <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.Count%2A&gt;</ph> method on each group and select only those groups that contain two or more words.","pos":[1287,1451],"source":" By using the identifier, you can invoke the <xref:System.Linq.Enumerable.Count%2A> method on each group and select only those groups that contain two or more words."},{"pos":[1458,1567],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>cscsrefQueryKeywords#18<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/into_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[cscsrefQueryKeywords#18](../../../csharp/language-reference/keywords/codesnippet/CSharp/into_1.cs)]"},{"content":"The use of <ph id=\"ph1\">`into`</ph> in a <ph id=\"ph2\">`group`</ph> clause is only necessary when you want to perform additional query operations on each group.","pos":[1574,1697],"source":"The use of `into` in a `group` clause is only necessary when you want to perform additional query operations on each group."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](../../../csharp/language-reference/keywords/group-clause.md)</ept>.","pos":[1698,1800],"source":" For more information, see [group clause](../../../csharp/language-reference/keywords/group-clause.md)."},{"pos":[1807,1941],"content":"For an example of the use of <ph id=\"ph1\">`into`</ph> in a <ph id=\"ph2\">`join`</ph> clause, see <bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](../../../csharp/language-reference/keywords/join-clause.md)</ept>.","source":"For an example of the use of `into` in a `join` clause, see [join clause](../../../csharp/language-reference/keywords/join-clause.md)."},{"pos":[1950,1958],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Query Keywords (LINQ)<ept id=\"p1\">](../../../csharp/language-reference/keywords/query-keywords.md)</ept><ph id=\"ph1\"> </ph>","pos":[1962,2049],"source":"[Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2053,2145],"source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](../../../csharp/language-reference/keywords/group-clause.md)</ept>","pos":[2149,2224],"source":"[group clause](../../../csharp/language-reference/keywords/group-clause.md)"}]}