<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36a7155db90a0dec3c9fd1c80e5585a2cf6f10aa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\information-disclosure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6230b6b65c86af389d516db928411780af7d2e5e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a316df8656ab185ceb37258bbbe4a45abcc764c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Information Disclosure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Information Disclosure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Information disclosure enables an attacker to gain valuable information about a system.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Therefore, always consider what information you are revealing and whether it can be used by a malicious user.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following lists possible information disclosure attacks and provides mitigations for each.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Message Security and HTTP</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you are using message-level security over an HTTP transport layer, be aware that message-level security does not protect HTTP headers.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The only way to protect HTTP headers is to use HTTPS transport instead of HTTP.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>HTTPS transport causes the entire message, including the HTTP headers, to be encrypted using the Secure Sockets Layer (SSL) protocol.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Policy Information</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Keeping policy secure is important, especially in federation scenarios where sensitive issued-token requirements or token-issuer information is exposed in policy.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In these cases, the recommendation is to secure the federated service's policy endpoint to prevent attackers from obtaining information about the service, such as the type of claims to put in the issued token, or redirecting clients to malicious token issuers.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, an attacker could discover user name/password pairs by reconfiguring the federated trust chain to terminate in an issuer that executed a man-in-the-middle attack.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It is also recommended that federated clients who obtain their bindings through policy retrieval verify that they trust the issuers in the obtained federated trust chain.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> federation scenarios, see <bpt id="p1">[</bpt>Federation<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Memory Dumps Can Reveal Claim Information</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When an application fails, log files, such as those produced by Dr. Watson, can contain the claim information.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This information should not be exported to other entities, such as support teams; otherwise, the claim information that contains private data is also exported.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can mitigate this by not sending the log files to unknown entities.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Windows Server 2003<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=89160)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Endpoint Addresses</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An endpoint address contains the information needed to communicate with an endpoint.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>SOAP security must include the address in full in the security negotiation messages that are exchanged in order to negotiate a symmetric key between a client and a server.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Because security negotiation is a bootstrap process, the address headers cannot be encrypted during this process.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, the address should not contain any confidential data; otherwise, it leads to information disclosure attacks.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Certificates Transferred Unencrypted</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you use an X.509 certificate to authenticate a client, the certificate is transferred in the clear, inside the SOAP header.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Be aware of this as a potential personally identifiable information (PII) disclosure.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is not an issue for <ph id="ph1">`TransportWithMessageCredential`</ph> mode, where the entire message is encrypted with transport-level security.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Service References</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A service reference is a reference to another service.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, a service may pass a service reference to a client in the course of an operation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The service reference is also used with a <bpt id="p1">*</bpt>trust identity verifier<ept id="p1">*</ept>, an internal component that ensures the identity of the target principal before disclosing information such as application data or credentials to the target.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the remote trust identity cannot be verified or is incorrect, the sender should ensure that no data was disclosed that could compromise itself, the application, or the user.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Mitigations include the following:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Service references are assumed to be trustworthy.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Take care whenever transferring service reference instances to ensure that they have not been tampered with.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Some applications can present a user experience that allows interactive establishment of trust based on data in the service reference and trust data proven by the remote host.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides extensibility points for such a facility, but the user must implemented them.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>NTLM</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, in the Windows domain environment, Windows authentication uses the Kerberos protocol to authenticate and authorize users.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the Kerberos protocol cannot be used for some reason, NT LAN Manager (NTLM) is used as a fallback.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can disable this behavior by setting the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Issues to be aware of when allowing NTLM include:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>NTLM exposes the client user name.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the user name needs to be kept confidential, then set the <ph id="ph1">`AllowNTLM`</ph> property on the binding to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>NTLM does not provide server authentication.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Therefore, the client cannot ensure that it is communicating with the right service when you use NTLM as an authentication protocol.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specifying Client Credentials or Invalid Identity Forces NTLM Usage</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When creating a client, specifying client credentials without a domain name, or specifying an invalid server identity, causes NTLM to be used instead of the Kerberos protocol (if the <ph id="ph1">`AlllowNtlm`</ph> property is set to <ph id="ph2">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Because  NTLM does not do server authentication, information can potentially be disclosed.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, it is possible to specify Windows client credentials without a domain name, as shown in the following <ph id="ph1">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph> code.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The code does not specify a domain name, and therefore NTLM will be used.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the domain is specified, but an invalid service principal name is specified using the endpoint identity feature, then NTLM is used.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> how endpoint identity is specified, see <bpt id="p1">[</bpt>Service Identity and Authentication<ept id="p1">](../../../../docs/framework/wcf/feature-details/service-identity-and-authentication.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Considerations<ept id="p1">](../../../../docs/framework/wcf/feature-details/security-considerations-in-wcf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Elevation of Privilege<ept id="p1">](../../../../docs/framework/wcf/feature-details/elevation-of-privilege.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Denial of Service<ept id="p1">](../../../../docs/framework/wcf/feature-details/denial-of-service.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Tampering<ept id="p1">](../../../../docs/framework/wcf/feature-details/tampering.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Unsupported Scenarios<ept id="p1">](../../../../docs/framework/wcf/feature-details/unsupported-scenarios.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Replay Attacks<ept id="p1">](../../../../docs/framework/wcf/feature-details/replay-attacks.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>