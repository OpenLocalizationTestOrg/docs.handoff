{"content":"---\ntitle: \"Request-Reply Correlation\"\nms.date: \"03/30/2017\"\nms.assetid: cf4379bf-2d08-43f3-9584-dfa30ffcb1f6\n---\n# Request-Reply Correlation\nRequest-reply correlation is used with a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair to implement a two-way operation in a workflow service and with a <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair that invokes a two-way operation in another Web service. When invoking a two-way operation in a WCF service, the service can be either a traditional imperative code-based Windows Communication Foundation (WCF) service or it can be a workflow service. To use request-reply correlation a two-way binding must be used, such as <xref:System.ServiceModel.BasicHttpBinding>. Whether invoking or implementing a two-way operation, the correlation initialization steps are similar and are covered in this section.  \n  \n## Using Correlation in a Two-Way Operation with Receive/SendReply  \n A <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is used to implement a two-way operation in a workflow service. The runtime uses request-reply correlation to ensure that the reply is dispatched to the correct caller. When a workflow is hosted using <xref:System.ServiceModel.Activities.WorkflowServiceHost>, which is the case for workflow services, then the default correlation initialization is sufficient. In this scenario, a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is used by a workflow, and no specific correlation configuration is required.  \n  \n```csharp  \nReceive StartOrder = new Receive  \n{  \n    CanCreateInstance = true,  \n    ServiceContractName = OrderContractName,  \n    OperationName = \"StartOrder\"  \n};  \n  \nSendReply ReplyToStartOrder = new SendReply  \n{  \n    Request = StartOrder,  \n    Content = … // Contains the return value, if any.  \n};  \n  \n// Construct a workflow using StartOrder and ReplyToStartOrder.  \n```  \n  \n### Explicitly Initializing Request-Reply Correlation  \n If other two-way operations are in parallel, then correlation should be explicitly configured. This can be done by specifying a <xref:System.ServiceModel.Activities.CorrelationHandle> and <xref:System.ServiceModel.Activities.RequestReplyCorrelationInitializer>, or by placing the <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> inside of a <xref:System.ServiceModel.Activities.CorrelationScope>. In this example, request-reply correlation is configured on a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair.  \n  \n```csharp  \nVariable<CorrelationHandle> RRHandle = new Variable<CorrelationHandle>();  \n  \nReceive StartOrder = new Receive  \n{  \n    CanCreateInstance = true,  \n    ServiceContractName = OrderContractName,  \n    OperationName = \"StartOrder\",  \n    CorrelationInitializers =  \n    {  \n        new RequestReplyCorrelationInitializer  \n        {  \n            CorrelationHandle = RRHandle  \n        }  \n    }  \n};  \n  \nSendReply ReplyToStartOrder = new SendReply  \n{  \n    Request = StartOrder,  \n    Content = … // Contains the return value, if any.  \n};  \n  \n// Construct a workflow using StartOrder and ReplyToStartOrder.  \n```  \n  \n Instead of explicitly configuring the correlation, a <xref:System.ServiceModel.Activities.CorrelationScope> activity can be used. <xref:System.ServiceModel.Activities.CorrelationScope> provides an implicit <xref:System.ServiceModel.Activities.CorrelationHandle> to the messaging activities that it contains. In this example, a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is contained inside a <xref:System.ServiceModel.Activities.CorrelationScope>. No explicit correlation configuration is required.  \n  \n```csharp  \nReceive StartOrder = new Receive  \n{  \n    CanCreateInstance = true,  \n    ServiceContractName = OrderContractName,  \n    OperationName = \"StartOrder\"  \n};  \n  \nSendReply ReplyToStartOrder = new SendReply  \n{  \n    Request = StartOrder,  \n    Content = … // Contains the return value, if any.  \n};  \n  \nCorrelationScope s = new CorrelationScope  \n{  \n    Body = new Sequence  \n    {  \n        Activities =   \n        {  \n            StartOrder,  \n            // Activities that create the reply.  \n            ReplyToStartOrder  \n        }  \n    }  \n};  \n  \n// Construct a workflow using the CorrelationScope.  \n```  \n  \n If additional correlations are required then they can be configured using the <xref:System.ServiceModel.Activities.Send.CorrelationInitializers%2A> property of the respective messaging activities using the desired `CorrelationInitializer` types.  \n  \n## Using Correlation in a Two-Way Operation with Send/ReceiveReply  \n While the <xref:System.ServiceModel.Activities.Receive> activity can only be used in a workflow service hosted by <xref:System.ServiceModel.Activities.WorkflowServiceHost>, <xref:System.ServiceModel.Activities.Send> and the <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair can be used in any workflow that must invoke a method on a Web service. If the workflow is hosted using <xref:System.ServiceModel.Activities.WorkflowServiceHost> then the default correlation described in the previous section applies, but if not, then correlation must be configured either explicitly using the desired <xref:System.ServiceModel.Activities.CorrelationInitializer> and <xref:System.ServiceModel.Activities.CorrelationHandle>, or by using the implicit handle management of the <xref:System.ServiceModel.Activities.CorrelationScope>.  \n  \n When using **Add Service Reference** on a service with two-way operations, activities are generated that wrap a <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair activity internally with the Request/Reply correlation explicitly specified.\n","nodes":[{"pos":[4,109],"embed":true,"restype":"x-metadata","content":"title: \"Request-Reply Correlation\"\nms.date: \"03/30/2017\"\nms.assetid: cf4379bf-2d08-43f3-9584-dfa30ffcb1f6","nodes":[{"content":"Request-Reply Correlation","nodes":[{"pos":[0,25],"content":"Request-Reply Correlation","nodes":[{"content":"Request-Reply Correlation","pos":[0,25]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[116,141],"content":"Request-Reply Correlation","linkify":"Request-Reply Correlation","nodes":[{"content":"Request-Reply Correlation","pos":[0,25]}]},{"content":"Request-reply correlation is used with a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair to implement a two-way operation in a workflow service and with a <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph><ph id=\"ph5\">/</ph><ph id=\"ph6\">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> pair that invokes a two-way operation in another Web service.","pos":[142,503],"source":"Request-reply correlation is used with a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair to implement a two-way operation in a workflow service and with a <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair that invokes a two-way operation in another Web service."},{"content":"When invoking a two-way operation in a WCF service, the service can be either a traditional imperative code-based Windows Communication Foundation (WCF) service or it can be a workflow service.","pos":[504,697]},{"content":"To use request-reply correlation a two-way binding must be used, such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.","pos":[698,815],"source":" To use request-reply correlation a two-way binding must be used, such as <xref:System.ServiceModel.BasicHttpBinding>."},{"content":"Whether invoking or implementing a two-way operation, the correlation initialization steps are similar and are covered in this section.","pos":[816,951]},{"pos":[960,1023],"content":"Using Correlation in a Two-Way Operation with Receive/SendReply","linkify":"Using Correlation in a Two-Way Operation with Receive/SendReply","nodes":[{"content":"Using Correlation in a Two-Way Operation with Receive/SendReply","pos":[0,63]}]},{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair is used to implement a two-way operation in a workflow service.","pos":[1027,1191],"source":"A <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is used to implement a two-way operation in a workflow service."},{"content":"The runtime uses request-reply correlation to ensure that the reply is dispatched to the correct caller.","pos":[1192,1296]},{"content":"When a workflow is hosted using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>, which is the case for workflow services, then the default correlation initialization is sufficient.","pos":[1297,1487],"source":" When a workflow is hosted using <xref:System.ServiceModel.Activities.WorkflowServiceHost>, which is the case for workflow services, then the default correlation initialization is sufficient."},{"content":"In this scenario, a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair is used by a workflow, and no specific correlation configuration is required.","pos":[1488,1684],"source":" In this scenario, a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is used by a workflow, and no specific correlation configuration is required."},{"pos":[2084,2133],"content":"Explicitly Initializing Request-Reply Correlation","linkify":"Explicitly Initializing Request-Reply Correlation","nodes":[{"content":"Explicitly Initializing Request-Reply Correlation","pos":[0,49]}]},{"content":"If other two-way operations are in parallel, then correlation should be explicitly configured.","pos":[2137,2231]},{"content":"This can be done by specifying a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.CorrelationHandle&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.RequestReplyCorrelationInitializer&gt;</ph>, or by placing the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph4\">/</ph><ph id=\"ph5\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> inside of a <ph id=\"ph6\">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph>.","pos":[2232,2578],"source":" This can be done by specifying a <xref:System.ServiceModel.Activities.CorrelationHandle> and <xref:System.ServiceModel.Activities.RequestReplyCorrelationInitializer>, or by placing the <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> inside of a <xref:System.ServiceModel.Activities.CorrelationScope>."},{"content":"In this example, request-reply correlation is configured on a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair.","pos":[2579,2740],"source":" In this example, request-reply correlation is configured on a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair."},{"content":"Instead of explicitly configuring the correlation, a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph> activity can be used.","pos":[3381,3510],"source":"Instead of explicitly configuring the correlation, a <xref:System.ServiceModel.Activities.CorrelationScope> activity can be used."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph> provides an implicit <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.CorrelationHandle&gt;</ph> to the messaging activities that it contains.","pos":[3511,3688],"source":"<xref:System.ServiceModel.Activities.CorrelationScope> provides an implicit <xref:System.ServiceModel.Activities.CorrelationHandle> to the messaging activities that it contains."},{"content":"In this example, a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> pair is contained inside a <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph>.","pos":[3689,3884],"source":" In this example, a <xref:System.ServiceModel.Activities.Receive>/<xref:System.ServiceModel.Activities.SendReply> pair is contained inside a <xref:System.ServiceModel.Activities.CorrelationScope>."},{"content":"No explicit correlation configuration is required.","pos":[3885,3935]},{"pos":[4575,4820],"content":"If additional correlations are required then they can be configured using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Send.CorrelationInitializers%2A&gt;</ph> property of the respective messaging activities using the desired <ph id=\"ph2\">`CorrelationInitializer`</ph> types.","source":"If additional correlations are required then they can be configured using the <xref:System.ServiceModel.Activities.Send.CorrelationInitializers%2A> property of the respective messaging activities using the desired `CorrelationInitializer` types."},{"pos":[4829,4892],"content":"Using Correlation in a Two-Way Operation with Send/ReceiveReply","linkify":"Using Correlation in a Two-Way Operation with Send/ReceiveReply","nodes":[{"content":"Using Correlation in a Two-Way Operation with Send/ReceiveReply","pos":[0,63]}]},{"content":"While the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity can only be used in a workflow service hosted by <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph> and the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph><ph id=\"ph5\">/</ph><ph id=\"ph6\">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> pair can be used in any workflow that must invoke a method on a Web service.","pos":[4896,5290],"source":"While the <xref:System.ServiceModel.Activities.Receive> activity can only be used in a workflow service hosted by <xref:System.ServiceModel.Activities.WorkflowServiceHost>, <xref:System.ServiceModel.Activities.Send> and the <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair can be used in any workflow that must invoke a method on a Web service."},{"content":"If the workflow is hosted using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> then the default correlation described in the previous section applies, but if not, then correlation must be configured either explicitly using the desired <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.CorrelationInitializer&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.CorrelationHandle&gt;</ph>, or by using the implicit handle management of the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph>.","pos":[5291,5764],"source":" If the workflow is hosted using <xref:System.ServiceModel.Activities.WorkflowServiceHost> then the default correlation described in the previous section applies, but if not, then correlation must be configured either explicitly using the desired <xref:System.ServiceModel.Activities.CorrelationInitializer> and <xref:System.ServiceModel.Activities.CorrelationHandle>, or by using the implicit handle management of the <xref:System.ServiceModel.Activities.CorrelationScope>."},{"pos":[5771,6058],"content":"When using <bpt id=\"p1\">**</bpt>Add Service Reference<ept id=\"p1\">**</ept> on a service with two-way operations, activities are generated that wrap a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> pair activity internally with the Request/Reply correlation explicitly specified.","source":"When using **Add Service Reference** on a service with two-way operations, activities are generated that wrap a <xref:System.ServiceModel.Activities.Send>/<xref:System.ServiceModel.Activities.ReceiveReply> pair activity internally with the Request/Reply correlation explicitly specified."}]}