{"content":"---\ntitle: \"How to: Catch Parsing Errors (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: bfb612d4-5605-48ef-8c93-915cf9d5dcfb\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Catch Parsing Errors (C#)\nThis topic shows how to detect badly formed or invalid XML.  \n  \n [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] is implemented using <xref:System.Xml.XmlReader>. If badly formed or invalid XML is passed to [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)], the underlying <xref:System.Xml.XmlReader> class will throw an exception. The various methods that parse XML, such as <xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName>, do not catch the exception; the exception can then be caught by your application.  \n  \n## Example  \n The following code tries to parse invalid XML:  \n  \n```csharp  \ntry {  \n    XElement contacts = XElement.Parse(  \n        @\"<Contacts>  \n            <Contact>  \n                <Name>Jim Wilson</Name>  \n            </Contact>  \n          </Contcts>\");  \n  \n    Console.WriteLine(contacts);  \n}  \ncatch (System.Xml.XmlException e)  \n{  \n    Console.WriteLine(e.Message);  \n}  \n```  \n  \n When you run this code, it throws the following exception:  \n  \n```  \nThe 'Contacts' start tag on line 1 does not match the end tag of 'Contcts'. Line 5, position 13.  \n```  \n  \n For information about the exceptions that you can expect the <xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName>, <xref:System.Xml.Linq.XDocument.Parse%2A?displayProperty=fullName>, <xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName>, and <xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName> methods to throw, see the <xref:System.Xml.XmlReader> documentation.  \n  \n## See Also  \n [Parsing XML (C#)](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md)","nodes":[{"pos":[12,62],"content":"How to: Catch Parsing Errors (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Catch Parsing Errors (C#) | Microsoft Docs","pos":[0,50]}]},{"pos":[421,454],"content":"How to: Catch Parsing Errors (C#)","linkify":"How to: Catch Parsing Errors (C#)","nodes":[{"content":"How to: Catch Parsing Errors (C#)","pos":[0,33]}]},{"content":"This topic shows how to detect badly formed or invalid XML.","pos":[455,514]},{"content":"<ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> is implemented using <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>.","pos":[521,673],"source":"[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] is implemented using <xref:System.Xml.XmlReader>."},{"content":"If badly formed or invalid XML is passed to <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>, the underlying <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> class will throw an exception.","pos":[674,895],"source":" If badly formed or invalid XML is passed to [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)], the underlying <xref:System.Xml.XmlReader> class will throw an exception."},{"content":"The various methods that parse XML, such as <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName&gt;</ph>, do not catch the exception; the exception can then be caught by your application.","pos":[896,1088],"source":" The various methods that parse XML, such as <xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName>, do not catch the exception; the exception can then be caught by your application."},{"pos":[1097,1104],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code tries to parse invalid XML:","pos":[1108,1154]},{"content":"When you run this code, it throws the following exception:","pos":[1494,1552]},{"content":"For information about the exceptions that you can expect the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XDocument.Parse%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;</ph> methods to throw, see the <ph id=\"ph5\">&lt;xref:System.Xml.XmlReader&gt;</ph> documentation.","pos":[1673,2073],"source":"For information about the exceptions that you can expect the <xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName>, <xref:System.Xml.Linq.XDocument.Parse%2A?displayProperty=fullName>, <xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName>, and <xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName> methods to throw, see the <xref:System.Xml.XmlReader> documentation."},{"pos":[2082,2090],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2094,2179],"content":"<bpt id=\"p1\">[</bpt>Parsing XML (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md)</ept>","source":"[Parsing XML (C#)](../../../../csharp/programming-guide/concepts/linq/parsing-xml.md)"}]}