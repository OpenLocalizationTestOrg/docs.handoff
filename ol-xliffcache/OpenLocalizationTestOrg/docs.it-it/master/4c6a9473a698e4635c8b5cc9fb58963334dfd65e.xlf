<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="imetadatainfo-getfilemapping-method.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c6a9473a698e4635c8b5cc9fb58963334dfd65e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\metadata\imetadatainfo-getfilemapping-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a2d5c9538930578099b1f1544455d5133f0beae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba874cbfb9324a73a80a7948b6af725b72a4340c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>IMetaDataInfo::GetFileMapping Method</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IMetaDataInfo::GetFileMapping Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the memory region of the mapped file, and the type of mapping.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the start of the mapped file.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[out] The size of the mapped region.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pdwMappingType`</ph> is <ph id="ph2">`fmFlat`</ph>, this is the size of the file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[out] A <bpt id="p1">[</bpt>CorFileMapping<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/corfilemapping-enumeration.md)</ept> value that indicates the type of mapping.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The current implementation of the common language runtime (CLR) always returns <ph id="ph1">`fmFlat`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Other values are reserved for future use.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, you should always verify the returned value, because other values may be enabled in future versions or service releases.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>HRESULT</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All outputs are filled.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>NULL was passed as an argument value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The CLR implementation cannot provide information about the memory region.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can happen for the following reasons:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   The metadata scope was opened with the <ph id="ph1">`ofWrite`</ph> or <ph id="ph2">`ofCopyMemory`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-   The metadata scope was opened without the <ph id="ph1">`ofReadOnly`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   The <bpt id="p1">[</bpt>IMetaDataDispenser::OpenScopeOnMemory<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscopeonmemory-method.md)</ept> method was used to open only the metadata portion of the file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-   The file is not a portable executable (PE) file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  These conditions depend on the CLR implementation, and are likely to be weakened in future versions of the CLR.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The memory that <ph id="ph1">`ppvData`</ph> points to is valid only as long as the underlying metadata scope is open.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In order for this method to work, when you map the metadata of an on-disk file into memory by calling the <bpt id="p1">[</bpt>IMetaDataDispenser::OpenScope<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md)</ept> method, you must specify the <ph id="ph1">`ofReadOnly`</ph> flag and you must not specify the <ph id="ph2">`ofWrite`</ph> or <ph id="ph3">`ofCopyMemory`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The choice of file mapping type for each scope is specific to a given implementation of the CLR.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It cannot be set by the user.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The current implementation of the CLR always returns <ph id="ph1">`fmFlat`</ph> in <ph id="ph2">`pdwMappingType`</ph>, but this can change in future versions of the CLR or in future service releases of a given version.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You should always check the returned value in <ph id="ph1">`pdwMappingType`</ph>, because different types will have different layouts and offsets.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Passing NULL for any of the three parameters is not supported.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`E_INVALIDARG`</ph>, and none of the outputs are filled.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Ignoring the mapping type or the size of the region can result in abnormal program termination.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> Cor.h</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> Used as a resource in MsCorEE.dll</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IMetaDataInfo Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadatainfo-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorFileMapping Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/corfilemapping-enumeration.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>