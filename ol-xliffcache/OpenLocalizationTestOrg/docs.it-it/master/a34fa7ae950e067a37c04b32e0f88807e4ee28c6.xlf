<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a34fa7ae950e067a37c04b32e0f88807e4ee28c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\writing-dataset-contents-as-xml-data.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">405ceab8048884a08f05641dade7c24b6db28990</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b79759610d8c35a6c79c3380072412eb27c3e55</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writing DataSet Contents as XML Data | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Writing DataSet Contents as XML Data</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In ADO.NET you can write an XML representation of a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, with or without its schema.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If schema information is included inline with the XML, it is written using the XML Schema definition language (XSD).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The schema contains the table definitions of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> as well as the relation and constraint definitions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is written as XML data, the rows in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> are written in their current versions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can also be written as a DiffGram so that both the current and the original values of the rows will be included.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The XML representation of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be written to a file, a stream, an <bpt id="p1">**</bpt>XmlWriter<ept id="p1">**</ept>, or a string.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These choices provide great flexibility for how you transport the XML representation of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To obtain the XML representation of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> as a string, use the <bpt id="p1">**</bpt>GetXml<ept id="p1">**</ept> method as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetXml<ept id="p1">**</ept> returns the XML representation of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> without schema information.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To write the schema information from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> (as XML Schema) to a string, use <bpt id="p1">**</bpt>GetXmlSchema<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To write a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to a file, stream, or <bpt id="p1">**</bpt>XmlWriter<ept id="p1">**</ept>, use the <bpt id="p2">**</bpt>WriteXml<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first parameter you pass to <bpt id="p1">**</bpt>WriteXml<ept id="p1">**</ept> is the destination of the XML output.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, pass a string containing a file name, a <bpt id="p1">**</bpt>System.IO.TextWriter<ept id="p1">**</ept> object, and so on.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can pass an optional second parameter of an <bpt id="p1">**</bpt>XmlWriteMode<ept id="p1">**</ept> to specify how the XML output is to be written.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following table shows the options for <bpt id="p1">**</bpt>XmlWriteMode<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>XmlWriteMode option</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IgnoreSchema<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> as XML data, without an XML Schema.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WriteSchema<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> as XML data with the relational structure as inline XML Schema.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DiffGram<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Writes the entire <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> as a DiffGram, including original and current values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When writing an XML representation of a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains <bpt id="p1">**</bpt>DataRelation<ept id="p1">**</ept> objects, you will most likely want the resulting XML to have the child rows of each relation nested within their related parent elements.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To accomplish this, set the <bpt id="p1">**</bpt>Nested<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>DataRelation<ept id="p2">**</ept> to <bpt id="p3">**</bpt>true<ept id="p3">**</ept> when you add the <bpt id="p4">**</bpt>DataRelation<ept id="p4">**</ept> to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Nesting DataRelations<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Following are two examples of how to write the XML representation of a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to a file.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The first example passes the file name for the resulting XML as a string to <bpt id="p1">**</bpt>WriteXml<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The second example passes a <bpt id="p1">**</bpt>System.IO.StreamWriter<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Mapping Columns to XML Elements, Attributes, and Text</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can specify how a column of a table is represented in XML using the <bpt id="p1">**</bpt>ColumnMapping<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>DataColumn<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following table shows the different <bpt id="p1">**</bpt>MappingType<ept id="p1">**</ept> values for the <bpt id="p2">**</bpt>ColumnMapping<ept id="p2">**</ept> property of a table column, and the resulting XML.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>MappingType value</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Element<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The column is written as an XML element where the ColumnName is the name of the element and the contents of the column are written as the text of the element.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Attribute<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The column is written as an XML attribute of the XML element for the current row where the ColumnName is the name of the attribute and the contents of the column are written as the value of the attribute.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SimpleContent<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The contents of the column are written as text in the XML element for the current row.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">**</bpt>SimpleContent<ept id="p1">**</ept> cannot be set for a column of a table that has <bpt id="p2">**</bpt>Element<ept id="p2">**</ept> columns or nested relations.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hidden<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The column is not written in the XML output.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using XML in a DataSet<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DiffGrams<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nesting DataRelations<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Writing DataSet Schema Information as XSD<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-schema-information-as-xsd.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>