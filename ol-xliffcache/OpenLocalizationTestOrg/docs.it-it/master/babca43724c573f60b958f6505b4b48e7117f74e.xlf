<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">babca43724c573f60b958f6505b4b48e7117f74e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\workflowapplication-readline-host.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a865e502fb2d8af132fcc86d84c740840f7da49</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c48a3aebae01f2642f4cf270aa451170c9944c32</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WorkflowApplication ReadLine Host | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WorkflowApplication ReadLine Host</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample is a generic ReadLine host.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can load and run any workflow using the included <ph id="ph1">`ReadLine`</ph> activity (or other activities like it that get data from bookmarks resumed with strings).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Output from the <ph id="ph1">`WriteLine`</ph> activity or anything writing to the <ph id="ph2">&lt;xref:System.Activities.Statements.WriteLine.TextWriter%2A&gt;</ph> extension is directed to the host window.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When an instance is idle, the available bookmarks for that instance appear in a combo box.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Selecting a bookmark, inputting some text, and pressing the resume bookmark button continue the execution of the workflow.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can also cancel, abort, or terminate a selected workflow.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Persistence is on by default â€“ you can shut down the host and bring it back, and the instance list is populated with the instances stored in the database.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Tracking is used to output <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>-level events to the host with the option to add detailed tracking at the activity level.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Sample Details</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There are two layers to this host: the view and the instance manager.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The view consists of the <ph id="ph1">`HostView`</ph> and <ph id="ph2">`WorkflowApplicationInfo`</ph> classes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The general pattern for this host is for the <ph id="ph1">`HostView`</ph> class to display available options to the user based on <ph id="ph2">`WorkflowApplicationInfo`</ph> objects that are kept reasonably in synchronization with the instances they represent.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The instance manager layer consists of the <ph id="ph1">`WorkflowApplicationManager`</ph> class, which is the core of all host communications, and the <ph id="ph2">`WorkflowDefinitionExtension`</ph> class, which persists the relationship between an instance and the program definition it was started with and a few other classes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`HostView`</ph> calls control operations on the <ph id="ph2">`WorkflowApplicationManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These calls are typically asynchronous to maintain a responsive user interface.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the asynchronous calls complete, the <ph id="ph1">`WorkflowApplicationManager`</ph> makes calls back into the view layer through a well-defined interface (<ph id="ph2">`IHostView`</ph>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`HostView`</ph> class most often dispatches these calls from the <ph id="ph2">`WorkflowApplicationManager`</ph> class to the user interface thread.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Text writing is done to thread-safe <ph id="ph1">&lt;xref:System.Activities.Statements.WriteLine.TextWriter%2A&gt;</ph> objects provided by the <ph id="ph2">`HostView`</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The user interface is not the only thing generating events.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> objects also signal the <ph id="ph2">`WorkflowApplicationManager`</ph> when they go <ph id="ph3">`Idle`</ph>, <ph id="ph4">`Complete`</ph>, or are <ph id="ph5">`Aborted`</ph>, for example.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WorkflowApplicationManager`</ph> class gets off the event thread by dispatching clean up or updating work to the host.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The recording of the file used to launch a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is facilitated by the <ph id="ph2">`WorkflowDefinitionExtension`</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It implements the <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceIOParticipant&gt;</ph> interface to participate in persistence and persist the path to the workflow definition.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WorkflowApplicationManager.Load`</ph> method uses the stored path to instantiate the workflow programs required for loading unfinished <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This sample requires SQL Express to be installed.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>SQL Express comes with <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Open a Visual Studio 2010 command prompt.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Navigate to the sample directory (\WF\Basic\Execution\ControllingWorkflowApplications) and run CreateInstanceStore.cmd.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The CreateInstanceStore.cmd script attempts to create the database on the default instance of SQL Server 2008 Express.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you want to install the database on a different instance, modify the script to do so.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Compile the WorkflowApplicationReadLineHost project and run it from the command line.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Once running, you can optionally turn persistence off or on.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Further, you can optionally turn detailed activity tracking on or off.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Press the ellipsis button next to the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> button to browse for a workflow defined in a XAML file</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Two samples can be found under the SampleWorkflows folder.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The parallel1.xaml example goes idle.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Once an example is selected, press the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If or when the workflow goes idle, the <bpt id="p1">**</bpt>Bookmarks<ept id="p1">**</ept> combo box is populated with available bookmarks.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The options at this point are to resume a bookmark, cancel, abort, or terminate the workflow.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also shut down the host and restart it.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If persistence is left on, the instances are unloaded on shutdown and reloaded on start up.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To resume a bookmark, select the desired bookmark, type in a value in the text box next to the combo box and press <bpt id="p1">**</bpt>Resume Bookmark<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To remove the instance store database</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Open a Visual Studio 2010 command prompt.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Navigate to the sample directory (\WF\Basic\Execution\ControllingWorkflowApplications) and run RemoveInstanceStore.cmd.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>