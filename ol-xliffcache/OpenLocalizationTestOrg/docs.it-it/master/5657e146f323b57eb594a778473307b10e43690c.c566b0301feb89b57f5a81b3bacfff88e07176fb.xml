{"content":"---\ntitle: \"Example that Outputs Office Open XML Document Parts (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: a951925b-c985-48ed-b215-2a68b58f1ae5\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# Example that Outputs Office Open XML Document Parts (Visual Basic)\nThis topic shows how to open an Office Open XML document and access parts within it.  \n  \n## Example  \n The following example opens an Office Open XML document, and prints the document part and the style part to the console.  \n  \n This example uses classes from the WindowsBase assembly. It uses types in the <xref:System.IO.Packaging?displayProperty=fullName> namespace.  \n  \n```vb  \nConst fileName As String = \"SampleDoc.docx\"  \n  \nConst documentRelationshipType As String = _  \n  \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\"  \nConst stylesRelationshipType As String = _  \n  \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\"  \nConst wordmlNamespace As String = _  \n  \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\"  \nDim w As XNamespace = wordmlNamespace  \n  \nUsing wdPackage As Package = Package.Open(fileName, FileMode.Open, FileAccess.Read)  \n    Dim docPackageRelationship As PackageRelationship = _  \n      wdPackage.GetRelationshipsByType(documentRelationshipType).FirstOrDefault()  \n    If docPackageRelationship IsNot Nothing Then  \n        Dim documentUri As Uri = PackUriHelper.ResolvePartUri(New Uri(\"/\", UriKind.Relative), _  \n          docPackageRelationship.TargetUri)  \n        Dim documentPart As PackagePart = wdPackage.GetPart(documentUri)  \n  \n        ' Load the document XML in the part into an XDocument instance.  \n        Dim xdoc As XDocument = XDocument.Load(XmlReader.Create(documentPart.GetStream()))  \n  \n        Console.WriteLine(\"TargetUri:{0}\", docPackageRelationship.TargetUri)  \n        Console.WriteLine(\"==================================================================\")  \n        Console.WriteLine(xdoc.Root)  \n        Console.WriteLine()  \n  \n        ' Find the styles part. There will only be one.  \n        Dim styleRelation As PackageRelationship = _  \n          documentPart.GetRelationshipsByType(stylesRelationshipType).FirstOrDefault()  \n        If styleRelation IsNot Nothing Then  \n            Dim styleUri As Uri = _  \n              PackUriHelper.ResolvePartUri(documentUri, styleRelation.TargetUri)  \n            Dim stylePart As PackagePart = wdPackage.GetPart(styleUri)  \n  \n            ' Load the style XML in the part into an XDocument instance.  \n            Dim styleDoc As XDocument = XDocument.Load(XmlReader.Create(stylePart.GetStream()))  \n  \n            Console.WriteLine(\"TargetUri:{0}\", styleRelation.TargetUri)  \n            Console.WriteLine(\"==================================================================\")  \n            Console.WriteLine(styleDoc.Root)  \n            Console.WriteLine()  \n        End If  \n    End If  \nEnd Using  \n```  \n  \n## See Also  \n [Details of Office Open XML WordprocessingML Documents (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)","nodes":[{"pos":[12,95],"content":"Example that Outputs Office Open XML Document Parts (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Example that Outputs Office Open XML Document Parts (Visual Basic) | Microsoft Docs","pos":[0,83]}]},{"pos":[402,468],"content":"Example that Outputs Office Open XML Document Parts (Visual Basic)","linkify":"Example that Outputs Office Open XML Document Parts (Visual Basic)","nodes":[{"content":"Example that Outputs Office Open XML Document Parts (Visual Basic)","pos":[0,66]}]},{"content":"This topic shows how to open an Office Open XML document and access parts within it.","pos":[469,553]},{"pos":[562,569],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example opens an Office Open XML document, and prints the document part and the style part to the console.","pos":[573,693]},{"content":"This example uses classes from the WindowsBase assembly.","pos":[700,756]},{"content":"It uses types in the <ph id=\"ph1\">&lt;xref:System.IO.Packaging?displayProperty=fullName&gt;</ph> namespace.","pos":[757,840],"source":" It uses types in the <xref:System.IO.Packaging?displayProperty=fullName> namespace."},{"pos":[3167,3175],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3179,3364],"content":"<bpt id=\"p1\">[</bpt>Details of Office Open XML WordprocessingML Documents (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)</ept>","source":"[Details of Office Open XML WordprocessingML Documents (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)"}]}