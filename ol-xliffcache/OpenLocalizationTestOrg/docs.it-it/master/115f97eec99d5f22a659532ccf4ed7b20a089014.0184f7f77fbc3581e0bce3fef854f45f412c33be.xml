{"content":"---\ntitle: \"Query Expression Syntax for Standard Query Operators (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: e1e17ef2-68ff-4c26-b6e2-015668227fa5\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Query Expression Syntax for Standard Query Operators (C#)\nSome of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a *query expression*. A query expression is a different, more readable form of expressing a query than its *method-based*  equivalent. Query expression clauses are translated into calls to the query methods at compile time.  \n  \n## Query Expression Syntax Table  \n The following table lists the standard query operators that have equivalent query expression clauses.  \n  \n|Method|C# Query Expression Syntax|  \n|------------|---------------------------------|  \n|<xref:System.Linq.Enumerable.Cast%2A>|Use an explicitly typed range variable, for example:<br /><br /> `from int i in numbers`<br /><br /> (For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)|  \n|<xref:System.Linq.Enumerable.GroupBy%2A>|`group … by`<br /><br /> -or-<br /><br /> `group … by … into …`<br /><br /> (For more information, see [group clause](../../../../csharp/language-reference/keywords/group-clause.md).)|  \n|<xref:System.Linq.Enumerable.GroupJoin%60%604%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D%2CSystem.Func%7B%60%601%2C%60%602%7D%2CSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%29>|`join … in … on … equals … into …`<br /><br /> (For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)|  \n|<xref:System.Linq.Enumerable.Join%60%604%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D%2CSystem.Func%7B%60%601%2C%60%602%7D%2CSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%29>|`join … in … on … equals …`<br /><br /> (For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)|  \n|<xref:System.Linq.Enumerable.OrderBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n<xref:System.Linq.Enumerable.OrderByDescending%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby … descending`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.Select%2A>|`select`<br /><br /> (For more information, see [select clause](../../../../csharp/language-reference/keywords/select-clause.md).)|  \n|<xref:System.Linq.Enumerable.SelectMany%2A>|Multiple `from` clauses.<br /><br /> (For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)|  \n|<xref:System.Linq.Enumerable.ThenBy%60%602%28System.Linq.IOrderedEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby …, …`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.ThenByDescending%60%602%28System.Linq.IOrderedEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby …, … descending`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.Where%2A>|`where`<br /><br /> (For more information, see [where clause](../../../../csharp/language-reference/keywords/where-clause.md).)|  \n  \n## See Also  \n <xref:System.Linq.Enumerable>   \n <xref:System.Linq.Queryable>   \n [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)   \n [Classification of Standard Query Operators by Manner of Execution (C#)](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)","nodes":[{"pos":[12,86],"content":"Query Expression Syntax for Standard Query Operators (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Query Expression Syntax for Standard Query Operators (C#) | Microsoft Docs","pos":[0,74]}]},{"pos":[445,502],"content":"Query Expression Syntax for Standard Query Operators (C#)","linkify":"Query Expression Syntax for Standard Query Operators (C#)","nodes":[{"content":"Query Expression Syntax for Standard Query Operators (C#)","pos":[0,57]}]},{"content":"Some of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a <bpt id=\"p1\">*</bpt>query expression<ept id=\"p1\">*</ept>.","pos":[503,666],"source":"Some of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a *query expression*."},{"content":"A query expression is a different, more readable form of expressing a query than its <bpt id=\"p1\">*</bpt>method-based<ept id=\"p1\">*</ept>  equivalent.","pos":[667,779],"source":" A query expression is a different, more readable form of expressing a query than its *method-based*  equivalent."},{"content":"Query expression clauses are translated into calls to the query methods at compile time.","pos":[780,868]},{"pos":[877,906],"content":"Query Expression Syntax Table","linkify":"Query Expression Syntax Table","nodes":[{"content":"Query Expression Syntax Table","pos":[0,29]}]},{"content":"The following table lists the standard query operators that have equivalent query expression clauses.","pos":[910,1011]},{"content":"Method","pos":[1018,1024]},{"content":"C# Query Expression Syntax","pos":[1025,1051]},{"content":"Use an explicitly typed range variable, for example:","pos":[1145,1197]},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>from clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/from-clause.md)</ept>.)","pos":[1246,1351],"source":" (For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)"},{"content":"-or-","pos":[1422,1426]},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/group-clause.md)</ept>.)","pos":[1473,1580],"source":" (For more information, see [group clause](../../../../csharp/language-reference/keywords/group-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/join-clause.md)</ept>.)","pos":[1955,2060],"source":" (For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/join-clause.md)</ept>.)","pos":[2379,2484],"source":" (For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[2650,2761],"source":" (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[2949,3060],"source":" (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>select clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/select-clause.md)</ept>.)","pos":[3126,3235],"source":" (For more information, see [select clause](../../../../csharp/language-reference/keywords/select-clause.md).)"},{"content":"Multiple <ph id=\"ph1\">`from`</ph> clauses.","pos":[3284,3308],"source":"Multiple `from` clauses."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>from clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/from-clause.md)</ept>.)","pos":[3321,3426],"source":" (For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[3588,3699],"source":" (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[3882,3993],"source":" (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>where clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/where-clause.md)</ept>.)","pos":[4057,4164],"source":" (For more information, see [where clause](../../../../csharp/language-reference/keywords/where-clause.md).)"},{"pos":[4174,4182],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Linq.Enumerable&gt;</ph>","pos":[4186,4215],"source":"<xref:System.Linq.Enumerable> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Linq.Queryable&gt;</ph>","pos":[4220,4248],"source":" <xref:System.Linq.Queryable> "},{"content":"<bpt id=\"p1\"> [</bpt>Standard Query Operators Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[4252,4383],"source":" [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classification of Standard Query Operators by Manner of Execution (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)</ept>","pos":[4386,4580],"source":" [Classification of Standard Query Operators by Manner of Execution (C#)](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)"}]}