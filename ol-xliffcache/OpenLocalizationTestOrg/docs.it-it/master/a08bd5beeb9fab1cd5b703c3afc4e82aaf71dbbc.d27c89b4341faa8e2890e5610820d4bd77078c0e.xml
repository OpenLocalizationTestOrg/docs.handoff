{"content":"---\ntitle: \"IMetaDataImport::GetPropertyProps Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IMetaDataImport.GetPropertyProps\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IMetaDataImport::GetPropertyProps\"\nhelpviewer_keywords: \n  - \"GetPropertyProps method [.NET Framework metadata]\"\n  - \"IMetaDataImport::GetPropertyProps method [.NET Framework metadata]\"\nms.assetid: dc0ff3e6-7e7d-4f6c-948d-52b28f5cb78c\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# IMetaDataImport::GetPropertyProps Method\nGets the metadata for the property represented by the specified token.  \n  \n## Syntax  \n  \n```  \nHRESULT GetPropertyProps (  \n   [in]  mdProperty        prop,  \n   [out] mdTypeDef         *pClass,   \n   [out] LPCWSTR           szProperty,   \n   [in]  ULONG             cchProperty,   \n   [out] ULONG             *pchProperty,   \n   [out] DWORD             *pdwPropFlags,   \n   [out] PCCOR_SIGNATURE   *ppvSig,   \n   [out] ULONG             *pbSig,   \n   [out] DWORD             *pdwCPlusTypeFlag,   \n   [out] UVCP_CONSTANT     *ppDefaultValue,  \n   [out] ULONG             *pcchDefaultValue,  \n   [out] mdMethodDef       *pmdSetter,   \n   [out] mdMethodDef       *pmdGetter,   \n   [out] mdMethodDef       rmdOtherMethod[],  \n   [in]  ULONG             cMax,   \n   [out] ULONG             *pcOtherMethod   \n);  \n```  \n  \n## Parameters  \n `prop`  \n [in] A token that represents the property to return metadata for.  \n  \n `pClass`  \n [out] A pointer to the TypeDef token that represents the type that implements the property.  \n  \n `szProperty`  \n [out] A buffer to hold the property name.  \n  \n `cchProperty`  \n [in] The size in wide characters of `szProperty`.  \n  \n `pchProperty`  \n [out] The number of wide characters returned in `szProperty`.  \n  \n `pdwPropFlags`  \n [out] A pointer to any attribute flags applied to the property. This value is a bitmask from the [CorPropertyAttr](../../../../docs/framework/unmanaged-api/metadata/corpropertyattr-enumeration.md) enumeration.  \n  \n `ppvSig`  \n [out] A pointer to the metadata signature of the property.  \n  \n `pbSig`  \n [out] The number of bytes returned in `ppvSig`.  \n  \n `pdwCPlusTypeFlag`  \n [out] A flag specifying the type of the constant that is the default value of the property. This value is from the CorElementType enumeration.  \n  \n `ppDefaultValue`  \n [out] A pointer to the bytes that store the default value for this property.  \n  \n `pcchDefaultValue`  \n [out] The size in wide characters of `ppDefaultValue`, if `pdwCPlusTypeFlag` is ELEMENT_TYPE_STRING; otherwise, this value is not relevant. In that case, the length of `ppDefaultValue` is inferred from the type that is specified by `pdwCPlusTypeFlag`.  \n  \n `pmdSetter`  \n [out] A pointer to the MethodDef token that represents the set accessor method for the property.  \n  \n `pmdGetter`  \n [out] A pointer to the MethodDef token that represents the get accessor method for the property.  \n  \n `rmdOtherMethod`  \n [out] An array of MethodDef tokens that represent other methods associated with the property.  \n  \n `cMax`  \n [in] The maximum size of the `rmdOtherMethod` array. If you do not provide an array large enough to hold all the methods, they are skipped without warning.  \n  \n `pcOtherMethod`  \n [out] The number of MethodDef tokens returned in `rmdOtherMethod`.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** Cor.h  \n  \n **Library:** Included as a resource in MsCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See also\n\n- [IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)\n- [IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)\n","nodes":[{"pos":[4,496],"embed":true,"restype":"x-metadata","content":"title: \"IMetaDataImport::GetPropertyProps Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IMetaDataImport.GetPropertyProps\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IMetaDataImport::GetPropertyProps\"\nhelpviewer_keywords: \n  - \"GetPropertyProps method [.NET Framework metadata]\"\n  - \"IMetaDataImport::GetPropertyProps method [.NET Framework metadata]\"\nms.assetid: dc0ff3e6-7e7d-4f6c-948d-52b28f5cb78c\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"IMetaDataImport::GetPropertyProps Method","nodes":[{"pos":[0,40],"content":"IMetaDataImport::GetPropertyProps Method","nodes":[{"content":"IMetaDataImport::GetPropertyProps Method","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[503,543],"content":"IMetaDataImport::GetPropertyProps Method","linkify":"IMetaDataImport::GetPropertyProps Method","nodes":[{"content":"IMetaDataImport::GetPropertyProps Method","pos":[0,40]}]},{"content":"Gets the metadata for the property represented by the specified token.","pos":[544,614]},{"pos":[623,629],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1367,1377],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A token that represents the property to return metadata for.","pos":[1391,1456]},{"content":"[out] A pointer to the TypeDef token that represents the type that implements the property.","pos":[1475,1566]},{"content":"[out] A buffer to hold the property name.","pos":[1589,1630]},{"content":"[in] The size in wide characters of <ph id=\"ph1\">`szProperty`</ph>.","pos":[1654,1703],"source":"[in] The size in wide characters of `szProperty`."},{"content":"[out] The number of wide characters returned in <ph id=\"ph1\">`szProperty`</ph>.","pos":[1727,1788],"source":"[out] The number of wide characters returned in `szProperty`."},{"content":"[out] A pointer to any attribute flags applied to the property.","pos":[1813,1876]},{"content":"This value is a bitmask from the <bpt id=\"p1\">[</bpt>CorPropertyAttr<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/corpropertyattr-enumeration.md)</ept> enumeration.","pos":[1877,2022],"source":" This value is a bitmask from the [CorPropertyAttr](../../../../docs/framework/unmanaged-api/metadata/corpropertyattr-enumeration.md) enumeration."},{"content":"[out] A pointer to the metadata signature of the property.","pos":[2041,2099]},{"content":"[out] The number of bytes returned in <ph id=\"ph1\">`ppvSig`</ph>.","pos":[2117,2164],"source":"[out] The number of bytes returned in `ppvSig`."},{"content":"[out] A flag specifying the type of the constant that is the default value of the property.","pos":[2193,2284]},{"content":"This value is from the CorElementType enumeration.","pos":[2285,2335]},{"content":"[out] A pointer to the bytes that store the default value for this property.","pos":[2362,2438]},{"content":"[out] The size in wide characters of <ph id=\"ph1\">`ppDefaultValue`</ph>, if <ph id=\"ph2\">`pdwCPlusTypeFlag`</ph> is ELEMENT_TYPE_STRING; otherwise, this value is not relevant.","pos":[2467,2606],"source":"[out] The size in wide characters of `ppDefaultValue`, if `pdwCPlusTypeFlag` is ELEMENT_TYPE_STRING; otherwise, this value is not relevant."},{"content":"In that case, the length of <ph id=\"ph1\">`ppDefaultValue`</ph> is inferred from the type that is specified by <ph id=\"ph2\">`pdwCPlusTypeFlag`</ph>.","pos":[2607,2718],"source":" In that case, the length of `ppDefaultValue` is inferred from the type that is specified by `pdwCPlusTypeFlag`."},{"content":"[out] A pointer to the MethodDef token that represents the set accessor method for the property.","pos":[2740,2836]},{"content":"[out] A pointer to the MethodDef token that represents the get accessor method for the property.","pos":[2858,2954]},{"content":"[out] An array of MethodDef tokens that represent other methods associated with the property.","pos":[2981,3074]},{"content":"[in] The maximum size of the <ph id=\"ph1\">`rmdOtherMethod`</ph> array.","pos":[3091,3143],"source":"[in] The maximum size of the `rmdOtherMethod` array."},{"content":"If you do not provide an array large enough to hold all the methods, they are skipped without warning.","pos":[3144,3246]},{"content":"[out] The number of MethodDef tokens returned in <ph id=\"ph1\">`rmdOtherMethod`</ph>.","pos":[3272,3338],"source":"[out] The number of MethodDef tokens returned in `rmdOtherMethod`."},{"pos":[3347,3359],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3363,3467],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3474,3491],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> Cor.h","source":"**Header:** Cor.h"},{"pos":[3498,3548],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MsCorEE.dll","source":"**Library:** Included as a resource in MsCorEE.dll"},{"pos":[3555,3663],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[3672,3680],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3684,3791],"content":"<bpt id=\"p1\">[</bpt>IMetaDataImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept>","source":"[IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)"},{"pos":[3794,3903],"content":"<bpt id=\"p1\">[</bpt>IMetaDataImport2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)</ept>","source":"[IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)"}]}