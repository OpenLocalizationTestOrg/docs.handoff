{"content":"---\ntitle: \"How to: Filter on Element Names (LINQ to XML) (C#)\"\nms.date: 07/20/2015\nms.assetid: 1849fb03-f075-421f-863c-e8fb32773cdf\n---\n# How to: Filter on Element Names (LINQ to XML) (C#)\nWhen you call one of the methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement>, you can filter on the element name.  \n  \n## Example  \n This example retrieves a collection of descendants that is filtered to contain only descendants with the specified name.  \n  \n This example uses the following XML document: [Sample XML File: Typical Purchase Order (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml-1.md).  \n  \n```csharp  \nXElement po = XElement.Load(\"PurchaseOrder.xml\");  \nIEnumerable<XElement> items =  \n    from el in po.Descendants(\"ProductName\")  \n    select el;  \nforeach(XElement prdName in items)  \n    Console.WriteLine(prdName.Name + \":\" + (string) prdName);  \n```  \n  \n This code produces the following output:  \n  \n```  \nProductName:Lawnmower  \nProductName:Baby Monitor  \n```  \n  \n The other methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement> collections follow the same pattern. Their signatures are similar to <xref:System.Xml.Linq.XContainer.Elements%2A> and <xref:System.Xml.Linq.XContainer.Descendants%2A>. The following is the complete list of methods that have similar method signatures:  \n  \n-   <xref:System.Xml.Linq.XNode.Ancestors%2A>  \n  \n-   <xref:System.Xml.Linq.XContainer.Descendants%2A>  \n  \n-   <xref:System.Xml.Linq.XContainer.Elements%2A>  \n  \n-   <xref:System.Xml.Linq.XNode.ElementsAfterSelf%2A>  \n  \n-   <xref:System.Xml.Linq.XNode.ElementsBeforeSelf%2A>  \n  \n-   <xref:System.Xml.Linq.XElement.AncestorsAndSelf%2A>  \n  \n-   <xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A>  \n  \n## Example  \n The following example shows the same query for XML that is in a namespace. For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n This example uses the following XML document: [Sample XML File: Typical Purchase Order in a Namespace](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md).  \n  \n```csharp  \nXNamespace aw = \"http://www.adventure-works.com\";  \nXElement po = XElement.Load(\"PurchaseOrderInNamespace.xml\");  \nIEnumerable<XElement> items =  \n    from el in po.Descendants(aw + \"ProductName\")  \n    select el;  \nforeach (XElement prdName in items)  \n    Console.WriteLine(prdName.Name + \":\" + (string)prdName);  \n```  \n  \n This code produces the following output:  \n  \n```  \n{http://www.adventure-works.com}ProductName:Lawnmower  \n{http://www.adventure-works.com}ProductName:Baby Monitor  \n```  \n  \n## See also\n\n- [LINQ to XML Axes (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-axes.md)\n","nodes":[{"pos":[4,132],"embed":true,"restype":"x-metadata","content":"title: \"How to: Filter on Element Names (LINQ to XML) (C#)\"\nms.date: 07/20/2015\nms.assetid: 1849fb03-f075-421f-863c-e8fb32773cdf","nodes":[{"content":"How to: Filter on Element Names (LINQ to XML) (C#)","nodes":[{"pos":[0,50],"content":"How to: Filter on Element Names (LINQ to XML) (C#)","nodes":[{"content":"How to: Filter on Element Names (LINQ to XML) (C#)","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[139,189],"content":"How to: Filter on Element Names (LINQ to XML) (C#)","linkify":"How to: Filter on Element Names (LINQ to XML) (C#)","nodes":[{"content":"How to: Filter on Element Names (LINQ to XML) (C#)","pos":[0,50]}]},{"pos":[190,356],"content":"When you call one of the methods that return <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, you can filter on the element name.","source":"When you call one of the methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement>, you can filter on the element name."},{"pos":[365,372],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example retrieves a collection of descendants that is filtered to contain only descendants with the specified name.","pos":[376,496]},{"pos":[503,713],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml-1.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Typical Purchase Order (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml-1.md)."},{"content":"This code produces the following output:","pos":[990,1030]},{"content":"The other methods that return <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> collections follow the same pattern.","pos":[1103,1254],"source":"The other methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement> collections follow the same pattern."},{"content":"Their signatures are similar to <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</ph>.","pos":[1255,1386],"source":" Their signatures are similar to <xref:System.Xml.Linq.XContainer.Elements%2A> and <xref:System.Xml.Linq.XContainer.Descendants%2A>."},{"content":"The following is the complete list of methods that have similar method signatures:","pos":[1387,1469]},{"pos":[1885,1892],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the same query for XML that is in a namespace.","pos":[1896,1970]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","pos":[1971,2115],"source":" For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"pos":[2122,2334],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Typical Purchase Order in a Namespace<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Typical Purchase Order in a Namespace](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md)."},{"content":"This code produces the following output:","pos":[2679,2719]},{"pos":[2858,2866],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2870,2965],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML Axes (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept>","source":"[LINQ to XML Axes (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-axes.md)"}]}