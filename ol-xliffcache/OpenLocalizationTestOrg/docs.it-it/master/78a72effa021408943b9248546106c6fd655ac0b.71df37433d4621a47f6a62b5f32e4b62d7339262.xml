{"content":"---\ntitle: \"XElement Class Overview (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 52331fcd-6023-4d19-b423-7b24f2d86ded\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# XElement Class Overview (Visual Basic)\nThe <xref:System.Xml.Linq.XElement> class is one of the fundamental classes in [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]. It represents an XML element. You can use this class to create elements; change the content of the element; add, change, or delete child elements; add attributes to an element; or serialize the contents of an element in text form. You can also interoperate with other classes in <xref:System.Xml?displayProperty=fullName>, such as <xref:System.Xml.XmlReader>, <xref:System.Xml.XmlWriter>, and <xref:System.Xml.Xsl.XslCompiledTransform>.  \n  \n## XElement Functionality  \n This topic describes the functionality provided by the <xref:System.Xml.Linq.XElement> class.  \n  \n### Constructing XML Trees  \n You can construct XML trees in a variety of ways, including the following:  \n  \n-   You can construct an XML tree in code. For more information, see [Creating XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md).  \n  \n-   You can parse XML from various sources, including a <xref:System.IO.TextReader>, text files, or a Web address (URL). For more information, see [Parsing XML (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md).  \n  \n-   You can use an <xref:System.Xml.XmlReader> to populate the tree. For more information, see <xref:System.Xml.Linq.XNode.ReadFrom%2A>.  \n  \n-   If you have a module that can write content to an <xref:System.Xml.XmlWriter>, you can use the <xref:System.Xml.Linq.XContainer.CreateWriter%2A> method to create a writer, pass the writer to the module, and then use the content that is written to the <xref:System.Xml.XmlWriter> to populate the XML tree.  \n  \n However, the most common way to create an XML tree is as follows:  \n  \n```vb  \nDim contacts As XElement = _  \n    <Contacts>  \n        <Contact>  \n            <Name>Patrick Hines</Name>  \n            <Phone>206-555-0144</Phone>  \n            <Address>  \n                <Street1>123 Main St</Street1>  \n                <City>Mercer Island</City>  \n                <State>WA</State>  \n                <Postal>68042</Postal>  \n            </Address>  \n        </Contact>  \n    </Contacts>  \n```  \n  \n Another very common technique for creating an XML tree involves using the results of a [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query to populate an XML tree, as shown in the following example:  \n  \n```vb  \nDim srcTree As XElement = _  \n    <Root>  \n        <Element>1</Element>  \n        <Element>2</Element>  \n        <Element>3</Element>  \n        <Element>4</Element>  \n        <Element>5</Element>  \n    </Root>  \nDim xmlTree As XElement = _  \n    <Root>  \n        <Child>1</Child>  \n        <Child>2</Child>  \n        <%= From el In srcTree.Elements() _  \n            Where el.Value > 2 _  \n            Select el %>  \n    </Root>  \nConsole.WriteLine(xmlTree)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <Child>1</Child>  \n  <Child>2</Child>  \n  <Element>3</Element>  \n  <Element>4</Element>  \n  <Element>5</Element>  \n</Root>  \n```  \n  \n### Serializing XML Trees  \n You can serialize the XML tree to a <xref:System.IO.File>, a <xref:System.IO.TextWriter>, or an <xref:System.Xml.XmlWriter>.  \n  \n For more information, see [Serializing XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/serializing-xml-trees.md).  \n  \n### Retrieving XML Data via Axis Methods  \n You can use axis methods to retrieve attributes, child elements, descendant elements, and ancestor elements. [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] queries operate on axis methods, and provide several flexible and powerful ways to navigate through and process an XML tree.  \n  \n For more information, see [LINQ to XML Axes (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md).  \n  \n### Querying XML Trees  \n You can write [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] queries that extract data from an XML tree.  \n  \n For more information, see [Querying XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/querying-xml-trees.md).  \n  \n### Modifying XML Trees  \n You can modify an element in a variety of ways, including changing its content or attributes. You can also remove an element from its parent.  \n  \n For more information, see [Modifying XML Trees (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md).  \n  \n## See Also  \n [LINQ to XML Programming Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)","nodes":[{"pos":[12,67],"content":"XElement Class Overview (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"XElement Class Overview (Visual Basic) | Microsoft Docs","pos":[0,55]}]},{"pos":[448,486],"content":"XElement Class Overview (Visual Basic)","linkify":"XElement Class Overview (Visual Basic)","nodes":[{"content":"XElement Class Overview (Visual Basic)","pos":[0,38]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class is one of the fundamental classes in <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>.","pos":[487,669],"source":"The <xref:System.Xml.Linq.XElement> class is one of the fundamental classes in [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]."},{"content":"It represents an XML element.","pos":[670,699]},{"content":"You can use this class to create elements; change the content of the element; add, change, or delete child elements; add attributes to an element; or serialize the contents of an element in text form.","pos":[700,900]},{"content":"You can also interoperate with other classes in <ph id=\"ph1\">&lt;xref:System.Xml?displayProperty=fullName&gt;</ph>, such as <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph>.","pos":[901,1106],"source":" You can also interoperate with other classes in <xref:System.Xml?displayProperty=fullName>, such as <xref:System.Xml.XmlReader>, <xref:System.Xml.XmlWriter>, and <xref:System.Xml.Xsl.XslCompiledTransform>."},{"pos":[1115,1137],"content":"XElement Functionality","linkify":"XElement Functionality","nodes":[{"content":"XElement Functionality","pos":[0,22]}]},{"content":"This topic describes the functionality provided by the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class.","pos":[1141,1234],"source":"This topic describes the functionality provided by the <xref:System.Xml.Linq.XElement> class."},{"pos":[1244,1266],"content":"Constructing XML Trees","linkify":"Constructing XML Trees","nodes":[{"content":"Constructing XML Trees","pos":[0,22]}]},{"content":"You can construct XML trees in a variety of ways, including the following:","pos":[1270,1344]},{"content":"You can construct an XML tree in code.","pos":[1354,1392]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating XML Trees (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept>.","pos":[1393,1535],"source":" For more information, see [Creating XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)."},{"content":"You can parse XML from various sources, including a <ph id=\"ph1\">&lt;xref:System.IO.TextReader&gt;</ph>, text files, or a Web address (URL).","pos":[1545,1661],"source":"You can parse XML from various sources, including a <xref:System.IO.TextReader>, text files, or a Web address (URL)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Parsing XML (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md)</ept>.","pos":[1662,1790],"source":" For more information, see [Parsing XML (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md)."},{"content":"You can use an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> to populate the tree.","pos":[1800,1864],"source":"You can use an <xref:System.Xml.XmlReader> to populate the tree."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode.ReadFrom%2A&gt;</ph>.","pos":[1865,1932],"source":" For more information, see <xref:System.Xml.Linq.XNode.ReadFrom%2A>."},{"content":"If you have a module that can write content to an <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you can use the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph> method to create a writer, pass the writer to the module, and then use the content that is written to the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to populate the XML tree.","pos":[1942,2246],"source":"If you have a module that can write content to an <xref:System.Xml.XmlWriter>, you can use the <xref:System.Xml.Linq.XContainer.CreateWriter%2A> method to create a writer, pass the writer to the module, and then use the content that is written to the <xref:System.Xml.XmlWriter> to populate the XML tree."},{"content":"However, the most common way to create an XML tree is as follows:","pos":[2253,2318]},{"pos":[2752,2971],"content":"Another very common technique for creating an XML tree involves using the results of a <ph id=\"ph1\">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query to populate an XML tree, as shown in the following example:","source":"Another very common technique for creating an XML tree involves using the results of a [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query to populate an XML tree, as shown in the following example:"},{"content":"This example produces the following output:","pos":[3455,3498]},{"pos":[3662,3683],"content":"Serializing XML Trees","linkify":"Serializing XML Trees","nodes":[{"content":"Serializing XML Trees","pos":[0,21]}]},{"content":"You can serialize the XML tree to a <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph>, a <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph>, or an <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[3687,3811],"source":"You can serialize the XML tree to a <xref:System.IO.File>, a <xref:System.IO.TextWriter>, or an <xref:System.Xml.XmlWriter>."},{"pos":[3818,3966],"content":"For more information, see <bpt id=\"p1\">[</bpt>Serializing XML Trees (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/serializing-xml-trees.md)</ept>.","source":"For more information, see [Serializing XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/serializing-xml-trees.md)."},{"pos":[3976,4012],"content":"Retrieving XML Data via Axis Methods","linkify":"Retrieving XML Data via Axis Methods","nodes":[{"content":"Retrieving XML Data via Axis Methods","pos":[0,36]}]},{"content":"You can use axis methods to retrieve attributes, child elements, descendant elements, and ancestor elements.","pos":[4016,4124]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> queries operate on axis methods, and provide several flexible and powerful ways to navigate through and process an XML tree.","pos":[4125,4316],"source":"[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] queries operate on axis methods, and provide several flexible and powerful ways to navigate through and process an XML tree."},{"pos":[4323,4461],"content":"For more information, see <bpt id=\"p1\">[</bpt>LINQ to XML Axes (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept>.","source":"For more information, see [LINQ to XML Axes (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)."},{"pos":[4471,4489],"content":"Querying XML Trees","linkify":"Querying XML Trees","nodes":[{"content":"Querying XML Trees","pos":[0,18]}]},{"pos":[4493,4617],"content":"You can write <ph id=\"ph1\">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> queries that extract data from an XML tree.","source":"You can write [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] queries that extract data from an XML tree."},{"pos":[4624,4766],"content":"For more information, see <bpt id=\"p1\">[</bpt>Querying XML Trees (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/querying-xml-trees.md)</ept>.","source":"For more information, see [Querying XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/querying-xml-trees.md)."},{"pos":[4776,4795],"content":"Modifying XML Trees","linkify":"Modifying XML Trees","nodes":[{"content":"Modifying XML Trees","pos":[0,19]}]},{"content":"You can modify an element in a variety of ways, including changing its content or attributes.","pos":[4799,4892]},{"content":"You can also remove an element from its parent.","pos":[4893,4940]},{"pos":[4947,5117],"content":"For more information, see <bpt id=\"p1\">[</bpt>Modifying XML Trees (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept>.","source":"For more information, see [Modifying XML Trees (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)."},{"pos":[5126,5134],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5138,5281],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML Programming Overview (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept>","source":"[LINQ to XML Programming Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)"}]}