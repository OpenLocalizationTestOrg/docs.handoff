{"content":"---\ntitle: \"Walkthrough: Demonstrating Visual Inheritance | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"form inheritance, walkthroughs\"\n  - \"visual inheritance\"\n  - \"inheritance, walkthroughs\"\n  - \"walkthroughs [Windows Forms], visual inheritance\"\n  - \"Windows Forms, inheritance\"\nms.assetid: 01966086-3142-450e-8210-3fd4cb33f591\ncaps.latest.revision: 24\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Walkthrough: Demonstrating Visual Inheritance\nVisual inheritance enables you to see the controls on the base form and to add new controls. In this walkthrough you will create a base form and compile it into a class library. You will import this class library into another project and create a new form that inherits from the base form. During this walkthrough, you will learn how to:  \n  \n-   Create a class library project containing a base form.  \n  \n-   Add a button with properties that derived classes of the base form can modify.  \n  \n-   Add a button that cannot be modified by inheritors of the base form.  \n  \n-   Create a project containing a form that inherits from `BaseForm`.  \n  \n Ultimately, this walkthrough will demonstrate the difference between private and protected controls on an inherited form.  \n  \n> [!NOTE]\n>  The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).  \n  \n> [!CAUTION]\n>  Not all controls support visual inheritance from a base form. The following controls do not support the scenario described in this walkthrough:  \n>   \n>  <xref:System.Windows.Forms.WebBrowser>  \n>   \n>  <xref:System.Windows.Forms.ToolStrip>  \n>   \n>  <xref:System.Windows.Forms.ToolStripPanel>  \n>   \n>  <xref:System.Windows.Forms.TableLayoutPanel>  \n>   \n>  <xref:System.Windows.Forms.FlowLayoutPanel>  \n>   \n>  <xref:System.Windows.Forms.DataGridView>  \n>   \n>  These controls in the inherited form are always read-only regardless of the modifiers you use (`private`, `protected`, or `public`).  \n  \n## Scenario Steps  \n The first step is to create the base form.  \n  \n#### To create a class library project containing a base form  \n  \n1.  From the **File** menu, choose **New**, and then **Project** to open the **New Project** dialog box.  \n  \n2.  Create a Windows Forms application named `BaseFormLibrary`.  \n  \n3.  To create a class library instead of a standard Windows Forms application, in **Solution Explorer**, right-click the **BaseFormLibrary** project node and then select **Properties**.  \n  \n4.  In the properties for the project, change the **Output type** from **Windows Application** to **Class Library**.  \n  \n5.  From the **File** menu, choose **Save All** to save the project and files to the default location.  \n  \n The next two procedures add buttons to the base form. To demonstrate visual inheritance, you will give the buttons different access levels by setting their `Modifiers` properties.  \n  \n#### To add a button that inheritors of the base form can modify  \n  \n1.  Open **Form1** in the designer.  \n  \n2.  On the **All Windows Forms** tab of the **Toolbox**, double-click **Button** to add a button to the form. Use the mouse to position and resize the button.  \n  \n3.  In the Properties window, set the following properties of the button:  \n  \n    -   Set the **Text** property to **Say Hello**.  \n  \n    -   Set the **(Name)** property to **btnProtected**.  \n  \n    -   Set the**Modifiers** property to **Protected**. This makes it possible for forms that inherit from **Form1** to modify the properties of **btnProtected**.  \n  \n4.  Double-click the **Say Hello** button to add an event handler for the **Click** event.  \n  \n5.  Add the following line of code to the event handler:  \n  \n    ```vb  \n    MessageBox.Show(\"Hello, World!\")  \n    ```  \n  \n    ```csharp  \n    MessageBox.Show(\"Hello, World!\");  \n    ```  \n  \n#### To add a button that cannot be modified by inheritors of the base form  \n  \n1.  Switch to design view by clicking the **Form1.vb [Design], Form1.cs [Design], or Form1.jsl [Design]** tab above the code editor, or by pressing F7.  \n  \n2.  Add a second button and set its properties as follows:  \n  \n    -   Set the **Text** property to **Say Goodbye**.  \n  \n    -   Set the **(Name)** property to **btnPrivate**.  \n  \n    -   Set the **Modifiers** property to **Private**. This makes it impossible for forms that inherit from **Form1** to modify the properties of **btnPrivate**.  \n  \n3.  Double-click the **Say Goodbye** button to add an event handler for the **Click** event. Place the following line of code in the event procedure:  \n  \n    ```vb  \n    MessageBox.Show(\"Goodbye!\")  \n    ```  \n  \n    ```csharp  \n    MessageBox.Show(\"Goodbye!\");  \n    ```  \n  \n4.  From the **Build** menu, choose **Build BaseForm Library** to build the class library.  \n  \n     Once the library is built, you can create a new project that inherits from the form you just created.  \n  \n#### To create a project containing a form that inherits from the base form  \n  \n1.  From the **File** menu, choose **Add** and then **New Project** to open the **Add New Project** dialog box.  \n  \n2.  Create a Windows Forms application named `InheritanceTest`.  \n  \n#### To add an inherited form  \n  \n1.  In **Solution Explorer**, right-click the **InheritanceTest** project, select **Add**, and then select**New Item**.  \n  \n2.  In the **Add New Item** dialog box, select the **Windows Forms** category (if you have a list of categories) and then select the **Inherited Form** template.  \n  \n3.  Leave the default name of `Form2` and then click **Add**.  \n  \n4.  In the **Inheritance Picker** dialog box, select **Form1** from the **BaseFormLibrary** project as the form to inherit from and click **OK**.  \n  \n     This creates a form in the **InheritanceTest** project that derives from the form in **BaseFormLibrary**.  \n  \n5.  Open the inherited form (**Form2**) in the designer by double-clicking it, if it is not already open.  \n  \n     In the designer, the inherited buttons have a symbol (![VisualBasicInheritanceSymbol screenshot](../../../../docs/framework/winforms/advanced/media/vbinheritanceglyph.gif \"vbInheritanceGlyph\")) in their upper corner, indicating they are inherited.  \n  \n6.  Select the **Say Hello** button and observe the resize handles. Because this button is protected, the inheritors can move it, resize it, change its caption, and make other modifications.  \n  \n7.  Select the private **Say Goodbye** button, and notice that it does not have resize handles. Additionally, in the **Properties** window, the properties of this button are grayed to indicate they cannot be modified.  \n  \n8.  If you are using [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]:  \n  \n    1.  In **Solution Explorer**, right-click **Form1** in the **InheritanceTest** project and then choose **Delete**. In the message box that appears, click **OK** to confirm the deletion.  \n  \n    2.  Open the Program.cs file and change the line `Application.Run(new Form1());` to `Application.Run(new Form2());`.  \n  \n9. In **Solution Explorer**, right-click the **InheritanceTest** project and select **Set As Startup Project**.  \n  \n10. In **Solution Explorer**, right-click the **InheritanceTest** project and select **Properties**.  \n  \n11. In the **InheritanceTest** property pages, set the **Startup object** to be the inherited form (**Form2**).  \n  \n12. Press F5 to run the application, and observe the behavior of the inherited form.  \n  \n## Next Steps  \n Inheritance for user controls works in much the same way. Open a new class library project and add a user control. Place constituent controls on it and compile the project. Open another new class library project and add a reference to the compiled class library. Also, try adding an inherited control (through the **Add New Items** dialog box) to the project and using the **Inheritance Picker**. Add a user control, and change the `Inherits` (`:` in [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]) statement. For more information, see [How to: Inherit Windows Forms](../../../../docs/framework/winforms/advanced/how-to-inherit-windows-forms.md).  \n  \n## See Also  \n [How to: Inherit Windows Forms](../../../../docs/framework/winforms/advanced/how-to-inherit-windows-forms.md)   \n [Windows Forms Visual Inheritance](../../../../docs/framework/winforms/advanced/windows-forms-visual-inheritance.md)   \n [Windows Forms](../../../../docs/framework/winforms/index.md)","nodes":[{"pos":[4,609],"nodes":[{"content":"Walkthrough: Demonstrating Visual Inheritance | Microsoft Docs","nodes":[{"pos":[0,62],"content":"Walkthrough: Demonstrating Visual Inheritance | Microsoft Docs","nodes":[{"content":"Walkthrough: Demonstrating Visual Inheritance | Microsoft Docs","pos":[0,62]}]}],"pos":[6,71],"yaml":true}],"content":"title: \"Walkthrough: Demonstrating Visual Inheritance | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"form inheritance, walkthroughs\"\n  - \"visual inheritance\"\n  - \"inheritance, walkthroughs\"\n  - \"walkthroughs [Windows Forms], visual inheritance\"\n  - \"Windows Forms, inheritance\"\nms.assetid: 01966086-3142-450e-8210-3fd4cb33f591\ncaps.latest.revision: 24\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[616,661],"content":"Walkthrough: Demonstrating Visual Inheritance","linkify":"Walkthrough: Demonstrating Visual Inheritance","nodes":[{"content":"Walkthrough: Demonstrating Visual Inheritance","pos":[0,45]}]},{"content":"Visual inheritance enables you to see the controls on the base form and to add new controls.","pos":[662,754]},{"content":"In this walkthrough you will create a base form and compile it into a class library.","pos":[755,839]},{"content":"You will import this class library into another project and create a new form that inherits from the base form.","pos":[840,951]},{"content":"During this walkthrough, you will learn how to:","pos":[952,999]},{"content":"Create a class library project containing a base form.","pos":[1009,1063]},{"content":"Add a button with properties that derived classes of the base form can modify.","pos":[1073,1151]},{"content":"Add a button that cannot be modified by inheritors of the base form.","pos":[1161,1229]},{"pos":[1239,1304],"content":"Create a project containing a form that inherits from <ph id=\"ph1\">`BaseForm`</ph>.","source":"Create a project containing a form that inherits from `BaseForm`."},{"content":"Ultimately, this walkthrough will demonstrate the difference between private and protected controls on an inherited form.","pos":[1311,1432]},{"pos":[1440,1816],"content":"[!NOTE]\n The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).","leadings":["","> "],"nodes":[{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).","pos":[9,374],"nodes":[{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.","pos":[0,130]},{"content":"To change your settings, choose <bpt id=\"p1\">**</bpt>Import and Export Settings<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu.","pos":[131,216],"source":" To change your settings, choose **Import and Export Settings** on the **Tools** menu."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Customizing Development Settings in Visual Studio<ept id=\"p1\">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.","pos":[217,365],"source":" For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)."}]}]},{"pos":[1824,1981],"content":"[!CAUTION]\n Not all controls support visual inheritance from a base form. The following controls do not support the scenario described in this walkthrough:","leadings":["","> "],"nodes":[{"content":"Not all controls support visual inheritance from a base form. The following controls do not support the scenario described in this walkthrough:","pos":[12,155],"nodes":[{"content":"Not all controls support visual inheritance from a base form.","pos":[0,61]},{"content":"The following controls do not support the scenario described in this walkthrough:","pos":[62,143]}]}]},{"pos":[2302,2434],"content":"These controls in the inherited form are always read-only regardless of the modifiers you use (<ph id=\"ph1\">`private`</ph>, <ph id=\"ph2\">`protected`</ph>, or <ph id=\"ph3\">`public`</ph>).","source":"These controls in the inherited form are always read-only regardless of the modifiers you use (`private`, `protected`, or `public`)."},{"pos":[2443,2457],"content":"Scenario Steps","linkify":"Scenario Steps","nodes":[{"content":"Scenario Steps","pos":[0,14]}]},{"content":"The first step is to create the base form.","pos":[2461,2503]},{"pos":[2514,2570],"content":"To create a class library project containing a base form","linkify":"To create a class library project containing a base form","nodes":[{"content":"To create a class library project containing a base form","pos":[0,56]}]},{"pos":[2580,2680],"content":"From the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, and then <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> to open the <bpt id=\"p4\">**</bpt>New Project<ept id=\"p4\">**</ept> dialog box.","source":"From the **File** menu, choose **New**, and then **Project** to open the **New Project** dialog box."},{"pos":[2690,2749],"content":"Create a Windows Forms application named <ph id=\"ph1\">`BaseFormLibrary`</ph>.","source":"Create a Windows Forms application named `BaseFormLibrary`."},{"pos":[2759,2940],"content":"To create a class library instead of a standard Windows Forms application, in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>BaseFormLibrary<ept id=\"p2\">**</ept> project node and then select <bpt id=\"p3\">**</bpt>Properties<ept id=\"p3\">**</ept>.","source":"To create a class library instead of a standard Windows Forms application, in **Solution Explorer**, right-click the **BaseFormLibrary** project node and then select **Properties**."},{"pos":[2950,3062],"content":"In the properties for the project, change the <bpt id=\"p1\">**</bpt>Output type<ept id=\"p1\">**</ept> from <bpt id=\"p2\">**</bpt>Windows Application<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>Class Library<ept id=\"p3\">**</ept>.","source":"In the properties for the project, change the **Output type** from **Windows Application** to **Class Library**."},{"pos":[3072,3170],"content":"From the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Save All<ept id=\"p2\">**</ept> to save the project and files to the default location.","source":"From the **File** menu, choose **Save All** to save the project and files to the default location."},{"content":"The next two procedures add buttons to the base form.","pos":[3177,3230]},{"content":"To demonstrate visual inheritance, you will give the buttons different access levels by setting their <ph id=\"ph1\">`Modifiers`</ph> properties.","pos":[3231,3356],"source":" To demonstrate visual inheritance, you will give the buttons different access levels by setting their `Modifiers` properties."},{"pos":[3367,3426],"content":"To add a button that inheritors of the base form can modify","linkify":"To add a button that inheritors of the base form can modify","nodes":[{"content":"To add a button that inheritors of the base form can modify","pos":[0,59]}]},{"pos":[3436,3467],"content":"Open <bpt id=\"p1\">**</bpt>Form1<ept id=\"p1\">**</ept> in the designer.","source":"Open **Form1** in the designer."},{"content":"On the <bpt id=\"p1\">**</bpt>All Windows Forms<ept id=\"p1\">**</ept> tab of the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept>, double-click <bpt id=\"p3\">**</bpt>Button<ept id=\"p3\">**</ept> to add a button to the form.","pos":[3477,3582],"source":"On the **All Windows Forms** tab of the **Toolbox**, double-click **Button** to add a button to the form."},{"content":"Use the mouse to position and resize the button.","pos":[3583,3631]},{"content":"In the Properties window, set the following properties of the button:","pos":[3641,3710]},{"pos":[3724,3767],"content":"Set the <bpt id=\"p1\">**</bpt>Text<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>Say Hello<ept id=\"p2\">**</ept>.","source":"Set the **Text** property to **Say Hello**."},{"pos":[3781,3829],"content":"Set the <bpt id=\"p1\">**</bpt>(Name)<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>btnProtected<ept id=\"p2\">**</ept>.","source":"Set the **(Name)** property to **btnProtected**."},{"content":"Set the<bpt id=\"p1\">**</bpt>Modifiers<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>Protected<ept id=\"p2\">**</ept>.","pos":[3843,3890],"source":"Set the**Modifiers** property to **Protected**."},{"content":"This makes it possible for forms that inherit from <bpt id=\"p1\">**</bpt>Form1<ept id=\"p1\">**</ept> to modify the properties of <bpt id=\"p2\">**</bpt>btnProtected<ept id=\"p2\">**</ept>.","pos":[3891,3997],"source":" This makes it possible for forms that inherit from **Form1** to modify the properties of **btnProtected**."},{"pos":[4007,4093],"content":"Double-click the <bpt id=\"p1\">**</bpt>Say Hello<ept id=\"p1\">**</ept> button to add an event handler for the <bpt id=\"p2\">**</bpt>Click<ept id=\"p2\">**</ept> event.","source":"Double-click the **Say Hello** button to add an event handler for the **Click** event."},{"content":"Add the following line of code to the event handler:","pos":[4103,4155]},{"pos":[4299,4369],"content":"To add a button that cannot be modified by inheritors of the base form","linkify":"To add a button that cannot be modified by inheritors of the base form","nodes":[{"content":"To add a button that cannot be modified by inheritors of the base form","pos":[0,70]}]},{"pos":[4379,4526],"content":"Switch to design view by clicking the <bpt id=\"p1\">**</bpt>Form1.vb [Design], Form1.cs [Design], or Form1.jsl [Design]<ept id=\"p1\">**</ept> tab above the code editor, or by pressing F7.","source":"Switch to design view by clicking the **Form1.vb [Design], Form1.cs [Design], or Form1.jsl [Design]** tab above the code editor, or by pressing F7."},{"content":"Add a second button and set its properties as follows:","pos":[4536,4590]},{"pos":[4604,4649],"content":"Set the <bpt id=\"p1\">**</bpt>Text<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>Say Goodbye<ept id=\"p2\">**</ept>.","source":"Set the **Text** property to **Say Goodbye**."},{"pos":[4663,4709],"content":"Set the <bpt id=\"p1\">**</bpt>(Name)<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>btnPrivate<ept id=\"p2\">**</ept>.","source":"Set the **(Name)** property to **btnPrivate**."},{"content":"Set the <bpt id=\"p1\">**</bpt>Modifiers<ept id=\"p1\">**</ept> property to <bpt id=\"p2\">**</bpt>Private<ept id=\"p2\">**</ept>.","pos":[4723,4769],"source":"Set the **Modifiers** property to **Private**."},{"content":"This makes it impossible for forms that inherit from <bpt id=\"p1\">**</bpt>Form1<ept id=\"p1\">**</ept> to modify the properties of <bpt id=\"p2\">**</bpt>btnPrivate<ept id=\"p2\">**</ept>.","pos":[4770,4876],"source":" This makes it impossible for forms that inherit from **Form1** to modify the properties of **btnPrivate**."},{"content":"Double-click the <bpt id=\"p1\">**</bpt>Say Goodbye<ept id=\"p1\">**</ept> button to add an event handler for the <bpt id=\"p2\">**</bpt>Click<ept id=\"p2\">**</ept> event.","pos":[4886,4974],"source":"Double-click the **Say Goodbye** button to add an event handler for the **Click** event."},{"content":"Place the following line of code in the event procedure:","pos":[4975,5031]},{"pos":[5164,5250],"content":"From the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Build BaseForm Library<ept id=\"p2\">**</ept> to build the class library.","source":"From the **Build** menu, choose **Build BaseForm Library** to build the class library."},{"content":"Once the library is built, you can create a new project that inherits from the form you just created.","pos":[5261,5362]},{"pos":[5373,5443],"content":"To create a project containing a form that inherits from the base form","linkify":"To create a project containing a form that inherits from the base form","nodes":[{"content":"To create a project containing a form that inherits from the base form","pos":[0,70]}]},{"pos":[5453,5560],"content":"From the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept> and then <bpt id=\"p3\">**</bpt>New Project<ept id=\"p3\">**</ept> to open the <bpt id=\"p4\">**</bpt>Add New Project<ept id=\"p4\">**</ept> dialog box.","source":"From the **File** menu, choose **Add** and then **New Project** to open the **Add New Project** dialog box."},{"pos":[5570,5629],"content":"Create a Windows Forms application named <ph id=\"ph1\">`InheritanceTest`</ph>.","source":"Create a Windows Forms application named `InheritanceTest`."},{"pos":[5640,5664],"content":"To add an inherited form","linkify":"To add an inherited form","nodes":[{"content":"To add an inherited form","pos":[0,24]}]},{"pos":[5674,5789],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>InheritanceTest<ept id=\"p2\">**</ept> project, select <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>, and then select<bpt id=\"p4\">**</bpt>New Item<ept id=\"p4\">**</ept>.","source":"In **Solution Explorer**, right-click the **InheritanceTest** project, select **Add**, and then select**New Item**."},{"pos":[5799,5956],"content":"In the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> dialog box, select the <bpt id=\"p2\">**</bpt>Windows Forms<ept id=\"p2\">**</ept> category (if you have a list of categories) and then select the <bpt id=\"p3\">**</bpt>Inherited Form<ept id=\"p3\">**</ept> template.","source":"In the **Add New Item** dialog box, select the **Windows Forms** category (if you have a list of categories) and then select the **Inherited Form** template."},{"pos":[5966,6023],"content":"Leave the default name of <ph id=\"ph1\">`Form2`</ph> and then click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","source":"Leave the default name of `Form2` and then click **Add**."},{"pos":[6033,6174],"content":"In the <bpt id=\"p1\">**</bpt>Inheritance Picker<ept id=\"p1\">**</ept> dialog box, select <bpt id=\"p2\">**</bpt>Form1<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>BaseFormLibrary<ept id=\"p3\">**</ept> project as the form to inherit from and click <bpt id=\"p4\">**</bpt>OK<ept id=\"p4\">**</ept>.","source":"In the **Inheritance Picker** dialog box, select **Form1** from the **BaseFormLibrary** project as the form to inherit from and click **OK**."},{"pos":[6185,6290],"content":"This creates a form in the <bpt id=\"p1\">**</bpt>InheritanceTest<ept id=\"p1\">**</ept> project that derives from the form in <bpt id=\"p2\">**</bpt>BaseFormLibrary<ept id=\"p2\">**</ept>.","source":"This creates a form in the **InheritanceTest** project that derives from the form in **BaseFormLibrary**."},{"pos":[6300,6401],"content":"Open the inherited form (<bpt id=\"p1\">**</bpt>Form2<ept id=\"p1\">**</ept>) in the designer by double-clicking it, if it is not already open.","source":"Open the inherited form (**Form2**) in the designer by double-clicking it, if it is not already open."},{"pos":[6412,6659],"content":"In the designer, the inherited buttons have a symbol (<bpt id=\"p1\">![</bpt>VisualBasicInheritanceSymbol screenshot<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/winforms/advanced/media/vbinheritanceglyph.gif \"</bpt>vbInheritanceGlyph<ept id=\"p2\">\")</ept>) in their upper corner, indicating they are inherited.","source":"In the designer, the inherited buttons have a symbol (![VisualBasicInheritanceSymbol screenshot](../../../../docs/framework/winforms/advanced/media/vbinheritanceglyph.gif \"vbInheritanceGlyph\")) in their upper corner, indicating they are inherited."},{"content":"Select the <bpt id=\"p1\">**</bpt>Say Hello<ept id=\"p1\">**</ept> button and observe the resize handles.","pos":[6669,6732],"source":"Select the **Say Hello** button and observe the resize handles."},{"content":"Because this button is protected, the inheritors can move it, resize it, change its caption, and make other modifications.","pos":[6733,6855]},{"content":"Select the private <bpt id=\"p1\">**</bpt>Say Goodbye<ept id=\"p1\">**</ept> button, and notice that it does not have resize handles.","pos":[6865,6956],"source":"Select the private **Say Goodbye** button, and notice that it does not have resize handles."},{"content":"Additionally, in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, the properties of this button are grayed to indicate they cannot be modified.","pos":[6957,7078],"source":" Additionally, in the **Properties** window, the properties of this button are grayed to indicate they cannot be modified."},{"pos":[7088,7159],"content":"If you are using <ph id=\"ph1\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>:","source":"If you are using [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]:"},{"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click <bpt id=\"p2\">**</bpt>Form1<ept id=\"p2\">**</ept> in the <bpt id=\"p3\">**</bpt>InheritanceTest<ept id=\"p3\">**</ept> project and then choose <bpt id=\"p4\">**</bpt>Delete<ept id=\"p4\">**</ept>.","pos":[7173,7283],"source":"In **Solution Explorer**, right-click **Form1** in the **InheritanceTest** project and then choose **Delete**."},{"content":"In the message box that appears, click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to confirm the deletion.","pos":[7284,7354],"source":" In the message box that appears, click **OK** to confirm the deletion."},{"pos":[7368,7480],"content":"Open the Program.cs file and change the line <ph id=\"ph1\">`Application.Run(new Form1());`</ph> to <ph id=\"ph2\">`Application.Run(new Form2());`</ph>.","source":"Open the Program.cs file and change the line `Application.Run(new Form1());` to `Application.Run(new Form2());`."},{"pos":[7489,7597],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>InheritanceTest<ept id=\"p2\">**</ept> project and select <bpt id=\"p3\">**</bpt>Set As Startup Project<ept id=\"p3\">**</ept>.","source":"In **Solution Explorer**, right-click the **InheritanceTest** project and select **Set As Startup Project**."},{"pos":[7607,7703],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>InheritanceTest<ept id=\"p2\">**</ept> project and select <bpt id=\"p3\">**</bpt>Properties<ept id=\"p3\">**</ept>.","source":"In **Solution Explorer**, right-click the **InheritanceTest** project and select **Properties**."},{"pos":[7713,7820],"content":"In the <bpt id=\"p1\">**</bpt>InheritanceTest<ept id=\"p1\">**</ept> property pages, set the <bpt id=\"p2\">**</bpt>Startup object<ept id=\"p2\">**</ept> to be the inherited form (<bpt id=\"p3\">**</bpt>Form2<ept id=\"p3\">**</ept>).","source":"In the **InheritanceTest** property pages, set the **Startup object** to be the inherited form (**Form2**)."},{"content":"Press F5 to run the application, and observe the behavior of the inherited form.","pos":[7830,7910]},{"pos":[7919,7929],"content":"Next Steps","linkify":"Next Steps","nodes":[{"content":"Next Steps","pos":[0,10]}]},{"content":"Inheritance for user controls works in much the same way.","pos":[7933,7990]},{"content":"Open a new class library project and add a user control.","pos":[7991,8047]},{"content":"Place constituent controls on it and compile the project.","pos":[8048,8105]},{"content":"Open another new class library project and add a reference to the compiled class library.","pos":[8106,8195]},{"content":"Also, try adding an inherited control (through the <bpt id=\"p1\">**</bpt>Add New Items<ept id=\"p1\">**</ept> dialog box) to the project and using the <bpt id=\"p2\">**</bpt>Inheritance Picker<ept id=\"p2\">**</ept>.","pos":[8196,8329],"source":" Also, try adding an inherited control (through the **Add New Items** dialog box) to the project and using the **Inheritance Picker**."},{"content":"Add a user control, and change the <ph id=\"ph1\">`Inherits`</ph> (<ph id=\"ph2\">`:`</ph> in <ph id=\"ph3\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>) statement.","pos":[8330,8449],"source":" Add a user control, and change the `Inherits` (`:` in [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]) statement."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Inherit Windows Forms<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-inherit-windows-forms.md)</ept>.","pos":[8450,8586],"source":" For more information, see [How to: Inherit Windows Forms](../../../../docs/framework/winforms/advanced/how-to-inherit-windows-forms.md)."},{"pos":[8595,8603],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>How to: Inherit Windows Forms<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-inherit-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[8607,8717],"source":"[How to: Inherit Windows Forms](../../../../docs/framework/winforms/advanced/how-to-inherit-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>Windows Forms Visual Inheritance<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/windows-forms-visual-inheritance.md)</ept><ph id=\"ph1\"> </ph>","pos":[8721,8838],"source":"[Windows Forms Visual Inheritance](../../../../docs/framework/winforms/advanced/windows-forms-visual-inheritance.md) "},{"content":"<bpt id=\"p1\">[</bpt>Windows Forms<ept id=\"p1\">](../../../../docs/framework/winforms/index.md)</ept>","pos":[8842,8903],"source":"[Windows Forms](../../../../docs/framework/winforms/index.md)"}]}