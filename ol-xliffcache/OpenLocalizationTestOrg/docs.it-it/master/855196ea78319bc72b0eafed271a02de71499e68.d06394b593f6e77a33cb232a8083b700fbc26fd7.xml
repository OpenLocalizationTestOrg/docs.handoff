{"content":"---\ntitle: \"Applying an XSLT Transform to a DataSet | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 09f2e4ee-1d08-4ba8-8936-83394fee319d\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Applying an XSLT Transform to a DataSet\nThe **WriteXml** method of the <xref:System.Data.DataSet> enables you to write the contents of a **DataSet** as XML data. A common task is to then transform that XML to another format using XSL transformations (XSLT). However, synchronizing a **DataSet** with an <xref:System.Xml.XmlDataDocument> enables you to apply an XSLT stylesheet to the contents of a **DataSet** without having to first write the contents of the **DataSet** as XML data using **WriteXml**.  \n  \n The following example populates a **DataSet** with tables and relationships, synchronizes the **DataSet** with an **XmlDataDocument**, and writes a portion of the **DataSet** as an HTML file using an XSLT stylesheet. Following are the contents of the XSLT stylesheet.  \n  \n```  \n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">  \n  \n<xsl:template match=\"CustomerOrders\">  \n  <HTML>  \n  <STYLE>  \n  BODY {font-family:verdana;font-size:9pt}  \n  TD   {font-size:8pt}  \n  </STYLE>  \n    <BODY>  \n    <TABLE BORDER=\"1\">  \n      <xsl:apply-templates select=\"Customers\"/>  \n    </TABLE>  \n    </BODY>  \n  </HTML>  \n</xsl:template>  \n  \n<xsl:template match=\"Customers\">  \n    <TR><TD>  \n      <xsl:value-of select=\"ContactName\"/>, <xsl:value-of select=\"Phone\"/><BR/>  \n    </TD></TR>  \n      <xsl:apply-templates select=\"Orders\"/>  \n</xsl:template>  \n  \n<xsl:template match=\"Orders\">  \n  <TABLE BORDER=\"1\">  \n    <TR><TD valign=\"top\"><B>Order:</B></TD><TD valign=\"top\"><xsl:value-of select=\"OrderID\"/></TD></TR>  \n    <TR><TD valign=\"top\"><B>Date:</B></TD><TD valign=\"top\"><xsl:value-of select=\"OrderDate\"/></TD></TR>  \n    <TR><TD valign=\"top\"><B>Ship To:</B></TD>  \n        <TD valign=\"top\"><xsl:value-of select=\"ShipName\"/><BR/>  \n        <xsl:value-of select=\"ShipAddress\"/><BR/>  \n        <xsl:value-of select=\"ShipCity\"/>, <xsl:value-of select=\"ShipRegion\"/>  <xsl:value-of select=\"ShipPostalCode\"/><BR/>  \n        <xsl:value-of select=\"ShipCountry\"/></TD></TR>  \n  </TABLE>  \n</xsl:template>  \n  \n</xsl:stylesheet>  \n```  \n  \n The following code fills the **DataSet** and applies the XSLT style sheet.  \n  \n> [!NOTE]\n>  If you are applying an XSLT style sheet to a **DataSet** that contains relations, you achieve best performance if you set the **Nested** property of the <xref:System.Data.DataRelation> to **true** for each nested relation. This allows you to use XSLT style sheets that implement natural top-down processing to navigate the hierarchy and transform the data, as opposed to using performance-intensive XPath location axes (for example, preceding-sibling and following-sibling in style sheet node test expressions) to navigate it. For more information on nested relations, see [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md).  \n  \n```vb  \n' Assumes connection is a valid SqlConnection.  \nDim dataSet As DataSet = New DataSet(\"CustomerOrders\")  \n  \nDim customerAdapter As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT * FROM Customers\", connection)  \ncustomerAdapter.Fill(dataSet, \"Customers\")  \n  \nDim orderAdapter As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT * FROM Orders\", connection)  \norderAdapter.Fill(dataSet, \"Orders\")  \n  \nconnection.Close()  \n  \ndataSet.Relations.Add(\"CustOrders\", _  \ndataSet.Tables(\"Customers\").Columns(\"CustomerID\"), _  \ndataSet.Tables(\"Orders\").Columns(\"CustomerID\")).Nested = true  \n  \nDim xmlDoc As XmlDataDocument = New XmlDataDocument(dataSet)   \n  \nDim xslTran As XslTransform = New XslTransform  \nxslTran.Load(\"transform.xsl\")  \n  \nDim writer As XmlTextWriter = New XmlTextWriter( _  \n  \"xslt_output.html\", System.Text.Encoding.UTF8)  \n  \nxslTran.Transform(xmlDoc, Nothing, writer)  \nwriter.Close()  \n```  \n  \n```csharp  \n// Assumes connection is a valid SqlConnection.  \nconnection.Open();  \n  \nDataSet custDS = new DataSet(\"CustomerDataSet\");  \n  \nSqlDataAdapter customerAdapter = new SqlDataAdapter(  \n  \"SELECT * FROM Customers\", connection);  \ncustomerAdapter.Fill(custDS, \"Customers\");  \n  \nSqlDataAdapter orderAdapter = new SqlDataAdapter(  \n  \"SELECT * FROM Orders\", connection);  \norderAdapter.Fill(custDS, \"Orders\");  \n  \nconnection.Close();  \n  \ncustDS.Relations.Add(\"CustOrders\",  \n  custDS.Tables[\"Customers\"].Columns[\"CustomerID\"],  \n                     custDS.Tables[\"Orders\"].Columns[\"CustomerID\"]).Nested = true;  \n  \nXmlDataDocument xmlDoc = new XmlDataDocument(custDS);   \n  \nXslTransform xslTran = new XslTransform();  \nxslTran.Load(\"transform.xsl\");  \n  \nXmlTextWriter writer = new XmlTextWriter(\"xslt_output.html\",   \n  System.Text.Encoding.UTF8);  \n  \nxslTran.Transform(xmlDoc, null, writer);  \nwriter.Close();  \n```  \n  \n## See Also  \n [DataSet and XmlDataDocument Synchronization](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[4,370],"nodes":[{"content":"Applying an XSLT Transform to a DataSet | Microsoft Docs","nodes":[{"pos":[0,56],"content":"Applying an XSLT Transform to a DataSet | Microsoft Docs","nodes":[{"content":"Applying an XSLT Transform to a DataSet | Microsoft Docs","pos":[0,56]}]}],"pos":[6,65],"yaml":true}],"content":"title: \"Applying an XSLT Transform to a DataSet | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 09f2e4ee-1d08-4ba8-8936-83394fee319d\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[377,416],"content":"Applying an XSLT Transform to a DataSet","linkify":"Applying an XSLT Transform to a DataSet","nodes":[{"content":"Applying an XSLT Transform to a DataSet","pos":[0,39]}]},{"content":"The <bpt id=\"p1\">**</bpt>WriteXml<ept id=\"p1\">**</ept> method of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> enables you to write the contents of a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> as XML data.","pos":[417,538],"source":"The **WriteXml** method of the <xref:System.Data.DataSet> enables you to write the contents of a **DataSet** as XML data."},{"content":"A common task is to then transform that XML to another format using XSL transformations (XSLT).","pos":[539,634]},{"content":"However, synchronizing a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> with an <ph id=\"ph1\">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> enables you to apply an XSLT stylesheet to the contents of a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> without having to first write the contents of the <bpt id=\"p3\">**</bpt>DataSet<ept id=\"p3\">**</ept> as XML data using <bpt id=\"p4\">**</bpt>WriteXml<ept id=\"p4\">**</ept>.","pos":[635,880],"source":" However, synchronizing a **DataSet** with an <xref:System.Xml.XmlDataDocument> enables you to apply an XSLT stylesheet to the contents of a **DataSet** without having to first write the contents of the **DataSet** as XML data using **WriteXml**."},{"content":"The following example populates a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> with tables and relationships, synchronizes the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> with an <bpt id=\"p3\">**</bpt>XmlDataDocument<ept id=\"p3\">**</ept>, and writes a portion of the <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept> as an HTML file using an XSLT stylesheet.","pos":[887,1103],"source":"The following example populates a **DataSet** with tables and relationships, synchronizes the **DataSet** with an **XmlDataDocument**, and writes a portion of the **DataSet** as an HTML file using an XSLT stylesheet."},{"content":"Following are the contents of the XSLT stylesheet.","pos":[1104,1154]},{"pos":[2444,2518],"content":"The following code fills the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> and applies the XSLT style sheet.","source":"The following code fills the **DataSet** and applies the XSLT style sheet."},{"pos":[2526,3229],"content":"[!NOTE]\n If you are applying an XSLT style sheet to a **DataSet** that contains relations, you achieve best performance if you set the **Nested** property of the <xref:System.Data.DataRelation> to **true** for each nested relation. This allows you to use XSLT style sheets that implement natural top-down processing to navigate the hierarchy and transform the data, as opposed to using performance-intensive XPath location axes (for example, preceding-sibling and following-sibling in style sheet node test expressions) to navigate it. For more information on nested relations, see [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md).","leadings":["","> "],"nodes":[{"content":"If you are applying an XSLT style sheet to a **DataSet** that contains relations, you achieve best performance if you set the **Nested** property of the <xref:System.Data.DataRelation> to **true** for each nested relation. This allows you to use XSLT style sheets that implement natural top-down processing to navigate the hierarchy and transform the data, as opposed to using performance-intensive XPath location axes (for example, preceding-sibling and following-sibling in style sheet node test expressions) to navigate it. For more information on nested relations, see [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md).","pos":[9,701],"nodes":[{"content":"If you are applying an XSLT style sheet to a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> that contains relations, you achieve best performance if you set the <bpt id=\"p2\">**</bpt>Nested<ept id=\"p2\">**</ept> property of the <ph id=\"ph1\">&lt;xref:System.Data.DataRelation&gt;</ph> to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept> for each nested relation.","pos":[0,222],"source":"If you are applying an XSLT style sheet to a **DataSet** that contains relations, you achieve best performance if you set the **Nested** property of the <xref:System.Data.DataRelation> to **true** for each nested relation."},{"content":"This allows you to use XSLT style sheets that implement natural top-down processing to navigate the hierarchy and transform the data, as opposed to using performance-intensive XPath location axes (for example, preceding-sibling and following-sibling in style sheet node test expressions) to navigate it.","pos":[223,526]},{"content":"For more information on nested relations, see <bpt id=\"p1\">[</bpt>Nesting DataRelations<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)</ept>.","pos":[527,692],"source":" For more information on nested relations, see [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)."}]}]},{"pos":[5104,5112],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>DataSet and XmlDataDocument Synchronization<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)</ept><ph id=\"ph1\"> </ph>","pos":[5116,5279],"source":"[DataSet and XmlDataDocument Synchronization](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md) "},{"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[5283,5386],"source":"[ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}