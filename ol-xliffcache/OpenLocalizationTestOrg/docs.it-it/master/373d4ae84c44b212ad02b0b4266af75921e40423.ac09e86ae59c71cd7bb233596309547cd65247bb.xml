{"content":"---\ntitle: \"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Nothing keyword [Visual Basic], variable assignment\"\n  - \"object variables [Visual Basic], null reference\"\nms.assetid: e6d30578-bdae-4142-a3ac-a10697bf696a\n---\n# How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)\nYou can disassociate an object variable from any object instance by setting it to [Nothing](../../../../visual-basic/language-reference/nothing.md).  \n  \n### To disassociate an object variable from any object instance  \n  \n-   Set the variable to `Nothing` in an assignment statement.  \n  \n    ```  \n    ' Assume account is a defined class  \n    Dim currentAccount As account  \n    currentAccount = Nothing  \n    ```  \n  \n## Robust Programming  \n If your code tries to access a member of an object variable that has been set to `Nothing`, a <xref:System.NullReferenceException> occurs. If you set an object variable to `Nothing` frequently, or if it is possible the variable is not initialized, it is a good idea to enclose member accesses in a `Try...Catch...Finally` block.  \n  \n## .NET Framework Security  \n If you use an object variable for objects that contain confidential or sensitive data, you can set the variable to `Nothing` when you are not actively dealing with one of those objects. This reduces the chance of malicious code gaining access to the data.  \n  \n## See also\n\n- <xref:System.NullReferenceException>\n- [Object Variables](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)\n- [Object Variable Assignment](../../../../visual-basic/programming-guide/language-features/variables/object-variable-assignment.md)\n- [Nothing](../../../../visual-basic/language-reference/nothing.md)\n- [Try...Catch...Finally Statement](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)\n","nodes":[{"pos":[4,288],"embed":true,"restype":"x-metadata","content":"title: \"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Nothing keyword [Visual Basic], variable assignment\"\n  - \"object variables [Visual Basic], null reference\"\nms.assetid: e6d30578-bdae-4142-a3ac-a10697bf696a","nodes":[{"content":"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)","nodes":[{"pos":[0,72],"content":"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)","nodes":[{"content":"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)","pos":[0,72]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[295,367],"content":"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)","linkify":"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)","nodes":[{"content":"How to: Make an Object Variable Not Refer to Any Instance (Visual Basic)","pos":[0,72]}]},{"pos":[368,516],"content":"You can disassociate an object variable from any object instance by setting it to <bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../../../visual-basic/language-reference/nothing.md)</ept>.","source":"You can disassociate an object variable from any object instance by setting it to [Nothing](../../../../visual-basic/language-reference/nothing.md)."},{"pos":[526,585],"content":"To disassociate an object variable from any object instance","linkify":"To disassociate an object variable from any object instance","nodes":[{"content":"To disassociate an object variable from any object instance","pos":[0,59]}]},{"pos":[595,652],"content":"Set the variable to <ph id=\"ph1\">`Nothing`</ph> in an assignment statement.","source":"Set the variable to `Nothing` in an assignment statement."},{"pos":[793,811],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"If your code tries to access a member of an object variable that has been set to <ph id=\"ph1\">`Nothing`</ph>, a <ph id=\"ph2\">&lt;xref:System.NullReferenceException&gt;</ph> occurs.","pos":[815,953],"source":"If your code tries to access a member of an object variable that has been set to `Nothing`, a <xref:System.NullReferenceException> occurs."},{"content":"If you set an object variable to <ph id=\"ph1\">`Nothing`</ph> frequently, or if it is possible the variable is not initialized, it is a good idea to enclose member accesses in a <ph id=\"ph2\">`Try...Catch...Finally`</ph> block.","pos":[954,1143],"source":" If you set an object variable to `Nothing` frequently, or if it is possible the variable is not initialized, it is a good idea to enclose member accesses in a `Try...Catch...Finally` block."},{"pos":[1152,1175],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"If you use an object variable for objects that contain confidential or sensitive data, you can set the variable to <ph id=\"ph1\">`Nothing`</ph> when you are not actively dealing with one of those objects.","pos":[1179,1364],"source":"If you use an object variable for objects that contain confidential or sensitive data, you can set the variable to `Nothing` when you are not actively dealing with one of those objects."},{"content":"This reduces the chance of malicious code gaining access to the data.","pos":[1365,1434]},{"pos":[1443,1451],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1494,1604],"content":"<bpt id=\"p1\">[</bpt>Object Variables<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept>","source":"[Object Variables](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)"},{"pos":[1607,1737],"content":"<bpt id=\"p1\">[</bpt>Object Variable Assignment<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-assignment.md)</ept>","source":"[Object Variable Assignment](../../../../visual-basic/programming-guide/language-features/variables/object-variable-assignment.md)"},{"pos":[1740,1805],"content":"<bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../../../visual-basic/language-reference/nothing.md)</ept>","source":"[Nothing](../../../../visual-basic/language-reference/nothing.md)"},{"pos":[1808,1928],"content":"<bpt id=\"p1\">[</bpt>Try...Catch...Finally Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>","source":"[Try...Catch...Finally Statement](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)"}]}