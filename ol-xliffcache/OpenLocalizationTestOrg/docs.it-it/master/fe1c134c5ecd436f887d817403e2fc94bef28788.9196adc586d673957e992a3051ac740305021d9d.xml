{"content":"---\ntitle: \"ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: ba28fe4e-5491-4670-bff7-7fde572d7593\ncaps.latest.revision: 4\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method\nRetrieves a generic dictionary map.  \n  \n## Syntax  \n  \n```  \n  \nHRESULT GetGenericDictionaryInfo(  \n   [out] ICorDebugMemoryBuffer** ppMemoryBuffer  \n);  \n  \n```  \n  \n#### Parameters  \n `ppMemoryBuffer`  \n [out] A pointer to the address of an [ICorDebugMemoryBuffer](../../../../docs/framework/unmanaged-api/debugging/icordebugmemorybuffer-interface.md) object containing the generic dictionary map. See the Remarks section for more information.  \n  \n## Remarks  \n  \n> [!NOTE]\n>  This method is available with .NET Native only.  \n  \n The map consists of two top-level sections:  \n  \n-   A [directory](#Directory) containing the relative virtual addresses (RVA) of all dictionaries included in this map.  \n  \n-   A byte-aligned [heap](#Heap) that contains object instantiation information. It starts immediately after the last directory entry.  \n  \n<a name=\"Directory\"></a>   \n## The Directory  \n Each entry in the directory refers to an offset inside the heap; that is, it is an offset that is relative to the start of the heap. The value of individual entries is not necessarily unique; it is possible for multiple directory entries to point to the same offset in the heap.  \n  \n The directory portion of the generic dictionary map has the following structure:  \n  \n-   The first 4 bytes contains the number of dictionary entries (that is, the number of relative virtual addresses in the dictionary). We will refer to this value as *N*. If the high bit is set, the entries are sorted by relative virtual address in ascending order.  \n  \n-   The *N* directory entries follow. Each entry consists of 8 bytes, in two 4-byte segments:  \n  \n    -   Bytes 0-3: RVA; the dictionary's relative virtual address.  \n  \n    -   Bytes 4-7: Offset; an offset relative to the start of the heap.  \n  \n<a name=\"Heap\"></a>   \n## The Heap  \n The heap’s size can be computed by a stream reader by subtracting the length of the stream from the directory size + 4. In other words:  \n  \n```  \nHeap Size = Stream.Length – (Directory Size + 4)  \n```  \n  \n where the directory size is `N * 8`.  \n  \n The format for each instantiation information item on the heap is:  \n  \n-   The length of this instantiation information item in bytes in compressed ECMA metadata format. The value excludes this length information.  \n  \n-   The number of generic instantiation types, or *T*, in compressed ECMA metadata format.  \n  \n-   *T* types, each represented in ECMA type signature format.  \n  \n The inclusion of the length for each heap element enables simple sorting of the directory section without affecting the heap.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]  \n  \n## See Also  \n [ICorDebugSymbolProvider2 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugsymbolprovider2-interface.md)   \n [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)","nodes":[{"pos":[12,86],"content":"ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method | Microsoft Docs","pos":[0,74]}]},{"pos":[413,470],"content":"ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method","linkify":"ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method","nodes":[{"content":"ICorDebugSymbolProvider2::GetGenericDictionaryInfo Method","pos":[0,57]}]},{"content":"Retrieves a generic dictionary map.","pos":[471,506]},{"pos":[515,521],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[644,654],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to the address of an <bpt id=\"p1\">[</bpt>ICorDebugMemoryBuffer<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmemorybuffer-interface.md)</ept> object containing the generic dictionary map.","pos":[678,871],"source":" [out] A pointer to the address of an [ICorDebugMemoryBuffer](../../../../docs/framework/unmanaged-api/debugging/icordebugmemorybuffer-interface.md) object containing the generic dictionary map."},{"content":"See the Remarks section for more information.","pos":[872,917]},{"pos":[926,933],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[941,999],"content":"[!NOTE]\n This method is available with .NET Native only.","leadings":["","> "],"nodes":[{"content":"This method is available with .NET Native only.","pos":[9,56]}]},{"content":"The map consists of two top-level sections:","pos":[1006,1049]},{"pos":[1059,1174],"content":"A <bpt id=\"p1\">[</bpt>directory<ept id=\"p1\">](#Directory)</ept> containing the relative virtual addresses (RVA) of all dictionaries included in this map.","source":"A [directory](#Directory) containing the relative virtual addresses (RVA) of all dictionaries included in this map."},{"content":"A byte-aligned <bpt id=\"p1\">[</bpt>heap<ept id=\"p1\">](#Heap)</ept> that contains object instantiation information.","pos":[1184,1260],"source":"A byte-aligned [heap](#Heap) that contains object instantiation information."},{"content":"It starts immediately after the last directory entry.","pos":[1261,1314]},{"pos":[1351,1364],"content":"The Directory","linkify":"The Directory","nodes":[{"content":"The Directory","pos":[0,13]}]},{"content":"Each entry in the directory refers to an offset inside the heap; that is, it is an offset that is relative to the start of the heap.","pos":[1368,1500]},{"content":"The value of individual entries is not necessarily unique; it is possible for multiple directory entries to point to the same offset in the heap.","pos":[1501,1646]},{"content":"The directory portion of the generic dictionary map has the following structure:","pos":[1653,1733]},{"content":"The first 4 bytes contains the number of dictionary entries (that is, the number of relative virtual addresses in the dictionary).","pos":[1743,1873]},{"content":"We will refer to this value as <bpt id=\"p1\">*</bpt>N<ept id=\"p1\">*</ept>. If the high bit is set, the entries are sorted by relative virtual address in ascending order.","pos":[1874,2004],"source":" We will refer to this value as *N*. If the high bit is set, the entries are sorted by relative virtual address in ascending order."},{"content":"The <bpt id=\"p1\">*</bpt>N<ept id=\"p1\">*</ept> directory entries follow.","pos":[2014,2047],"source":"The *N* directory entries follow."},{"content":"Each entry consists of 8 bytes, in two 4-byte segments:","pos":[2048,2103]},{"content":"Bytes 0-3: RVA; the dictionary's relative virtual address.","pos":[2117,2175]},{"content":"Bytes 4-7: Offset; an offset relative to the start of the heap.","pos":[2189,2252]},{"pos":[2284,2292],"content":"The Heap","linkify":"The Heap","nodes":[{"content":"The Heap","pos":[0,8]}]},{"content":"The heap’s size can be computed by a stream reader by subtracting the length of the stream from the directory size + 4.","pos":[2296,2415]},{"content":"In other words:","pos":[2416,2431]},{"pos":[2504,2540],"content":"where the directory size is <ph id=\"ph1\">`N * 8`</ph>.","source":"where the directory size is `N * 8`."},{"content":"The format for each instantiation information item on the heap is:","pos":[2547,2613]},{"content":"The length of this instantiation information item in bytes in compressed ECMA metadata format.","pos":[2623,2717]},{"content":"The value excludes this length information.","pos":[2718,2761]},{"pos":[2771,2857],"content":"The number of generic instantiation types, or <bpt id=\"p1\">*</bpt>T<ept id=\"p1\">*</ept>, in compressed ECMA metadata format.","source":"The number of generic instantiation types, or *T*, in compressed ECMA metadata format."},{"pos":[2867,2925],"content":"<bpt id=\"p1\">*</bpt>T<ept id=\"p1\">*</ept> types, each represented in ECMA type signature format.","source":"*T* types, each represented in ECMA type signature format."},{"content":"The inclusion of the length for each heap element enables simple sorting of the directory section without affecting the heap.","pos":[2932,3057]},{"pos":[3066,3078],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3082,3186],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3193,3229],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[3236,3261],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3268,3364],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]"},{"pos":[3373,3381],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugSymbolProvider2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugsymbolprovider2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3385,3512],"source":"[ICorDebugSymbolProvider2 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugsymbolprovider2-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","pos":[3515,3614],"source":" [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}