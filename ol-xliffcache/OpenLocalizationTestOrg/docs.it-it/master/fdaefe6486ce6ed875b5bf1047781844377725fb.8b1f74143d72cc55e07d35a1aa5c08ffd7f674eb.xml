{"content":"---\ntitle: \"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionUnwindFunctionEnter\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionEnter\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionEnter method [.NET Framework profiling]\"\n  - \"ExceptionUnwindFunctionEnter method [.NET Framework profiling]\"\nms.assetid: ea3dc625-5650-4bf4-8e67-01e42be065b1\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerCallback::ExceptionUnwindFunctionEnter Method\nNotifies the profiler that the unwind phase of exception handling has begun to unwind a function.  \n  \n## Syntax  \n  \n```  \nHRESULT ExceptionUnwindFunctionEnter(  \n    [in] FunctionID functionId);  \n```  \n  \n#### Parameters  \n `functionId`  \n [in] The ID of the function that is being unwound.  \n  \n## Remarks  \n The profiler should not block in its implementation of this method because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled. If the profiler blocks here and garbage collection is attempted, the runtime will block until this callback returns.  \n  \n The profiler's implementation of this method should not call into managed code or in any way cause a managed-memory allocation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)   \n [ExceptionUnwindFunctionLeave Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfunctionleave-method.md)","nodes":[{"pos":[4,805],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionUnwindFunctionEnter\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionEnter\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::ExceptionUnwindFunctionEnter method [.NET Framework profiling]\"\n  - \"ExceptionUnwindFunctionEnter method [.NET Framework profiling]\"\nms.assetid: ea3dc625-5650-4bf4-8e67-01e42be065b1\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method | Microsoft Docs","nodes":[{"pos":[0,74],"content":"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method | Microsoft Docs","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method | Microsoft Docs","pos":[0,74]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[812,869],"content":"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method","linkify":"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method","nodes":[{"content":"ICorProfilerCallback::ExceptionUnwindFunctionEnter Method","pos":[0,57]}]},{"content":"Notifies the profiler that the unwind phase of exception handling has begun to unwind a function.","pos":[870,967]},{"pos":[976,982],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1083,1093],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the function that is being unwound.","pos":[1113,1163]},{"pos":[1172,1179],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The profiler should not block in its implementation of this method because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled.","pos":[1183,1384]},{"content":"If the profiler blocks here and garbage collection is attempted, the runtime will block until this callback returns.","pos":[1385,1501]},{"content":"The profiler's implementation of this method should not call into managed code or in any way cause a managed-memory allocation.","pos":[1508,1635]},{"pos":[1644,1656],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1660,1764],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1771,1805],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[1812,1837],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1844,1952],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[1961,1969],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1973,2092],"source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>ExceptionUnwindFunctionLeave Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfunctionleave-method.md)</ept>","pos":[2096,2245],"source":"[ExceptionUnwindFunctionLeave Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionunwindfunctionleave-method.md)"}]}