{"content":"---\ntitle: \"Lambda expression cannot be converted to '<typename>' because '<typename>' is not a delegate type\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36625\"\n  - \"vbc36625\"\nhelpviewer_keywords: \n  - \"BC36625\"\nms.assetid: c03634d4-d831-4f8c-b6ab-566465968e4d\n---\n# Lambda expression cannot be converted to '\\<typename>' because '\\<typename>' is not a delegate type\nLambda expressions can be used where delegates are valid. They can be converted to compatible delegate types, but not to any other type. For example, you can define a delegate type and assign a lambda expression to it, or send a lambda expression as the argument to a <xref:System.Func%601> parameter. These examples are shown in the following code.  \n  \n```vb  \nModule Module1  \n  \n    Delegate Function FunDel(ByVal m As Integer) As Boolean  \n  \n    Sub Main()  \n  \n        ' Assign a lambda expression to a function delegate.  \n        Dim negative As FunDel = Function(n As Integer) n < 0  \n        Console.WriteLine(negative(-3))  \n  \n        ' Send a lambda as the argument to a delegate parameter.  \n        Dim numbers() As Integer = {3, 4, 2, 8, 1, 0, 9, 13, 42}  \n        Dim evens = numbers.Where(Function(n) n Mod 2 = 0)  \n  \n        For Each even In evens  \n            Console.WriteLine(even)  \n        Next  \n  \n    End Sub  \n  \nEnd Module  \n```  \n  \n **Error ID:** BC36625  \n  \n## See also\n\n- [Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)\n","nodes":[{"pos":[4,258],"embed":true,"restype":"x-metadata","content":"title: \"Lambda expression cannot be converted to '<typename>' because '<typename>' is not a delegate type\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36625\"\n  - \"vbc36625\"\nhelpviewer_keywords: \n  - \"BC36625\"\nms.assetid: c03634d4-d831-4f8c-b6ab-566465968e4d","nodes":[{"content":"Lambda expression cannot be converted to '<typename>' because '<typename>' is not a delegate type","nodes":[{"pos":[0,97],"content":"Lambda expression cannot be converted to '<ph id=\"ph1\">&lt;typename&gt;</ph>' because '<ph id=\"ph2\">&lt;typename&gt;</ph>' is not a delegate type","source":"Lambda expression cannot be converted to '<typename>' because '<typename>' is not a delegate type"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[265,364],"content":"Lambda expression cannot be converted to '\\<typename>' because '\\<typename>' is not a delegate type","linkify":"Lambda expression cannot be converted to '\\<typename>' because '\\<typename>' is not a delegate type","nodes":[{"content":"Lambda expression cannot be converted to '<ph id=\"ph1\">\\&lt;</ph>typename&gt;' because '<ph id=\"ph2\">\\&lt;</ph>typename&gt;' is not a delegate type","pos":[0,99],"source":"Lambda expression cannot be converted to '\\<typename>' because '\\<typename>' is not a delegate type"}]},{"content":"Lambda expressions can be used where delegates are valid.","pos":[365,422]},{"content":"They can be converted to compatible delegate types, but not to any other type.","pos":[423,501]},{"content":"For example, you can define a delegate type and assign a lambda expression to it, or send a lambda expression as the argument to a <ph id=\"ph1\">&lt;xref:System.Func%601&gt;</ph> parameter.","pos":[502,666],"source":" For example, you can define a delegate type and assign a lambda expression to it, or send a lambda expression as the argument to a <xref:System.Func%601> parameter."},{"content":"These examples are shown in the following code.","pos":[667,714]},{"pos":[1332,1353],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36625","source":"**Error ID:** BC36625"},{"pos":[1362,1370],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1374,1483],"content":"<bpt id=\"p1\">[</bpt>Lambda Expressions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>","source":"[Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)"}]}