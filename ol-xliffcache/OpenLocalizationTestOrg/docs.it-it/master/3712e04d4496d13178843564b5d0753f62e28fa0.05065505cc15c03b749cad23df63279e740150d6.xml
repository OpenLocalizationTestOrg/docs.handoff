{"content":"---\ntitle: \"Unsafe Code and Pointers - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"security [C#], type safety\"\n  - \"C# language, unsafe code\"\n  - \"type safety [C#]\"\n  - \"unsafe keyword [C#]\"\n  - \"unsafe code [C#]\"\n  - \"C# language, pointers\"\n  - \"pointers [C#], about pointers\"\nms.assetid: b0fcca10-a92d-4f2a-835b-b0ccae6739ee\n---\n# Unsafe Code and Pointers (C# Programming Guide)\nTo maintain type safety and security, C# does not support pointer arithmetic, by default. However, by using the [unsafe](../../../csharp/language-reference/keywords/unsafe.md) keyword, you can define an unsafe context in which pointers can be used. For more information about pointers, see the topic [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md).  \n  \n> [!NOTE]\n>  In the common language runtime (CLR), unsafe code is referred to as unverifiable code. Unsafe code in C# is not necessarily dangerous; it is just code whose safety cannot be verified by the CLR. The CLR will therefore only execute unsafe code if it is in a fully trusted assembly. If you use unsafe code, it is your responsibility to ensure that your code does not introduce security risks or pointer errors.  \n  \n## Unsafe Code Overview  \n Unsafe code has the following properties:  \n  \n-   Methods, types, and code blocks can be defined as unsafe.  \n  \n-   In some cases, unsafe code may increase an application's performance by removing array bounds checks.  \n  \n-   Unsafe code is required when you call native functions that require pointers.  \n  \n-   Using unsafe code introduces security and stability risks.  \n  \n-   In order for C# to compile unsafe code, the application must be compiled with [/unsafe](../../../csharp/language-reference/compiler-options/unsafe-compiler-option.md).  \n  \n## Related Sections  \n For more information, see:  \n  \n-   [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)  \n  \n-   [Fixed Size Buffers](../../../csharp/programming-guide/unsafe-code-pointers/fixed-size-buffers.md)  \n  \n-   [How to: Use Pointers to Copy an Array of Bytes](../../../csharp/programming-guide/unsafe-code-pointers/how-to-use-pointers-to-copy-an-array-of-bytes.md)  \n  \n-   [unsafe](../../../csharp/language-reference/keywords/unsafe.md)  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n","nodes":[{"pos":[4,371],"embed":true,"restype":"x-metadata","content":"title: \"Unsafe Code and Pointers - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"security [C#], type safety\"\n  - \"C# language, unsafe code\"\n  - \"type safety [C#]\"\n  - \"unsafe keyword [C#]\"\n  - \"unsafe code [C#]\"\n  - \"C# language, pointers\"\n  - \"pointers [C#], about pointers\"\nms.assetid: b0fcca10-a92d-4f2a-835b-b0ccae6739ee","nodes":[{"content":"Unsafe Code and Pointers - C# Programming Guide","nodes":[{"pos":[0,47],"content":"Unsafe Code and Pointers - C# Programming Guide","nodes":[{"content":"Unsafe Code and Pointers - C# Programming Guide","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[378,425],"content":"Unsafe Code and Pointers (C# Programming Guide)","linkify":"Unsafe Code and Pointers (C# Programming Guide)","nodes":[{"content":"Unsafe Code and Pointers (C# Programming Guide)","pos":[0,47]}]},{"content":"To maintain type safety and security, C# does not support pointer arithmetic, by default.","pos":[426,515]},{"content":"However, by using the <bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](../../../csharp/language-reference/keywords/unsafe.md)</ept> keyword, you can define an unsafe context in which pointers can be used.","pos":[516,674],"source":" However, by using the [unsafe](../../../csharp/language-reference/keywords/unsafe.md) keyword, you can define an unsafe context in which pointers can be used."},{"content":"For more information about pointers, see the topic <bpt id=\"p1\">[</bpt>Pointer types<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)</ept>.","pos":[675,815],"source":" For more information about pointers, see the topic [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)."},{"pos":[823,1242],"content":"[!NOTE]\n In the common language runtime (CLR), unsafe code is referred to as unverifiable code. Unsafe code in C# is not necessarily dangerous; it is just code whose safety cannot be verified by the CLR. The CLR will therefore only execute unsafe code if it is in a fully trusted assembly. If you use unsafe code, it is your responsibility to ensure that your code does not introduce security risks or pointer errors.","leadings":["","> "],"nodes":[{"content":"In the common language runtime (CLR), unsafe code is referred to as unverifiable code. Unsafe code in C# is not necessarily dangerous; it is just code whose safety cannot be verified by the CLR. The CLR will therefore only execute unsafe code if it is in a fully trusted assembly. If you use unsafe code, it is your responsibility to ensure that your code does not introduce security risks or pointer errors.","pos":[9,417],"nodes":[{"content":"In the common language runtime (CLR), unsafe code is referred to as unverifiable code.","pos":[0,86]},{"content":"Unsafe code in C# is not necessarily dangerous; it is just code whose safety cannot be verified by the CLR.","pos":[87,194]},{"content":"The CLR will therefore only execute unsafe code if it is in a fully trusted assembly.","pos":[195,280]},{"content":"If you use unsafe code, it is your responsibility to ensure that your code does not introduce security risks or pointer errors.","pos":[281,408]}]}]},{"pos":[1251,1271],"content":"Unsafe Code Overview","linkify":"Unsafe Code Overview","nodes":[{"content":"Unsafe Code Overview","pos":[0,20]}]},{"content":"Unsafe code has the following properties:","pos":[1275,1316]},{"content":"Methods, types, and code blocks can be defined as unsafe.","pos":[1326,1383]},{"content":"In some cases, unsafe code may increase an application's performance by removing array bounds checks.","pos":[1393,1494]},{"content":"Unsafe code is required when you call native functions that require pointers.","pos":[1504,1581]},{"content":"Using unsafe code introduces security and stability risks.","pos":[1591,1649]},{"pos":[1659,1826],"content":"In order for C# to compile unsafe code, the application must be compiled with <bpt id=\"p1\">[</bpt>/unsafe<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept>.","source":"In order for C# to compile unsafe code, the application must be compiled with [/unsafe](../../../csharp/language-reference/compiler-options/unsafe-compiler-option.md)."},{"pos":[1835,1851],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"For more information, see:","pos":[1855,1881]},{"pos":[1891,1979],"content":"<bpt id=\"p1\">[</bpt>Pointer types<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)</ept>","source":"[Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)"},{"pos":[1989,2087],"content":"<bpt id=\"p1\">[</bpt>Fixed Size Buffers<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/fixed-size-buffers.md)</ept>","source":"[Fixed Size Buffers](../../../csharp/programming-guide/unsafe-code-pointers/fixed-size-buffers.md)"},{"pos":[2097,2250],"content":"<bpt id=\"p1\">[</bpt>How to: Use Pointers to Copy an Array of Bytes<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/how-to-use-pointers-to-copy-an-array-of-bytes.md)</ept>","source":"[How to: Use Pointers to Copy an Array of Bytes](../../../csharp/programming-guide/unsafe-code-pointers/how-to-use-pointers-to-copy-an-array-of-bytes.md)"},{"pos":[2260,2323],"content":"<bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](../../../csharp/language-reference/keywords/unsafe.md)</ept>","source":"[unsafe](../../../csharp/language-reference/keywords/unsafe.md)"},{"pos":[2332,2357],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[2429,2437],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2441,2507],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"}]}