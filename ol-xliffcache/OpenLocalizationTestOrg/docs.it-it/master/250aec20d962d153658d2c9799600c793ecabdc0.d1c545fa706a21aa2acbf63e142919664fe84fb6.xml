{"content":"---\ntitle: \"Defining Default Values with the ShouldSerialize and Reset Methods | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"custom controls [Windows Forms], property methods\"\n  - \"Reset method\"\n  - \"ShouldPersist method\"\nms.assetid: 7b6c5e00-3771-46b4-9142-5a80d5864a5e\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Defining Default Values with the ShouldSerialize and Reset Methods\n`ShouldSerialize` and `Reset` are optional methods that you can provide for a property, if the property does not a have simple default value. If the property has a simple default value, you should apply the <xref:System.ComponentModel.DefaultValueAttribute> and supply the default value to the attribute class constructor instead. Either of these mechanisms enables the following features in the designer:  \n  \n-   The property provides visual indication in the property browser if it has been modified from its default value.  \n  \n-   The user can right-click on the property and choose **Reset** to restore the property to its default value.  \n  \n-   The designer generates more efficient code.  \n  \n    > [!NOTE]\n    >  Either apply the <xref:System.ComponentModel.DefaultValueAttribute> or provide `Reset`*PropertyName* and `ShouldSerialize`*PropertyName* methods. Do not use both.  \n  \n The `Reset`*PropertyName* method sets a property to its default value, as shown in the following code fragment.  \n  \n```vb  \nPublic Sub ResetMyFont()  \n   MyFont = Nothing  \nEnd Sub  \n```  \n  \n```csharp  \npublic void ResetMyFont() {  \n   MyFont = null;  \n}  \n```  \n  \n> [!NOTE]\n>  If a property does not have a `Reset` method, is not marked with a <xref:System.ComponentModel.DefaultValueAttribute>, and does not have a default value supplied in its declaration, the `Reset` option for that property is disabled in the shortcut menu of the **Properties** window of the Windows Forms Designer in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)].  \n  \n Designers such as [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] use the `ShouldSerialize`*PropertyName* method to check whether a property has changed from its default value and write code into the form only if a property is changed, thus allowing for more efficient code generation. For example:  \n  \n```vb  \n'Returns true if the font has changed; otherwise, returns false.  \n' The designer writes code to the form only if true is returned.  \nPublic Function ShouldSerializeMyFont() As Boolean  \n   Return Not (thefont Is Nothing)  \nEnd Function  \n```  \n  \n```csharp  \n// Returns true if the font has changed; otherwise, returns false.  \n// The designer writes code to the form only if true is returned.  \npublic bool ShouldSerializeMyFont() {  \n   return thefont != null;  \n}  \n```  \n  \n A complete code example follows.  \n  \n```vb  \nOption Explicit  \nOption Strict  \n  \nImports System  \nImports System.Windows.Forms  \nImports System.Drawing  \n  \nPublic Class MyControl  \n   Inherits Control  \n  \n   ' Declare an instance of the Font class  \n   ' and set its default value to Nothing.  \n   Private thefont As Font = Nothing  \n  \n   ' The MyFont property.   \n   Public Property MyFont() As Font  \n      ' Note that the Font property never  \n      ' returns null.  \n      Get  \n         If Not (thefont Is Nothing) Then  \n            Return thefont  \n         End If  \n         If Not (Parent Is Nothing) Then  \n            Return Parent.Font  \n         End If  \n         Return Control.DefaultFont  \n      End Get  \n      Set  \n         thefont = value  \n      End Set  \n   End Property  \n  \n   Public Function ShouldSerializeMyFont() As Boolean  \n      Return Not (thefont Is Nothing)  \n   End Function  \n  \n   Public Sub ResetMyFont()  \n      MyFont = Nothing  \n   End Sub  \nEnd Class  \n```  \n  \n```csharp  \nusing System;  \nusing System.Windows.Forms;  \nusing System.Drawing;  \n  \npublic class MyControl : Control {  \n   // Declare an instance of the Font class  \n   // and set its default value to null.  \n   private Font thefont = null;  \n  \n   // The MyFont property.      \n   public Font MyFont {  \n      // Note that the MyFont property never  \n      // returns null.  \n      get {  \n         if (thefont != null) return thefont;  \n         if (Parent != null) return Parent.Font;  \n         return Control.DefaultFont;  \n      }  \n      set {  \n         thefont = value;  \n      }  \n   }  \n  \n   public bool ShouldSerializeMyFont() {  \n      return thefont != null;  \n   }  \n  \n   public void ResetMyFont() {  \n      MyFont = null;  \n   }  \n}  \n```  \n  \n In this case, even when the value of the private variable accessed by the `MyFont` property is `null`, the property browser does not display `null`; instead, it displays the <xref:System.Windows.Forms.Control.Font%2A> property of the parent, if it is not `null`, or the default <xref:System.Windows.Forms.Control.Font%2A> value defined in <xref:System.Windows.Forms.Control>. Thus the default value for `MyFont` cannot be simply set, and a <xref:System.ComponentModel.DefaultValueAttribute> cannot be applied to this property. Instead, the `ShouldSerialize` and `Reset` methods must be implemented for the `MyFont` property.  \n  \n## See Also  \n [Properties in Windows Forms Controls](../../../../docs/framework/winforms/controls/properties-in-windows-forms-controls.md)   \n [Defining a Property](../../../../docs/framework/winforms/controls/defining-a-property-in-windows-forms-controls.md)   \n [Property-Changed Events](../../../../docs/framework/winforms/controls/property-changed-events.md)","nodes":[{"pos":[12,95],"content":"Defining Default Values with the ShouldSerialize and Reset Methods | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Defining Default Values with the ShouldSerialize and Reset Methods | Microsoft Docs","pos":[0,83]}]},{"pos":[557,623],"content":"Defining Default Values with the ShouldSerialize and Reset Methods","linkify":"Defining Default Values with the ShouldSerialize and Reset Methods","nodes":[{"content":"Defining Default Values with the ShouldSerialize and Reset Methods","pos":[0,66]}]},{"content":"<ph id=\"ph1\">`ShouldSerialize`</ph> and <ph id=\"ph2\">`Reset`</ph> are optional methods that you can provide for a property, if the property does not a have simple default value.","pos":[624,765],"source":"`ShouldSerialize` and `Reset` are optional methods that you can provide for a property, if the property does not a have simple default value."},{"content":"If the property has a simple default value, you should apply the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> and supply the default value to the attribute class constructor instead.","pos":[766,954],"source":" If the property has a simple default value, you should apply the <xref:System.ComponentModel.DefaultValueAttribute> and supply the default value to the attribute class constructor instead."},{"content":"Either of these mechanisms enables the following features in the designer:","pos":[955,1029]},{"content":"The property provides visual indication in the property browser if it has been modified from its default value.","pos":[1039,1150]},{"pos":[1160,1267],"content":"The user can right-click on the property and choose <bpt id=\"p1\">**</bpt>Reset<ept id=\"p1\">**</ept> to restore the property to its default value.","source":"The user can right-click on the property and choose **Reset** to restore the property to its default value."},{"content":"The designer generates more efficient code.","pos":[1277,1320]},{"pos":[1332,1509],"content":"[!NOTE]\nEither apply the <xref:System.ComponentModel.DefaultValueAttribute> or provide `Reset`*PropertyName* and `ShouldSerialize`*PropertyName* methods. Do not use both.","leadings":["","    >  "],"nodes":[{"content":"Either apply the <xref:System.ComponentModel.DefaultValueAttribute> or provide `Reset`*PropertyName* and `ShouldSerialize`*PropertyName* methods. Do not use both.","pos":[8,170],"nodes":[{"content":"Either apply the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> or provide <ph id=\"ph2\">`Reset`</ph><bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept> and <ph id=\"ph3\">`ShouldSerialize`</ph><bpt id=\"p2\">*</bpt>PropertyName<ept id=\"p2\">*</ept> methods.","pos":[0,145],"source":"Either apply the <xref:System.ComponentModel.DefaultValueAttribute> or provide `Reset`*PropertyName* and `ShouldSerialize`*PropertyName* methods."},{"content":"Do not use both.","pos":[146,162]}]}]},{"pos":[1516,1627],"content":"The <ph id=\"ph1\">`Reset`</ph><bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept> method sets a property to its default value, as shown in the following code fragment.","source":"The `Reset`*PropertyName* method sets a property to its default value, as shown in the following code fragment."},{"pos":[1786,2165],"content":"[!NOTE]\n If a property does not have a `Reset` method, is not marked with a <xref:System.ComponentModel.DefaultValueAttribute>, and does not have a default value supplied in its declaration, the `Reset` option for that property is disabled in the shortcut menu of the **Properties** window of the Windows Forms Designer in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)].","leadings":["","> "],"nodes":[{"content":"If a property does not have a <ph id=\"ph1\">`Reset`</ph> method, is not marked with a <ph id=\"ph2\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, and does not have a default value supplied in its declaration, the <ph id=\"ph3\">`Reset`</ph> option for that property is disabled in the shortcut menu of the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window of the Windows Forms Designer in <ph id=\"ph4\">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph>.","pos":[9,377],"source":" If a property does not have a `Reset` method, is not marked with a <xref:System.ComponentModel.DefaultValueAttribute>, and does not have a default value supplied in its declaration, the `Reset` option for that property is disabled in the shortcut menu of the **Properties** window of the Windows Forms Designer in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]."}]},{"content":"Designers such as <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> use the <ph id=\"ph2\">`ShouldSerialize`</ph><bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept> method to check whether a property has changed from its default value and write code into the form only if a property is changed, thus allowing for more efficient code generation.","pos":[2172,2463],"source":"Designers such as [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] use the `ShouldSerialize`*PropertyName* method to check whether a property has changed from its default value and write code into the form only if a property is changed, thus allowing for more efficient code generation."},{"content":"For example:","pos":[2464,2476]},{"content":"A complete code example follows.","pos":[2970,3002]},{"content":"In this case, even when the value of the private variable accessed by the <ph id=\"ph1\">`MyFont`</ph> property is <ph id=\"ph2\">`null`</ph>, the property browser does not display <ph id=\"ph3\">`null`</ph>; instead, it displays the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property of the parent, if it is not <ph id=\"ph5\">`null`</ph>, or the default <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> value defined in <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control&gt;</ph>.","pos":[4744,5119],"source":"In this case, even when the value of the private variable accessed by the `MyFont` property is `null`, the property browser does not display `null`; instead, it displays the <xref:System.Windows.Forms.Control.Font%2A> property of the parent, if it is not `null`, or the default <xref:System.Windows.Forms.Control.Font%2A> value defined in <xref:System.Windows.Forms.Control>."},{"content":"Thus the default value for <ph id=\"ph1\">`MyFont`</ph> cannot be simply set, and a <ph id=\"ph2\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> cannot be applied to this property.","pos":[5120,5270],"source":" Thus the default value for `MyFont` cannot be simply set, and a <xref:System.ComponentModel.DefaultValueAttribute> cannot be applied to this property."},{"content":"Instead, the <ph id=\"ph1\">`ShouldSerialize`</ph> and <ph id=\"ph2\">`Reset`</ph> methods must be implemented for the <ph id=\"ph3\">`MyFont`</ph> property.","pos":[5271,5368],"source":" Instead, the `ShouldSerialize` and `Reset` methods must be implemented for the `MyFont` property."},{"pos":[5377,5385],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Properties in Windows Forms Controls<ept id=\"p1\">](../../../../docs/framework/winforms/controls/properties-in-windows-forms-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[5389,5514],"source":"[Properties in Windows Forms Controls](../../../../docs/framework/winforms/controls/properties-in-windows-forms-controls.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Defining a Property<ept id=\"p1\">](../../../../docs/framework/winforms/controls/defining-a-property-in-windows-forms-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[5517,5635],"source":" [Defining a Property](../../../../docs/framework/winforms/controls/defining-a-property-in-windows-forms-controls.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Property-Changed Events<ept id=\"p1\">](../../../../docs/framework/winforms/controls/property-changed-events.md)</ept>","pos":[5638,5737],"source":" [Property-Changed Events](../../../../docs/framework/winforms/controls/property-changed-events.md)"}]}