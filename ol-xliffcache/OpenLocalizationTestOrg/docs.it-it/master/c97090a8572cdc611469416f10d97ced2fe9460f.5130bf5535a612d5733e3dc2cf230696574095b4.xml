{"content":"---\ntitle: \"Updating the Data Service (WCF Data Services) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework-oob\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"WCF Data Services, changing data\"\n  - \"WCF Data Services, client library\"\nms.assetid: 00d993be-ffed-4dea-baf7-6eea982cdb54\ncaps.latest.revision: 6\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Updating the Data Service (WCF Data Services)\nWhen you use the [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] client library to consume an [!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)] feed, the library translates the entries in the feed into instances of client data service classes. These data service classes are tracked by using the <xref:System.Data.Services.Client.DataServiceContext> to which the <xref:System.Data.Services.Client.DataServiceQuery%601> belongs. The client tracks changes to entities that you report by using methods on <xref:System.Data.Services.Client.DataServiceContext>. These methods enable the client to track added and deleted entities and also changes that you make to property values or to relationships between entity instances. Those tracked changes are sent back to the data service as REST-based operations when you call the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method.  \n  \n> [!NOTE]\n>  When you use an instance of <xref:System.Data.Services.Client.DataServiceCollection%601> to bind data to controls, changes made to data in the bound control are automatically reported to the <xref:System.Data.Services.Client.DataServiceContext>. For more information, see [Binding Data to Controls](../../../../docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  \n  \n## Adding, Modifying, and Changing Entities  \n When you use the **Add Service Reference** dialog in Visual Studio to add a reference to an [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] feed, the resulting client data service classes each have a static *Create* method that takes one parameter for each non-nullable entity property. You can use this method to create instances of entity type classes, as in the following example:  \n  \n [!code-csharp[Astoria Northwind Client#CreateNewProduct](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#createnewproduct)]\n [!code-vb[Astoria Northwind Client#CreateNewProduct](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#createnewproduct)]  \n  \n To add an entity instance, call the appropriate *AddTo* method on the <xref:System.Data.Services.Client.DataServiceContext> class generated by the **Add Service Reference** dialog box, as in the following example:  \n  \n [!code-csharp[Astoria Northwind Client#AddProductSpecific](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addproductspecific)]\n [!code-vb[Astoria Northwind Client#AddProductSpecific](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addproductspecific)]  \n  \n This adds the object to the context and into the correct entity set. You can also call <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, but you must instead supply the entity set name. If the added entity has one or more relationships to other entities, you can either use the <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> method or use one of the previous methods and also explicitly define those links. These operations are discussed later in this topic.  \n  \n To modify an existing entity instance, first query for that entity, make the desired changes to its properties, and then call the <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> method on the <xref:System.Data.Services.Client.DataServiceContext> to indicate to the client library that it needs to send an update for that object, as shown in the following example:  \n  \n [!code-csharp[Astoria Northwind Client#ModifyCustomerSpecific](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#modifycustomerspecific)]\n [!code-vb[Astoria Northwind Client#ModifyCustomerSpecific](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#modifycustomerspecific)]  \n  \n To delete an entity instance, call the <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A> method on the <xref:System.Data.Services.Client.DataServiceContext>, as shown in the following example:  \n  \n [!code-csharp[Astoria Northwind Client#DeleteProductSpecific](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#deleteproductspecific)]\n [!code-vb[Astoria Northwind Client#DeleteProductSpecific](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#deleteproductspecific)]  \n  \n For more information, see [How to: Add, Modify, and Delete Entities](../../../../docs/framework/data/wcf/how-to-add-modify-and-delete-entities-wcf-data-services.md).  \n  \n## Attaching Entities  \n The client library enables you to save updates that you made to an entity without first executing a query to load the entity into the <xref:System.Data.Services.Client.DataServiceContext>. Use the <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A> method to attach an existing object to a specific entity set in the <xref:System.Data.Services.Client.DataServiceContext>. You can then modify the object and save the changes to the data service. In the following example, a customer object that has been changed is attached to the context and then <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> is called to mark the attached object as <xref:System.Data.Services.Client.EntityStates> before <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> is called:  \n  \n [!code-csharp[Astoria Northwind Client#AttachObjectSpecific](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#attachobjectspecific)]\n [!code-vb[Astoria Northwind Client#AttachObjectSpecific](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#attachobjectspecific)]  \n  \n The following considerations apply when attaching objects:  \n  \n-   An object is attached in the <xref:System.Data.Services.Client.EntityStates> state.  \n  \n-   When an object is attached, objects that are related to the attached object are not also attached.  \n  \n-   An object cannot be attached if the entity is already being tracked by the context.  \n  \n-   The <xref:System.Data.Services.Client.DataServiceContext.AttachTo%28System.String%2CSystem.Object%2CSystem.String%29> method overload that takes an `etag` parameter is used when you attach an entity object that was received along with an eTag value. This eTag value is then used to check for concurrency when changes to the attached object are saved.  \n  \n For more information, see [How to: Attach an Existing Entity to the DataServiceContext](../../../../docs/framework/data/wcf/attach-an-existing-entity-to-dc-wcf-data.md).  \n  \n## Creating and Modifying Relationship Links  \n When you add a new entity by using either the <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> method or the appropriate *AddTo* method of the <xref:System.Data.Services.Client.DataServiceContext> class that the **Add Service Reference** dialog generates, any relationships between the new entity and related entities are not automatically defined.  \n  \n You can create and change relationships between entity instances and have the client library reflect those changes in the data service. Relationships between entities are defined as associations in the model, and the <xref:System.Data.Services.Client.DataServiceContext> tracks each relationship as a link object in the context. [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] provides the following methods on the <xref:System.Data.Services.Client.DataServiceContext> class to create, modify, and delete these links:  \n  \n|Method|Description|  \n|------------|-----------------|  \n|<xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A>|Creates a new link between two related entity objects. Calling this method is equivalent to calling <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> and <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> to both create the new object and define the relationship to an existing object.|  \n|<xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>|Creates a new link between two related entity objects.|  \n|<xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>|Updates an existing link between two related entity objects. <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> is also used to delete links with a cardinality of zero-or-one-to-one (`0..1:1`) and one-to-one (`1:1`). You can do this by setting the related object to `null`.|  \n|<xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>|Marks a link that the context is tracking for deletion when the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method is called. Use this method when you delete a related object or change a relationship by first deleting the link to an existing object and then adding a link to the new related object.|  \n|<xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>|Notifies the context of an existing link between two entity objects. The context assumes that this relationship already exists in the data service and does not try to create the link when you call the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method. Use this method when you attach objects to a context and need to also attach the link between the two. If you are defining a new relationship, you should instead use <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>.|  \n|<xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>|Stops tracking the specified link in the context. This method is used to delete one-to-many (`*:*`) relationships. For relationship links with a cardinality of one, you must instead use <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>.|  \n  \n The following example shows how to use the <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> method to add a new `Order_Detail` that is related to an existing `Orders` entity. Because the new `Order_Details` object is now tracked by the <xref:System.Data.Services.Client.DataServiceContext>, the relationship of the added `Order_Details` object to the existing `Products` entity is defined by calling the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> method:  \n  \n [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrderSpecific](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorderspecific)]\n [!code-vb[Astoria Northwind Client#AddOrderDetailToOrderSpecific](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorderspecific)]  \n  \n While the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> method defines links that must be created in the data service, to have these links reflected in the objects that are in the context, you must also set the navigation properties on the objects themselves. In the previous example, you should set the navigation properties as follows:  \n  \n [!code-csharp[Astoria Northwind Client#SetNavProps](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#setnavprops)]\n [!code-vb[Astoria Northwind Client#SetNavProps](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#setnavprops)]  \n  \n For more information, see [How to: Define Entity Relationships](../../../../docs/framework/data/wcf/how-to-define-entity-relationships-wcf-data-services.md).  \n  \n## Saving Changes  \n Changes are tracked in the <xref:System.Data.Services.Client.DataServiceContext> instance but not sent to the server immediately. After you are finished with the required changes for a specified activity, call <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> to submit all the changes to the data service. For more information, see [Managing the Data Service Context](../../../../docs/framework/data/wcf/managing-the-data-service-context-wcf-data-services.md). You can also save changes asynchronously by using the <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%2A> and <xref:System.Data.Services.Client.DataServiceContext.EndSaveChanges%2A> methods. For more information, see [Asynchronous Operations](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  \n  \n## See Also  \n [WCF Data Services Client Library](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md)   \n [Querying the Data Service](../../../../docs/framework/data/wcf/querying-the-data-service-wcf-data-services.md)   \n [Asynchronous Operations](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)   \n [Batching Operations](../../../../docs/framework/data/wcf/batching-operations-wcf-data-services.md)   \n [Object Materialization](../../../../docs/framework/data/wcf/object-materialization-wcf-data-services.md)   \n [Managing the Data Service Context](../../../../docs/framework/data/wcf/managing-the-data-service-context-wcf-data-services.md)","nodes":[{"pos":[4,470],"embed":true,"restype":"x-metadata","content":"title: \"Updating the Data Service (WCF Data Services) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework-oob\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"WCF Data Services, changing data\"\n  - \"WCF Data Services, client library\"\nms.assetid: 00d993be-ffed-4dea-baf7-6eea982cdb54\ncaps.latest.revision: 6\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"Updating the Data Service (WCF Data Services) | Microsoft Docs","nodes":[{"pos":[0,62],"content":"Updating the Data Service (WCF Data Services) | Microsoft Docs","nodes":[{"content":"Updating the Data Service (WCF Data Services) | Microsoft Docs","pos":[0,62]}]}],"path":["title"]}],"yml":true},{"pos":[477,522],"content":"Updating the Data Service (WCF Data Services)","linkify":"Updating the Data Service (WCF Data Services)","nodes":[{"content":"Updating the Data Service (WCF Data Services)","pos":[0,45]}]},{"content":"When you use the <ph id=\"ph1\">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library to consume an <ph id=\"ph2\">[!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)]</ph> feed, the library translates the entries in the feed into instances of client data service classes.","pos":[523,792],"source":"When you use the [!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] client library to consume an [!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)] feed, the library translates the entries in the feed into instances of client data service classes."},{"content":"These data service classes are tracked by using the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> to which the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> belongs.","pos":[793,976],"source":" These data service classes are tracked by using the <xref:System.Data.Services.Client.DataServiceContext> to which the <xref:System.Data.Services.Client.DataServiceQuery%601> belongs."},{"content":"The client tracks changes to entities that you report by using methods on <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.","pos":[977,1105],"source":" The client tracks changes to entities that you report by using methods on <xref:System.Data.Services.Client.DataServiceContext>."},{"content":"These methods enable the client to track added and deleted entities and also changes that you make to property values or to relationships between entity instances.","pos":[1106,1269]},{"content":"Those tracked changes are sent back to the data service as REST-based operations when you call the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> method.","pos":[1270,1445],"source":" Those tracked changes are sent back to the data service as REST-based operations when you call the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method."},{"pos":[1453,1846],"content":"[!NOTE]\n When you use an instance of <xref:System.Data.Services.Client.DataServiceCollection%601> to bind data to controls, changes made to data in the bound control are automatically reported to the <xref:System.Data.Services.Client.DataServiceContext>. For more information, see [Binding Data to Controls](../../../../docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).","leadings":["","> "],"nodes":[{"content":"When you use an instance of <xref:System.Data.Services.Client.DataServiceCollection%601> to bind data to controls, changes made to data in the bound control are automatically reported to the <xref:System.Data.Services.Client.DataServiceContext>. For more information, see [Binding Data to Controls](../../../../docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).","pos":[9,391],"nodes":[{"content":"When you use an instance of <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> to bind data to controls, changes made to data in the bound control are automatically reported to the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.","pos":[0,245],"source":"When you use an instance of <xref:System.Data.Services.Client.DataServiceCollection%601> to bind data to controls, changes made to data in the bound control are automatically reported to the <xref:System.Data.Services.Client.DataServiceContext>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Binding Data to Controls<ept id=\"p1\">](../../../../docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md)</ept>.","pos":[246,382],"source":" For more information, see [Binding Data to Controls](../../../../docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md)."}]}]},{"pos":[1855,1895],"content":"Adding, Modifying, and Changing Entities","linkify":"Adding, Modifying, and Changing Entities","nodes":[{"content":"Adding, Modifying, and Changing Entities","pos":[0,40]}]},{"content":"When you use the <bpt id=\"p1\">**</bpt>Add Service Reference<ept id=\"p1\">**</ept> dialog in Visual Studio to add a reference to an <ph id=\"ph1\">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> feed, the resulting client data service classes each have a static <bpt id=\"p2\">*</bpt>Create<ept id=\"p2\">*</ept> method that takes one parameter for each non-nullable entity property.","pos":[1899,2203],"source":"When you use the **Add Service Reference** dialog in Visual Studio to add a reference to an [!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)] feed, the resulting client data service classes each have a static *Create* method that takes one parameter for each non-nullable entity property."},{"content":"You can use this method to create instances of entity type classes, as in the following example:","pos":[2204,2300]},{"pos":[2649,2862],"content":"To add an entity instance, call the appropriate <bpt id=\"p1\">*</bpt>AddTo<ept id=\"p1\">*</ept> method on the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class generated by the <bpt id=\"p2\">**</bpt>Add Service Reference<ept id=\"p2\">**</ept> dialog box, as in the following example:","source":"To add an entity instance, call the appropriate *AddTo* method on the <xref:System.Data.Services.Client.DataServiceContext> class generated by the **Add Service Reference** dialog box, as in the following example:"},{"content":"This adds the object to the context and into the correct entity set.","pos":[3219,3287]},{"content":"You can also call <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddObject%2A&gt;</ph>, but you must instead supply the entity set name.","pos":[3288,3422],"source":" You can also call <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, but you must instead supply the entity set name."},{"content":"If the added entity has one or more relationships to other entities, you can either use the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A&gt;</ph> method or use one of the previous methods and also explicitly define those links.","pos":[3423,3670],"source":" If the added entity has one or more relationships to other entities, you can either use the <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> method or use one of the previous methods and also explicitly define those links."},{"content":"These operations are discussed later in this topic.","pos":[3671,3722]},{"content":"To modify an existing entity instance, first query for that entity, make the desired changes to its properties, and then call the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> to indicate to the client library that it needs to send an update for that object, as shown in the following example:","pos":[3729,4114],"source":"To modify an existing entity instance, first query for that entity, make the desired changes to its properties, and then call the <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> method on the <xref:System.Data.Services.Client.DataServiceContext> to indicate to the client library that it needs to send an update for that object, as shown in the following example:"},{"content":"To delete an entity instance, call the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, as shown in the following example:","pos":[4487,4699],"source":"To delete an entity instance, call the <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A> method on the <xref:System.Data.Services.Client.DataServiceContext>, as shown in the following example:"},{"pos":[5068,5233],"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add, Modify, and Delete Entities<ept id=\"p1\">](../../../../docs/framework/data/wcf/how-to-add-modify-and-delete-entities-wcf-data-services.md)</ept>.","source":"For more information, see [How to: Add, Modify, and Delete Entities](../../../../docs/framework/data/wcf/how-to-add-modify-and-delete-entities-wcf-data-services.md)."},{"pos":[5242,5260],"content":"Attaching Entities","linkify":"Attaching Entities","nodes":[{"content":"Attaching Entities","pos":[0,18]}]},{"content":"The client library enables you to save updates that you made to an entity without first executing a query to load the entity into the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.","pos":[5264,5452],"source":"The client library enables you to save updates that you made to an entity without first executing a query to load the entity into the <xref:System.Data.Services.Client.DataServiceContext>."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A&gt;</ph> method to attach an existing object to a specific entity set in the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.","pos":[5453,5649],"source":" Use the <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A> method to attach an existing object to a specific entity set in the <xref:System.Data.Services.Client.DataServiceContext>."},{"content":"You can then modify the object and save the changes to the data service.","pos":[5650,5722]},{"content":"In the following example, a customer object that has been changed is attached to the context and then <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A&gt;</ph> is called to mark the attached object as <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.EntityStates&gt;</ph> before <ph id=\"ph3\">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> is called:","pos":[5723,6070],"source":" In the following example, a customer object that has been changed is attached to the context and then <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> is called to mark the attached object as <xref:System.Data.Services.Client.EntityStates> before <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> is called:"},{"content":"The following considerations apply when attaching objects:","pos":[6435,6493]},{"content":"An object is attached in the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.EntityStates&gt;</ph> state.","pos":[6503,6586],"source":"An object is attached in the <xref:System.Data.Services.Client.EntityStates> state."},{"content":"When an object is attached, objects that are related to the attached object are not also attached.","pos":[6596,6694]},{"content":"An object cannot be attached if the entity is already being tracked by the context.","pos":[6704,6787]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AttachTo%28System.String%2CSystem.Object%2CSystem.String%29&gt;</ph> method overload that takes an <ph id=\"ph2\">`etag`</ph> parameter is used when you attach an entity object that was received along with an eTag value.","pos":[6797,7046],"source":"The <xref:System.Data.Services.Client.DataServiceContext.AttachTo%28System.String%2CSystem.Object%2CSystem.String%29> method overload that takes an `etag` parameter is used when you attach an entity object that was received along with an eTag value."},{"content":"This eTag value is then used to check for concurrency when changes to the attached object are saved.","pos":[7047,7147]},{"pos":[7154,7323],"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Attach an Existing Entity to the DataServiceContext<ept id=\"p1\">](../../../../docs/framework/data/wcf/attach-an-existing-entity-to-dc-wcf-data.md)</ept>.","source":"For more information, see [How to: Attach an Existing Entity to the DataServiceContext](../../../../docs/framework/data/wcf/attach-an-existing-entity-to-dc-wcf-data.md)."},{"pos":[7332,7373],"content":"Creating and Modifying Relationship Links","linkify":"Creating and Modifying Relationship Links","nodes":[{"content":"Creating and Modifying Relationship Links","pos":[0,41]}]},{"pos":[7377,7743],"content":"When you add a new entity by using either the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddObject%2A&gt;</ph> method or the appropriate <bpt id=\"p1\">*</bpt>AddTo<ept id=\"p1\">*</ept> method of the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class that the <bpt id=\"p2\">**</bpt>Add Service Reference<ept id=\"p2\">**</ept> dialog generates, any relationships between the new entity and related entities are not automatically defined.","source":"When you add a new entity by using either the <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> method or the appropriate *AddTo* method of the <xref:System.Data.Services.Client.DataServiceContext> class that the **Add Service Reference** dialog generates, any relationships between the new entity and related entities are not automatically defined."},{"content":"You can create and change relationships between entity instances and have the client library reflect those changes in the data service.","pos":[7750,7885]},{"content":"Relationships between entities are defined as associations in the model, and the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> tracks each relationship as a link object in the context.","pos":[7886,8078],"source":" Relationships between entities are defined as associations in the model, and the <xref:System.Data.Services.Client.DataServiceContext> tracks each relationship as a link object in the context."},{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> provides the following methods on the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class to create, modify, and delete these links:","pos":[8079,8279],"source":"[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)] provides the following methods on the <xref:System.Data.Services.Client.DataServiceContext> class to create, modify, and delete these links:"},{"content":"Method","pos":[8286,8292]},{"content":"Description","pos":[8293,8304]},{"content":"Creates a new link between two related entity objects.","pos":[8418,8472]},{"content":"Calling this method is equivalent to calling <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddObject%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddLink%2A&gt;</ph> to both create the new object and define the relationship to an existing object.","pos":[8473,8734],"source":" Calling this method is equivalent to calling <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> and <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> to both create the new object and define the relationship to an existing object."},{"content":"Creates a new link between two related entity objects.","pos":[8804,8858]},{"content":"Updates an existing link between two related entity objects.","pos":[8928,8988]},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.SetLink%2A&gt;</ph> is also used to delete links with a cardinality of zero-or-one-to-one (<ph id=\"ph2\">`0..1:1`</ph>) and one-to-one (<ph id=\"ph3\">`1:1`</ph>).","pos":[8989,9158],"source":" <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> is also used to delete links with a cardinality of zero-or-one-to-one (`0..1:1`) and one-to-one (`1:1`)."},{"content":"You can do this by setting the related object to <ph id=\"ph1\">`null`</ph>.","pos":[9159,9215],"source":" You can do this by setting the related object to `null`."},{"content":"Marks a link that the context is tracking for deletion when the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> method is called.","pos":[9288,9438],"source":"Marks a link that the context is tracking for deletion when the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method is called."},{"content":"Use this method when you delete a related object or change a relationship by first deleting the link to an existing object and then adding a link to the new related object.","pos":[9439,9611]},{"content":"Notifies the context of an existing link between two entity objects.","pos":[9684,9752]},{"content":"The context assumes that this relationship already exists in the data service and does not try to create the link when you call the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> method.","pos":[9753,9961],"source":" The context assumes that this relationship already exists in the data service and does not try to create the link when you call the <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> method."},{"content":"Use this method when you attach objects to a context and need to also attach the link between the two.","pos":[9962,10064]},{"content":"If you are defining a new relationship, you should instead use <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddLink%2A&gt;</ph>.","pos":[10065,10193],"source":" If you are defining a new relationship, you should instead use <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>."},{"content":"Stops tracking the specified link in the context.","pos":[10266,10315]},{"content":"This method is used to delete one-to-many (<ph id=\"ph1\">`*:*`</ph>) relationships.","pos":[10316,10380],"source":" This method is used to delete one-to-many (`*:*`) relationships."},{"content":"For relationship links with a cardinality of one, you must instead use <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.SetLink%2A&gt;</ph>.","pos":[10381,10517],"source":" For relationship links with a cardinality of one, you must instead use <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>."},{"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A&gt;</ph> method to add a new <ph id=\"ph2\">`Order_Detail`</ph> that is related to an existing <ph id=\"ph3\">`Orders`</ph> entity.","pos":[10525,10724],"source":"The following example shows how to use the <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> method to add a new `Order_Detail` that is related to an existing `Orders` entity."},{"content":"Because the new <ph id=\"ph1\">`Order_Details`</ph> object is now tracked by the <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, the relationship of the added <ph id=\"ph3\">`Order_Details`</ph> object to the existing <ph id=\"ph4\">`Products`</ph> entity is defined by calling the <ph id=\"ph5\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddLink%2A&gt;</ph> method:","pos":[10725,11026],"source":" Because the new `Order_Details` object is now tracked by the <xref:System.Data.Services.Client.DataServiceContext>, the relationship of the added `Order_Details` object to the existing `Products` entity is defined by calling the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> method:"},{"content":"While the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.AddLink%2A&gt;</ph> method defines links that must be created in the data service, to have these links reflected in the objects that are in the context, you must also set the navigation properties on the objects themselves.","pos":[11427,11705],"source":"While the <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> method defines links that must be created in the data service, to have these links reflected in the objects that are in the context, you must also set the navigation properties on the objects themselves."},{"content":"In the previous example, you should set the navigation properties as follows:","pos":[11706,11783]},{"pos":[12112,12269],"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Define Entity Relationships<ept id=\"p1\">](../../../../docs/framework/data/wcf/how-to-define-entity-relationships-wcf-data-services.md)</ept>.","source":"For more information, see [How to: Define Entity Relationships](../../../../docs/framework/data/wcf/how-to-define-entity-relationships-wcf-data-services.md)."},{"pos":[12278,12292],"content":"Saving Changes","linkify":"Saving Changes","nodes":[{"content":"Saving Changes","pos":[0,14]}]},{"content":"Changes are tracked in the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance but not sent to the server immediately.","pos":[12296,12425],"source":"Changes are tracked in the <xref:System.Data.Services.Client.DataServiceContext> instance but not sent to the server immediately."},{"content":"After you are finished with the required changes for a specified activity, call <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> to submit all the changes to the data service.","pos":[12426,12621],"source":" After you are finished with the required changes for a specified activity, call <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> to submit all the changes to the data service."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Managing the Data Service Context<ept id=\"p1\">](../../../../docs/framework/data/wcf/managing-the-data-service-context-wcf-data-services.md)</ept>.","pos":[12622,12776],"source":" For more information, see [Managing the Data Service Context](../../../../docs/framework/data/wcf/managing-the-data-service-context-wcf-data-services.md)."},{"content":"You can also save changes asynchronously by using the <ph id=\"ph1\">&lt;xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.Services.Client.DataServiceContext.EndSaveChanges%2A&gt;</ph> methods.","pos":[12777,12989],"source":" You can also save changes asynchronously by using the <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%2A> and <xref:System.Data.Services.Client.DataServiceContext.EndSaveChanges%2A> methods."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Asynchronous Operations<ept id=\"p1\">](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)</ept>.","pos":[12990,13124],"source":" For more information, see [Asynchronous Operations](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)."},{"pos":[13133,13141],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>WCF Data Services Client Library<ept id=\"p1\">](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[13145,13253],"source":"[WCF Data Services Client Library](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md) "},{"content":"<bpt id=\"p1\">[</bpt>Querying the Data Service<ept id=\"p1\">](../../../../docs/framework/data/wcf/querying-the-data-service-wcf-data-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[13257,13369],"source":"[Querying the Data Service](../../../../docs/framework/data/wcf/querying-the-data-service-wcf-data-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>Asynchronous Operations<ept id=\"p1\">](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[13373,13481],"source":"[Asynchronous Operations](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>Batching Operations<ept id=\"p1\">](../../../../docs/framework/data/wcf/batching-operations-wcf-data-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[13485,13585],"source":"[Batching Operations](../../../../docs/framework/data/wcf/batching-operations-wcf-data-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>Object Materialization<ept id=\"p1\">](../../../../docs/framework/data/wcf/object-materialization-wcf-data-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[13589,13695],"source":"[Object Materialization](../../../../docs/framework/data/wcf/object-materialization-wcf-data-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>Managing the Data Service Context<ept id=\"p1\">](../../../../docs/framework/data/wcf/managing-the-data-service-context-wcf-data-services.md)</ept>","pos":[13699,13826],"source":"[Managing the Data Service Context](../../../../docs/framework/data/wcf/managing-the-data-service-context-wcf-data-services.md)"}]}