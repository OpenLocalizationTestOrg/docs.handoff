{"content":"---\ntitle: \"Indexers in Interfaces (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"indexers [C#], in interfaces\"\n  - \"accessors [C#], indexers\"\nms.assetid: e16b54bd-4a83-4f52-bd75-65819fca79e8\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Indexers in Interfaces (C# Programming Guide)\nIndexers can be declared on an [interface](../../../csharp/language-reference/keywords/interface.md). Accessors of interface indexers differ from the accessors of [class](../../../csharp/language-reference/keywords/class.md) indexers in the following ways:  \n  \n-   Interface accessors do not use modifiers.  \n  \n-   An interface accessor does not have a body.  \n  \n Thus, the purpose of the accessor is to indicate whether the indexer is read-write, read-only, or write-only.  \n  \n The following is an example of an interface indexer accessor:  \n  \n [!code-cs[csProgGuideIndexers#3](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/indexers-in-interfaces_1.cs)]  \n  \n The signature of an indexer must differ from the signatures of all other indexers declared in the same interface.  \n  \n## Example  \n The following example shows how to implement interface indexers.  \n  \n [!code-cs[csProgGuideIndexers#4](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/indexers-in-interfaces_2.cs)]  \n  \n In the preceding example, you could use the explicit interface member implementation by using the fully qualified name of the interface member. For example:  \n  \n```  \npublic string ISomeInterface.this   \n{   \n}   \n```  \n  \n However, the fully qualified name is only needed to avoid ambiguity when the class is implementing more than one interface with the same indexer signature. For example, if an `Employee` class is implementing two interfaces, `ICitizen` and `IEmployee`, and both interfaces have the same indexer signature, the explicit interface member implementation is necessary. That is, the following indexer declaration:  \n  \n```  \npublic string IEmployee.this   \n{   \n}   \n```  \n  \n implements the indexer on the `IEmployee` interface, while the following declaration:  \n  \n```  \npublic string ICitizen.this   \n{   \n}   \n```  \n  \n implements the indexer on the `ICitizen` interface.  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Indexers](../../../csharp/programming-guide/indexers/index.md)   \n [Properties](../../../csharp/programming-guide/classes-and-structs/properties.md)   \n [Interfaces](../../../csharp/programming-guide/interfaces/index.md)","nodes":[{"pos":[4,583],"nodes":[{"content":"Indexers in Interfaces (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,62],"content":"Indexers in Interfaces (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"Indexers in Interfaces (C# Programming Guide) | Microsoft Docs","pos":[0,62]}]}],"pos":[6,71],"yaml":true}],"content":"title: \"Indexers in Interfaces (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"indexers [C#], in interfaces\"\n  - \"accessors [C#], indexers\"\nms.assetid: e16b54bd-4a83-4f52-bd75-65819fca79e8\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[590,635],"content":"Indexers in Interfaces (C# Programming Guide)","linkify":"Indexers in Interfaces (C# Programming Guide)","nodes":[{"content":"Indexers in Interfaces (C# Programming Guide)","pos":[0,45]}]},{"content":"Indexers can be declared on an <bpt id=\"p1\">[</bpt>interface<ept id=\"p1\">](../../../csharp/language-reference/keywords/interface.md)</ept>.","pos":[636,737],"source":"Indexers can be declared on an [interface](../../../csharp/language-reference/keywords/interface.md)."},{"content":"Accessors of interface indexers differ from the accessors of <bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](../../../csharp/language-reference/keywords/class.md)</ept> indexers in the following ways:","pos":[738,892],"source":" Accessors of interface indexers differ from the accessors of [class](../../../csharp/language-reference/keywords/class.md) indexers in the following ways:"},{"content":"Interface accessors do not use modifiers.","pos":[902,943]},{"content":"An interface accessor does not have a body.","pos":[953,996]},{"content":"Thus, the purpose of the accessor is to indicate whether the indexer is read-write, read-only, or write-only.","pos":[1003,1112]},{"content":"The following is an example of an interface indexer accessor:","pos":[1119,1180]},{"pos":[1187,1322],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideIndexers#3<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/indexers-in-interfaces_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideIndexers#3](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/indexers-in-interfaces_1.cs)]"},{"content":"The signature of an indexer must differ from the signatures of all other indexers declared in the same interface.","pos":[1329,1442]},{"pos":[1451,1458],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to implement interface indexers.","pos":[1462,1526]},{"pos":[1533,1668],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideIndexers#4<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/indexers-in-interfaces_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideIndexers#4](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/indexers-in-interfaces_2.cs)]"},{"content":"In the preceding example, you could use the explicit interface member implementation by using the fully qualified name of the interface member.","pos":[1675,1818]},{"content":"For example:","pos":[1819,1831]},{"content":"However, the fully qualified name is only needed to avoid ambiguity when the class is implementing more than one interface with the same indexer signature.","pos":[1900,2055]},{"content":"For example, if an <ph id=\"ph1\">`Employee`</ph> class is implementing two interfaces, <ph id=\"ph2\">`ICitizen`</ph> and <ph id=\"ph3\">`IEmployee`</ph>, and both interfaces have the same indexer signature, the explicit interface member implementation is necessary.","pos":[2056,2263],"source":" For example, if an `Employee` class is implementing two interfaces, `ICitizen` and `IEmployee`, and both interfaces have the same indexer signature, the explicit interface member implementation is necessary."},{"content":"That is, the following indexer declaration:","pos":[2264,2307]},{"pos":[2371,2456],"content":"implements the indexer on the <ph id=\"ph1\">`IEmployee`</ph> interface, while the following declaration:","source":"implements the indexer on the `IEmployee` interface, while the following declaration:"},{"pos":[2519,2570],"content":"implements the indexer on the <ph id=\"ph1\">`ICitizen`</ph> interface.","source":"implements the indexer on the `ICitizen` interface."},{"pos":[2579,2587],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2591,2658],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Indexers<ept id=\"p1\">](../../../csharp/programming-guide/indexers/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2662,2726],"source":"[Indexers](../../../csharp/programming-guide/indexers/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Properties<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/properties.md)</ept><ph id=\"ph1\"> </ph>","pos":[2730,2812],"source":"[Properties](../../../csharp/programming-guide/classes-and-structs/properties.md) "},{"content":"<bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../../csharp/programming-guide/interfaces/index.md)</ept>","pos":[2816,2883],"source":"[Interfaces](../../../csharp/programming-guide/interfaces/index.md)"}]}