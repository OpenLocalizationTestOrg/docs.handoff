{"content":"---\ntitle: \"How to: Execute Expression Trees (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: b8c40db5-2464-4bb9-9001-8c2bc7f006c5\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Execute Expression Trees (C#)\nThis topic shows you how to execute an expression tree. Executing an expression tree may return a value, or it may just perform an action such as calling a method.  \n  \n Only expression trees that represent lambda expressions can be executed. Expression trees that represent lambda expressions are of type <xref:System.Linq.Expressions.LambdaExpression> or <xref:System.Linq.Expressions.Expression%601>. To execute these expression trees, call the <xref:System.Linq.Expressions.LambdaExpression.Compile%2A> method to create an executable delegate, and then invoke the delegate.  \n  \n> [!NOTE]\n>  If the type of the delegate is not known, that is, the lambda expression is of type <xref:System.Linq.Expressions.LambdaExpression> and not <xref:System.Linq.Expressions.Expression%601>, you must call the <xref:System.Delegate.DynamicInvoke%2A> method on the delegate instead of invoking it directly.  \n  \n If an expression tree does not represent a lambda expression, you can create a new lambda expression that has the original expression tree as its body, by calling the <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29> method. Then, you can execute the lambda expression as described earlier in this section.  \n  \n## Example  \n The following code example demonstrates how to execute an expression tree that represents raising a number to a power by creating a lambda expression and executing it. The result, which represents the number raised to the power, is displayed.  \n  \n```csharp  \n// The expression tree to execute.  \nBinaryExpression be = Expression.Power(Expression.Constant(2D), Expression.Constant(3D));  \n  \n// Create a lambda expression.  \nExpression<Func<double>> le = Expression.Lambda<Func<double>>(be);  \n  \n// Compile the lambda expression.  \nFunc<double> compiledExpression = le.Compile();  \n  \n// Execute the lambda expression.  \ndouble result = compiledExpression();  \n  \n// Display the result.  \nConsole.WriteLine(result);  \n  \n// This code produces the following output:  \n// 8  \n```  \n  \n## Compiling the Code  \n  \n-   Add a project reference to System.Core.dll if it is not already referenced.  \n  \n-   Include the System.Linq.Expressions namespace.  \n  \n## See Also  \n [Expression Trees (C#)](../../../../csharp/programming-guide/concepts/expression-trees/index.md)   \n [How to: Modify Expression Trees (C#)](../../../../csharp/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md)","nodes":[{"pos":[12,66],"content":"How to: Execute Expression Trees (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Execute Expression Trees (C#) | Microsoft Docs","pos":[0,54]}]},{"pos":[437,474],"content":"How to: Execute Expression Trees (C#)","linkify":"How to: Execute Expression Trees (C#)","nodes":[{"content":"How to: Execute Expression Trees (C#)","pos":[0,37]}]},{"content":"This topic shows you how to execute an expression tree.","pos":[475,530]},{"content":"Executing an expression tree may return a value, or it may just perform an action such as calling a method.","pos":[531,638]},{"content":"Only expression trees that represent lambda expressions can be executed.","pos":[645,717]},{"content":"Expression trees that represent lambda expressions are of type <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Linq.Expressions.Expression%601&gt;</ph>.","pos":[718,878],"source":" Expression trees that represent lambda expressions are of type <xref:System.Linq.Expressions.LambdaExpression> or <xref:System.Linq.Expressions.Expression%601>."},{"content":"To execute these expression trees, call the <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.LambdaExpression.Compile%2A&gt;</ph> method to create an executable delegate, and then invoke the delegate.","pos":[879,1052],"source":" To execute these expression trees, call the <xref:System.Linq.Expressions.LambdaExpression.Compile%2A> method to create an executable delegate, and then invoke the delegate."},{"pos":[1060,1371],"content":"[!NOTE]\n If the type of the delegate is not known, that is, the lambda expression is of type <xref:System.Linq.Expressions.LambdaExpression> and not <xref:System.Linq.Expressions.Expression%601>, you must call the <xref:System.Delegate.DynamicInvoke%2A> method on the delegate instead of invoking it directly.","leadings":["","> "],"nodes":[{"content":"If the type of the delegate is not known, that is, the lambda expression is of type <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> and not <ph id=\"ph2\">&lt;xref:System.Linq.Expressions.Expression%601&gt;</ph>, you must call the <ph id=\"ph3\">&lt;xref:System.Delegate.DynamicInvoke%2A&gt;</ph> method on the delegate instead of invoking it directly.","pos":[9,309],"source":" If the type of the delegate is not known, that is, the lambda expression is of type <xref:System.Linq.Expressions.LambdaExpression> and not <xref:System.Linq.Expressions.Expression%601>, you must call the <xref:System.Delegate.DynamicInvoke%2A> method on the delegate instead of invoking it directly."}]},{"content":"If an expression tree does not represent a lambda expression, you can create a new lambda expression that has the original expression tree as its body, by calling the <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29&gt;</ph> method.","pos":[1378,1738],"source":"If an expression tree does not represent a lambda expression, you can create a new lambda expression that has the original expression tree as its body, by calling the <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29> method."},{"content":"Then, you can execute the lambda expression as described earlier in this section.","pos":[1739,1820]},{"pos":[1829,1836],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to execute an expression tree that represents raising a number to a power by creating a lambda expression and executing it.","pos":[1840,2007]},{"content":"The result, which represents the number raised to the power, is displayed.","pos":[2008,2082]},{"pos":[2627,2645],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"Add a project reference to System.Core.dll if it is not already referenced.","pos":[2655,2730]},{"content":"Include the System.Linq.Expressions namespace.","pos":[2740,2786]},{"pos":[2795,2803],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Expression Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/expression-trees/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2807,2904],"source":"[Expression Trees (C#)](../../../../csharp/programming-guide/concepts/expression-trees/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Modify Expression Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md)</ept>","pos":[2907,3044],"source":" [How to: Modify Expression Trees (C#)](../../../../csharp/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md)"}]}