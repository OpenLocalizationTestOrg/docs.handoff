<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a55307261e7846b71bf827fbaadeedc657857f13</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\table-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fec75b987f90889543c9226c9ff3b5b33e60c21</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15b0b074bb1e00a1f15691874e5b574fe40e9bda</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Table Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Table Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> is a block level element that supports grid-based presentation of Flow document content.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The flexibility of this element makes it very useful, but also makes it more complicated to understand and use correctly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Table Basics<ept id="p1">](#table_basics)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How is Table Different then Grid?<ept id="p1">](#table_vs_Grid)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic Table Structure<ept id="p1">](#basic_table_structure)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Table Containment<ept id="p1">](#table_containment)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Row Groupings<ept id="p1">](#row_groupings)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Background Rendering Precedence<ept id="p1">](#rendering_precedence)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Spanning Rows or Columns<ept id="p1">](#spanning_rows_or_columns)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building a Table With Code<ept id="p1">](#building_a_table_with_code)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[Related Topics]</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Table Basics</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>How is Table Different then Grid?</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> and                          <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> share some common functionality, but each is best suited for different scenarios.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A                          <ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> is designed for use within flow content (see                          <bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept> for more information on flow content).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Grids are best used inside of forms (basically anywhere outside of flow content).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Within a                          <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>,                          <ph id="ph2">&lt;xref:System.Windows.Documents.Table&gt;</ph> supports flow content behaviors like pagination, column reflow, and content selection while a                          <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> does not.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> on the other hand is best used outside of a                          <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> for many reasons including                          <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> adds elements based on a row and column index,                          <ph id="ph4">&lt;xref:System.Windows.Documents.Table&gt;</ph> does not.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element allows layering of child content, allowing more than one element to exist within a single "cell."</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> does not support layering.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Child elements of a                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> can be absolutely positioned relative to the area of their "cell" boundaries.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> does not support this feature.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Finally, a                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> requires less resources then a                          <ph id="ph2">&lt;xref:System.Windows.Documents.Table&gt;</ph> so consider using a                          <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to improve performance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Basic Table Structure</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> provides a grid-based presentation consisting of columns (represented by                          <ph id="ph2">&lt;xref:System.Windows.Documents.TableColumn&gt;</ph> elements) and rows (represented by                          <ph id="ph3">&lt;xref:System.Windows.Documents.TableRow&gt;</ph> elements).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TableColumn&gt;</ph> elements do not host content; they simply define columns and characteristics of columns.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TableRow&gt;</ph> elements must be hosted in a                          <ph id="ph2">&lt;xref:System.Windows.Documents.TableRowGroup&gt;</ph> element, which defines a grouping of rows for the table.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TableCell&gt;</ph> elements, which contain the actual content to be presented by the table, must be hosted in a                          <ph id="ph2">&lt;xref:System.Windows.Documents.TableRow&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TableCell&gt;</ph> may only contain elements that derive from                          <ph id="ph2">&lt;xref:System.Windows.Documents.Block&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Valid child elements for a                          <ph id="ph1">&lt;xref:System.Windows.Documents.TableCell&gt;</ph> include.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TableCell&gt;</ph> elements may not directly host text content.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information about the containment rules for flow content elements like                              <ph id="ph1">&lt;xref:System.Windows.Documents.TableCell&gt;</ph>, see                              <bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> is similar to the                              <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element but has more capabilities and, therefore, requires greater resource overhead.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example defines a simple 2 x 3 table with                          <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](../../../../includes/tlasharptla-titlexaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>TableSnippets2#_Table_BasicLayout<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml#_table_basiclayout)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following figure shows how this example renders.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Screenshot: Render a basic table<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/basictablerrender.png "</bpt>BasicTablerRender<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Table Containment</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> derives from the                          <ph id="ph2">&lt;xref:System.Windows.Documents.Block&gt;</ph> element, and adheres to the common rules for                          <ph id="ph3">&lt;xref:System.Windows.Documents.Block&gt;</ph> level elements.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A                          <ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> element may be contained by any of the following elements:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Row Groupings</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.Documents.TableRowGroup&gt;</ph> element provides a way to arbitrarily group rows within a table; every row in a table must belong to a row grouping.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Rows within a row group often share a common intent, and may be styled as a group.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A common use for row groupings is to separate special-purpose rows, such as a title, header, and footer rows, from the primary content contained by the table.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example uses                          <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](../../../../includes/tlasharptla-titlexaml-md.md)]</ph> to define a table with styled header and footer rows.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>TableSnippets2#_Table_RowGroups<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml#_table_rowgroups)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following figure shows how this example renders.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Screenshot: Table row groups<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/table-rowgroups.png "</bpt>Table_RowGroups<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Background Rendering Precedence</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Table elements render in the following order (z-order from lowest to highest).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This order cannot be changed.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, there is no "Z-order" property for these elements that you can use to override this established order.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Consider the following example, which defines background colors for each of these elements within a table.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>TableSnippets2#_Table_ZOrder<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml#_table_zorder)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following figure shows how this example renders (showing background colors only).</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Screenshot: Table z&amp;#45;order<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/table-zorder.png "</bpt>Table_ZOrder<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Spanning Rows or Columns</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Table cells may be configured to span multiple rows or columns by using the                          <ph id="ph1">&lt;xref:System.Windows.Documents.TableCell.RowSpan%2A&gt;</ph> or                          <ph id="ph2">&lt;xref:System.Windows.Documents.TableCell.ColumnSpan%2A&gt;</ph> attributes, respectively.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Consider the following example, in which a cell spans three columns.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>TableSnippets2#_Table_ColumnSpan<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml#_table_columnspan)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following figure shows how this example renders.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Screenshot: Cell spanning all three columns<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/table-columnspan.png "</bpt>Table_ColumnSpan<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Building a Table With Code</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following examples show how to programmatically create a                  <ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> and populate it with content.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The contents of the table are apportioned into five rows (represented by                  <ph id="ph1">&lt;xref:System.Windows.Documents.TableRow&gt;</ph> objects contained in a                  <ph id="ph2">&lt;xref:System.Windows.Documents.Table.RowGroups%2A&gt;</ph> object) and six columns (represented by                  <ph id="ph3">&lt;xref:System.Windows.Documents.TableColumn&gt;</ph> objects).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The rows are used for different presentation purposes, including a title row intended to title the entire table, a header row to describe the columns of data in the table, and a footer row with summary information.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note that the notion of "title", "header", and "footer" rows are not inherent to the table; these are simply rows with different characteristics.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Table cells contain the actual content, which can be comprised of text, images, or nearly any other                  <ph id="ph1">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> element.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>First, a                  <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> is created to host the                  <ph id="ph2">&lt;xref:System.Windows.Documents.Table&gt;</ph>, and a new                  <ph id="ph3">&lt;xref:System.Windows.Documents.Table&gt;</ph> is created and added to the contents of the                  <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>TableSnippets#_TableCreate<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets/CSharp/Table.cs#_tablecreate)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>TableSnippets#_TableCreate<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets/VisualBasic/Table.vb#_tablecreate)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Next, six                  <ph id="ph1">&lt;xref:System.Windows.Documents.TableColumn&gt;</ph> objects are created and added to the table's                  <ph id="ph2">&lt;xref:System.Windows.Documents.Table.Columns%2A&gt;</ph> collection, with some formatting applied.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Note that the table's                      <ph id="ph1">&lt;xref:System.Windows.Documents.Table.Columns%2A&gt;</ph> collection uses standard zero-based indexing.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>TableSnippets#_TableCreateColumns<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets/CSharp/Table.cs#_tablecreatecolumns)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>TableSnippets#_TableCreateColumns<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets/VisualBasic/Table.vb#_tablecreatecolumns)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Next, a title row is created and added to the table with some formatting applied.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The title row happens to contain a single cell that spans all six columns in the table.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>TableSnippets#_TableAddTitleRow<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets/CSharp/Table.cs#_tableaddtitlerow)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>TableSnippets#_TableAddTitleRow<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets/VisualBasic/Table.vb#_tableaddtitlerow)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Next, a header row is created and added to the table, and the cells in the header row are created and populated with content.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>TableSnippets#_TableAddHeaderRow<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets/CSharp/Table.cs#_tableaddheaderrow)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>TableSnippets#_TableAddHeaderRow<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets/VisualBasic/Table.vb#_tableaddheaderrow)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Next, a row for data is created and added to the table, and the cells in this row are created and populated with content.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Building this row is similar to building the header row, with slightly different formatting applied.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>TableSnippets#_TableAddDataRow<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets/CSharp/Table.cs#_tableadddatarow)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>TableSnippets#_TableAddDataRow<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets/VisualBasic/Table.vb#_tableadddatarow)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Finally, a footer row is created, added, and formatted.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Like the title row, the footer contains a single cell that spans all six columns in the table.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>TableSnippets#_TableAddFooterRow<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets/CSharp/Table.cs#_tableaddfooterrow)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>TableSnippets#_TableAddFooterRow<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets/VisualBasic/Table.vb#_tableaddfooterrow)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Define a Table with XAML<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-define-a-table-with-xaml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Documents in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/documents-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Use Flow Content Elements<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-use-flow-content-elements.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>