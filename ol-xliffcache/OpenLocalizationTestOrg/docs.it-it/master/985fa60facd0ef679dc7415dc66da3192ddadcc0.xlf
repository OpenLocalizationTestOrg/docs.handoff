<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="extract-wf-data-using-tracking.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">985fa60facd0ef679dc7415dc66da3192ddadcc0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\extract-wf-data-using-tracking.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a53ba42309cdfe3889d2e33cce48de70d0ff5de0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19b0f4c94ad284afccbb39435eb83b9672c19f41</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Extract WF Data using Tracking | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Extract WF Data using Tracking</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to use workflow tracking to extract workflow variables and arguments from activities.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It also shows the addition of annotations to tracking records and the extraction of data payload within custom tracking records.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The sample uses the Event Tracing for Windows (ETW) tracking participant to extract data from the workflow.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sample Details</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[wf](../../../../includes/wf-md.md)]</ph> provides tracking to gain visibility into the execution of a workflow instance.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The tracking runtime emits workflow tracking records during the execution of the workflow.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Along with the workflow tracking records, data within the workflow instance can be extracted from the workflow.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following list details the types of data that can be extracted from tracking records:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Workflow variables within an activity and tracking records during activity execution.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To extract workflow variables, the variables to be extracted are specified in a profile.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variables to be extracted can only be specified with <ph id="ph1">`ActivityStateQueries`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates a tracking profile used to extract the workflow variable from an activity.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Activity arguments and activity state tracking records.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Arguments define the way data flows in or out of an activity.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Arguments to be extracted are specified using an <ph id="ph1">&lt;xref:System.Activities.Tracking.ActivityStateQuery&gt;</ph>.The following code example is a tracking profile that extracts the <ph id="ph2">`Value`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Annotations are key/value pairs that can be added to any tracking record that is emitted.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Annotations serve as a tagging mechanism for tracking records.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Annotations are added to tracking records through a tracking profile.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Annotations can be added to any type of a workflow tracking query.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following code example is a tracking profile that shows how an annotation can be added to a tracking record.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Custom tracking records are emitted from user-defined activities.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Custom tracking records can carry payload data defined within this activity.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Subscribing for custom tracking records in a tracking profile allows the extraction of the payload within the tracking record.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The custom tracking records can be extracted with custom a <ph id="ph1">&lt;xref:System.Activities.Tracking.TrackingQuery&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code example is a tracking profile that extracts a custom tracking record along with its payload.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The sample demonstrates the extraction of a variables, arguments, custom records and adding annotations using a profile specified in a Web.config. Tracking is enabled on the sample workflow service by adding an <ph id="ph1">`&lt;etwTracking&gt;`</ph> behavior element.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following code example enables tracking for the <ph id="ph1">`ExtractWorkflowVariables`</ph> tracking profile.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the WFStockPriceApplication.sln solution file.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To build the solution, press CTRL+SHIFT+B.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To run the solution, press F5.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The browser window opens and shows the directory listing for the application.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the browser, click StockPriceService.xamlx.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The browser displays the StockPriceService page, which contains the local service WSDL address.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Copy this address.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following example shows a local service WSDL address.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Before invoking the service, start Event Viewer and ensure that the event log is listening for tracking events emitted from the workflow service.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Administrative Tools<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Event Viewer<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the tree view in Event Viewer, navigate to <bpt id="p1">**</bpt>Event Viewer<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Applications and Services Logs<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Microsoft<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Microsoft<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>View<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Show Analytic and Debug Logs<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Ensure that the <bpt id="p1">**</bpt>Show Analytic and Debug Logs<ept id="p1">**</ept> option is checked.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the tree view in Event Viewer, navigate to <bpt id="p1">**</bpt>Event Viewer<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Applications and Services Logs<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Microsoft<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Windows<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Application Server-Applications<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Enable Log<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[fileExplorer](../../../../includes/fileexplorer-md.md)]</ph>, open the WCF test client.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The WCF test client (WcfTestClient.exe) is located in the <ph id="ph1">\&lt;</ph><ph id="ph2">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph> installation folder&gt;\Common7\IDE\ folder.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph> installation folder is C:\Program Files\Microsoft Visual Studio 10.0.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In WCF test client, select <bpt id="p1">**</bpt>Add Service<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add the local service WSDL address you copied earlier in the input box.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In WCF test client, double-click <ph id="ph1">`GetStockPrice`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This opens the <ph id="ph1">`GetStockPrice`</ph> method.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The request accepts one parameter.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Use the value <bpt id="p1">**</bpt>Contoso<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Invoke<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Switch back to Event Viewer and navigate to <bpt id="p1">**</bpt>Event Viewer<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Applications and Services Logs<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Microsoft<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Windows<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Application Server-Applications<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Refresh<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The workflow events are in the event ID ranges 100-199.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The events contain the annotations, variables, arguments and custom tracking records that can be viewed in the event viewer.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Cleaning up in the Event Viewer</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The analytic channel in the event log can be cleaned up in the Event Viewer by doing the following.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To clean up (Optional)</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Open Event Viewer.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Navigate to <bpt id="p1">**</bpt>Event Viewer<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Applications and Services Logs<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Microsoft<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Windows<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Application Server-Applications<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Disable Log<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Navigate to <bpt id="p1">**</bpt>Event Viewer<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Applications and Services Logs<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Microsoft<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Windows<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Application Server-Applications<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Clear Log<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Clear<ept id="p1">**</ept> option to clear the events.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Known Issue</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is a known issue in the Event Viewer where it may fail to decode ETW events.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You may see an error message that looks like the following.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you encounter this error, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in the actions pane.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The event should now decode properly.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your computer.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AppFabric Monitoring Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=193959)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>