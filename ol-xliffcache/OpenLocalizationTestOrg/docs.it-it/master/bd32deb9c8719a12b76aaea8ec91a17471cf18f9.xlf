<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="canceling-threads-cooperatively.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd32deb9c8719a12b76aaea8ec91a17471cf18f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\threading\canceling-threads-cooperatively.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5e56b6f91b806bf332e92ce4265716d8bd54ba3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35bf8c125c4378c457b3260712f3c1ee8efcc951</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Canceling threads cooperatively</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Canceling threads cooperatively</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Prior to the .NET Framework 4, the .NET Framework provided no built-in way to cancel a thread cooperatively after it was started.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, starting with the .NET Framework 4, you can use a <ph id="ph1">&lt;xref:System.Threading.CancellationToken?displayProperty=nameWithType&gt;</ph> to cancel threads, just as you can use them to cancel <ph id="ph2">&lt;xref:System.Threading.Tasks.Task?displayProperty=nameWithType&gt;</ph> objects or PLINQ queries.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">&lt;xref:System.Threading.Thread?displayProperty=nameWithType&gt;</ph> class does not offer built-in support for cancellation tokens, you can pass a token to a thread procedure by using the <ph id="ph2">&lt;xref:System.Threading.Thread&gt;</ph> constructor that takes a <ph id="ph3">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to do this.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Threads and Threading<ept id="p1">](using-threads-and-threading.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>