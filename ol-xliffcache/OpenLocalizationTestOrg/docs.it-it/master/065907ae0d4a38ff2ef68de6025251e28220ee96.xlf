<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-read-and-write-to-a-newly-created-data-file.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">065907ae0d4a38ff2ef68de6025251e28220ee96</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-read-and-write-to-a-newly-created-data-file.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e01fad1221463846a65845c0a0cf59b47540983</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3569c114e43f2c5198eb9902b5f51a0bfd2a2248</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Read and write to a newly created data file</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Read and write to a newly created data file</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.BinaryWriter?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.BinaryReader?displayProperty=nameWithType&gt;</ph> classes are used for writing and reading data other than character strings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an empty file stream, write data to it, and read data from it.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The example creates a data file called <bpt id="p1">*</bpt>Test.data<ept id="p1">*</ept> in the current directory, creates the associated <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> objects, and uses the <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> object to write the integers 0 through 10 to <bpt id="p2">*</bpt>Test.data<ept id="p2">*</ept>, which leaves the file pointer at the end of the file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> object then sets the file pointer back to the origin and reads out the specified content.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>Test.data<ept id="p1">*</ept> already exists in the current directory, an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the file mode option <ph id="ph1">&lt;xref:System.IO.FileMode.Create?displayProperty=nameWithType&gt;</ph> rather than <ph id="ph2">&lt;xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType&gt;</ph> to always create a new file without throwing an exception.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Enumerate directories and files<ept id="p1">](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Open and append to a log file<ept id="p1">](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read text from a file<ept id="p1">](../../../docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write text to a file<ept id="p1">](../../../docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read characters from a string<ept id="p1">](../../../docs/standard/io/how-to-read-characters-from-a-string.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write characters to a string<ept id="p1">](../../../docs/standard/io/how-to-write-characters-to-a-string.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File and stream I/O<ept id="p1">](../../../docs/standard/io/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>