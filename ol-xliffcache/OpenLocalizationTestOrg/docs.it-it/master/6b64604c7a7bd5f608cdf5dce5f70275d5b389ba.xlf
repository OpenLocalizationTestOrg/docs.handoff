<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b64604c7a7bd5f608cdf5dce5f70275d5b389ba</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\debugging-structures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">459520fb69e40b4e10ab5788fdc7d5b66ba1bf16</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17f9c9ad54b6e52d386528eab59bc2199a93f629</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Debugging Structures | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Debugging Structures</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes the unmanaged structures that the debugging API uses.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLR_DEBUGGING_VERSION Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clr-debugging-version-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Defines the product version of the common language runtime (CLR) for debugging purposes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CodeChunkInfo Structure1<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/codechunkinfo-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Represents a single chunk of code in memory.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugBlockingObject Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugblockingobject-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Defines an object that is blocking a thread and the reason why the thread is blocked.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugEHClause Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugehclause-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Represents an exception handling (EH) clause for a given piece of intermediate language (IL).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugExceptionObjectStackFrame Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugexceptionobjectstackframe-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Represents stack frame information from an exception object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugExceptionObjectStackFrame Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugexceptionobjectstackframe-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Maps a <ph id="ph1">[!INCLUDE[wrt](../../../../includes/wrt-md.md)]</ph> GUID to its corresponding <bpt id="p1">[</bpt>ICorDebugType<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugtype-interface.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>COR_ACTIVE_FUNCTION</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Contains information about the functions that are currently active in a thread's frames.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_ARRAY_LAYOUT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-array-layout-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Provides information about the layout of an array object in memory.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>COR_DEBUG_IL_TO_NATIVE_MAP</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Contains the offsets that are used to map Microsoft intermediate language (MSIL) code to native code.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>COR_DEBUG_STEP_RANGE</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Contains the offset information for a range of code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_FIELD Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-field-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Provides information about a field in an object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_GC_REFERENCE Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-gc-reference-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Contains information about an object that is to be garbage-collected.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_HEAPINFO Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-heapinfo-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Provides general information about the garbage collection heap, including whether it is enumerable.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_HEAPOBJECT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-heapobject-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Provides information about an object on the managed heap.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>COR_IL_MAP</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies changes in the relative offset of a function.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_SEGMENT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-segment-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Contains information about a region of memory in the managed heap.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_TYPEID Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Contains a type identifier.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_TYPE_LAYOUT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-type-layout-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Provides information about the layout of an object in memory.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>COR_VERSION</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Stores the standard four-part version number of the common language runtime.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StackTrace_SimpleContext Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/stacktrace-simplecontext-structure.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Provides a simple context that can be used in place of a full <ph id="ph1">`CONTEXT`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Coclasses<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-coclasses.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Global Static Functions<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-global-static-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Enumerations<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>