{"content":"---\ntitle: \"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"data grids [Windows Forms], customizing rows\"\n  - \"rows [Windows Forms], customizing in DataGridView control\"\n  - \"DataGridView control [Windows Forms], customizing rows\"\nms.assetid: d40b53d2-7e7c-48c5-8570-6e79d15c3bbb\n---\n# How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control\nYou can control the appearance of <xref:System.Windows.Forms.DataGridView> rows by handling one or both of the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> and <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> events. These events are designed so that you can paint only what you want to while letting the <xref:System.Windows.Forms.DataGridView> control paint the rest. For example, if you want to paint a custom background, you can handle the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> event and let the individual cells paint their own foreground content. Alternately, you can let the cells paint themselves and add custom foreground content in a handler for the <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> event. You can also disable cell painting and paint everything yourself in a <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> event handler.  \n  \n The following code example implements handlers for both events in order to provide a gradient selection background and some custom foreground content that spans multiple columns.  \n  \n## Example  \n [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#00)]\n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#00)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Drawing, and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n\n## See also\n\n- <xref:System.Windows.Forms.DataGridView>\n- <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType>\n- <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType>\n- [Customizing the Windows Forms DataGridView Control](customizing-the-windows-forms-datagridview-control.md)\n- [DataGridView Control Architecture](datagridview-control-architecture-windows-forms.md)\n","nodes":[{"pos":[4,398],"embed":true,"restype":"x-metadata","content":"title: \"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"data grids [Windows Forms], customizing rows\"\n  - \"rows [Windows Forms], customizing in DataGridView control\"\n  - \"DataGridView control [Windows Forms], customizing rows\"\nms.assetid: d40b53d2-7e7c-48c5-8570-6e79d15c3bbb","nodes":[{"content":"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control","nodes":[{"pos":[0,82],"content":"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control","nodes":[{"content":"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control","pos":[0,82]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[405,487],"content":"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control","linkify":"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control","nodes":[{"content":"How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control","pos":[0,82]}]},{"content":"You can control the appearance of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> rows by handling one or both of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType&gt;</ph> events.","pos":[488,775],"source":"You can control the appearance of <xref:System.Windows.Forms.DataGridView> rows by handling one or both of the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> and <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> events."},{"content":"These events are designed so that you can paint only what you want to while letting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control paint the rest.","pos":[776,928],"source":" These events are designed so that you can paint only what you want to while letting the <xref:System.Windows.Forms.DataGridView> control paint the rest."},{"content":"For example, if you want to paint a custom background, you can handle the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType&gt;</ph> event and let the individual cells paint their own foreground content.","pos":[929,1155],"source":" For example, if you want to paint a custom background, you can handle the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> event and let the individual cells paint their own foreground content."},{"content":"Alternately, you can let the cells paint themselves and add custom foreground content in a handler for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType&gt;</ph> event.","pos":[1156,1352],"source":" Alternately, you can let the cells paint themselves and add custom foreground content in a handler for the <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> event."},{"content":"You can also disable cell painting and paint everything yourself in a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType&gt;</ph> event handler.","pos":[1353,1519],"source":" You can also disable cell painting and paint everything yourself in a <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> event handler."},{"content":"The following code example implements handlers for both events in order to provide a gradient selection background and some custom foreground content that spans multiple columns.","pos":[1526,1704]},{"pos":[1713,1720],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2114,2132],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[2136,2158]},{"content":"References to the System, System.Drawing, and System.Windows.Forms assemblies.","pos":[2168,2246]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2253,2607],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[2608,2696]},{"pos":[2703,2711],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2927,3034],"content":"<bpt id=\"p1\">[</bpt>Customizing the Windows Forms DataGridView Control<ept id=\"p1\">](customizing-the-windows-forms-datagridview-control.md)</ept>","source":"[Customizing the Windows Forms DataGridView Control](customizing-the-windows-forms-datagridview-control.md)"},{"pos":[3037,3124],"content":"<bpt id=\"p1\">[</bpt>DataGridView Control Architecture<ept id=\"p1\">](datagridview-control-architecture-windows-forms.md)</ept>","source":"[DataGridView Control Architecture](datagridview-control-architecture-windows-forms.md)"}]}