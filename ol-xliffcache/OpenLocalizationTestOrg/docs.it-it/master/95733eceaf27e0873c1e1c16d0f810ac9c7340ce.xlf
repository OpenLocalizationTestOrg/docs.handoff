<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="object-states-and-change-tracking.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95733eceaf27e0873c1e1c16d0f810ac9c7340ce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\object-states-and-change-tracking.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11e6d56b7c69d23fa04800e65c71134365929346</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ccb63cc1a4a0e589477cc995b910795b4808acf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Object States and Change-Tracking | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Object States and Change-Tracking</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>objects always participate in some <bpt id="p1">*</bpt>state<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, when <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> creates a new object, the object is in <ph id="ph2">`Unchanged`</ph> state.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A new object that you yourself create is unknown to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and is in <ph id="ph2">`Untracked`</ph> state.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Following successful execution of <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, all objects known to <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> are in <ph id="ph3">`Unchanged`</ph> state.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>(The single exception is represented by those that have been successfully deleted from the database, which are in <ph id="ph1">`Deleted`</ph> state and unusable in that <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.)</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Object States</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table lists the possible states for <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> objects.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>State</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An object not tracked by <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Examples include the following:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   An object not queried through the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> (such as a newly created object).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   An object created through deserialization</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   An object queried through a different <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object retrieved by using the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and not known to have been modified since it was created.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An object which is <bpt id="p1">*</bpt>attached<ept id="p1">*</ept> to a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An object not retrieved by using the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This causes a database <ph id="ph1">`INSERT`</ph> during <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An object known to have been modified since it was retrieved.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This causes a database <ph id="ph1">`UPDATE`</ph> during <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An object marked for deletion, causing a database <ph id="ph1">`DELETE`</ph> during <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An object that has been deleted in the database.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This state is final and does not allow for additional transitions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Inserting Objects</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can explicitly request <ph id="ph1">`Inserts`</ph> by using <ph id="ph2">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Alternatively, <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> can infer <ph id="ph2">`Inserts`</ph> by finding objects connected to one of the known objects that must be updated.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, if you add an <ph id="ph1">`Untracked`</ph> object to an <ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> or set an <ph id="ph3">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph> to an <ph id="ph4">`Untracked`</ph> object, you make the <ph id="ph5">`Untracked`</ph> object reachable by way of tracked objects in the graph.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>While processing <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> traverses the tracked objects and discovers any reachable persistent objects that are not tracked.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Such objects are candidates for insertion into the database.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For classes in an inheritance hierarchy, <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>(<ph id="ph2">`o`</ph>) also sets the value of the member designated as the <bpt id="p1">*</bpt>discriminator<ept id="p1">*</ept> to match the type of the object <ph id="ph3">`o`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the case of a type matching the default discriminator value, this action causes the discriminator value to be overwritten with the default value.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Inheritance Support<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/inheritance-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object added to a <ph id="ph1">`Table`</ph> is not in the identity cache.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The identity cache reflects only what is retrieved from the database.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>After a call to <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>, the added entity does not appear in queries against the database until <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is successfully completed.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Deleting Objects</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You mark a tracked object <ph id="ph1">`o`</ph> for deletion by calling <ph id="ph2">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>(o) on the appropriate <ph id="ph3">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> considers the removal of an object from an <ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> as an update operation, and the corresponding foreign key value is set to null.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The target of the operation (<ph id="ph1">`o`</ph>) is not deleted from its table.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`cust.Orders.DeleteOnSubmit(ord)`</ph> indicates an update where the relationship between <ph id="ph2">`cust`</ph> and <ph id="ph3">`ord`</ph> is severed by setting the foreign key <ph id="ph4">`ord.CustomerID`</ph> to null.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It does not cause the deletion of the row corresponding to <ph id="ph1">`ord`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>performs the following processing when an object is deleted (<ph id="ph1">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>) from its table:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, a <ph id="ph2">`DELETE`</ph> operation is performed for that object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The removal is not propagated to related objects regardless of whether they are loaded.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifically, related objects are not loaded for updating the relationship property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>After successful execution of <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, the objects are set to the <ph id="ph2">`Deleted`</ph> state.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>As a result, you cannot use the object or its <ph id="ph1">`id`</ph> in that <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The internal cache maintained by a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance does not eliminate objects that are retrieved or added as new, even after the objects have been deleted in the database.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can call <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph> only on an object tracked by the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For an <ph id="ph1">`Untracked`</ph> object, you must call <ph id="ph2">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph> before you call <ph id="ph3">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph> on an <ph id="ph2">`Untracked`</ph> object throws an exception.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Removing an object from a table tells <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> to generate a corresponding SQL <ph id="ph2">`DELETE`</ph> command at the time of <ph id="ph3">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This action does not remove the object from the cache or propagate the deletion to related objects.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To reclaim the <ph id="ph1">`id`</ph> of a deleted object, use a new <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For cleanup of related objects, you can use the <bpt id="p1">*</bpt>cascade delete<ept id="p1">*</ept> feature of the database, or else manually delete the related objects.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The related objects do not have to be deleted in any special order (unlike in the database).</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Updating Objects</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can detect <ph id="ph1">`Updates`</ph> by observing notifications of changes.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Notifications are provided through the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanging.PropertyChanging&gt;</ph> event in property setters.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> is notified of the first change to an object, it creates a copy of the object and considers the object a candidate for generating an <ph id="ph2">`Update`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For objects that do not implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanging&gt;</ph>, <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> maintains a copy of the values that objects had when they were first materialized.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> compares the current and original values to decide whether the object has been changed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For updates to relationships, the reference from the child to the parent (that is, the reference corresponding to the foreign key) is considered the authority.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The reference in the reverse direction (that is, from parent to child) is optional.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Relationship classes (<ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph>) guarantee that the bidirectional references are consistent for one-to-many and one-to-one relationships.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the object model does not use <ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph>, and if the reverse reference is present, it is your responsibility to keep it consistent with the forward reference when the relationship is updated.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you update both the required reference and the corresponding foreign key, you must make sure that they agree.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown if the two are not synchronized at the time that you call <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Although foreign key value changes are sufficient for affecting an update of the underlying row, you should change the reference to maintain connectivity of the object graph and bidirectional consistency of relationships.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Background Information<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/background-information.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Insert, Update, and Delete Operations<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/insert-update-and-delete-operations.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>