{"content":"---\ntitle: \"Statement recursively calls the containing 'AddHandler' for event '<eventname>'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc41998\"\n  - \"vbc41998\"\nhelpviewer_keywords: \n  - \"BC41998\"\nms.assetid: 4375b191-fbd9-4e93-b9bb-9159d533ddf6\n---\n# Statement recursively calls the containing 'AddHandler' for event '\\<eventname>'\nThe statements in the `AddHandler` accessor of an event definition must not reference the event directly.  \n  \n The recommended approach is to store the list of the event's handlers as a private field in the class, structure, or module that defined the event. For more information, see [How to: Declare Custom Events To Avoid Blocking](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md) and [How to: Declare Custom Events To Conserve Memory](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md).  \n  \n **Error ID:** BC41998  \n  \n## To correct this error  \n  \n-   Rewrite the event definition to avoid recursion.  \n  \n## See also\n\n- [AddHandler statement](~/docs/visual-basic/language-reference/statements/addhandler-statement.md)\n- [Event Statement](../../visual-basic/language-reference/statements/event-statement.md)\n- [How to: Declare Custom Events To Avoid Blocking](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)\n- [How to: Declare Custom Events To Conserve Memory](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)\n","nodes":[{"pos":[4,240],"embed":true,"restype":"x-metadata","content":"title: \"Statement recursively calls the containing 'AddHandler' for event '<eventname>'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc41998\"\n  - \"vbc41998\"\nhelpviewer_keywords: \n  - \"BC41998\"\nms.assetid: 4375b191-fbd9-4e93-b9bb-9159d533ddf6","nodes":[{"content":"Statement recursively calls the containing 'AddHandler' for event '<eventname>'","nodes":[{"pos":[0,79],"content":"Statement recursively calls the containing 'AddHandler' for event '<ph id=\"ph1\">&lt;eventname&gt;</ph>'","source":"Statement recursively calls the containing 'AddHandler' for event '<eventname>'"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[247,327],"content":"Statement recursively calls the containing 'AddHandler' for event '\\<eventname>'","linkify":"Statement recursively calls the containing 'AddHandler' for event '\\<eventname>'","nodes":[{"content":"Statement recursively calls the containing 'AddHandler' for event '<ph id=\"ph1\">\\&lt;</ph>eventname&gt;'","pos":[0,80],"source":"Statement recursively calls the containing 'AddHandler' for event '\\<eventname>'"}]},{"pos":[328,433],"content":"The statements in the <ph id=\"ph1\">`AddHandler`</ph> accessor of an event definition must not reference the event directly.","source":"The statements in the `AddHandler` accessor of an event definition must not reference the event directly."},{"content":"The recommended approach is to store the list of the event's handlers as a private field in the class, structure, or module that defined the event.","pos":[440,587]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Declare Custom Events To Avoid Blocking<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Declare Custom Events To Conserve Memory<ept id=\"p2\">](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept>.","pos":[588,946],"source":" For more information, see [How to: Declare Custom Events To Avoid Blocking](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md) and [How to: Declare Custom Events To Conserve Memory](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)."},{"pos":[953,974],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC41998","source":"**Error ID:** BC41998"},{"pos":[983,1004],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Rewrite the event definition to avoid recursion.","pos":[1014,1062]},{"pos":[1071,1079],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1083,1180],"content":"<bpt id=\"p1\">[</bpt>AddHandler statement<ept id=\"p1\">](~/docs/visual-basic/language-reference/statements/addhandler-statement.md)</ept>","source":"[AddHandler statement](~/docs/visual-basic/language-reference/statements/addhandler-statement.md)"},{"pos":[1183,1269],"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/event-statement.md)</ept>","source":"[Event Statement](../../visual-basic/language-reference/statements/event-statement.md)"},{"pos":[1272,1434],"content":"<bpt id=\"p1\">[</bpt>How to: Declare Custom Events To Avoid Blocking<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept>","source":"[How to: Declare Custom Events To Avoid Blocking](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)"},{"pos":[1437,1601],"content":"<bpt id=\"p1\">[</bpt>How to: Declare Custom Events To Conserve Memory<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept>","source":"[How to: Declare Custom Events To Conserve Memory](../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)"}]}