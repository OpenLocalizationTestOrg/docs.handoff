<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7581ec18db0d2741452b47ad6200482b63c102be</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\compiler-options\target-winmdobj-compiler-option.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c8da11ce934f80363b87c1165bbe980b398a624</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">034f6ecd08ca47ed7e68e79825a8c64746bbec74</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-target:winmdobj (C# Compiler Options) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/target:winmdobj (C# Compiler Options)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>/target:winmdobj<ept id="p1">**</ept> compiler option, the compiler creates an intermediate .winmdobj file that you can convert to a Windows Runtime binary (.winmd) file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The .winmd file can then be consumed by JavaScript and C++ programs, in addition to managed language programs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>winmdobj<ept id="p1">**</ept> setting signals to the compiler that an intermediate module is required.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In response, Visual Studio compiles the C# class library as a .winmdobj file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The .winmdobj file can then be fed through the <ph id="ph1">&lt;xref:Microsoft.Build.Tasks.WinMDExp&gt;</ph> export tool to produce a Windows metadata (.winmd) file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The .winmd file contains both the code from the original library and the WinMD metadata that is used by JavaScript or C++ and by the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The output of a file that’s compiled by using the <bpt id="p1">**</bpt>/target:winmdobj<ept id="p1">**</ept> compiler option is designed to be used only as input for the WimMDExp export tool; the .winmdobj file itself isn’t referenced directly.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Unless you use the <bpt id="p1">[</bpt>/out<ept id="p1">](../../../csharp/language-reference/compiler-options/out-compiler-option.md)</ept> option, the output file name takes the name of the first input file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>Main<ept id="p1">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept> method isn’t required.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you specify the /target:winmdobj option at a command prompt, all files until the next <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> or <bpt id="p2">[</bpt>/target:module<ept id="p2">](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md)</ept> option are used to create the Windows program.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio IDE for a Windows Store app</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for your project, and then choose <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Output type<ept id="p1">**</ept> list, choose <bpt id="p2">**</bpt>WinMD File<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>WinMD File<ept id="p1">**</ept> option is available only for <ph id="ph1">[!INCLUDE[win8_appname_long](../../../csharp/includes/win8_appname_long_md.md)]</ph> app templates.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For information about how to set this compiler option programmatically, see <ph id="ph1">&lt;xref:VSLangProj80.ProjectProperties3.OutputType%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command compiles <ph id="ph1">`filename.cs`</ph> into an intermediate .winmdobj file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>/target (C# Compiler Options)<ept id="p1">](../../../csharp/language-reference/compiler-options/target-compiler-option.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Compiler Options<ept id="p1">](../../../csharp/language-reference/compiler-options/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>