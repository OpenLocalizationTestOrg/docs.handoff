<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e36db410781765c6861f60942782bbd6259d5de8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\concepts\linq\tutorial-manipulating-content-in-a-wordprocessingml-document.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e5248bd19c4121449c69a250a69b3ef7286c70b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53b99a1c654a5b2591745500e03f7a9211dee3cd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Tutorial: Manipulating Content in a WordprocessingML Document (C#) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Tutorial: Manipulating Content in a WordprocessingML Document (C#)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to apply the functional transformational approach and LINQ to XML to manipulate XML documents.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The C# examples query and manipulate information in Office Open XML WordprocessingML documents that are saved by Microsoft Word.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>OpenXML Developer<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=95573)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Topic</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shape of WordprocessingML Documents (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Provides a quick explanation of details of a WordprocessingML document.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating the Source Office Open XML Document (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides step-by-step instructions to create the source document for queries in this tutorial.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Finding the Default Paragraph Style (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Shows a query to find the name of the default style for a document.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Retrieving the Paragraphs and Their Styles (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Shows a query that retrieves a collection of the paragraphs of a document.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Retrieving the Text of the Paragraphs (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Augments the previous query to retrieve the text of each paragraph.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Refactoring Using an Extension Method (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Simplifies the code by refactoring using an extension method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Refactoring Using a Pure Function (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Further simplifies the code by refactoring using a pure function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Projecting XML in a Different Shape (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Completes an XML transformation by projecting XML in a different shape than the original document.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Finding Text in Word Documents (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Uses the previous queries to find a specified text string in a document.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Details of Office Open XML WordprocessingML Documents (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Provides some details of Office Open XML WordprocessingML documents.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Pure Functional Transformations of XML (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to Pure Functional Transformations (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>