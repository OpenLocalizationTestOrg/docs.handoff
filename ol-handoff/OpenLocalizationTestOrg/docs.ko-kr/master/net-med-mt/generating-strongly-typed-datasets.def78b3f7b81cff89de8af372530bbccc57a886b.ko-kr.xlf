<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">550d23e1f37e37d5b5cb1cb3061ab8f826cf1897</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\generating-strongly-typed-datasets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84afa30584a096e445d372260eb599c843058fe5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66c6bf7a60ab49cbb381d5d1e095080681237eef</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generating Strongly Typed DataSets | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generating Strongly Typed DataSets</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Given an XML Schema that complies with the XML Schema definition language (XSD) standard, you can generate a strongly typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> using the XSD.exe tool provided with the <ph id="ph2">[!INCLUDE[winsdklong](../../../../../includes/winsdklong-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>(To create an xsd from database tables, see <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> or <bpt id="p1">[</bpt>Working with Datasets in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/8bw9ksd6.aspx)</ept>).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following code shows the syntax for generating a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> using this tool.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this syntax, the <ph id="ph1">`/d`</ph> directive tells the tool to generate a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, and the <ph id="ph2">`/l:`</ph> tells the tool what language to use (for example, C# or Visual Basic .NET).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The optional <ph id="ph1">`/eld`</ph> directive specifies that you can use <ph id="ph2">[!INCLUDE[linq_dataset](../../../../../includes/linq-dataset-md.md)]</ph> to query against the generated <bpt id="p1">**</bpt>DataSet.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This option is used when the <ph id="ph1">`/d`</ph> option is also specified.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Querying Typed DataSets<ept id="p1">](../../../../../docs/framework/data/adonet/querying-typed-datasets.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The optional <ph id="ph1">`/n:`</ph> directive tells the tool to also generate a namespace for the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> called <bpt id="p2">**</bpt>XSDSchema.Namespace<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The output of the command is XSDSchemaFileName.cs, which can be compiled and used in an ADO.NET application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The generated code can be compiled as a library or a module.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following code shows the syntax for compiling the generated code as a library using the C# compiler (csc.exe).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`/t:`</ph> directive tells the tool to compile to a library, and the <ph id="ph2">`/r:`</ph> directives specify dependent libraries required to compile.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The output of the command is XSDSchemaFileName.dll, which can be passed to the compiler when compiling an ADO.NET application with the <ph id="ph1">`/r:`</ph> directive.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code shows the syntax for accessing the namespace passed to XSD.exe in an ADO.NET application.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code example uses a typed <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> named <bpt id="p2">**</bpt>CustomerDataSet<ept id="p2">**</ept> to load a list of customers from the <bpt id="p3">**</bpt>Northwind<ept id="p3">**</ept> database.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Once the data is loaded using the <bpt id="p1">**</bpt>Fill<ept id="p1">**</ept> method, the example loops through each customer in the <bpt id="p2">**</bpt>Customers<ept id="p2">**</ept> table using the typed <bpt id="p3">**</bpt>CustomersRow<ept id="p3">**</ept> (<bpt id="p4">**</bpt>DataRow<ept id="p4">**</ept>) object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This provides direct access to the <bpt id="p1">**</bpt>CustomerID<ept id="p1">**</ept> column, as opposed to through the <bpt id="p2">**</bpt>DataColumnCollection<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Following is the XML Schema used for the example.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Typed DataSets<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/typed-datasets.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>