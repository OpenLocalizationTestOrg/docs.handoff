<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1d98a579e2866d2f4ed07d919dc90eadc95a569</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\security\impersonating-and-reverting.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed0c183397f297bdea33faef49e16718fc8fff74</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf54ba46ee0d08fa122e001abd38879722b45b10</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Impersonating and Reverting | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Impersonating and Reverting</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes you might need to obtain a Windows account token to impersonate a Windows account.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, your ASP.NET-based application might have to act on behalf of several users at different times.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Your application might accept a token that represents an administrator from Internet Information Services (IIS), impersonate that user, perform an operation, and revert to the previous identity.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Next, it might accept a token from IIS that represents a user with fewer rights, perform some operation, and revert again.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In situations where your application must impersonate a Windows account that has not been attached to the current thread by IIS, you must retrieve that account's token and use it to activate the account.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can do this by performing the following tasks:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Retrieve an account token for a particular user by making a call to the unmanaged <bpt id="p1">**</bpt>LogonUser<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This method is not in the .NET Framework base class library, but is located in the unmanaged <bpt id="p1">**</bpt>advapi32.dll<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Accessing methods in unmanaged code is an advanced operation and is beyond the scope of this discussion.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Interoperating with Unmanaged Code<ept id="p1">](../../../docs/framework/interop/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>LogonUser<ept id="p1">**</ept> method and <bpt id="p2">**</bpt>advapi32.dll<ept id="p2">**</ept>, see the Platform SDK documentation.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a new instance of the <bpt id="p1">**</bpt>WindowsIdentity<ept id="p1">**</ept> class, passing the token.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following code demonstrates this call, where <ph id="ph1">`hToken`</ph> represents a Windows token.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Begin impersonation by creating a new instance of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> class and initializing it with the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.Impersonate%2A?displayProperty=fullName&gt;</ph> method of the initialized class, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When you no longer need to impersonate, call the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Undo%2A?displayProperty=fullName&gt;</ph> method to revert the impersonation, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If trusted code has already attached a <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object to the thread, you can call the instance method <bpt id="p1">**</bpt>Impersonate<ept id="p1">**</ept>, which does not take an account token.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Note that this is only useful when the <bpt id="p1">**</bpt>WindowsPrincipal<ept id="p1">**</ept> object on the thread represents a user other than the one under which the process is currently executing.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, you might encounter this situation using ASP.NET with Windows authentication turned on and impersonation turned off.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this case, the process is running under an account configured in Internet Information Services (IIS) while the current principal represents the Windows user that is accessing the page.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Note that neither <bpt id="p1">**</bpt>Impersonate<ept id="p1">**</ept> nor <bpt id="p2">**</bpt>Undo<ept id="p2">**</ept> changes the <bpt id="p3">**</bpt>Principal<ept id="p3">**</ept> object (<ph id="ph1">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph>)  associated with the current call context.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rather, impersonation and reverting change the token associated with the current operating system process..</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Principal and Identity Objects<ept id="p1">](../../../docs/standard/security/principal-and-identity-objects.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Interoperating with Unmanaged Code<ept id="p1">](../../../docs/framework/interop/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>