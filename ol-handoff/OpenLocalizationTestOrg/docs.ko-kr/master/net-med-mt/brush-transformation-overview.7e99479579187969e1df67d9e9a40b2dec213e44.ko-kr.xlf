<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="brush-transformation-overview.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1cdd767ffbe5bdc00a976e579c25bbc233704958</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\brush-transformation-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6f6dbae3baee77ae0b05f1badf69fa753071aa7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36ccff2cccd05542310e116e402d9670dc050bb2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Brush Transformation Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Brush Transformation Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Brush class provides two transformation properties: <ph id="ph1">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The properties enable you to rotate, scale, skew, and translate a brush's contents.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes the differences between these two properties and provides examples of their usage.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To understand this topic, you should understand the features of the brush that you are transforming.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Media.LinearGradientBrush&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.RadialGradientBrush&gt;</ph>, see the <bpt id="p1">[</bpt>Painting with Solid Colors and Gradients Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>, see  <bpt id="p1">[</bpt>Painting with Images, Drawings, and Visuals<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-images-drawings-and-visuals.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You should also be familiar with the 2D transforms described in the  <bpt id="p1">[</bpt>Transforms Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/transforms-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Differences between the Transform and RelativeTransform Properties</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you apply a transform to a brush's <ph id="ph1">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> property, you need to know the size of the painted area if you want to transform the brush contents about its center.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Suppose the painted area is 200 device independent pixels wide and 150 tall.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you used a <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to rotate the brush's output 45 degrees about its center, you'd give the <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> a <ph id="ph3">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> of 100 and a <ph id="ph4">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> of 75.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you apply a transform to a brush's <ph id="ph1">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property, that transform is applied to the brush before its output is mapped to the painted area.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following list describes the order in which a brush’s contents are processed and transformed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Process the brush’s contents.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a <ph id="ph1">&lt;xref:System.Windows.Media.GradientBrush&gt;</ph>, this means determining the gradient area.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For a <ph id="ph1">&lt;xref:System.Windows.Media.TileBrush&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Media.TileBrush.Viewbox%2A&gt;</ph> is mapped to the <ph id="ph3">&lt;xref:System.Windows.Media.TileBrush.Viewport%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This becomes the brush’s output.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Project the brush’s output onto the 1 x 1 transformation rectangle.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Apply the brush’s <ph id="ph1">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph>, if it has one.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Project the transformed output onto the area to paint.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Apply the brush’s <ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph>, if it has one.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> is applied while the brush’s output is mapped to a 1 x 1 rectangle, transform center and offset values appear to be relative.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, if you used a <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to rotate the brush's output 45 degrees about its center, you'd give the <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> a <ph id="ph3">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> of 0.5 and a <ph id="ph4">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> of 0.5.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following illustration shows the output of several brushes that have been rotated by 45 degrees using the <ph id="ph1">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>RelativeTransform and Transform properties<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-brushrelativetransform-transform-small.png "</bpt>graphicsmm_brushrelativetransform_transform_small<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Using RelativeTransform with a TileBrush</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Because tile brushes are more complex than other brushes, applying a <ph id="ph1">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> to one might produce unexpected results.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, take the following image.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>The source image<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-reltransform-1-original-image.jpg "</bpt>graphicsmm_reltransform_1_original_image<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph> to paint a rectangular area with the preceding image.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It applies a <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph> object's <ph id="ph3">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property, and sets its <ph id="ph4">&lt;xref:System.Windows.Media.TileBrush.Stretch%2A&gt;</ph> property to <ph id="ph5">&lt;xref:System.Windows.Media.Stretch&gt;</ph>, which should preserve the image's aspect ratio when it is stretched to completely fill the rectangle.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>The transformed output<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-reltransform-6-output.png "</bpt>graphicsmm_reltransform_6_output<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Notice that the image is distorted, even though the brush's <ph id="ph1">&lt;xref:System.Windows.Media.TileBrush.Stretch%2A&gt;</ph> was set to <ph id="ph2">&lt;xref:System.Windows.Media.Stretch&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>That's because the relative transform is applied after the brush's <ph id="ph1">&lt;xref:System.Windows.Media.TileBrush.Viewbox%2A&gt;</ph> is mapped to its <ph id="ph2">&lt;xref:System.Windows.Media.TileBrush.Viewport%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following list describes each step of the process:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Project the brush's contents (<ph id="ph1">&lt;xref:System.Windows.Media.TileBrush.Viewbox%2A&gt;</ph>) onto its base tile (<ph id="ph2">&lt;xref:System.Windows.Media.TileBrush.Viewport%2A&gt;</ph>) using the brush's <ph id="ph3">&lt;xref:System.Windows.Media.TileBrush.Stretch%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Stretch the Viewbox to fit the Viewport<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-reltransform-2-viewbox-to-viewport.png "</bpt>graphicsmm_reltransform_2_viewbox_to_viewport<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Project the base tile onto the 1 x 1 transformation rectangle.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Map the Viewport to the transformation rectangle<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-reltransform-3-output-to-transform.png "</bpt>graphicsmm_reltransform_3_output_to_transform<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Apply the <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Apply the relative transform<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-reltransform-4-transform-rotate.png "</bpt>graphicsmm_reltransform_4_transform_rotate<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Project the transformed base tile onto the area to paint.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Project the transformed brush onto the output area<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-reltransform-5-transform-to-output.png "</bpt>graphicsmm_reltransform_5_transform_to_output<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example: Rotate an ImageBrush 45 Degrees</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following example applies a <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> object's <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> properties are both set to 0.5, the relative coordinates of the content's center point.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As a result, the brush's contents are rotated about its center.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The next example also applies a <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to an <ph id="ph2">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph>, but uses the <ph id="ph3">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> property instead of the <ph id="ph4">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To rotate the brush about its center, the <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> object's <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> must be set to absolute coordinates.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because the rectangle being painted by the brush is 175 by 90 pixels, its center point is (87.5, 45).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following illustration shows the brush without a transform, with the transform applied to the <ph id="ph1">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property, and with the transform applied to the <ph id="ph2">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Brush RelativeTransform and Transform settings<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/wcpsdk-graphicsmm-transformandrelativetransform.png "</bpt>wcpsdk_graphicsmm_transformandrelativetransform<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This example is part of a larger sample.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For the complete sample, see the <bpt id="p1">[</bpt>Brushes Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159973)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more information about brushes, see the  <bpt id="p1">[</bpt>WPF Brushes Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/wpf-brushes-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Painting with Solid Colors and Gradients Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Painting with Images, Drawings, and Visuals<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-images-drawings-and-visuals.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Transforms Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/transforms-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>