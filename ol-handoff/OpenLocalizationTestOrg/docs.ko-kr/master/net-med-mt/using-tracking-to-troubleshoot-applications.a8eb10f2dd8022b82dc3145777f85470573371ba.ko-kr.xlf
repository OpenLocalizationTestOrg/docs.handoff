<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="using-tracking-to-troubleshoot-applications.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9248bc3453759c8bab51cb0b9916bedcbdffe87</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\using-tracking-to-troubleshoot-applications.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38114dca0f6e025daa5283c0295a54c3bc0721f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f47df1d90ef9c855c537bb2e6b44a141a703923</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Using Tracking to Troubleshoot Applications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Tracking to Troubleshoot Applications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[wf](../../../includes/wf-md.md)]</ph> enables you to track workflow-related information to give details into the execution of a <ph id="ph2">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph> application or service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph> hosts are able to capture workflow events during the execution of a workflow instance.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If your workflow generates faults or exceptions, you can use the <ph id="ph1">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph> tracking details to troubleshooting its processing.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Troubleshooting a WF using WF Tracking</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To detect faults within the processing of a <ph id="ph1">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph> activity, you can enable tracking with a tracking profile that queries for an <ph id="ph2">&lt;xref:System.Activities.Tracking.ActivityStateRecord&gt;</ph> with the state of Faulted.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The corresponding query is specified in the following code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If a fault is propagated and handled within a fault handler (such as a <ph id="ph1">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity) this can be detected using a <ph id="ph2">&lt;xref:System.Activities.Tracking.FaultPropagationRecord&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Tracking.FaultPropagationRecord&gt;</ph> indicates the source activity of the fault and the name of the fault handler.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Tracking.FaultPropagationRecord&gt;</ph> contains fault details in form of the exception stack for the fault.The query to subscribe for a <ph id="ph2">&lt;xref:System.Activities.Tracking.FaultPropagationRecord&gt;</ph> is shown in the following example.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If a fault is not handled within the workflow it results in an unhandled exception at the workflow instance and the workflow instance is aborted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To understand the details of the unhandled exception, the tracking profile must query the workflow instance record with <ph id="ph1">`state name="UnhandledException"`</ph> as specified in the following example.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When a workflow instance encounters an unhandled exception, a <ph id="ph1">&lt;xref:System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord&gt;</ph> object is emitted if <ph id="ph2">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph> tracking has been enabled.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This tracking record contains the fault details in the form of the exception stack.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It has details of the source of the fault (for example, the activity) that faulted and resulted in the unhandled exception.To subscribe to fault events from a <ph id="ph1">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph>, enable tracking by adding a tracking participant.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Configure this participant with a tracking profile that queries for <ph id="ph1">`ActivityStateQuery (state="Faulted")`</ph>, <ph id="ph2">&lt;xref:System.Activities.Tracking.FaultPropagationRecord&gt;</ph>, and <ph id="ph3">`WorkflowInstanceQuery (state="UnhandledException")`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If tracking is enabled using the ETW tracking participant, the fault events are emitted to an ETW session.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The events can be viewed using the Event Viewer event viewer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This can be found under the node <bpt id="p1">**</bpt>Event Viewer-&gt;Applications and Services Logs-&gt;Microsoft-&gt;Windows-&gt;Application Server-Applications<ept id="p1">**</ept> in the analytic channel.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Server App Fabric Monitoring<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201273)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Monitoring Applications with App Fabric<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201275)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>