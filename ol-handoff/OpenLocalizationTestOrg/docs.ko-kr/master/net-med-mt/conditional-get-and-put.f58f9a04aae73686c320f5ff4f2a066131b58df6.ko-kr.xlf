<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">935079cb24c31aec532a72a16a8ca73005dc647c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\conditional-get-and-put.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3efdf854a0b27b507cf7d549dc7ec05ef3cdae96</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d646c70f65397f3d4b91c1f90508b225f0fa4f66</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Conditional Get and Put | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Conditional Get and Put</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to use the new conditional retrieve and update APIs for the WCF REST programming model.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because conditional retrieve and update are most appropriate for resource-oriented and REST services, this sample extends the <bpt id="p1">[</bpt>Basic Resource Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-resource-service.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This sample focuses on adding support for conditional retrieve and update to the <bpt id="p1">[</bpt>Basic Resource Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-resource-service.md)</ept> sample using the new APIs introduced in <ph id="ph1">[!INCLUDE[netfx40_long](../../../../includes/netfx40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Demonstrates</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Conditional Retrieve and Update</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Discussion</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The WCF service in this sample exposes a collection of customers in a resource-oriented and REST manner.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a detailed description of the service implementation, please see the <bpt id="p1">[</bpt>Basic Resource Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-resource-service.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This sample adds conditional retrieve and update capabilities to the <bpt id="p1">[</bpt>Basic Resource Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-resource-service.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Conditional retrieve and update use HTTP entity tags and the HTTP If-None-Match and If-Match headers to validate that clients either have or do not have the most current entity for a given resource.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, implementing the code to correctly parse the HTTP If-None-Match and If-Match headers can be tedious and error-prone.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> methods have been added to the <ph id="ph3">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext&gt;</ph>, which can be accessed using the current instance of the <ph id="ph4">&lt;xref:System.ServiceModel.Web.WebOperationContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">`SetETag`</ph> method has been added to the <ph id="ph2">&lt;xref:System.ServiceModel.Web.OutgoingWebRequestContext&gt;</ph>, making it easier to return valid entity tags.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> method is intended to be used with [WebGet] operations.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It takes the current entity tag for the given resource as the <ph id="ph1">`entityTag`</ph> parameter, which can be a <ph id="ph2">`string`</ph>, <ph id="ph3">`int`</ph>, <ph id="ph4">`long`</ph> or <ph id="ph5">`Guid`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> method checks the entity tag against the HTTP If-None-Match header of the request.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the entity tag is present in the HTTP If-None-Match header, then a <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebFaultException&gt;</ph> with a status code of Not Modified (304) is thrown; otherwise the method returns.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The conditional retrieve mechanism allows the client to tell the server that it has this entity and to only send the current entity if the client does not already have it.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example usage of the <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> method can be seen in the <ph id="ph2">`GetCustomer`</ph> and <ph id="ph3">`GetCustomers`</ph> operations of the service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is important to note that calls to <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> may not return.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Developers should implement the operation so that the request is already known to be successful before the call to <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> is executed, such that if the call to <ph id="ph2">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> was not present, the service would send a response with a successful status code.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It also takes the current entity tag for the given resource.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, it is intended to be used with [WebInvoke] operations in which the method is set to "PUT" or "DELETE".</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> method checks the entity tag against the HTTP If-Match header of the request.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the entity tag is not present in the HTTP If-Match header, then a <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebFaultException&gt;</ph> with a status code of Precondition Failed (412) is thrown.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The conditional update mechanism allows the client to tell the server that it has this entity for the resource and to only allow the client to alter the resource; if the entity it has is current.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example usage of the <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> method can be seen in the <ph id="ph2">`UpdateCustomer`</ph> and <ph id="ph3">`DeleteCustomer`</ph> operations of the service.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Just as with <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalRetrieve%2A&gt;</ph>, it is important to note that calls to <ph id="ph2">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> may not return.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Developers should implement the operation such that the request is already known to be successful before the call to <ph id="ph1">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> is executed, such that if the call to <ph id="ph2">&lt;xref:System.ServiceModel.Web.IncomingWebRequestContext.CheckConditionalUpdate%2A&gt;</ph> was not present, the service would respond with a successful status code.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The sample consists of a self-hosted service and a client that runs within a console application.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As the console application runs, the client makes requests to the service and writes the pertinent information from the responses to the console window.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To run the sample</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Open the solution for the Conditional Get and Put sample.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When launching <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph>, you must run as an administrator to execute the sample successfully.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Do this by right-clicking the <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> icon and choosing <bpt id="p1">**</bpt>Run as Administrator<ept id="p1">**</ept> from the context menu.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Press CTRL+SHIFT+B to build the solution and then press CTRL+F5 to run the console application project.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If running this project with debugging enabled (by pressing F5 instead of CTRL+F5), the debugger stops when an exception is thrown by the conditional GET and PUT checking.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When this happens, press F5 to continue executing the sample.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The console window appear sand provides the URI of the running service and the URI of the HTML help page for the running service.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>As the sample runs, the client sends requests to the service and writes the responses to the console window.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Press any key to terminate the sample.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>