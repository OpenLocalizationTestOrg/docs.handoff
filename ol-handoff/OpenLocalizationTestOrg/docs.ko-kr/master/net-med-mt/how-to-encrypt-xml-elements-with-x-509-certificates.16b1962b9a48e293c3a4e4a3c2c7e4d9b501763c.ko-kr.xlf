<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-encrypt-xml-elements-with-x-509-certificates.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c645a716b3ddc4bf6d8bfef30b653a36e1574d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\security\how-to-encrypt-xml-elements-with-x-509-certificates.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">144f9cdb7d8a6afcae5b81ce2d3f1cdfecebaade</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ab42873332a40e6ee31d367e83eda9849b19218</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Encrypt XML Elements with X.509 Certificates | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Encrypt XML Elements with X.509 Certificates</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use the classes in the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml&gt;</ph> namespace to encrypt an element within an XML document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XML Encryption is a standard way to exchange or store encrypted XML data, without worrying about the data being easily read.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about the XML Encryption standard, see the World Wide Web Consortium (W3C) specification for XML Encryption located at http://www.w3.org/TR/xmldsig-core/.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use XML Encryption to replace any XML element or document with an &lt;<ph id="ph1">`EncryptedData`</ph>&gt; element that contains the encrypted XML data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;<ph id="ph1">`EncryptedData`</ph>&gt; element can contain sub elements that include information about the keys and processes used during encryption.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XML Encryption allows a document to contain multiple encrypted elements and allows an element to be encrypted multiple times.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The code example in this procedure shows you how to create an &lt;<ph id="ph1">`EncryptedData`</ph>&gt; element along with several other sub elements that you can use later during decryption.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example encrypts an XML element using two keys.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It generates a test X.509 certificate using the <bpt id="p1">[</bpt>Certificate Creation Tool (Makecert.exe)<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa386968.aspx)</ept> and saves the certificate to a certificate store.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The example then programmatically retrieves the certificate and uses it to encrypt an XML element using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Internally, the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A&gt;</ph> method creates a separate session key and uses it to encrypt the XML document.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method encrypts the session key and saves it along with the encrypted XML within a new &lt;<ph id="ph1">`EncryptedData`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To decrypt the XML element, simply call the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A&gt;</ph> method, which automatically retrieves the X.509 certificate from the store and performs the necessary decryption.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about how to decrypt an XML element that was encrypted using this procedure, see <bpt id="p1">[</bpt>How to: Decrypt XML Elements with X.509 Certificates<ept id="p1">](../../../docs/standard/security/how-to-decrypt-xml-elements-with-x-509-certificates.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This example is appropriate for situations where multiple applications need to share encrypted data or where an application needs to save encrypted data between the times that it runs.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To encrypt an XML element with an X.509 certificate</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>Certificate Creation Tool (Makecert.exe)<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa386968.aspx)</ept> to generate a test X.509 certificate and place it in the local user store.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You must generate an exchange key and you must make the key exportable.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Run the following command:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create an <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Store&gt;</ph> object and initialize it to open the current user store.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Open the store in read-only mode.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initialize an <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&gt;</ph> with all of the certificates in the store.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enumerate through the certificates in the store and find the certificate with the appropriate name.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this example, the certificate is named <ph id="ph1">`"CN=XML_ENC_TEST_CERT"`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Close the store after the certificate is located.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object by loading an XML file from disk.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object contains the XML element to encrypt.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Find the specified element in the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object and create a new <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> object to represent the element you want to encrypt.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`"creditcard"`</ph> element is encrypted.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Create a new instance of the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt;</ph> class and use it to encrypt the specified element using the X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A&gt;</ph> method returns the encrypted element as an <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Replace the element from the original <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object with the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Save the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This example assumes that a file named <ph id="ph1">`"test.xml"`</ph> exists in the same directory as the compiled program.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It also assumes that <ph id="ph1">`"test.xml"`</ph> contains a <ph id="ph2">`"creditcard"`</ph> element.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can place the following XML into a file called <ph id="ph1">`test.xml`</ph> and use it with this example.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To compile this example, you need to include a reference to <ph id="ph1">`System.Security.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Include the following namespaces: <ph id="ph1">&lt;xref:System.Xml&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The X.509 certificate used in this example is for test purposes only.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Applications should use an X.509 certificate generated by a trusted certificate authority or use a certificate generated by the Microsoft Windows Certificate Server.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml&gt;</ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Decrypt XML Elements with X.509 Certificates<ept id="p1">](../../../docs/standard/security/how-to-decrypt-xml-elements-with-x-509-certificates.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>