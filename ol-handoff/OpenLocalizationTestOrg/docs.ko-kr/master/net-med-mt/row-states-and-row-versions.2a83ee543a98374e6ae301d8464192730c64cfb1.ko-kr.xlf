<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f7483d9cf4663be81bc533d6075dd02e2ccca83</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\row-states-and-row-versions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58f1cdb2aa93f34d1821014af294bdca0f750ba8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbb560f662f7993bcffc2aa3521d5ba3f50365a0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Row States and Row Versions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Row States and Row Versions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ADO.NET manages rows in tables using row states and versions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A row state indicates the status of a row; row versions maintain the values stored in a row as it is modified, including current, original, and default values.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, after you have made a modification to a column in a row, the row will have a row state of <ph id="ph1">`Modified`</ph>, and two row versions: <ph id="ph2">`Current`</ph>, which contains the current row values, and <ph id="ph3">`Original`</ph>, which contains the row values before the column was modified.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> object has a <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property that you can examine to determine the current state of the row.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following table gives a brief description of each <ph id="ph1">`RowState`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>RowState value</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>No changes have been made since the last call to <ph id="ph1">`AcceptChanges`</ph> or since the row was created by <ph id="ph2">`DataAdapter.Fill`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The row has been added to the table, but <ph id="ph1">`AcceptChanges`</ph> has not been called.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Some element of the row has been changed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The row has been deleted from a table, and <ph id="ph1">`AcceptChanges`</ph> has not been called.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The row is not part of any <ph id="ph1">`DataRowCollection`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RowState`</ph> of a newly created row is set to <ph id="ph2">`Detached`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>After the new <ph id="ph1">`DataRow`</ph> is added to the <ph id="ph2">`DataRowCollection`</ph> by calling the <ph id="ph3">`Add`</ph> method, the value of the <ph id="ph4">`RowState`</ph> property is set to <ph id="ph5">`Added`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Detached`</ph> is also set for a row that has been removed from a <ph id="ph2">`DataRowCollection`</ph> using the <ph id="ph3">`Remove`</ph> method, or by the <ph id="ph4">`Delete`</ph> method followed by the <ph id="ph5">`AcceptChanges`</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`AcceptChanges`</ph> is called on a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> , or <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph>, all rows with a row state of <ph id="ph5">`Deleted`</ph> are removed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The remaining rows are given a row state of <ph id="ph1">`Unchanged`</ph>, and the values in the <ph id="ph2">`Original`</ph> row version are overwritten with the <ph id="ph3">`Current`</ph> row version values.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`RejectChanges`</ph> is called, all rows with a row state of <ph id="ph2">`Added`</ph> are removed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The remaining rows are given a row state of <ph id="ph1">`Unchanged`</ph>, and the values in the <ph id="ph2">`Current`</ph> row version are overwritten with the <ph id="ph3">`Original`</ph> row version values.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can view the different row versions of a row by passing a <ph id="ph1">&lt;xref:System.Data.DataRowVersion&gt;</ph> parameter with the column reference, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following table gives a brief description of each <ph id="ph1">`DataRowVersion`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>DataRowVersion value</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The current values for the row.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This row version does not exist for rows with a <ph id="ph1">`RowState`</ph> of <ph id="ph2">`Deleted`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default row version for a particular row.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default row version for an <ph id="ph1">`Added`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Unchanged`</ph> row is <ph id="ph4">`Current`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default row version for a <ph id="ph1">`Deleted`</ph> row is <ph id="ph2">`Original`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default row version for a <ph id="ph1">`Detached`</ph> row is <ph id="ph2">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The original values for the row.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This row version does not exist for rows with a <ph id="ph1">`RowState`</ph> of <ph id="ph2">`Added`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The proposed values for the row.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This row version exists during an edit operation on a row, or for a row that is not part of a <ph id="ph1">`DataRowCollection`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can test whether a <ph id="ph1">`DataRow`</ph> has a particular row version by calling the <ph id="ph2">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> method and passing a <ph id="ph3">`DataRowVersion`</ph> as an argument.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`DataRow.HasVersion(DataRowVersion.Original)`</ph> will return <ph id="ph2">`false`</ph> for newly added rows before <ph id="ph3">`AcceptChanges`</ph> has been called.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following code example displays the values in all the deleted rows of a table.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Deleted`</ph> rows do not have a <ph id="ph2">`Current`</ph> row version, so you must pass <ph id="ph3">`DataRowVersion.Original`</ph> when accessing the column values.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulating Data in a DataTable<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/manipulating-data-in-a-datatable.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataAdapters and DataReaders<ept id="p1">](../../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>