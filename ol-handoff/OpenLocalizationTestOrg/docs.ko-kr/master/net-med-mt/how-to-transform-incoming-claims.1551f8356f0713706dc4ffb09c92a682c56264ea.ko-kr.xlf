<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-transform-incoming-claims.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-229404f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2350dbc1cd53276f2ceb9b45e0e40c869ab4ed81</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\security\how-to-transform-incoming-claims.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">972341165d109704df8cbde86f7d932239fcab13</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">850e095a9ecae51ebc00310c2402a1530ddbd0ea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How To: Transform Incoming Claims | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How To: Transform Incoming Claims</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Microsoft® Windows® Identity Foundation (WIF)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>ASP.NET® Web Forms</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This How-To provides detailed step-by-step procedures for creating a simple claims-aware ASP.NET Web Forms application and transforming incoming claims.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It also provides instructions for how to test the application to verify that transformed claims are presented when the application is run.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Contents</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Objectives</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Summary of Steps</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Step 1 – Create a Simple ASP.NET Web Forms Application</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Step 2 – Implement Claims Transformation Using a Custom ClaimsAuthenticationManager</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Step 3 – Test Your Solution</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Objectives</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Configure an ASP.NET Web Forms application for claims-based authentication</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Transform incoming claims by adding an Administrator role claim</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Test the ASP.NET Web Forms application to see if it is working properly</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WIF exposes a class named <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> that enables users to modify claims before they are presented to a relying party (RP) application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> is useful for separation of concerns between authentication and the underlying application code.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to add a role to the claims in the incoming <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that may be required by the RP.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Summary of Steps</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Step 1 – Create a Simple ASP.NET Web Forms Application</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Step 2 – Implement Claims Transformation Using a Custom ClaimsAuthenticationManager</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Step 3 – Test Your Solution</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Step 1 – Create a Simple ASP.NET Web Forms Application</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this step, you will create a new ASP.NET Web Forms application.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create a simple ASP.NET application</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Start Visual Studio in elevated mode as administrator.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In Visual Studio, click <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>ASP.NET Web Forms Application<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, enter <ph id="ph1">`TestApp`</ph> and press <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>TestApp<ept id="p1">**</ept> project under <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept>, then select <bpt id="p3">**</bpt>Identity and Access<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Identity and Access<ept id="p1">**</ept> window appears.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Providers<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Test your application with the Local Development STS<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Apply<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Default.aspx<ept id="p1">*</ept> file, replace the existing markup with the following, then save the file:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Open the code-behind file named <bpt id="p1">*</bpt>Default.aspx.cs<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Replace the existing code with the following, then save the file:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Step 2 – Implement Claims Transformation Using a Custom ClaimsAuthenticationManager</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In this step you will override default functionality in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> class to add an Administrator role to the incoming Principal.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To implement claims transformation using a custom ClaimsAuthenticationManager</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the on the solution, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Class Library<ept id="p2">**</ept> from the <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept> templates list, enter <ph id="ph1">`ClaimsTransformation`</ph>, and then press <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The new project will be created in your solution folder.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Right-click on <bpt id="p1">**</bpt>References<ept id="p1">**</ept> under the <bpt id="p2">**</bpt>ClaimsTransformation<ept id="p2">**</ept> project, and then click <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>System.IdentityModel<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>Class1.cs<ept id="p1">**</ept>, or if it doesn’t exist, right-click <bpt id="p2">**</bpt>ClaimsTransformation<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>, then click <bpt id="p4">**</bpt>Class…<ept id="p4">**</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add the following using directives to the code file:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add the following class and method in the code file.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following code is for demonstration purposes only; make sure that you verify your intended permissions in production code.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Save the file and build the <bpt id="p1">**</bpt>ClaimsTransformation<ept id="p1">**</ept> project.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In your <bpt id="p1">**</bpt>TestApp<ept id="p1">**</ept> ASP.NET project, right-click on References, and then click <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Solution<ept id="p2">**</ept> from the left menu, select <bpt id="p3">**</bpt>ClaimsTransformation<ept id="p3">**</ept> from the populated options, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the root <bpt id="p1">**</bpt>Web.config<ept id="p1">**</ept> file, navigate to the <bpt id="p2">**</bpt><ph id="ph1">\&lt;</ph>system.identityModel&gt;<ept id="p2">**</ept> entry.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Within the <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>identityConfiguration&gt;<ept id="p1">**</ept> elements, add the following line and save the file:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Step 3 – Test Your Solution</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In this step you will test your ASP.NET Web Forms application, and verify that claims are presented when a user signs in with Forms authentication.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To test your ASP.NET Web Forms application for claims using Forms authentication</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> to build and run the application.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You should be presented with <bpt id="p1">*</bpt>Default.aspx<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">*</bpt>Default.aspx<ept id="p1">*</ept> page, you should see a table beneath the <bpt id="p2">**</bpt>Your Claims<ept id="p2">**</ept> heading that includes the <bpt id="p3">**</bpt>Issuer<ept id="p3">**</ept>, <bpt id="p4">**</bpt>OriginalIssuer<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Type<ept id="p5">**</ept>, <bpt id="p6">**</bpt>Value<ept id="p6">**</ept>, and <bpt id="p7">**</bpt>ValueType<ept id="p7">**</ept> claims information about your account.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The last row should be presented in the following way:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>LOCAL AUTHORITY</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>LOCAL AUTHORITY</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Admin</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>