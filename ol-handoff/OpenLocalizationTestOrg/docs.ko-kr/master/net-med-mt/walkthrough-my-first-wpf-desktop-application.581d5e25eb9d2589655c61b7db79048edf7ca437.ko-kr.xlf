<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="walkthrough-my-first-wpf-desktop-application.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54e8b8473c3f34fefd92592ee655d625c51053fe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\getting-started\walkthrough-my-first-wpf-desktop-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9db8ccebef55a804395b16ac67d1bd745b24812</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9a40f482028b12a8d15179fe1897c50cbf8f070</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: My First WPF Desktop Application1 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: My First WPF Desktop Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="introduction"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> This walkthrough provides an introduction to the development of a              <ph id="ph1">[!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)]</ph> application that includes the elements that are common to most              <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> applications:              <ph id="ph3">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> markup, code-behind, application definitions, controls, layout, data binding, and styles.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This walkthrough guides you through the development of a simple              <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> application using the following steps.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Defining                      <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> to design the appearance of the application's                      <ph id="ph2">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Writing code to build the application's behavior.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating an application definition to manage the application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Adding controls and creating the layout to compose the application                      <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creating styles to create a consistent appearance throughout an application's                      <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Binding the                      <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> to data to both populate the                      <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> from data and keep the data and                      <ph id="ph3">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> synchronized.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By the end of the walkthrough, you will have built a standalone              <ph id="ph1">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph> application that allows users to view expense reports for selected people.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The application will be composed of several              <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> pages that are hosted in a browser-style window.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The sample code that is used to build this walkthrough is available for both              <ph id="ph1">[!INCLUDE[TLA#tla_visualb](../../../../includes/tlasharptla-visualb-md.md)]</ph> and              <ph id="ph2">[!INCLUDE[TLA#tla_cshrp](../../../../includes/tlasharptla-cshrp-md.md)]</ph> at              <bpt id="p1">[</bpt>Introduction to Building WPF Applications<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160008)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You need the following components to complete this walkthrough:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about installing                  <ph id="ph1">[!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)]</ph>, see                  <bpt id="p1">[</bpt>Installing Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/da049020-cfda-40d7-8ff4-7492772b620f)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating the Application Project</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In this section, you create the application infrastructure, which includes an application definition, two pages, and an image.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Create a new WPF Application project in Visual Basic or Visual C# named                          <ph id="ph1">`ExpenseIt`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see                          <bpt id="p1">[</bpt>How to: Create a New WPF Application Project<ept id="p1">](http://msdn.microsoft.com/en-us/1f6aea7a-33e1-4d3f-8555-1daa42e95d82)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This                              walkthrough uses the                              <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> control that is available in the .NET Framework 4.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Be sure that your project targets the .NET Framework 4.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see                              <bpt id="p1">[</bpt>How to: Target a Version of the .NET Framework<ept id="p1">](http://msdn.microsoft.com/library/dea62d25-3d1b-492e-a6cc-b5154489800a)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Open Application.xaml (Visual Basic) or App.xaml (C#).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> file defines a                          <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> application and any application resources.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You also use this file to specify the                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that automatically shows when the application starts; in this case, MainWindow.xaml.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Your                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> should look like this in Visual Basic:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Or like this in C#:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Open MainWindow.xaml.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> file is the main window of your application and displays content created in pages.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> class defines the properties of a window, such as its title, size, or icon, and handles events, such as closing or hiding.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Change the                          <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> element to a                          <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This application will navigate to different content depending on the user interaction.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Therefore, the main                          <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> needs to be changed to a                          <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> inherits all the properties of                          <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> element in the XAML file creates an instance of the                          <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see                          <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](../../../../docs/framework/wpf/app-development/navigation-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Change the following properties on the                          <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> element:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Set the                                  <ph id="ph1">&lt;xref:System.Windows.Window.Title%2A&gt;</ph> property to "ExpenseIt".</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Set the                                  <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> property to 500 pixels.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Set the                                  <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> property to 350 pixels.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remove the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements between the                                  <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> tags.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Your                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> should look like this in Visual Basic:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Or like this in C#:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Open MainWindow.xaml.vb or MainWindow.xaml.cs.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This file is a code-behind file that contains code to handle the events declared in MainWindow.xaml.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This file contains a partial class for the window defined in XAML.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you are using C#, change the                          <ph id="ph1">`MainWindow`</ph> class to derive from                          <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In Visual Basic, this happens automatically when you change the window in XAML.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Your code should look like this.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Adding Files to the Application</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In this section, you add two pages and an image to the application.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Add a new Page (WPF) to the project named                          <ph id="ph1">`ExpenseItHome.xaml`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see                          <bpt id="p1">[</bpt>How to: Add New Items to a WPF Project<ept id="p1">](http://msdn.microsoft.com/en-us/17e6b238-fc32-4385-98ef-2f66ca09d9ad)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This page is the first page that is displayed when the application is launched.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It will show a list of people from which a user can select a person to show an expense report for.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Set the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Page.Title%2A&gt;</ph> to "ExpenseIt - Home".</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Your                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> should look like this in Visual Basic:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Or this in C#:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Open MainWindow.xaml.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Set the                          <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow.Source%2A&gt;</ph> property on the                          <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> to "ExpenseItHome.xaml".</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This sets ExpenseItHome.xaml to be the first page opened when the application starts.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Your                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> should look like this in Visual Basic:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Or this in C#:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Add a new Page (WPF) to the project named                          <ph id="ph1">`ExpenseReportPage.xaml`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This page will show the expense report for the person that is selected on ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Open ExpenseReportPage.xaml.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Set the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Page.Title%2A&gt;</ph> to "ExpenseIt - View Expense".</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Your                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> should look like this in Visual Basic:</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Or this in C#:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.vb and ExpenseReportPage.xaml.vb, or ExpenseItHome.xaml.cs and ExpenseReportPage.xaml.cs.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When you create a new Page file, Visual Studio automatically creates a code behind file.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>These code-behind files handle the logic for responding to user input.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Your code should look like this.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Add an image named watermark.png to the project.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can either create your own image, or copy the file from the sample code.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information, see                          <bpt id="p1">[</bpt>NIB:How to: Add Existing Items to a Project<ept id="p1">](http://msdn.microsoft.com/en-us/15f4cfb7-78ab-457f-9f14-099a25a6a2d3)</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Building and Running the Application</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In this section, you build and run the application.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Build and run the application by pressing F5 or select                          <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> from the                          <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following illustration shows the application with the                          <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> buttons.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ExpenseIt sample screen shot<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/getting-started/media/gettingstartedfigure1.png "</bpt>GettingStartedFigure1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Close the application to return to                          <ph id="ph1">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creating the Layout</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Layout provides an ordered way to place                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements, and also manages the size and position of those elements when a                  <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> is resized.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You typically create a layout with one of the following layout controls:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Each of these layout controls supports a special type of layout for its child elements.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>ExpenseIt pages can be resized, and each page has elements that are arranged horizontally and vertically alongside other elements.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Consequently, the                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is the ideal layout element for the application.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about                      <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements, see                      <bpt id="p1">[</bpt>Panels Overview<ept id="p1">](../../../../docs/framework/wpf/controls/panels-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information about layout, see                      <bpt id="p1">[</bpt>Layout<ept id="p1">](../../../../docs/framework/wpf/advanced/layout.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the section, you create a single-column table with three rows and a 10-pixel margin by adding column and row definitions to the                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> in ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Set the                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> property on the                          <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element to "10,0,10,10" which corresponds to left, top, right and bottom margins.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Add the following                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> between the                          <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> tags to create the row and column definitions.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.Controls.RowDefinition.Height%2A&gt;</ph> of two rows is set to                          <ph id="ph2">&lt;xref:System.Windows.GridLength.Auto%2A&gt;</ph> which means that the rows will be sized base on the content in the rows.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The default                          <ph id="ph1">&lt;xref:System.Windows.Controls.RowDefinition.Height%2A&gt;</ph> is                          <ph id="ph2">&lt;xref:System.Windows.GridUnitType&gt;</ph> sizing, which means that the row will be a weighted proportion of the available space.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For example if two rows each have a height of "*", they will each have a height that is half of the available space.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Your                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> should now look like the following XAML:</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Adding Controls</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In this section, the home page                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> is updated to show a list of people that users can select from to show the expense report for a selected person.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Controls are UI objects that allow users to interact with your application.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information, see                  <bpt id="p1">[</bpt>Controls<ept id="p1">](../../../../docs/framework/wpf/controls/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To create this                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>, the following elements are added to ExpenseItHome.xaml:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> (for the list of people).</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> (for the list header).</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> (to click to view the expense report for the person that is selected in the list).</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Each control is placed in a row of the                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> by setting the                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid.Row%2A?displayProperty=fullName&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about attached properties, see                  <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Add the following                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> between the                          <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> tags.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following illustration shows the controls that are created by the XAML in this section.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ExpenseIt sample screen shot<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/getting-started/media/gettingstartedfigure2.png "</bpt>GettingStartedFigure2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Adding an Image and a Title</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In this section, the home page                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> is updated with an image and a page title.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Add another column to the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid.ColumnDefinitions%2A&gt;</ph> with a fixed                          <ph id="ph2">&lt;xref:System.Windows.Controls.ColumnDefinition.Width%2A&gt;</ph> of 230 pixels.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Add another row to the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid.RowDefinitions%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Move the controls to the second column by setting                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid.Column%2A?displayProperty=fullName&gt;</ph> to 1.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Move each control down a row, by increasing the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid.Row%2A?displayProperty=fullName&gt;</ph> by 1.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Set the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Panel.Background%2A&gt;</ph> of the                          <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to be the watermark.png image file.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Before the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Border&gt;</ph>, add a                          <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> with the content "View Expense Report" to be the title of the page.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The following illustration shows the results of this section.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ExpenseIt sample screen shot<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/getting-started/media/gettingstartedfigure3.png "</bpt>GettingStartedFigure3<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Adding Code to Handle Events</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Add a                          <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler to the                          <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For more information, see                          <bpt id="p1">[</bpt>How to: Create a Simple Event Handler<ept id="p1">](http://msdn.microsoft.com/en-us/b1456e07-9dec-4354-99cf-18666b64f480)</ept>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.vb or ExpenseItHome.xaml.cs.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Add the following code to the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler, which causes the window to navigate to the ExpenseReportPage.xaml file.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Creating the UI for ExpenseReportPage</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>ExpenseReportPage.xaml displays the expense report for the person that was selected on the ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This section adds controls and creates the                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> for ExpenseReportPage.xaml.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This section also adds background and fill colors to the various                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Open ExpenseReportPage.xaml.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Add the following XAML between the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> tags.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This UI is similar to the UI created on ExpenseItHome.xaml except the report data is displayed in a                          <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If you get an error that the                              <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> was not found or does not exist, make sure that your project targets the .NET Framework 4.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information, see                              <bpt id="p1">[</bpt>How to: Target a Version of the .NET Framework<ept id="p1">](http://msdn.microsoft.com/library/dea62d25-3d1b-492e-a6cc-b5154489800a)</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Click the                          <bpt id="p1">**</bpt>View<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The expense report page appears.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The following illustration shows the                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements added to ExpenseReportPage.xaml.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Notice that the back navigation button is enabled.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ExpenseIt sample screen shot<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/getting-started/media/gettingstartedfigure4.png "</bpt>GettingStartedFigure4<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Styling Controls</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The appearance of various elements can often be the same for all elements of the same type in a                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> uses styles to make appearances reusable across multiple elements.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The reusability of styles helps to simplify                  <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> creation and management.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For more information about styles, see                  <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This section replaces the per-element attributes that were defined in previous steps with styles.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Open Application.xaml or App.xaml.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Add the following XAML between the                          <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A?displayProperty=fullName&gt;</ph> tags:</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> adds the following styles:</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`headerTextStyle`</ph>: To format the page title                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`labelStyle`</ph>: To format the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`columnHeaderStyle`</ph>: To format the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.DataGridColumnHeader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`listHeaderStyle`</ph>: To format the list header                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`listHeaderTextStyle`</ph>: To format the list header                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`buttonStyle`</ph>: To format the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> on ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Notice that the styles are resources and children of the                          <ph id="ph1">&lt;xref:System.Windows.Application.Resources%2A?displayProperty=fullName&gt;</ph> property element.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In this location, the styles are applied to all the elements in an application.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For an example of using resources in a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfx](../../../../includes/tla2sharptla-winfx-md.md)]</ph> application, see                          <bpt id="p1">[</bpt>Use Application Resources<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-use-application-resources.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Replace everything between the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements with the following XAML.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The properties such as                          <ph id="ph1">&lt;xref:System.Windows.VerticalAlignment&gt;</ph> and                          <ph id="ph2">&lt;xref:System.Windows.Media.FontFamily&gt;</ph> that define the look of each control are removed and replaced by applying the styles.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, the                          <ph id="ph1">`headerTextStyle`</ph> is applied to the "View Expense Report"                          <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Open ExpenseReportPage.xaml.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Replace everything between the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements with the following XAML.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This adds styles to the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> and                          <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>After adding the                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> in this section, the application looks the same as it did before being updated with styles.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Binding Data to a Control</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In this section, you create the                  <ph id="ph1">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph> data that is bound to various controls.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>After                          the opening                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element, add the following XAML to create an                          <ph id="ph2">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> that contains the data for each person.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The data is created as a                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> resource.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Normally this would be loaded as a file, but for simplicity the data is added inline.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>In the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> resource, add the following                          <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>, which defines how to display the data in the                          <ph id="ph3">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For more information about data templates, see                          <bpt id="p1">[</bpt>Data Templating Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-templating-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Replace the existing                          <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> with the following XAML.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This XAML binds the                          <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property of the                          <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> to the data source and applies the data template as the                          <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Connecting Data to Controls</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>In this section, you write the code that retrieves the current item that is selected in the list of people on the ExpenseItHome.xaml page, and passes its reference to the constructor of                  <ph id="ph1">`ExpenseReportPage`</ph> during instantiation.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ExpenseReportPage`</ph> sets its data context with the passed item, which is what the controls defined in ExpenseReportPage.xaml will bind to.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Open ExpenseReportPage.xaml.vb or ExpenseReportPage.xaml.cs.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Add a constructor that takes an object so you can pass the expense report data of the selected person.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Open ExpenseItHome.xaml.vb or ExpenseItHome.xaml.cs.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Change the                          <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler to call the new constructor passing the expense report data of the selected person.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Styling Data with Data Templates</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In this section, you update the                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> for each item in the data bound lists by using data templates.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Open ExpenseReportPage.xaml.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Bind the content of the "Name" and "Department"                          <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> elements to the appropriate data source property.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For more information about data binding, see                          <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>After the opening                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element, add the following data templates, which define how to display the expense report data.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Apply the templates to the                          <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> columns that display the expense report data.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Select a person and click the                          <bpt id="p1">**</bpt>View<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The following illustration shows both pages of the ExpenseIt application with controls, layout, styles, data binding, and data templates applied.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ExpenseIt sample screen shots<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/getting-started/media/gettingstartedfigure5.png "</bpt>GettingStartedFigure5<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This sample demonstrates a specific feature of WPF and, consequently, does not follow application development best practices.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For comprehensive coverage of                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and the                  <ph id="ph2">[!INCLUDE[TLA2#tla_winfx](../../../../includes/tla2sharptla-winfx-md.md)]</ph> application development best practices, see the following topics as appropriate:</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Accessibility -                          <bpt id="p1">[</bpt>Accessibility Best Practices<ept id="p1">](../../../../docs/framework/ui-automation/accessibility-best-practices.md)</ept></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Security -                          <bpt id="p1">[</bpt>Security<ept id="p1">](../../../../docs/framework/wpf/security-wpf.md)</ept></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Localization -                          <bpt id="p1">[</bpt>WPF Globalization and Localization Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Performance -                          <bpt id="p1">[</bpt>Optimizing WPF Application Performance<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-wpf-application-performance.md)</ept></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>What's Next</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You now have a number of techniques at your disposal for creating a                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> using                  <ph id="ph2">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>You should now have a broad understanding of the basic building blocks of a data-bound                  <ph id="ph1">[!INCLUDE[TLA2#tla_winfx](../../../../includes/tla2sharptla-winfx-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This topic is by no means exhaustive, but hopefully you also now have a sense of some of the possibilities you might discover on your own beyond the techniques in this topic.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For more information about the WPF architecture and programming models, see the following topics:</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Architecture<ept id="p1">](../../../../docs/framework/wpf/advanced/wpf-architecture.md)</ept></source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](../../../../docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept></source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Layout<ept id="p1">](../../../../docs/framework/wpf/advanced/layout.md)</ept></source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For more information about creating applications, see the following topics:</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Application Development<ept id="p1">](../../../../docs/framework/wpf/app-development/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Controls<ept id="p1">](../../../../docs/framework/wpf/controls/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Graphics and Multimedia<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Documents in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/documents-in-wpf.md)</ept></source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Panels Overview<ept id="p1">](../../../../docs/framework/wpf/controls/panels-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Templating Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-templating-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building a WPF Application<ept id="p1">](../../../../docs/framework/wpf/app-development/building-a-wpf-application-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Styles and Templates<ept id="p1">](../../../../docs/framework/wpf/controls/styles-and-templates.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>