<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c19d52cfb45ecf5890db1a8d7eb98dbfaac69495</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\frequently-asked-questions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37429cda69b40b4534ba0ce8aa5b2f298917c717</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f1cff2b0157e407d8c83af49c960b8a5b10cc23</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following sections answer some common issues that you might encounter when you implement <ph id="ph1">[!INCLUDE[vbteclinq](../../../../../../includes/vbteclinq-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Additional issues are addressed in <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/troubleshooting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Cannot Connect</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>I cannot connect to my database.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Make sure your connection string is correct and that your <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../../includes/ssnoversion-md.md)]</ph> instance is running.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Note also that <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> requires the Named Pipes protocol to be enabled.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Learning by Walkthroughs<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/learning-by-walkthroughs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Changes to Database Lost</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>I made a change to data in the database, but when I reran my application, the change was no longer there.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Make sure that you call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> to save results to the database.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Database Connection: Open How Long?</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>How long does my database connection remain open?</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A connection typically remains open until you consume the query results.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you expect to take time to process all the results and are not opposed to caching the results, apply <ph id="ph1">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph> to the query.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In common scenarios where each object is processed only one time, the streaming model is superior in both <ph id="ph1">`DataReader`</ph> and <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The exact details of connection usage depend on the following:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Connection status if the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is constructed with a connection object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Connection string settings (for example, enabling Multiple Active Result Sets (MARS).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Multiple Active Result Sets (MARS)<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Updating Without Querying</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Can I update table data without first querying the database?</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Although <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> does not have set-based update commands, you can use either of the following techniques to update without first querying:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph> to send SQL code.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create a new instance of the object and initialize all the current values (fields) that affect the update.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Then attach the object to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> by using <ph id="ph2">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph> and modify the field you want to change.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Unexpected Query Results</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>My query is returning unexpected results.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>How can I inspect what is occurring?</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provides several tools for inspecting the SQL code it generates.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>One of the most important is <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Log%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Debugging Support<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/debugging-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Unexpected Stored Procedure Results</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>I have a stored procedure whose return value is calculated by <ph id="ph1">`MAX()`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When I drag the stored procedure to the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](../../../../../../includes/vs-ordesigner-short-md.md)]</ph> surface, the return value is not correct.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provides two ways to return database-generated values by way of stored procedures:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By naming the output result.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>By explicitly specifying an output parameter.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following is an example of incorrect output.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> cannot map the results, it always returns 0:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following is an example of correct output by using an output parameter:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following is an example of correct output by naming the output result:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Customizing Operations By Using Stored Procedures<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Serialization Errors</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When I try to serialize, I get the following error: "Type 'System.Data.Linq.ChangeTracker+StandardChangeTracker' ... is not marked as serializable."</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Code generation in <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> supports <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> serialization.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It does not support <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Serialization<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Multiple DBML Files</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When I have multiple DBML files that share some tables in common, I get a compiler error.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Context Namespace<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Entity Namespace<ept id="p2">**</ept> properties from the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> to a distinct value for each DBML file.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This approach eliminates the name/namespace collision.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Avoiding Explicit Setting of Database-Generated Values on Insert or Update</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>I have a database table with a <ph id="ph1">`DateCreated`</ph> column that defaults to SQL <ph id="ph2">`Getdate()`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When I try to insert a new record by using <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, the value gets set to <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>I would expect it to be set to the database default.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> handles this situation automatically for identity (auto-increment) and rowguidcol (database-generated GUID) and timestamp columns.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In other cases, you should manually set <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A&gt;</ph><ph id="ph2">=</ph><ph id="ph3">`true`</ph> and <ph id="ph4">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.AutoSync%2A&gt;</ph><ph id="ph5">=</ph><ph id="ph6">&lt;xref:System.Data.Linq.Mapping.AutoSync&gt;</ph><ph id="ph7">/</ph><ph id="ph8">&lt;xref:System.Data.Linq.Mapping.AutoSync&gt;</ph><ph id="ph9">/</ph><ph id="ph10">&lt;xref:System.Data.Linq.Mapping.AutoSync&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Multiple DataLoadOptions</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Can I specify additional load options without overwriting the first?</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Yes.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The first is not overwritten, as in the following example:</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Errors Using SQL Compact 3.5</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>I get an error when I drag tables out of a <ph id="ph1">[!INCLUDE[ssEW](../../../../../../includes/ssew-md.md)]</ph> database.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> does not support <ph id="ph2">[!INCLUDE[ssEW](../../../../../../includes/ssew-md.md)]</ph>, although the <ph id="ph3">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> runtime does.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In this situation, you must create your own entity classes and add the appropriate attributes.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Errors in Inheritance Relationships</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>I used the toolbox inheritance shape in the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> to connect two entities, but I get errors.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Creating the relationship is not enough.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You must provide information such as the discriminator column, base class discriminator value, and derived class discriminator value.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Provider Model</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Is a public provider model available?</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>No public provider model is available.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>At this time, <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> supports <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../../includes/ssnoversion-md.md)]</ph> and <ph id="ph3">[!INCLUDE[ssEW](../../../../../../includes/ssew-md.md)]</ph> only.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>SQL-Injection Attacks</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>How is <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> protected from SQL-injection attacks?</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>SQL injection has been a significant risk for traditional SQL queries formed by concatenating user input.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> avoids such injection by using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameter&gt;</ph> in queries.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>User input is turned into parameter values.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This approach prevents malicious commands from being used from customer input.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Changing Read-only Flag in DBML Files</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>How do I eliminate setters from some properties when I create an object model from a DBML file?</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Take the following steps for this advanced scenario:</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the .dbml file, modify the property by changing the <ph id="ph1">&lt;xref:System.Data.Linq.ITable.IsReadOnly%2A&gt;</ph> flag to <ph id="ph2">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Add a partial class.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Create a constructor with parameters for the read-only members.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Review the default <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.UpdateCheck&gt;</ph> value (<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.UpdateCheck&gt;</ph>) to determine whether that is the correct value for your application.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you are using the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> in <ph id="ph2">[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph>, your changes might be overwritten.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>APTCA</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Is System.Data.Linq marked for use by partially trusted code?</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Yes, the System.Data.Linq.dll assembly is among those <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../../includes/dnprdnshort-md.md)]</ph> assemblies marked with the <ph id="ph2">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Without this marking, assemblies in the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../../includes/dnprdnshort-md.md)]</ph> are intended for use only by fully trusted code.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The principal scenario in <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> for allowing partially trusted callers is to enable the <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> assembly to be accessed from Web applications, where the <bpt id="p1">*</bpt>trust<ept id="p1">*</ept> configuration is Medium.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Mapping Data from Multiple Tables</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The data in my entity comes from multiple tables.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>How do I map it?</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can create a view in a database and map the entity to the view.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> generates the same SQL for views as it does for tables.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The use of views in this scenario has limitations.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This approach works most safely when the operations performed on <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> are supported by the underlying view.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Only you know which operations are intended.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For example, most applications are read-only, and another sizeable number perform <ph id="ph1">`Create`</ph><ph id="ph2">/</ph><ph id="ph3">`Update`</ph><ph id="ph4">/</ph><ph id="ph5">`Delete`</ph> operations only by using stored procedures against views.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Connection Pooling</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Is there a construct that can help with <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> pooling?</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Do not try to reuse instances of <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> maintains state (including an identity cache) for one particular edit/query session.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To obtain new instances based on the current state of the database, use a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You can still use underlying <ph id="ph1">[!INCLUDE[vstecado](../../../../../../includes/vstecado-md.md)]</ph> connection pooling.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](../../../../../../docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Second DataContext Is Not Updated</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>I used one instance of <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> to store values in the database.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>However, a second <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> on the same database does not reflect the updated values.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance seems to return cached values.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This behavior is by design.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> continues to return the same instances/values that you saw in the first instance.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When you make updates, you use optimistic concurrency.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The original data is used to check against the current database state to assert that it is in fact still unchanged.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If it has changed, a conflict occurs and your application must resolve it.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>One option of your application is to reset the original state to the current database state and to try the update again.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Manage Change Conflicts<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-manage-change-conflicts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You can also set <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> to false, which turns off caching and change tracking.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>You can then retrieve the latest values every time that you query.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Cannot Call SubmitChanges in Read-only Mode</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Q.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When I try to call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> in read-only mode, I get an error.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Read-only mode turns off the ability of the context to track changes.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reference<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/reference.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/troubleshooting.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security in LINQ to SQL<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/security-in-linq-to-sql.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>