<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="working-with-binary-data-wcf-data-services.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fffbbd868d9f2e964fa730b45839ebbf6663a0fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\working-with-binary-data-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcdd76d710f5893eecaca3590365e3666ca9bd0d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6618851aa554a63db8f9e98e82ef9d54a11335b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Working with Binary Data (WCF Data Services) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Working with Binary Data (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library enables you to retrieve and update binary data from an <ph id="ph2">[!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)]</ph> feed in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As a primitive type property of an entity.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is the recommended method for working with small binary data objects that can be easily loaded into memory.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this case, the binary property is an entity property exposed by the data model, and the data service serializes the binary data as base-64 binary encoded XML in the response message.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>As a separate binary resource stream.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is the recommended method for accessing and changing binary large object (BLOB) data that may represent a photo, video, or any other type of binary encoded data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> implements the streaming of binary data by using HTTP as defined in the <ph id="ph2">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this mechanism, binary data is treated as a media resource that is separate from but related to an entity, which is called a media link entry.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Streaming Provider<ept id="p1">](../../../../docs/framework/data/wcf/streaming-provider-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For a step-by-step example of how to create a <ph id="ph1">[!INCLUDE[avalon1](../../../../includes/avalon1-md.md)]</ph> client application that downloads binary image files from an <ph id="ph2">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> service that stores photos, see the post <bpt id="p1">[</bpt>Data Services Streaming Provider Series-Part 2: Accessing a Media Resource Stream from the Client<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201637)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To download the sample code for the stream photo data service featured in the blog post, see the <bpt id="p1">[</bpt>Streaming Photo Data Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=198988)</ept> in MSDN Code Gallery.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Entity Metadata</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An entity that has a related media resource stream is indicated in the data service metadata by the <ph id="ph1">`HasStream`</ph> attribute applied to an entity type that is the media link entry.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`PhotoInfo`</ph> entity is a media link entry that has a related media resource, indicated by the <ph id="ph2">`HasStream`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>Astoria Photo Streaming Service#HasStream<ept id="p2">](../../../../samples/snippets/xml/VS_Snippets_Misc/astoria photo streaming service/xml/photodata.edmx#hasstream)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The remaining examples in this topic show how to access and change the media resource stream.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For a complete example of how to consume a media resource stream in a .NET Framework client application by using the <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library, see the post <bpt id="p1">[</bpt>Accessing a Media Resource Stream from the Client<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=201637)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Accessing the Binary Resource Stream</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library provides methods for accessing binary resource streams from an <ph id="ph2">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph>-based data service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When downloading a media resource, you can either use the URI of the media resource or you can get a binary stream that contains the media resource data itself.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also upload media resource data as a binary stream.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For a step-by-step example of how to create a <ph id="ph1">[!INCLUDE[avalon1](../../../../includes/avalon1-md.md)]</ph> client application that downloads binary image files from an <ph id="ph2">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> service that stores photos, see the post <bpt id="p1">[</bpt>Data Services Streaming Provider Series-Part 2: Accessing a Media Resource Stream from the Client<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201637)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To download the sample code for the stream photo data service featured in the blog post, see the <bpt id="p1">[</bpt>Streaming Photo Data Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=198988)</ept> in MSDN Code Gallery.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Getting the URI of the Binary Stream</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When retrieving certain types of media resources, such as images and other media files, it is often easier to use the URI of the media resource in your application than handling the binary data stream itself.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To get the URI of a resource stream associated with a give media link entry, you must call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance that is tracking the entity.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A&gt;</ph> method to get the URI of a media resource stream that is used to create a new image on the client:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Astoria Photo Streaming Client#GetReadStreamUri<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria photo streaming client/cs/photowindow.xaml.cs#getreadstreamuri)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Astoria Photo Streaming Client#GetReadStreamUri<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria photo streaming client/vb/photowindow.xaml.vb#getreadstreamuri)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Downloading the Binary Resource Stream</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When retrieving a binary resource stream, you must call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance that is tracking the media link entry.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This method sends a request to the data service that returns a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceStreamResponse&gt;</ph> object, which has a reference to the stream that contains the resource.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use this method when your application requires the binary resource as a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A&gt;</ph> method to retrieve a stream that is used to create a new image on the client:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Astoria Streaming Client#GetReadStreamClient<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria streaming client/cs/customerphotowindow.xaml.cs#getreadstreamclient)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Astoria Streaming Client#GetReadStreamClient<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria streaming client/vb/customerphotowindow.xaml.vb#getreadstreamclient)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Content-Length header in the response message that contains the binary steam is not set by the data service.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This value may not reflect the actual length of the binary data stream.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Uploading a Media Resource as a Stream</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To insert or update a media resource, call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance that is tracking the entity.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method sends a request to the data service that contains the media resource read from the supplied stream.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A&gt;</ph> method to send an image to the data service:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Astoria Photo Streaming Client#SetSaveStream<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Misc/astoria photo streaming client/cs/photodetailswindow.xaml.cs#setsavestream)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Astoria Photo Streaming Client#SetSaveStream<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Misc/astoria photo streaming client/vb/photodetailswindow.xaml.vb#setsavestream)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A&gt;</ph> method is called by supplying a value of <ph id="ph2">`true`</ph> for the <ph id="ph3">`closeStream`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This guarantees that the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> closes the stream after the binary data is uploaded to the data service.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A&gt;</ph>, the stream is not sent to the data service until <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Data Services Client Library<ept id="p1">](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Binding Data to Controls<ept id="p1">](../../../../docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>