<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b5d29a67626de0de829195ae4264d4804605806</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc42030.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5630f627ca9476e4eae53e922c18ff3815107a0e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ea0b60e31d95f7f20551c38ea8a2aecf95e851d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Variable &amp;#39;<ph id="ph1">&amp;lt;</ph>variablename<ph id="ph2">&amp;gt;</ph>&amp;#39; is passed by reference before it has been assigned a value | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Variable &amp;#39;<ph id="ph1">&amp;lt;</ph>variablename<ph id="ph2">&amp;gt;</ph>&amp;#39; is passed by reference before it has been assigned a value</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Variable '<ph id="ph1">\&lt;</ph>variablename&gt;' is passed by reference before it has been assigned a value.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A null reference exception could result at run time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A procedure call passes a variable as an argument to a <ph id="ph1">`ByRef`</ph> parameter before any value is assigned to the variable.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If a variable has never been assigned a value, it holds the default value for its data type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For a reference data type, that default value is <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../visual-basic/language-reference/nothing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Reading a reference variable that has a value of <ph id="ph1">`Nothing`</ph> can cause a <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> in some circumstances.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Passing an argument to a procedure <ph id="ph1">`ByRef`</ph> exposes the variable underlying the argument to possible modification by the procedure.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, this message is a warning.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about hiding warnings or treating warnings as errors, see <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC42030</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you intend the procedure to assign a value to the variable through the <ph id="ph1">`ByRef`</ph> argument, and if it does not matter whether the variable already holds a value, then no action is necessary.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a value type, then make sure that the procedure logic does not depend on whether the variable holds its default value or not.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a reference type, then make sure that the procedure logic can handle a value of <ph id="ph1">`Nothing`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, it could use a <bpt id="p1">[</bpt>Try...Catch...Finally Statement<ept id="p1">](../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept> to catch a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dim Statement<ept id="p1">](../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Value and by Reference<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ByRef<ept id="p1">](../../visual-basic/language-reference/modifiers/byref.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Variables<ept id="p1">](../../visual-basic/programming-guide/language-features/variables/troubleshooting-variables.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>