<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f62c7dc50c77d9f8cff08544fa0d816abc02941</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\printing\adding-printable-reports-to-visual-studio-applications.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dbeefd458aa220b4d30524536b05624ed659f76</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2ed27844496ec5670d6b941698c7bec00e3ea19</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding Printable Reports to Visual Studio Applications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adding Printable Reports to Visual Studio Applications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual Studio supports a variety of reporting solutions to help you add rich data reporting to your Visual Basic applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can create and add reports using ReportViewer controls, Crystal Reports, or SQL Server Reporting Services.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>SQL Server Reporting Services is part of SQL Server 2005 rather than Visual Studio.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Reporting Services not installed on your system unless you have installed SQL Server 2005.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Overview of Microsoft Reporting Technology in Visual Basic Applications</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Choose from the following approaches to use a Microsoft reporting technology in your application:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add one or more instances of a ReportViewer control to a Visual Basic Windows application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Integrate SQL Server Reporting Services programmatically by making calls to the Report Server Web service.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use the ReportViewer control and Microsoft SQL Server 2005 Reporting Services together, using the control as a report viewer and a report server as a report processor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(Note that you must use the SQL Server 2005 version of Reporting Services if you want to use a report server and the ReportViewer control together).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using ReportViewer Controls</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The easiest way to embed report functionality into a Visual Basic Windows application is to add the ReportViewer control to a form in your application.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The control adds report processing capabilities directly to your application and provides an integrated report designer so that you can build reports using data from any ADO.NET data object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A full-featured API provides programmatic access to the control and reports so that you can configure run-time functionality.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>ReportViewer provides built-in report processing and viewing capability in a single, freely distributable data control.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Choose ReportViewer controls if you require the following report functionality:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Report processing in the client application.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A processed report appears in a view area provided by the control.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Data binding to ADO.NET data tables.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can create reports that consume <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances supplied to the control.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also bind directly to business objects.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Redistributable controls that you can include in your application.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Runtime functionality such as page navigation, printing, searching, and export formats.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A ReportViewer toolbar provides support for these operations.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To use the ReportViewer control, you can drag it from the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> section of the Visual Studio Toolbox onto a form in your Visual Basic Windows application.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating Reports in Visual Studio for ReportViewer Controls</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To build a report that runs in ReportViewer, add a <bpt id="p1">**</bpt>Report<ept id="p1">**</ept> template to your project.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Visual Studio creates a client report definition file (.rdlc), adds the file to your project, and opens an integrated report designer in the Visual Studio workspace.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Visual Studio Report Designer integrates with the <bpt id="p1">**</bpt>Data Sources<ept id="p1">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you drag a field from the <bpt id="p1">**</bpt>Data Sources<ept id="p1">**</ept> window to the report, the Report Designer copies metadata about the data source into the report definition file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This metadata is used by the ReportViewer control to automatically generate data-binding code.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Visual Studio Report Designer does not include report preview functionality.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To preview your report, run the application and preview the report embedded in it.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To add basic report functionality to your application</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>1.  Drag a ReportViewer control from the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Toolbox<ept id="p2">**</ept> onto your form.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>2.  On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Add New Item<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, select the <bpt id="p2">**</bpt>Report<ept id="p2">**</ept> icon and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The Report Designer opens in the development environment, and a report (.rdlc) file is added to the project.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>3.  Drag report items from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> on the report layout and arrange them as you want.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>4.  Drag fields from the <bpt id="p1">**</bpt>Data Sources<ept id="p1">**</ept> window to the report items in the report layout.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using Reporting Services in Visual Basic Applications</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Reporting Services is a server-based reporting technology that is included with SQL Server.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Reporting Services includes additional features that are not found in the ReportViewer controls.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Choose Reporting Services if you require any of the following features:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Scale-out deployment and server-side report processing that provides improved performance for complex or long-running reports and for high-volume report activity.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Integrated data and report processing, with support for custom report controls and rich rendering output formats.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Scheduled report processing so that you can specify exactly when reports are run.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Subscriber-based report distribution through e-mail or to file share locations.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Ad hoc reporting so that business users can create reports as needed.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Data-driven subscriptions that route customized report output to a dynamic list of recipients.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Custom extensions for data processing, report delivery, custom authentication, and report rendering.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The report server is implemented as Web service.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Your application code must include calls to the Web service to access reports and other metadata.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Web service provides complete programmatic access to a report server instance.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Because Reporting Services is a Web-based reporting technology, the default viewer shows reports that are rendered in HTML format.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you do not want to use HTML as the default report presentation format, you will have to write a custom report viewer for your application.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Creating Reports in Visual Studio for Reporting Services</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To build reports that run on a report server, you create report definition (.rdl) files in Visual Studio through the Business Intelligence Development Studio, which is included with SQL Server 2005.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You must have SQL Server 2005 installed in order to use SQL Server Reporting Services and the Business Intelligence Development Studio.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Business Intelligence Development Studio adds project templates that are specific to SQL Server components.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To create reports, you can choose from the <bpt id="p1">**</bpt>Report Server Project<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Report Server Project Wizard<ept id="p2">**</ept> templates.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can specify data source connections and queries to a variety of data source types, including SQL Server, Oracle, Analysis Services, XML, and SQL Server Integration Services.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> tab, <bpt id="p2">**</bpt>Layout<ept id="p2">**</ept> tab, and <bpt id="p3">**</bpt>Preview<ept id="p3">**</ept> tab allow you to define data, create a report layout, and preview the report all in the same workspace.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Report definitions that you build for the control or the report server can be reused in either technology.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To create a report that runs on a report server</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>1.  On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>New<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box opens.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>2.  In the <bpt id="p1">**</bpt>Project types<ept id="p1">**</ept> pane, click <bpt id="p2">**</bpt>Business Intelligence Projects<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>3.  In the Templates pane, select <bpt id="p1">**</bpt>Report Server Project<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Report Server Project Wizard<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Using ReportViewer Controls and SQL Server Reporting Services Together</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The ReportViewer controls and SQL Server 2005 Reporting Services can be used together in the same application.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The ReportViewer control provides a viewer that is used to display reports in your application.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Reporting Services provides the reports and performs all processing on a remote server.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The ReportViewer control can be configured to show reports that are stored and processed on a remote Reporting Services report server.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This type of configuration is called <bpt id="p1">*</bpt>remote processing mode<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In remote processing mode, the control requests a report that is stored on a remote report server.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The report server performs all report processing, data processing, and report rendering.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A finished, rendered report is returned to the control and displayed in the view area.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Reports that run on a report server support additional export formats, have a different report parameterization implementation, use the data source types that are supported by the report server, and are accessed through the role-based authorization model on the report server.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To use remote processing mode, specify the URL and path to a server report when configuring the ReportViewer control.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>