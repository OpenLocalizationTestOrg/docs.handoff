<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="net-framework-4-migration-issues.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">368d5f7fa2eec8f3526a10b4777a862e8334617c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\migration-guide\net-framework-4-migration-issues.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f037af444207f1ff16ef2e25997e3e2dfad1456</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94f3bd4b12257f99267e974ad78c3c9b0738f4ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>.NET Framework 4 migration issues</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Framework 4 migration issues</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes migration issues between the .NET Framework version 3.5 Service Pack 1 and the .NET Framework version 4, including fixes, changes for standards compliance and security, and changes based on customer feedback.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Most of these changes do not require any programming modifications in your applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For those that may involve modifications, see the Recommended changes column of the table.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic describes notable changes in the following areas:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET and Web<ept id="p1">](#aspnet-and-web)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Core<ept id="p1">](#core)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data<ept id="p1">](#data)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Communication Foundation (WCF)<ept id="p1">](#windows-communication-foundation-wcf)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Presentation Foundation (WPF)<ept id="p1">](#windows-presentation-foundation-wpf)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML<ept id="p1">](#xml)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an higher-level overview of the issues in this topic, see the <bpt id="p1">[</bpt>Migration Guide to the .NET Framework 4<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ff657133%28v=vs.100%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For information about new features, see <bpt id="p1">[</bpt>What's New in the .NET Framework 4<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms171868%28v=vs.100%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>ASP.NET and Web</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Web&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Mobile&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.Security&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls&gt;</ph>; assembly: System.Web (in System.Web.dll)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Browser definition files<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The browser definition files have been updated to include information about new and updated browsers and devices.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Older browsers and devices such as Netscape Navigator have been removed, and newer browsers and devices such as Google Chrome and Apple iPhone have been added.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If your application contains custom browser definitions that inherit from one of the browser definitions that have been removed, you will see an error.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> object (which is exposed by the page's <ph id="ph2">`Request.Browse`</ph> property) is driven by the browser definition files.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, the information that is returned by accessing a property of this object in ASP.NET 4 might be different than the information that was returned in an earlier version of ASP.NET.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If your application relies on the old browser definition files, you can copy them from the following folder:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Windows<ph id="ph1">\\</ph>Microsoft.NET<ph id="ph2">\\</ph>Framework<ph id="ph3">\\</ph>v2.0.50727<ph id="ph4">\\</ph>CONFIG<ph id="ph5">\\</ph>Browsers<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Copy the files into the corresponding <bpt id="p1">*</bpt><ph id="ph1">\\</ph>CONFIG<ph id="ph2">\\</ph>Browsers<ept id="p1">*</ept> folder for ASP.NET 4.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>After you copy the files, run the <bpt id="p1">[</bpt>Aspnet_regbrowsers.exe<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms229858(v=vs.90))</ept> command-line tool.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt><ph id="ph1">https://www.asp.net/mobile</ph><ept id="p1">](/aspnet/mobile/overview)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Child applications running under mixed versions of ASP.NET<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>ASP.NET 4 applications that are configured as children of applications that run earlier versions of ASP.NET might fail to start because of configuration or compilation errors.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The specific error that occurs depends on whether the application runs under IIS 6.0, or under IIS 7 or IIS 7.5.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can make changes to the configuration files of the affected applications so that the configuration system correctly recognizes the ASP.NET 4 application.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For information about the changes you must make, see the section "ASP.NET 4 Child Applications Fail to Start When Under ASP.NET 2.0 or ASP.NET 3.5 Applications" in the document <bpt id="p1">[</bpt>ASP.NET 4 Breaking Changes<ept id="p1">](/aspnet/whitepapers/aspnet4/breaking-changes)</ept> on the ASP.NET Web site.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ClientID changes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`clientIDMode`</ph> setting in ASP.NET 4 lets you specify how ASP.NET generates the <ph id="ph2">`id`</ph> attribute for HTML elements.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In previous versions of ASP.NET, the default behavior was equivalent to the <ph id="ph1">`AutoID`</ph> setting of <ph id="ph2">`clientIDMode`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default setting is now <ph id="ph1">`Predictable`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Web Server Control Identification<ept id="p1">](https://docs.microsoft.com/previous-versions/aspnet/1d04y8ss%28v=vs.100%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you use Visual Studio to upgrade your application from ASP.NET 2.0 or ASP.NET 3.5, the tool automatically adds a setting to the Web.config file that preserves the behavior of earlier versions of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if you upgrade an application by changing the application pool in IIS to target the .NET Framework 4, ASP.NET uses the new mode by default.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To disable the new client ID mode, add the following setting to the Web.config file:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Code access security (CAS)<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>ASP.NET 2.0 NET features that were added in ASP.NET 3.5 use the .NET Framework 1.1 and .NET Framework 2.0 code access security (CAS) model.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, the implementation of CAS in ASP.NET 4 has been substantially overhauled.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>As a result, partial-trust ASP.NET applications that rely on trusted code running in the global assembly cache might fail with various security exceptions.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Partial-trust applications that rely on extensive modifications to machine CAS policy might also fail and throw security exceptions.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can revert partial-trust ASP.NET 4 applications to the behavior of ASP.NET 1.1 and 2.0 by using the new <ph id="ph1">`legacyCasModel`</ph> attribute in the <ph id="ph2">`trust`</ph> configuration element, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Important: Reverting to the older CAS model might represent reduced security.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information about the new ASP.NET 4 code access security model, see <bpt id="p1">[</bpt>Code Access Security in ASP.NET 4 Applications<ept id="p1">](https://docs.microsoft.com/previous-versions/dd984947(v=vs.100))</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Configuration files<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The root configuration files (the machine.config file and the root Web.config file) for the .NET Framework and ASP.NET 4 have been updated to include most of the boilerplate configuration information that was found in the application Web.config files in ASP.NET 3.5.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because of the complexity of the managed IIS 7 and IIS 7.5 configuration systems, running ASP.NET 3.5 applications under ASP.NET 4 and under IIS 7 and IIS 7.5 can result in either ASP.NET errors or IIS errors.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Upgrade ASP.NET 3.5 applications to ASP.NET 4 by using the project upgrade tools in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Visual Studio 2010 automatically modifies the ASP.NET 3.5 application's Web.config file to contain the appropriate settings for ASP.NET 4.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>However, you can run ASP.NET 3.5 applications using the .NET Framework 4 without recompilation.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In that case, you might have to manually modify the application's Web.config file before you run the application under the .NET Framework 4 and under IIS 7 or IIS 7.5.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The specific change you must make depends on the combination of software you are working with, including Service Pack (SP) releases.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For information about the possible software combinations that are affected by this change and how to resolve problems with specific combinations, see the section "Configuration Errors Related to New ASP.NET 4 Root Configuration" in the document <bpt id="p1">[</bpt>ASP.NET 4 Breaking Changes<ept id="p1">](/aspnet/whitepapers/aspnet4/breaking-changes)</ept> on the ASP.NET Web site.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Control rendering<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In previous versions of ASP.NET, some controls emitted markup that you could not disable.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>By default, this type of markup is no longer generated in ASP.NET 4.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The rendering changes affect the following controls:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`Image`</ph> and <ph id="ph2">`ImageButton`</ph> controls no longer render a <ph id="ph3">`border="0"`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`BaseValidator`</ph> class and validation controls that derive from it no longer render red text by default.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`HtmlForm`</ph> control does not render a <ph id="ph2">`name`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`Table`</ph> control no longer renders a <ph id="ph2">`border="0"`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Controls that are not designed for user input (for example, the <ph id="ph1">`Label`</ph> control) no longer render the <ph id="ph2">`disabled="disabled"`</ph> attribute if their <ph id="ph3">`Enabled`</ph> property is set to <ph id="ph4">`false`</ph> (or if they inherit this setting from a container control).</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you use Visual Studio to upgrade your application from ASP.NET 2.0 or ASP.NET 3.5, the tool automatically adds a setting to the Web.config file that preserves legacy rendering.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, if you upgrade an application by changing the application pool in IIS to target the .NET Framework 4, ASP.NET uses the new rendering mode by default.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To disable the new rendering mode, add the following setting to the Web.config file:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Event handlers in default documents<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>ASP.NET  4 renders the HTML <ph id="ph1">`form`</ph> element's <ph id="ph2">`action`</ph> attribute value as an empty string when a request is made to an extensionless URL that has a default document mapped to it.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In earlier releases of ASP.NET, a request to <ph id="ph1">`http://contoso.com`</ph> would result in a request to Default.aspx.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In that document, the opening <ph id="ph1">`form`</ph> tag would be rendered as in the following example:</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In ASP.NET 4, a request to <ph id="ph1">`http://contoso.com`</ph> also results in a request to Default.aspx, but ASP.NET now renders the HTML opening <ph id="ph2">`form`</ph> tag as in the following example:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`action`</ph> attribute is an empty string, the IIS <ph id="ph2">`DefaultDocumentModule`</ph> object creates a child request to Default.aspx.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Under most conditions, this child request is transparent to application code, and the Default.aspx page runs normally.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>However, a potential interaction between managed code and IIS 7 or IIS 7.5 Integrated mode can cause managed .aspx pages to stop working properly during the child request.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If the following conditions occur, the child request to a default .aspx document will result in an error or in unexpected behavior:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>* An .aspx page is sent to the browser with the <ph id="ph1">`form`</ph> element's <ph id="ph2">`action`</ph> attribute set to "".</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>* The form is posted back to ASP.NET.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>* A managed HTTP module reads some part of the entity body, such as <ph id="ph1">`Request.Form`</ph> or <ph id="ph2">`Request.Params`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This causes the entity body of the POST request to be read into managed memory.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>As a result, the entity body is no longer available to any native code modules that are running in IIS 7 or IIS 7.5 Integrated mode.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>* The IIS <ph id="ph1">`DefaultDocumentModule`</ph> object eventually runs and creates a child request to the Default.aspx document.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>However, because the entity body has already been read by a piece of managed code, there is no entity body available to send to the child request.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>* When the HTTP pipeline runs for the child request, the handler for .aspx files runs during the handler-execute phase.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Because there is no entity body, there are no form variables and no view state.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Therefore there is no information available for the .aspx page handler to determine what event (if any) should be raised.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>As a result, none of the postback event handlers for the affected .aspx page run.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For information about ways to work around problems that might arise as a result of this change, see "Event Handlers Might Not Be Not Raised in a Default Document in IIS 7 or IIS 7.5 Integrated Mode" in the document <bpt id="p1">[</bpt>ASP.NET 4 Breaking Changes<ept id="p1">](/aspnet/whitepapers/aspnet4/breaking-changes)</ept> on the ASP.NET Web site.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hashing algorithm<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>ASP.NET uses both encryption and hashing algorithms to help secure data such as forms authentication cookies and view state.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>By default, ASP.NET 4 uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA256&gt;</ph> algorithm for hash operations on cookies and view state.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Earlier versions of ASP.NET used the older <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA1&gt;</ph> algorithm.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you run applications that mix ASP.NET 2.0 and ASP.NET 4, where data such as forms authentication cookies must work across .NET Framework versions, configure an ASP.NET 4 Web application to use the older <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA1&gt;</ph> algorithm by adding the following setting in the Web.config file:</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hosting controls in Internet Explorer<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can no longer host Windows Forms controls in the Internet Explorer, because there are better solutions for hosting controls on the Web.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Therefore, the IEHost.dll and IEExec.exe assemblies have been removed from the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You can use the following technologies for custom control development in Web applications:</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>* You can create a Silverlight application and configure it to run outside the browser.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Out-of-Browser Support<ept id="p1">](https://docs.microsoft.com/previous-versions/windows/silverlight/dotnet-windows-silverlight/dd550721%28v=vs.95%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>* You can build a XAML browser application (XBAP) to take advantage of WPF capabilities (requires the .NET Framework on client machines).</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Browser Applications Overview<ept id="p1">](../../../docs/framework/wpf/app-development/wpf-xaml-browser-applications-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HtmlEncode and UrlEncode methods<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`HtmlEncode`</ph> and <ph id="ph2">`UrlEncode`</ph> methods of the <ph id="ph3">&lt;xref:System.Web.HttpUtility&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.HttpServerUtility&gt;</ph> classes have been updated to encode the single quotation mark character (') as follows:</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`HtmlEncode`</ph> method encodes instances of the single quotation mark as <ph id="ph2">`&amp;#39;`</ph></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`UrlEncode`</ph> method encodes instances of the single quotation mark as <ph id="ph2">`%27`</ph></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Examine your code for places where you use the <ph id="ph1">`HtmlEncode`</ph> and <ph id="ph2">`UrlEncode`</ph> methods, and make sure that the change in encoding does not result in a change that would affect your application.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpException errors in ASP.NET 2.0 applications<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>After ASP.NET 4 has been enabled on IIS 6, ASP.NET 2.0 applications that run on IIS 6 (in either Windows Server 2003 or Windows Server 2003 R2) might generate errors such as the following: <ph id="ph1">`System.Web.HttpException: Path '/[yourApplicationRoot]/eurl.axd/[Value]' was not found.`</ph></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>* If ASP.NET 4 is not required in order to run the Web site, remap the site to use ASP.NET 2.0 instead.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>* If ASP.NET 4 is required in order to run the Web site, move any child ASP.NET 2.0 virtual directories to a different Web site that is mapped to ASP.NET 2.0.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>* Disable extensionless URLs.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information, see "ASP.NET 2.0 Applications Might Generate HttpException Errors That Reference eurl.axd" in the document <bpt id="p1">[</bpt>ASP.NET 4 Breaking Changes<ept id="p1">](/aspnet/whitepapers/aspnet4/breaking-changes)</ept> on the ASP.NET Web site.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Membership types<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Some types (for example, <ph id="ph1">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph>) that are used in ASP.NET membership have been moved from System.Web.dll to the System.Web.ApplicationServices.dll assembly.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The types were moved in order to resolve architectural layering dependencies between types in the client and in extended .NET Framework SKUs.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Class libraries that have been upgraded from earlier versions of ASP.NET and that use membership types that have been moved might fail to compile when used in an ASP.NET 4 project.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If so, add a reference in the class library project to System.Web.ApplicationServices.dll.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Menu control changes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Changes to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Menu&gt;</ph> control result in the following behavior:</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>* If <ph id="ph1">&lt;xref:System.Web.UI.WebControls.MenuRenderingMode&gt;</ph> is set to <ph id="ph2">`List`</ph>, or if <ph id="ph3">&lt;xref:System.Web.UI.WebControls.MenuRenderingMode&gt;</ph> is set to <ph id="ph4">`Default`</ph> and <ph id="ph5">&lt;xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion&gt;</ph> is set to <ph id="ph6">`4.0`</ph> or later, the <ph id="ph7">&lt;xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl&gt;</ph> property has no effect.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>* If the path that is set in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl&gt;</ph> properties contains a backslash (<ph id="ph3">\\</ph>), the images do not render.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>(In earlier versions of ASP.NET, the path could include a backslash.)</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>* Instead of setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl&gt;</ph> property for individual menu items, set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl&gt;</ph> of the parent <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Menu&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">&lt;xref:System.Web.UI.WebControls.MenuRenderingMode&gt;</ph> to <ph id="ph2">`Table`</ph>, or set <ph id="ph3">&lt;xref:System.Web.UI.WebControls.MenuRenderingMode&gt;</ph> to <ph id="ph4">`Default`</ph> and set <ph id="ph5">&lt;xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion&gt;</ph> to <ph id="ph6">`3.5`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>These settings cause the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Menu&gt;</ph> control to use the HTML table-based layout that it used in earlier versions of ASP.NET.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>* If the path in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl&gt;</ph> property contains a backslash (<ph id="ph3">\\</ph>), substitute a slash character (/).</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mobile assembly in Web.config file<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>In previous versions of ASP.NET, a reference to the System.Web.Mobile.dll assembly was included in the root Web.config file in the <ph id="ph1">`assemblies`</ph> section under <ph id="ph2">`system.web`</ph><ph id="ph3">/</ph><ph id="ph4">`compilation`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To improve performance, the reference to this assembly has been removed.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Note: The System.Web.Mobile.dll assembly and the ASP.NET mobile controls are included in ASP.NET 4, but they are deprecated.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If you want to use types from this assembly, add a reference to the assembly in either the root Web.config file or in an application Web.config file.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Output caching<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In ASP.NET 1.0, a bug caused cached pages that specified <ph id="ph1">`Location="ServerAndClient"`</ph> as an output€“cache setting to emit a <ph id="ph2">`Vary:*`</ph> HTTP header in the response.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This had the effect of telling client browsers to never cache the page locally.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>In ASP.NET 1.1, the <ph id="ph1">&lt;xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A&gt;</ph> method was added, which could be called in order to suppress the <ph id="ph2">`Vary:*`</ph> header.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>However, bug reports suggest that developers are unaware of the existing <ph id="ph1">`SetOmitVaryStar`</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>In ASP.NET 4, the <ph id="ph1">`Vary:*`</ph> HTTP header is no longer emitted from responses that specify the following directive:</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A&gt;</ph> method is no longer needed in order to suppress the <ph id="ph2">`Vary:*`</ph> header.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In applications that specify "ServerAndClient" for the <ph id="ph1">`Location`</ph> attribute, pages will be cacheable in the browser without requiring that you call <ph id="ph2">&lt;xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If pages in the application must emit <ph id="ph1">`Vary:*`</ph>, call the <ph id="ph2">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> method as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Alternatively, you can change the value of the output caching <ph id="ph1">`Location`</ph> attribute to "Server".</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Page parsing<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The page parser for ASP.NET Web pages (.aspx files) and user controls (.ascx files) is stricter in ASP.NET 4 than in earlier versions of ASP.NET, and it flags more markup as invalid than in earlier versions.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Examine error messages that are produced when a page runs and fix errors that result from invalid markup.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Passport types<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The Passport support built into ASP.NET 2.0 is obsolete and is unsupported due to changes in Passport (now Live ID SDK).</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>As a result, the types related to Passport in <ph id="ph1">&lt;xref:System.Web.Security&gt;</ph> are now marked with the <ph id="ph2">`ObsoleteAttribute`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Change any code you have that uses Passport types in the <ph id="ph1">&lt;xref:System.Web.Security&gt;</ph> namespace (for example, <ph id="ph2">&lt;xref:System.Web.Security.PassportIdentity&gt;</ph>) to use the <bpt id="p1">[</bpt>SDK<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=106346)</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PathInfo information in the FilePath property<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>ASP.NET 4 no longer includes the <ph id="ph1">`PathInfo`</ph> value in the return values from properties such as <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Instead, the <ph id="ph1">`PathInfo`</ph> information is available in <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For example, imagine the following URL fragment:</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In earlier versions of ASP.NET, <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> properties have the following values:</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath&gt;</ph>: <ph id="ph3">`/testapp/Action.mvc/SomeAction`</ph></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo&gt;</ph>: (empty)</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>In ASP.NET 4, <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> properties instead have the following values:</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath&gt;</ph>: <ph id="ph3">`/testapp/Action.mvc`</ph></source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo&gt;</ph>: <ph id="ph3">`SomeAction`</ph></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Examine your code for places where you rely on properties of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class to return path information; change the code to reflect the changes in how path information is returned.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Request validation<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>To improve request validation, the ASP.NET request validation is invoked earlier in the request life cycle.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>As a result, request validation runs for requests that are not for .aspx files, such as for Web service calls and for custom handlers.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Request validation will also be active when custom HTTP modules are running in the request processing pipeline.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>As a result of this change, requests for resources other than .aspx files might throw request validation errors.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Custom code that runs in the request pipeline (for example, custom HTTP modules) might also throw request validation errors.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If necessary, you can revert to the old behavior of having only .aspx pages triggering request validation by using the following setting in the Web configuration file:</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Warning: If you revert to the old behavior, make sure that all code in existing handlers, modules, and other custom code performs checks for potentially unsafe HTTP inputs that could be XSS attack vectors.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Routing<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If you create a file system Web site in Visual Studio 2010 and the Web site is in a folder that contains a dot (.) in the folder name, URL routing will not work reliably.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An HTTP 404 error is returned from some virtual paths.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This occurs because Visual Studio 2010 launches the Visual Studio Development Server using an incorrect path for the root virtual directory.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>* In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> page for the file-based Web site, change the <bpt id="p2">**</bpt>Virtual Path<ept id="p2">**</ept> attribute to "/".</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>* Create a Web application project instead of a Web site project.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Web application projects do not have this issue, and URL routing works even if the project folder has a dot in its name.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>* Create an HTTP-based Web site that is hosted in IIS.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>IIS-hosted Web sites can have dots in the virtual path as well as in the project file folder.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SharePoint sites<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>If you try to run an ASP.NET 4 Web site that is deployed as a child of a SharePoint Web site that contains a custom partial-trust level named <ph id="ph1">`WSS_Minimal`</ph>, you will see the following error:</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Currently, no versions of SharePoint are compatible with ASP.NET.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>As a result, you should not attempt to run an ASP.NET 4 Web site as a child of a SharePoint Web site.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>XHTML 1.1 standards<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>To enable XHTML 1.1 compliance for new Web sites, the ASP.NET controls in the .NET Framework 4 will generate XHTML 1.1 compliant HTML.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This rendering is enabled using the following option in the Web.config file inside the <ph id="ph1">`&lt;system.Web&gt;`</ph> element:</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>This option is set by default to 4.0.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Web projects that are upgraded from Visual Studio 2008 have the 3.5 setting enabled for compatibility.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Core</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>General features</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CardSpace<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Windows CardSpace is no longer included in the .NET Framework; it is provided separately.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Download Windows CardSpace from the <bpt id="p1">[</bpt>Microsoft Download Center<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=199868)</ept>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Configuration files<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Corrections have been made in how the .NET Framework accesses application configuration files.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>If your application configuration file is named <bpt id="p1">*</bpt>application-name.config<ept id="p1">*</ept>, rename it to <bpt id="p2">*</bpt>application-name.exe.config<ept id="p2">*</ept>. For example, rename <bpt id="p3">*</bpt>MyApp.config<ept id="p3">*</ept> to <bpt id="p4">*</bpt>MyApp.exe.config<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>C# code compiler<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compiler`</ph>, <ph id="ph2">`CompilerError`</ph>, and <ph id="ph3">`ErrorLevel`</ph> classes that were in the <ph id="ph4">&lt;xref:Microsoft.CSharp&gt;</ph> namespace are no longer available, and their assembly (cscompmgd.dll) is no longer included in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class and other classes in the <ph id="ph2">&lt;xref:System.CodeDom.Compiler&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the CodeDOM<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y2k85ax6%28v=vs.100%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hosting<ept id="p1">**</ept> (unmanaged API)</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To improve hosting capabilities, some of the hosting activation APIs have been deprecated.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>In-process side-by-side execution features enable an application to load and start multiple versions of the .NET Framework in the same process.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For example, you can run applications that load add-ins (or components) that are based on the .NET Framework 2.0 SP1 and add-ins that are based on the .NET Framework 4 in the same process.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Older components continue to use the older .NET Framework version, and new components use the new .NET Framework version.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Use the configurations described in <bpt id="p1">[</bpt>In-Process Side-by-Side Execution<ept id="p1">](../../../docs/framework/deployment/in-process-side-by-side-execution.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New security model<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The code access security (CAS) policy has been turned off and replaced with a simplified model, as described in <bpt id="p1">[</bpt>Security Changes in the .NET Framework 4<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd233103%28v=vs.100%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Modifications may be required if you depend on CAS in your applications.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security Policy Compatibility and Migration<ept id="p1">](../../../docs/framework/misc/code-access-security-policy-compatibility-and-migration.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Date and time</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Namespace: <ph id="ph1">&lt;xref:System&gt;</ph>; assembly: mscorlib (in mscorlib.dll)</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Daylight savings<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>To be consistent with the system clock, time properties (such as <ph id="ph1">&lt;xref:System.TimeZoneInfo.Local&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.Now&gt;</ph>) now use operating system rules instead of other .NET Framework data for daylight saving time operations.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Formatting strings<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>To support culture-sensitive formatting, the <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> structure includes new overloads of the <ph id="ph2">`ToString`</ph>, <ph id="ph3">`Parse`</ph>, and <ph id="ph4">`TryParse`</ph> methods in addition to new <ph id="ph5">`ParseExact`</ph> and <ph id="ph6">`TryParseExact`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Globalization</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For a list of new neutral and specific cultures, see <bpt id="p1">[</bpt>What's New in Globalization and Localization<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd997383%28v=vs.100%29)</ept>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Namespace: <ph id="ph1">&lt;xref:System.Globalization&gt;</ph>; assembly: mscorlib (in mscorlib.dll)</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Culture names<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The following name changes affect the German, Divehi, and African cultures:</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName&gt;</ph>: The currency name for the German (Switizerland) (de-CH) culture has changed from "sFr."</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>to "Fr.".</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.LongDatePattern&gt;</ph>: The long date pattern for the Divehi (Maldives) (dv-MV) culture has changed from "dd/MMMM/yyyy" to "dd/MM/yyyy".</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.PMDesignator&gt;</ph>: The P.M.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>designator of the Afrikaans (South Africa) (af-ZA) culture has changed from "nm" to "PM".</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Note culture name changes.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LCID parameter<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>To be consistent with expected behavior in automation server settings, the CLR no longer passes the current culture for the <ph id="ph1">`LCID`</ph> parameter to unmanaged COM-based applications.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Instead, it passes 1033 (en-us) for the culture.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>No modifications necessary except for native applications that require a specified culture.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Obsolete culture types<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureTypes&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureTypes&gt;</ph> culture types are now obsolete.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>For backward compatibility, <ph id="ph1">&lt;xref:System.Globalization.CultureTypes&gt;</ph> now returns neutral and specific cultures that were included with the previous .NET Framework, and <ph id="ph2">&lt;xref:System.Globalization.CultureTypes&gt;</ph> now returns an empty list.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Use other values of the <ph id="ph1">&lt;xref:System.Globalization.CultureTypes&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Retrieving culture<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Beginning with Windows 7, the .NET Framework 4 retrieves culture information from the operating system instead of storing the data itself.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>In addition, the .NET Framework synchronizes with Windows for sorting and casing data.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Unicode 5.1 standards<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The .NET Framework now supports all Unicode 5.1 characters -- an addition of approximately 1400 characters.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The additional characters include new symbols, arrows, diacritics, punctuation, mathematical symbols, CJK strokes and ideographs, additional Malayalam and Telugu numeric characters, and various Myanmar, Latin, Arabic, Greek, Mongolian, and Cyrillic characters.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The following new scripts are supported with Unicode 5.1: Sundanese, Lepcha, Ol Chiki, Vai, Saurashtra, Kayah Li, Rejang, Gurmukhi, Odia, Tamil, Telugu, and Malayalam characters and Cham.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.ExceptionServices&gt;</ph>; assembly: mscorlib (in mscorlib.dll)</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Exceptions for corrupted process state<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The CLR no longer delivers exceptions for corrupted process state to exception handlers in managed code.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>These exceptions indicate that the state of a process has been corrupted.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>We do not recommend that you run your application in this state.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> and the entry <bpt id="p1">[</bpt>Handling Corrupted State Exceptions<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=179681)</ept> in the CLR Inside Out blog.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Execution engine exceptions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ExecutionEngineException&gt;</ph> is now obsolete, because a catchable exception will allow an unstable process to continue to run.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>This change improves predictability and reliability in the runtime.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Use an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> to signal the condition.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Reflection</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Namespace: <ph id="ph1">&lt;xref:System.Reflection&gt;</ph>; assembly: mscorlib (in mscorlib.dll)</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Assembly hash algorithms<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.HashAlgorithm&gt;</ph> property now returns <ph id="ph2">&lt;xref:System.Configuration.Assemblies.AssemblyHashAlgorithm&gt;</ph>, because the runtime does not know the hash algorithm of the referenced assembly when the assembly is not loaded.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>(This refers to using the property on a referenced assembly such as that returned by the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A&gt;</ph> method.)</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Assembly loading<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>To prevent redundant loading of assemblies and to save virtual address space, the CLR now loads assemblies by using only the Win32 <ph id="ph1">`MapViewOfFile`</ph> function.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>It no longer also calls the <ph id="ph1">`LoadLibrary`</ph> function.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>This change affects diagnostic applications in the following ways:</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>* A <ph id="ph1">&lt;xref:System.Diagnostics.ProcessModuleCollection&gt;</ph> will no longer contain any modules from a class library (.dll file), as obtained from a call to <ph id="ph2">`Process.GetCurrentProcess().Modules`</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>* Win32 applications that use the <ph id="ph1">`EnumProcessModules`</ph> function will not see all managed modules listed.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Declaring type<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Type.DeclaringType&gt;</ph> property now correctly returns null when the type does not have a declaring type.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Delegates<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>A delegate now throws an <ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph> instead of a <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> when a null value is passed to the delegate's constructor.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Ensure that any exception handling catches <ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Global assembly cache location change<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>For .NET Framework 4 assemblies, the global assembly cache has been moved from the Windows directory (%WINDIR%) to the Microsoft.Net subdirectory (<bpt id="p1">*</bpt>%WINDIR%<ph id="ph1">\\</ph>Microsoft.Net<ept id="p1">*</ept>).</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Assemblies from earlier versions remain in the older directory.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The unmanaged <bpt id="p1">[</bpt>ASM_CACHE_FLAGS<ept id="p1">](../unmanaged-api/fusion/asm-cache-flags-enumeration.md)</ept> enumeration contains the new <ph id="ph1">`ASM_CACHE_ROOT_EX`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This flag gets the cache location for .NET Framework 4 assemblies, which can be obtained by the <bpt id="p1">[</bpt>GetCachePath<ept id="p1">](../unmanaged-api/fusion/getcachepath-function.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>None, assuming that applications do not use explicit paths to assemblies, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Global assembly cache tool<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Gacutil.exe (Global Assembly Cache Tool)<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ex0ss12c%28v=vs.100%29)</ept> no longer supports the shell plugin viewer.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Interoperability</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Namespace: <ph id="ph1">&lt;xref:System.Runtime.InteropServices&gt;</ph>; assembly: mscorlib (in mscorlib.dll)</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Buffer length<ept id="p1">**</ept> (unmanaged API)</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>To save memory, the functionality for the <ph id="ph1">`pBufferLengthOffset`</ph> parameter for the <bpt id="p1">[</bpt>ICorProfilerInfo2::GetStringLayout<ept id="p1">](../unmanaged-api/profiling/icorprofilerinfo2-getstringlayout-method.md)</ept> method has been changed to match the <ph id="ph2">`pStringLengthOffset`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Both parameters now point to the offset location of the string's length.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Buffer length has been removed from the representation of the string class.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Remove any dependency on the buffer length.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JIT debugging<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To simplify registration for just-in-time (JIT) debugging, the .NET Framework debugger now uses only the AeDebug registry key, which controls the JIT debugging behavior for native code.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>This change results in the following:</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>* You can no longer register two different debuggers for managed and native code.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>* You can no longer start the debugger automatically for a non-interactive process, but you can prompt the user for an interactive process.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>* You are no longer notified when the debugger fails to start, or when there is no registered debugger that should be started.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>* Auto-launch policies that depend on the interactivity of the application are no longer supported.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Adjust debugging operations as required.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platform invoke<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>To improve performance in interoperability with unmanaged code, incorrect calling conventions in a platform invoke now cause the application to fail.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>In previous versions, the marshaling layer resolved these errors up the stack.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Debugging your applications in Microsoft Visual Studio alerts you to these errors so you can correct them.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>If you have binaries that cannot be updated, you can include the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>NetFx40_PInvokeStackResilience&gt;<ept id="p1">](../configure-apps/file-schema/runtime/netfx40-pinvokestackresilience-element.md)</ept> element in your application's configuration file to enable calling errors to be resolved up the stack as in earlier versions.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>However, this may affect the performance of your application.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Removed interfaces<ept id="p1">**</ept> (unmanaged API)</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>To avoid developer confusion, the following interfaces were removed, because they did not provide any useful run-time scenarios, and the CLR did not provide or accept any implementations:</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><bpt id="p1">**</bpt>INativeImageINativeImageDependency<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><bpt id="p1">**</bpt>INativeImageInstallInfo<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><bpt id="p1">**</bpt>INativeImageEvaluate<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><bpt id="p1">**</bpt>INativeImageConverter<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><bpt id="p1">**</bpt>ICorModule<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><ph id="ph1">* </ph><bpt id="p1">**</bpt>IMetaDataConverter<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Data</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>This section describes migration issues for using data sets and SQL clients, the Entity Framework, LINQ to SQL, and WCF Data Servers (formerly known as ADO.NET Data Services).</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>DataSet and SQL Client</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The following table describes improvements to features that previously had limitations or other issues.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Data&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient&gt;</ph>; assemblies: System.Data (in System.Data.dll), System.Data.Entity (in System.Data.Entity.dll)</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>POCO Scenarios<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph> interface has new methods to improve its usability in Plain Old CLR Object (POCO) scenarios.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>These new methods take an <ph id="ph1">&lt;xref:System.Object&gt;</ph> instead of an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.IEntityWithRelationships&gt;</ph> entity as a parameter.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Editing Rows<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IList.IndexOf%2A&gt;</ph> method, as implemented by the <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> class, now correctly returns the value of a row that is being edited, instead of returning -1.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Events<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowView.PropertyChanged&gt;</ph> event is now raised when a row is in a modified state and the <ph id="ph2">&lt;xref:System.Data.DataRow.RejectChanges%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>This change makes it easier to create UI controls that expose the contents of a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Exceptions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> method now throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> when a connection is not set or open instead of a <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mapping Views<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Query view mapping errors are now caught at design time instead of throwing a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> at run time.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Mapping validation now catches the error in which two association sets in Conceptual Schema (CSDL) are mapped to the same column.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Transactions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>If an application tries to execute a statement on a connection after a transaction has been completed (including aborted or rolled back), an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is now thrown.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Previous versions did not throw an exception and let you execute additional commands even if a transaction was aborted.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Entity Framework</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The following table describes improvements to features that previously had limitations or other issues.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Data&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Objects&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses&gt;</ph>; assembly: System.Data.Entity (in System.Data.Entity.dll)</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Entity objects<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>There is now parity between the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Detach%2A&gt;</ph> method and the state of the entity object when the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>This improved consistency prevents unexpected exceptions from being thrown.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Entity SQL<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Rules have been improved for identifier resolutions in Entity SQL.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The Entity SQL parser has improved logic for resolving multipart identifiers.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Structural annotations<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The Entity Framework now recognizes structural annotations.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Queries<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The following improvements were made in queries:</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>* A <ph id="ph1">`GroupBy`</ph> query using a null key over an empty collection will not return any rows, regardless if there are any additional selects in the query.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>* Generated SQL in LINQ and Entity-SQL queries now treat string parameters as non-Unicode values by default.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>LINQ to SQL</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The following table describes improvements to features that previously had limitations or other issues.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Namespace: <ph id="ph1">&lt;xref:System.Data.Linq&gt;</ph>; assembly: System.Data.Linq (in System.Data.Linq.dll)</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Events<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> collection now raises the <ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601.ListChanged&gt;</ph> event for add and remove operations if the <ph id="ph3">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> is unloaded, in addition to raising the event when the collection is loaded.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Queries<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Skip(0)`</ph> is no longer ignored in LINQ to SQL queries.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>As a result, queries that have this method might behave differently.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>For example in some cases, an <ph id="ph1">`OrderBy`</ph> clause is required with <ph id="ph2">`Skip(0)`</ph>, and the query will now throw a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> exception if the <ph id="ph4">`OrderBy`</ph> clause was not included.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>WCF Data Services</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The following table describes improvements to features that previously had limitations or other issues.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Data.Services&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Services.Client&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Services.Common&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.Services.Providers&gt;</ph>; assemblies: System.Data.Services (in System.Data.Services.dll), System.Data.Services.Client (in System.Data.Services.Client.dll)</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Batched Binary Content<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>WCF Data Services now supports batched binary content in requests and responses.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Change interceptors<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Change interceptors are now executed for a delete request.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>A change interceptor is a method that runs every time a request is received by the server to modify an entity in the entity set.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>It runs before the incoming request is executed.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The change interceptor provides access to the entity that is being changed and the operation that is being performed on it.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Exceptions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The following conditions now throw more useful exceptions instead of a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>* A <ph id="ph1">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> when a call to a data service times out.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>* A <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceRequestException&gt;</ph> when a bad request is made to a data service.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>In your applications, you should change exception handling to catch the new exceptions.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Headers<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The following improvements were made to headers:</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>* WCF Data Services now correctly rejects an <ph id="ph1">`eTag`</ph> header that has an unspecified value.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>* WCF Data Services now returns an error and does not execute the request for a delete request to a link when an <ph id="ph1">`if-*`</ph> header is in the request.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>* WCF Data Services now returns an error to the client in the format (Atom, JSON) that the client specified in the Accept header.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>JSON Reader<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The JavaScript Object Notation (JSON) reader now correctly returns an error when it reads the single backslash ("<ph id="ph1">\\</ph>") escape character, when it processes JSON payloads sent to a WCF Data Service.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Merges<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The following improvements were made to the <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> enumeration:</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> merge option no longer modifies the entity on the client as a result of any subsequent response from a data service.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> option is now consistent between dynamic SQL and stored procedure-based updates.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Requests<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.DataService%601.OnStartProcessingRequest%2A&gt;</ph> method is now called before a request to data services is processed.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>This enables the request to work correctly for <ph id="ph1">&lt;xref:System.Data.Services.Providers.ServiceOperation&gt;</ph> services.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Streams<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>WCF Data Services no longer closes the underlying stream for read and write operations.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>URIs<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The escaping of URIs by WCF Data Services client has been corrected.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Windows Communication Foundation (WCF)</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The following table describes improvements to features that previously had limitations or other issues.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Configuration files<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>To enable inheritance of behaviors through the configuration file hierarchy, WCF now supports merging across configuration files.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The configuration inheritance model is now expanded to let users define behaviors that will be applied to all the services that are running on the computer.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>You may encounter behavioral changes if there are behaviors with the same name at different levels of the hierarchy.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Service hosting<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>You can no longer specify the <ph id="ph1">`&lt;serviceHostingEnvironment&gt;`</ph> configuration element at the service level by adding the attribute <ph id="ph2">`allowDefinition="MachineToApplication"`</ph> to the element definition.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Specifying the <ph id="ph1">`&lt;serviceHostingEnvironment&gt;`</ph> element at the service level is technically incorrect and causes inconsistent behavior.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Windows Presentation Foundation (WPF)</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Applications</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Windows&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls&gt;</ph>; assembly: PresentationFramework (in PresentationFramework.dll)</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Exception handling<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>To enable errors to be detected earlier, WPF throws a <ph id="ph1">&lt;xref:System.Reflection.TargetInvocationException&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Exception.InnerException&gt;</ph> property to critical exceptions, such as <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph>, <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph>, <ph id="ph5">&lt;xref:System.StackOverflowException&gt;</ph>, and <ph id="ph6">&lt;xref:System.Security.SecurityException&gt;</ph>, instead of catching the original exception.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Linked resources<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>To make linking easier, resource files (such as images) that are located in a location other than the project's folder structure use the resource file's full path instead of just its file name as the resource ID when the application is built.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The application will be able to locate the files at run time.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Partial-trust applications<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>For security considerations, Windows-based applications that run in partial trust and contain a <ph id="ph1">&lt;xref:System.Windows.Controls.WebBrowser&gt;</ph> control or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph> control that contains HTML will throw a <ph id="ph3">&lt;xref:System.Security.SecurityException&gt;</ph> when the control is created.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Browser applications will throw an exception and display a message if all of the following conditions are met:</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>* The application is running in Firefox.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>* The application is running in partial trust in the Internet zone from non-trusted sites.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>* The application contains a <ph id="ph1">&lt;xref:System.Windows.Controls.WebBrowser&gt;</ph> control or a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph> control that contains HTML.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Note that applications that run from trusted sites or from the intranet zone will not be affected.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>In your browser applications, you can ease this change by doing one of the following:</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>* Run the browser application in full trust.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>* Have customers add the application's site to the trusted sites zone.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>* Have customers run the application in Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resource dictionaries<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>To improve theme-level resource dictionaries and prevent them from changing, freezable resources that are defined in a resource dictionary and merged into a theme-level dictionary are now always marked as frozen and are immutable.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>This is the expected behavior for freezable resources.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Applications that modify a resource that is defined in a theme-level merged dictionary should clone the resource and modify the cloned copy.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Alternatively, the resource can be marked <ph id="ph1">`x:Shared="false"`</ph> so that the <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> creates a new copy every time the resource is queried.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows 7<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>To make WPF applications work better on Windows 7, the following improvements were made to correct the behavior of a window:</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>* Dock and gesture states now work as expected based on user interactions.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>* The taskbar commands <bpt id="p1">**</bpt>Cascade windows, Show windows stacked<ept id="p1">**</ept>, and <bpt id="p2">**</bpt>Show windows side-by-side<ept id="p2">**</ept> now have the correct behavior and update the appropriate properties.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">`Top`</ph>, <ph id="ph2">`Left`</ph>, <ph id="ph3">`Width`</ph>, and <ph id="ph4">`Height`</ph> properties for a maximized or minimized window now contain the correct restore location of the window instead of other values, depending on the monitor.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows style and transparency<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown if you try to set <ph id="ph2">&lt;xref:System.Windows.Window.WindowStyle&gt;</ph> to a value other than <ph id="ph3">&lt;xref:System.Windows.WindowStyle&gt;</ph> when <ph id="ph4">&lt;xref:System.Windows.Window.AllowsTransparency&gt;</ph> is <ph id="ph5">`true`</ph> and <ph id="ph6">&lt;xref:System.Windows.WindowState&gt;</ph> is <ph id="ph7">&lt;xref:System.Windows.WindowState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>If you must change the <ph id="ph1">&lt;xref:System.Windows.Window.WindowStyle&gt;</ph> when <ph id="ph2">&lt;xref:System.Windows.Window.AllowsTransparency&gt;</ph> is <ph id="ph3">`true`</ph>, you can call the Win32 <ph id="ph4">`SetWindowLongPtr`</ph> function.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>XPS Viewer<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>WPF does not include the Microsoft XML Paper Specification Essentials Pack (XPSEP).</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>XPSEP is included with Windows 7 and Windows Vista.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>On a computer that is running Windows XP without the .NET Framework 3.5 SP1 installed, printing by using a WPF API other than those in <ph id="ph1">&lt;xref:System.Windows.Controls.PrintDialog&gt;</ph> will rely on the WINSPOOL.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Some printer capabilities will not be reported and some printer settings will not be applied during printing.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>If needed, install the <bpt id="p1">[</bpt>Microsoft XML Paper Specification Essentials Pack<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=178895)</ept>.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Controls</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Windows&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input&gt;</ph>; assemblies: PresentationFramework (in PresentationFramework.dll), PresentationCore (in PresentationCore.dll), WindowsBase (in WindowsBase.dll)</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dialog boxes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>To improve reliability, the <ph id="ph1">&lt;xref:Microsoft.Win32.CommonDialog.ShowDialog%2A&gt;</ph> method is called on the same thread that created the <ph id="ph2">&lt;xref:Microsoft.Win32.FileDialog&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Be sure to create a <ph id="ph1">&lt;xref:Microsoft.Win32.FileDialog&gt;</ph> control and call the <ph id="ph2">&lt;xref:Microsoft.Win32.CommonDialog.ShowDialog%2A&gt;</ph> method on the same thread.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Floating windows<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>To fix focus restoration logic that incorrectly keeps reactivating a floating window (making it appear like a modal dialog box), focus restoration is now prevented if the candidate is not a child of the window.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Items in collections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>When an item is moved or added to an underlying collection, it appears in the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> in the same relative location if the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> is not sorted.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>This provides consistency between the item's position in the collection and in the associated <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView.IndexOf%2A&gt;</ph> method to find the location of an item in a <ph id="ph3">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> instead of relying on a fixed location of an item.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Layouts<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>To eliminate unnecessary re-layouts, changing the <ph id="ph1">&lt;xref:System.Windows.Controls.Page.ShowsNavigationUI&gt;</ph> no longer invalidates layout or causes another layout pass.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>If you expect that changing <ph id="ph1">&lt;xref:System.Windows.Controls.Page.ShowsNavigationUI&gt;</ph> will cause another layout pass, call <ph id="ph2">&lt;xref:System.Windows.UIElement.InvalidateVisual%2A&gt;</ph> after you set the property.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Menus<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>To enable ClearType text in menu pop-ups, modifications were made to the <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> class and to the <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> control and other controls.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Applications should not rely on the visual structure of control templates.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Only named parts of a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> are part of the public contract.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>If an application must find a certain object in a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, search the visual tree for a specific type instead of relying on a fixed location of an object in the tree.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Navigating<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph> directly navigates to a location, the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator&gt;</ph> property is <ph id="ph3">`true`</ph> after the initial navigation.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>This change prevents additional events from being raised during startup scenarios.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Pop-ups<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback&gt;</ph> delegate can now be called multiple times during a layout pass instead of only once.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback&gt;</ph> delegate calculates the position of a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> based on its previous position, recalculate the position only if the values of the <ph id="ph3">`popupSize`</ph>, <ph id="ph4">`targetSize`</ph>, or <ph id="ph5">`offset`</ph> parameters change.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Property values<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetCurrentValue%2A&gt;</ph> method now lets you set a property to an effective value, although it continues to respects any binding, style, or trigger that affects the property.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Control authors should use <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetCurrentValue%2A&gt;</ph> whenever the property value changes as a side-effect of some other action, including user manipulation.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Text boxes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>For security considerations, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Copy%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt;</ph> methods silently fail when they are called in partial trust.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>In addition, programmatic execution of the <ph id="ph1">&lt;xref:System.Windows.Input.ApplicationCommands.Copy&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands.Cut&gt;</ph> property on a control that inherits from <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase&gt;</ph> will be blocked in partial trust.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>However, user-initiated copy and cut commands, such as clicking a button whose <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command&gt;</ph> property is bound to one of these commands, will work.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Standard copy and cut through keyboard shortcuts and the context menu will still work as before in partial trust.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Bind the <ph id="ph1">&lt;xref:System.Windows.Input.ApplicationCommands.Copy&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands.Cut&gt;</ph> command to a user-initiated action, such as clicking a button.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Graphics</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Windows&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Effects&gt;</ph>; assemblies: PresentationFramework (in PresentationFramework.dll), PresentationCore (in PresentationCore.dll), WindowsBase (in WindowsBase.dll)</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bitmap effects<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>To improve performance, the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> class and the classes that inherit from the <ph id="ph2">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> class, although still present, are disabled.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The effect will render by using the hardware-accelerated rendering pipeline if the following conditions are true:</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>* The application uses a <ph id="ph1">&lt;xref:System.Windows.Media.Effects.DropShadowBitmapEffect&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Media.Effects.BlurBitmapEffect&gt;</ph> that has a radius property set less than 100 DIU.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>* The video card on the computer that runs the application supports pixel shader 2.0.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>If these conditions are not met, a <ph id="ph1">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> object will have no effect.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Also, Visual Studio produces a compiler warning when it encounters the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> object or a subclass.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext.PushEffect%2A&gt;</ph> method is marked obsolete.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Discontinue using the legacy <ph id="ph1">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> and derived classes and instead use the new classes derived from <ph id="ph2">&lt;xref:System.Windows.Media.Effects.Effect&gt;</ph>: <ph id="ph3">&lt;xref:System.Windows.Media.Effects.BlurEffect&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Effects.DropShadowEffect&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Media.Effects.ShaderEffect&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>You can also create your own effects by inheriting from the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bitmap frames<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The cloned <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt;</ph> objects now receive the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DownloadProgress&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DownloadCompleted&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DownloadFailed&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>This enables images that are downloaded from the Web and applied to the <ph id="ph1">&lt;xref:System.Windows.Controls.Image&gt;</ph> control through a <ph id="ph2">&lt;xref:System.Windows.Style&gt;</ph> to work correctly.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>You will see a change in behavior only if all of the following statements are true:</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>* You subscribe to the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DownloadProgress&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DownloadCompleted&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DownloadFailed&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>* The source of the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt;</ph> is from the Web.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>* The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt;</ph> is cloned while the download is still in progress.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Check the sender in the event handler and take action only if the sender is the original <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Decoding images<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>To prevent an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> from not being handled when images may not decode, the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;</ph> class will raise the <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DecodeFailed&gt;</ph> event when it does not decode an image.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Remove any exception handling for <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>, and use the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapSource.DecodeFailed&gt;</ph> event to check for decode failure.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Input</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Windows&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input&gt;</ph>; assemblies: PresentationFramework (in PresentationFramework.dll), PresentationCore (in PresentationCore.dll), WindowsBase (in WindowsBase.dll)</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Binding command instances<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>To provide a mechanism to bind View-Model-based command instances to View-based input gestures, the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class now inherits from <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> instead of <ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The following properties are now dependency properties:</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>This change results in the following:</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>* An <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> object is now frozen when it is registered instead of remaining mutable.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>* You cannot access instance-level <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> objects from multiple threads, due to the restrictions of the <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>* You cannot mutate class-level input bindings after their registration, due to the restrictions of the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>* You cannot specify input bindings on command instances that are created in a View-Model.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Create separate instances of an <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class on separate threads if bindings are to be mutable, or freeze them otherwise.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Do not mutate a class-level static <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> after it has been registered.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Browser applications<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>WPF Browser applications (.XBAP) now process key events just like stand-alone WPF applications so that objects receive routed key events in the correct order.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dead key combinations<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>WPF obfuscates dead keys, which produce no visible character, but instead indicates that the key is to be combined with the next letter key to produce one character.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The key input events, such as the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyDownEvent&gt;</ph> event, report when a key is a dead key by setting the <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.Key&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Windows.Input.Key&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>This is usually expected behavior because applications usually do not intend to respond to keyboard input that creates a combined character.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Applications that expect to read keys that were part of combined characters can get the now obfuscated key by using the <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.DeadCharProcessedKey&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Focus manager<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)?displayProperty=nameWithType&gt;</ph> method is passed an element that has the <bpt id="p1">[</bpt>IsFocusScope<ept id="p1">](xref:System.Windows.Input.FocusManager.IsFocusScope%2A)</ept> attached property set to <ph id="ph2">`true`</ph>, the method returns an element that is the last keyboard-focused element within that focus scope if and only if the returned element belongs to the same <ph id="ph3">&lt;xref:System.Windows.PresentationSource&gt;</ph> object as the element that is passed to the method.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>UI Automation</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Namespace: <ph id="ph1">&lt;xref:System.Windows&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.Peers&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Automation.Provider&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Data&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Input&gt;</ph>; assemblies: PresentationFramework (in PresentationFramework.dll), PresentationCore (in PresentationCore.dll), UIAutomationProvider (in UIAutomationProvider.dll), WindowsBase (in WindowsBase.dll)</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Class hierarchy of views<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.TreeViewAutomationPeer&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.TreeViewItemAutomationPeer&gt;</ph> classes inherit from <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.ItemsControlAutomationPeer&gt;</ph> instead of <ph id="ph4">&lt;xref:System.Windows.Automation.Peers.FrameworkElementAutomationPeer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>If you inherit from the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.TreeViewItemAutomationPeer&gt;</ph> classes and override the <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetChildrenCore%2A&gt;</ph> method, consider returning an object that inherits from the new <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Containers off screen<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>To fix an incorrect return value, the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.UIElementAutomationPeer.IsOffscreenCore%2A&gt;</ph> method now correctly returns <ph id="ph2">`false`</ph> for item containers that are scrolled out of view.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Also, the value of the method is not affected by occlusion by other windows, or by whether the element is visible on a specific monitor.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Menus and child objects<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>To enable UI automation of menus that contain children other than <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetChildrenCore%2A&gt;</ph> method now returns the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> object of a child <ph id="ph4">&lt;xref:System.Windows.UIElement&gt;</ph> object, instead of a <ph id="ph5">&lt;xref:System.Windows.Automation.Peers.MenuItemAutomationPeer&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New interfaces and assembly<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>To enable new features for UI automation, the following interfaces were added:</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Any project that builds WPF automation peers must add an explicit reference to UIAutomationProvider.dll.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Thumbs<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore%2A&gt;</ph> method returns a value instead of null.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Therefore, controls such as <ph id="ph1">&lt;xref:System.Windows.Controls.GridSplitter&gt;</ph> that inherit from the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> class will report a name to UI Automation.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Virtualized elements<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>To improve performance, the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.UIElementAutomationPeer.GetChildrenCore%2A&gt;</ph> method returns only the child objects that are actually in the visual tree, instead of all child objects, regardless of whether they are virtualized.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Automation.ItemContainerPattern&gt;</ph> to iterate over all items of an <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.ItemsControlAutomationPeer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>XAML</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Windows&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Markup&gt;</ph>; assemblies: PresentationFramework (in PresentationFramework.dll), PresentationCore (in PresentationCore.dll), WindowsBase (in WindowsBase.dll)</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Recommended changes</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Markup extension<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>WPF now correctly always uses the value from the <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method instead of returning the <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> object in certain cases when a markup extension is used to set a property or to create an item in a collection.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>A markup extension might return itself in some cases.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>If your application accesses a resource that returned a <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> object in earlier versions, reference the object that is returned from <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>, instead of the <ph id="ph3">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parsing attributes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>Attributes in XAML can now have only one period.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>For example, the following are valid:</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;Button Background="Red"/&gt;`</ph> (no periods)</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;Button Button.Background = "Red"/&gt;`</ph> (one period)</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The following is no longer valid:</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;Button Control.Button.Background = "Red"/&gt;`</ph> (more than one period)</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Correct XAML attributes that have more than one period.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>The rows in this table describe improvements to features that previously had limitations or other issues.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Schema and transforms</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Xml.Linq&gt;</ph>; <ph id="ph2">&lt;xref:System.Xml.Schema&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XPath&gt;</ph>; assemblies: System.Xml (in System.Xml.dll), System.Xml.Linq (in System.Xml.Linq.dll)</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Chameleon schemas<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>To prevent data corruption, chameleon schemas are now cloned correctly when they are included with multiple schemas.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Chameleon schemas are schemas that do not have a target namespace, and when they are included in another XSD, they take on the target namespace of the importing schema.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>They are often used to include common types into a schema.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ID functions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The XSLT <bpt id="p1">[</bpt>id function<ept id="p1">](/sql/xquery/functions-on-sequences-id)</ept> now returns the correct value instead of null when an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object is passed to an XLST.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>If the user created an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object from a LINQ to XML class by using the <ph id="ph2">&lt;xref:System.Xml.Linq.XNode.CreateReader%2A&gt;</ph> method, and this <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object was passed to an XSLT, any instances of the <ph id="ph4">`id`</ph> function in the XSLT previously returned null.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>This is not an allowed return value for the <ph id="ph1">`id`</ph> function.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace attribute<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>To prevent data corruption, an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object now returns the local name of the <ph id="ph2">`x:xmlns`</ph> attribute correctly.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace declarations<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object on a sub-tree no longer creates duplicate namespace declarations within one XML element.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Schema validation<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>To prevent erroneous schema validation, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class allows for XSD schemas to be compiled correctly and consistently.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>These schemas can include other schemas; for example, <ph id="ph1">`A.xsd`</ph> can include <ph id="ph2">`B.xsd`</ph>, which can include <ph id="ph3">`C.xsd`</ph>.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Compiling any one of these causes this graph of dependencies to be traversed.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Script functions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>function-available function<ept id="p1">](https://msdn.microsoft.com/library/ms256124(v=vs.110).aspx)</ept> no longer incorrectly returns <ph id="ph1">`false`</ph> when the function is actually available.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>URIs<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> method now returns the correct BaseURI in LINQ queries.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Validation</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Xml.Linq&gt;</ph>; <ph id="ph2">&lt;xref:System.Xml.Schema&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XPath&gt;</ph>; assemblies: System.Xml (in System.Xml.dll), System.Xml.Linq (in System.Xml.Linq.dll)</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace resolvers<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method no longer ignores the <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> resolver passed to it.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>In previous versions, the specified namespace resolver was ignored, and the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> was used instead.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>White space<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>To prevent data loss when you are creating a reader, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method no longer discards significant white space.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>XML validation recognizes mixed-content mode, where text can be intermixed with XML markup.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>In mixed mode, all white space is significant and should be reported.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Writing</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Namespaces: <ph id="ph1">&lt;xref:System.Xml.Linq&gt;</ph>; <ph id="ph2">&lt;xref:System.Xml.Schema&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XPath&gt;</ph>; assemblies: System.Xml (in System.Xml.dll), System.Xml.Linq (in System.Xml.Linq.dll)</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Differences from 3.5 SP1</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Entity references<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>To prevent data corruption, entity references are no longer entitized twice in XML attributes.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>If the user tried to write an entity into an <ph id="ph1">`xmlns`</ph> attribute or into an <ph id="ph2">`xml:lang`</ph> or <ph id="ph3">`xml:space`</ph> attribute by using the <ph id="ph4">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph> method, the entity was entitized twice in the output, therefore corrupting the data.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New line handling<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>To prevent data corruption, <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects respect the <ph id="ph2">&lt;xref:System.Xml.NewLineHandling&gt;</ph> option.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>New Types and Members in the .NET Framework 4<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ff641764%28v=vs.100%29)</ept></source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>Concepts</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration Guide to the .NET Framework 4<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ff657133%28v=vs.100%29)</ept></source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>What's New in the .NET Framework 4<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms171868%28v=vs.100%29)</ept></source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Version Compatibility in the .NET Framework<ept id="p1">](../../../docs/framework/migration-guide/version-compatibility.md)</ept></source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migrating Office Solutions to the .NET Framework 4<ept id="p1">](/visualstudio/vsto/migrating-office-solutions-to-the-dotnet-framework-4-or-later)</ept></source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Other resources</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>What's Obsolete in the .NET Framework Class Library<ept id="p1">](../whats-new/whats-obsolete.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>