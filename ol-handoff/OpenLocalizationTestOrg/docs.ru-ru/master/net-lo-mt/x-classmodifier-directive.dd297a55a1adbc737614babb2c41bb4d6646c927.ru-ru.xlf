<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddd376c4b406777a1b35c58709229abbe9294e1d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\x-classmodifier-directive.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67c35bcf2fd671302283d247a4153f8644b2d396</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0e97b6305620d4c6597c961d86d813e5c3deb6d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>x:ClassModifier Directive | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>x:ClassModifier Directive</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Modifies XAML compilation behavior when <ph id="ph1">`x:Class`</ph> is also provided.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Specifically, instead of creating a partial <ph id="ph1">`class`</ph> that has a <ph id="ph2">`Public`</ph> access level (the default), the provided <ph id="ph3">`x:Class`</ph> is created with a <ph id="ph4">`NotPublic`</ph> access level.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This behavior affects the access level for the class in the generated assemblies.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>NotPublic<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The exact string to pass to specify <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> versus <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> varies, depending on the code-behind programming language that you use.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>x:Class<ept id="p1">](../../../docs/framework/xaml-services/x-class-directive.md)</ept> must also be provided on the same element, and that element must be the root element in a page.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\[</ph>MS-XAML<ph id="ph2">\]</ph> Section 4.3.1.8<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=114525)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`x:ClassModifier`</ph> in .NET Framework XAML Services usage varies by programming language.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The string to use depends on how each language implements its <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> and the type converters it returns to define the meanings for <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph>, and whether that language is case sensitive.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, the string to pass to designate <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is <ph id="ph3">`internal`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_visualbnet](../../../includes/tla2sharptla-visualbnet-md.md)]</ph>, the string to pass to designate <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is <ph id="ph3">`Friend`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)]</ph>, no targets exist that support compiling XAML; therefore, the value to pass is unspecified.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also specify <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> (<ph id="ph2">`public`</ph> in <ph id="ph3">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, <ph id="ph4">`Public`</ph> in <ph id="ph5">[!INCLUDE[TLA2#tla_visualb](../../../includes/tla2sharptla-visualb-md.md)]</ph>); however, specifying <ph id="ph6">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is infrequently done because <ph id="ph7">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is already the default behavior.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Other values with equivalent user code access-level restrictions, such as <ph id="ph1">`private`</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, are not relevant for <ph id="ph3">`x:ClassModifier`</ph> because nested class references are not supported in XAML, and therefore, the <ph id="ph4">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> modifier has the same effect.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Security Notes</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The access level as declared in <ph id="ph1">`x:ClassModifier`</ph> is still subject to interpretation by particular frameworks and their capabilities.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>WPF includes capabilities to load and instantiate types where <ph id="ph1">`x:ClassModifier`</ph> is <ph id="ph2">`internal`</ph>, if that class is referenced from a WPF resource through a pack URI reference.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on <ph id="ph1">`x:ClassModifier`</ph> to block all possible instantiation attempts.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>x:Class Directive<ept id="p1">](../../../docs/framework/xaml-services/x-class-directive.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Code-Behind and XAML in WPF<ept id="p1">](../../../docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>x:FieldModifier Directive<ept id="p1">](../../../docs/framework/xaml-services/x-fieldmodifier-directive.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Security (WPF)<ept id="p1">](../../../docs/framework/wpf/security-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](../../../docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>