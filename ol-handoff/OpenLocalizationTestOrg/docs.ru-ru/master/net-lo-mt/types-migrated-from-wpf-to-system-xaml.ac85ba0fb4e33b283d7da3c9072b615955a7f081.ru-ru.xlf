<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="types-migrated-from-wpf-to-system-xaml.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41048098b9ca55a6c2e973410960a52f8821868f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\types-migrated-from-wpf-to-system-xaml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32b2fbe66e6e8c77932502b03b3806d0fbe0e3c4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21180132aa5e5f5aff2f4a4ec515b3f57f0c5f9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Types Migrated from WPF to System.Xaml | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Types Migrated from WPF to System.Xaml</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v35_long](../../../includes/net-v35-long-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v30_long](../../../includes/net-v30-long-md.md)]</ph>, both <ph id="ph3">[!INCLUDE[TLA#tla_winclient](../../../includes/tlasharptla-winclient-md.md)]</ph> and <ph id="ph4">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph> included a XAML language implementation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Many of the public types that provided extensibility for the WPF XAML implementation existed in the WindowsBase, PresentationCore, and PresentationFramework assemblies.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Likewise, public types that provided extensibility for <ph id="ph1">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph> XAML existed in the System.Workflow.ComponentModel assembly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>, some of the XAML-related types are migrated to the System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A common .NET Framework implementation of XAML language services enables many XAML extensibility scenarios that were originally defined by a specific framework's XAML implementation but are now part of overall <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> XAML language support.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic lists the types that are migrated and discusses issues related to the migration.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Assemblies and Namespaces</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph>, the types that WPF implemented to support XAML were generally in the <ph id="ph3">&lt;xref:System.Windows.Markup&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Most of these types were in the WindowsBase assembly.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, there is a new <ph id="ph2">&lt;xref:System.Xaml&gt;</ph> namespace and a new System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Many of the types that were originally implemented for WPF XAML are now provided as extensibility points or services for any implementation of XAML.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As part of making them available for more general scenarios, the types are type-forwarded from their original WPF assembly to the System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This enables XAML extensibility scenarios without having to include the assemblies of other frameworks (such as WPF and <ph id="ph1">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For migrated types, most of the types remain in the <ph id="ph1">&lt;xref:System.Windows.Markup&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This was partially to avoid breaking CLR namespace mappings in existing implementations on a per-file basis.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Windows.Markup&gt;</ph> namespace in <ph id="ph2">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> contains a mixture of general XAML language support types (from the System.Xaml assembly) and types that are specific to the WPF XAML implementation (from WindowsBase and other WPF assemblies).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Any type that was migrated to System.Xaml, but existed previously in a WPF assembly, has type-forwarding support in version 4 of the WPF assembly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Workflow XAML Support Types</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>also provided XAML support types, and in many cases these had identical short names to a WPF equivalent.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following is a list of <ph id="ph1">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph> XAML support types:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These support types still exist in the <ph id="ph1">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph> assemblies for <ph id="ph2">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> and can still be used for specific <ph id="ph3">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph> applications; however, they should not be referenced by applications or frameworks that do not use <ph id="ph4">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>MarkupExtension</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph>, the <ph id="ph3">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> class for WPF was in the WindowsBase assembly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A parallel class for <ph id="ph1">[!INCLUDE[TLA#tla_workflow](../../../includes/tlasharptla-workflow-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.MarkupExtension&gt;</ph>, existed in the System.Workflow.ComponentModel assembly.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> class is migrated to the System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> is intended for any XAML extensibility scenario that uses .NET Framework XAML Services, not just for those that build on specific frameworks.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When possible, specific frameworks or user code in the framework should also build on the <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> class for XAML extension.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>MarkupExtension Supporting Service Classes</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph> for WPF provided several services that were available to <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> implementers and <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> implementations to support type/property usage in XAML.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These services are the following:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Another service from <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> that is related to markup extensions is the <ph id="ph2">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> was not migrated and is marked <ph id="ph2">`[Obsolete]`</ph> for <ph id="ph3">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Scenarios that previously used <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> should instead use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> attributed callbacks.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&gt;</ph> is also marked <ph id="ph2">`[Obsolete]`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>XAML Language Features</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Several XAML language features and components for WPF previously existed in the PresentationFramework assembly.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>These were implemented as a <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> subclass to expose markup extension usages in XAML markup.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, these exist in the System.Xaml assembly so that projects that do not include WPF assemblies can use these XAML language-level features.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>WPF uses these same implementations for <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>As with the other cases that are listed in this topic, the supporting types continue to exist in the <ph id="ph1">&lt;xref:System.Windows.Markup&gt;</ph> namespace to avoid breaking previous references.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following table contains a list of the XAML feature-support classes that are defined in System.Xaml.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>XAML Language Feature</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Usage</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Although System.Xaml may not have specific support classes, the general logic for processing language features for the XAML language now resides in System.Xaml and its implemented XAML readers and XAML writers.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`x:TypeArguments`</ph> is an attribute that is processed by XAML readers and XAML writers from System.Xaml implementations; it can be noted in the XAML node stream, has handling in the default (CLR-based) XAML schema context, has a XAML type-system representation, and so on.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>As a result, the reference documentation for all XAML language-level features is a subtopic for <bpt id="p1">[</bpt>XAML Services<ept id="p1">](../../../docs/framework/xaml-services/index.md)</ept> and that general area of the .NET Framework documentation set, instead of being part of the WPF documentation set as a subtopic of <bpt id="p2">[</bpt>Advanced (Windows Presentation Foundation)<ept id="p2">](../../../docs/framework/wpf/advanced/index.md)</ept> (as is still the case in 3.5 documentation sets).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>ValueSerializer and Supporting Classes</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> class supports type conversion to a string, particularly for XAML serialization cases where serialization may require multiple modes or nodes in the output.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph>, the <ph id="ph3">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> for WPF was in the WindowsBase assembly.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> class is in System.Xaml and is intended for any XAML extensibility scenario, not just for those that build on WPF.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IValueSerializerContext&gt;</ph> (a supporting service) and <ph id="ph2">&lt;xref:System.Windows.Markup.DateTimeValueSerializer&gt;</ph> (a specific subclass) are also migrated to System.Xaml.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>XAML-Related Attributes</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>WPF XAML included several attributes that can be applied to CLR types to indicate something about their XAML behavior.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following is a list of the attributes that existed in WPF assemblies in <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These attributes are migrated to System.Xaml in <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Miscellaneous Classes</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.IComponentConnector&gt;</ph> interface existed in WindowsBase in the <ph id="ph2">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and <ph id="ph3">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph>, but exists in System.Xaml in <ph id="ph4">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IComponentConnector&gt;</ph> is primarily intended for tooling support and XAML markup compilers.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> interface existed in WindowsBase in the <ph id="ph2">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and <ph id="ph3">[!INCLUDE[net_v30_short](../../../includes/net-v30-short-md.md)]</ph>, but exists in System.Xaml in <ph id="ph4">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> defines basic operations for a XAML namescope.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>XAML-related Classes with Shared Names that Exist in WPF and System.Xaml</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following classes exist in both the WPF assemblies and the System.Xaml assembly in the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The WPF implementation is found in the <ph id="ph1">&lt;xref:System.Windows.Markup&gt;</ph> namespace, and PresentationFramework assembly.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The System.Xaml implementation is found in the <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you are using WPF types or are deriving from WPF types, you should typically use the WPF implementations of <ph id="ph1">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph> instead of the System.Xaml implementations.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks in <ph id="ph1">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you are including references to both WPF assemblies and System.Xaml, and you also are using <ph id="ph1">`include`</ph> statements for both the <ph id="ph2">&lt;xref:System.Windows.Markup&gt;</ph> and <ph id="ph3">&lt;xref:System.Xaml&gt;</ph> namespaces, you may need to fully qualify the calls to these APIs in order to resolve the types without ambiguity.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Services<ept id="p1">](../../../docs/framework/xaml-services/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>