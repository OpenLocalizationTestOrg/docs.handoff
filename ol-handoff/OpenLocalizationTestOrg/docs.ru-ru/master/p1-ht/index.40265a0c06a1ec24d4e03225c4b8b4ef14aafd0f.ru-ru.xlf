<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea5ddfb9adb443cee2e813fd2f412cea3f39f8a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\keywords\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">p1-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd245bdc71e312f420eaee5bcf485cfddec0bc1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46c0a697645f96d973d11677e3276f8ff66fa8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Keywords (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Keywords (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following tables list all <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> language keywords.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reserved Keywords</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following keywords are <bpt id="p1">*</bpt>reserved<ept id="p1">*</ept>, which means that you cannot use them as names for programming elements such as variables or procedures.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can bypass this restriction by enclosing the name in brackets (<ph id="ph1">`[``]`</ph>).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see "Escaped Names" in <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>We do not recommend that you use escaped names, because it can make your code hard to read, and it can lead to subtle errors that can be difficult to find.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AddHandler<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AddressOf<ept id="p1">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Alias<ept id="p1">](../../../visual-basic/language-reference/statements/alias-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>And<ept id="p1">](../../../visual-basic/language-reference/operators/and-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AndAlso<ept id="p1">](../../../visual-basic/language-reference/operators/andalso-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>As<ept id="p1">](../../../visual-basic/language-reference/statements/as-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Boolean<ept id="p1">](../../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../visual-basic/language-reference/modifiers/byref.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Byte<ept id="p1">](../../../visual-basic/language-reference/data-types/byte-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../visual-basic/language-reference/modifiers/byval.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Call<ept id="p1">](../../../visual-basic/language-reference/statements/call-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Case<ept id="p1">](../../../visual-basic/language-reference/statements/select-case-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Catch<ept id="p1">](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CBool<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CByte<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CChar<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDate<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDbl<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CDec<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Char<ept id="p1">](../../../visual-basic/language-reference/data-types/char-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CInt<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Class Constraint<ept id="p1">](../../../visual-basic/language-reference/statements/type-list.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Class Statement<ept id="p1">](../../../visual-basic/language-reference/statements/class-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLng<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CObj<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Const<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Continue<ept id="p1">](../../../visual-basic/language-reference/statements/continue-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSByte<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CShort<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CSng<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CStr<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CType<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CUInt<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CULng<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CUShort<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Date<ept id="p1">](../../../visual-basic/language-reference/data-types/date-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Decimal<ept id="p1">](../../../visual-basic/language-reference/data-types/decimal-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Declare<ept id="p1">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Default<ept id="p1">](../../../visual-basic/language-reference/modifiers/default.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegate<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dim<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DirectCast<ept id="p1">](../../../visual-basic/language-reference/operators/directcast-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Do<ept id="p1">](../../../visual-basic/language-reference/statements/do-loop-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Double<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Each<ept id="p1">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Else<ept id="p1">](../../../visual-basic/language-reference/statements/else-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ElseIf<ept id="p1">](../../../visual-basic/language-reference/statements/if-then-else-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>End Statement<ept id="p1">](../../../visual-basic/language-reference/statements/end-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>End <ph id="ph1">\&lt;</ph>keyword&gt;<ept id="p1">](../../../visual-basic/language-reference/statements/end-keyword-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enum<ept id="p1">](../../../visual-basic/language-reference/statements/enum-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Erase<ept id="p1">](../../../visual-basic/language-reference/statements/erase-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Error<ept id="p1">](../../../visual-basic/language-reference/statements/on-error-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Event<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exit<ept id="p1">](../../../visual-basic/language-reference/statements/exit-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>False<ept id="p1">](../../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Finally<ept id="p1">](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>For (in For…Next)<ept id="p1">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>For Each…Next<ept id="p1">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Function<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get<ept id="p1">](../../../visual-basic/language-reference/statements/get-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetType<ept id="p1">](../../../visual-basic/language-reference/operators/gettype-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetXMLNamespace<ept id="p1">](../../../visual-basic/language-reference/operators/getxmlnamespace-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Global<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GoTo<ept id="p1">](../../../visual-basic/language-reference/statements/goto-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Handles<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>If<ept id="p1">](../../../visual-basic/language-reference/statements/if-then-else-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>If()<ept id="p1">](../../../visual-basic/language-reference/operators/if-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implements<ept id="p1">](../../../visual-basic/language-reference/statements/implements-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implements Statement<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Imports (.NET Namespace and Type)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Imports (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>In<ept id="p1">](../../../visual-basic/language-reference/statements/in-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>In (Generic Modifier)<ept id="p1">](../../../visual-basic/language-reference/modifiers/in-generic-modifier.md)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Inherits<ept id="p1">](../../../visual-basic/language-reference/statements/inherits-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Integer<ept id="p1">](../../../visual-basic/language-reference/data-types/integer-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interface<ept id="p1">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Is<ept id="p1">](../../../visual-basic/language-reference/operators/is-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsNot<ept id="p1">](../../../visual-basic/language-reference/operators/isnot-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Let<ept id="p1">](../../../visual-basic/language-reference/queries/let-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lib<ept id="p1">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Like<ept id="p1">](../../../visual-basic/language-reference/operators/like-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Long<ept id="p1">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loop<ept id="p1">](../../../visual-basic/language-reference/statements/do-loop-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Me<ept id="p1">](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mod<ept id="p1">](../../../visual-basic/language-reference/operators/mod-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Module<ept id="p1">](../../../visual-basic/language-reference/modifiers/module-keyword.md)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Module Statement<ept id="p1">](../../../visual-basic/language-reference/statements/module-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MustInherit<ept id="p1">](../../../visual-basic/language-reference/modifiers/mustinherit.md)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../../../visual-basic/language-reference/modifiers/mustoverride.md)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MyBase<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MyClass<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Narrowing<ept id="p1">](../../../visual-basic/language-reference/modifiers/narrowing.md)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>New Constraint<ept id="p1">](../../../visual-basic/language-reference/statements/type-list.md)</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>New Operator<ept id="p1">](../../../visual-basic/language-reference/operators/new-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Next<ept id="p1">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Next (in Resume)<ept id="p1">](../../../visual-basic/language-reference/statements/resume-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Not<ept id="p1">](../../../visual-basic/language-reference/operators/not-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NotInheritable<ept id="p1">](../../../visual-basic/language-reference/modifiers/notinheritable.md)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../../../visual-basic/language-reference/modifiers/notoverridable.md)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object<ept id="p1">](../../../visual-basic/language-reference/data-types/object-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Of<ept id="p1">](../../../visual-basic/language-reference/statements/of-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>On<ept id="p1">](../../../visual-basic/misc/on.md)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator<ept id="p1">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Option<ept id="p1">](../../../visual-basic/language-reference/statements/option-keyword-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Optional<ept id="p1">](../../../visual-basic/language-reference/modifiers/optional.md)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Or<ept id="p1">](../../../visual-basic/language-reference/operators/or-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OrElse<ept id="p1">](../../../visual-basic/language-reference/operators/orelse-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Out (Generic Modifier)<ept id="p1">](../../../visual-basic/language-reference/modifiers/out-generic-modifier.md)</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overloads<ept id="p1">](../../../visual-basic/language-reference/modifiers/overloads.md)</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overridable<ept id="p1">](../../../visual-basic/language-reference/modifiers/overridable.md)</ept></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overrides<ept id="p1">](../../../visual-basic/language-reference/modifiers/overrides.md)</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../visual-basic/language-reference/modifiers/paramarray.md)</ept></source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Partial<ept id="p1">](../../../visual-basic/language-reference/modifiers/partial.md)</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Property<ept id="p1">](../../../visual-basic/language-reference/statements/property-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RaiseEvent<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ReDim<ept id="p1">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>REM<ept id="p1">](../../../visual-basic/language-reference/statements/rem-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RemoveHandler<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Resume<ept id="p1">](../../../visual-basic/language-reference/statements/resume-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Return<ept id="p1">](../../../visual-basic/language-reference/statements/return-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SByte<ept id="p1">](../../../visual-basic/language-reference/data-types/sbyte-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Select<ept id="p1">](../../../visual-basic/language-reference/statements/select-case-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Set<ept id="p1">](../../../visual-basic/language-reference/statements/set-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Short<ept id="p1">](../../../visual-basic/language-reference/data-types/short-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Single<ept id="p1">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Static<ept id="p1">](../../../visual-basic/language-reference/modifiers/static.md)</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Step<ept id="p1">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Stop<ept id="p1">](../../../visual-basic/language-reference/statements/stop-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String<ept id="p1">](../../../visual-basic/language-reference/data-types/string-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structure Constraint<ept id="p1">](../../../visual-basic/language-reference/statements/type-list.md)</ept></source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structure Statement<ept id="p1">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sub<ept id="p1">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SyncLock<ept id="p1">](../../../visual-basic/language-reference/statements/synclock-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Then<ept id="p1">](../../../visual-basic/language-reference/statements/then-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Throw<ept id="p1">](../../../visual-basic/language-reference/statements/throw-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>To<ept id="p1">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>True<ept id="p1">](../../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Try<ept id="p1">](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TryCast<ept id="p1">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TypeOf…Is<ept id="p1">](../../../visual-basic/language-reference/operators/typeof-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UInteger<ept id="p1">](../../../visual-basic/language-reference/data-types/uinteger-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ULong<ept id="p1">](../../../visual-basic/language-reference/data-types/ulong-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UShort<ept id="p1">](../../../visual-basic/language-reference/data-types/ushort-data-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using<ept id="p1">](../../../visual-basic/language-reference/statements/using-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When<ept id="p1">](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>While<ept id="p1">](../../../visual-basic/language-reference/statements/while-end-while-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Widening<ept id="p1">](../../../visual-basic/language-reference/modifiers/widening.md)</ept></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>With<ept id="p1">](../../../visual-basic/language-reference/statements/with-end-with-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WriteOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/writeonly.md)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Xor<ept id="p1">](../../../visual-basic/language-reference/operators/xor-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#Const<ept id="p1">](../../../visual-basic/language-reference/directives/const-directive.md)</ept></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#Else<ept id="p1">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept></source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#ElseIf<ept id="p1">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept></source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#End<ept id="p1">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#If<ept id="p1">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept></source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt;&gt; Operator<ept id="p1">](../../../visual-basic/language-reference/operators/right-shift-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt;&gt;= Operator<ept id="p1">](../../../visual-basic/language-reference/operators/right-shift-assignment-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`EndIf`</ph>, <ph id="ph2">`GoSub`</ph>, <ph id="ph3">`Variant`</ph>, and <ph id="ph4">`Wend`</ph> are retained as reserved keywords, although they are no longer used in <ph id="ph5">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The meaning of the <ph id="ph1">`Let`</ph> keyword has changed.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Let`</ph> is now used in LINQ queries.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Let Clause<ept id="p1">](../../../visual-basic/language-reference/queries/let-clause.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Unreserved Keywords</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The following keywords are not reserved, which means you can use them as names for your programming elements.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>However, doing this is not recommended, because it can make your code hard to read and can lead to subtle errors that can be difficult to find.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Aggregate<ept id="p1">](../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Ansi<ept id="p1">](../../../visual-basic/language-reference/modifiers/ansi.md)</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Assembly<ept id="p1">](../../../visual-basic/language-reference/modifiers/assembly.md)</ept></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Async<ept id="p1">](../../../visual-basic/language-reference/modifiers/async.md)</ept></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Auto<ept id="p1">](../../../visual-basic/language-reference/modifiers/auto.md)</ept></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Await<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Binary<ept id="p1">](../../../visual-basic/language-reference/statements/option-compare-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compare<ept id="p1">](../../../visual-basic/language-reference/statements/option-compare-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Distinct<ept id="p1">](../../../visual-basic/language-reference/queries/distinct-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Equals<ept id="p1">](../../../visual-basic/language-reference/queries/equals-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Explicit<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>From<ept id="p1">](../../../visual-basic/language-reference/queries/from-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Group By<ept id="p1">](../../../visual-basic/language-reference/queries/group-by-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Group Join<ept id="p1">](../../../visual-basic/language-reference/queries/group-join-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Into<ept id="p1">](../../../visual-basic/language-reference/statements/into-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsFalse<ept id="p1">](../../../visual-basic/language-reference/operators/isfalse-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsTrue<ept id="p1">](../../../visual-basic/language-reference/operators/istrue-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Iterator<ept id="p1">](../../../visual-basic/language-reference/modifiers/iterator.md)</ept></source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Join<ept id="p1">](../../../visual-basic/language-reference/queries/join-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Key<ept id="p1">](../../../visual-basic/language-reference/modifiers/key.md)</ept></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mid<ept id="p1">](../../../visual-basic/language-reference/statements/mid-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Off<ept id="p1">](../../../visual-basic/misc/off.md)</ept></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Order By<ept id="p1">](../../../visual-basic/language-reference/queries/order-by-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Preserve<ept id="p1">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Skip<ept id="p1">](../../../visual-basic/language-reference/queries/skip-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Skip While<ept id="p1">](../../../visual-basic/language-reference/queries/skip-while-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strict<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Take<ept id="p1">](../../../visual-basic/language-reference/queries/take-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Take While<ept id="p1">](../../../visual-basic/language-reference/queries/take-while-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Text<ept id="p1">](../../../visual-basic/language-reference/statements/option-compare-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unicode<ept id="p1">](../../../visual-basic/language-reference/modifiers/unicode.md)</ept></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Until<ept id="p1">](../../../visual-basic/language-reference/statements/do-loop-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Where<ept id="p1">](../../../visual-basic/language-reference/queries/where-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Yield<ept id="p1">](../../../visual-basic/language-reference/statements/yield-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#ExternalSource<ept id="p1">](../../../visual-basic/language-reference/directives/externalsource-directive.md)</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#Region<ept id="p1">](../../../visual-basic/language-reference/directives/region-directive.md)</ept></source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Title</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arrays Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/arrays-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Lists language elements that are used to create, define, and use arrays.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collection Object Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/collection-object-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Lists language elements that are used for collections.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compiler Directive Summary (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/en-us/874dad02-d4a5-4a9d-8a48-0191a0ac794a)</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Lists directives that control compiler behavior.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Control Flow Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/control-flow-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Lists statements that are used for looping and controlling procedure flow.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Conversion Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to convert numbers, dates, times, and strings.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Types Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/data-types-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Lists data types.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Also lists functions that are used to convert between data types and verify data types.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dates and Times Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/dates-and-times-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Lists language elements that are used for dates and times.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Declarations and Constants Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/declarations-and-constants-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Lists statements that are used to declare variables, constants, classes, modules, and other programming elements.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Also lists language elements that are used to obtain object information, handle events, and implement inheritance.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Directories and Files Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/directories-and-files-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to control the file system and to process files.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Errors Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/errors-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Lists language elements that are used to catch and return run-time error values.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Financial Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/financial-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to perform financial calculations.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Input and Output Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/input-and-output-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to read from and write to files, manage files, and print output.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Information and Interaction Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/information-and-interaction-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to run other programs, obtain command-line arguments, manipulate COM objects, retrieve color information, and use control dialog boxes.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Math Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/math-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to perform trigonometric and other mathematical calculations.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>My Reference<ept id="p1">](../../../visual-basic/language-reference/keywords/my-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Lists the objects contained in <ph id="ph1">`My`</ph>, a feature that provides access to frequently used methods, properties, and events of the computer on which the application is running, the current application, the application's resources, the application's settings, and so on.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operators Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/operators-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Lists assignment and comparison expressions and other operators.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Registry Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/registry-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to read, save, and delete program settings.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String Manipulation Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/string-manipulation-summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Lists functions that are used to manipulate strings.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Runtime Library Members<ept id="p1">](../../../visual-basic/language-reference/runtime-library-members.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>