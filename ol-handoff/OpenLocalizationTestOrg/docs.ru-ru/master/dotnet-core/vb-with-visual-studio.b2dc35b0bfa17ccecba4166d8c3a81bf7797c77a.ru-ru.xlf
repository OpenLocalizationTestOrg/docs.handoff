<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="vb-with-visual-studio.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b9d87922b543f97d4b36a37759d661298318e1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tutorials\vb-with-visual-studio.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f248181ff5513c5edd89a42b15bd7f8edf06eb64</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf952a224224365458bc97b462501c10c288b4a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>.NET Core Hello World application with Visual Basic in Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn how to build a simple .NET Core console application with Visual Basic using Visual Studio 2017.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Build a Visual Basic Hello World application with the .NET Core SDK in Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic provides a step-by-step introduction to building, debugging, and publishing a simple .NET Core console application using Visual Basic in Visual Studio 2017.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 provides a full-featured development environment for building .NET Core applications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>As long as the application doesn't have platform-specific dependencies, the application can run on any platform that .NET Core targets and on any system that has .NET Core installed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio 2017<ept id="p1">](https://aka.ms/vsdownload?utm_source=mscom&amp;utm_campaign=msdocs)</ept> with the ".NET Core cross-platform development" workload installed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can develop your app with .NET Core 2.0.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Prerequisites for .NET Core on Windows<ept id="p1">](../../core/windows-prerequisites.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A simple Hello World application</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Begin by creating a simple "Hello World" console application.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Follow these steps:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Launch Visual Studio 2017.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept> from the menu bar.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>New Project<ept id="p1">*</ept>* dialog, select the <bpt id="p2">**</bpt>Visual Basic<ept id="p2">**</ept> node followed by the <bpt id="p3">**</bpt>.NET Core<ept id="p3">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Then select the <bpt id="p1">**</bpt>Console App (.NET Core)<ept id="p1">**</ept> project template.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, type "HelloWorld".</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>New Project dialog with Console App selected</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Visual Studio uses the template to create your project.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Visual Basic Console Application template for .NET Core automatically defines a class, <ph id="ph1">`Program`</ph>, with a single method, <ph id="ph2">`Main`</ph>, that takes a <ph id="ph3">&lt;xref:System.String&gt;</ph> array as an argument.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Main`</ph> is the application entry point, the method that's called automatically by the runtime when it launches the application.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Any command-line arguments supplied when the application is launched are available in the <bpt id="p1">*</bpt>args<ept id="p1">*</ept> array.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Visual Studio and the new HelloWorld project</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The template creates a simple "Hello World" application.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It calls the <ph id="ph1">&lt;xref:System.Console.WriteLine(System.String)?displayProperty=nameWithType&gt;</ph> method to display the literal string "Hello World!"</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>in the console window.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>By selecting the <bpt id="p1">**</bpt>HelloWorld<ept id="p1">**</ept> button with the green arrow on the toolbar, you can run the program in Debug mode.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you do, the console window is visible for only a brief time interval before it closes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This occurs because the <ph id="ph1">`Main`</ph> method terminates and the application ends as soon as the single statement in the <ph id="ph2">`Main`</ph> method executes.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To cause the application to pause before it closes the console window, add the following code immediately after the call to the <ph id="ph1">&lt;xref:System.Console.WriteLine(System.String)?displayProperty=nameWithType&gt;</ph> method:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This code prompts the user to press any key and then pauses the program until a key is pressed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>On the menu bar, select <bpt id="p1">**</bpt>Build<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This compiles your program into an intermediate language (IL) that's converted into binary code by a just-in-time (JIT) compiler.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Run the program by selecting the <bpt id="p1">**</bpt>HelloWorld<ept id="p1">**</ept> button with the green arrow on the toolbar.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Console window showing Hello World Press any key to continue</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Press any key to close the console window.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Enhancing the Hello World application</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enhance your application to prompt the user for his or her name and to display it along with the date and time.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To modify and test the program, do the following:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Enter the following Visual Basic code in the code window immediately after the opening bracket that follows the <ph id="ph1">`Sub Main(args As String())`</ph> line and before the first closing bracket:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This code replaces the existing <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> statements.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Visual Studio Program file with updated Main method</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This code displays "What is your name?"</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>in the console window and waits until the user enters a string followed by the Enter key.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>It stores this string into a variable named <ph id="ph1">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It also retrieves the value of the <ph id="ph1">&lt;xref:System.DateTime.Now?displayProperty=nameWithType&gt;</ph> property, which contains the current local time, and assigns it to a variable named <ph id="ph2">`currentDate`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Finally, it uses an <bpt id="p1">[</bpt>interpolated string<ept id="p1">](../../visual-basic/programming-guide/language-features/strings/interpolated-strings.md)</ept> to display these values in the console window.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Compile the program by choosing <bpt id="p1">**</bpt>Build<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Run the program in Debug mode in Visual Studio by selecting the green arrow on the toolbar, pressing F5, or choosing the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept> menu item.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Respond to the prompt by entering a name and pressing the Enter key.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Console window with modified program output</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Press any key to close the console window.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You've created and run your application.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To develop a professional application, take some additional steps to make your application ready for release:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To debug your application, see <bpt id="p1">[</bpt>Debug your .NET Core Hello World application using Visual Studio 2017<ept id="p1">](debugging-with-visual-studio.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To publish a distributable version of your application, see <bpt id="p1">[</bpt>Publish your .NET Core Hello World application with Visual Studio 2017<ept id="p1">](publishing-with-visual-studio.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Related topics</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Instead of a console application, you can also build a .NET Standard class library with Visual Basic, .NET Core, and Visual Studio 2017.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For a step-by-step introduction, see <bpt id="p1">[</bpt>Build a .NET Standard library with Visual Basic and .NET Core SDK in Visual Studio 2017<ept id="p1">](vb-library-with-visual-studio.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>