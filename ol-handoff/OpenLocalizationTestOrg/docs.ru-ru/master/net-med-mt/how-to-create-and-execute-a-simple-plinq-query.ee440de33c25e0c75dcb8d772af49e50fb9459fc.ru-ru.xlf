<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-and-execute-a-simple-plinq-query.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">543ed2bff0729f54bf98a03cb28e2ef73e44c79a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\parallel-programming\how-to-create-and-execute-a-simple-plinq-query.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73dcc7fc48fb5a18ac7ed041cca85b106b9c058a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b09455fedf8801839a6b62b979c74ee171f91f83</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create and Execute a Simple PLINQ Query | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create and Execute a Simple PLINQ Query</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a simple Parallel LINQ query by using the <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.AsParallel%2A&gt;</ph> extension method on the source sequence, and executing the query by using the <ph id="ph2">&lt;xref:System.Linq.ParallelEnumerable.ForAll%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This documentation uses lambda expressions to define delegates in PLINQ.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are not familiar with lambda expressions in C# or Visual Basic, see <bpt id="p1">[</bpt>Lambda Expressions in PLINQ and TPL<ept id="p1">](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>PLINQ#11<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_Misc/plinq/cs/create1.cs#11)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>PLINQ#11<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_Misc/plinq/vb/create1.vb#11)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example demonstrates the basic pattern for creating and executing any Parallel LINQ query when the ordering of the result sequence is not important; unordered queries are generally faster than ordered queries.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The query partitions the source into tasks that are executed asynchronously on multiple threads.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The order in which each task completes depends not only on the amount of work involved to process the elements in the partition, but also on external factors such as how the operating system schedules each thread.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example is intended to demonstrate usage, and might not run faster than the equivalent sequential LINQ to Objects query.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information about speedup, see <bpt id="p1">[</bpt>Understanding Speedup in PLINQ<ept id="p1">](../../../docs/standard/parallel-programming/understanding-speedup-in-plinq.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about how to preserve the ordering of elements in a query, see <bpt id="p1">[</bpt>How to: Control Ordering in a PLINQ Query<ept id="p1">](../../../docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parallel LINQ (PLINQ)<ept id="p1">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>