<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c5ba2aa194674c83d40ef2e0183b243fb4db116</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\xml-integration-with-relational-data-and-adonet.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5eb0d10d825d6b9a08cecf9c2773710f9db3aef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0978542e6697d2adbcfc6faf6e5bc83bdc8cff18</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XML Integration with Relational Data and ADO.NET | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XML Integration with Relational Data and ADO.NET</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept> class is a derived class of the <bpt id="p2">**</bpt>XmlDocument<ept id="p2">**</ept>, and contains XML data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The advantage of the <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept> is that it provides a bridge between relational and hierarchical data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is an <bpt id="p1">**</bpt>XmlDocument<ept id="p1">**</ept> that can be bound to a <bpt id="p2">**</bpt>DataSet<ept id="p2">**</ept> and both classes can synchronize changes made to data contained in the two classes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>XmlDocument<ept id="p1">**</ept> that is bound to a <bpt id="p2">**</bpt>DataSet<ept id="p2">**</ept> allows XML to integrate with relational data, and you do not have to have your data represented as either XML or in a relational format.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can do both and not be constrained to a single representation of the data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The benefits of having data available in two views are:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The structured portion of an XML document can be mapped to a dataset, and be efficiently stored, indexed, and searched.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Transformations, validation, and navigation can be done efficiently through a cursor model over the XML data that is stored relationally.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>At times, it can be done more efficiently against relational structures than if the XML is stored in an <bpt id="p1">**</bpt>XmlDocument<ept id="p1">**</ept> model.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> can store a portion of the XML.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>That is, you can use <bpt id="p1">**</bpt>XPath<ept id="p1">**</ept> or <bpt id="p2">**</bpt>XslTransform<ept id="p2">**</ept> to store to a <bpt id="p3">**</bpt>DataSet<ept id="p3">**</ept> only those elements and attributes of interest.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>From there, changes can be made to the smaller, filtered subset of data, with the changes propagating to the larger data in the <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also run a transform over data that was loaded into the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> from SQL Server.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Another option is to bind .NET Framework classes-style-managed WinForm and WebForm controls to a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> that was populated from an XML input stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition to supporting <bpt id="p1">**</bpt>XslTransform<ept id="p1">**</ept>, an <bpt id="p2">**</bpt>XmlDataDocument<ept id="p2">**</ept> exposes relational data to <bpt id="p3">**</bpt>XPath<ept id="p3">**</ept> queries and validation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Basically, all XML services are available over relational data, and relational facilities, such as control binding, codegen, and so on, are available over a structured projection of XML without compromising XML fidelity.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept> is inherited from an <bpt id="p2">**</bpt>XmlDocument<ept id="p2">**</ept>, it provides an implementation of the W3C DOM.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The fact that the <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept> is associated with, and stores a subset of its data within, a <bpt id="p2">**</bpt>DataSet<ept id="p2">**</ept> does not restrict or alter its use as an <bpt id="p3">**</bpt>XmlDocument<ept id="p3">**</ept> in any way.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Code written to consume an <bpt id="p1">**</bpt>XmlDocument<ept id="p1">**</ept> works unaltered against an <bpt id="p2">**</bpt>XmlDataDocument<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> provides the relational view of the same data by defining tables, columns, relations, and constraints, and is a stand-alone, in-memory user data store.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following illustration shows the different associations that XML data has with the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> and <bpt id="p2">**</bpt>XmlDataDocument<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>XML DataSet<ept id="p1">]</ept><bpt id="p2">(../../../../docs/standard/data/xml/media/xmlintegrationwithrelationaldataandadodotnet.gif "</bpt>xmlIntegrationWithRelationalDataAndADOdotNet<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The illustration shows that XML data can be loaded directly into a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, which allows direct manipulation with XML in the relational manner.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Or, the XML can be loaded into a derived class of the DOM, which is the <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept>, and subsequently loaded and synchronized with the <bpt id="p2">**</bpt>DataSet<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> and <bpt id="p2">**</bpt>XmlDataDocument<ept id="p2">**</ept> are synchronized over a single set of data, changes made to the data in one store are reflected in the other store.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept> inherits all the editing and navigational features from the <bpt id="p2">**</bpt>XmlDocument<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are times when using the <bpt id="p1">**</bpt>XmlDataDocument<ept id="p1">**</ept> and its inherited features, synchronized with a <bpt id="p2">**</bpt>DataSet<ept id="p2">**</ept>, is a more appropriate option than loading XML directly into the <bpt id="p3">**</bpt>DataSet<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following table shows the items to be considered when choosing which method to use to load the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When to load XML directly into a DataSet</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When to synchronize an XmlDataDocument with a DataSet</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Queries of data in the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> are easier using SQL than XPath.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>XPath queries are needed over data in the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Preservation of element ordering in the source XML is not critical.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Preservation of element ordering in the source XML is critical.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>White space between elements and formatting does not need to be preserved in the source XML.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>White space and formatting preservation in the source XML is critical.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If loading and writing XML directly into and out of a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> addresses your needs, see <bpt id="p2">[</bpt>Loading a DataSet from XML<ept id="p2">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md)</ept> and <bpt id="p3">[</bpt>Writing a DataSet as XML Data<ept id="p3">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-contents-as-xml-data.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If loading the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> from an <bpt id="p2">**</bpt>XmlDataDocument<ept id="p2">**</ept> addresses your needs, see <bpt id="p3">[</bpt>Synchronizing a Datasetwith an XML Document<ept id="p3">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using XML in a DataSet<ept id="p1">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>