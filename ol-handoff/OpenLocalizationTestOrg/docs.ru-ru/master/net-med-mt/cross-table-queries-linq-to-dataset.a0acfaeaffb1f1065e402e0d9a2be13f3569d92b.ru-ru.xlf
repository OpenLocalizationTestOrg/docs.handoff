<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67baf604627706acb388be1bdcaa3aaf284130a2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\cross-table-queries-linq-to-dataset.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">daf8a78919489a8204950bf24de62b342c60f864</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae2121232c8063c94b08a332413ef8986cce42a0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Cross-Table Queries (LINQ to DataSet) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Cross-Table Queries (LINQ to DataSet)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In addition to querying a single table, you can also perform cross-table queries in <ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is done by using a <bpt id="p1">*</bpt>join<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A join is the association of objects in one data source with objects that share a common attribute in another data source, such as a product or contact ID.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In object-oriented programming, relationships between objects are relatively easy to navigate because each object has a member that references another object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In external database tables, however, navigating relationships is not as straightforward.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Database tables do not contain built-in relationships.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In these cases, the join operation can be used to match elements from each source.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, given two tables that contain product information and sales information, you could use a join operation to match sales information and products for the same sales order.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbteclinqext](../../../../includes/vbteclinqext-md.md)]</ph> framework provides two join operators, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Join%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Linq.Enumerable.GroupJoin%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These operators perform <bpt id="p1">*</bpt>equi-joins<ept id="p1">*</ept>: that is, joins that match two data sources only when their keys are equal.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>(By contrast, <ph id="ph1">[!INCLUDE[tsql](../../../../includes/tsql-md.md)]</ph> supports join operators other than <ph id="ph2">`equals`</ph>, such as the <ph id="ph3">`less than`</ph> operator.)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In relational database terms, <ph id="ph1">&lt;xref:System.Linq.Enumerable.Join%2A&gt;</ph> implements an inner join.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An inner join is a type of join in which only those objects that have a match in the opposite data set are returned.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupJoin%2A&gt;</ph> operators have no direct equivalent in relational database terms; they implement a superset of inner joins and left outer joins.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A left outer join is a join that returns each element of the first (left) collection, even if it has no correlated elements in the second collection.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about joins, see <bpt id="p1">[</bpt>Join Operations<ept id="p1">](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example performs a traditional join of the <ph id="ph1">`SalesOrderHeader`</ph> and <ph id="ph2">`SalesOrderDetail`</ph> tables from the AdventureWorks sample database to obtain online orders from the month of August.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP LINQ to DataSet Examples#Join<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#join)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP LINQ to DataSet Examples#Join<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#join)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Querying DataSets<ept id="p1">](../../../../docs/framework/data/adonet/querying-datasets-linq-to-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Single-Table Queries<ept id="p1">](../../../../docs/framework/data/adonet/single-table-queries-linq-to-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Querying Typed DataSets<ept id="p1">](../../../../docs/framework/data/adonet/querying-typed-datasets.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Join Operations<ept id="p1">](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ to DataSet Examples<ept id="p1">](../../../../docs/framework/data/adonet/linq-to-dataset-examples.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>