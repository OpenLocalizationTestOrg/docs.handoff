<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0681cc84f52c5c1dc4aadf159a3ca76e4c8b0ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\how-to-author-controls-for-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">093bb225b13df7110f46e6f29c55f7d33cf320a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8ebe944e93104022fbe59f5617d48bee9dae37c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Author Controls for Windows Forms | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Author Controls for Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A control represents a graphical link between the user and the program.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A control can provide or process data, accept user input, respond to events, or perform any number of other functions that connect the user and the application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Because a control is essentially a component with a graphical interface, it can serve any function that a component does, as well as provide user interaction.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Controls are created to serve specific purposes, and authoring controls is just another programming task.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With that in mind, the following steps represent an overview of the control authoring process.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Links provide additional information on the individual steps.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you want to author a custom control to use on Web Forms, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To change your settings, choose <bpt id="p1">**</bpt>Import and Export Settings<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Tools<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Customizing Development Settings in Visual Studio<ept id="p1">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To author a control</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Determine what you want your control to accomplish, or what part it will play in your application.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Factors to consider are:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>What kind of graphical interface do you need?</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>What specific user interactions will this control handle?</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Is the functionality you need provided by any existing controls?</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Can you get the functionality you need by combining several Windows Forms controls?</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you need an object model for your control, determine how functionality will be distributed throughout the object model, and divide up functionality between the control and any subobjects.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object model may be useful if you are planning a complex control, or want to incorporate several functionalities.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determine the type of control (for example, user control, custom control, inherited Windows Forms control) you need.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Control Type Recommendations<ept id="p1">](../../../../docs/framework/winforms/controls/control-type-recommendations.md)</ept> and <bpt id="p2">[</bpt>Varieties of Custom Controls<ept id="p2">](../../../../docs/framework/winforms/controls/varieties-of-custom-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Express functionality as properties, methods, and events of the control and its subobjects or subsidiary structures, and assign appropriate access levels (for example, public, protected, and so on).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you need custom painting for your control, add code for it.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Custom Control Painting and Rendering<ept id="p1">](../../../../docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If your control inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, you can test its runtime behavior by building the control project and running it in the <bpt id="p1">**</bpt>UserControl Test Container<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Test the Run-Time Behavior of a UserControl<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-test-the-run-time-behavior-of-a-usercontrol.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also test and debug your control by creating a new project, such as a Windows Application, and placing it into a container.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This process is demonstrated as part of <bpt id="p1">[</bpt>Walkthrough: Authoring a Composite Control with Visual Basic<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-basic.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>As you add each feature, add features to your test project to exercise the new functionality.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Repeat, refining the design.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Package and deploy your control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Deploying Applications, Services, and Components<ept id="p1">](https://msdn.microsoft.com/library/wtzawcsz)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Authoring a Composite Control with Visual Basic<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-basic.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Inheriting from a Windows Forms Control with Visual Basic<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-basic.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Inherit from the UserControl Class<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-inherit-from-the-usercontrol-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Inherit from the Control Class<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-inherit-from-the-control-class.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Inherit from Existing Windows Forms Controls<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-inherit-from-existing-windows-forms-controls.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Test the Run-Time Behavior of a UserControl<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-test-the-run-time-behavior-of-a-usercontrol.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Varieties of Custom Controls<ept id="p1">](../../../../docs/framework/winforms/controls/varieties-of-custom-controls.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>