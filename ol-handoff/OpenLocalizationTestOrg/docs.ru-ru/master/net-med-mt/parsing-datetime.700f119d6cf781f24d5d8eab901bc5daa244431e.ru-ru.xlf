<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2587b9a1af342f544e0f0dd77eb948486d22ada3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\parsing-datetime.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fe7c5525537fa19a62cfcb2d76094a8536a5e57</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f567b3f8d98fd9dedc0d6b5e901ceffb14576464</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parsing Date and Time Strings in the .NET Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parsing Date and Time Strings in .NET</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Parsing methods convert the string representation of a date and time to an equivalent <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> methods convert any of several common representations of a date and time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods convert a string representation that conforms to the pattern specified by a date and time format string.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(See the topics on <bpt id="p1">[</bpt>standard date and time format strings<ept id="p1">](../../../docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>custom date and time format strings<ept id="p2">](../../../docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Parsing is influenced by the properties of a format provider that supplies information such as the strings used for date and time separators, and the names of months, days, and eras.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The format provider is the current <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object, which is provided implicitly by the current thread culture or explicitly by the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> parameter of a parsing method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter, specify a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object, which represents a culture, or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The string representation of a date to be parsed must include the month and at least a day or year.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The string representation of a time must include the hour and at least minutes or the AM/PM designator.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, parsing supplies default values for omitted components if possible.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A missing date defaults to the current date, a missing year defaults to the current year, a missing day of the month defaults to the first day of the month, and a missing time defaults to midnight.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the string representation specifies only a time, parsing returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object with its <ph id="ph2">&lt;xref:System.DateTime.Year%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.DateTime.Month%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.DateTime.Day%2A&gt;</ph> properties set to the corresponding values of the <ph id="ph5">&lt;xref:System.DateTime.Today%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, if the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> constant is specified in the parsing method, the resulting year, month, and day properties are set to the value <ph id="ph2">`1`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In addition to a date and a time component, the string representation of a date and time can include an offset that indicates how much the time differs from Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the string "2/14/2007 5:32:00 -7:00" defines a time that is seven hours earlier than UTC.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If an offset is omitted from the string representation of a time, parsing returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If an offset is specified, parsing returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind&gt;</ph> and its value adjusted to the local time zone of your machine.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can modify this behavior by using a <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> constant with the parsing method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The format provider is also used to interpret an ambiguous numeric date.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, it is not clear which components of the date represented by the string "02/03/04" are the month, day, and year.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In this case, the components are interpreted according to the order of similar date formats in the format provider.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Parse</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code example illustrates the use of the <bpt id="p1">**</bpt>Parse<ept id="p1">**</ept> method to convert a string into a <bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example uses the culture associated with the current thread to perform the parse.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> associated with the current culture cannot parse the input string, a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.DateAndTime#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/Parsing.DateAndTime/cs/Example.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.DateAndTime#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Parsing.DateAndTime/vb/Example.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also specify a <bpt id="p1">**</bpt>CultureInfo<ept id="p1">**</ept> set to one of the cultures defined by that object, or you can specify one of the standard <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> objects returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following code example uses a format provider to parse a German string into a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>CultureInfo<ept id="p1">**</ept> representing the de-DE culture is defined and passed with the string being parsed to ensure successful parsing of this particular string.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This precludes whatever setting is in the <bpt id="p1">**</bpt>CurrentCulture<ept id="p1">**</ept> of the <bpt id="p2">**</bpt>CurrentThread<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.DateAndTime#2<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/Parsing.DateAndTime/cs/Example2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.DateAndTime#2<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Parsing.DateAndTime/vb/Example2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>However, although you can use overloads of the <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> method to specify custom format providers, the method does not support the use of non-standard format providers.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To parse a date and time expressed in a non-standard format, use the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> method instead.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration to specify that the current date and time information should not be added to the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> for fields that the string does not define.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.DateAndTime#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/Parsing.DateAndTime/cs/Example3.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.DateAndTime#3<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Parsing.DateAndTime/vb/Example3.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ParseExact</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=fullName&gt;</ph> method converts a string that conforms to a specified string pattern to a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When a string that is not of the form specified is passed to this method, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can specify one of the standard date and time format specifiers or a limited combination of the custom date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Using the custom format specifiers, it is possible for you to construct a custom recognition string.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For an explanation of the specifiers, see the topics on <bpt id="p1">[</bpt>standard date and time format strings<ept id="p1">](../../../docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>custom date and time format strings<ept id="p2">](../../../docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Each overload of the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> method also has an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> parameter that typically provides culture-specific information about the formatting of the string.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Typically, this <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents a standard culture or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that is returned by the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, unlike the other date and time parsing functions, this method also supports an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> that defines a non-standard date and time format.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the following code example, the <bpt id="p1">**</bpt>ParseExact<ept id="p1">**</ept> method is passed a string object to parse, followed by a format specifier, followed by a <bpt id="p2">**</bpt>CultureInfo<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">**</bpt>ParseExact<ept id="p1">**</ept> method can only parse strings that exhibit the long date pattern in the en-US culture.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.DateAndTime#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/Parsing.DateAndTime/cs/Example4.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.DateAndTime#4<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Parsing.DateAndTime/vb/Example4.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing Strings<ept id="p1">](../../../docs/standard/base-types/parsing-strings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting Types<ept id="p1">](../../../docs/standard/base-types/formatting-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Conversion in .NET<ept id="p1">](../../../docs/standard/base-types/type-conversion.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>