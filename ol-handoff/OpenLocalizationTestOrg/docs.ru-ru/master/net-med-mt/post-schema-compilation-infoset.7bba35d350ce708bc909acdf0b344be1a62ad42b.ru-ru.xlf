<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="post-schema-compilation-infoset.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bb8596ead24c93748aba9244621568c773347dc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\post-schema-compilation-infoset.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f207799d681a6a1d50755fe52962c0acc8146a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f59be7ded9a7f0e120512a3decf1c4d2636701e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Post-Schema Compilation Infoset | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Post-Schema Compilation Infoset</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>World Wide Web Consortium (W3C) XML Schema Recommendation<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=45242)</ept> discusses the information set (infoset) that must be exposed for pre-schema validation and post-schema compilation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The XML Schema Object Model (SOM) views this exposure before and after the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The pre-schema validation infoset is built during the editing of the schema.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The post-schema compilation infoset is generated after the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is called, during compilation of the schema, and is exposed as properties.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The SOM is the object model that represents the pre-schema validation and post-schema compilation infosets; it consists of the classes in the <ph id="ph1">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>All read and write properties of classes in the <ph id="ph1">&lt;xref:System.Xml.Schema&gt;</ph> namespace belong to the pre-schema validation infoset, while all read-only properties of classes in the <ph id="ph2">&lt;xref:System.Xml.Schema&gt;</ph> namespace belong to the post-schema compilation infoset.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The exception to this rule are the following properties, which are both pre-schema validation infoset and post-schema compilation infoset properties.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Class</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema.BlockDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchema.FinalDefault%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaParticle.MaxOccurs%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaParticle.MinOccurs%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph> classes both have <ph id="ph3">`BlockResolved`</ph> and <ph id="ph4">`FinalResolved`</ph> properties.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These properties are used to hold the values for the <ph id="ph1">`Block`</ph> and <ph id="ph2">`Final`</ph> properties after the schema has been compiled and validated.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`BlockResolved`</ph> and <ph id="ph2">`FinalResolved`</ph> are read-only properties that are part of the post-schema compilation infoset.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> class set after validating the schema.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Before validation, the property contains a <ph id="ph1">`null`</ph> reference, and the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A&gt;</ph> is set to the name of the type in question.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After validation, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A&gt;</ph> is resolved to a valid type, and the type object is available through the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Schema Object Model (SOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>