<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aae57321cd66aa7c003421d625c38c2ed6be923</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\establishing-the-connection.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab1475fd3decdd7f51084b26f1bc4598dec2cb2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">436f8e5697a38513bf85ef0adf860e365850b1dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Establishing the Connection | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Establishing the Connection</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To connect to Microsoft SQL Server, use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object of the .NET Framework Data Provider for SQL Server.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To connect to an OLE DB data source, use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object of the .NET Framework Data Provider for OLE DB.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To connect to an ODBC data source, use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object of the .NET Framework Data Provider for ODBC.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To connect to an Oracle data source, use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object of the .NET Framework Data Provider for Oracle.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For securely storing and retrieving connection strings, see <bpt id="p1">[</bpt>Protecting Connection Information<ept id="p1">](../../../../docs/framework/data/adonet/protecting-connection-information.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Closing Connections</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>We recommend that you always close the connection when you are finished using it, so that the connection can be returned to the pool.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Using`</ph> block in Visual Basic or C# automatically disposes of the connection when the code exits the block, even in the case of an unhandled exception.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>using Statement<ept id="p1">](~/docs/csharp/language-reference/keywords/using-statement.md)</ept> and <bpt id="p2">[</bpt>Using Statement<ept id="p2">](~/docs/visual-basic/language-reference/statements/using-statement.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph> methods of the connection object for the provider that you are using.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Connections that are not explicitly closed might not be added or returned to the pool.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, a connection that has gone out of scope but that has not been explicitly closed will only be returned to the connection pool if the maximum pool size has been reached and the connection is still valid.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OLE DB, ODBC, and Oracle Connection Pooling<ept id="p1">](../../../../docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Do not call <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph> on a <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>DataReader<ept id="p2">**</ept>, or any other managed object in the <ph id="ph3">`Finalize`</ph> method of your class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In a finalizer, only release unmanaged resources that your class owns directly.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](../../../../docs/standard/garbage-collection/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](../../../../docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Connecting to SQL Server</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for SQL Server supports a connection string format that is similar to the OLE DB (ADO) connection string format.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For valid string format names and values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> class to create syntactically valid connection strings at run time.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](../../../../docs/framework/data/adonet/connection-string-builders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create and open a connection to a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Integrated Security and ASP.NET</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>SQL Server integrated security (also known as trusted connections) helps to provide protection when connecting to SQL Server as it does not expose a user ID and password in the connection string and is the recommended method for authenticating a connection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Integrated security uses the current security identity, or token, of the executing process.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For desktop applications, this is typically the identity of the currently logged-on user.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The security identity for ASP.NET applications can be set to one of several different options.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To better understand the security identity that an ASP.NET application uses when connecting to SQL Server, see <bpt id="p1">[</bpt>ASP.NET Impersonation<ept id="p1">](http://msdn.microsoft.com/library/a0cb3024-562f-4184-9d3c-095504787d3d)</ept>, <bpt id="p2">[</bpt>ASP.NET Authentication<ept id="p2">](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)</ept>, and <bpt id="p3">[</bpt>How to: Access SQL Server Using Windows Integrated Security<ept id="p3">](http://msdn.microsoft.com/library/683f9c9f-4375-4de6-8111-943c4423fde5)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Connecting to an OLE DB Data Source</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for OLE DB provides connectivity to data sources exposed using OLE DB (through SQLOLEDB, the OLE DB Provider for SQL Server), using the <bpt id="p1">**</bpt>OleDbConnection<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For the .NET Framework Data Provider for OLE DB, the connection string format is identical to the connection string format used in ADO, with the following exceptions:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Provider<ept id="p1">**</ept> keyword is required.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>URL<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Remote Provider<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Remote Server<ept id="p3">**</ept> keywords are not supported.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about OLE DB connection strings, see the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> topic.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> to create connection strings at run time.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>OleDbConnection<ept id="p1">**</ept> object does not support setting or retrieving dynamic properties specific to an OLE DB provider.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Only properties that can be passed in the connection string for the OLE DB provider are supported.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create and open a connection to an OLE DB data source.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Do Not Use Universal Data Link Files</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It is possible to supply connection information for an <bpt id="p1">**</bpt>OleDbConnection<ept id="p1">**</ept> in a Universal Data Link (UDL) file; however you should avoid doing so.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>UDL files are not encrypted, and expose connection string information in clear text.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Connecting to an ODBC Data Source</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for ODBC provides connectivity to data sources exposed using ODBC using the <bpt id="p1">**</bpt>OdbcConnection<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For the .NET Framework Data Provider for ODBC, the connection string format is designed to match the ODBC connection string format as closely as possible.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You may also supply an ODBC data source name (DSN).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more detail on the <bpt id="p1">**</bpt>OdbcConnection<ept id="p1">**</ept> , see the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create and open a connection to an ODBC data source.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Connecting to an Oracle Data Source</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle provides connectivity to Oracle data sources using the <bpt id="p1">**</bpt>OracleConnection<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For the .NET Framework Data Provider for Oracle, the connection string format is designed to match the OLE DB Provider for Oracle (MSDAORA) connection string format as closely as possible.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more detail on the <bpt id="p1">**</bpt>OracleConnection<ept id="p1">**</ept>, see the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create and open a connection to an Oracle data source.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Connecting to a Data Source<ept id="p1">](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Connection Strings<ept id="p1">](../../../../docs/framework/data/adonet/connection-strings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OLE DB, ODBC, and Oracle Connection Pooling<ept id="p1">](../../../../docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>