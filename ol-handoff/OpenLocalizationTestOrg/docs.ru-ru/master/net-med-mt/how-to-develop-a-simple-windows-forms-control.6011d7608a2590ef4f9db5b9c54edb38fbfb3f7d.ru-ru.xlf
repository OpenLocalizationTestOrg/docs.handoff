<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23aa0f818a2a6d2084b0ec642cf03dca76c39da1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\how-to-develop-a-simple-windows-forms-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ab3504ad89fca668282212a5cbbed47d3d6cce8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ab3ba62a4e3243153c443227241dcfac83fa86</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Develop a Simple Windows Forms Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Develop a Simple Windows Forms Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section walks you through the key steps for authoring a custom Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The simple control developed in this walkthrough allows the alignment of its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property to be changed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It does not raise or handle events.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a simple custom control</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Define a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Control?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Define properties.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>(You are not required to define properties, because a control inherits many properties from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, but most custom controls generally do define additional properties.) The following code fragment defines a property named <ph id="ph2">`TextAlignment`</ph> that<ph id="ph3">`FirstControl`</ph> uses to format the display of the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property inherited from <ph id="ph5">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about defining properties, see <bpt id="p1">[</bpt>Properties Overview<ept id="p1">](http://msdn.microsoft.com/library/8f1a1ff1-0f05-40e0-bfdf-80de8fff7d52)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.FirstControl#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/CS/FirstControl.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.FirstControl#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/VB/FirstControl.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you set a property that changes the visual display of the control, you must invoke the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to redraw the control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> is defined in the base class <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Override the protected <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method inherited from <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> to provide rendering logic to your control.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you do not override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>, your control will not be able to draw itself.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the following code fragment, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method displays the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property inherited from <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> with the alignment specified by the <ph id="ph4">`alignmentValue`</ph> field.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.FirstControl#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/CS/FirstControl.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.FirstControl#4<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/VB/FirstControl.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provide attributes for your control.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Attributes enable a visual designer to display your control and its properties and events appropriately at design time.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following code fragment applies attributes to the <ph id="ph1">`TextAlignment`</ph> property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a designer such as Visual Studio, the <ph id="ph1">&lt;xref:System.ComponentModel.CategoryAttribute.Category%2A&gt;</ph> attribute (shown in the code fragment) causes the property to be displayed under a logical category.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DescriptionAttribute.Description%2A&gt;</ph> attribute causes a descriptive string to be displayed at the bottom of the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window when the <ph id="ph2">`TextAlignment`</ph> property is selected.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about attributes, see <bpt id="p1">[</bpt>Design-Time Attributes for Components<ept id="p1">](http://msdn.microsoft.com/library/12050fe3-9327-4509-9e21-4ee2494b95c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.FirstControl#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/CS/FirstControl.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.FirstControl#5<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/VB/FirstControl.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(optional) Provide resources for your control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can provide a resource, such as a bitmap, for your control by using a compiler option (<ph id="ph1">`/res`</ph> for C#) to package resources with your control.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>At run time, the resource can be retrieved using the methods of the <ph id="ph1">&lt;xref:System.Resources.ResourceManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information about creating and using resources, see the <bpt id="p1">[</bpt>Resources in Desktop Apps<ept id="p1">](../../../../docs/framework/resources/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compile and deploy your control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To compile and deploy <ph id="ph1">`FirstControl,`</ph> execute the following steps:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Save the code in the following sample to a source file (such as FirstControl.cs or FirstControl.vb).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Compile the source code into an assembly and save it in your application's directory.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To accomplish this, execute the following command from the directory that contains the source file.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`/t:library`</ph> compiler option tells the compiler that the assembly you are creating is a library (and not an executable).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`/out`</ph> option specifies the path and name of the assembly.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The<ph id="ph1">`/r`</ph> option provides the name of the assemblies that are referenced by your code.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this example, you create a private assembly that only your applications can use.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Hence, you have to save it in your application's directory.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about packaging and deploying a control for distribution, see <bpt id="p1">[</bpt>Deployment<ept id="p1">](../../../../docs/framework/deployment/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following sample shows the code for <ph id="ph1">`FirstControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The control is enclosed in the namespace <ph id="ph1">`CustomWinControls`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A namespace provides a logical grouping of related types.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can create your control in a new or existing namespace.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In C#, the <ph id="ph1">`using`</ph> declaration (in Visual Basic, <ph id="ph2">`Imports`</ph>) allows types to be accessed from a namespace without using the fully qualified name of the type.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`using`</ph> declaration allows code to access the class <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> from <ph id="ph3">&lt;xref:System.Windows.Forms?displayProperty=fullName&gt;</ph> as simply <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> instead of having to use the fully qualified name <ph id="ph5">&lt;xref:System.Windows.Forms.Control?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.FirstControl#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/CS/FirstControl.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.FirstControl#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/VB/FirstControl.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Using the Custom Control on a Form</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example shows a simple form that uses <ph id="ph1">`FirstControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It creates three instances of <ph id="ph1">`FirstControl`</ph>, each with a different value for the <ph id="ph2">`TextAlignment`</ph> property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To compile and run this sample</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Save the code in the following example to a source file (SimpleForm.cs or SimpleForms.vb).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Compile the source code into an executable assembly by executing the following command from the directory that contains the source file.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CustomWinControls.dll is the assembly that contains the class<ph id="ph1">`FirstControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This assembly must be in the same directory as the source file for the form that accesses it (SimpleForm.cs or SimpleForms.vb).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Execute SimpleForm.exe using the following command.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.FirstControl#10<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/CS/SimpleForm.cs#10)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.FirstControl#10<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FirstControl/VB/SimpleForm.vb#10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Properties in Windows Forms Controls<ept id="p1">](../../../../docs/framework/winforms/controls/properties-in-windows-forms-controls.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Events in Windows Forms Controls<ept id="p1">](../../../../docs/framework/winforms/controls/events-in-windows-forms-controls.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>