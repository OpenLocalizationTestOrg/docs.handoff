<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="caching-in-net-framework-applications.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5a416486082b04cafb96e6b9d8ee5761d6f9204</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\performance\caching-in-net-framework-applications.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5b59010f654bbfb7cfc2aeab22bf11492de241d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3bcb01069124bd00913ba201de54412bd82eb66</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Caching in .NET Framework Applications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Caching in .NET Framework Applications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Caching enables you to store data in memory for rapid access.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the data is accessed again, applications can get the data from the cache instead of retrieving it from the original source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This can improve performance and scalability.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In addition, caching makes data available when the data source is temporarily unavailable.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides caching functionality that you can use to improve the performance and scalability of both Windows client and server applications, including ASP.NET.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> and earlier versions, ASP.NET provided an in-memory cache implementation in the <ph id="ph2">&lt;xref:System.Web.Caching&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In previous versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>, caching was available only in the <ph id="ph2">&lt;xref:System.Web&gt;</ph> namespace and therefore required a dependency on ASP.NET classes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4, the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace contains APIs that are designed for both Web and non-Web applications.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Caching Data</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can cache information by using classes in the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The caching classes in this namespace provide the following features:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Abstract types that provide the foundation for creating custom cache implementations.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A concrete in-memory object cache implementation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The abstract base caching class (<ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph>) defines the following caching tasks:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating and managing cache entries.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Specifying expiration and eviction information.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Triggering events that are raised in response to changes in cache entries.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is an in-memory object cache implementation of the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class for most caching tasks.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is modeled on the ASP.NET cache object that is defined in the <ph id="ph2">&lt;xref:System.Web.Caching&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Therefore, the internal caching logic similar to the logic that was provided in earlier versions of ASP.NET.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For an example of how to use to caching in a WPF application, see <bpt id="p1">[</bpt>Walkthrough: Caching Application Data in a WPF Application<ept id="p1">](../../../docs/framework/wpf/advanced/walkthrough-caching-application-data-in-a-wpf-application.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Caching in ASP.NET Applications</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The caching classes in the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace provide functionality for caching data in ASP.NET.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If your application targets the <ph id="ph1">[!INCLUDE[net_v35_short](../../../includes/net-v35-short-md.md)]</ph> or earlier, you must use the caching classes that are defined in the <ph id="ph2">&lt;xref:System.Web.Caching&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you develop new applications, we recommend that you use the <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The API that is provided in the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace is like the API that is provided in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Therefore, the API will be familiar if you used caching in earlier versions of ASP.NET.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For an example of how to use caching in ASP.NET applications, see <bpt id="p1">[</bpt>Walkthrough: Caching Application Data in ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/942236f6-0138-4aaf-af71-a5ea451a1e23)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Output Caching</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To manually cache application data, you can use the <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class in ASP.NET.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>ASP.NET also supports output caching, which stores the generated output of pages, controls, and HTTP responses in memory.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can configure output caching declaratively in an ASP.NET Web page or by using settings in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>outputCache Element for caching (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ASP.NET lets you extend output caching by creating custom output-cache providers.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By using custom providers, you can store cached content using other storage devices such as disks, cloud storage, and distributed cache engines.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To create a custom output cache provider, you create a class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.OutputCacheProvider&gt;</ph> class and configure the application to use the custom output cache provider.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Caching in WCF REST Services</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For WCF REST services, the .NET Framework enables you to take advantage of the declarative output caching that is available in ASP.NET.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This enables you to cache responses from your WCF REST service operations.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When a user sends an HTTP GET request to a service that is configured for caching, ASP.NET sends back the cached response, and the service method is not called.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>After the cache expires, the next time that a user sends an HTTP GET request, your service method is called and the response is again cached.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The .NET Framework also enables you to implement conditional HTTP GET caching.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In REST scenarios, a conditional HTTP GET request is often used by services to implement intelligent HTTP caching as described in the <bpt id="p1">[</bpt>HTTP Specification<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=165800)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Caching Support for WCF Web HTTP Services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184598)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Extending Caching in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Caching in the .NET Framework is designed to be extensible.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class enables you to create a custom cache implementation.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This class provides members that are available to all managed applications, including Windows Forms, Windows Presentation Foundation (WPF), and Windows Communications Foundation (WCF).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You might do this in order to create a cache class that uses a different storage mechanism, or if you want granular control over cache operations.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To extend caching you can do the following:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Create a custom class that derives from the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class and then provide a custom cache implementation in the derived class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create a class that derives from <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class and customize or extend the derived class.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For an example of how to do this, see <bpt id="p1">[</bpt>Caching Application Data by Using Multiple Cache Objects in an ASP.NET Application<ept id="p1">](http://blogs.msdn.com/aspnetue/archive/2010/03/22/caching-application-data-by-using-multiple-cache-objects-in-an-asp-net-application.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Create a class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.OutputCacheProvider&gt;</ph> class and configure the application to use the custom output cache provider.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more information, see the entry <bpt id="p1">[</bpt>Extensible Output Caching with ASP.NET 4 (VS 2010 and .NET 4.0 Series)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=185772)</ept> on Scott Guthrie's blog.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Caching Application Data in a WPF Application<ept id="p1">](../../../docs/framework/wpf/advanced/walkthrough-caching-application-data-in-a-wpf-application.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Caching Application Data in ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/942236f6-0138-4aaf-af71-a5ea451a1e23)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>