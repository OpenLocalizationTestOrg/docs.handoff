<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e41d7a0629d96d8ca7bb36e8e4b3a8bb590737f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-create-a-custom-token.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b2c0239d251ae63725c9e9d202c9c21491b4bb6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d63db782b91e05e0f8b703b604d4f8328419660</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create a Custom Token | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Custom Token</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to create a custom security token using the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> class, and how to integrate it with a custom security token provider and authenticator.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a complete code example see the <bpt id="p1">[</bpt>Custom Token<ept id="p1">](../../../../docs/framework/wcf/samples/custom-token.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>security token<ept id="p1">*</ept> is essentially an XML element that is used by the <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> security framework to represent claims about a sender inside the SOAP message.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security provides various tokens for system-provided authentication modes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Examples include an X.509 certificate security token represented by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> class or a Username security token represented by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Sometimes an authentication mode or credential is not supported by the provided types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In that case, it is necessary to create a custom security token to provide an XML representation of the custom credential inside the SOAP message.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following procedures show how to create a custom security token and how to integrate it with the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security infrastructure.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This topic creates a credit card token that is used to pass information about the client's credit card to the server.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> custom credentials and security token manager, see <bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens&gt;</ph> namespace for more classes that represent security tokens.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> credentials, security token manager, and provider and authenticator classes, see <bpt id="p1">[</bpt>Security Architecture<ept id="p1">](http://msdn.microsoft.com/en-us/16593476-d36a-408d-808c-ae6fd483e28f)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Procedures</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A client application must be provided with a way to specify credit card information for the security infrastructure.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This information is made available to the application by a custom client credentials class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The first step is to create a class to represent the credit card information for custom client credentials.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To create a class that represents credit card information inside client credentials</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Define a new class that represents the credit card information for the application.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example names the class <ph id="ph1">`CreditCardInfo`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add appropriate properties to the class to allow an application set the necessary information required for the custom token.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In this example, the class has three properties: <ph id="ph1">`CardNumber`</ph>, <ph id="ph2">`CardIssuer`</ph>, and <ph id="ph3">`ExpirationDate`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#4<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Next, a class that represents the custom security token must be created.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This class is used by the security token provider, authenticator, and serializer classes to pass information about the security token to and from the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security infrastructure.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To create a custom security token class</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Define a new class derived from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This example creates a class named <ph id="ph1">`CreditCardToken`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.Id%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This property is used to get the local identifier of the security token that is used to point to the security token XML representation from other elements inside the SOAP message.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, a token identifier can be either passed to it as a constructor parameter or a new random one is generated every time a security token instance is created.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This property returns a collection of security keys that the security token instance represents.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Such keys can be used by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> to sign or encrypt parts of the SOAP message.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this example, the credit card security token cannot contain any security keys; therefore, the implementation always returns an empty collection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>These properties are used by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> to determine the validity of the security token instance.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this example, the credit card security token has only an expiration date, so the <ph id="ph1">`ValidFrom`</ph> property returns a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> that represents the date and time of the instance creation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When a new security token type is created, it requires an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The implementation is used in the security binding element configuration to represent the new token type.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The security token parameters class serves as a template that is used to match the actual security token instance to when a message is processed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The template provides additional properties that an application can use to specify criteria that the security token must match to be used or authenticated.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example does not add any additional properties, so only the security token type is matched when the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> infrastructure searches for a security token instance to use or to validate.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To create a custom security token parameters class</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Define a new class derived from the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Copy all internal fields defined in your class, if any.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example does not define any additional fields.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication%2A&gt;</ph> read-only property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This property returns <ph id="ph1">`true`</ph> if the security token type represented by this class can be used to authenticate a client to a service.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In this example, the credit card security token can be used to authenticate a client to a service.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication%2A&gt;</ph> read-only property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This property returns <ph id="ph1">`true`</ph> if the security token type represented by this class can be used to authenticate a service to a client.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this example, the credit card security token cannot be used to authenticate a service to a client.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity%2A&gt;</ph> read-only property.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This property returns <ph id="ph1">`true`</ph> if the security token type represented by this class can be mapped to a Windows account.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If so, the authentication result is represented by a <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class instance.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In this example, the token cannot be mapped to a Windows account.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityToken%2CSystem.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method is called by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security framework when it requires a reference to the security token instance represented by this security token parameters class.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Both the actual security token instance and <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle&gt;</ph> that specifies the type of the reference that is being requested are passed to this method as arguments.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this example, only internal references are supported by the credit card security token.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> class has functionality to create internal references; therefore, the implementation does not require additional code.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement%28System.IdentityModel.Selectors.SecurityTokenRequirement%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This method is called by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> to convert the security token parameters class instance into an instance of the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The result is used by security token providers to create the appropriate security token instance.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Security tokens are transmitted inside SOAP messages, which requires a translation mechanism between the in-memory security token representation and the on-the-wire representation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses a security token serializer to accomplish this task.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Every custom token must be accompanied by a custom security token serializer that can serialize and deserialize the custom security token from the SOAP message.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Derived keys are enabled by default.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you create a custom security token and use it as the primary token, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> derives a key from it.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>While doing so, it calls the custom security token serializer to write the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> for the custom security token while serializing the <ph id="ph2">`DerivedKeyToken`</ph> to the wire.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>On the receiving end, when deserializing the token off the wire, the <ph id="ph1">`DerivedKeyToken`</ph> serializer expects a <ph id="ph2">`SecurityTokenReference`</ph> element as the top-level child under itself.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the custom security token serializer did not add a <ph id="ph1">`SecurityTokenReference`</ph> element while serializing its clause type, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To create a custom security token serializer</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Define a new class derived from the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WSSecurityTokenSerializer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29&gt;</ph> method, which relies on an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML stream.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`true`</ph> if the serializer implementation can deserialize the security token based given its current element.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In this example, this method checks whether the XML reader's current XML element has the correct element name and namespace.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If it does not, it calls the base class implementation of this method to handle the XML element.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This method reads the XML content of the security token and constructs the appropriate in-memory representation for it.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If it does not recognize the XML element on which the passed-in XML reader is standing, it calls the base class implementation to process the system-provided token types.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if it can convert the in-memory token representation (passed in as an argument) to the XML representation.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If it cannot convert, it calls the base class implementation.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This method converts an in-memory security token representation into an XML representation.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the method cannot convert, it calls the base class implementation.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>After completing the four previous procedures, integrate the custom security token with the security token provider, authenticator, manager, and client and service credentials.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To integrate the custom security token with a security token provider</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The security token provider creates, modifies (if necessary), and returns an instance of the token.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To create a custom provider for the custom security token, create a class that inherits from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following example overrides the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A&gt;</ph> method to return an instance of the <ph id="ph2">`CreditCardToken`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> custom security token providers, see <bpt id="p1">[</bpt>How to: Create a Custom Security Token Provider<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-provider.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#6<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#6)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#6<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To integrate the custom security token with a security token authenticator</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The security token authenticator validates the content of the security token when it is extracted from the message.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To create a custom authenticator for the custom security token, create a class that inherits from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following example overrides the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> custom security token authenticators, see <bpt id="p1">[</bpt>How to: Create a Custom Security Token Authenticator<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-authenticator.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#7<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#7)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#7<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#12<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#12)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#12<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#12)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To integrate the custom security token with a security token manager</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The security token manager creates the appropriate token provider, security authenticator, and token serializer instances.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To create a custom token manager, create a class that inherits from the <ph id="ph1">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The primary methods of the class use a <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt;</ph> to create the appropriate provider and client or service credentials.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> custom security token managers, see <bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#8<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#8)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#8<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#9<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#9)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#9<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#9)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To integrate the custom security token with custom client and service credentials</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The custom client and service credentials must be added to provide an API for the application to allow specifying custom token information that is used by the custom security token infrastructure created previously to provide and authenticate the custom security token content.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following samples show how this can be done.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> custom client and service credentials, see <bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#10<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#10)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#10<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_customToken#11<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#11)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_customToken#11<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The custom security token parameters class created previously is used to tell the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security framework that a custom security token must be used when communicating with a service.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The following procedure shows how this can be done.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To integrate the custom security token with the binding</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The custom security token parameters class must be specified in one of the token parameters collections that are exposed on the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following example uses the collection returned by <ph id="ph1">`SignedEncrypted`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The code adds the credit card custom token to every message sent from the client to the service with its content automatically signed and encrypted.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomToken#13<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#13)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomToken#13<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#13)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This topic shows the various pieces of code necessary to implement and use a custom token.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To see a complete example of how all these pieces of code fit together see, <bpt id="p1">[</bpt>Custom Token<ept id="p1">](../../../../docs/framework/wcf/samples/custom-token.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters&gt;</ph></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Security.WSSecurityTokenSerializer&gt;</ph></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt;</ph></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt;</ph></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceCredentials&gt;</ph></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Custom Security Token Authenticator<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-authenticator.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Custom Security Token Provider<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-provider.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Security Architecture<ept id="p1">](http://msdn.microsoft.com/en-us/16593476-d36a-408d-808c-ae6fd483e28f)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>