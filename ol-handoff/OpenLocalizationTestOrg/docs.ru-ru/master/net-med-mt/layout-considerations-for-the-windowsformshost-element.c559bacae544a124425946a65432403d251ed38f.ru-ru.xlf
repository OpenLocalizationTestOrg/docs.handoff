<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96b4be89597a6c74179f9225f27142371b4c6bfe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\layout-considerations-for-the-windowsformshost-element.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac4ade2d532facbca205b7092ff5135943ae343e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3896f8cdc04b6c05beddafcde8787dbce05c1d1f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Layout Considerations for the WindowsFormsHost Element | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Layout Considerations for the WindowsFormsHost Element</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes how the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element interacts with the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout system.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> support different, but similar, logic for sizing and positioning elements on a form or page.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you create a hybrid user interface (UI) that hosts <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls in <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element integrates the two layout schemes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Differences in Layout Between WPF and Windows Forms</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> uses resolution-independent layout.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>All <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout dimensions are specified using <bpt id="p1">*</bpt>device-independent pixels<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A device-independent pixel is one ninety-sixth of an inch in size and resolution-independent, so you get similar results regardless of whether you are rendering to a 72-dpi monitor or a 19,200-dpi printer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> is also based on <bpt id="p1">*</bpt>dynamic layout<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This means that a UI element arranges itself on a form or page according to its content, its parent layout container, and the available screen size.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Dynamic layout facilitates localization by automatically adjusting the size and position of UI elements when the strings they contain change length.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Layout in <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> is device-dependent and more likely to be static.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Typically, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls are positioned absolutely on a form using dimensions specified in hardware pixels.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> does support some dynamic layout features, as summarized in the following table.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Layout feature</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Autosizing</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Some <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls resize themselves to display their contents properly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>AutoSize Property Overview<ept id="p1">](../../../../docs/framework/winforms/controls/autosize-property-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Anchoring and docking</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls support positioning and sizing based on the parent container.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Autoscaling</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Container controls resize themselves and their children based on the resolution of the output device or the size, in pixels, of the default container font.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](../../../../docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Layout containers</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TableLayoutPanel&gt;</ph> controls arrange their child controls and size themselves according to their contents.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Layout Limitations</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In general, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls cannot be scaled and transformed to the extent possible in <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following list describes the known limitations when the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element attempts to integrate its hosted <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control into the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout system.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In some cases, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls cannot be resized, or can be sized only to specific dimensions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control supports only a single height, which is defined by the control's font size.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> dynamic layout where elements can stretch vertically, a hosted <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control will not stretch as expected.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls cannot be rotated or skewed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element raises the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError&gt;</ph> event if you apply a skew or rotation transformation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you do not handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError&gt;</ph> event, an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In most cases, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls do not support proportional scaling.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Although the overall dimensions of the control will scale, child controls and component elements of the control may not resize as expected.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This limitation depends on how well each <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control supports scaling.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In addition, you cannot scale <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls down to a size of 0 pixels.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls support autoscaling, in which the form will automatically resize itself and its controls based on the font size.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> user interface, changing the font size does not resize the entire layout, although individual elements may dynamically resize.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Z-order</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> user interface, you can change the z-order of elements to control overlapping behavior.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control is drawn in a separate HWND, so it is always drawn on top of <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control is also drawn on top of any <ph id="ph2">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Layout Behavior</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following sections describe specific aspects of layout behavior when hosting <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls in <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Scaling, Unit Conversion, and Device Independence</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element performs operations involving <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and <ph id="ph3">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> dimensions, two coordinate systems are involved: device-independent pixels for <ph id="ph4">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and hardware pixels for <ph id="ph5">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Therefore, you must apply proper unit and scaling conversions to achieve a consistent layout.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Conversion between the coordinate systems depends on the current device resolution and any layout or rendering transforms applied to the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element or to its ancestors.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the output device is 96 dpi and no scaling has been applied to the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element, one device-independent pixel is equal to one hardware pixel.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>All other cases require coordinate system scaling.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The hosted control is not resized.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element attempts to scale the hosted control and all of its child controls.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> does not fully support scaling, the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element scales to the degree supported by particular controls.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.ScaleChild%2A&gt;</ph> method to provide custom scaling behavior for the hosted <ph id="ph2">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In addition to scaling, the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element handles rounding and overflow cases as described in the following table.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Conversion issue</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Rounding</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> device-independent pixel dimensions are specified as <ph id="ph2">`double`</ph>, and <ph id="ph3">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> hardware pixel dimensions are specified as <ph id="ph4">`int`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In cases where <ph id="ph1">`double`</ph>-based dimensions are converted to <ph id="ph2">`int`</ph>-based dimensions, the <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element uses standard rounding, so that fractional values less than 0.5 are rounded down to 0.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Overflow</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element converts from <ph id="ph2">`double`</ph> values to <ph id="ph3">`int`</ph> values, overflow is possible.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Values that are larger than <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> are set to <ph id="ph2">&lt;xref:System.Int32.MaxValue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Layout-related Properties</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Properties that control layout behavior in <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements are mapped appropriately by the <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Forms and WPF Property Mapping<ept id="p1">](../../../../docs/framework/wpf/advanced/windows-forms-and-wpf-property-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Layout Changes in the Hosted Control</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Layout changes in the hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control are propagated to <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> to trigger layout updates.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.UIElement.InvalidateMeasure%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> ensures that layout changes in the hosted control cause the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout engine to run.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Continuously Sized Windows Forms Controls</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls that support continuous scaling fully interact with the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout system.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element uses the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> methods as usual to size and arrange the hosted <ph id="ph4">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Sizing Algorithm</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element uses the following procedure to size the hosted control:</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element overrides the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To determine the size of the hosted control, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> method calls the hosted control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> method with a constraint translated from the constraint passed to the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> method attempts to set the hosted control to the given size constraint.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If the hosted control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property matches the specified constraint, the hosted control is sized to the constraint.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property does not match the specified constraint, the hosted control does not support continuous sizing.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.MonthCalendar&gt;</ph> control allows only discrete sizes.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The permitted sizes for this control consist of integers (representing the number of months) for both height and width.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In cases such as this, the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element behaves as follows:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property returns a larger size than the specified constraint, the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element clips the hosted control.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Height and width are handled separately, so the hosted control may be clipped in either direction.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property returns a smaller size than the specified constraint, <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> accepts this size value and returns the value to the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout system.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Arranging Windows Forms Controls in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-arranging-windows-forms-controls-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arranging Windows Forms Controls in WPF Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159971)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms and WPF Property Mapping<ept id="p1">](../../../../docs/framework/wpf/advanced/windows-forms-and-wpf-property-mapping.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration and Interoperability<ept id="p1">](../../../../docs/framework/wpf/advanced/migration-and-interoperability.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>