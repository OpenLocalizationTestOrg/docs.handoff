<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9872361dcbcded3fe5f4ca49be2528c560ec55df</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\datetime\converting-between-datetime-and-offset.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7cd62f03959a6fedc4c33cdc1fd6c87e15bf2a8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e8132a7adbf88a2209cb4118df88ec5fee41ab2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Converting between DateTime and DateTimeOffset | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Converting between DateTime and DateTimeOffset</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure provides a greater degree of time zone awareness than the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> structure, <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> parameters are used more commonly in method calls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because of this, the ability to convert <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> values to <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values and vice versa is particularly important.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic shows how to perform these conversions in a way that preserves as much time zone information as possible.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Both the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and the <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> types have some limitations when representing times in time zones.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With its <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> is able to reflect only Coordinated Universal Time (UTC) and the system's local time zone.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> reflects a time's offset from UTC, but it does not reflect the actual time zone to which that offset belongs.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For details about time values and support for time zones, see <bpt id="p1">[</bpt>Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo<ept id="p1">](../../../docs/standard/datetime/choosing-between-datetime.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Conversions from DateTime to DateTimeOffset</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure provides two equivalent ways to perform <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> to <ph id="ph3">&lt;xref:System.DateTimeOffset&gt;</ph> conversion that are suitable for most conversions:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset.%23ctor%2A&gt;</ph> constructor, which creates a new <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> object based on a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The implicit conversion operator, which allows you to assign a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For UTC and local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values, the <ph id="ph2">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property of the resulting <ph id="ph3">&lt;xref:System.DateTimeOffset&gt;</ph> value accurately reflects the UTC or local time zone offset.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the following code converts a UTC time to its equivalent <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this case, the offset of the <ph id="ph1">`utcTime2`</ph> variable is 00:00.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Similarly, the following code converts a local time to its equivalent <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#2<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#2<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, for <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, these two conversion methods produce a <ph id="ph4">&lt;xref:System.DateTimeOffset&gt;</ph> value whose offset is that of the local time zone.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is shown in the following example, which is run in the U.S. Pacific Standard Time zone.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#3<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value reflects the date and time in something other than the local time zone or UTC, you can convert it to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value and preserve its time zone information by calling the overloaded <ph id="ph3">&lt;xref:System.DateTimeOffset.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, the following example instantiates a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> object that reflects Central Standard Time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#4<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The second parameter to this constructor overload, a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> object that represents the time's offset from UTC, should be retrieved by calling the <ph id="ph2">&lt;xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=fullName&gt;</ph> method of the time's corresponding time zone.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The method's single parameter is the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value that represents the date and time to be converted.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the time zone supports daylight saving time, this parameter allows the method to determine the appropriate offset for that particular date and time.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Conversions from DateTimeOffset to DateTime</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property is most commonly used to perform <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> to <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> conversion.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, it returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.DateTimeKind&gt;</ph>, as the following example illustrates.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#5<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#5<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This means that any information about the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value's relationship to UTC is lost by the conversion when the <ph id="ph2">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property is used.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This affects <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> values that correspond to UTC time or to the system's local time because the <ph id="ph2">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> structure reflects only those two time zones in its <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To preserve as much time zone information as possible when converting a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value, you can use the <ph id="ph3">&lt;xref:System.DateTimeOffset.UtcDateTime%2A?displayProperty=fullName&gt;</ph> and <ph id="ph4">&lt;xref:System.DateTimeOffset.LocalDateTime%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Converting a UTC time</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To indicate that a converted <ph id="ph1">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> value is the UTC time, you can retrieve the value of the <ph id="ph2">&lt;xref:System.DateTimeOffset.UtcDateTime%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It differs from the <ph id="ph1">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property in two ways:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.DateTimeKind&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property value does not equal <ph id="ph2">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>, it converts the time to UTC.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If your application requires that converted <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values unambiguously identify a single point in time, you should consider using the <ph id="ph2">&lt;xref:System.DateTimeOffset.UtcDateTime%2A?displayProperty=fullName&gt;</ph> property to handle all <ph id="ph3">&lt;xref:System.DateTimeOffset&gt;</ph> to <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> conversions.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.DateTimeOffset.UtcDateTime%2A&gt;</ph> property to convert a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value whose offset equals <ph id="ph3">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph> to a <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#6<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.DateTimeOffset.UtcDateTime%2A&gt;</ph> property to perform both a time zone conversion and a type conversion on a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#12<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#12)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#12<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#12)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Converting a local time</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To indicate that a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value represents the local time, you can pass the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value returned by the <ph id="ph3">&lt;xref:System.DateTimeOffset.DateTime%2A?displayProperty=fullName&gt;</ph> property to the <ph id="ph4">`static`</ph> (<ph id="ph5">`Shared`</ph> in Visual Basic) <ph id="ph6">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The method returns the date and time passed to it as its first parameter, but sets the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to the value specified by its second parameter.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method when converting a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value whose offset corresponds to that of the local time zone.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#7<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#7)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#7<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.DateTimeOffset.LocalDateTime%2A?displayProperty=fullName&gt;</ph> property to convert a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value to a local <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value is <ph id="ph3">&lt;xref:System.DateTimeKind&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.DateTimeOffset.LocalDateTime%2A?displayProperty=fullName&gt;</ph> property when converting a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value whose offset corresponds to that of the local time zone.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#10<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#10)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#10<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When you retrieve a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value using the <ph id="ph2">&lt;xref:System.DateTimeOffset.LocalDateTime%2A?displayProperty=fullName&gt;</ph> property, the property's <ph id="ph3">`get`</ph> accessor first converts the <ph id="ph4">&lt;xref:System.DateTimeOffset&gt;</ph> value to UTC, then converts it to local time by calling the <ph id="ph5">&lt;xref:System.DateTimeOffset.ToLocalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This means that you can retrieve a value from the <ph id="ph1">&lt;xref:System.DateTimeOffset.LocalDateTime%2A?displayProperty=fullName&gt;</ph> property to perform a time zone conversion at the same time that you perform a type conversion.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It also means that the local time zone's adjustment rules are applied in performing the conversion.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code illustrates the use of the <ph id="ph1">&lt;xref:System.DateTimeOffset.LocalDateTime%2A?displayProperty=fullName&gt;</ph> property to perform both a type and a time zone conversion.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#11<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#11<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A general-purpose conversion method</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example defines a method named <ph id="ph1">`ConvertFromDateTimeOffset`</ph> that converts <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> values to <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Based on its offset, it determines whether the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value is a UTC time, a local time, or some other time, and defines the returned date and time value's <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property accordingly.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#8<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#8)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#8<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The follow example calls the <ph id="ph1">`ConvertFromDateTimeOffset`</ph> method to convert <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> values that represent a UTC time, a local time, and a time in the U.S. Central Standard Time zone.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual.Conversions#9<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/cs/Conversions.cs#9)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTimeOffset.Conceptual.Conversions#9<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual.Conversions/vb/Conversions.vb#9)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note that this code makes two assumptions that, depending on the application and the source of its date and time values, may not always be valid:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It assumes that a date and time value whose offset is <ph id="ph1">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph> represents UTC.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In fact, UTC is not a time in a particular time zone, but the time in relation to which the times in the world's time zones are standardized.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Time zones can also have an offset of <ph id="ph1">&lt;xref:System.TimeSpan.Zero&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It assumes that a date and time whose offset equals that of the local time zone represents the local time zone.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Because date and time values are disassociated from their original time zone, this may not be the case; the date and time can have originated in another time zone with the same offset.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dates, times, and time zones<ept id="p1">](../../../docs/standard/datetime/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>