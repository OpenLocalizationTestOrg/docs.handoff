<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="glossary.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d19ec0b79abdcce9797767d1280d055a9c77a87</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\glossary.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85b78f67ff158512ea18e3798723ee8326d5f775</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c18f7a41b97f5661068ea4e699fcb7ded59eb572</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>.NET Glossary</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Find out the meaning of selected terms used in the .NET documentation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET Glossary</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The primary goal of this glossary is to clarify meanings of selected terms and acronyms that appear frequently in the .NET documentation without definitions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>AOT</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Ahead-of-time compiler.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Similar to <bpt id="p1">[</bpt>JIT<ept id="p1">](#jit)</ept>, this compiler also translates <bpt id="p2">[</bpt>IL<ept id="p2">](#il)</ept> to machine code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In contrast to JIT compilation, AOT compilation happens before the application is executed and is usually performed on a different machine.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because AOT tool chains don't compile at runtime, they don't have to minimize time spent compiling.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>That means they can spend more time optimizing.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Since the context of AOT is the entire application, the AOT compiler also performs cross-module linking and whole-program analysis, which means that all references are followed and a single executable is produced.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CoreRT<ept id="p1">](#corert)</ept> and <bpt id="p2">[</bpt>.NET Native<ept id="p2">](#net-native)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ASP.NET</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The original ASP.NET implementation that ships with the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Sometimes ASP.NET is an umbrella term that refers to both ASP.NET implementations including ASP.NET Core.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The meaning that the term carries in any given instance is determined by context.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Refer to ASP.NET 4.x when you want to make it clear that youâ€™re not using ASP.NET to mean both implementations.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ASP.NET documentation<ept id="p1">](/aspnet/#pivot=aspnet)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A cross-platform, high-performance, open source implementation of ASP.NET built on .NET Core.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ASP.NET Core documentation<ept id="p1">](/aspnet/#pivot=core)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>assembly</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>.dll<ept id="p1">*</ept><ph id="ph1">/</ph><bpt id="p2">*</bpt>.exe<ept id="p2">*</ept> file that can contain a collection of APIs that can be called by applications or other assemblies.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An assembly may include types such as interfaces, classes, structures, enumerations, and delegates.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Assemblies in a project's <bpt id="p1">*</bpt>bin<ept id="p1">*</ept> folder are sometimes referred to as <bpt id="p2">*</bpt>binaries<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>library<ept id="p1">](#library)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CLR</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Common Language Runtime.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The exact meaning depends on the context, but this usually refers to the runtime of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The CLR handles memory allocation and management.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The CLR is also a virtual machine that not only executes apps but also generates and compiles code on-the-fly using a <bpt id="p1">[</bpt>JIT<ept id="p1">](#jit)</ept> compiler.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The current Microsoft CLR implementation is Windows only.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CoreCLR</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Core Common Language Runtime.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This CLR is built from the same code base as the CLR.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Originally, CoreCLR was the runtime of Silverlight and was designed to run on multiple platforms, specifically Windows and OS X. CoreCLR is now part of .NET Core and represents a simplified version of the CLR.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It's still a <bpt id="p1">[</bpt>cross-platform<ept id="p1">](#cross-platform)</ept> runtime, now including support for many Linux distributions.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CoreCLR is also a virtual machine with JIT and code execution capabilities.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CoreFX</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>.NET Core Base Class Library (BCL)</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A set of libraries that comprise the System.* (and to a limited extent  Microsoft.*) namespaces.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The BCL is a general purpose, lower-level framework that higher-level application frameworks, such as ASP.NET Core, build on.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The source code of the .NET Core BCL is contained in the <bpt id="p1">[</bpt>CoreFX repository<ept id="p1">](https://github.com/dotnet/corefx)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, the majority of the .NET Core APIs are also available in the .NET Framework, so you can think of CoreFX as a fork of the .NET Framework BCL.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CoreRT</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>.NET Core runtime.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In contrast to the CLR/CoreCLR, CoreRT is not a virtual machine, which means it doesn't include the facilities to generate and run code on-the-fly because it doesn't include a <bpt id="p1">[</bpt>JIT<ept id="p1">](#jit)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It does, however, include the <bpt id="p1">[</bpt>GC<ept id="p1">](#gc)</ept> and the ability for runtime type identification (RTTI) and reflection.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, its type system is designed so that metadata for reflection isn't required.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This enables having an <bpt id="p1">[</bpt>AOT<ept id="p1">](#aot)</ept> tool chain that can link away superfluous metadata and (more importantly) identify code that the app doesn't use.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CoreRT is in development.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Intro to .NET Native and CoreRT<ept id="p1">](https://github.com/dotnet/corert/blob/master/Documentation/intro-to-corert.md)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>cross-platform</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The ability to develop and execute an application that can be used on multiple different operating systems, such as Linux, Windows and iOS, without having to re-write specifically for each one.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This enables code re-use and consistency between applications on different platforms.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>ecosystem</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>All of the runtime software, development tools, and community resources that are used to build and run applications for a given technology.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The term ".NET ecosystem" differs from similar terms such as ".NET stack" in its inclusion of third-party apps and libraries.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Here's an example in a sentence:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>"The motivation behind the <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](#net-standard)</ept> is to establish greater uniformity in the .NET ecosystem."</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>framework</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In general, a comprehensive collection of APIs that facilitates development and deployment of applications that are based on a particular technology.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In this general sense, ASP.NET Core and Windows Forms are examples of application frameworks.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>library<ept id="p1">](#library)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The word "framework" has a more specific technical meaning in the following terms:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework<ept id="p1">](#net-framework)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>target framework<ept id="p1">](#target-framework)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TFM (target framework moniker)<ept id="p1">](#tfm)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the existing documentation, "framework" sometimes refers to an <bpt id="p1">[</bpt>implementation of .NET<ept id="p1">](#implementation-of-net)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, an article may call .NET Core a framework.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>We plan to eliminate this confusing usage from the documentation.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>GC</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Garbage collector.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The garbage collector is an implementation of automatic memory management.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The GC frees memory occupied by objects that are no longer in use.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](garbage-collection/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>IL</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Intermediate language.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Higher-level .NET languages, such as C#, compile down to a hardware-agnostic instruction set, which is called Intermediate Language (IL).</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>IL is sometimes referred to as MSIL (Microsoft IL) or CIL (Common IL).</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>JIT</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Just-in-time compiler.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Similar to <bpt id="p1">[</bpt>AOT<ept id="p1">](#aot)</ept>, this compiler translates <bpt id="p2">[</bpt>IL<ept id="p2">](#il)</ept> to machine code that the processor understands.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Unlike AOT, JIT compilation happens on demand and is performed on the same machine that the code needs to run on.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Since JIT compilation occurs during execution of the application, compile time is part of the run time.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Thus, JIT compilers have to balance time spent optimizing code against the savings that the resulting code can produce.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>But a JIT knows the actual hardware and can free developers from having to ship different implementations.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>implementation of .NET</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An implementation of .NET includes the following:</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>One or more runtimes.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Examples: CLR, CoreCLR, CoreRT.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A class library that implements a version of the .NET Standard and may include additional APIs.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Examples: .NET Framework Base Class Library, .NET Core Base Class Library.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Optionally, one or more application frameworks.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Examples: ASP.NET, Windows Forms, and WPF are included in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Optionally, development tools.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Some development tools are shared among multiple implementations.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Examples of .NET implementations:</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework<ept id="p1">](#net-framework)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core<ept id="p1">](#net-core)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Universal Windows Platform (UWP)<ept id="p1">](#uwp)</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>library</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A collection of APIs that can be called by apps or other libraries.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A .NET library is composed of one or more <bpt id="p1">[</bpt>assemblies<ept id="p1">](#assembly)</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The words library and <bpt id="p1">[</bpt>framework<ept id="p1">](#framework)</ept> are often used synonymously.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>metapackage</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A NuGet package that has no library of its own but is only a list of dependencies.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The included packages can optionally establish the API for a target framework.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Packages, Metapackages and Frameworks<ept id="p1">](../core/packages.md)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Mono</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Mono is an open source, <bpt id="p1">[</bpt>cross-platform<ept id="p1">](#cross-platform)</ept> .NET implementation that is mainly used when a small runtime is required.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It is the runtime that powers Xamarin applications on Android, Mac, iOS, tvOS and watchOS and is focused primarily on apps that require a small footprint.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>It supports all of the currently published .NET Standard versions.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Historically, Mono implemented the larger API of the .NET Framework and emulated some of the most popular capabilities on Unix.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It is sometimes used to run .NET applications that rely on those capabilities on Unix.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Mono is typically used with a just-in-time compiler, but it also features a full static compiler (ahead-of-time compilation) that is used on platforms like iOS.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To learn more about Mono, see the <bpt id="p1">[</bpt>Mono documentation<ept id="p1">](https://www.mono-project.com/docs/)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>.NET</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The umbrella term for <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](#net-standard)</ept> and all <bpt id="p2">[</bpt>.NET implementations<ept id="p2">](#implementation-of-net)</ept> and workloads.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Always capitalized, never ".Net".</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>.NET Guide<ept id="p1">](index.md)</ept></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A cross-platform, high-performance, open source implementation of .NET.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Includes the Core Common Language Runtime (CoreCLR), the Core AOT Runtime (CoreRT, in development), the Core Base Class Library, and the Core SDK.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Core<ept id="p1">](../core/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>.NET Core CLI</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A cross-platform toolchain for developing .NET Core applications.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Core command-line interface (CLI) tools<ept id="p1">](../core/tools/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>.NET Core SDK</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A set of libraries and tools that allow developers to create .NET Core applications and libraries.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Includes the <bpt id="p1">[</bpt>.NET Core CLI<ept id="p1">](#net-core-cli)</ept> for building apps, .NET Core libraries and runtime for building and running apps, and the dotnet executable (<bpt id="p2">*</bpt>dotnet.exe<ept id="p2">*</ept>) that runs CLI commands and runs applications.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Core SDK Overview<ept id="p1">](../core/sdk.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>.NET Framework</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An implementation of .NET that runs only on Windows.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Includes the Common Language Runtime (CLR), the Base Class Library, and application framework libraries such as ASP.NET, Windows Forms, and WPF.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Framework Guide<ept id="p1">](../framework/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>.NET Native</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A compiler tool chain that produces native code ahead-of-time (AOT), as opposed to just-in-time (JIT).</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Compilation happens on the developer's machine similar to the way a C++ compiler and linker works.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>It removes unused code and spends more time optimizing it.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>It extracts code from libraries and merges them into the executable.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The result is a single module that represents the entire app.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>UWP was the first application framework supported by .NET Native.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Now, we support building native console apps for Windows, macOS, and Linux.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Intro to .NET Native and CoreRT<ept id="p1">](https://github.com/dotnet/corert/blob/master/Documentation/intro-to-corert.md)</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A formal specification of .NET APIs that are available in each .NET implementation.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The .NET Standard specification is sometimes called a library in the documentation.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Because a library includes API implementations, not only specifications (interfaces), it's misleading to call .NET Standard a "library."</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>We plan to eliminate that usage from the documentation, except in reference to the name of the .NET Standard metapackage (<ph id="ph1">`NETStandard.Library`</ph>).</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](net-standard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>NGEN</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Native (image) generation.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>You can think of this technology as a persistent JIT compiler.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>It usually compiles code on the machine where the code is executed, but compilation typically occurs at install time.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>package</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A NuGet package <ph id="ph1">&amp;mdash;</ph> or just a package <ph id="ph2">&amp;mdash;</ph> is a <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file with one or more assemblies of the same name along with additional metadata such as the author name.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file has a <bpt id="p2">*</bpt>.nupkg<ept id="p2">*</ept> extension and may contain assets, such as <bpt id="p3">*</bpt>.dll<ept id="p3">*</ept> files and <bpt id="p4">*</bpt>.xml<ept id="p4">*</ept> files, for use with multiple target frameworks and versions.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>When installed in an app or library, the appropriate assets are selected based on the target framework specified by the app or library.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The assets that define the interface are in the <bpt id="p1">*</bpt>ref<ept id="p1">*</ept> folder, and the assets that define the implementation are in the <bpt id="p2">*</bpt>lib<ept id="p2">*</ept> folder.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>platform</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An operating system and the hardware it runs on, such as Windows, macOS, Linux, iOS, and Android.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Here are examples of usage in sentences:</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>".NET Core is a cross-platform implementation of .NET."</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>"PCL profiles represent Microsoft platforms, while the .NET Standard is agnostic to platform."</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The .NET documentation frequently uses ".NET platform" to mean either an implementation of .NET or the .NET stack including all implementations.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Both of these usages tend to get confused with the primary (OS/hardware) meaning, so we plan to eliminate these usages from the documentation.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>runtime</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The execution environment for a managed program.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The OS is part of the runtime environment but is not part of the .NET runtime.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Here are some examples of .NET runtimes:</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Common Language Runtime (CLR)</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Core Common Language Runtime (CoreCLR)</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>.NET Native (for UWP)</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Mono runtime</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The .NET documentation sometimes uses "runtime" to mean an implementation of .NET.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For example, in the following sentences "runtime" should be replaced with "implementation":</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>"The various .NET runtimes implement specific versions of .NET Standard."</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>"Libraries that are intended to run on multiple runtimes should target this framework."</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>(referring to .NET Standard)</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>"The various .NET runtimes implement specific versions of .NET Standard.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>â€¦</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Each .NET runtime version advertises the highest .NET Standard version it supports â€¦"</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>We plan to eliminate this inconsistent usage.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>stack</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A set of programming technologies that are used together to build and run applications.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>"The .NET stack" refers to the .NET Standard and all .NET implementations.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The phrase "a .NET stack" may refer to one implementation of .NET.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>target framework</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The collection of APIs that a .NET app or library relies on.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>An app or library can target a version of .NET Standard (for example, .NET Standard 2.0), which is specification for a standardized set of APIs across all .NET implementations.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>An app or library can also target a version of a specific .NET implementation, in which case it gets access to implementation-specific APIs.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For example, an app that targets Xamarin.iOS gets access to Xamarin-provided iOS API wrappers.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>For some target frameworks (for example, the .NET Framework) the available APIs are defined by the assemblies that a .NET implementation installs on a system, which may include application framework APIs (for example, ASP.NET, WinForms).</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For package-based target frameworks (such as .NET Standard and .NET Core), the framework APIs are defined by the packages installed in the app or library.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>In that case, the target framework implicitly specifies a metapackage that references all the packages that together make up the framework.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Target Frameworks<ept id="p1">](frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>TFM</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Target framework moniker.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A standardized token format for specifying the target framework of a .NET app or library.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Target frameworks are typically referenced by a short name, such as <ph id="ph1">`net462`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Long-form TFMs (such as .NETFramework,Version=4.6.2) exist but are not generally used to specify a target framework.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Target Frameworks<ept id="p1">](frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>UWP</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>An implementation of .NET that is used for building modern, touch-enabled Windows applications and software for the Internet of Things (IoT).</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>It's designed to unify the different types of devices that you may want to target, including PCs, tablets, phablets, phones, and even the Xbox.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>UWP provides many services, such as a centralized app store, an execution environment (AppContainer), and a set of Windows APIs to use instead of Win32 (WinRT).</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Apps can be written in C++, C#, VB.NET, and JavaScript.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>When using C# and VB.NET, the .NET APIs are provided by .NET Core.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Guide<ept id="p1">](index.md)</ept></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework Guide<ept id="p1">](../framework/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core<ept id="p1">](../core/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET Overview<ept id="p1">](/aspnet/index#pivot=aspnet)</ept></source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET Core Overview<ept id="p1">](/aspnet/index#pivot=core)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>