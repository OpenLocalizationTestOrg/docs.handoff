<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ceb1ec2a2945cb98da24c8c7e984dffaf6e1def</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\how-to-call-model-defined-functions-as-object-methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65a23604f4047cb282c0f9c725bf00f216fcf322</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e89fb407d8dccf9ffbcb32068c802cac8c1c4ca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Call Model-Defined Functions as Object Methods | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Call Model-Defined Functions as Object Methods</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes how to call a model-defined function as a method on an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> object or as a static method on a custom class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>model-defined function<ept id="p1">*</ept> is a function that is defined in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The procedures in the topic describe how to call these functions directly instead of calling them from LINQ to Entities queries.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For information about calling model-defined functions in LINQ to Entities queries, see <bpt id="p1">[</bpt>How to: Call Model-Defined Functions in Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/how-to-call-model-defined-functions-in-queries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Whether you call a model-defined function as an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> method or as a static method on a custom class, you must first map the method to the model-defined function with an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, when you define a method on the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> class, you must use the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.QueryProvider%2A&gt;</ph> property to expose the LINQ provider, whereas when you define a static method on a custom class, you must use the <ph id="ph3">&lt;xref:System.Linq.IQueryable.Provider%2A&gt;</ph> property to expose the LINQ provider.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see the examples that follow the procedures below.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The procedures below provide high-level outlines for calling a model-defined function as a method on an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> object and as a static method on a custom class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The examples that follow provide more detail about the steps in the procedures.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The procedures assume that you have defined a function in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Define Custom Functions in the Conceptual Model<ept id="p1">](http://msdn.microsoft.com/en-us/0dad7b8b-58f6-4271-b238-f34810d68e5f)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To call a model-defined function as a method on an ObjectContext object</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add a source file to extend the partial class derived from the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> class, auto-generated by the Entity Framework tools.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Defining the CLR stub in a separate source file will prevent the changes from being lost when the file is regenerated.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add a common language runtime (CLR) method to your <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> class that does the following:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Maps to the function defined in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To map the method, you must apply an <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute&gt;</ph> to the method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute.NamespaceName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute.FunctionName%2A&gt;</ph> parameters of the attribute are the namespace name of the conceptual model and the function name in the conceptual model, respectively.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Function name resolution for LINQ is case sensitive.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the results of the <ph id="ph1">&lt;xref:System.Linq.IQueryProvider.Execute%2A&gt;</ph> method that is returned by the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.QueryProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call the method as a member on an instance of the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To call a model-defined function as static method on a custom class</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add a class to your application with a static method that does the following:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Maps to the function defined in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To map the method, you must apply an <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute&gt;</ph> to the method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute.NamespaceName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EdmFunctionAttribute.FunctionName%2A&gt;</ph> parameters of the attribute are the namespace name of the conceptual model and the function name in the conceptual model, respectively.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Accepts an <ph id="ph1">&lt;xref:System.Linq.IQueryable&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the results of the <ph id="ph1">&lt;xref:System.Linq.IQueryProvider.Execute%2A&gt;</ph> method that is returned by the <ph id="ph2">&lt;xref:System.Linq.IQueryable.Provider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Call the method as a member a static method on the custom class</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Calling a Model-Defined Function as a Method on an ObjectContext Object<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to call a model-defined function as a method on an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The example uses the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Consider the conceptual model function below that returns product revenue for a specified product.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>(For information about adding the function to your conceptual model, see <bpt id="p1">[</bpt>How to: Define Custom Functions in the Conceptual Model<ept id="p1">](http://msdn.microsoft.com/en-us/0dad7b8b-58f6-4271-b238-f34810d68e5f)</ept>.)</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#4<ept id="p2">](../../../../../../samples/snippets/xml/VS_Snippets_Data/dp l2e methods on objectcontext/xml/adventureworks.edmx#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following code adds a method to the <ph id="ph1">`AdventureWorksEntities`</ph> class that maps to the conceptual model function above.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#2<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp l2e methods on objectcontext/cs/program.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Methods on ObjectContext#2<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp l2e methods on objectcontext/vb/class1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following code calls the method above to display the product revenue for a specified product:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#3<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp l2e methods on objectcontext/cs/program.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Methods on ObjectContext#3<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp l2e methods on objectcontext/vb/module1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to call a model-defined function that returns a collection (as an <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Consider the conceptual model function below that returns all the <ph id="ph1">`SalesOrderDetails`</ph> for a given product ID.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#7<ept id="p2">](../../../../../../samples/snippets/xml/VS_Snippets_Data/dp l2e methods on objectcontext/xml/adventureworks.edmx#7)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following code adds a method to the <ph id="ph1">`AdventureWorksEntities`</ph> class that maps to the conceptual model function above.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#8<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp l2e methods on objectcontext/cs/program.cs#8)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Methods on ObjectContext#8<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp l2e methods on objectcontext/vb/class1.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following code calls the method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that the returned <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> query is further refined to return line totals for each <ph id="ph2">`SalesOrderDetail`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#9<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp l2e methods on objectcontext/cs/program.cs#9)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Methods on ObjectContext#9<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp l2e methods on objectcontext/vb/module1.vb#9)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Calling a Model-Defined Function as a Static Method on a Custom Class<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The next example demonstrates how to call a model-defined function as a static method on a custom class.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The example uses the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When you call a model-defined function as a static method on a custom class, the model-defined function must accept a collection and return an aggregation of values in the collection.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Consider the conceptual model function below that returns product revenue for a SalesOrderDetail collection.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(For information about adding the function to your conceptual model, see <bpt id="p1">[</bpt>How to: Define Custom Functions in the Conceptual Model<ept id="p1">](http://msdn.microsoft.com/en-us/0dad7b8b-58f6-4271-b238-f34810d68e5f)</ept>.).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#1<ept id="p2">](../../../../../../samples/snippets/xml/VS_Snippets_Data/dp l2e methods on objectcontext/xml/adventureworks.edmx#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following code adds a class to your application that contains a static method that maps to the conceptual model function above.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#5<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp l2e methods on objectcontext/cs/program.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Methods on ObjectContext#5<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp l2e methods on objectcontext/vb/class1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following code calls the method above to display the product revenue for a SalesOrderDetail collection:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Methods on ObjectContext#6<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp l2e methods on objectcontext/cs/program.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Methods on ObjectContext#6<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp l2e methods on objectcontext/vb/module1.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.edmx File Overview<ept id="p1">](http://msdn.microsoft.com/en-us/f4c8e7ce-1db6-417e-9759-15f8b55155d4)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Queries in LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/queries-in-linq-to-entities.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Calling Functions in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/calling-functions-in-linq-to-entities-queries.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>