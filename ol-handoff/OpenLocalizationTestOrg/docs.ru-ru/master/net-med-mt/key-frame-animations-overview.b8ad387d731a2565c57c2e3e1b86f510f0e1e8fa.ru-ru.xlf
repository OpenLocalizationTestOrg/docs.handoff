<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="key-frame-animations-overview.md" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7002172dadc932b00ed3ff3c24d41a2df4328631</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\key-frame-animations-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">533f21a20fe83c76aee67f8396aaaa889a58d5e3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">323d1d89f836497fffa6ec712483841f41071a60</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Key-Frame Animations Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Key-Frame Animations Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic introduces you to key-frame animations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Key-frame animations enable you to animate using more than two target values, and control an animation's interpolation method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To understand this overview, you should be familiar with <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> animations and timelines.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For an introduction to animations, see the <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It also helps to be familiar with From/To/By animations.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see the From/To/By Animations Overview.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>What is a Key-Frame Animation?</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Like a From/To/By animation, a key-frame animation animates the value of a target property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It creates a transition among its target values over its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, while a From/To/By animation creates a transition between two values, a single key-frame animation can create transitions among any number of target values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unlike a From/To/By animation, a key frame animation has no From, To, or By properties with which to set its target values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A key-frame animation's target values are described using key frames objects (hence the term, "key-frame animation").</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To specify the animation's target values, you create key frame objects and add them to the animation's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the animation runs, it transitions between the frames you specified.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition to supporting multiple target values, some key-frame methods even support multiple interpolation methods.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An animation's interpolation method defines how it transitions from one value to the next.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>There are three types of interpolations: discrete, linear, and splined.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To animate with a key-frame animation, you complete the following steps.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Declare the animation and specify its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>, just like you would for a from/to/by animation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For each target value, create a key frame of the appropriate type, set its value and <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph>, and add it to the animation's <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Associate the animation with a property, just like you would with a From/To/By animation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about applying an animation to a property using a storyboard, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph> to animate a <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> element to four different locations.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Like a From/To/By animation, a key-frame animation can be applied to a property by using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> in markup and code or by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method in code.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You may also use a key-frame animation to create an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> and apply it to one or more properties.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information about the different methods for applying animations, see the <bpt id="p1">[</bpt>Property Animation Techniques Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Key-Frame Animation Types</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because animations generate property values, there are different animation types for different property types.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To animate a property that takes a <ph id="ph1">&lt;xref:System.Double&gt;</ph> (such as an element's <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> property), you use an animation that produces <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To animate a property that takes a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>, you use an animation that produces <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> values, and so on.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The key-frame animation classes belong to the <ph id="ph1">&lt;xref:System.Windows.Media.Animation&gt;</ph> namespace and adhere to the following naming convention:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>Type&gt;<ept id="p1">*</ept> <ph id="ph2">`AnimationUsingKeyFrames`</ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Where <bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>Type&gt;<ept id="p1">*</ept> is the type of value that the class animates.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides the following key-frame animation classes.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Property type</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Corresponding from/to/by animation class</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Interpolation methods supported</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Discrete</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Discrete</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Discrete</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Discrete</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Discrete, Linear, Splined</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Target Values (key frames) and Key Times</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Just as there are different types of key-frame animations for animating different property types, there are also different types of key frame objects: one for each type of value animated and interpolation method supported.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Key frame types adhere to the following naming convention:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>InterpolationMethod&gt;<ph id="ph2">\&lt;</ph>Type&gt;<ept id="p1">*</ept> <ph id="ph3">`KeyFrame`</ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Where <bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>InterpolationMethod&gt;<ept id="p1">*</ept> is the interpolation method the key frame uses and <bpt id="p2">*</bpt><ph id="ph2">\&lt;</ph>Type&gt;<ept id="p2">*</ept> is the type of value that the class animates.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A key-frame animation that supports all three interpolation methods will have three key frame types that you can use.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, you can use three key frame types with a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DiscreteDoubleKeyFrame&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.LinearDoubleKeyFrame&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Media.Animation.SplineDoubleKeyFrame&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>(Interpolation methods are described in detail in a later section.)</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The primary purpose of a key frame is to specify a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Every key frame type provides these two properties.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph> property specifies the target value for that key-frame.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> property specifies when (within the animation's <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>) a key frame's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph> is reached.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When a key frame animation begins, iterates through its key frames in the order defined by their <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If there is no key frame at time 0, the animation creates a transition between the target property's current value and the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph> of the first key frame; otherwise, the animation's output value becomes the value of the first key frame.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The animation creates a transition between the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph> of the first and second key frames using the interpolation method specified by the second key frame.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The transition starts at the first key frame's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> and ends when the second key frame's <ph id="ph2">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> is reached.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The animation continues, creating transitions between each subsequent key frame and its preceding key frame.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Finally, the animation transitions to the value of the key frame with the greatest key time that is equal to or smaller than the animation's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the animation's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Duration.Automatic%2A&gt;</ph> or its <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> is equal to the time of the last key frame, the animation ends.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Otherwise, if the animation's <ph id="ph1">&lt;xref:System.Windows.Duration&gt;</ph> is greater than the key time of the last key frame, the animation holds the key frame value until it reaches the end of its <ph id="ph2">&lt;xref:System.Windows.Duration&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Like all animations, a key-frame animation uses its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property to determine whether it holds it final value when it reaches the end of its active period.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Timing Behaviors Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph> object defined in the preceding example to demonstrate how the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> properties work.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The first key frame immediately sets the animation's output value to 0.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The second key frame animates from 0 to 350.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It starts after the first key frame ends (at time = 0 seconds) and plays for 2 seconds, ending at time = 0:0:2.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The third key frame animates from 350 to 50.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It starts when the second key frame ends (at time = 2 seconds) and plays for 5 seconds, ending at time = 0:0:7.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The fourth key frame animates from 50 to 200.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>It starts when the third key frame ends (at time = 7 seconds) and plays for 1 second, ending at time = 0:0:8.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> property of the animation was set to 10 seconds, the animation holds its final value for two seconds before ending at time = 0:0:10.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Interpolation Methods</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The preceding sections mentioned that some key-frame animations support multiple interpolation methods.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An animation's interpolation describes how an animation transitions between values over its duration.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>By selecting which key frame type you use with your animation, you can define the interpolation method for that key frame segment.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>There are three different types of interpolation methods: linear, discrete, and splined.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Linear Interpolation</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>With linear interpolation, the animation progresses at a constant rate of the segment duration.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For example, if a key frame segment transitions from 0 to 10 over a duration of 5 seconds, the animation will output the following values at the specified times:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Time</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Output value</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>6</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>8</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>4.25</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>8.5</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>4.5</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>9</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>5</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>10</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Discrete Interpolation</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>With discrete interpolation, the animation function jumps from one value to the next without interpolation.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If a key frame segment transitions from 0 to 10 over a duration of 5 seconds, the animation will output the following values at the specified times:</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Time</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Output value</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>4.25</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>4.5</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>5</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>10</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Notice how the animation does not change its output value until the very end of the segment duration.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Splined interpolation is more complex.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>It is described in the next section.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Splined Interpolation</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Splined interpolation can be used to achieve more realistic timing effects.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Because animations are so often used to imitate effects that occur in the real world, developers might need fine control of the acceleration and deceleration of objects, and close manipulation of timing segments.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Spline key frames enable you to animate with splined interpolation.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>With other key frames, you specify a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.Value%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>With a spline key frame, you also specify a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The following example shows a single spline key frame for a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Notice the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeySpline&gt;</ph> property; that's what makes a spline key frame different from the other types of key frames.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A cubic Bezier curve is defined by a start point, an end point, and two control points.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeySpline&gt;</ph> property of a spline key frame defines the two control point of a Bezier curve that extends from (0,0) to (1,1).</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The first control point controls the curve factor of the first half of the Bezier curve, and the second control point controls the curve factor of the second half of the Bezier segment.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The resulting curve describes the rate of change for that spline key frame.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The steeper the curve, the faster the key frame changes its values.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>As the curve gets flatter, the key frame changes its values more slowly.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>You might use <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeySpline&gt;</ph> to simulate physical trajectories like falling water or bouncing balls, or apply other "ease in" and "ease out" effects to motion animations.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>For user interaction effects like background fades or control button rebound, you might apply splined interpolation to speed up or slow down the rate of change for an animation in a specific way.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The following example specifies a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeySpline&gt;</ph> of 0,1 1,0, which creates the following Bezier curve.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A Bezier curve<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-keyspline-0-1-1-0.png "</bpt>graphicsmm_keyspline_0_1_1_0<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A key spline with control points (0.0, 1.0) and (1.0, 0.0)</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This key frame animates rapidly when it begins, slows down, and then speeds up again before it ends.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following example specifies a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeySpline&gt;</ph> of 0.5,0.25 0.75,1.0, which creates the following Bezier curve.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A Bezier curve<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-keyspline-025-050-075-10.png "</bpt>graphicsmm_keyspline_025_050_075_10<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A key spline with control points (0.25, 0.5) and (0.75, 1.0)</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Because the curvature of the Bezier curve changes very little, this key frame animates at an almost constant rate; it slows down somewhat toward its very end.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph> to animate the position of rectangle.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph> uses <ph id="ph2">&lt;xref:System.Windows.Media.Animation.SplineDoubleKeyFrame&gt;</ph> objects, the transition between each key frame value uses splined interpolation.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Splined interpolation can be difficult to understand; experimenting with different settings can help.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept> enables you to change key spline values and see the result it has on an animation.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Combining Interpolation Methods</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>You can use key frames with different interpolation types in a single key frame animation.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>When two key frame animations with different interpolations follow each other, the interpolation method of the second key frame is used to create the transition from the first value to the second.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt;</ph> is created that uses linear, splined, and discrete interpolation.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>More about Duration and Key Times</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Like other animations, key-frame animations have a <ph id="ph1">&lt;xref:System.Windows.Duration&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In addition to specifying the animation's <ph id="ph1">&lt;xref:System.Windows.Duration&gt;</ph>, you need to specify what portion of that duration is given to each key frame.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You do so by describing a   <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> for each of the animation's key frames.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Each key frame's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> specifies when that key frame ends.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IKeyFrame.KeyTime%2A&gt;</ph> property does not specify how long the key time plays.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The amount of time a key frame plays is determined by when the key frame ends, when the previous key frame ended, and the animation's duration.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Key times may be specified as a time value, a percentage, or as the special values <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The following list describes the different ways of specifying key times.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>TimeSpan Values</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You may use <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> values to specify a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The value should be greater than or equal to 0 and less than or equal to the animation's duration.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The following example shows an animation with a duration of 10 seconds and four key frames whose key times are specified as time values.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The first key frame animates from the base value to 100 over the first 3 seconds, ending at time = 0:0:03.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The second key frame animates from 100 to 200.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>It starts after the first key frame ends (at time = 3 seconds) and plays for 5 seconds, ending at time = 0:0:8.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The third key frame animates from 200 to 500.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>It starts when the second key frame ends (at time = 8 seconds) and plays for 1 second, ending at time = 0:0:9.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The fourth key frame animates from 500 to 600.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>It starts when the third key frame ends (at time = 9 seconds) and plays for 1 second, ending at time = 0:0:10.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Percentage Values</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A percentage value specifies that the key frame ends at some percentage of the animation's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>, you specify the percentage as a number followed by the <ph id="ph2">`%`</ph> symbol.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>In code, you use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.FromPercent%2A&gt;</ph> method and pass it a <ph id="ph2">&lt;xref:System.Double&gt;</ph> indicating the percentage.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The value must be greater than or equal to 0 and less than or equal to 100 percent.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The following example shows an animation with a duration of 10 seconds and four key frames whose key times are specified as percentages.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The first key frame animates from the base value to 100 over the first 3 seconds, ending at time = 0:0:3.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The second key frame animates from 100 to 200.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>It starts after the first key frame ends (at time = 3 seconds) and plays for 5 seconds, ending at time = 0:0:8 (0.8 * 10 = 8).</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The third key frame animates from 200 to 500.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>It starts when the second key frame ends (at time = 8 seconds) and plays for 1 second, ending at time = 0:0:9 (0.9 * 10 = 9).</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The fourth key frame animates from 500 to 600.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>It starts when the third key frame ends (at time = 9 seconds) and plays for 1 second, ending at time = 0:0:10 (1 * 10 = 10).</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Special Value, Uniform</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph> timing when you want each key frame to take the same amount of time.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph> key time divides the available time equally by the number of key frames to determine the end time of each key frame.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The following example shows an animation with a duration of 10 seconds and four key frames whose key times are specified as <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The first key frame animates from the base value to 100 over the first 2.5 seconds, ending at time = 0:0:2.5.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The second key frame animates from 100 to 200.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>It starts after the first key frame ends (at time = 2.5 seconds) and plays for approximately 2.5 seconds, ending at time = 0:0:5.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The third key frame animates from 200 to 500.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>It starts when the second key frame ends (at time = 5 seconds) and plays for 2.5 seconds, ending at time = 0:0:7.5.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The fourth key frame animates from 500 to 600.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>It starts when the second key frame ends (at time = 7.5 seconds) and plays for 2.5 seconds, ending at time = 0:0:1.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Special Value, Paced</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> timing when you want to animate at a constant rate.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> key time allocates the available time according to the length of each of the key frames to determine the duration of each frame.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This will provide the behavior that the velocity or pace of the animation remains constant.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The following example shows an animation with a duration of 10 seconds and three key frames whose key times are specified as<ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Note that, if the last key frame's key time is <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph>, its resolved key time will be set to 100 percent.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>If the first key frame in a multiframe animation is paced, its resolved key time will be set to 0.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>(If the key frame collection contains only a single key frame and it is a paced key frame, its resolved key time will be set to 100 percent.)</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Different key frames within a single key frame animation may use different key time types.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Combining Key Times, Out-Of-Order Key Frames</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You can use key frames with different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> value types in the same animation.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>And, although it's recommended that you add key frames in the order in which they should play, it's not necessary.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The animation and timing system is capable of resolving out of order key frames.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Key frames with invalid key times are ignored.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The following list describes the procedure by which key times are resolved for a key-frame animation's key frames.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Resolve <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Determine the animation’s <bpt id="p1">*</bpt>total interpolation time<ept id="p1">*</ept>, the total time it takes the key-frame animation to complete a forward iteration.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>If the animation's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> is not <ph id="ph2">&lt;xref:System.Windows.Duration.Automatic%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Duration.Forever%2A&gt;</ph>, the total interpolation time is the value of the animation's <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Otherwise, the total interpolation time is the largest <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> value specified among its key frames, if any exist.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Otherwise, the total interpolation time is 1 second.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Use the total interpolation time value to resolve <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTimeType&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Resolve last key frame, if it wasn't already resolved in the previous steps.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> of the last key frame is <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph>, its resolved time will be equal to the total interpolation time.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> of the first key frame is <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> and this animation has more than on key frames, resolve its <ph id="ph3">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> value to zero; if there is only one key frame and its <ph id="ph4">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> value is <ph id="ph5">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph>, it is resolved to the total interpolation time, as described in the preceding step.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Resolve remaining <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values: they are each given an equal share of the available time.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>During this process, unresolved <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values  are temporarily treated as <ph id="ph3">&lt;xref:System.Windows.Media.Animation.KeyTime.Uniform%2A&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values, and get a temporary resolved time.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Resolve the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values of key frames with unspecified key times by using the key frames declared nearest them that have resolved <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Resolve remaining <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime.Paced%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> use the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values of the neighboring key frames to determine their resolved time.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The goal is to ensure that the velocity of the animation is constant around this key frame's resolved time.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Sort key frames in order of resolved time (primary key), and order of declaration (secondary key), i.e., use a stable sort based on the resolved key frame <ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeyTime&gt;</ph></source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.KeySpline&gt;</ph></source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph></source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>KeyFrame Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160012)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Animation Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Key-Frame How-to Topics<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/key-frame-animation-how-to-topics.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Timing Behaviors Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>