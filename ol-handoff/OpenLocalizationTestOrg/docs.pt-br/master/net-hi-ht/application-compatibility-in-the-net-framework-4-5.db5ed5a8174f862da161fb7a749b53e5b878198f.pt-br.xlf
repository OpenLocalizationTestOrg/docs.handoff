<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f63c3217b6def96240447501247d22a1058cacf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\migration-guide\application-compatibility-in-the-net-framework-4-5.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce6fcb0d3bdf1af4bd554caf0d07e577ed9f7684</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">917b8a70ff7f948b5c6dd7e69de0e30597ae3167</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Application Compatibility in the .NET Framework 4.5 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Application Compatibility in the .NET Framework 4.5</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes application compatibility issues between the .NET Framework 4 and 4.5, including fixes and changes based on customer feedback.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Most of these changes do not require any programming modifications in your applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For those that may involve modifications, see the Impact column of the tables.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> is not supported on <ph id="ph2">[!INCLUDE[winxp](../../../includes/winxp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For compatibility issues between the .NET Framework 4.5 and 4.5.1, see <bpt id="p1">[</bpt>Application Compatibility in 4.5.1<ept id="p1">](../../../docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5-1.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic describes notable changes in the following areas:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Core<ept id="p1">](#core)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data<ept id="p1">](#sql)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Networking<ept id="p1">](#network)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Serialization<ept id="p1">](#serialize)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Printing<ept id="p1">](#Printing)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tools and Resources<ept id="p1">](#tools)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET<ept id="p1">](#asp)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ClickOnce<ept id="p1">](#ClickOnce)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managed Extensibility Framework (MEF)<ept id="p1">](#mef)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Web Applications<ept id="p1">](#web)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Communication Foundation (WCF)<ept id="p1">](#wcf)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms<ept id="p1">](#winForms)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Presentation Foundation (WPF)<ept id="p1">](#wpf)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Workflow Foundation (WF)<ept id="p1">](../../../docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md#wwf)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML, XSLT<ept id="p1">](#xml)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This topic does not discuss types and members that have been declared obsolete in the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For a list of these, see <bpt id="p1">[</bpt>What's Obsolete in the Class Library<ept id="p1">](../../../docs/framework/whats-new/whats-obsolete.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For information about new features, see <bpt id="p1">[</bpt>What's New<ept id="p1">](../../../docs/framework/whats-new/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Core</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In addition to the following application compatibility issues, see the <bpt id="p1">[</bpt>Serialization<ept id="p1">](#serialize)</ept> section for serialization-related issues.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%28System.Collections.Concurrent.BlockingCollection%7B%600%7D%5B%5D%2C%600%40%29?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TakeFromAny%2A?displayProperty=fullName&gt;</ph> methods</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%28System.Collections.Concurrent.BlockingCollection%7B%600%7D%5B%5D%2C%600%40%29?displayProperty=fullName&gt;</ph> method no longer returns -1 or throws an exception.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TakeFromAny%2A?displayProperty=fullName&gt;</ph> method no longer throws an exception if one of the collections is marked completed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This change makes it possible to work with collections when one of the collections is either empty or completed, but the other collection still has items that can be retrieved.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If an assembly of compiled regular expressions is built with the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> but targets the <ph id="ph2">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, attempting to use one of the regular expressions in that assembly on a system with <ph id="ph3">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> installed throws an exception.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To work around this problem, you can do either of the following:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Build the assembly that contains the regular expressions with the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use an interpreted regular expression.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Task?displayProperty=fullName&gt;</ph> disposal</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Except for <ph id="ph1">`Task.IAsyncResult.AsyncWaitHandle`</ph>, <ph id="ph2">&lt;xref:System.Threading.Tasks.Task?displayProperty=fullName&gt;</ph> methods no longer throw an <ph id="ph3">&lt;xref:System.ObjectDisposedException&gt;</ph> exception after the object is disposed.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This change supports the use of cached tasks.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, a method can return a cached task to represent an already completed operation instead of allocating a new task.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This was impossible in previous .NET Framework versions, because any consumer of the task could dispose of it, which rendered it unusable.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Unobserved exceptions in <ph id="ph1">&lt;xref:System.Threading.Tasks.Task?displayProperty=fullName&gt;</ph> operations</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task?displayProperty=fullName&gt;</ph> class represents an asynchronous operation, it catches all non-severe exceptions that occur during asynchronous processing.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, if an exception is not observed and your code never waits on the task, the exception will no longer propagate on the finalizer thread and crash the process during garbage collection.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This change enhances the reliability of applications that use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> class to perform unobserved asynchronous processing.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The previous behavior can be restored by providing an appropriate handler for the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler.UnobservedTaskException?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName&gt;</ph> methods with time-out arguments</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>, these methods behaved inconsistently.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When the time-out expired, if one or more tasks were completed or canceled before the method call, the method threw an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When the time-out expired, if no tasks were completed or canceled before the method call, but one or more tasks entered these states after the method call, the method returned <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, these method overloads now return <ph id="ph2">`false`</ph> if any tasks are still running when the time-out interval expires, and they throw an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> exception only if an input task was cancelled (regardless of whether it was cancelled before or after the method call) and no other tasks are still running.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This change makes the method's behavior consistent.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, it is possible (but unlikely) for application code to depend on time-out enabled <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName&gt;</ph> overloads to throw an exception when at least one task has already faulted or has been canceled before the time-out has expired.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.IsCanceled%2A?displayProperty=fullName&gt;</ph> property can be used for the same purpose.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Support for type forwarding when multi-targeting</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A new CodeDOM feature allows a compiler to compile against the targeted version of mscorlib.dll instead of the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> version of mscorlib.dll.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This change prevents compiler warnings (and compilation failure in cases where warnings are treated as errors) when CodeDOM finds two definitions for types that have been type-forwarded.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This change may have unintended side effects only if different versions of reference assemblies are mixed in a single location.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The enumerator throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception if an element in the collection is modified.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This change applies only to applications that target <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> and should have no negative impact.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It safeguards data integrity and makes it more likely that race conditions will be identified.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Two changes to International Resource Identifier (IRI) parsing affect URIs in applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>iriParsing&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/network/iriparsing-element-uri-settings.md)</ept> is enabled by default and cannot be turned off.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Previously, it was disabled by default.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Unicode normalization form C (NFC) will no longer be performed on non-host portions of URIs.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Previously, NFC was performed on the entire URI when <ph id="ph1">`&lt;iriParsing&gt;`</ph> was enabled.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>URIs that contain non-NFC (normalization form C) normalized file names will not be form-C normalized.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Application failure may result if IRI parsing uses non-normalized strings to access files that have normalized file names.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This only affects applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">`mailto:`</ph> URL throws an exception in the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> class constructor.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This only affects applications that are recompiled and that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, trailing dots at the end of a path segment in an original URI string (for example, <ph id="ph2">`http://www.proseware.com/LLC./About.aspx`</ph>) are preserved.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>(Note that path segments that consist exactly of one or two dots, such as <ph id="ph1">`http://www.proseware.com/..`</ph> or <ph id="ph2">`http://www.proseware.com/./default.htm`</ph>, are removed, but path segments that have more than two consecutive dots (such as <ph id="ph3">`http://localhost/dir1/.../dir2`</ph>) are preserved.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This change affects only applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Applications that rely on the trailing dots being removed may experience failure.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, queries in a <ph id="ph2">`file://`</ph> URI are allowed; the ?</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>character is not escaped because it is interpreted as part of the path.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This change affects only applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Applications that rely on escaping the ?</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>character may experience failure.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, Unicode control characters from U+0080 through U+009F are incorrectly encoded.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Ordinarily, Unicode control characters are not used in URIs.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Uri.EscapeUriString%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Uri.UnescapeDataString%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The list of reserved and unreserved characters now supports <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specific changes:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A&gt;</ph> escapes reserved characters based on RFC 3986.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> does not escape reserved characters.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Uri.UnescapeDataString%2A&gt;</ph> does not throw an exception if it encounters an invalid escape sequence.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Unreserved escaped characters are un-escaped.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Beginning with the .NET Framework 4.5, strings are always considered well-formed in accordance with <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> and <bpt id="p2">[</bpt>RFC 3987<ept id="p2">](http://tools.ietf.org/html/rfc3987)</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In previous versions of the .NET Framework, a string is considered well-formed in accordance with RFC 3986 and RFC 3987 only if URI parsing and IDN parsing are enabled.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For apps that target the .NET Framework 4.5 or later versions, this method returns <ph id="ph1">`false`</ph> for some URIs that are considered well-formed by apps that target earlier versions of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, a relative URI that includes  a colon in its first segment (such as "2013.05.29_14:33:41") is no longer considered well-formed.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Note that this change only affects apps that target the .NET Framework 4.5 or later versions.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskFactory.FromAsync%2A?displayProperty=fullName&gt;</ph> may now access the  <ph id="ph2">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Incorrect implementations of  <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt;</ph> may now result in undefined behavior in <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskFactory.FromAsync%2A?displayProperty=fullName&gt;</ph> method calls.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The resulting task will not complete if the implementation if the <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt;</ph> property incorrectly returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Data</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>SQLClient</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Ability to connect to a SQL Server database from managed code that runs under the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The existing synchronous API code path was modified to add asynchronous support.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The presence of non-IFS Winsock Base Service Providers (BSPs) or Layered Service Providers (LSPs) may interfere with the ability to connect to SQL Server.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SetFileCompletionNotificationModes API causes an IO completion port not work correctly with a non-IFS LSP installed<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=256032)</ept> on the Microsoft Support website.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection?displayProperty=fullName&gt;</ph> type</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Connections to SQL Server 1997 databases are no longer supported.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Applications running under the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> cannot connect to SQL Server 1997 databases.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection?displayProperty=fullName&gt;</ph> type</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Connections to SQL Server databases using the Virtual Interface Adapter (VIA) protocol are no longer supported.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Applications running under the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> cannot connect to SQL Server databases using VIA.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy?displayProperty=fullName&gt;</ph> type</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When inserting data into a column, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> uses the encoding of the destination column rather than the default encoding for <ph id="ph2">`VARCHAR`</ph> and <ph id="ph3">`CHAR`</ph> types.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This change eliminates the possibility of data corruption caused by using the default encoding when the destination column does not use the default encoding.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In rare cases, an existing application may throw a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exception if the change in encoding produces data that is too big to fit into the destination column.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=fullName&gt;</ph> collation sequence</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`sql_variant`</ph> data uses <ph id="ph2">`sql_variant`</ph> collation rather than database collation.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This change addresses possible data corruption if the database collation differs from the <ph id="ph1">`sql_variant`</ph> collation.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Applications that rely on the corrupted data may experience failure.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Entity Framework</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Log files created by the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.CreateDatabase%2A?displayProperty=fullName&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.CreateDatabase%2A&gt;</ph> method is called either directly or by using Code First with the SqlClient provider and an <ph id="ph2">`AttachDBFilename`</ph> value in the connection string, it creates a log file named <bpt id="p1">*</bpt>filename<ept id="p1">*</ept>_log.ldf instead of <bpt id="p2">*</bpt>filename<ept id="p2">*</ept>.ldf (where <bpt id="p3">*</bpt>filename<ept id="p3">*</ept> is the name of the file specified by the <ph id="ph3">`AttachDBFilename`</ph> value).</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This change improves debugging by providing a log file named according to SQL Server specifications.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>It should have no unexpected side effects.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Data Definition Language (DDL) APIs</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The behavior of DDL APIs when <ph id="ph1">`AttachDBFilename`</ph> is specified has changed as follows:</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Connection strings need not specify an <ph id="ph1">`Initial Catalog`</ph> value.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Previously, both <ph id="ph1">`AttatchDBFilename`</ph> and <ph id="ph2">`Initial Catalog`</ph> were required.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If both <ph id="ph1">`AttatchDBFilename`</ph> and <ph id="ph2">`Initial Catalog`</ph> are specified and the given MDF file exists, the <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext.DatabaseExists%2A?displayProperty=fullName&gt;</ph> method returns <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Previously, it returned <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If both <ph id="ph1">`AttatchDBFilename`</ph> and <ph id="ph2">`Initial Catalog`</ph> are specified and the given MDF file exists, calling the <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext.DeleteDatabase%2A?displayProperty=fullName&gt;</ph> method deletes the files.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.DeleteDatabase%2A?displayProperty=fullName&gt;</ph> is called when the connection string specifies an <ph id="ph2">`AttachDBFilename`</ph> value with an MDF that doesn't exist and an <ph id="ph3">`Initial Catalog`</ph> that doesn't exist, the method throws an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Previously, it threw a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>These changes make it easier to build tools and applications that use the DDL APIs.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>These changes can affect application compatibility in the following scenarios:</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The user writes code that executes a <ph id="ph1">`DROP DATABASE`</ph> command directly instead of calling <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.DeleteDatabase%2A?displayProperty=fullName&gt;</ph> if <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext.DatabaseExists%2A?displayProperty=fullName&gt;</ph> returns <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This breaks existing code If the database is not attached but the MDF file exists.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The user writes code that expects the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.DeleteDatabase%2A?displayProperty=fullName&gt;</ph> method to throw a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exception rather than an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the <ph id="ph4">`Initial Catalog`</ph> and MDF file don't exist.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.CreateDatabase%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbProviderServices.CreateDatabase%2A?displayProperty=fullName&gt;</ph> methods</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If the creation of database objects fails after an empty database is created, the method attempts to drop the database creation and propagates the original <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If the attempt to drop the database fails, the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This change prevents the creation of an empty, unusable database.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Exception handling can change somewhat, because the successful removal of the database now propagates the original <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Translate%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A?displayProperty=fullName&gt;</ph> methods</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`T`</ph> is an enumeration type, the method correctly returns data from the database.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Previously, enumeration types were not supported, so the result was always cast to zero or converted to the enumeration type.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Underlying types that are not supported by the Entity Framework, such as <ph id="ph1">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph3">&lt;xref:System.UInt64&gt;</ph>; still return zero or are converted to the enumeration type with an underlying value of zero.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Support for enumerations is new in the Entity Framework in the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>However, if developer code depends on the result to be zero, an application error could result, depending on the specific code.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>LINQ</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.Empty%2A?displayProperty=fullName&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The method returns a cached internal instance instead of returning a new <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This change results in a performance improvement.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>However, code that depends on getting two unique empty types from multiple calls to <ph id="ph1">&lt;xref:System.Linq.Enumerable.Empty%2A?displayProperty=fullName&gt;</ph> will fail.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Networking</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Types and members of the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration?displayProperty=fullName&gt;</ph> namespace</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The types and members are not supported on <ph id="ph1">[!INCLUDE[win8](../../../includes/win8-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Attempting to call them throws a <ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Applications can no longer use these types and members on <ph id="ph1">[!INCLUDE[win8](../../../includes/win8-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Serialization and deserialization of <ph id="ph1">&lt;xref:System.Net.Mail.MailMessage&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.5, mail messages can include non-ASCII characters.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4, only ASCII characters are supported.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Net.Mail.MailMessage&gt;</ph> objects that contain non-ASCII characters and that are serialized under the .NET Framework 4.5 cannot be deserialized under the .NET Framework 4.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Printing</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>This property exposes the stream of a print job and allows the user to send raw data to the underlying operating system printing components by writing to this stream.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.5 on Windows 8 and later versions of the Windows operating system, data written to this stream must be in XPS format as a package stream.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>To output print content, you can do either of the following:</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Xps.XpsDocumentWriter&gt;</ph> class to output print content.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This is the recommended alternative.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Ensure the data sent to the stream returned by  the <ph id="ph1">&lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A?displayProperty=fullName&gt;</ph> property is in XPS format as a package stream.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Serialization</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Serialization with the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>In WCF 4.5, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class was optimized to remove its dependency on the C# compiler.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This change provides significant performance gains for cold startup scenarios.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>This change may cause problems in XML serialization code that was compiled in WCF 4 but is running against WCF 4.5.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>If you encounter any problems running your existing XML serialization code in WCF 4.5, use the following configuration element to revert to the XmlSerializer behavior in WCF 4:</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Serialization and deserialization with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter?displayProperty=fullName&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Serialization using <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> can encode an object’s internal state, which is not guaranteed to be the same between versions of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Where there are differences, content serialized in one version of the .NET Framework may fail to deserialize on others.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> class does not guarantee cross-version compatibility.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer?displayProperty=fullName&gt;</ph> classes instead.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Tools and Resources</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>MSBuild</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>When you run MSBuild at a command prompt, it will respect solution configuration files that disable builds of particular projects.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>MSBuild behaves the same when called by Visual Studio and when run at a command prompt.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>You do not have to create separate solutions or remove projects from a solution to build a subset of projects in a solution.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>MSBuild</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`TreatAsLocalProperty`</ph> property in MSBuild project files prevents specific properties, including the <ph id="ph2">`OutDir`</ph> property, from being overridden at a global level.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Overrides to the <ph id="ph1">`OutDir`</ph> property may cause a potential break if <ph id="ph2">`OutDir`</ph> is a global property that is overridden after the MS.Common.Targets file is imported.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Windows error reporting: Watson buckets</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Managed crashes are grouped into categories based on a number of criteria, one of which was the assembly version.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, the file version is used instead of the assembly version.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Because the assembly version changes only between major releases, using the file version instead of the assembly version as a category makes it possible to determine the specific version of an assembly that has been involved in a managed crash.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>MSBuild</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Data from projects in the <ph id="ph1">&lt;xref:Microsoft.Build.Evaluation.ProjectCollection?displayProperty=fullName&gt;</ph> collection is not automatically reclaimed by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>If you explicitly load projects into the <ph id="ph1">&lt;xref:Microsoft.Build.Evaluation.ProjectCollection&gt;</ph> collection, you should call the <ph id="ph2">&lt;xref:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject%28Microsoft.Build.Evaluation.Project%29&gt;</ph> method for each member of the collection.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>ASP.NET</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>ASP.NET IIS registration tool (aspnet_regiis.exe)</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>On <ph id="ph1">[!INCLUDE[win8](../../../includes/win8-md.md)]</ph>, the <ph id="ph2">`–i`</ph> and <ph id="ph3">`–u`</ph> options to install and uninstall ASP.NET are not supported.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>To install or uninstall ASP.NET 4.5 with IIS 8,  use the <bpt id="p1">**</bpt>Turn Windows Features On/Off<ept id="p1">**</ept> dialog box, the Server Management tool, or the <ph id="ph1">`dism.exe`</ph> command-line tool.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.EntityDataSource?displayProperty=fullName&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page.LoadComplete?displayProperty=fullName&gt;</ph> event no longer causes the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.EntityDataSource?displayProperty=fullName&gt;</ph> control to invoke data binding for changes to create/update/delete parameters.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This change eliminates an extraneous trip to the database, prevents the values of controls from being reset, and produces behavior that is consistent with other data controls, such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This change produces different behavior in the unlikely event that applications rely on invoking data binding in the <ph id="ph1">&lt;xref:System.Web.UI.Page.LoadComplete?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Net.WebUtility.HtmlDecode%2A?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.WebUtility.UrlDecode%2A?displayProperty=fullName&gt;</ph>, and <bpt id="p1">[</bpt>System.Web.Helpers.Json.Decode<ept id="p1">](https://msdn.microsoft.com/library/system.web.helpers.json.decode.aspx)</ept> methods</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>By default, decoding methods no longer decode an invalid input sequence into an invalid UTF-16 string.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Instead, they return the original input.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The change in decoder output should matter only if you store binary data instead of UTF-16 data in strings.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>To explicitly control this behavior, set the <ph id="ph1">`aspnet:AllowRelaxedUnicodeDecoding`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>appSettings&gt;<ept id="p1">](http://msdn.microsoft.com/en-us/0d65a3f1-c522-423d-89b6-44921b6daebb)</ept> element to <ph id="ph3">`true`</ph> to enable legacy behavior or to <ph id="ph4">`false`</ph> to enable the current behavior.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Net.WebUtility.HtmlEncode%2A?displayProperty=fullName&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, characters that are outside the Basic Multilingual Plane (BMP) round-trip correctly when they are passed to the <ph id="ph2">&lt;xref:System.Net.WebUtility.HtmlDecode%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This change should have no effect on current applications.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>To restore the original behavior, set the <ph id="ph1">`targetFramework`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>httpRuntime&gt;<ept id="p1">](http://msdn.microsoft.com/library/e1f13641\(v=vs.100\).aspx)</ept> element to a string other than "4.5".</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>You can also set the <ph id="ph1">`unicodeEncodingConformance`</ph> and <ph id="ph2">`unicodeDecodingConformance`</ph> attributes of the <ph id="ph3">`&lt;webUtility&gt;`</ph> configuration element to control this behavior independently of the targeted version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Web.HttpRequest.ContentEncoding%2A?displayProperty=fullName&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>UTF-7 encoding is prohibited.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Data for applications that depend on incoming UTF-7 data will not decode properly in some cases.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This should be rare, but you can restore legacy behavior by using the <ph id="ph1">`aspnet:AllowUtf7RequestContentEncoding`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>appSettings&gt;<ept id="p1">](http://msdn.microsoft.com/en-us/0d65a3f1-c522-423d-89b6-44921b6daebb)</ept> element.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, the method escapes the ampersand (&amp;) character.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>If your app depends on the previous behavior of this method, you can add an <ph id="ph1">`aspnet:JavaScriptDoNotEncodeAmpersand`</ph> setting to the <bpt id="p1">[</bpt>ASP.NET appSettings element<ept id="p1">](http://msdn.microsoft.com/en-us/bb60e711-0669-4118-a54d-8dd71e009a00)</ept> in your configuration file.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Web.Security.MachineKey.Encode%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Security.MachineKey.Decode%2A?displayProperty=fullName&gt;</ph> methods</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>These methods are now obsolete.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Compilation of code that calls these methods produces a compiler warning.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The recommended alternatives are <ph id="ph1">&lt;xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>ClickOnce</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Apps published with ClickOnce that use a SHA-256 code-signing certificate.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The executable is signed with SHA256.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Previously, it was signed with SHA1 regardless of whether the code-signing certificate was SHA-1 or SHA-256.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This applies to:</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>All applications built with Visual Studio 2012 or later.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Applications built with Visual Studio 2010 or earlier on systems with the .NET Framework 4.5 present.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>In addition, if the .NET Framework 4.5 or later is present, the ClickOnce manifest is also signed with SHA-256 for SHA-256 certificates regardless of the .NET Framework version against which it was compiled.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The change in signing the ClickOnce executable affects only Windows Server 2003 systems; they require that <bpt id="p1">[</bpt>KB 938397<ept id="p1">](http://support.microsoft.com/kb/938397)</ept> be installed.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The change in signing the manifest with SHA-256 even when an app targets the .NET Framework 4 or earlier versions introduces a runtime dependency on the .NET Framework 4.5 or a later version.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This issue is resolved in Visual Studio 2013 Update 3 and in <ph id="ph1">[!INCLUDE[net_v46](../../../includes/net-v46-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">[!INCLUDE[net_v46](../../../includes/net-v46-md.md)]</ph> resolution, see <bpt id="p1">[</bpt>Runtime Changes<ept id="p1">](../../../docs/framework/migration-guide/runtime-changes-in-the-net-framework-4-6.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Managed Extensibility Framework (MEF)</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog?displayProperty=fullName&gt;</ph> and its derived classes</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, MEF catalogs implement <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> and therefore can no longer be used to create a serializer (<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Trying to serialize a MEF catalog throws an exception.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Web Applications</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Managed browser hosting controls from the .NET Framework 1.1 and 2.0</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Hosting these controls is blocked in Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Internet Explorer will fail to launch an application that uses managed browser hosting controls.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The previous behavior can be restored by setting the EnableIEHosting value of the registry subkey HKLM/SOFTWARE/MICROSOFT/.NETFramework to 1 for x86 systems and for 32-bit processes on x64 systems, and by setting the EnableIEHosting value of the registry subkey HKLM/SOFTWARE/Wow6432Node/Microsoft/.NETFramework to 1 for 64-bit processes on x64 systems.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Windows Communication Foundation (WCF)</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>In addition to the following application compatibility issues, see the <bpt id="p1">[</bpt>Serialization<ept id="p1">](#serialize)</ept> section for serialization-related issues.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Messages in WCF web services hosted in Internet Information Services (IIS) or ASP.NET Development Server that exceed <ph id="ph1">`maxRequestLength`</ph> (in ASP.NET) or <ph id="ph2">`maxReceivedMessageSize`</ph> (in WCF)</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The HTTP status code has changed from 400 (Bad Request) to 413 (Request Entity Too Large), and messages that exceed either the <ph id="ph1">`maxRequestLength`</ph> or the <ph id="ph2">`maxReceivedMessageSize`</ph> setting throw a <ph id="ph3">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>This includes cases in which the transfer mode is <ph id="ph1">&lt;xref:System.ServiceModel.TransferMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This change facilitates debugging in cases where the message length exceeds the limits allowed by ASP.NET or WCF.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>You must modify any code that performs processing based on an HTTP 400 status code.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Replace`</ph> in OData URLs</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Replace`</ph> method in OData URLs is disabled by default.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>When OData <ph id="ph1">`Replace`</ph> is disabled (now by default), the user request will throw an exception and the request will fail.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost?displayProperty=fullName&gt;</ph> object no longer adds a default endpoint if an explicit endpoint has been added by application code.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If a client application tries to connect to an endpoint that is no longer added by default, an HTTP error results.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Windows Forms</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>System.Drawing.dll</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CheckForOverflowUnderflow`</ph> property for the assembly is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Previously when overflows occurred, the result would be silently truncated.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Now an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.Imaging.EncoderParameter.%23ctor%28System.Drawing.Imaging.Encoder%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName&gt;</ph> constructor</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The constructor has been deprecated.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The constructor does not work on 64-bit systems.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Imaging.EncoderParameter.%23ctor%28System.Drawing.Imaging.Encoder%2CSystem.Int32%2CSystem.Drawing.Imaging.EncoderParameterValueType%2CSystem.IntPtr%29?displayProperty=fullName&gt;</ph> constructor instead.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Windows Presentation Foundation (WPF)</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>In addition to the following application compatibility issues, see the <bpt id="p1">[</bpt>Serialization<ept id="p1">](#serialize)</ept> section for serialization-related issues.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A?displayProperty=fullName&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The default limit to the maximum number of undo operations for the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> classes has changed from -1 (no limit) to 100.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>This change should have no negative impact.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>However, you can explicitly set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A&gt;</ph> property after instantiating the control.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.PageRangeSelection?displayProperty=fullName&gt;</ph> enumeration</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.PageRangeSelection&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.PageRangeSelection&gt;</ph> members have been added to the enumeration.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This change should have no impact on existing applications.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref:System.Windows.Controls.PageRangeSelection?displayProperty=fullName&gt;</ph> for existing members that use this enumeration.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> elements</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> elements now appear in the control view of the UI Automation (UIA) tree.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>This change improves accessibility.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>However, it affects test tools that rely on the previous structure of the UIA tree to locate neighboring elements.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Synchronization of the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName&gt;</ph> property and the property to which it is bound</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>In some cases, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName&gt;</ph> property reflects a previous value of the databound property value if the property is modified during a databinding write operation.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>This should have no negative impact.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>However, you can restore the previous behavior by setting the <ph id="ph1">&lt;xref:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.TextBox?displayProperty=fullName&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox?displayProperty=fullName&gt;</ph> control is inactive, selected text inside the box displays in a different color than when the text box is active.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>You can restore the previous behavior by setting the <ph id="ph1">&lt;xref:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>If a control derived from <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.MultiSelector&gt;</ph> with <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A&gt;</ph> set to <ph id="ph3">`true`</ph> has duplicates in its <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A?displayProperty=fullName&gt;</ph> collection, the duplicated items appear more than once.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Removing these items from the data source (for example, by calling <ph id="ph1">`Items.Clear`</ph>) fails to remove them from the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A?displayProperty=fullName&gt;</ph> collection; only the first instance is removed.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Subsequent use of  the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A?displayProperty=fullName&gt;</ph> collection, such as a call to <ph id="ph2">`SelectedItems.Clear`</ph>,  can encounter problems, such as an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>, because the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A?displayProperty=fullName&gt;</ph> collection contains items that are no longer in the data source.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>This issue has been addressed in the <ph id="ph1">[!INCLUDE[net_v462](../../../includes/net-v462-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A?displayProperty=fullName&gt;</ph> collection has duplicate items, you remove them from the data source, and you wish to continue working with the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A?displayProperty=fullName&gt;</ph> collection, upgrade to the <ph id="ph3">[!INCLUDE[net_v462](../../../includes/net-v462-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, the method returns a reference to the current instance.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, it returns a new instance.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Code that assumes equal references indicate that the executing thread is in the correct context will now execute correctly.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>However, because of the change, code that calls <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy%2A?displayProperty=fullName&gt;</ph> should be tested.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Monitoring <ph id="ph1">`WM_POWERBROADCAST`</ph> messages by using a handler added by calling the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>A window must explicitly register for <ph id="ph1">`WM_POWERBROADCAST`</ph> notifications by passing its handle to the <bpt id="p1">[</bpt>RegisterPowerSettingNotification<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa373196.aspx)</ept> function.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Through the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, WPF automatically did this for all windows.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, WPF automatically registers one special window, but does not automatically register most app windows.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Code that handles <ph id="ph1">`WM_POWERBROADCAST`</ph> notifications does not execute.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>To continue to receive <ph id="ph1">`WM_POWERBROADCAST`</ph> notifications, call the <bpt id="p1">[</bpt>RegisterPowerSettingNotification<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa373196.aspx)</ept> function to register a WPF window (typically the main application window) for <ph id="ph2">`WM_POWERBROADCAST`</ph> notifications.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>In WPF apps that you develop with C#, this also requires that you select the <bpt id="p1">**</bpt>Allow unsafe code<ept id="p1">**</ept> box on the project properties <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>In addition, if you are registering a window that does not persist until application shutdown, you should unregister it by calling the <bpt id="p1">[</bpt>UnregisterPowerSettingNotification<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa373237.aspx)</ept> function and passing it the <ph id="ph1">`HPOWERNOTIFY`</ph> handle returned by the call to the <bpt id="p2">[</bpt>RegisterPowerSettingNotification<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/aa373196.aspx)</ept> function.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Windows Workflow Foundation (WF)</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>System.Activities.dll security</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The assembly is marked with the <ph id="ph1">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</ph>attribute.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Derived classes cannot be marked with the <ph id="ph1">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Previously, derived types had to be marked with the <ph id="ph1">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>However, this change should have no real impact.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>WF 3.0 types and members</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The types and members of WF 3.0 are now marked as obsolete.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Trying to compile source code that uses WF 3.0 types or members generates a compiler error.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>You should use the WF 4 types and members in the <ph id="ph1">&lt;xref:System.Activities&gt;</ph>namespaces.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.Presentation.DragDropHelper?displayProperty=fullName&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Presentation.DragDropHelper&gt;</ph> class includes new methods that support drag-and-drop operations with multiple objects.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Existing drag-and-drop methods that support dragging a single object are obsolete.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>What's Obsolete in the Class Library<ept id="p1">](../../../docs/framework/whats-new/whats-obsolete.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Although the old methods have been deprecated, they continue to be supported by both the compiler and the common language runtime.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>However, the new methods offer greater functionality.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The recommended replacements for some of the existing methods are as follows:</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Activities.Presentation.DragDropHelper.DoDragMove%28System.Activities.Presentation.WorkflowViewElement%2CSystem.Windows.Point%29?displayProperty=fullName&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Activities.Presentation.DragDropHelper.DoDragMove%28System.Activities.Presentation.WorkflowViewElement%2CSystem.Windows.Point%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Activities.Presentation.DragDropHelper.GetCompositeView%28System.Activities.Presentation.WorkflowViewElement%29&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Activities.Presentation.DragDropHelper.GetCompositeView%28System.Windows.DragEventArgs%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Activities.Presentation.DragDropHelper.GetDraggedModelItems%28System.Windows.DragEventArgs%29&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Activities.Presentation.DragDropHelper.GetDraggedModelItem%28System.Windows.DragEventArgs%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Activities.Presentation.DragDropHelper.GetDroppedObjects%28System.Windows.DependencyObject%2CSystem.Windows.DragEventArgs%2CSystem.Activities.Presentation.EditingContext%29&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Activities.Presentation.DragDropHelper.GetDroppedObject%28System.Windows.DependencyObject%2CSystem.Windows.DragEventArgs%2CSystem.Activities.Presentation.EditingContext%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Overload resolution of calls to the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=fullName&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> adds new overloads that include a parameter of type <ph id="ph2">&lt;xref:System.Action?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>When existing code is recompiled, compilers may resolve calls to <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=fullName&gt;</ph> methods that have a <ph id="ph2">&lt;xref:System.Delegate&gt;</ph> parameter as calls to <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=fullName&gt;</ph> methods with an <ph id="ph4">&lt;xref:System.Action?displayProperty=fullName&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If a call to a <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=fullName&gt;</ph> overload with a <ph id="ph2">&lt;xref:System.Delegate&gt;</ph> parameter is resolved as a call to a <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=fullName&gt;</ph> overload with an <ph id="ph4">&lt;xref:System.Action?displayProperty=fullName&gt;</ph> parameter, the following differences in behavior may occur:</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher.UnhandledException?displayProperty=fullName&gt;</ph> events are not raised.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Instead, exceptions are handled by the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler.UnobservedTaskException&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Calls to some members, such as <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A?displayProperty=fullName&gt;</ph>, block until the operation has completed.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.Expressions.Literal%601?displayProperty=fullName&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The associated <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> object will convert a  <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> or <ph id="ph3">&lt;xref:System.DateTimeOffset&gt;</ph> object whose <ph id="ph4">`Second`</ph> and <ph id="ph5">`Millisecond`</ph> components are non-zero and (for a <ph id="ph6">&lt;xref:System.DateTime&gt;</ph> value) whose <ph id="ph7">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> property is not <ph id="ph8">&lt;xref:System.DateTimeKind&gt;</ph> to property element syntax instead of a string.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>This change allows <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> values to be round-tripped.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Custom XAML parsers that assume that input XAML is in the attribute syntax will not function correctly.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>XML, XSLT</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Change</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XDocument.Validate`</ph> method</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions?displayProperty=fullName&gt;</ph> value is passed to the <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> method and a validation error occurs, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException.LineNumber%2A?displayProperty=fullName&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaException.LinePosition%2A?displayProperty=fullName&gt;</ph> properties now contain line information.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Exception-handling code that depends on the values of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.LineNumber%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException.LinePosition%2A?displayProperty=fullName&gt;</ph> properties will no longer work.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Loading XML files with <ph id="ph1">&lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>DTD entity expansion is limited to 10,000,000 characters.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Loading XML files without DTD entity expansion or with limited DTD entity expansion is unaffected.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Files with DTD entities that expand to more than 10,000,000 characters fail to load, and now throw an exception.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Forward compatibility mode for the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, XSLT 1.0 forward compatibility had the following issues:</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Loading a style sheet failed if its version was set to 2.0 and the parser encountered an unrecognized XSLT 1.0 construct.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:sort`</ph> construct failed to sort data if the style sheet version was set to 1.1.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, these issues have been fixed, and XSLT 1.0 forward compatibility mode works properly.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>XSLT 1.0 forward compatibility mode now works as previously.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Exception messages when an XSLT file is too complex</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, the text of the error message when an XSLT file is too complex is "The style sheet is too complex."</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>In previous versions, the error message was "XSLT compile error."</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Application code that depends on the text of the error message will no longer work.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>However,  the exception types remain the same, so this change should have no real impact.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>XML schema validation for xsd:anyURI</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, XML schema validation is more strict.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>If you use xsd:anyURI to validate a URI such as a mailto protocol, validation fails if there are spaces in the URI.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>In previous versions of the .NET Framework, validation succeeded.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The change affects only applications that target the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>What's Obsolete in the Class Library<ept id="p1">](../../../docs/framework/whats-new/whats-obsolete.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>What's New<ept id="p1">](../../../docs/framework/whats-new/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Compatibility<ept id="p1">](../../../docs/framework/migration-guide/application-compatibility.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Compatibility in 4.5.1<ept id="p1">](../../../docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5-1.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Compatibility in 4.5.2<ept id="p1">](../../../docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5-2.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>