<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8823685f0e093569159ef367636b15ce4908f24</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\connection-strings.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2595000078180f09cf0f32d1d03c83b23cb05a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e01c6536aa4686189ef872b17b762e56bde3ee53</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connection Strings | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Connection Strings</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A connection string contains initialization information that is passed as a parameter from a data provider to a data source.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The syntax depends on the data provider, and the connection string is parsed during the attempt to open a connection.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Connection strings used by the Entity Framework contain information used to connect to the underlying ADO.NET data provider that supports the Entity Framework.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They also contain information about the required model and mapping files.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The connection string is used by the EntityClient provider when accessing model and mapping metadata and connecting to the data source.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The connection string can be accessed or set through the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> class can be used to programmatically construct or access parameters in the connection string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Build an EntityConnection Connection String<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Entity Data Model tools<ept id="p1">](http://msdn.microsoft.com/en-us/91076853-0881-421b-837a-f582f36be527)</ept> generate a connection string that is stored in the application's configuration file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> retrieves this connection information automatically when creating object queries.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> used by an <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> instance can be accessed from the <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext.Connection%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Managing Connections and Transactions<ept id="p1">](http://msdn.microsoft.com/en-us/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Connection String Parameters</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The format of a connection string is a semicolon-delimited list of key/value parameter pairs:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The equal sign (=) connects each keyword and its value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Keywords are not case sensitive, and spaces between key/value pairs are ignored.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, values  can be case sensitive, depending on the data source.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Any values that contain a semicolon, single quotation marks, or double quotation marks must be enclosed in double quotation marks.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following table lists the valid names for keyword values in the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Keyword</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Required if the <ph id="ph1">`Name`</ph> keyword is not specified.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The provider name, which is used to retrieve the <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> object for the underlying provider.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This value is constant.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`Name`</ph> keyword is not included in an entity connection string, a non-empty value for the <ph id="ph2">`Provider`</ph> keyword is required.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This keyword is mutually exclusive with the <ph id="ph1">`Name`</ph> keyword.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies the provider-specific connection string that is passed to the underlying data source.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This connection string is expressed by using valid keyword/value pairs for the data provider.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">`Provider Connection String`</ph> will cause a run-time error when it is evaluated by the data source.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This keyword is mutually exclusive with the <ph id="ph1">`Name`</ph> keyword.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`Provider Connection String`</ph> must be surrounded by quotes.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following is an example:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following example is not going to work:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Required if the <ph id="ph1">`Name`</ph> keyword is not specified.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A pipe-delimited list of directories, files, and resource locations in which to look for metadata and mapping information.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following is an example:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Blank spaces on each side of the pipe separator are ignored.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This keyword is mutually exclusive with the <ph id="ph1">`Name`</ph> keyword.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In this case, you cannot supply them directly in the connection string.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Name`</ph> keyword is not allowed in a configuration file.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`Name`</ph> keyword is not included in the connection string, a non-empty values for Provider keyword is required.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This keyword is mutually exclusive with all the other connection string keywords.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following is an example of a connection string for the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832)</ept> stored in the application configuration file:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Model and Mapping File Locations</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Metadata`</ph> parameter contains a list of locations for the <ph id="ph2">`EntityClient`</ph> provider to search for model and mapping files.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Model and mapping files are often deployed in the same directory as the application executable file.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These files can also be deployed in a specific location or included as an embedded resource in the application.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Embedded resources are specified as follows:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following options are available for defining the location of an embedded resource:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The full name of an assembly with the embedded resource.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The name includes the simple name, version name, supported culture, and public key, as follows:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Resources can be embedded in any assembly that is accessible by the application.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you specify a wildcard (<ph id="ph1">\*</ph>) for <ph id="ph2">`assemblyFullName`</ph>, the Entity Framework runtime will search for resources in the following locations, in this order:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>1.  The calling assembly.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>2.  The referenced assemblies.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>3.  The assemblies in the bin directory of an application.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the files are not in one of these locations, an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  When you use wildcard (*), the Entity Framework has to look through all the assemblies for resources with the correct name.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To improve performance, specify the assembly name instead of the wildcard.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the included resource, such as AdvendtureWorksModel.csdl.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The metadata services will only look for files or resources with one of the following extensions: .csdl, .ssdl, or .msl.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`resourceName`</ph> is not specified, all metadata resources will be loaded.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The resources should have unique names within an assembly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If multiple files with the same name are defined in different directories in the assembly, the <ph id="ph1">`resourceName`</ph> must include the folder structure before the name of the resource, for example FolderName.FileName.csdl.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`resourceName`</ph> is not required when you specify a wildcard (*) for <ph id="ph2">`assemblyFullName`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To improve performance, embed resources in the calling assembly, except in non-Web scenarios where there is no reference to underlying mapping and metadata files in the calling assembly.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following example loads all the model and mapping files in the calling assembly, referenced assemblies, and other assemblies in the bin directory of an application.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following example loads the model.csdl file from the AdventureWorks assembly, and loads the model.ssdl and model.msl files from the default directory of the running application.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example loads the three specified resources from the specific assembly.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following example loads all the embedded resources with the extensions .csdl, .msl, and .ssdl from the assembly.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The following example loads all the resources in the relative file path plus "datadir\metadata<ph id="ph1">\\</ph>" from the loaded assembly location.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following example loads all the resources in the relative file path from the loaded assembly location.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Support for the &amp;#124;DataDirectory&amp;#124; Substitution String and the Web Application Root Pperator (~)</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DataDirectory`</ph> and the ~ operator are used in the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>as part of the <ph id="ph3">`Metadata`</ph> and <ph id="ph4">`Provider Connection String`</ph> keywords.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> forwards the <ph id="ph2">`DataDirectory`</ph> and the ~ operator to <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and the store provider, respectively.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Resolves to a relative path to a mapping and metadata files.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This is the value that is set through the <ph id="ph1">`AppDomain.SetData("DataDirectory", objValue)`</ph> method.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataDirectory`</ph> substitution string must be surrounded by the pipe characters and there cannot be any whitespace between its name and the pipe characters.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataDirectory`</ph> name is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If a physical directory named "DataDirectory" has to be passed as a member of the list of metadata paths, add whitespace should on either side or both sides of the name, for example: <ph id="ph1">`Metadata="DataDirectory1 &amp;#124; DataDirectory &amp;#124; DataDirectory2"`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An ASP.NET application resolves &amp;#124;DataDirectory&amp;#124; to the "<ph id="ph1">\&lt;</ph>application root&gt;/app_data" folder.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Resolves to the Web application root.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The ~ character at a leading position is always interpreted as the Web application root operator (~), although it might represent a valid local subdirectory.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To refer to such a local subdirectory, the user should explicitly pass <ph id="ph1">`./~`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DataDirectory`</ph> and the ~ operator should be specified only at the beginning of a path, they are not resolved at any other position.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The Entity Framework will try to resolve <ph id="ph1">`~/data`</ph>, but it will treat <ph id="ph2">`/data/~`</ph> as a physical path.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A path that starts with the <ph id="ph1">`DataDirectory`</ph> or the ~ operator cannot resolve to a physical path outside the branch of the <ph id="ph2">`DataDirectory`</ph> and the ~ operator.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, the following paths will resolve: <ph id="ph1">`~`</ph> , <ph id="ph2">`~/data`</ph> , <ph id="ph3">`~/bin/Model/SqlServer`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following paths will fail to resolve: <ph id="ph1">`~/..`</ph>, <ph id="ph2">`~/../other`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DataDirectory`</ph> and the ~ operator can be extended to include sub-directories, as follows: <ph id="ph2">`|DataDirectory|\Model`</ph>, <ph id="ph3">`~/bin/Model`</ph></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The resolution of the <ph id="ph1">`DataDirectory`</ph> substitution string and the ~ operator is non-recursive.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For example, when <ph id="ph1">`DataDirectory`</ph> includes the <ph id="ph2">`~`</ph> character, an exception will occur.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This prevents an infinite recursion.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with Data Providers<ept id="p1">](../../../../../docs/framework/data/adonet/ef/working-with-data-providers.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Deployment Considerations<ept id="p1">](../../../../../docs/framework/data/adonet/ef/deployment-considerations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Managing Connections and Transactions<ept id="p1">](http://msdn.microsoft.com/en-us/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Connection Strings<ept id="p1">](../../../../../docs/framework/data/adonet/connection-strings.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>