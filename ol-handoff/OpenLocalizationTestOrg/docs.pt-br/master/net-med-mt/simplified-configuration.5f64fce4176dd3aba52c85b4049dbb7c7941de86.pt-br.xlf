<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c26e787d290529ca4be7be282b77353dd811fad</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\simplified-configuration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98f3c4bd497d27edb4ca865c0d2a436b5b058a24</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">036ad9775b44d86ada59302c47b32d18f5d44a58</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Simplified Configuration | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Simplified Configuration</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Configuring <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> services can be a complex task.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are many different options and it is not always easy to determine what settings are required.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>While configuration files increase the flexibility of <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> services, they also are the source for many hard to find problems.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)]</ph> addresses these problems and provides a way to reduce the size and complexity of service configuration.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Simplified Configuration</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> service configuration files, the &lt;<ph id="ph2">`system.serviceModel`</ph>&gt; section contains a &lt;<ph id="ph3">`service`</ph>&gt; element for each service hosted.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;<ph id="ph1">`service`</ph>&gt; element contains a collection of &lt;<ph id="ph2">`endpoint`</ph>&gt; elements that specify the endpoints exposed for each service and optionally a set of service behaviors.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;<ph id="ph1">`endpoint`</ph>&gt; elements specify the address, binding, and contract exposed by the endpoint, and optionally binding configuration and endpoint behaviors.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;<ph id="ph1">`system.serviceModel`</ph>&gt; section also contains a &lt;<ph id="ph2">`behaviors`</ph>&gt; element that allows you to specify service or endpoint behaviors.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example shows the &lt;<ph id="ph1">`system.serviceModel`</ph>&gt; section of a configuration file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph> makes configuring a <ph id="ph2">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> service easier by removing the requirement for the &lt;<ph id="ph3">`service`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you do not add a &lt;<ph id="ph1">`service`</ph>&gt;  section or add any endpoints in a &lt;<ph id="ph2">`service`</ph>&gt; section and your service does not programmatically define any endpoints, then a set of default endpoints are automatically added to your service, one for each service base address and for each contract implemented by your service.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In each of these endpoints, the endpoint address corresponds to the base address, the binding is determined by the base address scheme and the contract is the one implemented by your service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you do not need to specify any endpoints or service behaviors or make any binding setting changes, you do not need to specify a service configuration file at all.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If a service implements two contracts and the host enables both HTTP and TCP transports the service host creates four default endpoints, one for each contract using each transport.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create default endpoints the service host must know what bindings to use.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These settings are specified in a &lt;<ph id="ph1">`protocolMappings`</ph>&gt; section within the &lt;<ph id="ph2">`system.serviceModel`</ph>&gt; section.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;<ph id="ph1">`protocolMappings`</ph>&gt; section contains a list of transport protocol schemes mapped to binding types.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The service host uses the base addresses passed to it to determine which binding to use.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;<ph id="ph1">`protocolMappings`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Changing default configuration elements, such as bindings or behaviors, might affect services defined in lower levels of the configuration hierarchy, since they might be using these default bindings and behaviors.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Thus, whoever changes default bindings and behaviors needs to be aware that these changes might affect other services in the hierarchy.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Services hosted under Internet Information Services (IIS) or Windows Process Activation Service (WAS) use the virtual directory as their base address.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the previous example, an endpoint with a base address that starts with the "http" scheme uses the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An endpoint with a base address that starts with the "net.tcp" scheme uses the <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can override settings in a local App.config or Web.config file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each element within the &lt;<ph id="ph1">`protocolMappings`</ph>&gt; section must specify a scheme and a binding.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Optionally it can specify a <ph id="ph1">`bindingConfiguration`</ph> attribute that specifies a binding configuration within the &lt;<ph id="ph2">`bindings`</ph>&gt; section of the configuration file.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`bindingConfiguration`</ph> is specified, the anonymous binding configuration of the appropriate binding type is used.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Service behaviors are configured for the default endpoints by using anonymous &lt;<ph id="ph1">`behavior`</ph>&gt; sections within &lt;<ph id="ph2">`serviceBehaviors`</ph>&gt; sections.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Any unnamed &lt;<ph id="ph1">`behavior`</ph>&gt; elements within &lt;<ph id="ph2">`serviceBehaviors`</ph>&gt; are used to configure service behaviors.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, the following configuration file enables service metadata publishing for all services within the host.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Endpoint behaviors are configured by using anonymous &lt;<ph id="ph1">`behavior`</ph>&gt; sections within &lt;<ph id="ph2">`serviceBehaviors`</ph>&gt; sections.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following example is a configuration file equivalent to the one at the beginning of this topic that uses the simplified configuration model.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This feature relates only to WCF service configuration, not client configuration.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Most times, WCF client configuration will be generated by a tool such as svcutil.exe or adding a service reference from Visual Studio.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you are manually configuring a WCF client you will need to add a <ph id="ph1">\&lt;</ph>client&gt; element to the configuration and specify any endpoints you wish to call.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Services Using Configuration Files<ept id="p1">](../../../docs/framework/wcf/configuring-services-using-configuration-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Bindings for Services<ept id="p1">](../../../docs/framework/wcf/configuring-bindings-for-wcf-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring System-Provided Bindings<ept id="p1">](../../../docs/framework/wcf/feature-details/configuring-system-provided-bindings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Services<ept id="p1">](../../../docs/framework/wcf/configuring-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Windows Communication Foundation Applications<ept id="p1">](http://msdn.microsoft.com/en-us/13cb368e-88d4-4c61-8eed-2af0361c6d7a)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring WCF Services in Code<ept id="p1">](../../../docs/framework/wcf/configuring-wcf-services-in-code.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>