<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bf058c2fad4c12eebf29757090178e67c5ba3ca</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\property-promotion-activity.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">557e2bdaa9647322236b6fd1cd0511d254fb1be5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eeb2857dc86a85c66af5d572825e7a49f68b4d68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Property Promotion Activity | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Property Promotion Activity</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample provides an end-to-end solution that integrates the <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph> Promotion feature directly into the workflow authoring experience.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A collection of configuration elements, workflow activities, and workflow extensions that simplify the use of the Promotion feature are provided.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Additionally, the sample contains a simple workflow that demonstrates how to use this collection.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Samples are provided for educational purposes only.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They are not intended for a production environment, and have not been tested in a production environment.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Microsoft does not provide technical support for these samples.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An initialized <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph> database</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Sample Projects</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>PropertyPromotionActivity<ept id="p1">**</ept> project contains files pertaining to the promotion-specific configuration elements, workflow activities, and workflow extensions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CounterServiceApplication<ept id="p1">**</ept> project contains a sample workflow that uses the <bpt id="p2">**</bpt>SqlWorkflowInstanceStorePromotion<ept id="p2">**</ept> project.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A SQL script (PropertyPromotionActivitySQLSample.sql) that must be run against the <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph> database.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A solution file that links the two <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph> projects (<ph id="ph2">`PropertyPromotionActivity.sln`</ph>)</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To set up and run the sample</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initialize a workflow persistence database.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Navigate to the sample directory (\WF\Basic\Persistence\PropertyPromotionActivity) and run CreateInstanceStore.cmd.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If Administrator privileges are not available, create a SQL Server login.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In SQL Server Management Studio, go to <bpt id="p1">**</bpt>Security<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Logins<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Logins<ept id="p1">**</ept> and create a new login.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add your ACL user to the SQL role by opening <bpt id="p1">**</bpt>Databases<ept id="p1">**</ept>, <bpt id="p2">**</bpt>InstanceStore<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Security<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>New user<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Login name<ept id="p1">**</ept> to the user created above.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add the user to the Database role membership System.Activities.DurableInstancing.InstanceStoreUsers (and others).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Note that the user might exist already (for example, user dbo).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Open the PropertyPromotionActivity.sln solution file in <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you created the instance store in a database other than a local installation of SQL Server Express, then you must update the database connection string.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Alter the App.config file under the <bpt id="p1">**</bpt>CounterServiceApplication<ept id="p1">**</ept> by setting the value of the <ph id="ph1">`connectionString`</ph> attribute on the <ph id="ph2">`sqlWorkflowInstanceStorePromotion`</ph> node so that it points to the persistence database that was initialized in step 1.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Build and run the solution.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This will start the Counter WF service and automatically start a workflow instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Quickly select all the rows in the [dbo].[CounterService] view in your persistence database (this view was added by running CreateInstanceStore.cmd in step 1).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You will see a result set similar to the following:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>InstanceId</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CounterValue</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CounterValueLastUpdated</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>2FA2C302-929E-4C0D-8C25-768A3DA20CE5</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>12</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>2010-02-18 22:48:01.740</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>As you keep refreshing the view, you will notice that CounterValue and CounterValueLastUpdated change every two seconds.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is the interval at which the counter updates itself.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CounterValue and CounterValueLastUpdated represent promoted properties for this workflow.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To remove the sample</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Run RemoveInstanceStore.cmd in the sample directory (\WF\Basic\Persistence\PropertyPromotionActivity).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Understanding This Sample</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The sample contains two projects and an SQL file:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CounterServiceApplication<ept id="p1">**</ept> is a console application that hosts a simple Counter WF service.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Upon receiving a one-way message through the <ph id="ph1">`Start`</ph> endpoint, the workflow counts from 0 to 29, incrementing a counter variable every two seconds.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>After every counter increment, the workflow persists, and the promoted properties are updated in the [dbo].[CounterService] view.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When the console application is run, it hosts the WF service and sends a message to the <ph id="ph1">`Start`</ph> endpoint, creating a Counter WF instance.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PropertyPromotionActivity<ept id="p1">**</ept> is a class library that contains the configuration elements, workflow activities, and workflow extensions that the <bpt id="p2">**</bpt>CounterServiceApplication<ept id="p2">**</ept> uses.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PropertyPromotionActivitySQLSample.sql<ept id="p1">**</ept> creates and adds the view [dbo].[CounterService] to the database.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CounterServiceApplication</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Using the SqlWorkflowInstanceStorePromotion Configuration Element</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SqlWorkflowInstanceStorePromotion`</ph> configuration element inherits from the <ph id="ph2">`SqlWorkflowInstanceStore`</ph> configuration element, but adds an additional configuration element called <ph id="ph3">`promotionSets`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`promotionSets`</ph> element enables the user to specify promoted properties through configuration.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This is the configuration file that is used by the sample:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Examine the definition for the [dbo].[CounterService] view.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When a workflow instance persists, a row is inserted into the <ph id="ph1">`InstancePromotedProperties`</ph> view for each <ph id="ph2">`PromotionSet`</ph> defined in the configuration.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This row contains all the promoted properties of the <ph id="ph1">`PromotionSet`</ph> (one promoted property per column).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`PromotionSet`</ph> is keyed by the tuple: <ph id="ph2">`InstanceId, PromotionName`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In this sample, we have one <ph id="ph1">`PromotionSet`</ph> defined in configuration whose name attribute is <ph id="ph2">`CounterService`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Note how the <ph id="ph1">`PromotionName`</ph> column value is equal to the name attribute of the <ph id="ph2">`PromotionSet`</ph> element.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The order of the <ph id="ph1">`promotedValue`</ph> elements correlates with the placement of the promoted properties in the <ph id="ph2">`InstancePromotedProperties`</ph> view.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Count`</ph> is the first <ph id="ph2">`promotedValue`</ph> element.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>As a result, it is mapped to the <ph id="ph1">`Value1`</ph> column in the <ph id="ph2">`InstancePromotedProperties`</ph> view.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`LastIncrementedAt`</ph> is the second <ph id="ph2">`promotedValue`</ph> element.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>As a result, it is mapped to the <ph id="ph1">`Value2`</ph> column in the <ph id="ph2">`InstancePromotedProperties`</ph> view.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Using the PromoteValue Activity</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Examine the CounterService.xamlx file in the <ph id="ph1">[!INCLUDE[wf2](../../../../includes/wf2-md.md)]</ph> Designer.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Notice that there are two special activities in the WF definition: <ph id="ph1">`PromoteValue&lt;DateTime&gt;`</ph> and <ph id="ph2">`PromoteValue&lt;Int32&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`PromoteValue&lt;Int32&gt;`</ph> activity has its <ph id="ph2">`Name`</ph> member defined as <ph id="ph3">`Count`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This matches with the first <ph id="ph1">`promotedValue`</ph> element in the configuration, and has its <ph id="ph2">`Value`</ph> defined as the <ph id="ph3">`Counter`</ph> workflow variable.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When the workflow persists, the <ph id="ph1">`Counter`</ph> workflow variable is persisted as a promoted property into the <ph id="ph2">`Value1`</ph> column of the <ph id="ph3">`InstancePromotedProperties`</ph> view.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`PromoteValue&lt;DateTime&gt;`</ph> activity has its <ph id="ph2">`Name`</ph> member defined as <ph id="ph3">`LastIncrementedAt`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This matches with the second <ph id="ph1">`promotedValue`</ph> element in the configuration, and has its <ph id="ph2">`Value`</ph> defined as the <ph id="ph3">`TimeLastIncremented`</ph> workflow variable.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This means that when the workflow persists, the value for the <ph id="ph1">`TimeLastIncremented`</ph> workflow variable will be persisted as a promoted property into the <ph id="ph2">`Value2`</ph> column of the <ph id="ph3">`InstancePromotedProperties`</ph> view.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`PromotedValue`</ph> activity also has a Boolean member called <ph id="ph2">`ClearExistingPromotedData`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When this member is set to <ph id="ph1">`true`</ph>, this clears all the promoted property values up to that point in the workflow.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, if a Sequence activity is defined as follows:</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>PromoteValue { Name = "Count", Value = 3}</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>PromoteValue {Name = "LastIncrementedAt", Value = 1-1-2000 }</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Persist</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>PromoteValue {Name = "Count", Value = 4, ClearExistingPromotedData = true}</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Persist</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>On the second persist, the promoted value for <ph id="ph1">`Count`</ph> will be 4.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>However, the promoted value for <ph id="ph1">`LastIncrementedAt`</ph> will be <ph id="ph2">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ClearExistingPromotedData`</ph> was not set to <ph id="ph2">`true`</ph> for step 4, then after the second persist, the promoted value for Count would be 4.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>As a result, the promoted value for <ph id="ph1">`LastIncrementedAt`</ph> would still be 1-1-2000.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>PropertyPromotionActivity</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This class library contains the following public classes to simplify use of the <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph> Promotion feature.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PromoteValue Class</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This class promotes one property.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The name of the promoted property should match a name attribute of a <ph id="ph1">`promotedValue`</ph> element in the configuration.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This activity can be used in the Workflow Designer.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>See the CounterServiceApplication for an example usage.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>ClearExistingPromotedData (Bool)</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Clears all values that were promoted before this activity.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Name (string)</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The name that represents this property.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This should match the name attribute of a <ph id="ph1">\&lt;</ph>promotedValue&gt; element in the configuration.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Value (InArgument<ph id="ph1">\&lt;</ph>T&gt;)</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The variable / value that you want to store in the column.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>PromoteValues Class</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Promotes multiple properties.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The names of the promoted properties should match all name attributes in the <ph id="ph1">`promotedValue`</ph> elements in the configuration.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Usage is similar to the <ph id="ph1">`PromoteValue`</ph> activity, except for the fact that multiple properties can be promoted at the same time.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This activity cannot be used in the Workflow Designer.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>SqlWorkflowInstanceStorePromotionBehavior</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Derives from <ph id="ph1">`SqlWorkflowInstanceStoreBehavior`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This derived class adds a custom persistence participant (also a part of this library) as a workflow extension.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The implementation of the previous two workflow activities relies on this custom persistence participant.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This class library also contains the <ph id="ph1">`ConfigurationElement`</ph> implementation for the <ph id="ph2">`SqlWorkflowInstanceStorePromotionElement`</ph> and a custom persistence participant used by the previous promotion activities.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>PropertyPromotionActivitySQLSample</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This SQL file creates a <ph id="ph1">`[dbo].[CounterService]`</ph> view in addition to the <ph id="ph2">`[InstancePromotedProperties]`</ph> view for querying all instances that have a CounterService Promotion set.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your computer.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing:</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory:</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AppFabric Hosting and Persistence Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=193961)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>