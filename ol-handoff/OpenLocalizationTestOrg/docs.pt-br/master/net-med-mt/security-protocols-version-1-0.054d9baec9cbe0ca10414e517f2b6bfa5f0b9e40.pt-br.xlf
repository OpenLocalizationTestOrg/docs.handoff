<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2b4a4321a8e3abe1bca1624198f09e4e22222c9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\security-protocols-version-1-0.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13dc6d5ac6c7d687e6e6b5486849591fef08bcf5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8ed7dafedea216ac562c86fc29a176c3ffebe32</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Security Protocols version 1.0 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Security Protocols version 1.0</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Web Services Security Protocols provide Web services security mechanisms that cover all existing enterprise messaging security requirements.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This section describes the <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> version 1.0 details (implemented in the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>) for the following Web services security protocols.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specification/Document</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Link</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>WSS: SOAP Message Security 1.0</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0.pdf</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>WSS: Username Token Profile 1.0</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0.pdf</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>WSS: X509 Token Profile 1.0</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0.pdf</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WSS: SAML 1.1 Token Profile 1.0</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0.pdf</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>WSS: SOAP Message Security 1.1</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>WSS Username Token Profile 1.1</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0.pdf</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WSS: X.509 Token Profile 1.1</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>http://www.oasis-open.org/committees/download.php/16785/wss-v1.1-spec-os-x509TokenProfile.pdf</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WSS: Kerberos Token Profile 1.1</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>http://www.oasis-open.org/committees/download.php/16788/wss-v1.1-spec-os-KerberosTokenProfile.pdf</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>WSS: SAML 1.1 Token Profile 1.1</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>http://www.oasis-open.org/committees/download.php/16768/wss-v1.1-spec-os-SAMLTokenProfile.pdf</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>WS-Secure Conversation</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>http://msdn.microsoft.com/ws/2005/02/ws-secure-conversation/</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>WS-Trust</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>http://msdn.microsoft.com/ws/2005/02/ws-trust/</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Application Note:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Using WS-Trust for TLS Handshake</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be published</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Application Note:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Using WS-Trust for SPNEGO</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To be published</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Application Note:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Web Services Addressing Endpoint References And Identity</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To be published</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>WS-SecurityPolicy 1.1</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(2005/07)</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>http://msdn.microsoft.com/ws/2005/07/ws-security-policy/</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>as amended by errata submitted to OASIS WS-SX Technical Committee http://www.oasis-open.org/archives/ws-sx/200512/msg00017.html</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, version 1, provides 17 authentication modes that can be used as the basis for Web services security configuration.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each mode is optimized for a common set of deployment requirements, such as:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Credentials used to authenticate client and service.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Message or transport security protection mechanisms.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Message exchange patterns.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Authentication Mode</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Client Authentication</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Server Authentication</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Mode</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>UserNameOverTransport</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>User name/password</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Transport</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CertificateOverTransport</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Transport</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>KerberosOverTransport</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Windows</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Transport</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>IssuedTokenOverTransport</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Federated</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Transport</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>SspiNegotiatedOverTransport</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Windows Sspi Negotiated</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Windows Sspi Negotiated</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Transport</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>AnonymousForCertificate</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>UserNameForCertificate</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>User name/password</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>MutualCertificate</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>MutualCertificateDuplex</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>IssuedTokenForCertificate</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Federated</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Kerberos</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Windows</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Windows</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>IssuedToken</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Federated</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Federated</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>SspiNegotiated</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Windows Sspi Negotiated</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Windows Sspi Negotiated</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>AnonymousForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>X509, TLS-Nego</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>UserNameForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>User name/password</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>X509, TLS-Nego</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>MutualSslNegotiated</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>X509</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>X509, TLS-Nego</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>IssuedTokenForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Federated</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>X509, TLS-Nego</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Endpoints using such authentication modes can express their security requirements using WS-SecurityPolicy (WS-SP).</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This document describes the structure of security header and infrastructure messages for each authentication mode and provides examples of policies and messages.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> leverages WS-SecureConversation to provide secure sessions support to protect multi-message exchanges between applications.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>See "Secure Sessions" below for implementation details.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In addition to authentication modes, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides settings to control common protection mechanisms that apply to most message security-based authentication modes, for example: order of signature versus encryption operations, algorithm suites, key derivation, and signature confirmation.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following prefixes and namespaces are used in this document.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Prefix</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Namespace</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>s</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>http://www.w3.org/2003/05/soap-envelope</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>sp</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>http://schemas.xmlsoap.org/ws/2005/07/securitypolicy</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>a</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>http://www.w3.org/2005/08/addressing</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>wsse</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>TBD – OASIS WSS 1.0 URI</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>wsse11</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>TBD – OASIS WSS 1.1 URI</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>wsu</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>TBD – OASIS WSS 1.0 Utility URI</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>ds</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>TBD – W3C XMLDSig URI</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>wst</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>TBD – WS-Trust 2005/02 URI</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>wssc</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>TBD – WS-SecureConversation 2005/02 URI</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>wsaw</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>TBD - WS-Addressing policy namespace</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>wsp</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>http://schemas.xmlsoap.org/ws/2004/09/policy</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>mssp</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/ws/2005/07/securitypolicy</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>1. Token Profiles</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Web Services Security specifications represent credential as security tokens.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports the following token types:</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>1.1 UsernameToken</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> follows UsernameToken10 and UsernameToken11 profiles with the following constraints:</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>R1101 PasswordType attribute on UsernameToken\Password element MUST be either omitted or have value #PasswordText (default).</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>One can implement the #PasswordDigest using extensibility.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>It has been observed that #PasswordDigest was often mistaken to be a secure enough password protection mechanism.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>But #PasswordDigest cannot serve as a substitute for encryption of the UsernameToken.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The primary goal of #PasswordDigest is protection against replay attacks.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> authentication modes, replay attack threats are mitigated by using message signatures.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>B1102 <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> never emits Nonce and Created sub-elements of the UsernameToken.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>These sub-elements are intended to help replay detection.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses message signatures instead.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>OASIS WSS SOAP Message Security UsernameToken Profile 1.1 (UsernameToken11) introduced key derivation from password feature.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>B1103 UsernameToken password MUST not be used for key derivation and therefore for cryptographic operations.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Rationale: passwords are generally considered too weak to be used for cryptographic operations.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>1.2 X509 Token</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports X509v3 certificates as a credential type and follows X509TokenProfile1.0 and X509TokenProfile1.1 with the following constraints:</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>R1201 The ValueType attribute on the BinarySecurityToken element must have value #X509v3 when it contains an X509v3 certificate.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>WSS X509 Token Profile 1.0 and 1.1 define also #X509PKIPathv1 and #PKCS7 as value types.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> does not support these types.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>R1202 If a SubjectKeyIdentifier (SKI) extension is present in an X509 certificate, wsse:KeyIdentifier should be used for external references to the token, with the ValueType attribute as #X509SubjectKeyIdentifier and its content the base64-encoded value of certificate's SKI extension.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>SKI references are widely implemented and proven to be a highly interoperable external reference type.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>R1203 An external Reference to X509 Security Token SHOULD NOT use ds:X509IssuerSerial.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>R1204 If X509TokenProfile1.1 is in use, an external reference to X509 Security Token SHOULD use the thumbprint introduced by WS-Security 1.1.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports X509IssuerSerial.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>However There are interoperability issues with X509IssuerSerial: <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses a string to compare two values of X509IssuerSerial.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Therefore if one reorders components of the Subject Name and sends to an <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service a reference to a certificate, it may not be found.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>1.3 Kerberos Token</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports KerberosTokenProfile1.1 for the purpose of Windows authentication with the following constraints:</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>R1301 A Kerberos Token must carry the value of a GSS wrapped Kerberos v4 AP_REQ as defined in GSS_API and the Kerberos specification, and must have the ValueType attribute with the value #GSS_Kerberosv5_AP_REQ.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses GSS wrapped Kerberos AP-REQ, not a bare AP-REQ.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This is a security best practice.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>1.4 SAML v1.1 Token</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports WSS SAML Token profiles 1.0 and 1.1 for SAML v1.1 tokens.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>It is possible to implement other versions of SAML token formats.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>1.5 Security Context Token</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports the Security Context Token (SCT) introduced in WS-SecureCoversation.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>SCT is used to represent a security context established in SecureConversation as well as the binary negotiation protocols TLS and SSPI, described below.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>2. Common Message Security Parameters</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>2.1 TimeStamp</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Timestamp presence is controlled using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> always serializes wsse:TimeStamp with wsse:Created and wsse:Expires fields.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The wsse:TimeStamp is always signed when signing is used.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>2.2 Protection Order</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports the message protection order "Sign Before Encrypt" and "Encrypt Before Sign" (Security Policy 1.1).</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>"Sign Before Encrypt" is recommended for reasons including: messages protected with Encrypt Before Sign are open to signature substitution attacks unless the WS-Security 1.1 SignatureConfirmation mechanism is used, and a signature over encrypted content makes auditing harder.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>2.3 Signature Protection</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>When Encrypt Before Sign is used, it is recommended to protect the signature to prevent brute force attacks for guessing the encrypted content or the signing key (especially when a custom token is used with weak key material).</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>2.4 Algorithm Suite</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports all algorithm suites listed in Security Policy 1.1.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>2.5 Key Derivation</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses "Key Derivation for symmetric keys" as described in WS-SecureConversation.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>2.6 Signature Confirmation</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Signature confirmation can be as protection from middle man attacks to protect the set of signatures.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>2.7 Security Header Layout</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Each authentication mode describes a certain layout for the security header.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Elements within the security header are semi-ordered.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To define the order of security header child elements, WS-Security Policy defines the following security header layout modes:</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Strict</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Items are added to the security header following the numbered layout rules described in Security Policy section 7.7.1 according to a general principle of "declare before use".</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Lax</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Items are added to the security header in any order that conforms to WSS: SOAP Message Security.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>LaxTimestampFirst</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Same as Lax except that the first item in the security header must be a wsse:Timestamp</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>LaxTimestampLast</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Same as lax except that the last item in the security header must be a wsse:Timestamp</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports all four modes for security header layout.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Security header structure and message examples for authentication modes below follow the "Strict" mode.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>2. Common Message Security Parameters</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This section provides example policies for each authentication mode along with examples showing security header structure in messages exchanged by client and service.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>6.1 Transport Protection</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides five authentication modes that use secure transport to protect messages; UserNameOverTransport, CertificateOverTransport, KerberosOverTransport, IssuedTokenOverTransport and SspiNegotiatedOverTransport.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>These authentication modes are constructed using the transport binding described in SecurityPolicy.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>For the UserNameOverTransport authentication mode the UsernameToken is a signed supporting token.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>For the other authentication modes the token appears as a signed endorsing token.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Appendix C.1.2 and C.1.3 of SecurityPolicy describe the security header layout in detail.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The following example security headers show the Strict layout for a given authentication mode.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The value of the "Derived Keys" property for the tokens in all cases is "false".</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The values of the various properties of the transport binding are as follows:</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Timestamp: true</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Security Header Layout: Strict</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Algorithm Suite: Basic256</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>6.1.1 UsernameOverTransport</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates with a Username Token which appears at the SOAP layer as a signed supporting token that is always sent from the initiator to the recipient.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The binding used is a transport binding.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Security Header Layout</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>6.1.2 CertificateOverTransport</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates using an X.509 certificate which appears at the SOAP layer as an endorsing supporting token that is always sent from the initiator to the recipient.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The binding used is a transport binding.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Security Header Layout</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>6.1.3 IssuedTokenOverTransport</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client does not authenticate to the service, as such, but rather presents a token issued by a Security Token Service (STS) and proves knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The issued token appears at the SOAP layer as an endorsing supporting token that is always sent from the initiator to the recipient.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The binding is a transport binding.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Security Header Layout</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>6.1.4 KerberosOverTransport</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates to the service using a Kerberos ticket.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The Kerberos token appears at the SOAP layer as an endorsing supporting token.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The binding is a transport binding.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Security Header Layout</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>6.1.5 SspiNegotiatedOverTransport</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>With this mode a negotiation protocol is used to perform client and server authentication.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Kerberos is used if possible, otherwise NTLM.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The resulting SCT appears at the SOAP layer as an endorsing supporting token that is always sent from initiator to recipient.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The service is additionally authenticated at the transport layer by an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The binding used is a transport binding.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>"SPNEGO" (negotiation) describes how <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses SSPI binary negotiation protocol with WS-Trust.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Security header examples in this section are after the SCT has been established through the SPNEGO handshake.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Security Header Examples</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Once the Security Context Token is established through SPNEGO handshake using WS-Trust Binary Negotiation, the application messages have security headers with the following structure.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>6.2 Using X.509 Certificates for Service Authentication</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This section describes the following authentication modes: MutualCertificate WSS1.0, Mutual CertificateDuplex, MutualCertificate WSS1.1, AnonymousForCertificate, UserNameForCertificate and IssuedTokenForCertificate.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>6.2.1 MutualCertificate WSS1.0</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates using an X.509 certificate which appears at the SOAP layer as the initiator token.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The service is also authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The binding used is an asymmetric binding with the following property values:</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Initiator Token: the client’s X.509 certificate, with inclusion mode set to …/IncludeToken/AlwaysToRecipient</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Recipient Token: Server’s X.509 Certificate, with inclusion mode is set …/IncludeToken/Never</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>6.2.2 MutualCertificateDuplex</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates using an X.509 certificate which appears at the SOAP layer as the initiator token.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The service is also authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The binding used is an asymmetric binding with the following property values:</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Initiator Token: Client’s X509 Certificate, inclusion mode is set to …/IncludeToken/AlwaysToRecipient</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Recipient Token: Server’s X509 Certificate, inclusion mode is set to …/IncludeToken/AlwaysToInitiator</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Request and Response</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Request and Response</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>6.2.3 Using SymmetricBinding with X.509 Service Authentication</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>"WSS10" provided limited support for scenarios with X509 tokens.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>For example, there was no way to provide signature and encryption protection for messages using only service X509 token.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>"WSS11" introduced the usage of EncryptedKey as a symmetric token.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Now a temporary key encrypted for the service's X.509 certificate could be used for both request and response messages protection.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The authentication modes described in the section 6.4 below use this pattern.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>WS-SecurityPolicy describes this pattern using SymmetricBinding with Service X509 token as the protection token.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Authentication modes AnonymousForCertificate, UsernameForCertificate, MutualCertificate WSS11 and IssuedTokenForCertificate all use a similar instance of sp:SymmetricBinding with the following property values:</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Protection Token: Server’s X509 Certificate, inclusion mode is set to .../IncludeToken/Never</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The above authentication modes only differ by the supporting tokens they use.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>AnonymousForCertificate does not have any supporting tokens, MutualCertificate WSS 1.1 has the client’s X509 certificate as an endorsing supporting tokens, UserNameForCertificate has a UserName Token as a signed supporting token and IssuedTokenForCertificate has the issued token as an endorsing supporting token.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Symmetric Binding</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>6.2.4 AnonymousForCertificate</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client is anonymous and the service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The binding used is an instance of symmetric binding as described in 6.4.2.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>See "Policy" in 6.2.3 above for binding details</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>6.2.5 UserNameForCertificate</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates to the service using a Username Token which appears at the SOAP layer as a signed supporting token.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The service authenticates to the client using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the protection token being a key generated by the client, encrypted with the public key of the service.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>See "Policy" in 6.2.3 above for binding details</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Signed Supporting Token</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>6.2.6 MutualCertificate (WSS 1.1)</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates using an X.509 certificate which appears at the SOAP layer as an endorsing supporting token.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The service is also authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the protection token being a key generated by the client, encrypted with the public key of the service.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>See Policy in 6.2.3 for binding details</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Endorsing Supporting Token</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>6.2.7 IssuedTokenForCertificate</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client does not authenticate to the service, as such, but instead presents a token issued by a STS and proves knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The issued token appears at the SOAP layer as an endorsing supporting token.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The service authenticates to the client using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the protection token being a key generated by the client, encrypted with the public key of the service.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>See Policy in 6.2.3 above for binding details</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Endorsing Supporting Token</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>6.3 Kerberos</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client authenticates to the service using a Kerberos ticket.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>That same ticket also provides server authentication.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the following properties;</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Protection Token: Kerberos Ticket, inclusion mode is set to .../IncludeToken/Once</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>6.4 IssuedToken</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client does not authenticate to the service, as such, rather the client presents a token issued by an STS and proves knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The service is not authenticated to the client, as such, instead the STS encrypts the shared key as part of the issued token such that only the service can decrypt the key.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The binding used is as symmetric binding with the following properties;</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Protection Token: Issued Token, inclusion mode is set to .../IncludeToken/AlwaysToRecipient</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>6.5 Using SslNegotiated for Service Authentication</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>This section describes a group of authentication modes that use a symmetric binding with the protection token being a Security Context Token per WS-SecureConversation (WS-SC) whose key value is negotiated by executing the TLS protocol over WS-Trust (WS-T) RST/RSTR messages.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Details of the TLS handshake implementation using WS-Trust are described in TLSNEGO.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Here in the message examples we will assume that SCT with an associated security context is already established through a handshake.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the following properties;</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Protection Token: SslContextToken, inclusion mode is set to .../IncludeToken/Never</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>6.5.1 Policy for SslNegotiated service authentication</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Policy for all authentication modes in this section are similar and differ only by specific signed supporting or endorsing tokens used.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>6.5.2 AnonymousForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client is anonymous and the service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The binding used is an instance of symmetric binding as described in 6.5.1 above.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>See Policy in 6.5.1 above for binding details.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>6.5.3 UserNameForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client is authenticates using a Username Token which appears at the SOAP layer as a signed supporting token.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The binding used is an instance of symmetric binding as described in 6.5.1.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>See section 6.5.1 above for binding details</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Signed Supporting Token</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>6.5.4 IssuedTokenForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client does not authenticate to the service, as such, but instead presents a token issued by an STS and proves knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The issued token appears at the SOAP layer as an endorsing supporting token.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The binding used is an instance of symmetric binding as described in 6.5.1 above.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>See section 6.5.1 above for binding details</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Endorsing Supporting Token</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>6.5.5 MutualSslNegotiated</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>With this authentication mode the client and the service authenticate using X.509 certificates.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The binding used is an instance of symmetric binding as described in 6.5.1 above.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>See section 6.5.1 above for binding details</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Endorsing Supporting Token</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>6.6 SspiNegotiated</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>With this authentication mode a negotiation protocol is used to perform client and server authentication.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Kerberos is used if possible, otherwise NTLM.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the following properties;</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Protection Token: SpnegoContextToken, inclusion mode is set to .../IncludeToken/AlwaysToRecipient</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Token Protection: False</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Entire Header And Body Signatures: True</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Protection Order: SignBeforeEncrypt</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Encrypt Signature: True</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>6.7 SecureConversation</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The binding used is a symmetric binding with the protection token being a SCT per WS-SecureConversation (WS-SC).</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>The SCT is negotiated using WS-Trust (WS-Trust) or WS-SecureConversation (WS-SC) according to a nested binding, which is itself a symmetric binding that uses a negotiation protocol.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The negotiation protocol will use Kerberos to perform client and server authentication if possible.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>If Kerberos cannot be used, it will fall back to NTLM.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Policy</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Security Header Examples: SignBeforeEncrypt, EncryptSignature</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Security Header Examples: EncryptBeforeSign</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Response</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>