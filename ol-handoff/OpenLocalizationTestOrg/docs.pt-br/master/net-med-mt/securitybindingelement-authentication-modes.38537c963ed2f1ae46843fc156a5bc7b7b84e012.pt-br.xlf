<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38dbd75c9508940256526b0a30c32f49f4ac65b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\securitybindingelement-authentication-modes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e4e61be6e6fc0811196020eb54cd5aa356499bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d505e40eeb892edc3f07fa3d0a9c70147c7e507a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>SecurityBindingElement Authentication Modes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>SecurityBindingElement Authentication Modes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> provides several modes by which clients and services authenticate to one another.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can create security binding elements for these authentication modes by using static methods on the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> class or through configuration.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic briefly describes the 18 authentication modes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an example of using the element for one of the authentication modes, see <bpt id="p1">[</bpt>How to: Create a SecurityBindingElement for a Specified Authentication Mode<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Basic Configuration Programming</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following procedure describes how to set the authentication mode in a configuration file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To set the authentication mode in configuration</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>bindings&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)</ept> element, add a <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>customBinding&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As a child element, add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>binding&gt;<ept id="p1">](../../../../docs/framework/misc/binding.md)</ept> element to the <ph id="ph2">`&lt;customBinding&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`&lt;security&gt;`</ph> element to the <ph id="ph2">`&lt;binding&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`authenticationMode`</ph> attribute to one of the values described below.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, the following code sets the mode to <ph id="ph1">`AnonymousForCertificate`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To set the mode programmatically</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Determine the return type, which can be one of the following: <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement&gt;</ph>, or <ph id="ph4">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call the appropriate static method of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the following code calls the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateAnonymousForCertificateBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomBindingsAuthMode#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_custombindingsauthmode/cs/source.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomBindingsAuthMode#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_custombindingsauthmode/vb/source.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use the binding element to create the custom binding.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Custom Bindings<ept id="p1">](../../../../docs/framework/wcf/extending/custom-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Mode Descriptions</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>AnonymousForCertificate</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client is anonymous and the service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateAnonymousForCertificateBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute of the &lt;<ph id="ph2">`security`</ph>&gt; element to <ph id="ph3">`AnonymousForCertificate`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>AnonymousForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client is anonymous and the service is authenticated using an X.509 certificate that is negotiated at run time.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement%2A&gt;</ph> method when a value of <ph id="ph3">`false`</ph> is passed for the first parameter.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`AnonymousForSslNegotiated`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CertificateOverTransport</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates using an X.509 certificate that appears at the SOAP layer as an endorsing supporting token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`CertificateOverTransport`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>IssuedToken</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client does not authenticate to the service, as such; instead, the client authenticates to a security token service and receives a SAML token, which it then presents to the server to prove its knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The service is not authenticated to the client, as such, but the security token service encrypts the shared key as part of the issued token so that only the service can decrypt the key.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`IssuedToken`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>IssuedTokenForCertificate</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client does not authenticate to the service, as such; instead, the client authenticates to a security token service and receives a SAML token, which it then presents to the server to prove its knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The issued token appears at the SOAP layer as either an endorsing supporting token or a bearer token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The service authenticates to the client using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForCertificateBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`IssuedTokenForCertificate`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>IssuedTokenForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client does not authenticate to the service, as such; instead, the client authenticates to a security token service and receives a SAML token, which it then presents to the server to prove its knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The issued token appears at the SOAP layer as either an endorsing supporting token or a bearer token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`IssuedTokenForSslnegotiated`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>IssuedTokenOverTransport</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client does not authenticate to the service, as such; instead, the client authenticates to a security token service and receives a SAML token, which it then presents to the server to prove its knowledge of a shared key.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The issued token appears at the SOAP layer as either an endorsing supporting token or a bearer token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`TransportSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenOverTransportBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`IssuedTokenOverTransport`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Kerberos</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates to the service using a Kerberos ticket.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>That same ticket also provides server authentication.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`Kerberos`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In order to use this authentication mode, the service account must be associated with a service principal name (SPN).</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To do this, run the service under the NETWORK SERVICE account or the LOCAL SYSTEM account.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Alternatively, use the SetSpn.exe tool to create an SPN for the service account.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In either case, the client must use the correct SPN in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>servicePrincipalName&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/serviceprincipalname.md)</ept> element, or by using the <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Service Identity and Authentication<ept id="p1">](../../../../docs/framework/wcf/feature-details/service-identity-and-authentication.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`Kerberos`</ph> authentication mode is used, the <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> impersonation levels are not supported.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>KerberosOverTransport</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates to the service using a Kerberos ticket.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The Kerberos token appears at the SOAP layer as an endorsing supporting token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`TransportSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosOverTransportBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`KerberosOverTransport`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In order to use this authentication mode, the service account must be associated with an SPN.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To do this, run the service under the NETWORK SERVICE account or the LOCAL SYSTEM account.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Alternatively, use the SetSpn.exe tool to create an SPN for the service account.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In either case, the client must use the correct SPN in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>servicePrincipalName&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/serviceprincipalname.md)</ept> element, or by using the <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Service Identity and Authentication<ept id="p1">](../../../../docs/framework/wcf/feature-details/service-identity-and-authentication.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>MutualCertificate</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates using an X.509 certificate that appears at the SOAP layer as an endorsing supporting token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The service is also authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`MutualCertificate`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>MutualCertificateDuplex</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates using an X.509 certificate that appears at the SOAP layer as an endorsing supporting token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The service is also authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The binding is a <ph id="ph1">`AsymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`MutualCertificateDuplex`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>MutalSslNegotiation</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client and the service authenticate using X.509 certificates.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement%2A&gt;</ph> method when a value of <ph id="ph3">`true`</ph> is passed for the first parameter.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`MutualSslNegotiated`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>SecureConversation</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method takes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> as a parameter, which is used during initialization to establish the secure session.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`SecureConversation`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If no bootstrap binding is specified, then the <ph id="ph1">`SspiNegotiated`</ph> authentication mode is used for bootstrap.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>SspiNegotiation</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>With this authentication mode, a negotiation protocol is used to perform client and server authentication.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Kerberos is used if possible; otherwise, NT LanMan (NTLM) is used.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`SspiNegotiated`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>SspiNegotiatedOverTransport</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>With this authentication mode, a negotiation protocol is used to perform client and server authentication.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Kerberos protocol is used if possible; otherwise, NTLM is used.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The resulting token appears at the SOAP layer as an endorsing supporting token; that is, a token that signs the message signature.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The service is additionally authenticated at the transport layer by an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`TransportSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`SspiNegotiatedOverTransport`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>UserNameForCertificate</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates to the service using a Username Token that appears at the SOAP layer as a signed supporting token; that is, a token that is signed by the message signature.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The service authenticates to the client using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`UserNameForCertificate`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">`UserNameForCertificate`</ph> authentication mode, both the client and service must be using WS-Security 1.1.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>UserNameForSslNegotiated</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client is authenticates using a Username Token which appears at the SOAP layer as a signed supporting token; that is, a token that is signed by the message signature.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`SymmetricSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`UserNameForSslNegotiated`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>UserNameOverTransport</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>With this authentication mode, the client authenticates using a Username Token that appears at the SOAP layer as a signed supporting token; that is, a token that is signed by the message signature.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The service is authenticated using an X.509 certificate at the transport layer.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The security binding element is a <ph id="ph1">`TransportSecurityBindingElement`</ph> returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Alternatively, set the <ph id="ph1">`authenticationMode`</ph> attribute to <ph id="ph2">`UserNameOverTransport`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a SecurityBindingElement for a Specified Authentication Mode<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>