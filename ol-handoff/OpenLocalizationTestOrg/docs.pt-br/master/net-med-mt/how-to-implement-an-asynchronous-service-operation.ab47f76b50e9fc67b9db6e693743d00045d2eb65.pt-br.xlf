<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-implement-an-asynchronous-service-operation.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33d2d9466a23af86cda7f454f43d3e6fbe180310</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\how-to-implement-an-asynchronous-service-operation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f01a47033ba98d06a354cd175eba4b488cc6e2f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e27c53120d10e702098522c75dc331a60f87c1b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Implement an Asynchronous Service Operation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Implement an Asynchronous Service Operation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> applications, a service operation can be implemented asynchronously or synchronously without dictating to the client how to call it.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, asynchronous service operations can be calling synchronously, and synchronous service operations can be called asynchronously.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For an example that shows how to call an operation asynchronously in a client application, see <bpt id="p1">[</bpt>How to: Call Service Operations Asynchronously<ept id="p1">](../../../docs/framework/wcf/feature-details/how-to-call-wcf-service-operations-asynchronously.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> synchronous and asynchronous operations, see <bpt id="p1">[</bpt>Designing Service Contracts<ept id="p1">](../../../docs/framework/wcf/designing-service-contracts.md)</ept> and <bpt id="p2">[</bpt>Synchronous and Asynchronous Operations<ept id="p2">](../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic describes the basic structure of an asynchronous service operation, the code is not complete.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For a complete example of both the service and client sides see <bpt id="p1">[</bpt>Asynchronous<ept id="p1">](http://msdn.microsoft.com/en-us/833db946-f511-4f64-a26f-2759a11217c7)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Implement a service operation asynchronously</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In your service contract, declare an asynchronous method pair according to the .NET asynchronous design guidelines.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Begin`</ph> method takes a parameter, a callback object, and a state object, and returns a <ph id="ph2">&lt;xref:System.IAsyncResult?displayProperty=fullName&gt;</ph> and a matching <ph id="ph3">`End`</ph> method that takes a <ph id="ph4">&lt;xref:System.IAsyncResult?displayProperty=fullName&gt;</ph> and returns the return value.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about asynchronous calls, see <bpt id="p1">[</bpt>Asynchronous Programming Design Patterns<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=248221)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Mark the <ph id="ph1">`Begin`</ph> method of the asynchronous method pair with the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute?displayProperty=fullName&gt;</ph> attribute and set the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, the following code performs steps 1 and 2.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_SyncAsyncClient#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/c_syncasyncclient/cs/services.cs#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>C_SyncAsyncClient#6<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_syncasyncclient/vb/services.vb#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`Begin/End`</ph> method pair in your service class according to the asynchronous design guidelines.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the following code example shows an implementation in which a string is written to the console in both the <ph id="ph1">`Begin`</ph> and <ph id="ph2">`End`</ph> portions of the asynchronous service operation, and the return value of the <ph id="ph3">`End`</ph> operation is returned to the client.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For the complete code example, see the Example section.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_SyncAsyncClient#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/c_syncasyncclient/cs/services.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>C_SyncAsyncClient#3<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_syncasyncclient/vb/services.vb#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code examples show:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A service contract interface with:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A synchronous <ph id="ph1">`SampleMethod`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An asynchronous <ph id="ph1">`BeginSampleMethod`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An asynchronous <ph id="ph1">`BeginServiceAsyncMethod`</ph><ph id="ph2">/</ph><ph id="ph3">`EndServiceAsyncMethod`</ph> operation pair.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A service implementation using a <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=fullName&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_SyncAsyncClient#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/c_syncasyncclient/cs/services.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>C_SyncAsyncClient#1<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_syncasyncclient/vb/services.vb#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Designing Service Contracts<ept id="p1">](../../../docs/framework/wcf/designing-service-contracts.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Synchronous and Asynchronous Operations<ept id="p1">](../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>