<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="standard-numeric-format-strings.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b48083e0f6e7b12215229c40d49fc6e8b6af9173</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\standard-numeric-format-strings.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c63522eb4b84e707622451628ce6defb1a9b5c7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a569ca07ddd8339aaff6176f3c0fb7d8d99e9fb1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Standard Numeric Format Strings | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Standard Numeric Format Strings</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Standard numeric format strings are used to format common numeric types.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A standard numeric format string takes the form <ph id="ph1">`Axx`</ph>, where:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`A`</ph> is a single alphabetic character called the <bpt id="p1">*</bpt>format specifier<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Any numeric format string that contains more than one alphabetic character, including white space, is interpreted as a custom numeric format string.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Numeric Format Strings<ept id="p1">](../../../docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`xx`</ph> is an optional integer called the <bpt id="p1">*</bpt>precision specifier<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The precision specifier ranges from 0 to 99 and affects the number of digits in the result.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Note that the precision specifier controls the number of digits in the string representation of a number.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It does not round the number itself.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To perform a rounding operation, use the <ph id="ph1">&lt;xref:System.Math.Ceiling%2A?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Math.Floor%2A?displayProperty=fullName&gt;</ph>, or <ph id="ph3">&lt;xref:System.Math.Round%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">*</bpt>precision specifier<ept id="p1">*</ept> controls the number of fractional digits in the result string, the result strings reflect numbers that are rounded away from zero (that is, using <ph id="ph1">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The precision specifier determines the number of digits in the result string.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To pad a result string with leading or trailing spaces, use the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](../../../docs/standard/base-types/composite-formatting.md)</ept> feature and define an <bpt id="p2">*</bpt>alignment component<ept id="p2">*</ept> in the format item.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Standard numeric format strings are supported by some overloads of the <ph id="ph1">`ToString`</ph> method of all numeric types.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, you can supply a numeric format string to the <ph id="ph1">&lt;xref:System.Int32.ToString%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Standard numeric format strings are also supported by the .NET <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](../../../docs/standard/base-types/composite-formatting.md)</ept>, which is used by some <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <ph id="ph3">&lt;xref:System.Console&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.StreamWriter&gt;</ph> classes, the <ph id="ph5">&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;</ph> method, and the <ph id="ph6">&lt;xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The composite format feature allows you to include the string representation of multiple data items in a single string, to specify field width, and to align numbers in a field.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../../../docs/standard/base-types/composite-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can download the <bpt id="p1">[</bpt>Formatting Utility<ept id="p1">](http://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d)</ept>, an application that enables you to apply format strings to either numeric or date and time values and displays the result string.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="table"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> The following table describes the standard numeric format specifiers and displays sample output produced by each format specifier.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Notes<ept id="p1">](#NotesStandardFormatting)</ept> section for additional information about using standard numeric format strings, and the <bpt id="p2">[</bpt>Example<ept id="p2">](#example)</ept> section for a comprehensive illustration of their use.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>"C" or "c"</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Currency</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Result: A currency value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Supported by: All numeric types.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Precision specifier: Number of decimal digits.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Default precision specifier: Defined by <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Currency ("C") Format Specifier<ept id="p1">](#CFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>123.456 ("C", en-US) -&gt; $123.46</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>123.456 ("C", fr-FR) -&gt; 123,46 €</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>123.456 ("C", ja-JP) -&gt; ¥123</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-123.456 ("C3", en-US) -&gt; ($123.456)</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-123.456 ("C3", fr-FR) -&gt; -123,456 €</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-123.456 ("C3", ja-JP) -&gt; -¥123.456</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>"D" or "d"</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Decimal</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Result: Integer digits with optional negative sign.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Supported by: Integral types only.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Precision specifier: Minimum number of digits.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Default precision specifier: Minimum number of digits required.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Decimal("D") Format Specifier<ept id="p1">](#DFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>1234 ("D") -&gt; 1234</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-1234 ("D6") -&gt; -001234</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>"E" or "e"</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Exponential (scientific)</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Result: Exponential notation.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Supported by: All numeric types.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Precision specifier: Number of decimal digits.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Default precision specifier: 6.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Exponential ("E") Format Specifier<ept id="p1">](#EFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>1052.0329112756 ("E", en-US) -&gt; 1.052033E+003</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>1052.0329112756 ("e", fr-FR) -&gt; 1,052033e+003</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-1052.0329112756 ("e2", en-US) -&gt; -1.05e+003</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-1052.0329112756 ("E2", fr_FR) -&gt; -1,05E+003</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>"F" or "f"</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Fixed-point</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Result: Integral and decimal digits with optional negative sign.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Supported by: All numeric types.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Precision specifier: Number of decimal digits.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Default precision specifier: Defined by <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Fixed-Point ("F") Format Specifier<ept id="p1">](#FFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>1234.567 ("F", en-US) -&gt; 1234.57</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>1234.567 ("F", de-DE) -&gt; 1234,57</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1234 ("F1", en-US) -&gt; 1234.0</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>1234 ("F1", de-DE) -&gt; 1234,0</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-1234.56 ("F4", en-US) -&gt; -1234.5600</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-1234.56 ("F4", de-DE) -&gt; -1234,5600</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>"G" or "g"</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>General</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Result: The more compact of either fixed-point or scientific notation.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Supported by: All numeric types.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Precision specifier: Number of significant digits.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Default precision specifier: Depends on numeric type.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The General ("G") Format Specifier<ept id="p1">](#GFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-123.456 ("G", en-US) -&gt; -123.456</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-123.456 ("G", sv-SE) -&gt; -123,456</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>123.4546 ("G4", en-US) -&gt; 123.5</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>123.4546 ("G4", sv-SE) -&gt; 123,5</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-1.234567890e-25 ("G", en-US) -&gt; -1.23456789E-25</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-1.234567890e-25 ("G", sv-SE) -&gt; -1,23456789E-25</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>"N" or "n"</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Number</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Result: Integral and decimal digits, group separators, and a decimal separator with optional negative sign.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Supported by: All numeric types.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Precision specifier: Desired number of decimal places.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Default precision specifier: Defined by <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Numeric ("N") Format Specifier<ept id="p1">](#NFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>1234.567 ("N", en-US) -&gt; 1,234.57</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>1234.567 ("N", ru-RU) -&gt; 1 234,57</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>1234 ("N1", en-US) -&gt; 1,234.0</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>1234 ("N1", ru-RU) -&gt; 1 234,0</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-1234.56 ("N3", en-US) -&gt; -1,234.560</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-1234.56 ("N3", ru-RU) -&gt; -1 234,560</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>"P" or "p"</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Percent</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Result: Number multiplied by 100 and displayed with a percent symbol.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Supported by: All numeric types.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Precision specifier: Desired number of decimal places.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Default precision specifier: Defined by  <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Percent ("P") Format Specifier<ept id="p1">](#PFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>1 ("P", en-US) -&gt; 100.00 %</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>1 ("P", fr-FR) -&gt; 100,00 %</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-0.39678 ("P1", en-US) -&gt; -39.7 %</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-0.39678 ("P1", fr-FR) -&gt; -39,7 %</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>"R" or "r"</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Round-trip</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Result: A string that can round-trip to an identical number.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Supported by: <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, and <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Precision specifier: Ignored.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The Round-trip ("R") Format Specifier<ept id="p1">](#RFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>123456789.12345678 ("R") -&gt; 123456789.12345678</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-1234567890.12345678 ("R") -&gt; -1234567890.1234567</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>"X" or "x"</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Hexadecimal</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Result: A hexadecimal string.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Supported by: Integral types only.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Precision specifier: Number of digits in the result string.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The HexaDecimal ("X") Format Specifier<ept id="p1">](#XFormatString)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>255 ("X") -&gt; FF</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-1 ("x") -&gt; ff</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>255 ("x4") -&gt; 00ff</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-1 ("X4") -&gt; 00FF</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Any other single character</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Unknown specifier</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Result: Throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> at run time.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Using Standard Numeric Format Strings</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A standard numeric format string can be used to define the formatting of a numeric value in one of two ways:</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>It can be passed to an overload of the <ph id="ph1">`ToString`</ph> method that has a <ph id="ph2">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following example formats a numeric value as a currency string in the current (in this case, the en-US) culture.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>It can be supplied as the <ph id="ph1">`formatString`</ph> argument in a format item used with such methods as <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WriteLine%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../../../docs/standard/base-types/composite-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The following example uses a format item to insert a currency value in a string.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Optionally, you an supply an <ph id="ph1">`alignment`</ph> argument to specify the width of the numeric field and whether its value is right- or left-aligned.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The following example left-aligns a currency value in a 28-character field, and it right-aligns a currency value in a 14-character field.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The following sections provide detailed information about each of the standard numeric format strings.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The Currency ("C") Format Specifier</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The "C" (or currency) format specifier converts a number to a string that represents a currency amount.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the desired number of decimal places in the result string.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted, the default precision is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If the value to be formatted has more than the specified or default number of decimal places, the fractional value is rounded in the result string.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If the value to the right of the number of specified decimal places is 5 or greater, the last digit in the result string is rounded away from zero.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties that control the formatting of the returned string.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Defines the placement of the currency symbol for positive values.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Defines the placement of the currency symbol for negative values, and specifies whether the negative sign is represented by parentheses or the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Defines the negative sign used if <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> indicates that parentheses are not used.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Defines the currency symbol.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Defines the default number of decimal digits in a currency value.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This value can be overridden by using the precision specifier.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Defines the string that separates integral and decimal digits.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Defines the string that separates groups of integral numbers.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Defines the number of integer digits that appear in a group.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The following example formats a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value with the currency format specifier.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The Decimal ("D") Format Specifier</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The "D" (or decimal) format specifier converts a number to a string of decimal digits (0-9), prefixed by a minus sign if the number is negative.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This format is supported only for integral types.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the minimum number of digits desired in the resulting string.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If required, the number is padded with zeros to its left to produce the number of digits given by the precision specifier.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If no precision specifier is specified, the default is the minimum value required to represent the integer without leading zeros.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>As the following table shows, a single property affects the formatting of the result string.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The following example formats an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value with the decimal format specifier.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The Exponential ("E") Format Specifier</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The exponential ("E") format specifier converts a number to a string of the form "-d.ddd…E+ddd" or "-d.ddd…e+ddd", where each "d" indicates a digit (0-9).</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The string starts with a minus sign if the number is negative.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Exactly one digit always precedes the decimal point.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the desired number of digits after the decimal point.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted, a default of six digits after the decimal point is used.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The case of the format specifier indicates whether to prefix the exponent with an "E" or an "e".</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The exponent always consists of a plus or minus sign and a minimum of three digits.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The exponent is padded with zeros to meet this minimum, if required.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties that control the formatting of the returned string.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative for both the coefficient and exponent.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Defines the string that separates the integral digit from decimal digits in the coefficient.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that an exponent is positive.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The following example formats a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value with the exponential format specifier.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The Fixed-Point ("F") Format Specifier</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The fixed-point ("F) format specifier converts a number to a string of the form "-ddd.ddd…"</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>where each "d" indicates a digit (0-9).</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The string starts with a minus sign if the number is negative.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the desired number of decimal places.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted, the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A?displayProperty=fullName&gt;</ph> property supplies the numeric precision.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The following table lists the properties of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that control the formatting of the result string.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Defines the string that separates integral digits from decimal digits.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Defines the default number of decimal digits.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This value can be overridden by using the precision specifier.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The following example formats a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value with the fixed-point format specifier.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The General ("G") Format Specifier</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The general ("G") format specifier converts a number to the more compact of either fixed-point or scientific notation, depending on the type of the number and whether a precision specifier is present.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The precision specifier defines the maximum number of significant digits that can appear in the result string.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted or zero, the type of the number determines the default precision, as indicated in the following table.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Numeric type</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Default precision</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> or <ph id="ph2">&lt;xref:System.SByte&gt;</ph></source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>3 digits</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Int16&gt;</ph> or <ph id="ph2">&lt;xref:System.UInt16&gt;</ph></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>5 digits</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Int32&gt;</ph> or <ph id="ph2">&lt;xref:System.UInt32&gt;</ph></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>10 digits</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>19 digits</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>20 digits</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Unlimited (same as <bpt id="p1">[</bpt>"R"<ept id="p1">](#RFormatString)</ept>)</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>7 digits</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>15 digits</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>29 digits</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Fixed-point notation is used if the exponent that would result from expressing the number in scientific notation is greater than -5 and less than the precision specifier; otherwise, scientific notation is used.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The result contains a decimal point if required, and trailing zeros after the decimal point are omitted.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>If the precision specifier is present and the number of significant digits in the result exceeds the specified precision, the excess trailing digits are removed by rounding.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>However, if the number is a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> and the precision specifier is omitted, fixed-point notation is always used and trailing zeros are preserved.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>If scientific notation is used, the exponent in the result is prefixed with "E" if the format specifier is "G", or "e" if the format specifier is "g".</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The exponent contains a minimum of two digits.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This differs from the format for scientific notation that is produced by the exponential format specifier, which includes a minimum of three digits in the exponent.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties that control the formatting of the result string.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Defines the string that separates integral digits from decimal digits.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that an exponent is positive.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The following example formats assorted floating-point values with the general format specifier.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The Numeric ("N") Format Specifier</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The numeric ("N") format specifier converts a number to a string of the form "-d,ddd,ddd.ddd…", where "-" indicates a negative number symbol if required, "d" indicates a digit (0-9), "," indicates a group separator, and "." indicates a decimal point symbol.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the desired number of digits after the decimal point.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted, the number of decimal places is defined by the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties that control the formatting of the result string.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Defines the format of negative values, and specifies whether the negative sign is represented by parentheses or the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Defines the number of integral digits that appear between group separators.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Defines the string that separates groups of integral numbers.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Defines the string that separates integral and decimal digits.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Defines the default number of decimal digits.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This value can be overridden by using a precision specifier.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The following example formats assorted floating-point values with the number format specifier.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The Percent ("P") Format Specifier</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The percent ("P") format specifier multiplies a number by 100 and converts it to a string that represents a percentage.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the desired number of decimal places.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted, the default numeric precision supplied by the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A&gt;</ph> property is used.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties that control the formatting of the returned string.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Defines the placement of the percent symbol for positive values.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Defines the placement of the percent symbol and the negative symbol for negative values.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Defines the percent symbol.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Defines the default number of decimal digits in a percentage value.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>This value can be overridden by using the precision specifier.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Defines the string that separates integral and decimal digits.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Defines the string that separates groups of integral numbers.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Defines the number of integer digits that appear in a group.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The following example formats floating-point values with the percent format specifier.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The Round-trip ("R") Format Specifier</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The round-trip ("R") format specifier is used to ensure that a numeric value that is converted to a string will be parsed back into the same numeric value.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This format is supported only for the <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, and <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> types.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is formatted using this specifier, its string representation contains all the significant digits in the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Single&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph> value is formatted using this specifier, it is first tested using the general format, with 15 digits of precision for a <ph id="ph3">&lt;xref:System.Double&gt;</ph> and 7 digits of precision for a <ph id="ph4">&lt;xref:System.Single&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>If the value is successfully parsed back to the same numeric value, it is formatted using the general format specifier.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>If the value is not successfully parsed back to the same numeric value, it is formatted using 17 digits of precision for a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and 9 digits of precision for a <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Although you can include a precision specifier, it is ignored.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Round trips are given precedence over precision when using this specifier.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The result string is affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties that control the formatting of the result string.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo property</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that a number is negative.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Defines the string that separates integral digits from decimal digits.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Defines the string that indicates that an exponent is positive.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The following example formats <ph id="ph1">&lt;xref:System.Double&gt;</ph> values with the round-trip format specifier.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>In some cases, <ph id="ph1">&lt;xref:System.Double&gt;</ph> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <ph id="ph2">`/platform:x64`</ph> or <ph id="ph3">`/platform:anycpu`</ph> switches and run on 64-bit systems.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>See the following paragraph for more information.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>To work around the problem of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values formatted with the "R" standard numeric format string not successfully round-tripping if compiled using the <ph id="ph2">`/platform:x64`</ph> or <ph id="ph3">`/platform:anycpu`</ph> switches and run on 64-bit systems., you can format <ph id="ph4">&lt;xref:System.Double&gt;</ph> values by using the "G17" standard numeric format string.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The following example uses the "R" format string with a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The Hexadecimal ("X") Format Specifier</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The hexadecimal ("X") format specifier converts a number to a string of hexadecimal digits.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The case of the format specifier indicates whether to use uppercase or lowercase characters for hexadecimal digits that are greater than 9.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>For example, use "X" to produce "ABCDEF", and "x" to produce "abcdef".</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>This format is supported only for integral types.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The precision specifier indicates the minimum number of digits desired in the resulting string.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>If required, the number is padded with zeros to its left to produce the number of digits given by the precision specifier.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The result string is not affected by the formatting information of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The following example formats <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values with the hexadecimal format specifier.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Notes</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Control Panel Settings</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The settings in the <bpt id="p1">**</bpt>Regional and Language Options<ept id="p1">**</ept> item in Control Panel influence the result string produced by a formatting operation.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Those settings are used to initialize the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object associated with the current thread culture, which provides values used to govern formatting.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Computers that use different settings generate different result strings.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>In addition, if the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor is used to instantiate a new <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the same culture as the current system culture, any customizations established by the <bpt id="p1">**</bpt>Regional and Language Options<ept id="p1">**</ept> item in Control Panel will be applied to the new <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor to create a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that does not reflect a system's customizations.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>NumberFormatInfo Properties</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Formatting is influenced by the properties of the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, which is provided implicitly by the current thread culture or explicitly by the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> parameter of the method that invokes formatting.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Specify a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object for that parameter.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>For information about customizing the patterns or strings used in formatting numeric values, see the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class topic.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Integral and Floating-Point Numeric Types</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Some descriptions of standard numeric format specifiers refer to integral or floating-point numeric types.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The integral numeric types are <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, and <ph id="ph9">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The floating-point numeric types are <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph2">&lt;xref:System.Single&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Floating-Point Infinities and NaN</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Regardless of the format string, if the value of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph> floating-point type is positive infinity, negative infinity, or not a number (NaN), the formatted string is the value of the respective <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph> property that is specified by the currently applicable <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The following example formats an integral and a floating-point numeric value using the en-US culture and all the standard numeric format specifiers.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This example uses two particular numeric types (<ph id="ph1">&lt;xref:System.Double&gt;</ph> and <ph id="ph2">&lt;xref:System.Int32&gt;</ph>), but would yield similar results for any of the other numeric base types (<ph id="ph3">&lt;xref:System.Byte&gt;</ph>, <ph id="ph4">&lt;xref:System.SByte&gt;</ph>, <ph id="ph5">&lt;xref:System.Int16&gt;</ph>, <ph id="ph6">&lt;xref:System.Int32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph9">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph10">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph11">&lt;xref:System.Numerics.BigInteger&gt;</ph>, <ph id="ph12">&lt;xref:System.Decimal&gt;</ph>, and <ph id="ph13">&lt;xref:System.Single&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph></source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom Numeric Format Strings<ept id="p1">](../../../docs/standard/base-types/custom-numeric-format-strings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting Types<ept id="p1">](../../../docs/standard/base-types/formatting-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Pad a Number with Leading Zeros<ept id="p1">](../../../docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sample: .NET Framework 4 Formatting Utility<ept id="p1">](http://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../../../docs/standard/base-types/composite-formatting.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>