<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65111c142fb5c1c537ed3734f6fcff70f758f161</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\peer-resolvers.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9afcb31d03687268f8078371cf8769fc4f97050b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd437b68b7919a2ff43ea23fcdc9e795aa48c3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Peer Resolvers | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Peer Resolvers</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In order to connect to a mesh, a peer node requires the IP addresses of other nodes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>IP addresses are obtained by contacting a resolver service, which takes the mesh ID and returns a list of addresses corresponding to nodes registered with that particular mesh ID.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The resolver keeps a list of registered addresses, which it creates by having each node in the mesh register with the service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can specify which PeerResolver service to use through the <ph id="ph1">`Resolver`</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.NetPeerTcpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Supported Peer Resolvers</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Peer Channel supports two types of resolvers: Peer Name Resolution Protocol (PNRP), and custom resolver services.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, Peer Channel uses the PNRP peer resolver service for discovery of peers and neighbors in the mesh.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For situations/platforms where PNRP is not available or feasible, <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> provides an alternative, server-based discovery service - the <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also explicitly define a custom resolver service by writing a class that implements the <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolvers.IPeerResolverContract&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Peer Name Resolution Protocol (PNRP)</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>PNRP, the default resolver for <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph>, is a distributed, serverless name resolver service.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>PNRP can also be used on <ph id="ph1">[!INCLUDE[wxpsp2](../../../../includes/wxpsp2-md.md)]</ph> by installing the Advanced Networking Pack.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Any two clients running the same version of PNRP can locate each other using this protocol, provided they meet certain conditions (such as the lack of an intervening corporate firewall).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the version of PNRP that ships with <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph> is newer than the version included in the Advanced Networking Pack.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Check the Microsoft Download Center for updates to PNRP for <ph id="ph1">[!INCLUDE[wxpsp2](../../../../includes/wxpsp2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Custom Resolver Services</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the PNRP service is unavailable, or you want complete control over mesh shaping, you can use a custom, server-based resolver service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can explicitly define this service by writing a resolver class implementing the <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolvers.IPeerResolverContract&gt;</ph> interface, or by using the in-box default implementation, <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Under the default implementation of the service, client registrations expire after a certain amount of time if the client does not explicitly refresh the registration.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Clients using the resolver service must be aware of the upper bound on client-server latency in order to successfully refresh registrations in time.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This involves choosing an appropriate refresh time-out (<ph id="ph1">`RefreshInterval`</ph>) on the resolver service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>Inside the CustomPeerResolverService: Client Registrations<ept id="p1">](../../../../docs/framework/wcf/feature-details/inside-the-custompeerresolverservice-client-registrations.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The application writer must also consider securing the connection between clients and the custom resolver service.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You may do this by using security settings on the <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> that clients use to contact the resolver service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You must specify credentials (if used) on the <ph id="ph1">`ChannelFactory`</ph> used to create Peer Channel.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These credentials are passed to the <ph id="ph1">`ChannelFactory`</ph> used to create channels to the custom resolver.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When using local and impromptu networks with a custom resolver, it is strongly advised that applications using or supporting link-local or impromptu networks include logic that selects a single link-local address to use when connecting.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This prevents any confusion potentially caused by computers with multiple link-local addresses.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In accordance with this, Peer Channel only supports using a single link-local address at any one time.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You may specify this address with the <ph id="ph1">`ListenIpAddress`</ph> property on the <ph id="ph2">&lt;xref:System.ServiceModel.NetPeerTcpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For a demonstration of how to implement a custom resolver, see <bpt id="p1">[</bpt>Peer Channel Custom Peer Resolver<ept id="p1">](http://msdn.microsoft.com/en-us/5b75a2bb-7ff1-4a14-abe7-3debf0537d23)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Inside the CustomPeerResolverService: Client Registrations<ept id="p1">](../../../../docs/framework/wcf/feature-details/inside-the-custompeerresolverservice-client-registrations.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Peer Channel Concepts<ept id="p1">](../../../../docs/framework/wcf/feature-details/peer-channel-concepts.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Peer Channel Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/peer-channel-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Building a Peer Channel Application<ept id="p1">](../../../../docs/framework/wcf/feature-details/building-a-peer-channel-application.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>