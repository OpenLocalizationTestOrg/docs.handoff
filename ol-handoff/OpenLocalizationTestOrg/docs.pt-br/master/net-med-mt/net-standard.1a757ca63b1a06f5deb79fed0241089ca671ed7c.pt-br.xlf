<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="net-standard.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83b5498ac6f585a8d2554377748836d88ce592d1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\net-standard.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">569dcbaf9ea5e4dae40f268699a2134b6b512d06</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14445d287e4871ab0ca0aef21842f55ee28c46de</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>.NET Standard</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn about .NET Standard, its versions and the .NET implementations that support it.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](https://github.com/dotnet/standard)</ept> is a formal specification of .NET APIs that are intended to be available on all .NET implementations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The motivation behind the .NET Standard is establishing greater uniformity in the .NET ecosystem.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ECMA 335<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> continues to establish uniformity for .NET implementation behavior, but there's no similar spec for the .NET Base Class Libraries (BCL) for .NET library implementations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The .NET Standard enables the following key scenarios:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Defines uniform set of BCL APIs for all .NET implementations to implement, independent of workload.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Enables developers to produce portable libraries that are usable across .NET implementations, using this same set of APIs.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Reduces or even eliminates conditional compilation of shared source due to .NET APIs, only for OS APIs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The various .NET implementations target specific versions of .NET Standard.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each .NET implementation version advertises the highest .NET Standard version it supports, a statement that means it also supports previous versions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, the .NET Framework 4.6 implements .NET Standard 1.3, which means that it exposes all APIs defined in .NET Standard versions 1.0 through 1.3.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Similarly, the .NET Framework 4.6.1 implements .NET Standard 1.4, while .NET Core 1.0 implements .NET Standard 1.6.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>.NET implementation support</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists the minimum platform versions that support each .NET Standard version.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To find the highest version of .NET Standard that you can target, do the following steps:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Find the row that indicates the .NET implementation you want to run on.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Find the column in that row that indicates your version starting from right to left.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The column header indicates the .NET Standard version that your target supports.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You may also target any lower .NET Standard version.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Higher .NET Standard versions will also support your implementation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Repeat this process for each platform you want to target.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you have more than one target platform, you should pick the smaller version among them.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, if you want to run on .NET Framework 4.5 and .NET Core 1.0, the highest .NET Standard version you can use is .NET Standard 1.1.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Which .NET Standard version to target</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When choosing a .NET Standard version, you should consider this trade-off:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The higher the version, the more APIs are available to you.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The lower the version, the more platforms implement it.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In general, we recommend you to target the <bpt id="p1">*</bpt>lowest<ept id="p1">*</ept> version of .NET Standard possible.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>So, after you find the highest .NET Standard version you can target, follow these steps:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Target the next lower version of .NET Standard and build your project.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If your project builds successfully, repeat step 1.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Otherwise, retarget to the next higher version and that's the version you should use.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>However, targeting lower .NET Standard versions introduces a number of support dependencies.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If your project targets .NET Standard 1.x, we recommend that you <bpt id="p1">*</bpt>also<ept id="p1">*</ept> target .NET Standard 2.0.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This simplifies the dependency graph for users of your library that run on .NET Standard 2.0 compatible frameworks, and it reduces the number of packages they need to download.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>.NET Standard versioning rules</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>There are two primary versioning rules:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Additive: .NET Standard versions are logically concentric circles: higher versions incorporate all APIs from previous versions.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>There are no breaking changes between versions.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Immutable: Once shipped, .NET Standard versions are frozen.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>New APIs first become available in specific .NET implementations, such as .NET Core.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the .NET Standard review board believes the new APIs should be available for all .NET implementations, they're added in a new .NET Standard version.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specification</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The .NET Standard specification is a standardized set of APIs.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The specification is maintained by .NET implementors, specifically Microsoft (includes .NET Framework, .NET Core, and Mono) and Unity.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A public feedback process is used as part of establishing new .NET Standard versions through <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/dotnet/standard)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Official artifacts</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The official specification is a set of .cs files that define the APIs that are part of the standard.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ref directory<ept id="p1">](https://github.com/dotnet/standard/tree/master/src/netstandard/ref)</ept> in the <bpt id="p2">[</bpt>dotnet/standard repository<ept id="p2">](https://github.com/dotnet/standard)</ept> defines the .NET Standard APIs.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> metapackage (<bpt id="p2">[</bpt>source<ept id="p2">](https://github.com/dotnet/standard/blob/master/src/netstandard/pkg/NETStandard.Library.dependencies.props)</ept>) describes the set of libraries that define (in part) one or more .NET Standard versions.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A given component, like <ph id="ph1">`System.Runtime`</ph>, describes:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Part of .NET Standard (just its scope).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Multiple versions of .NET Standard, for that scope.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Derivative artifacts are provided to enable more convenient reading and to enable certain developer scenarios (for example, using a compiler).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>API list in markdown<ept id="p1">](https://github.com/dotnet/standard/tree/master/docs/versions)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Reference assemblies, distributed as <bpt id="p1">[</bpt>NuGet packages<ept id="p1">](../core/packages.md)</ept> and referenced by the <bpt id="p2">[</bpt>NETStandard.Library<ept id="p2">](https://www.nuget.org/packages/NETStandard.Library/)</ept> metapackage.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Package representation</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The primary distribution vehicle for the .NET Standard reference assemblies is <bpt id="p1">[</bpt>NuGet packages<ept id="p1">](../core/packages.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Implementations are delivered in a variety of ways, appropriate for each .NET implementation.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>NuGet packages target one or more <bpt id="p1">[</bpt>frameworks<ept id="p1">](frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The .NET Standard packages target the ".NET Standard" framework.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can target the .NET Standard framework using the <ph id="ph1">`netstandard`</ph> <bpt id="p1">[</bpt>compact TFM<ept id="p1">](frameworks.md)</ept> (for example, <ph id="ph2">`netstandard1.4`</ph>).</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Libraries that are intended to run on multiple runtimes should target this framework.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For the broadest set of APIs, target <ph id="ph1">`netstandard2.0`</ph> since the number of available APIs more than doubled between .NET Standard 1.6 and 2.0.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">`NETStandard.Library`</ph><ept id="p1">](https://www.nuget.org/packages/NETStandard.Library/)</ept> metapackage references the complete set of NuGet packages that define .NET Standard.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The most common way to target <ph id="ph1">`netstandard`</ph> is by referencing this metapackage.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It describes and provides access to the ~40 .NET libraries and associated APIs that define .NET Standard.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can reference additional packages that target <ph id="ph1">`netstandard`</ph> to get access to additional APIs.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Versioning</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The specification is not singular, but an incrementally growing and linearly versioned set of APIs.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The first version of the standard establishes a baseline set of APIs.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Subsequent versions add APIs and inherit APIs defined by previous versions.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>There is no established provision for removing APIs from the standard.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>.NET Standard is not specific to any one .NET implementation, nor does it match the versioning scheme of any of those runtimes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>APIs added to any of the implementations (such as, .NET Framework, .NET Core and Mono) can be considered as candidates to add to the specification, particularly if they are thought to be fundamental in nature.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>New <bpt id="p1">[</bpt>versions of .NET Standard<ept id="p1">](https://github.com/dotnet/standard/blob/master/docs/versions.md)</ept> are created based on .NET implementation releases, enabling you to target new APIs from a .NET Standard PCL.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The versioning mechanics are described in more detail in <bpt id="p1">[</bpt>.NET Core Versioning<ept id="p1">](../core/versions/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>.NET Standard versioning is important for usage.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Given a .NET Standard version, you can use libraries that target that same or lower version.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following approach describes the workflow for using .NET Standard PCLs, specific to .NET Standard targeting.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Select a .NET Standard version to use for your PCL.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use libraries that depend on the same .NET Standard version or lower.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you find a library that depends on a higher .NET Standard version, you either need to adopt that same version or decide not to use that library.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Targeting .NET Standard</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can <bpt id="p1">[</bpt>build .NET Standard Libraries<ept id="p1">](../core/tutorials/libraries.md)</ept> using a combination of the <ph id="ph1">`netstandard`</ph> framework and the NETStandard.Library metapackage.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can see examples of <bpt id="p1">[</bpt>targeting the .NET Standard with .NET Core tools<ept id="p1">](../core/packages.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>.NET Framework compatibility mode</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Starting with .NET Standard 2.0, the .NET Framework compatibility mode was introduced.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This compatibility mode allows .NET Standard projects to reference .NET Framework libraries as if they were compiled for .NET Standard.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Referencing .NET Framework libraries doesn't work for all projects, such as libraries that use Windows Presentation Foundation (WPF) APIs.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework compatibility mode<ept id="p1">](../core/porting/third-party-deps.md#net-framework-compatibility-mode)</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>.NET Standard libraries and Visual Studio</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In order to build .NET Standard libraries in Visual Studio, make sure you have <bpt id="p1">[</bpt>Visual Studio 2017 version 15.3<ept id="p1">](https://visualstudio.microsoft.com/downloads/?utm_medium=microsoft&amp;utm_source=docs.microsoft.com&amp;utm_campaign=button+cta&amp;utm_content=download+vs2017)</ept> or later installed on Windows, or <bpt id="p2">[</bpt>Visual Studio for Mac version 7.1<ept id="p2">](https://visualstudio.microsoft.com/vs/visual-studio-mac/)</ept> or later installed on macOS.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you only need to consume .NET Standard 2.0 libraries in your projects, you can also do that in Visual Studio 2015.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>However, you need NuGet client 3.6 or higher installed.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can download the NuGet client for Visual Studio 2015 from the <bpt id="p1">[</bpt>NuGet downloads<ept id="p1">](https://www.nuget.org/downloads)</ept> page.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Comparison to Portable Class Libraries</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>.NET Standard is the replacement for <bpt id="p1">[</bpt>Portable Class Libraries (PCL)<ept id="p1">](./cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The .NET Standard improves on the experience of creating portable libraries by curating a standard BCL and establishing greater uniformity across .NET implementations as a result.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A library that targets .NET Standard is a PCL or a ".NET Standard-based PCL".</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Existing PCLs are "profile-based PCLs".</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>.NET Standard and PCL profiles were created for similar purposes but also differ in key ways.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Similarities:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Define APIs that can be used for binary code sharing.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Differences:</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>.NET Standard is a curated set of APIs, while PCL profiles are defined by intersections of existing platforms.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>.NET Standard linearly versions, while PCL profiles do not.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>PCL profiles represents Microsoft platforms while the .NET Standard is platform-agnostic.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>PCL compatibility</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>.NET Standard is compatible with a subset of PCL profiles.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>.NET Standard 1.0, 1.1 and 1.2 each overlap with a set of PCL profiles.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This overlap was created for two reasons:</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Enable .NET Standard-based PCLs to reference profile-based PCLs.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Enable profile-based PCLs to be packaged as .NET Standard-based PCLs.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Profile-based PCL compatibility is provided by the <bpt id="p1">[</bpt>Microsoft.NETCore.Portable.Compatibility<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> NuGet package.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This dependency is required when referencing NuGet packages that contain profile-based PCLs.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Profile-based PCLs packaged as <ph id="ph1">`netstandard`</ph> are easier to consume than typically packaged profile-based PCLs.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`netstandard`</ph> packaging is compatible with existing users.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can see the set of PCL profiles that are compatible with the .NET Standard:</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PCL Profile</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>PCL Platforms</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Profile7</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>1.1</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5, Windows 8</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Profile31</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Windows 8.1, Windows Phone Silverlight 8.1</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Profile32</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>1.2</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Windows 8.1, Windows Phone 8.1</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Profile44</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>1.2</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5.1, Windows 8.1</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Profile49</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5, Windows Phone Silverlight 8</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Profile78</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5, Windows 8, Windows Phone Silverlight 8</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Profile84</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Windows Phone 8.1, Windows Phone Silverlight 8.1</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Profile111</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>1.1</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5, Windows 8, Windows Phone 8.1</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Profile151</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>1.2</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5.1, Windows 8.1, Windows Phone 8.1</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Profile157</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Windows 8.1, Windows Phone 8.1, Windows Phone Silverlight 8.1</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Profile259</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5, Windows 8, Windows Phone 8.1, Windows Phone Silverlight 8</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Standard Versions<ept id="p1">](https://github.com/dotnet/standard/blob/master/docs/versions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>