<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="null-comparisons.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68255ea4f17d2d9d711c673586db48ccd4b7850e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\null-comparisons.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33c528ca1bd4ba77ff2c07960088a262a0346260</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e53b7c8913fb45f81ad678e85186b73336414fe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Null Comparisons | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Null Comparisons</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`null`</ph> value in the data source indicates that the value is unknown.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries, you can check for null values so that certain calculations or comparisons are only performed on rows that have valid, or non-null, data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>CLR null semantics, however, may differ from the null semantics of the data source.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Most databases use a version of three-valued logic to handle null comparisons.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>That is, a comparison against a null value does not evaluate to <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, it evaluates to <ph id="ph3">`unknown`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Often this is an implementation of ANSI nulls, but this is not always the case.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default in SQL Server, the null-equals-null comparison returns a null value.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the following example, the rows where <ph id="ph1">`ShipDate`</ph> is null are excluded from the result set, and the <ph id="ph2">[!INCLUDE[tsql](../../../../../../includes/tsql-md.md)]</ph> statement would return 0 rows.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is very different from the CLR null semantics, where the null-equals-null comparison returns true.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following LINQ query is expressed in the CLR, but it is executed in the data source.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Because there is no guarantee that CLR semantics will be honored at the data source, the expected behavior is indeterminate.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Conceptual Examples#JoinOnNull<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#joinonnull)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>DP L2E Conceptual Examples#JoinOnNull<ept id="p2">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#joinonnull)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Key Selectors</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>key selector<ept id="p1">*</ept> is a function used in the standard query operators to extract a key from an element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the key selector function, an expression can be compared with a constant.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CLR null semantics are exhibited if an expression is compared to a null constant or if two null constants are compared.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Store null semantics are exhibited if two columns with null values in the data source are compared.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Key selectors are found in many of the grouping and ordering standard query operators, such as <ph id="ph1">&lt;xref:System.Linq.Queryable.GroupBy%2A&gt;</ph>, and are used to select keys by which to order or group the query results.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Null Property on a Null Object</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>, the properties of a null object are null.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you attempt to reference a property of a null object in the CLR, you will receive a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When a LINQ query involves a property of a null object, this can result in inconsistent behavior.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, in the following query, the cast to <ph id="ph1">`NewProduct`</ph> is done in the command tree layer, which might result in the <ph id="ph2">`Introduced`</ph> property being null.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the database defined null comparisons such that the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> comparison evaluates to true, the row will be included.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Conceptual Examples#CastResultsIsNull<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#castresultsisnull)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>DP L2E Conceptual Examples#CastResultsIsNull<ept id="p2">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#castresultsisnull)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Passing Null Collections to Aggregate Functions</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph>, when you pass a collection that supports <ph id="ph2">`IQueryable`</ph> to an aggregate function, aggregate operations are performed at the database.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>There might be differences in the results of a query that was performed in-memory and a query that was performed at the database.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>With an in-memory query, if there are no matches, the query returns zero.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>At the database, the same query returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`null`</ph> value is passed to a LINQ aggregate function, an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To accept possible <ph id="ph1">`null`</ph> values, cast the types and the properties of the types that receive query results to nullable types.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Expressions in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/expressions-in-linq-to-entities-queries.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>