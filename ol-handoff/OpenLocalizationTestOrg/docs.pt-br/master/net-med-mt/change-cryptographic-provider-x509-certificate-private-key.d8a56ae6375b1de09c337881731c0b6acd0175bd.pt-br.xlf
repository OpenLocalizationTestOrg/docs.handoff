<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31a9a1d0ef4ba1395fa516838bd7612606f0dd30</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\change-cryptographic-provider-x509-certificate-private-key.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e273fef4f34aafdc314250c9b08f6ca771ba9d27</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9251e2e04b53d400074d7863473190fbe617f424</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Change the Cryptographic Provider for an X.509 Certificate&amp;#39;s Private Key | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Change the Cryptographic Provider for an X.509 Certificate&amp;#39;s Private Key</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to change the cryptographic provider used to provide an X.509 certificate's private key and how to integrate the provider into the <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> security framework.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about using certificates, see <bpt id="p1">[</bpt>Working with Certificates<ept id="p1">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security framework provides a way to introduce new security token types as described in <bpt id="p1">[</bpt>How to: Create a Custom Token<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-token.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It is also possible to use a custom token to replace existing system-provided token types.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this topic, the system-provided X.509 security token is replaced by a custom X.509 token that provides a different implementation for the certificate private key.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is useful in scenarios where the actual private key is provided by a different cryptographic provider than the default Windows cryptographic provider.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One example of an alternative cryptographic provider is a hardware security module that performs all private key related cryptographic operations, and does not store the private keys in memory, thus improving security of the system.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example is for demonstration purposes only.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It does not replace the default Windows cryptographic provider, but it shows where such a provider could be integrated.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Procedures</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Every security token that has an associated security key or keys must implement the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A&gt;</ph> property, which returns a collection of keys from the security token instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the token is an X.509 security token, the collection contains a single instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey&gt;</ph> class that represents both public and private keys associated with the certificate.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To replace the default cryptographic provider used to provide the certificate's keys, create a new implementation of this class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To create a custom X.509 asymmetric key</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Define a new class derived from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKey.KeySize%2A&gt;</ph> read-only property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This property returns the actual key size of the certificate's public/private key pair.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKey.DecryptKey%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This method is called by the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security framework to decrypt a symmetric key with the certificate's private key.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(The key was previously encrypted with the certificate's public key.)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method is called by the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security framework to obtain an instance of the <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> class that represents the cryptographic provider for either the certificate's private or public key, depending on the parameters passed to the method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Override this method if a different implementation of the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> class is required.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method returns an instance of the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;</ph> class that is associated with the certificate's private key.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method is used to indicate whether a particular cryptographic algorithm is supported by the security key implementation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following procedure shows how to integrate the custom X.509 asymmetric security key implementation created in the preceding procedure with the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security framework in order to replace the system-provided X.509 security token.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To replace the system-provided X.509 security token with a custom X.509 asymmetric security key token</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Create a custom X.509 security token that returns the custom X.509 asymmetric security key instead of the system-provided security key, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information about custom security tokens, see <bpt id="p1">[</bpt>How to: Create a Custom Token<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-token.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create a custom security token provider that returns a custom X.509 security token, as shown in the example.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about custom security token providers, see <bpt id="p1">[</bpt>How to: Create a Custom Security Token Provider<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-provider.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the custom security key needs to be used on the initiator side, create a custom client security token manager and custom client credentials classes, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about custom client credentials and client security token managers, see <bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#4<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#6<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#6)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#6<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the custom security key needs to be used on the recipient side, create a custom service security token manager and custom service credentials, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about custom service credentials and service security token managers, see <bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#5<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomX509Token#7<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customx509token/cs/source.cs#7)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomX509Token#7<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customx509token/vb/source.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Custom Security Token Authenticator<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-authenticator.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Custom Security Token Provider<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-provider.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Custom Token<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-token.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Security Architecture<ept id="p1">](http://msdn.microsoft.com/en-us/16593476-d36a-408d-808c-ae6fd483e28f)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>