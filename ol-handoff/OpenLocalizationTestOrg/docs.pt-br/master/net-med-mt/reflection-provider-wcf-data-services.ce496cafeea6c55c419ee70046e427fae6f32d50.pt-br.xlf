<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a72756c54702e34a3270b4d3db7b59282f0c786</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\reflection-provider-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79eacfed5934e66dfc64f8d213aa0517f160ebd1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab6aa02543f395a313cbe13c63d4f2f230cdb75d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reflection Provider (WCF Data Services) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Reflection Provider (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In addition to exposing data from a data model through the Entity Framework, <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> can expose data that is not strictly defined in an entity-based model.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The reflection provider exposes data in classes that return types that implement the <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> uses reflection to infer a data model for these classes and can translate address-based queries against resources into language integrated query (LINQ)-based queries against the exposed <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph> types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Linq.Queryable.AsQueryable%2A&gt;</ph> method to return an <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface from any class that implements the <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This enables most generic collection types to be used as a data source for your data service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The reflection provider supports type hierarchies.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a Data Service Using the Reflection Provider<ept id="p1">](../../../../docs/framework/data/wcf/create-a-data-service-using-rp-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Inferring the Data Model</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you create the data service, the provider infers the data model by using reflection.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following list shows how the reflection provider infers the data model:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Entity container - the class that exposes the data as properties that return an <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When you address a reflection-based data model, the entity container represents the root of the service.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Only one entity container class is supported for a given namespace.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Entity sets - properties that return <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> instances are treated as entity sets.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Entity sets are addressed directly as resources in the query.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Only one property on the entity container can return an <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> instance of a given type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Entity types - the type <ph id="ph1">`T`</ph> of the <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph> that the entity set returns.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Classes that are part of an inheritance hierarchy are translated by the reflection provider into an equivalent entity type hierarchy.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Entity keys - each data class that is an entity type must have a key property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This property is attributed with the <ph id="ph1">&lt;xref:System.Data.Services.Common.DataServiceKeyAttribute&gt;</ph> attribute (<ph id="ph2">`[DataServiceKeyAttribute]`</ph>).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You should only apply the <ph id="ph1">&lt;xref:System.Data.Services.Common.DataServiceKeyAttribute&gt;</ph> attribute to a property that can be used to uniquely identify an instance of the entity type.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This attribute is ignored when applied to a navigation property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Entity type properties - other than the entity key, the reflection provider treats the accessible, non-indexer properties of a class that is an entity type as follows:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the property returns a primitive type, then the property is assumed to be a property of an entity type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the property returns a type that is also an entity type, then the property is assumed to be a navigation property that represents the "one" end of a many-to-one or one-to-one relationship.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the property returns an <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of an entity type, then the property is assumed to be a navigation property that represents the "many" end of a one-to-many or many-to-many relationship.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the return type of the property is a value type, then the property represents a complex type.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Unlike a data model that is based on the entity-relational model, models that are based on the reflection provider do not understand relational data.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You should use the Entity Framework to expose relational data through <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Data Type Mapping</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When a data model is inferred from .NET Framework classes, the primitive types in the data model are mapped to .NET Framework data types as follows:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Framework data type</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Data model type</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> <ph id="ph2">`[]`</ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>.NET Framework nullable value types are mapped to the same data model types as the corresponding value types that cannot be assigned a null.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Enabling Updates in the Data Model</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To allow updates to data that is exposed through this kind of data model, the reflection provider defines an <ph id="ph1">&lt;xref:System.Data.Services.IUpdatable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This interface instructs the data service on how to persist updates to the exposed types.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To enable updates to resources that are defined by the data model, the entity container class must implement the <ph id="ph1">&lt;xref:System.Data.Services.IUpdatable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For an example of an implementation of the <ph id="ph1">&lt;xref:System.Data.Services.IUpdatable&gt;</ph> interface, see <bpt id="p1">[</bpt>How to: Create a Data Service Using a LINQ to SQL Data Source<ept id="p1">](../../../../docs/framework/data/wcf/create-a-data-service-using-linq-to-sql-wcf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.IUpdatable&gt;</ph> interface requires that the following members be implemented so that updates can be propagated to the data source by using the reflection provider:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Provides the functionality to add an object to a collection of related objects that are accessed from a navigation property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Provides the functionality that cancels pending changes to the data.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Provides the functionality to create a new resource in the specified container.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Provides the functionality to delete a resource.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provides the functionality to retrieve a resource that is identified by a specific query and type name.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Provides the functionality to return the value of a property of a resource.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Provides the functionality to remove an object to a collection of related objects accessed from a navigation property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Provides the functionality to update a specified resource.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Provides the functionality to return the resource that is represented by a specific object instance.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Provides the functionality to save all pending changes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Provides the functionality to set a related object reference by using a navigation property.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Provides the functionality to set the value of the property of a resource.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Handling Concurrency</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> supports an optimistic concurrency model by enabling you to define a concurrency token for an entity.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This concurrency token, which includes one or more properties of the entity, is used by the data service to determine whether a change has occurred in the data that is being requested, updated, or deleted.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When token values obtained from the eTag in the request differ from the current values of the entity, an exception is raised by the data service.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.ETagAttribute&gt;</ph> is applied to an entity type to define a concurrency token in the reflection provider.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The concurrency token cannot include a key property or a navigation property.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Updating the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/updating-the-data-service-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Using LINQ to SQL with the Reflection Provider</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the Entity Framework is natively supported by default, it is the recommended data provider for using relational data with <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, you can use the reflection provider to use LINQ to SQL classes with a data service.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> result sets that are returned by methods on the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> generated by the LINQ to SQL Object Relational Designer (O/R Designer) implement the <ph id="ph3">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This enables the reflection provider to access these methods and return entity data from SQL Server by using the generated LINQ to SQL classes.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>However, because LINQ to SQL does not implement the <ph id="ph1">&lt;xref:System.Data.Services.IUpdatable&gt;</ph> interface, you need to add a partial class that extends the existing <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> partial class to add the <ph id="ph3">&lt;xref:System.Data.Services.IUpdatable&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a Data Service Using a LINQ to SQL Data Source<ept id="p1">](../../../../docs/framework/data/wcf/create-a-data-service-using-linq-to-sql-wcf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Services Providers<ept id="p1">](../../../../docs/framework/data/wcf/data-services-providers-wcf-data-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>