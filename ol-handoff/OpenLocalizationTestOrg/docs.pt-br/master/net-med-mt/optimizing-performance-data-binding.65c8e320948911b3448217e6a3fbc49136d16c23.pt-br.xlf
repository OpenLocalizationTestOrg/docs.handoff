<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2f0792ec66832fdc2f2c489589e11a10ebd5fa5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\optimizing-performance-data-binding.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6103f741f718bcbb0b71b1c935ec83ce2368b54b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b56ce904d19a98fac07ba179d52577ef40c09ca5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Optimizing Performance: Data Binding | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Optimizing Performance: Data Binding</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Elements can be bound to data from a variety of data sources in the form of <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id="ph2">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic provides data binding performance recommendations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How Data Binding References are Resolved</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Before discussing data binding performance issues, it is worthwhile to explore how the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> data binding engine resolves object references for binding.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The source of a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> data binding can be any <ph id="ph2">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can bind to properties, sub-properties, or indexers of a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The binding references are resolved by using either <ph id="ph1">[!INCLUDE[TLA#tla_avalonwinfx](../../../../includes/tlasharptla-avalonwinfx-md.md)]</ph> reflection or an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Here are three methods for resolving object references for binding.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The first method involves using reflection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object is used to discover the attributes of the property and provides access to property metadata.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, the data binding engine uses this interface to access the property values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface is especially useful in cases where the object does not have a static set of properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Property change notifications can be provided either by implementing the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface or by using the change notifications associated with the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, the preferred strategy for implementing property change notifications is to use <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the source object is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object and the source property is a <ph id="ph2">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> property, the <ph id="ph3">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> data binding engine has to first use reflection on the source object to get the <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, and then query for a <ph id="ph5">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This sequence of reflection operations is potentially very time-consuming from a performance perspective.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The second method for resolving object references involves a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> source object that implements the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, and a source property that is a <ph id="ph3">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this case, the data binding engine uses reflection directly on the source type and gets the required property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is still not the optimal method, but it will cost less in working set requirements than the first method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The third method for resolving object references involves a source object that is a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> and a source property that is a <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this case, the data binding engine does not need to use reflection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Instead, the property engine and the data binding engine together resolve the property reference independently.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is the optimal method for resolving object references used for data binding.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The table below compares the speed of data binding the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> property of one thousand <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements using these three methods.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Binding the Text property of a TextBlock<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Binding time (ms)<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Render time -- includes binding (ms)<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To a property of a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>115</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>314</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To a property of a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object which implements <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>115</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>305</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To a <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>90</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>263</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Binding to Large CLR Objects</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>There is a significant performance impact when you data bind to a single <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object with thousands of properties.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can minimize this impact by dividing the single object into multiple <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> objects with fewer properties.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The table shows the binding and rendering times for data binding to a single large <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object versus multiple smaller objects.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Data binding 1000 TextBlock objects<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Binding time (ms)<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Render time -- includes binding (ms)<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object with 1000 properties</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>950</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>1200</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To 1000 <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> objects with one property</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>115</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>314</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Binding to an ItemsSource</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Consider a scenario in which you have a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object that holds a list of employees that you want to display in a <ph id="ph3">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To create a correspondence between these two objects, you would bind your employee list to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, suppose you have a new employee joining your group.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You might think that in order to insert this new person into your bound <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> values, you would simply add this person to your employee list and expect this change to be recognized by the data binding engine automatically.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>That assumption would prove false; in actuality, the change will not be reflected in the <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> automatically.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This is because the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object does not automatically raise a collection changed event.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In order to get the <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> to pick up the changes, you would have to recreate your list of employees and re-attach it to the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>While this solution works, it introduces a huge performance impact.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Each time you reassign the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> to a new object, the <ph id="ph3">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> first throws away its previous items and regenerates its entire list.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The performance impact is magnified if your <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> maps to a complex <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A very efficient solution to this problem is to make your employee list an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> object raises a change notification which the data binding engine can receive.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The event adds or removes an item from an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> without the need to regenerate the entire list.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The table below shows the time it takes to update the <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> (with UI virtualization turned off) when one item is added.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The number in the first row represents the elapsed time when the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object is bound to <ph id="ph3">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> element's <ph id="ph4">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The number in the second row represents the elapsed time when an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is bound to the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> element's <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note the significant time savings using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> data binding strategy.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Data binding the ItemsSource<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Update time for 1 item (ms)<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>1656</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>20</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Bind IList to ItemsControl not IEnumerable</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you have a choice between binding an <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> or an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> to an <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> object, choose the <ph id="ph4">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Binding <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> to an <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> forces <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> to create a wrapper <ph id="ph4">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object, which means your performance is impacted by the unnecessary overhead of a second object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Do not Convert CLR objects to XML Just for Data Binding.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> allows you to data bind to <ph id="ph2">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph> content; however, data binding to <ph id="ph3">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph> content is slower than data binding to <ph id="ph4">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> objects.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Do not convert <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object data to XML if the only purpose is for data binding.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Optimizing WPF Application Performance<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-wpf-application-performance.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Planning for Application Performance<ept id="p1">](../../../../docs/framework/wpf/advanced/planning-for-application-performance.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Taking Advantage of Hardware<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-taking-advantage-of-hardware.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Layout and Design<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-layout-and-design.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>2D Graphics and Imaging<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-2d-graphics-and-imaging.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Behavior<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-object-behavior.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Resources<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-application-resources.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Text<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-text.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Other Performance Recommendations<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-other-recommendations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Caching Application Data in a WPF Application<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-caching-application-data-in-a-wpf-application.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>