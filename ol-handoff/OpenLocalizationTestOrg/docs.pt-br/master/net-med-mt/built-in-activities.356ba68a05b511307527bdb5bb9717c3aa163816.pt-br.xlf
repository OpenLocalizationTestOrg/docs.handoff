<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b46d6fac411f36a43f1802cdef7b2e2049d9d06</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\built-in-activities.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3dadb3a35ededdbb996279a44b6c8e3ebe6bf24</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">040dc909c6b5d03b06069f0c10d0f84e86e2e8fa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Built-in Activities | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Built-in Activities</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section contains samples that demonstrate built-in <ph id="ph1">[!INCLUDE[wf](../../../../includes/wf-md.md)]</ph> activities.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Fault Handling in a Flowchart Activity Using TryCatch<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Demonstrates how the <ph id="ph1">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity can be used within a complex control flow activity.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Emulating breaking in a While activity<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/emulating-breaking-in-a-while-activity.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Demonstrates how to break the looping mechanism of the following activities: <ph id="ph1">&lt;xref:System.Activities.Statements.DoWhile&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Activities.Statements.While&gt;</ph>, and <ph id="ph4">&lt;xref:System.Activities.Statements.ParallelForEach%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DynamicActivity Creation<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/dynamicactivity-creation.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Demonstrates two different ways to create an activity at runtime using the <ph id="ph1">&lt;xref:System.Activities.DynamicActivity&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Variables with a .NET Framework 3.5 Ruleset<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/using-variables-with-dotnet-ruleset.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Demonstrates how to create a workflow that uses the <ph id="ph1">&lt;xref:System.Activities.Statements.Interop&gt;</ph> activity to integrate a custom activity written in <ph id="ph2">[!INCLUDE[netfx35_short](../../../../includes/netfx35-short-md.md)]</ph> that uses policy and rules.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Load From XAML<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/load-from-xaml.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Demonstrates how to dynamically load a XAML workflow without having to run the XamlBuildTask tool.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Collection Activities<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/using-collection-activities.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Demonstrates how to use the collection activities (<ph id="ph1">&lt;xref:System.Activities.Statements.AddToCollection%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Statements.ClearCollection%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Activities.Statements.ExistsInCollection%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.Activities.Statements.RemoveFromCollection%601&gt;</ph>) with a class that implements the <ph id="ph5">&lt;xref:System.Collections.ICollection&gt;</ph> interface and how to create a custom activity that iterates over a collection to print out the contents of each element in the collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using the InvokeMethod Activity<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/using-the-invokemethod-activity.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Demonstrates how to use the <ph id="ph1">&lt;xref:System.Activities.Statements.InvokeMethod&gt;</ph> activity to invoke public methods in public classes.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using the Pick Activity<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Demonstrates how to use the <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Procedural Activities<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Demonstrates how to use the <ph id="ph1">&lt;xref:System.Activities.Statements.Sequence&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Statements.Assign&gt;</ph>, <ph id="ph3">&lt;xref:System.Activities.Statements.If&gt;</ph>, <ph id="ph4">&lt;xref:System.Activities.Statements.While&gt;</ph>, <ph id="ph5">&lt;xref:System.Activities.Statements.Switch%601&gt;</ph>, <ph id="ph6">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph>, and <ph id="ph7">&lt;xref:System.Activities.Statements.WriteLine&gt;</ph> activities to implement a guessing game.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using CancellationScope<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/using-cancellationscope.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Demonstrates how to use the <ph id="ph1">&lt;xref:System.Activities.Statements.CancellationScope&gt;</ph> activity to cancel work in an application.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>InvokeMethod<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/invokemethod.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Demonstrates the different ways to use the <ph id="ph1">&lt;xref:System.Activities.Statements.InvokeMethod&gt;</ph> activity to invoke methods of a class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Usage of the Switch Activity with Custom Types<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/usage-of-the-switch-activity-with-custom-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Describes how to enable a <ph id="ph1">&lt;xref:System.Activities.Statements.Switch%601&gt;</ph> activity to evaluate a user-defined complex type at runtime.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interop with 3.5 Rule Set<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/interop-with-3-5-rule-set.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Demonstrates the use of the <ph id="ph1">&lt;xref:System.Activities.Statements.Interop&gt;</ph> activity to integrate with a custom activity in <ph id="ph2">[!INCLUDE[netfx35_short](../../../../includes/netfx35-short-md.md)]</ph> using <ph id="ph3">&lt;xref:System.Workflow.Activities.PolicyActivity&gt;</ph> and rules.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>