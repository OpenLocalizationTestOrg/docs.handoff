<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b97a494ee23fa0f5d749c3e8909f7874e51b9c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\workflow-execution-properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">302c84a78b9f98d5023e315996be00631c9400c2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">640027230259c56503a7ab4dff2a0670dd0db574</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Workflow Execution Properties | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Workflow Execution Properties</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Through thread local storage (TLS), the CLR maintains an execution context for each thread.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This execution context governs well-known thread properties such as the thread identity, the ambient transaction, and the current permission set in addition to user-defined thread properties like named slots.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Unlike programs directly targeting the CLR, workflow programs are hierarchically scoped trees of activities that execute in a thread-agnostic environment.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This implies that the standard TLS mechanisms cannot directly be used to determine what context is in scope for a given work item.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, two parallel branches of execution might use different transactions, yet the scheduler might interleave their execution on the same CLR thread.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Workflow execution properties provide a mechanism to add context specific properties to an activity’s environment.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This allows an activity to declare which properties are in scope for its sub-tree and also provides hooks for setting up and tearing down TLS to properly interoperate with CLR objects.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creating and Using Workflow Execution Properties</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Workflow execution properties usually implement the <ph id="ph1">&lt;xref:System.Activities.IExecutionProperty&gt;</ph> interface, though properties focused on messaging may implement <ph id="ph2">&lt;xref:&gt;</ph> System.ServiceModel.Activities.ISendMessageCallback?qualifyHint=False&amp;autoUpgrade=True and <ph id="ph3">&lt;xref:&gt;</ph> System.ServiceModel.Activities.IReceiveMessageCallback?qualifyHint=False&amp;autoUpgrade=True instead.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To create a workflow execution property, create a class that implements the <ph id="ph1">&lt;xref:System.Activities.IExecutionProperty&gt;</ph> interface and implement the members <ph id="ph2">&lt;xref:System.Activities.IExecutionProperty.SetupWorkflowThread%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Activities.IExecutionProperty.CleanupWorkflowThread%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These members provide the execution property with an opportunity to properly set up and tear down the thread local storage during each pulse of work of the activity that contains the property, including any child activities.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this example, a <ph id="ph1">`ConsoleColorProperty`</ph> is created that sets the <ph id="ph2">`Console.ForegroundColor`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example code in this topic is based on the <bpt id="p1">[</bpt>Execution Properties<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/execution-properties.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Activity authors can use this property by registering it in the activity’s execute override.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this example, a <ph id="ph1">`ConsoleColorScope`</ph> activity is defined that registers the <ph id="ph2">`ConsoleColorProperty`</ph> by adding it to the <ph id="ph3">&lt;xref:System.Activities.NativeActivityContext.Properties%2A&gt;</ph> collection of the current <ph id="ph4">&lt;xref:System.Activities.NativeActivityContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the activity’s body starts a pulse of work, the <ph id="ph1">&lt;xref:System.Activities.IExecutionProperty.SetupWorkflowThread%2A&gt;</ph> method of the property is called, and when the pulse of work is complete, the <ph id="ph2">&lt;xref:System.Activities.IExecutionProperty.CleanupWorkflowThread%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this example, a workflow is created that uses a <ph id="ph1">&lt;xref:System.Activities.Statements.Parallel&gt;</ph> activity with three branches.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first two branches use the <ph id="ph1">`ConsoleColorScope`</ph> activity and the third branch does not.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All three branches contain two <ph id="ph1">&lt;xref:System.Activities.Statements.WriteLine&gt;</ph> activities and a <ph id="ph2">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Activities.Statements.Parallel&gt;</ph> activity executes, the activities that are contained in the branches execute in an interleaved manner, but as each child activity executes the correct console color is applied by the <ph id="ph2">`ConsoleColorProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When the workflow is invoked, the following output is written to the console window.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Although it is not shown in the previous output, each line of text in the console window is displayed in the indicated color.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Workflow execution properties can be used by custom activity authors, and they also provide the mechanism for handle management for activities such as the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>