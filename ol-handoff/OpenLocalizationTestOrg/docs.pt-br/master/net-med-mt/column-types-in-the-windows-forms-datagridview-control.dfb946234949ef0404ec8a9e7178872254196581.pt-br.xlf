<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c064a599e81ab8334b8171f00d0f56aa27d73adb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\column-types-in-the-windows-forms-datagridview-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6f9f14f4c1c9fc2d3992577fb82451709895903</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ac78e8c9239e4bc6390361481907416f24411a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Column Types in the Windows Forms DataGridView Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Column Types in the Windows Forms DataGridView Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses several column types to display its information and enable users to modify or add information.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you bind a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, columns are automatically generated using default column types appropriate for the data types contained in the bound data source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can also create instances of any of the column classes yourself and add them to the collection returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can create these instances for use as unbound columns, or you can manually bind them.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Manually bound columns are useful, for example, when you want to replace an automatically generated column of one type with a column of another type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table describes the various column classes available for use in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Class</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Used with text-based values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Generated automatically when binding to numbers and strings.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Used with <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Generated automatically when binding to values of these types.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Used to display images.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Generated automatically when binding to byte arrays, <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> objects, or <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Used to display buttons in cells.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Not automatically generated when binding.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Typically used as unbound columns.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Used to display drop-down lists in cells.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Not automatically generated when binding.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Typically data-bound manually.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Used to display links in cells.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Not automatically generated when binding.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Typically data-bound manually.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Your custom column type</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can create your own column class by inheriting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> class or any of its derived classes to provide custom appearance, behavior, or hosted controls.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance<ept id="p1">](../../../../docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These column types are described in more detail in the following sections.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>DataGridViewTextBoxColumn</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> is a general-purpose column type for use with text-based values such as numbers and strings.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In editing mode, a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control is displayed in the active cell, enabling users to modify the cell value.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Cell values are automatically converted to strings for display.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Values entered or modified by the user are automatically parsed to create a cell value of the appropriate data type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can customize these conversions by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> events of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The cell value data type of a column is specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A&gt;</ph> property of the column.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>DataGridViewCheckBoxColumn</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn&gt;</ph> is used with <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values display as two-state or three-state check boxes, depending on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When the column is bound to <ph id="ph1">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> values, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A&gt;</ph> property value is <ph id="ph3">`true`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Typically, check box cell values are intended either for storage, like any other data, or for performing bulk operations.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you want to respond immediately when users click a check box cell, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick&gt;</ph> event, but this event occurs before the cell value is updated.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you need the new value at the time of the click, one option is to calculate what the expected value will be based on the current value.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Another approach is to commit the change immediately, and handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event to respond to it.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To commit the change when the cell is clicked, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>DataGridViewImageColumn</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewImageColumn&gt;</ph> is used to display images.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Image columns can be populated automatically from a data source, populated manually for unbound columns, or populated dynamically in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The automatic population of an image column from a data source works with byte arrays in a variety of image formats, including all formats supported by the <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> class and the OLE Picture format used by Microsoft® Access and the Northwind sample database.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Populating an image column manually is useful when you want to provide the functionality of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonColumn&gt;</ph>, but with a customized appearance.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName&gt;</ph> event to respond to clicks within an image cell.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Populating the cells of an image column in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event is useful when you want to provide images for calculated values or values in non-image formats.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, you may have a "Risk" column with string values such as <ph id="ph1">`"high"`</ph>, <ph id="ph2">`"middle"`</ph>, and <ph id="ph3">`"low"`</ph> that you want to display as icons.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Alternately, you may have an "Image" column that contains the locations of images that must be loaded rather than the binary content of the images.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>DataGridViewButtonColumn</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonColumn&gt;</ph>, you can display a column of cells that contain buttons.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is useful when you want to provide an easy way for your users to perform actions on particular records, such as placing an order or displaying child records in a separate window.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Button columns are not generated automatically when data-binding a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To use button columns, you must create them manually and add them to the collection returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can respond to user clicks in button cells by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>DataGridViewComboBoxColumn</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph>, you can display a column of cells that contain drop-down list boxes.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This is useful for data entry in fields that can only contain particular values, such as the Category column of the Products table in the Northwind sample database.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can populate the drop-down list used for all cells the same way you would populate a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> drop-down list, either manually through the collection returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn.Items%2A&gt;</ph> property, or by binding it to a data source through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn.DataSource%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn.DisplayMember%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn.ValueMember%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ComboBox Control<ept id="p1">](../../../../docs/framework/winforms/controls/combobox-control-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can bind the actual cell values to the data source used by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Combo box columns are not generated automatically when data-binding a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To use combo box columns, you must create them manually and add them to the collection returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>DataGridViewLinkColumn</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewLinkColumn&gt;</ph>, you can display a column of cells that contain hyperlinks.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This is useful for URL values in the data source or as an alternative to the button column for special behaviors such as opening a window with child records.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Link columns are not generated automatically when data-binding a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To use link columns, you must create them manually and add them to the collection returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can respond to user clicks on links by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This event is distinct from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> events, which occur when a user clicks anywhere in a cell.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewLinkColumn&gt;</ph> class provides several properties for modifying the appearance of links before, during, and after they are clicked.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewImageColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewLinkColumn&gt;</ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/datagridview-control-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Display Images in Cells of the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-display-images-in-cells-of-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Work with Image Columns in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Customizing the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/customizing-the-windows-forms-datagridview-control.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>