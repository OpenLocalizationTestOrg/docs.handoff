<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-manually-manage-buffered-graphics.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a884751366d02a598fcb79dd1c59b9b95fce7b95</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\how-to-manually-manage-buffered-graphics.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f9cf69e539071d4894e4947e2499c742a2756ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acade6514d1b4201337b2a0b36df21eb572ac7c9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Manually Manage Buffered Graphics | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Manually Manage Buffered Graphics</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more advanced double buffering scenarios, you can use the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> classes to implement your own double-buffering logic.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The class responsible for allocating and managing individual graphics buffers is the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Every application has its own default <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> that manages all of the default double buffering for that application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can retrieve a reference to this instance by calling the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To obtain a reference to the default BufferedGraphicsContext</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A&gt;</ph> property, as shown in the following code example.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You do not need to call the <ph id="ph1">`Dispose`</ph> method on the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> reference that you receive from the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph> handles all of the memory allocation and distribution for default <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> instead of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This enables you to create and manage graphics buffers individually, without incurring the performance overhead of managing all the other buffered graphics associated with your application, though the memory consumed by the application will be greater.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To create a dedicated BufferedGraphicsContext</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Declare and create a new instance of the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class, as shown in the following code example.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](../../../../docs/framework/winforms/advanced/double-buffered-graphics.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Manually Render Buffered Graphics<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-manually-render-buffered-graphics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>