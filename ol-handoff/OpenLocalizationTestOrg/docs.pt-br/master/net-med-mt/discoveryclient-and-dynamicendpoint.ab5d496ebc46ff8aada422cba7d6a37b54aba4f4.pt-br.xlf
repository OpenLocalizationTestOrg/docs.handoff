<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="discoveryclient-and-dynamicendpoint.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b23f87027ecf8ea7cbef4194405381e5184557f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\discoveryclient-and-dynamicendpoint.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cede851548dfa058cd70adce718ed80bd1e27d0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d8b9bd8008184cadcab25fec1a3be2fd5d7b70c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>DiscoveryClient and DynamicEndpoint | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DiscoveryClient and DynamicEndpoint</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> are two classes used on the client side to search for services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> provides you with a list of services that match a specific set of criteria and allows you to connect to the services.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> performs the same operation and in addition, automatically connects to one of the services that was found.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Any endpoint can be made into a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph>, the search criteria can also be added in configuration, thus <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> is useful when you need discovery in your solution but do not want to modify the client logic – you only need to modify the endpoints.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> on the other hand can be used to gain finer control over your search operation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The uses and benefits of each are elaborated below.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DiscoveryClient</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> defines synchronous and asynchronous Find methods, <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It also defines synchronous and asynchronous Resolve methods and a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindAsync%2A&gt;</ph> methods to search for services.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Both of these methods take a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> instance that allows you to specify contract type names, scopes, maximum number of results requested, and scope matching rules.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged&gt;</ph> events can be used when calling the <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged&gt;</ph> is fired whenever the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> receives a response from a service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It can be used to display a progress bar showing the progress of the find operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It can also be used to act on find responses as they are received.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted&gt;</ph> event is fired when the find operation completes.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This may happen because the maximum number of responses has been received or if the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria.Duration%2A&gt;</ph> has elapsed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the find operation completes the results are returned in a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindResponse&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindResponse&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> which contains the addresses, contract type names, extensions, listen URIs, and scopes of the matching services.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can then use this information to connect to and call one of the matching services.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example shows how to call the System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria) method and use the returned metadata to call the found service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A benefit of using <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> is that you can cache the list of endpoints you’ve found and use them at a later time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>With this cache, you can build custom logic to handle various failure conditions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example shows how to perform a find operation asynchronously.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>making asynchronous find calls, see <bpt id="p1">[</bpt>Asynchronous Find<ept id="p1">](../../../../docs/framework/wcf/samples/asynchronous-find-sample.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Resolve%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync%28System.ServiceModel.Discovery.ResolveCriteria%29&gt;</ph> methods to locate a service based on its endpoint address.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is useful when the endpoint address is not network addressable.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Resolve methods take an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ResolveCriteria&gt;</ph> which allows you to specify the endpoint address of the service you are resolving, the maximum duration of the resolve operation, and a set of extensions.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Resolve%2A&gt;</ph> method to resolve a service.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>DynamicEndpoint</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> is a standard endpoint (<ph id="ph2">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Standard Endpoints<ept id="p1">](../../../../docs/framework/wcf/feature-details/standard-endpoints.md)</ept>) which performs discovery and automatically selects a matching service.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Just create a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> passing in the contract to search for and the binding to use and pass the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> instance to the WCF client.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example shows how to create and use a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> to call the calculator service.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The discovery is performed every time the client is opened.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Any endpoint defined in configuration can also be turned into a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> by adding the <ph id="ph2">`kind ="dynamicEndpoint"`</ph> attribute to the endpoint configuration element.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Discovery with Scopes<ept id="p1">](../../../../docs/framework/wcf/samples/discovery-with-scopes-sample.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Find<ept id="p1">](../../../../docs/framework/wcf/samples/asynchronous-find-sample.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic<ept id="p1">](../../../../docs/framework/wcf/samples/basic-sample.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>