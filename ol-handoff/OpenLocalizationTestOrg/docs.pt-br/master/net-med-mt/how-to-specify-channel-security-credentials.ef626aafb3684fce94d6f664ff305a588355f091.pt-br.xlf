<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91b19ae6c5bd10eaaeb27089f0515e95efee4466</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-specify-channel-security-credentials.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2abcdbec890c38482c693a5dd10761b70e3c9c28</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d256f1b8799c3ca8d899f5e2a1df309d6c8079c6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Specify Channel Security Credentials | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Specify Channel Security Credentials</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> Service Moniker allows COM applications to call <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Most <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services require the client to specify credentials for authentication and authorization.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When calling a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service from a <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client, you can specify these credentials in managed code or in an application configuration file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When calling a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service from a COM application, you can use the <ph id="ph2">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials&gt;</ph> interface to specify credentials.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic will illustrate various ways to specify credentials using the <ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials&gt;</ph> is an IDispatch-based interface and you will not get IntelliSense functionality in the Visual Studio environment.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article will use the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service defined in the <bpt id="p1">[</bpt>Message Security Sample<ept id="p1">](../../../../docs/framework/wcf/samples/message-security-sample.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To specify a client certificate</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Run the Setup.bat file in the Message Security directory to create and install the required test certificates.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Open the Message Security project.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">`[ServiceBehavior(Namespace=``http://Microsoft.ServiceModel.Samples``)]`</ph> to the <ph id="ph2">`ICalculator`</ph> interface definition.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">`bindingNamespace=``http://Microsoft.ServiceModel.Samples`</ph> to the endpoint tag in the App.config for the service.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Build the Message Security Sample and run Service.exe.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use Internet Explorer and browse to the service's URI (http://localhost:8000/ServiceModelSamples/Service) to ensure that the service is working.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Open Visual Basic 6.0 and create a new Standard .exe file.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add a button to the form and double-click the button to add the following code to the Click handler:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Run the Visual Basic application and verify the results.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Visual Basic application will display a message box with the result from calling Add(3, 4).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> can also be used in place of <ph id="ph3">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore%28System.String%2CSystem.String%2CSystem.String%2CSystem.Object%29&gt;</ph> to set the Client Certificate:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For this call to work, the client certificate needs to be trusted on the machine the client is running on.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the moniker is malformed or if the service is unavailable, the call to <ph id="ph1">`GetObject`</ph> will return an error saying "Invalid Syntax."</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you receive this error, make sure the moniker you are using is correct and the service is available.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To specify user name and password</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Modify the Service App.config file to use the <ph id="ph1">`wsHttpBinding`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is required for user name and password validation:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`clientCredentialType`</ph> to UserName:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Open Visual Basic 6.0 and create a new Standard .exe file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add a button to the form and double-click the button to add the following code to the Click handler:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Run the Visual Basic application and verify the results.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Visual Basic application will display a message box with the result from calling Add(3, 4).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The binding specified in the service moniker in this sample has been changed to WSHttpBinding_ICalculator.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Also note that you must supply a valid user name and password in the call to <ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential%28System.String%2CSystem.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To specify Windows Credentials</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`clientCredentialType`</ph> to Windows in the Service App.config file:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Open Visual Basic 6.0 and create a new Standard .exe file.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add a button to the form and double-click the button to add the following code to the Click handler:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the Visual Basic application and verify the results.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The Visual Basic application will display a message box with the result from calling Add(3, 4).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You must replace "domain", "userID", and "password" with valid values.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To specify an issue token</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Issue tokens are used only for applications using federated security.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information about federated security, see <bpt id="p1">[</bpt>Federation and Issued Tokens<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation-and-issued-tokens.md)</ept> and <bpt id="p2">[</bpt>Federation Sample<ept id="p2">](../../../../docs/framework/wcf/samples/federation-sample.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following Visual Basic code example illustrates how to call the <ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> method:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about the parameters for this method, see <ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Federation<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Configure Credentials on a Federation Service<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-credentials-on-a-federation-service.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Federated Client<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-federated-client.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Message Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/message-security-in-wcf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Bindings and Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/bindings-and-security.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>