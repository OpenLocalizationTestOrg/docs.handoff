<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4296ba3a78316b70011bcca18f7071716f3c90d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\how-to-define-multiple-versions-of-a-procedure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ad0925728b3ce8d06611c0b0ec55fc85840d504</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b2fb2d9708900f053d9e57d8b14874f6cb73abc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Define Multiple Versions of a Procedure (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Define Multiple Versions of a Procedure (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can define a procedure in multiple versions by <bpt id="p1">*</bpt>overloading<ept id="p1">*</ept> it, using the same name but a different parameter list for each version.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The purpose of overloading is to define several closely related versions of a procedure without having to differentiate them by name.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To define multiple versions of a procedure</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Write a <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> declaration statement for each version of the procedure you want to define.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the same procedure name in every declaration.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Precede the <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> keyword in each declaration with the <bpt id="p1">[</bpt>Overloads<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept> keyword.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can optionally omit <ph id="ph1">`Overloads`</ph> in the declarations, but if you include it in any of the declarations, you must include it in every declaration.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Following each declaration statement, write procedure code to handle the specific case where the calling code supplies arguments matching that version's parameter list.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You do not have to test for which parameters the calling code has supplied.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> passes control to the matching version of your procedure.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Terminate each version of the procedure with the <ph id="ph1">`End Sub`</ph> or <ph id="ph2">`End Function`</ph> statement as appropriate.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following example defines a <ph id="ph1">`Sub`</ph> procedure to post a transaction against a customer's balance.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It uses the <ph id="ph1">`Overloads`</ph> keyword to define two versions of the procedure, one that accepts the customer by name and the other by account number.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#72<ept id="p2">](./codesnippet/VisualBasic/how-to-define-multiple-versions-of-a-procedure_1.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The calling code can obtain the customer identification as either a <ph id="ph1">`String`</ph> or an <ph id="ph2">`Integer`</ph>, and then use the same calling statement in either case.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For information on how to call these versions of the <ph id="ph1">`post`</ph> procedure, see <bpt id="p1">[</bpt>How to: Call an Overloaded Procedure<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Make sure each of your overloaded versions has the same procedure name but a different parameter list.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes Optional Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes an Indefinite Number of Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>