<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6587a9fa06149aad08e67e715cd984600c99b39</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">p1-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43264bcd072b4d75260964d9daa3e60784e2d762</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60943be505d239818e4b32374b9edcdfa682ead2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>C# Keywords | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>C# Keywords</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Keywords are predefined, reserved identifiers that have special meanings to the compiler.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>They cannot be used as identifiers in your program unless they include <ph id="ph1">`@`</ph> as a prefix.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`@if`</ph> is a valid identifier, but <ph id="ph2">`if`</ph> is not because <ph id="ph3">`if`</ph> is a keyword.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The first table in this topic lists keywords that are reserved identifiers in any part of a C# program.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The second table in this topic lists the contextual keywords in C#.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Contextual keywords have special meaning only in a limited program context and can be used as identifiers outside that context.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generally, as new keywords are added to the C# language, they are added as contextual keywords in order to avoid breaking programs written in earlier versions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>abstract<ept id="p1">](../../../csharp/language-reference/keywords/abstract.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>as<ept id="p1">](../../../csharp/language-reference/keywords/as.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>base<ept id="p1">](../../../csharp/language-reference/keywords/base.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>bool<ept id="p1">](../../../csharp/language-reference/keywords/bool.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>break<ept id="p1">](../../../csharp/language-reference/keywords/break.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>byte<ept id="p1">](../../../csharp/language-reference/keywords/byte.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>case<ept id="p1">](../../../csharp/language-reference/keywords/switch.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>catch<ept id="p1">](../../../csharp/language-reference/keywords/try-catch.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>char<ept id="p1">](../../../csharp/language-reference/keywords/char.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>checked<ept id="p1">](../../../csharp/language-reference/keywords/checked.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>class<ept id="p1">](../../../csharp/language-reference/keywords/class.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>const<ept id="p1">](../../../csharp/language-reference/keywords/const.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>continue<ept id="p1">](../../../csharp/language-reference/keywords/continue.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>decimal<ept id="p1">](../../../csharp/language-reference/keywords/decimal.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>default<ept id="p1">](../../../csharp/language-reference/keywords/default.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>delegate<ept id="p1">](../../../csharp/language-reference/keywords/delegate.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>do<ept id="p1">](../../../csharp/language-reference/keywords/do.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>double<ept id="p1">](../../../csharp/language-reference/keywords/double.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>else<ept id="p1">](../../../csharp/language-reference/keywords/if-else.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>enum<ept id="p1">](../../../csharp/language-reference/keywords/enum.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>event<ept id="p1">](../../../csharp/language-reference/keywords/event.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>explicit<ept id="p1">](../../../csharp/language-reference/keywords/explicit.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>extern<ept id="p1">](../../../csharp/language-reference/keywords/extern.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>false<ept id="p1">](../../../csharp/language-reference/keywords/false.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>finally<ept id="p1">](../../../csharp/language-reference/keywords/try-finally.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>fixed<ept id="p1">](../../../csharp/language-reference/keywords/fixed-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>float<ept id="p1">](../../../csharp/language-reference/keywords/float.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>for<ept id="p1">](../../../csharp/language-reference/keywords/for.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>foreach<ept id="p1">](../../../csharp/language-reference/keywords/foreach-in.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>goto<ept id="p1">](../../../csharp/language-reference/keywords/goto.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>if<ept id="p1">](../../../csharp/language-reference/keywords/if-else.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>implicit<ept id="p1">](../../../csharp/language-reference/keywords/implicit.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>in<ept id="p1">](../../../csharp/language-reference/keywords/foreach-in.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>in (generic modifier)<ept id="p1">](../../../csharp/language-reference/keywords/in-generic-modifier.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>int<ept id="p1">](../../../csharp/language-reference/keywords/int.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>interface<ept id="p1">](../../../csharp/language-reference/keywords/interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>internal<ept id="p1">](../../../csharp/language-reference/keywords/internal.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>is<ept id="p1">](../../../csharp/language-reference/keywords/is.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>lock<ept id="p1">](../../../csharp/language-reference/keywords/lock-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>long<ept id="p1">](../../../csharp/language-reference/keywords/long.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>namespace<ept id="p1">](../../../csharp/language-reference/keywords/namespace.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>new<ept id="p1">](../../../csharp/language-reference/keywords/new.md)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>null<ept id="p1">](../../../csharp/language-reference/keywords/null.md)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>object<ept id="p1">](../../../csharp/language-reference/keywords/object.md)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>operator<ept id="p1">](../../../csharp/language-reference/keywords/operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>out<ept id="p1">](../../../csharp/language-reference/keywords/out.md)</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>out (generic modifier)<ept id="p1">](../../../csharp/language-reference/keywords/out-generic-modifier.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>override<ept id="p1">](../../../csharp/language-reference/keywords/override.md)</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>params<ept id="p1">](../../../csharp/language-reference/keywords/params.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>private<ept id="p1">](../../../csharp/language-reference/keywords/private.md)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>protected<ept id="p1">](../../../csharp/language-reference/keywords/protected.md)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>public<ept id="p1">](../../../csharp/language-reference/keywords/public.md)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>readonly<ept id="p1">](../../../csharp/language-reference/keywords/readonly.md)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ref<ept id="p1">](../../../csharp/language-reference/keywords/ref.md)</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>return<ept id="p1">](../../../csharp/language-reference/keywords/return.md)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sbyte<ept id="p1">](../../../csharp/language-reference/keywords/sbyte.md)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sealed<ept id="p1">](../../../csharp/language-reference/keywords/sealed.md)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>short<ept id="p1">](../../../csharp/language-reference/keywords/short.md)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sizeof<ept id="p1">](../../../csharp/language-reference/keywords/sizeof.md)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>stackalloc<ept id="p1">](../../../csharp/language-reference/keywords/stackalloc.md)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>static<ept id="p1">](../../../csharp/language-reference/keywords/static.md)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>string<ept id="p1">](../../../csharp/language-reference/keywords/string.md)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>struct<ept id="p1">](../../../csharp/language-reference/keywords/struct.md)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>switch<ept id="p1">](../../../csharp/language-reference/keywords/switch.md)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>this<ept id="p1">](../../../csharp/language-reference/keywords/this.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>throw<ept id="p1">](../../../csharp/language-reference/keywords/throw.md)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>true<ept id="p1">](../../../csharp/language-reference/keywords/true.md)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>try<ept id="p1">](../../../csharp/language-reference/keywords/try-catch.md)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>typeof<ept id="p1">](../../../csharp/language-reference/keywords/typeof.md)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uint<ept id="p1">](../../../csharp/language-reference/keywords/uint.md)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ulong<ept id="p1">](../../../csharp/language-reference/keywords/ulong.md)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>unchecked<ept id="p1">](../../../csharp/language-reference/keywords/unchecked.md)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>unsafe<ept id="p1">](../../../csharp/language-reference/keywords/unsafe.md)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ushort<ept id="p1">](../../../csharp/language-reference/keywords/ushort.md)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>using<ept id="p1">](../../../csharp/language-reference/keywords/using.md)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>using static<ept id="p1">](using-static.md)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>virtual<ept id="p1">](../../../csharp/language-reference/keywords/virtual.md)</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>void<ept id="p1">](../../../csharp/language-reference/keywords/void.md)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>volatile<ept id="p1">](../../../csharp/language-reference/keywords/volatile.md)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>while<ept id="p1">](../../../csharp/language-reference/keywords/while.md)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Contextual Keywords</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A contextual keyword is used to provide a specific meaning in the code, but it is not a reserved word in C#.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Some contextual keywords, such as <ph id="ph1">`partial`</ph> and <ph id="ph2">`where`</ph>, have special meanings in two or more contexts.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>add<ept id="p1">](../../../csharp/language-reference/keywords/add.md)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>alias<ept id="p1">](../../../csharp/language-reference/keywords/extern-alias.md)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ascending<ept id="p1">](../../../csharp/language-reference/keywords/ascending.md)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>async<ept id="p1">](../../../csharp/language-reference/keywords/async.md)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>await<ept id="p1">](../../../csharp/language-reference/keywords/await.md)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>descending<ept id="p1">](../../../csharp/language-reference/keywords/descending.md)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dynamic<ept id="p1">](../../../csharp/language-reference/keywords/dynamic.md)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>from<ept id="p1">](../../../csharp/language-reference/keywords/from-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>get<ept id="p1">](../../../csharp/language-reference/keywords/get.md)</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>global<ept id="p1">](../../../csharp/language-reference/keywords/global.md)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>group<ept id="p1">](../../../csharp/language-reference/keywords/group-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>into<ept id="p1">](../../../csharp/language-reference/keywords/into.md)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>join<ept id="p1">](../../../csharp/language-reference/keywords/join-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>let<ept id="p1">](../../../csharp/language-reference/keywords/let-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>orderby<ept id="p1">](../../../csharp/language-reference/keywords/orderby-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>partial (type)<ept id="p1">](../../../csharp/language-reference/keywords/partial-type.md)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>partial (method)<ept id="p1">](../../../csharp/language-reference/keywords/partial-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>remove<ept id="p1">](../../../csharp/language-reference/keywords/remove.md)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>select<ept id="p1">](../../../csharp/language-reference/keywords/select-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>set<ept id="p1">](../../../csharp/language-reference/keywords/set.md)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>value<ept id="p1">](../../../csharp/language-reference/keywords/value.md)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>var<ept id="p1">](../../../csharp/language-reference/keywords/var.md)</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>when (filter condition)<ept id="p1">](when.md)</ept></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>where (generic type constraint)<ept id="p1">](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>where (query clause)<ept id="p1">](../../../csharp/language-reference/keywords/where-clause.md)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>yield<ept id="p1">](../../../csharp/language-reference/keywords/yield.md)</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>