<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="wpf-and-windows-forms-interoperation.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">034755a75c56e1bcd09875980f6351270b982d1b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\wpf-and-windows-forms-interoperation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c60d901fdd4bebdeedccadcc657a56dbd8ee582a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22a75d19119372a83c2e8c41a126e25271ae0b51</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>WPF and Windows Forms Interoperation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WPF and Windows Forms Interoperation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> present two different architectures for creating application interfaces.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration?displayProperty=fullName&gt;</ph> namespace provides classes that enable common interoperation scenarios.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The two key classes that implement interoperation capabilities are <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic describes which interoperation scenarios are supported and which scenarios are not supported.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Special consideration is given to the <bpt id="p1">*</bpt>hybrid control<ept id="p1">*</ept> scenario.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A hybrid control has a control from one technology nested in a control from the other technology.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is also called a <bpt id="p1">*</bpt>nested interoperation<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>multilevel hybrid control<ept id="p1">*</ept> has more than one level of hybrid control nesting.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An example of a multilevel nested interoperation is a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control that contains a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control, which contains another <ph id="ph3">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Multilevel hybrid controls are not supported.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Hosting Windows Forms Controls in WPF</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following interoperation scenarios are supported when a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control hosts a <ph id="ph2">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control may host one or more <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls using XAML.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It may host one or more <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls using code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It may host <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> container controls that contain other <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It may host a master/detail form with a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> master and <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> details.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It may host a master/detail form with a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> master and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> details.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It may host one or more <ph id="ph1">[!INCLUDE[TLA2#tla_actx](../../../../includes/tla2sharptla-actx-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It may host one or more composite controls.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It may host hybrid controls using <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It may host hybrid controls using code.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Layout Support</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following list describes the known limitations when the  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element attempts to integrate its hosted <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control into the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout system.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In some cases, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls cannot be resized, or can be sized only to specific dimensions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control supports only a single height, which is defined by the control's font size.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> dynamic layout, which assumes that elements can stretch vertically, a hosted <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control will not stretch as expected.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls cannot be rotated or skewed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, when you rotate your user interface by 90 degrees, hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls will maintain their upright position.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In most cases, <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls do not support proportional scaling.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Although the overall dimensions of the control will scale, child controls and component elements of the control may not resize as expected.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This limitation depends on how well each <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control supports scaling.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> user interface, you can change the z-order of elements to control overlapping behavior.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control is drawn in a separate HWND, so it is always drawn on top of <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls support autoscaling based on the font size.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> user interface, changing the font size does not resize the entire layout, although individual elements may dynamically resize.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Ambient Properties</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Some of the ambient properties of <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls have <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> equivalents.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>These ambient properties are propagated to the hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls and exposed as public properties on the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control translates each <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> ambient property into its <ph id="ph3">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> equivalent.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Forms and WPF Property Mapping<ept id="p1">](../../../../docs/framework/wpf/advanced/windows-forms-and-wpf-property-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Behavior</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following table describes interoperation behavior.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Behavior</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Supported</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Not supported</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Transparency</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control rendering supports transparency.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The background of the parent <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control can become the background of hosted <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Some <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls do not support transparency.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls will not be transparent when hosted by <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Tabbing</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Tab order for hosted <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls is the same as when those controls are hosted in a <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph>-based application.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Tabbing from a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control to a <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control with the TAB key and SHIFT+TAB keys works as usual.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls that have a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property value of <ph id="ph3">`false`</ph> do not receive focus when the user tabs through controls.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-   Each <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control has a <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.TabIndex%2A&gt;</ph> value, which determines when that <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control will receive focus.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls that are contained inside a <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> container follow the order specified by the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Tabbing from the last tab index puts focus on the next <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control, if one exists.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If no other focusable <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control exists, tabbing returns to the first <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control in the tab order.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.TabIndex%2A&gt;</ph> values for controls inside the <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> are relative to sibling <ph id="ph4">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls that are contained in the <ph id="ph5">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-   Tabbing honors control-specific behavior.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, pressing the TAB key in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control that has a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property value of <ph id="ph3">`true`</ph> enters a tab in the text box instead of moving the focus.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Navigation with arrow keys</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-   Navigation with arrow keys in the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control is the same as in an ordinary <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> container control: The UP ARROW and LEFT ARROW keys select the previous control, and the DOWN ARROW and RIGHT ARROW keys select the next control.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-   The UP ARROW and LEFT ARROW keys from the first control that is contained in the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control perform the same action as the SHIFT+TAB keyboard shortcut.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If there is a focusable <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control, focus moves outside the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This behavior differs from the standard <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> behavior in that no wrapping to the last control occurs.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If no other focusable <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control exists, focus returns to the last <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control in the tab order.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-   The DOWN ARROW and RIGHT ARROW keys from the last control that is contained in the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control perform the same action as the TAB key.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If there is a focusable <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control, focus moves outside the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This behavior differs from the standard <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> behavior in that no wrapping to the first control occurs.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If no other focusable <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control exists, focus returns to the first <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control in the tab order.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Accelerators</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Accelerators work as usual, except where noted in the "Not supported" column.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Duplicate accelerators across technologies do not work like ordinary duplicate accelerators.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When an accelerator is duplicated across technologies, with at least one on a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control and the other on a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control, the <ph id="ph3">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control always receives the accelerator.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Focus does not toggle between the controls when the duplicate accelerator is pressed.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Shortcut keys</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Shortcut keys work as usual, except where noted in the "Not supported" column.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> shortcut keys that are handled at the preprocessing stage always take precedence over <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> shortcut keys.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control with CTRL+S shortcut keys defined, and there is a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> command bound to CTRL+S, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control handler is always invoked first, regardless of focus.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> shortcut keys that are handled by the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event are processed last in <ph id="ph4">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can prevent this behavior by overriding the <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method or handling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Return <ph id="ph1">`true`</ph> from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method, or set the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph4">`true`</ph> in your <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>AcceptsReturn, AcceptsTab, and other control-specific behavior</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Properties that change the default keyboard behavior work as usual, assuming that the <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method to return <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls that change default keyboard behavior by handling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event are processed last in the host <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Because these controls are processed last, they can produce unexpected behavior.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Enter and Leave Events</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When focus is not going to the containing <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control, the Enter and Leave events are raised as usual when focus changes in a single <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Enter and Leave events are not raised when the following focus changes occur:</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   From inside to outside a <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-   From outside to inside a <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-   Outside a <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-   From a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control hosted in a <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control to an <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control hosted inside the same <ph id="ph4">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>All varieties of multithreading are supported.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Both the <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> technologies assume a single-threaded concurrency model.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>During debugging, calls to framework objects from other threads will raise an exception to enforce this requirement.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Security</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>All interoperation scenarios require full trust.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>No interoperation scenarios are allowed in partial trust.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Accessibility</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>All accessibility scenarios are supported.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Assistive technology products function correctly when they are used for hybrid applications that contain both <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Clipboard</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All Clipboard operations work as usual.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This includes cutting and pasting between <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Drag-and-drop feature</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>All drag-and-drop operations work as usual.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This includes operations between <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Hosting WPF Controls in Windows Forms</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following interoperation scenarios are supported when a <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control hosts a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control:</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Hosting one or more <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls using code.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Associating a property sheet with one or more hosted <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Hosting one or more <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> pages in a form.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Starting a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> window.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Hosting a master/detail form with a <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> master and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> details.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Hosting a master/detail form with a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> master and <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> details.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Hosting custom <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Hosting hybrid controls.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Ambient Properties</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Some of the ambient properties of <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls have <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> equivalents.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>These ambient properties are propagated to the hosted <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls and exposed as public properties on the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control translates each <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> ambient property to its <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> equivalent.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Forms and WPF Property Mapping<ept id="p1">](../../../../docs/framework/wpf/advanced/windows-forms-and-wpf-property-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Behavior</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following table describes interoperation behavior.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Behavior</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Supported</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Not supported</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Transparency</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control rendering supports transparency.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The background of the parent <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control can become the background of hosted <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>All varieties of multithreading are supported.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Both the <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> technologies assume a single-threaded concurrency model.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>During debugging, calls to framework objects from other threads will raise an exception to enforce this requirement.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Security</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>All interoperation scenarios require full trust.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>No interoperation scenarios are allowed in partial trust.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Accessibility</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>All accessibility scenarios are supported.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Assistive technology products function correctly when they are used for hybrid applications that contain both <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Clipboard</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>All Clipboard operations work as usual.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This includes cutting and pasting between <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Drag-and-drop feature</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>All drag-and-drop operations work as usual.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This includes operations between <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a Windows Forms Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-control-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a WPF Composite Control in Windows Forms<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-wpf-composite-control-in-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms and WPF Property Mapping<ept id="p1">](../../../../docs/framework/wpf/advanced/windows-forms-and-wpf-property-mapping.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>