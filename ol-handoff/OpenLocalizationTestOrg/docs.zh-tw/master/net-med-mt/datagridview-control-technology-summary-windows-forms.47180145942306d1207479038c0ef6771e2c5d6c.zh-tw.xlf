<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">870784850d00b7cde2d1bb8272af87f79cc4e45d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\datagridview-control-technology-summary-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0dd4fbce9e2b98d94d01d18ff43cd6f6054d433a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd1ecd0dcc3c77c666b6988ee79c3ae14cfc02a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DataGridView Control Technology Summary (Windows Forms) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DataGridView Control Technology Summary (Windows Forms)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic summarizes information about the <ph id="ph1">`DataGridView`</ph> control and the classes that support its use.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Displaying data in a tabular format is a task you are likely to perform frequently.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataGridView`</ph> control is designed to be a complete solution for presenting data in a grid.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DataGridView, BindingSource, table, cell, data binding, virtual mode</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Related Technologies</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Background</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>User interface (UI) designers frequently find it necessary to display tabular data to users.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> provides several ways to show data in a table or grid.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataGridView`</ph> control represents the latest evolution of this technology for Windows Forms applications.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataGridView`</ph> control can display rows of data from a data store.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Many types of data stores are supported.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data store can hold simple, untyped data, such as a one-dimensional array, or it can hold typed data, such as a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataGridView`</ph> control provides a powerful and flexible way to display data in a tabular format.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use the control to show read-only or editable views of small to very large sets of data.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can extend the <ph id="ph1">`DataGridView`</ph> control in several ways to build custom behavior into your applications.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, you can programmatically specify your own sorting algorithms, and you can create your own types of cells.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can easily customize the appearance of the <ph id="ph1">`DataGridView`</ph> control by choosing among several properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Many types of data stores can be used as a data source, or the <ph id="ph1">`DataGridView`</ph> control can operate without a data source bound to it.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Implementing DataGridView Classes</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There are several ways for you to take advantage of the <ph id="ph1">`DataGridView`</ph> control's extensibility features.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can customize many aspects of the control through events and properties, but some customizations require you to create new classes derived from existing <ph id="ph1">`DataGridView`</ph> classes.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The most typically used base classes are <ph id="ph1">`DataGridViewCell`</ph> and <ph id="ph2">`DataGridViewColumn`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can derive your own cell class from <ph id="ph1">`DataGridViewCell`</ph> or any of its child classes.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Although you can add any cell type to any column, you will typically also derive a companion column class from <ph id="ph1">`DataGridViewColumn`</ph> that hosts cells of your custom cell type by default.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can implement the <ph id="ph1">`IDataGridViewEditingCell`</ph> interface in your derived cell class to create a cell type that has editing functionality but does not host a control in editing mode.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To create a control that you can host in a cell in editing mode, you can implement the <ph id="ph1">`IDataGridViewEditingControl`</ph> interface in a class derived from <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance<ept id="p1">](../../../../docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)</ept> and <bpt id="p2">[</bpt>How to: Host Controls in Windows Forms DataGridView Cells<ept id="p2">](../../../../docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>DataGridView Classes at a Glance</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Technology Area</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Classes/interfaces/configuration elements</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Data Binding</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Data Presentation</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> and derived classes</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> and derived classes</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> and derived classes</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> Extensibility</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> and derived classes</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> and derived classes</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>What's New</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is designed to be a complete solution for displaying tabular data with Windows Forms.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You should consider using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control before other solutions, such as <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>, when you are authoring a new application.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id="p1">](../../../../docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control can work in close conjunction with the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This component is designed to be the primary data source of a form.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It can manage the interaction between a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and its data source, regardless of the data source type.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataGridView Control Overview<ept id="p1">](../../../../docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DataGridView Control Architecture<ept id="p1">](../../../../docs/framework/winforms/controls/datagridview-control-architecture-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Protecting Connection Information<ept id="p1">](../../../../docs/framework/data/adonet/protecting-connection-information.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>