<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c73b2ba6e2d6b001048970c12f7350ca23d1ad59</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\syndication-extensibility.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce6091a28a5a2407d7fc4a9acca2fe48ae1bf01e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">599d1dc099016783a1396d56052712758f48915e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Syndication Extensibility | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Syndication Extensibility</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Syndication API is designed to provide a format-neutral programming model that allows syndicated content to be written to the wire in a variety of formats.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The abstract data model consists of the following classes:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These classes map closely to the constructs defined in the Atom 1.0 specification, although some of the names are different.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A key feature of syndication protocols is extensibility.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Both Atom 1.0 and RSS 2.0, add attributes and elements to syndication feeds that are not defined in the specifications.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> syndication programming model provides the following ways of working with custom attributes and extensions, loosely-typed access and deriving a new class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Loosely Typed Access</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Adding extensions by deriving a new class requires writing additional code.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Another option is accessing extensions in a loosely-typed way.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All of the types defined in the syndication abstract data model contain properties named <ph id="ph1">`AttributeExtensions`</ph> and <ph id="ph2">`ElementExtensions`</ph> (with one exception, <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationContent&gt;</ph> has an <ph id="ph4">`AttributeExtensions`</ph> property but no <ph id="ph5">`ElementExtensions`</ph> property).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These properties are collections of extensions not processed by the <ph id="ph1">`TryParseAttribute`</ph> and <ph id="ph2">`TryParseElement`</ph> methods respectively.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can access these unprocessed extensions by calling <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions%2A?displayProperty=fullName&gt;</ph> on the <ph id="ph2">`ElementExtensions`</ph> property of <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>, <ph id="ph6">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>, and <ph id="ph7">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This set of methods finds all extensions with the specified name and namespace, deserializes them individually into instances of <ph id="ph1">`TExtension`</ph> and returns them as a collection of <ph id="ph2">`TExtension`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Deriving a New Class</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can derive a new class from any of the existing abstract data model classes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Do this when implementing an application in which most of the feeds you are working with have a particular extension.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this topic, most of the feeds that the program works with contain a <ph id="ph1">`MyExtension`</ph> extension.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To provide an improved programming experience, do the following steps:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create a class to hold the extension data.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this case, create a class called MyExtension.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Derive a class called MyExtensionItem from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> to expose a property of type MyExtension for programmability purposes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem.TryParseElement%28System.Xml.XmlReader%2CSystem.String%29&gt;</ph> in the MyExtensionItem class to instantiate a new MyExtension instance when a MyExtension is read in.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions%28System.Xml.XmlWriter%2CSystem.String%29&gt;</ph> in the MyExtensionItem class to write the contents of the MyExtension property to an XML writer.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Derive a class called MyExtensionFeed from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreateItem&gt;</ph> in the MyExtensionFeed class to instantiate a MyExtensionItem instead of the default <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A series of methods are defined in <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> that can create <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>, and <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> objects (for example, <ph id="ph6">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreateLink&gt;</ph>, <ph id="ph7">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory&gt;</ph>, and <ph id="ph8">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>All of which can be overridden to create a custom derived class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Syndication Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-syndication-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Architecture of Syndication<ept id="p1">](../../../../docs/framework/wcf/feature-details/architecture-of-syndication.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>