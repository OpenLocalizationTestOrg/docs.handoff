<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="choosing-between-datetime.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7eeac6b37c5769e7d3d3ee29effc0cd709ea2174</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\datetime\choosing-between-datetime.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87eecdf6d02b67f41b2673f45112b16343b18de8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">385c88f0a4b154ee66e310e6a3c839e1c6b2b948</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Choosing between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Choosing between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET applications that use date and time information are very diverse and can use that information in several ways.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The more common uses of date and time information include one or more of the following:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To reflect a date only, so that time information is not important.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To reflect a time only, so that date information is not important.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To reflect an abstract date and time that is not tied to a specific time and place (for example, most stores in an international chain open on weekdays at 9:00 A.M.).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To retrieve date and time information from sources outside of .NET, typically where date and time information is stored in a simple data type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To uniquely and unambiguously identify a single point in time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Some applications require that a date and time be unambiguous only on the host system; others require that it be unambiguous across systems (that is, a date serialized on one system can be meaningfully deserialized and used on another system anywhere in the world).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To preserve multiple related times (such as the requestor's local time and the server's time of receipt for a Web request).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To perform date and time arithmetic, possibly with a result that uniquely and unambiguously identifies a single point in time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.NET includes the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>, <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>, <ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph>, and <ph id="ph4">&lt;xref:System.TimeZoneInfo&gt;</ph> types, all of which can be used to build applications that work with dates and times.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This topic does not discuss a fourth type, <ph id="ph1">&lt;xref:System.TimeZone&gt;</ph>, because its functionality is almost entirely incorporated in the <ph id="ph2">&lt;xref:System.TimeZoneInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Whenever possible, developers should use the <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.TimeZone&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The DateTime structure</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value defines a particular date and time.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It includes a <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property that provides limited information about the time zone to which that date and time belongs.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeKind&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property indicates whether the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value represents the local time (<ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>), Coordinated Universal Time (UTC) (<ph id="ph5">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>), or an unspecified time (<ph id="ph6">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure is suitable for applications that do the following:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Work with dates only.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Work with times only.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Work with abstract dates and times.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Work with dates and times for which time zone information is missing.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Work with UTC dates and times only.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Retrieve date and time information from sources outside of .NET, such as SQL databases.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Typically, these sources store date and time information in a simple format that is compatible with the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Perform date and time arithmetic, but are concerned with general results.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, in an addition operation that adds six months to a particular date and time, it is often not important whether the result is adjusted for daylight saving time.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Unless a particular <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents UTC, that date and time value is often ambiguous or limited in its portability.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents the local time, it is portable within that local time zone (that is, if the value is deserialized on another system in the same time zone, that value still unambiguously identifies a single point in time).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Outside the local time zone, that <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value can have multiple interpretations.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the value's <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, it is even less portable: it is now ambiguous within the same time zone and possibly even on the same system on which it was first serialized.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Only if a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents UTC does that value unambiguously identify a single point in time regardless of the system or time zone in which the value is used.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When saving or sharing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> data, UTC should be used and the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value's <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property should be set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The DateTimeOffset structure</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure represents a date and time value, together with an offset that indicates how much that value differs from UTC.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Thus, the value always unambiguously identifies a single point in time.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> type includes all of the functionality of the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> type along with time zone awareness.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This makes it is suitable for applications that do the following:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Uniquely and unambiguously identify a single point in time.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> type can be used to unambiguously define the meaning of "now", to log transaction times, to log the times of system or application events, and to record file creation and modification times.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Perform general date and time arithmetic.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Preserve multiple related times, as long as those times are stored as two separate values or as two members of a structure.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>These uses for <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> values are much more common than those for <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>As a result, <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> should be considered the default date and time type for application development.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value is not tied to a particular time zone, but can originate from any of a variety of time zones.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To illustrate this, the following example lists the time zones to which a number of <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> values (including a local Pacific Standard Time) can belong.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual/cs/Conceptual1.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.DateTimeOffset.Conceptual#1<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Conceptual/vb/Conceptual1.vb#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The output shows that each date and time value in this example can belong to at least three different time zones.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value of 6/10/2007 shows that if a date and time value represents a daylight saving time, its offset from UTC does not even necessarily correspond to the originating time zone's base UTC offset or to the offset from UTC found in its display name.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This means that, because a single <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value is not tightly coupled with its time zone, it cannot reflect a time zone's transition to and from daylight saving time.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This can be particularly problematic when date and time arithmetic is used to manipulate a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>(For a discussion of how to perform date and time arithmetic in a way that takes account of a time zone's adjustment rules, see <bpt id="p1">[</bpt>Performing arithmetic operations with dates and times<ept id="p1">](../../../docs/standard/datetime/performing-arithmetic-operations.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The TimeSpan structure</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> structure represents a time interval.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Its two typical uses are:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Reflecting the time interval between two date and time values.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, subtracting one <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value from another returns a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Measuring elapsed time.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A?displayProperty=fullName&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value that reflects the time interval that has elapsed since the call to one of the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> methods that begins to measure elapsed time.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value can also be used as a replacement for a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value when that value reflects a time without reference to a particular time of day.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This usage is similar to the <ph id="ph1">&lt;xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTimeOffset.TimeOfDay%2A?displayProperty=fullName&gt;</ph> properties, which return a <ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph> value that represents the time without reference to a date.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> structure can be used to reflect a store's daily opening or closing time, or it can be used to represent the time at which any regular event occurs.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example defines a <ph id="ph1">`StoreInfo`</ph> structure that includes <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> objects for store opening and closing times, as well as a <ph id="ph3">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents the store's time zone.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The structure also includes two methods, <ph id="ph1">`IsOpenNow`</ph> and <ph id="ph2">`IsOpenAt`</ph>, that indicates whether the store is open at a time specified by the user, who is assumed to be in the local time zone.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.ChoosingDates#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.choosingdates/cs/datetimereplacement1.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Conceptual.ChoosingDates#1<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.choosingdates/vb/datetimereplacement1.vb#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StoreInfo`</ph> structure can then be used by client code like the following.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.ChoosingDates#2<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.choosingdates/cs/datetimereplacement1.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Conceptual.ChoosingDates#2<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.choosingdates/vb/datetimereplacement1.vb#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The TimeZoneInfo class</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> class represents any of the Earth's time zones, and enables the conversion of any date and time in one time zone to its equivalent in another time zone.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> class makes it possible to work with dates and times so that any date and time value unambiguously identifies a single point in time.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> class is also extensible.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Although it depends on time zone information provided for Windows systems and defined in the registry, it supports the creation of custom time zones.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It also supports the serialization and deserialization of time zone information.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In some cases, taking full advantage of the <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> class may require further development work.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If date and time values are not tightly coupled with the time zones to which they belong, further work is required.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Unless your application provides some mechanism for linking a date and time with its associated time zone, it's easy for a particular date and time value to become disassociated from its time zone.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>One method of linking this information is to define a class or structure that contains both the date and time value and its associated time zone object.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Taking advantage of time zone support in .NET is possible only if the time zone to which a date and time value belongs is known when that date and time object is instantiated.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This is often not the case, particularly in Web or network applications.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dates, times, and time zones<ept id="p1">](../../../docs/standard/datetime/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>