<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b5a68843aae6a949c4f8a7dc786819b6680d63d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">251f70f7a96d5a7fadbb7ab7757a4a7f9d7d127d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62ad9aad34ddd4b221d3f351e55ffafd3ac5a26f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Expressions2 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Expressions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to use basic expressions in a workflow.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It consists of a workflow that calculates basic salary statistics for two employees of a fictitious company.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Two classes, <ph id="ph1">`Employee`</ph> and <ph id="ph2">`SalaryStats`</ph>, are defined in Employee.cs and SalaryStats.cs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These classes are used in a workflow that shows how to perform simple arithmetic and string operations on properties of variables of complex types.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The salary calculation workflow is defined both in XAML and in C# to demonstrate the two authoring styles.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The XAML version is contained in SalaryCalculation.xaml and can be viewed and edited in the workflow designer.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The C# version resides in Program.cs.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The expressions used in XAML conform to Visual Basic syntax, and use <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> expression activities to execute.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> Visual Basic expressions see, <bpt id="p1">[</bpt>Visual Basic Expressions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=165912)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the other hand, expressions in C# are written as lambda expressions and use <ph id="ph1">&lt;xref:System.Activities.Expressions.LambdaValue%601&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> expression activities.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Writing expressions as lambda expressions allows the C# compiler to provide syntax highlighting and static verification.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> lambda expressions in C#, see <bpt id="p1">[</bpt>Lambda Expressions (C# Programming Guide)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=182082)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If a workflow is authored in code using Visual Basic, then Visual Basic lambda expressions are used.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> lambda expressions in Visual Basic, see <bpt id="p1">[</bpt>Lambda Expressions (Visual Basic)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152437)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> about authoring workflows using code, see <bpt id="p1">[</bpt>Authoring Workflows, Activities, and Expressions Using Imperative Code<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/authoring-workflows-activities-and-expressions-using-imperative-code.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To run the sample</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Open the Expressions.sln solution in <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Press CTRL+SHIFT+B to build the solution or select <bpt id="p1">**</bpt>Build Solution<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To open SalaryCalculation.xaml in the Visual Studio designer, you must first compile your project to ensure that <ph id="ph1">`Employee`</ph> and <ph id="ph2">`SalaryStats`</ph> classes are available to the designer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once the build has succeeded, press F5 or select <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Alternatively you can press Ctrl+F5 or select <bpt id="p1">**</bpt>Start Without Debugging<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu to run without debugging.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your computer.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>