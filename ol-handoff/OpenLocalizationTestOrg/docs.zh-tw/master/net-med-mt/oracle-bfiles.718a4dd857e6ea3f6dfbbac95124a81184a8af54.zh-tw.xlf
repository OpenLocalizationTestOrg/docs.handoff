<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b81362e65014366f69e36e22879c65f5929ba2f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\oracle-bfiles.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ee58a793f2419a734463474919764ac2cad14f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ed548f2f66f6595fd084069578a4279318821e1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Oracle BFILEs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Oracle BFILEs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle includes the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> class, which is used to work with the Oracle <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Oracle <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> data type is an Oracle <bpt id="p2">**</bpt>LOB<ept id="p2">**</ept> data type that contains a reference to binary data with a maximum size of 4 gigabytes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An Oracle <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> differs from other Oracle <bpt id="p2">**</bpt>LOB<ept id="p2">**</ept> data types in that its data is stored in a physical file in the operating system instead of on the server.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> data type provides read-only access to data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Other characteristics of a <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> data type that distinguish it from a <bpt id="p2">**</bpt>LOB<ept id="p2">**</ept> data type are that it:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Contains unstructured data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Supports server-side chunking.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Uses reference copy semantics.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, if you perform a copy operation on a <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept>, only the <bpt id="p2">**</bpt>BFILE<ept id="p2">**</ept> locator (which is a reference to the file) is copied.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The data in the file is not copied.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> data type should be used for referencing LOBs that are large in size, and therefore, not practical to store in the database.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>More client, server, and communication overhead is involved when using a <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> data type compared with the <bpt id="p2">**</bpt>LOB<ept id="p2">**</ept> data type.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is more efficient to access a <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> if you only need to obtain a small amount of data.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It is more efficient to access database-resident LOBs if you need to obtain the entire object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each non-NULL <bpt id="p1">**</bpt>OracleBFile<ept id="p1">**</ept> object is associated with two entities that define the location of the underlying physical file:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how you can create a <bpt id="p1">**</bpt>BFILE<ept id="p1">**</ept> in an Oracle table and then retrieve it in the form of an <bpt id="p2">**</bpt>OracleBFile<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> object and the <bpt id="p1">**</bpt>OracleBFile<ept id="p1">**</ept> <bpt id="p2">**</bpt>Seek<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Read<ept id="p3">**</ept> methods.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that in order to use this sample, you must first create a directory named "c:<ph id="ph1">\\</ph>\bfiles" and file named "MyFile.jpg" on the Oracle server.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](../../../../docs/framework/data/adonet/oracle-and-adonet.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>