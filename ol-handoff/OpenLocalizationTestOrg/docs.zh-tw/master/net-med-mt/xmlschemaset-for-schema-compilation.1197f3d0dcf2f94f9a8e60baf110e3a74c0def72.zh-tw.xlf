<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">740d800469484ad4d99fd2aac91ce9fb19d772e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\xmlschemaset-for-schema-compilation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81cafb5a4ee03d8c41387cc9ab0bf65f3bd31ea9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9acacbab70a0f9537da770dff2c171b51d6fbe47</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XmlSchemaSet for Schema Compilation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XmlSchemaSet for Schema Compilation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, a cache where XML Schema definition language (XSD) schemas can be stored and validated.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The XmlSchemaSet Class</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is a cache where XML Schema definition language (XSD) schemas can be stored and validated.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">&lt;xref:System.Xml?displayProperty=fullName&gt;</ph> version 1.0, XML schemas were loaded into an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class as a library of schemas.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">&lt;xref:System.Xml?displayProperty=fullName&gt;</ph> version 2.0, the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> and the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> classes are obsolete, and have been replaced by the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> methods, and the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class respectively.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been introduced to fix a number of issues including standards compatibility, performance, and the obsolete Microsoft XML-Data Reduced (XDR) schema format.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following is a comparison between the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>XmlSchemaCollection</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XmlSchemaSet</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Supports Microsoft XDR and W3C XML schemas.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only supports W3C XML schemas.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Schemas are compiled when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Schemas are not compiled when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This provides a performance improvement during creation of the schema library.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each schema generates an individual compiled version that can result in "schema islands."</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As a result, all includes and imports are scoped only within that schema.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Compiled schemas generate a single logical schema, a "set" of schemas.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Any imported schemas within a schema that are added to the set are directly added to the set themselves.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that all types are available to all schemas.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Only one schema for a particular target namespace can exist in the collection.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Multiple schemas for the same target namespace can be added as long as there are no type conflicts.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Migrating to the XmlSchemaSet</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code example provides a guide to migrating to the new <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class from the obsolete <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The code example illustrates the following major differences between the two classes.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class, schemas are not compiled when calling the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is explicitly called in the example code.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To iterate over an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, you must use the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following is the obsolete <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> code example.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following is the equivalent <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> code example.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adding and Retrieving Schemas</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Schemas are added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When a schema is added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it is associated with a target namespace URI.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The target namespace URI can either be specified as a parameter to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method or if no target namespace is specified, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> uses the target namespace defined in the schema.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Schemas are retrieved from an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> allows you to iterate over the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects contained in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property either returns all the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects contained in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, or, given a target namespace parameter, returns all the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects that belong to the target namespace.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph> is specified as the target namespace parameter, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property returns all schemas without a namespace.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following example adds the <ph id="ph1">`books.xsd`</ph> schema in the <ph id="ph2">`http://www.contoso.com/books`</ph> namespace to an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, retrieves all schemas that belong to the <ph id="ph4">`http://www.contoso.com/books`</ph> namespace from the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, and then writes those schemas to the <ph id="ph6">&lt;xref:System.Console&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information about adding and retrieving schemas from an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property reference documentation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Compiling Schemas</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Schemas in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are compiled into one logical schema by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Unlike the obsolete <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class, schemas are not compiled when the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method executes successfully, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is not affected if schemas are edited while in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Updates of the individual schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not tracked.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property can be <ph id="ph2">`true`</ph> even though one of the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been altered, as long as no schemas were added or removed from the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following example adds the <ph id="ph1">`books.xsd`</ph> file to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and then calls the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information about compiling schemas in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method reference documentation.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Reprocessing Schemas</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Reprocessing a schema in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> performs all the preprocessing steps performed on a schema when the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If the call to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method is successful, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method should be used when a schema in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified after the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has performed compilation.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example illustrates reprocessing a schema added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is compiled using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method, and the schema added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is modified, the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph> even though a schema in the <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method performs all the preprocessing performed by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method, and sets the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information about reprocessing a schema in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method reference documentation.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Checking for a Schema</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to check if a schema is contained within an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method takes either a target namespace or an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object to check for.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In either case, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if the schema is contained within the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>; otherwise, it returns <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information about checking for a schema, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method reference documentation.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Removing Schemas</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Schemas are removed from an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> methods of the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method removes the specified schema from the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, while the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method removes the specified schema and all the schemas it imports from the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method to remove one of the schemas and all the schemas it imports.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information about removing schemas from an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> methods reference documentation.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Schema Resolution and xs:import</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following examples describe the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> behavior for importing schemas when multiple schemas for a given namespace exist in an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, consider an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> that contains multiple schemas for the <ph id="ph2">`http://www.contoso.com`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A schema with the following <ph id="ph1">`xs:import`</ph> directive is added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> attempts to import a schema for the <ph id="ph2">`http://www.contoso.com`</ph> namespace by loading it from the <ph id="ph3">`http://www.contoso.com/schema.xsd`</ph> URL.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Only the schema declaration and types declared in the schema document are available in the importing schema, even though there are other schema documents for the <ph id="ph1">`http://www.contoso.com`</ph> namespace in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`schema.xsd`</ph> file cannot be located at the <ph id="ph2">`http://www.contoso.com/schema.xsd`</ph> URL, no schema for the <ph id="ph3">`http://www.contoso.com`</ph> namespace is imported into the importing schema.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Validating XML Documents</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>XML documents can be validated against schemas in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You validate an XML document by adding a schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph><ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object, or by adding an <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to the <ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> property of an <ph id="ph6">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object is then used by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> class to create an <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> object and validate the XML document.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information about validating XML documents using an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, see <bpt id="p1">[</bpt>XML Schema (XSD) Validation with XmlSchemaSet<ept id="p1">](../../../../docs/standard/data/xml/xml-schema-xsd-validation-with-xmlschemaset.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XmlSchemaSet as a Schema Cache<ept id="p1">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Schema (XSD) Validation with XmlSchemaSet<ept id="p1">](../../../../docs/standard/data/xml/xml-schema-xsd-validation-with-xmlschemaset.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>