<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="creating-a-wf-control-design-time-features.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65894d238842a160ac18288e3bb9cb30ad6221b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\creating-a-wf-control-design-time-features.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e09ef9f6b3a9207b35af7d62802d83b0d65fd1b0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">509eff7f4771377b4c6863580498b830b21c1e69</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Creating a Windows Forms Control That Takes Advantage of Visual Studio Design-Time Features | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating a Windows Forms Control That Takes Advantage of Visual Studio Design-Time Features</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The design-time experience for a custom control can be enhanced by authoring an associated custom designer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This walkthrough illustrates how to create a custom designer for a custom control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You will implement a <ph id="ph1">`MarqueeControl`</ph> type and an associated designer class, called <ph id="ph2">`MarqueeControlRootDesigner`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeControl`</ph> type implements a display similar to a theater marquee, with animated lights and flashing text.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The designer for this control interacts with the design environment to provide a custom design-time experience.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With the custom designer, you can assemble a custom <ph id="ph1">`MarqueeControl`</ph> implementation with animated lights and flashing text in many combinations.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use the assembled control on a form like any other Windows Forms control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Tasks illustrated in this walkthrough include:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creating a Control Library Project</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Referencing the Custom Control Project</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Defining a Custom Control and Its Custom Designer</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creating an Instance of Your Custom Control</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Setting Up the Project for Design-Time Debugging</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Implementing Your Custom Control</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creating a Child Control for Your Custom Control</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Create the MarqueeBorder Child Control</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creating a Custom Designer to Shadow and Filter Properties</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Handling Component Changes</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adding Designer Verbs to your Custom Designer</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creating a Custom UITypeEditor</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Testing your Custom Control in the Designer</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When you are finished, your custom control will look something like the following:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A possible MarqueeControl arrangement<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/controls/media/demomarqueecontrol.gif "</bpt>DemoMarqueeControl<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For the complete code listing, see <bpt id="p1">[</bpt>How to: Create a Windows Forms Control That Takes Advantage of Design-Time Features<ept id="p1">](http://msdn.microsoft.com/library/8e0bad0e-56f3-43d2-bf63-a945c654d97c)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To change your settings, choose <bpt id="p1">**</bpt>Import and Export Settings<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Tools<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Customizing Development Settings in Visual Studio<ept id="p1">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In order to complete this walkthrough, you will need:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sufficient permissions to be able to create and run Windows Forms application projects on the computer where Visual Studio is installed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first step is to create the application project.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You will use this project to build the application that hosts the custom control.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To create the project</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create a Windows Forms Application project called "MarqueeControlTest."</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a Windows Application Project<ept id="p1">](http://msdn.microsoft.com/en-us/b2f93fed-c635-4705-8d0e-cf079a264efa)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creating a Control Library Project</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The next step is to create the control library project.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You will create a new custom control and its corresponding custom designer.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To create the control library project</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add a Windows Forms Control Library project to the solution.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Name the project "MarqueeControlLibrary."</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, delete the project's default control by deleting the source file named "UserControl1.cs" or "UserControl1.vb", depending on your language of choice.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NIB:How to: Remove, Delete, and Exclude Items<ept id="p1">](http://msdn.microsoft.com/en-us/6dffdc86-29c8-4eff-bcd8-e3a0dd9e9a73)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Add a new <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> item to the <ph id="ph2">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of "MarqueeControl."</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, create a new folder in the <ph id="ph1">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NIB:How to: Add New Project Items<ept id="p1">](http://msdn.microsoft.com/en-us/63d3e16b-de6e-4bb5-a0e3-ecec762201ce)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Name the new folder "Design."</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> folder and add a new class.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Give the source file a base name of "MarqueeControlRootDesigner."</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You will need to use types from the System.Design assembly, so add this reference to the <ph id="ph1">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To use the System.Design assembly, your project must target the full version of the .NET Framework, not the .NET Framework Client Profile.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To change the target framework, see <bpt id="p1">[</bpt>How to: Target a Version of the .NET Framework<ept id="p1">](http://msdn.microsoft.com/library/dea62d25-3d1b-492e-a6cc-b5154489800a)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Referencing the Custom Control Project</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You will use the <ph id="ph1">`MarqueeControlTest`</ph> project to test the custom control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The test project will become aware of the custom control when you add a project reference to the <ph id="ph1">`MarqueeControlLibrary`</ph> assembly.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To reference the custom control project</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`MarqueeControlTest`</ph> project, add a project reference to the <ph id="ph2">`MarqueeControlLibrary`</ph> assembly.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Be sure to use the <bpt id="p1">**</bpt>Projects<ept id="p1">**</ept> tab in the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box instead of referencing the <ph id="ph1">`MarqueeControlLibrary`</ph> assembly directly.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Defining a Custom Control and Its Custom Designer</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Your custom control will derive from the <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This allows your control to contain other controls, and it gives your control a great deal of default functionality.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Your custom control will have an associated custom designer.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This allows you to create a unique design experience tailored specifically for your custom control.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You associate the control with its designer by using the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Because you are developing the entire design-time behavior of your custom control, the custom designer will implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To define a custom control and its custom designer</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeControl`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the following namespaces:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#220<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrol.cs#220)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#220<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrol.vb#220)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> to the <ph id="ph2">`MarqueeControl`</ph> class declaration.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This associates the custom control with its designer.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#240<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrol.cs#240)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#240<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrol.vb#240)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeControlRootDesigner`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the following namespaces:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#520<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#520)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#520<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#520)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Change the declaration of <ph id="ph1">`MarqueeControlRootDesigner`</ph> to inherit from the <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DocumentDesigner&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Apply the <ph id="ph1">&lt;xref:System.ComponentModel.ToolboxItemFilterAttribute&gt;</ph> to specify the designer interaction with the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The definition for the <ph id="ph1">`MarqueeControlRootDesigner`</ph> class has been enclosed in a namespace called "MarqueeControlLibrary.Design."</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This declaration places the designer in a special namespace reserved for design-related types.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#530<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#530)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#530<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#530)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Define the constructor for the <ph id="ph1">`MarqueeControlRootDesigner`</ph> class.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Insert a <ph id="ph1">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> statement in the constructor body.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This will be useful for debugging purposes.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#540<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#540)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#540<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#540)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Creating an Instance of Your Custom Control</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To observe the custom design-time behavior of your control, you will place an instance of your control on the form in <ph id="ph1">`MarqueeControlTest`</ph> project.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To create an instance of your custom control</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Add a new <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> item to the <ph id="ph2">`MarqueeControlTest`</ph> project.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of "DemoMarqueeControl."</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`DemoMarqueeControl`</ph> file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the <ph id="ph1">`MarqueeControlLibrary`</ph> namespace:</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Change the declaration of <ph id="ph1">`DemoMarqueeControl`</ph> to inherit from the <ph id="ph2">`MarqueeControl`</ph> class.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Build the project.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`Form1`</ph> in the Windows Forms Designer.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">**</bpt>MarqueeControlTest Components<ept id="p1">**</ept> tab in the <bpt id="p2">**</bpt>Toolbox<ept id="p2">**</ept> and open it.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Drag a <ph id="ph1">`DemoMarqueeControl`</ph> from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> onto your form.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Build the project.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Setting Up the Project for Design-Time Debugging</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When you are developing a custom design-time experience, it will be necessary to debug your controls and components.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>There is a simple way to set up your project to allow debugging at design time.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Debugging Custom Windows Forms Controls at Design Time<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-debugging-custom-windows-forms-controls-at-design-time.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To set up the project for design-time debugging</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Right-click the <ph id="ph1">`MarqueeControlLibrary`</ph> project and select <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In the "MarqueeControlLibrary Property Pages" dialog box, select the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> page.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Start Action<ept id="p1">**</ept> section, select <bpt id="p2">**</bpt>Start External Program<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You will be debugging a separate instance of Visual Studio, so click the ellipsis (<bpt id="p1">![</bpt>VisualStudioEllipsesButton screenshot<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/media/vbellipsesbutton.png "</bpt>vbEllipsesButton<ept id="p2">")</ept>) button to browse for the Visual Studio IDE.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The name of the executable file is devenv.exe, and if you installed to the default location, its path is %programfiles%\Microsoft Visual Studio 9.0\Common7\IDE\devenv.exe.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Click OK to close the dialog box.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Right-click the <ph id="ph1">`MarqueeControlLibrary`</ph> project and select "Set as StartUp Project" to enable this debugging configuration.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Checkpoint</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You are now ready to debug the design-time behavior of your custom control.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Once you have determined that the debugging environment is set up correctly, you will test the association between the custom control and the custom designer.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To test the debugging environment and the designer association</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeControlRootDesigner`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> and place a breakpoint on the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> statement.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Press F5 to start the debugging session.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Note that a new instance of Visual Studio is created.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>In the new instance of Visual Studio, open the "MarqueeControlTest" solution.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>You can easily find the solution by selecting <bpt id="p1">**</bpt>Recent Projects<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The "MarqueeControlTest.sln" solution file will be listed as the most recently used file.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`DemoMarqueeControl`</ph> in the designer.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Note that the debugging instance of Visual Studio acquires focus and execution stops at your breakpoint.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Press F5 to continue the debugging session.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>At this point, everything is in place for you to develop and debug your custom control and its associated custom designer.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The remainder of this walkthrough will concentrate on the details of implementing features of the control and the designer.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Implementing Your Custom Control</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeControl`</ph> is a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with a little bit of customization.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>It exposes two methods: <ph id="ph1">`Start`</ph>, which starts the marquee animation, and <ph id="ph2">`Stop`</ph>, which stops the animation.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`MarqueeControl`</ph> contains child controls that implement the <ph id="ph2">`IMarqueeWidget`</ph> interface, <ph id="ph3">`Start`</ph> and <ph id="ph4">`Stop`</ph> enumerate each child control and call the <ph id="ph5">`StartMarquee`</ph> and <ph id="ph6">`StopMarquee`</ph> methods, respectively, on each child control that implements <ph id="ph7">`IMarqueeWidget`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The appearance of the <ph id="ph1">`MarqueeBorder`</ph> and <ph id="ph2">`MarqueeText`</ph> controls is dependent on the layout, so <ph id="ph3">`MarqueeControl`</ph> overrides the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> method and calls <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> on child controls of this type.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This is the extent of the <ph id="ph1">`MarqueeControl`</ph> customizations.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The run-time features are implemented by the <ph id="ph1">`MarqueeBorder`</ph> and <ph id="ph2">`MarqueeText`</ph> controls, and the design-time features are implemented by the <ph id="ph3">`MarqueeBorderDesigner`</ph> and <ph id="ph4">`MarqueeControlRootDesigner`</ph> classes.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To implement your custom control</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeControl`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#260<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrol.cs#260)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#260<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrol.vb#260)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#270<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrol.cs#270)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#270<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrol.vb#270)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Creating a Child Control for Your Custom Control</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeControl`</ph> will host two kinds of child control: the <ph id="ph2">`MarqueeBorder`</ph> control and the <ph id="ph3">`MarqueeText`</ph> control.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MarqueeBorder`</ph>: This control paints a border of "lights" around its edges.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The lights flash in sequence, so they appear to be moving around the border.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The speed at which the lights flash is controlled by a property called <ph id="ph1">`UpdatePeriod`</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Several other custom properties determine other aspects of the control's appearance.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Two methods, called <ph id="ph1">`StartMarquee`</ph> and <ph id="ph2">`StopMarquee`</ph>, control when the animation starts and stops.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MarqueeText`</ph>: This control paints a flashing string.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Like the <ph id="ph1">`MarqueeBorder`</ph> control, the speed at which the text flashes is controlled by the <ph id="ph2">`UpdatePeriod`</ph> property.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeText`</ph> control also has the <ph id="ph2">`StartMarquee`</ph> and <ph id="ph3">`StopMarquee`</ph> methods in common with the <ph id="ph4">`MarqueeBorder`</ph> control.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>At design time, the <ph id="ph1">`MarqueeControlRootDesigner`</ph> allows these two control types to be added to a <ph id="ph2">`MarqueeControl`</ph> in any combination.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Common features of the two controls are factored into an interface called <ph id="ph1">`IMarqueeWidget`</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This allows the <ph id="ph1">`MarqueeControl`</ph> to discover any Marquee-related child controls and give them special treatment.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To implement the periodic animation feature, you will use <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> objects from the <ph id="ph2">&lt;xref:System.ComponentModel?displayProperty=fullName&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You could use <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> objects, but when many <ph id="ph2">`IMarqueeWidget`</ph> objects are present, the single UI thread may be unable to keep up with the animation.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To create a child control for your custom control</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Add a new class item to the <ph id="ph1">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of "IMarqueeWidget."</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`IMarqueeWidget`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> and change the declaration from <ph id="ph2">`class`</ph> to <ph id="ph3">`interface`</ph>:</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/imarqueewidget.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#2<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/imarqueewidget.vb#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`IMarqueeWidget`</ph> interface to expose two methods and a property that manipulate the marquee animation:</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/imarqueewidget.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#3<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/imarqueewidget.vb#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Add a new <bpt id="p1">**</bpt>Custom Control<ept id="p1">**</ept> item to the <ph id="ph1">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of "MarqueeText."</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Drag a <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> onto your <ph id="ph2">`MarqueeText`</ph> control.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This component will allow the <ph id="ph1">`MarqueeText`</ph> control to update itself asynchronously.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In the Properties window, set the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's <ph id="ph2">`WorkerReportsProgess`</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A&gt;</ph> properties to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>These settings allow the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component to periodically raise the <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event and to cancel asynchronous updates.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>BackgroundWorker Component<ept id="p1">](../../../../docs/framework/winforms/controls/backgroundworker-component.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeText`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the following namespaces:</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#120<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#120)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#120<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#120)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Change the declaration of <ph id="ph1">`MarqueeText`</ph> to inherit from <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> and to implement the <ph id="ph3">`IMarqueeWidget`</ph> interface:</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#130<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#130)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#130<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#130)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Declare the instance variables that correspond to the exposed properties, and initialize them in the constructor.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`isLit`</ph> field determines if the text is to be painted in the color given by the <ph id="ph2">`LightColor`</ph> property.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#140<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#140)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#140<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#140)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`IMarqueeWidget`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StartMarquee`</ph> and <ph id="ph2">`StopMarquee`</ph> methods invoke the <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's <ph id="ph4">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A&gt;</ph> methods to start and stop the animation.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.CategoryAttribute.Category%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.BrowsableAttribute.Browsable%2A&gt;</ph> attributes are applied to the <ph id="ph3">`UpdatePeriod`</ph> property so it appears in a custom section of the Properties window called "Marquee."</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#150<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#150)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#150<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#150)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Implement the property accessors.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>You will expose two properties to clients: <ph id="ph1">`LightColor`</ph> and <ph id="ph2">`DarkColor`</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.CategoryAttribute.Category%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.BrowsableAttribute.Browsable%2A&gt;</ph> attributes are applied to these properties, so the properties appear in a custom section of the Properties window called "Marquee."</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#160<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#160)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#160<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#160)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Implement the handlers for the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event handler sleeps for the number of milliseconds specified by <ph id="ph2">`UpdatePeriod`</ph> then raises the <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event, until your code stops the animation by calling <ph id="ph4">&lt;xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event handler toggles the text between its light and dark state to give the appearance of flashing.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#180<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#180)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#180<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#180)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method to enable the animation.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#170<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueetext.cs#170)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#170<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueetext.vb#170)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Press F6 to build the solution.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Create the MarqueeBorder Child Control</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeBorder`</ph> control is slightly more sophisticated than the <ph id="ph2">`MarqueeText`</ph> control.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>It has more properties and the animation in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is more involved.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>In principle, it is quite similar to the <ph id="ph1">`MarqueeText`</ph> control.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`MarqueeBorder`</ph> control can have child controls, it needs to be aware of <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To create the MarqueeBorder control</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Add a new <bpt id="p1">**</bpt>Custom Control<ept id="p1">**</ept> item to the <ph id="ph1">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of "MarqueeBorder."</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Drag a <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> onto your <ph id="ph2">`MarqueeBorder`</ph> control.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>This component will allow the <ph id="ph1">`MarqueeBorder`</ph> control to update itself asynchronously.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>In the Properties window, set the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's <ph id="ph2">`WorkerReportsProgess`</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A&gt;</ph> properties to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>These settings allow the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component to periodically raise the <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event and to cancel asynchronous updates.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>BackgroundWorker Component<ept id="p1">](../../../../docs/framework/winforms/controls/backgroundworker-component.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>In the Properties window, click the Events button.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Attach handlers for the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeBorder`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the following namespaces:</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#20<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#20)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#20<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#20)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Change the declaration of <ph id="ph1">`MarqueeBorder`</ph> to inherit from <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> and to implement the <ph id="ph3">`IMarqueeWidget`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#30<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#30)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#30<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#30)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Declare two enumerations for managing the <ph id="ph1">`MarqueeBorder`</ph> control's state: <ph id="ph2">`MarqueeSpinDirection`</ph>, which determines the direction in which the lights "spin" around the border, and <ph id="ph3">`MarqueeLightShape`</ph>, which determines the shape of the lights (square or circular).</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Place these declarations before the <ph id="ph1">`MarqueeBorder`</ph> class declaration.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#97<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#97)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#97<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#97)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Declare the instance variables that correspond to the exposed properties, and initialize them in the constructor.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#40<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#40)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#40<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#40)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`IMarqueeWidget`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StartMarquee`</ph> and <ph id="ph2">`StopMarquee`</ph> methods invoke the <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's <ph id="ph4">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A&gt;</ph> methods to start and stop the animation.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`MarqueeBorder`</ph> control can contain child controls, the <ph id="ph2">`StartMarquee`</ph> method enumerates all child controls and calls <ph id="ph3">`StartMarquee`</ph> on those that implement <ph id="ph4">`IMarqueeWidget`</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StopMarquee`</ph> method has a similar implementation.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#50<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#50)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#50<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#50)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Implement the property accessors.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeBorder`</ph> control has several properties for controlling its appearance.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#60<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#60)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#60<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#60)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Implement the handlers for the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event handler sleeps for the number of milliseconds specified by <ph id="ph2">`UpdatePeriod`</ph> then raises the <ph id="ph3">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event, until your code stops the animation by calling <ph id="ph4">&lt;xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event handler increments the position of the "base" light, from which the light/dark state of the other lights is determined, and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method to cause the control to repaint itself.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#90<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#90)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#90<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#90)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Implement the helper methods, <ph id="ph1">`IsLit`</ph> and <ph id="ph2">`DrawLight`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IsLit`</ph> method determines the color of a light at a given position.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Lights that are "lit" are drawn in the color given by the <ph id="ph1">`LightColor`</ph> property, and those that are "dark" are drawn in the color given by the <ph id="ph2">`DarkColor`</ph> property.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DrawLight`</ph> method draws a light using the appropriate color, shape, and position.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#80<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#80)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#80<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#80)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method draws the lights along the edges of the <ph id="ph2">`MarqueeBorder`</ph> control.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method depends on the dimensions of the <ph id="ph2">`MarqueeBorder`</ph> control, you need to call it whenever the layout changes.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To achieve this, override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> and call <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#70<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#70)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#70<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#70)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Creating a Custom Designer to Shadow and Filter Properties</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeControlRootDesigner`</ph> class provides the implementation for the root designer.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>In addition to this designer, which operates on the <ph id="ph1">`MarqueeControl`</ph>, you will need a custom designer that is specifically associated with the <ph id="ph2">`MarqueeBorder`</ph> control.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This designer provides custom behavior that is appropriate in the context of the custom root designer.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Specifically, the <ph id="ph1">`MarqueeBorderDesigner`</ph> will "shadow" and filter certain properties on the <ph id="ph2">`MarqueeBorder`</ph> control, changing their interaction with the design environment.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Intercepting calls to a component's property accessor is known as "shadowing."</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>It allows a designer to track the value set by the user and optionally pass that value to the component being designed.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>For this example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> properties will be shadowed by the <ph id="ph3">`MarqueeBorderDesigner`</ph>, which prevents the user from making the <ph id="ph4">`MarqueeBorder`</ph> control invisible or disabled during design time.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Designers can also add and remove properties.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>For this example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> property will be removed at design time, because the <ph id="ph2">`MarqueeBorder`</ph> control programmatically sets the padding based on the size of the lights specified by the <ph id="ph3">`LightSize`</ph> property.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The base class for <ph id="ph1">`MarqueeBorderDesigner`</ph> is <ph id="ph2">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph>, which has methods that can change the attributes, properties, and events exposed by a control at design time:</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>When changing the public interface of a component using these methods, you must follow these rules:</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Add or remove items in the <ph id="ph1">`PreFilter`</ph> methods only</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Modify existing items in the <ph id="ph1">`PostFilter`</ph> methods only</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Always call the base implementation first in the <ph id="ph1">`PreFilter`</ph> methods</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Always call the base implementation last in the <ph id="ph1">`PostFilter`</ph> methods</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Adhering to these rules ensures that all designers in the design-time environment have a consistent view of all components being designed.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> class provides a dictionary for managing the values of shadowed properties, which relieves you of the need to create specific instance variables.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>To create a custom designer to shadow and filter properties</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> folder and add a new class.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Give the source file a base name of "MarqueeBorderDesigner."</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeBorderDesigner`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the following namespaces:</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#420<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborderdesigner.cs#420)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#420<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborderdesigner.vb#420)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Change the declaration of <ph id="ph1">`MarqueeBorderDesigner`</ph> to inherit from <ph id="ph2">&lt;xref:System.Windows.Forms.Design.ParentControlDesigner&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`MarqueeBorder`</ph> control can contain child controls, <ph id="ph2">`MarqueeBorderDesigner`</ph> inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Design.ParentControlDesigner&gt;</ph>, which handles the parent-child interaction.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#430<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborderdesigner.cs#430)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#430<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborderdesigner.vb#430)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Override the base implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#450<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborderdesigner.cs#450)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#450<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborderdesigner.vb#450)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>These implementations shadow the control's properties.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#440<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborderdesigner.cs#440)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#440<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborderdesigner.vb#440)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Handling Component Changes</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeControlRootDesigner`</ph> class provides the custom design-time experience for your <ph id="ph2">`MarqueeControl`</ph> instances.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Most of the design-time functionality is inherited from the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DocumentDesigner&gt;</ph> class; your code will implement two specific customizations: handling component changes, and adding designer verbs.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>As users design their <ph id="ph1">`MarqueeControl`</ph> instances, your root designer will track changes to the <ph id="ph2">`MarqueeControl`</ph> and its child controls.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The design-time environment offers a convenient service, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>, for tracking changes to component state.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>You acquire a reference to this service by querying the environment with the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>If the query is successful, your designer can attach a handler for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event and perform whatever tasks are required to maintain a consistent state at design time.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>In the case of the <ph id="ph1">`MarqueeControlRootDesigner`</ph> class, you will call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method on each <ph id="ph3">`IMarqueeWidget`</ph> object contained by the <ph id="ph4">`MarqueeControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>This will cause the <ph id="ph1">`IMarqueeWidget`</ph> object to repaint itself appropriately when properties like its parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> are changed.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>To handle component changes</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeControlRootDesigner`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> and override the <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DocumentDesigner.Initialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Call the base implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DocumentDesigner.Initialize%2A&gt;</ph> and query for the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#580<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#580)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#580<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#580)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Test the sending component's type, and if it is an <ph id="ph1">`IMarqueeWidget`</ph>, call its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#560<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#560)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#560<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#560)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Adding Designer Verbs to your Custom Designer</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>A designer verb is a menu command linked to an event handler.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Designer verbs are added to a component's shortcut menu at design time.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerVerb&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>You will add two designer verbs to your designers: <bpt id="p1">**</bpt>Run Test<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Stop Test<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>These verbs will allow you to view the run-time behavior of the <ph id="ph1">`MarqueeControl`</ph> at design time.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>These verbs will be added to the <ph id="ph1">`MarqueeControlRootDesigner`</ph>.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Run Test<ept id="p1">**</ept> is invoked, the verb event handler will call the <ph id="ph1">`StartMarquee`</ph> method on the <ph id="ph2">`MarqueeControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Stop Test<ept id="p1">**</ept> is invoked, the verb event handler will call the <ph id="ph1">`StopMarquee`</ph> method on the <ph id="ph2">`MarqueeControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">`StartMarquee`</ph> and <ph id="ph2">`StopMarquee`</ph> methods call these methods on contained controls that implement <ph id="ph3">`IMarqueeWidget`</ph>, so any contained <ph id="ph4">`IMarqueeWidget`</ph> controls will also participate in the test.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>To add designer verbs to your custom designers</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`MarqueeControlRootDesigner`</ph> class, add event handlers named <ph id="ph2">`OnVerbRunTest`</ph> and <ph id="ph3">`OnVerbStopTest`</ph>.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#570<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#570)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#570<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#570)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Connect these event handlers to their corresponding designer verbs.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MarqueeControlRootDesigner`</ph> inherits a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerVerbCollection&gt;</ph> from its base class.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You will create two new <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerVerb&gt;</ph> objects and add them to this collection in the <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DocumentDesigner.Initialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#590<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueecontrolrootdesigner.cs#590)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#590<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueecontrolrootdesigner.vb#590)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Creating a Custom UITypeEditor</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>When you create a custom design-time experience for users, it is often desirable to create a custom interaction with the Properties window.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>You can accomplish this by creating a <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a UI Type Editor<ept id="p1">](http://msdn.microsoft.com/library/292c6e33-8d85-4012-9b51-05835a6f6dfd)</ept>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeBorder`</ph> control exposes several properties in the Properties window.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Two of these properties, <ph id="ph1">`MarqueeSpinDirection`</ph> and <ph id="ph2">`MarqueeLightShape`</ph> are represented by enumerations.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>To illustrate the use of a UI type editor, the <ph id="ph1">`MarqueeLightShape`</ph> property will have an associated <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>To create a custom UI type editor</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`MarqueeBorder`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>In the definition of the <ph id="ph1">`MarqueeBorder`</ph> class, declare a class called <ph id="ph2">`LightShapeEditor`</ph> that derives from <ph id="ph3">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#96<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#96)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#96<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#96)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Declare an <ph id="ph1">&lt;xref:System.Windows.Forms.Design.IWindowsFormsEditorService&gt;</ph> instance variable called <ph id="ph2">`editorService`</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#92<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#92)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#92<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#92)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>This implementation returns <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditorEditStyle&gt;</ph>, which tells the design environment how to display the <ph id="ph2">`LightShapeEditor`</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#93<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#93)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#93<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#93)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor.EditValue%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>This implementation queries the design environment for an <ph id="ph1">&lt;xref:System.Windows.Forms.Design.IWindowsFormsEditorService&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>If successful, it creates a <ph id="ph1">`LightShapeSelectionControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl%2A&gt;</ph> method is invoked to start the <ph id="ph2">`LightShapeEditor`</ph>.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The return value from this invocation is returned to the design environment.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#94<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/marqueeborder.cs#94)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#94<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/marqueeborder.vb#94)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Creating a View Control for your Custom UITypeEditor</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeLightShape`</ph> property supports two types of light shapes: <ph id="ph2">`Square`</ph> and <ph id="ph3">`Circle`</ph>.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>You will create a custom control used solely for the purpose of graphically displaying these values in the Properties window.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>This custom control will be used by your <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> to interact with the Properties window.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>To create a view control for your custom UI type editor</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Add a new <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> item to the <ph id="ph2">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of "LightShapeSelectionControl."</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Drag two <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph> controls from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> onto the <ph id="ph2">`LightShapeSelectionControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Name them <ph id="ph1">`squarePanel`</ph> and <ph id="ph2">`circlePanel`</ph>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Arrange them side by side.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property of both <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> controls to (60, 60).</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property of the <ph id="ph2">`squarePanel`</ph> control to (8, 10).</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property of the <ph id="ph2">`circlePanel`</ph> control to (80, 10).</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Finally, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property of the <ph id="ph2">`LightShapeSelectionControl`</ph> to (150, 80).</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`LightShapeSelectionControl`</ph> source file in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>At the top of the file, import the <ph id="ph1">&lt;xref:System.Windows.Forms.Design?displayProperty=fullName&gt;</ph> namespace:</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers for the <ph id="ph2">`squarePanel`</ph> and <ph id="ph3">`circlePanel`</ph> controls.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>These methods invoke <ph id="ph1">&lt;xref:System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown%2A&gt;</ph> to end the custom <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> editing session.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#390<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/lightshapeselectioncontrol.cs#390)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#390<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/lightshapeselectioncontrol.vb#390)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Declare an <ph id="ph1">&lt;xref:System.Windows.Forms.Design.IWindowsFormsEditorService&gt;</ph> instance variable called <ph id="ph2">`editorService`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Declare a <ph id="ph1">`MarqueeLightShape`</ph> instance variable called <ph id="ph2">`lightShapeValue`</ph>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#330<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/lightshapeselectioncontrol.cs#330)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#330<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/lightshapeselectioncontrol.vb#330)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`LightShapeSelectionControl`</ph> constructor, attach the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers to the <ph id="ph3">`squarePanel`</ph> and <ph id="ph4">`circlePanel`</ph> controls' <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Also, define a constructor overload that assigns the <ph id="ph1">`MarqueeLightShape`</ph> value from the design environment to the <ph id="ph2">`lightShapeValue`</ph> field.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#340<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/lightshapeselectioncontrol.cs#340)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#340<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/lightshapeselectioncontrol.vb#340)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method, detach the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#350<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/lightshapeselectioncontrol.cs#350)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#350<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/lightshapeselectioncontrol.vb#350)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click the <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Open the LightShapeSelectionControl.Designer.cs or LightShapeSelectionControl.Designer.vb file, and remove the default definition of the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`LightShape`</ph> property.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#360<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/lightshapeselectioncontrol.cs#360)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#360<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/lightshapeselectioncontrol.vb#360)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>This implementation will draw a filled square and circle.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>It will also highlight the selected value by drawing a border around one shape or the other.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#380<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/CS/lightshapeselectioncontrol.cs#380)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Windows.Forms.Design.DocumentDesigner#380<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.DocumentDesigner/VB/lightshapeselectioncontrol.vb#380)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Testing your Custom Control in the Designer</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>At this point, you can build the <ph id="ph1">`MarqueeControlLibrary`</ph> project.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Test your implementation by creating a control that inherits from the <ph id="ph1">`MarqueeControl`</ph> class and using it on a form.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>To create a custom MarqueeControl implementation</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`DemoMarqueeControl`</ph> in the Windows Forms Designer.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>This creates an instance of the <ph id="ph1">`DemoMarqueeControl`</ph> type and displays it in an instance of the <ph id="ph2">`MarqueeControlRootDesigner`</ph> type.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, open the <bpt id="p2">**</bpt>MarqueeControlLibrary Components<ept id="p2">**</ept> tab. You will see the <ph id="ph1">`MarqueeBorder`</ph> and <ph id="ph2">`MarqueeText`</ph> controls available for selection.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Drag an instance of the <ph id="ph1">`MarqueeBorder`</ph> control onto the <ph id="ph2">`DemoMarqueeControl`</ph> design surface.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Dock this <ph id="ph1">`MarqueeBorder`</ph> control to the parent control.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Drag an instance of the <ph id="ph1">`MarqueeText`</ph> control onto the <ph id="ph2">`DemoMarqueeControl`</ph> design surface.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Right-click the <ph id="ph1">`DemoMarqueeControl`</ph> and from the shortcut menu select the <bpt id="p1">**</bpt>Run Test<ept id="p1">**</ept> option to start the animation.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Stop Test<ept id="p1">**</ept> to stop the animation.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> in Design view.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Place two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on the form.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Name them <ph id="ph1">`startButton`</ph> and <ph id="ph2">`stopButton`</ph>, and change the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property values to <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Stop<ept id="p2">**</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers for both <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, open the <bpt id="p2">**</bpt>MarqueeControlTest Components<ept id="p2">**</ept> tab. You will see the <ph id="ph1">`DemoMarqueeControl`</ph> available for selection.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Drag an instance of <ph id="ph1">`DemoMarqueeControl`</ph> onto the <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> design surface.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers, invoke the <ph id="ph2">`Start`</ph> and <ph id="ph3">`Stop`</ph> methods on the <ph id="ph4">`DemoMarqueeControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`MarqueeControlTest`</ph> project as the startup project and run it.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>You will see the form displaying your <ph id="ph1">`DemoMarqueeControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button to start the animation.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>You should see the text flashing and the lights moving around the border.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MarqueeControlLibrary`</ph> demonstrates a simple implementation of custom controls and associated designers.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>You can make this sample more sophisticated in several ways:</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Change the property values for the <ph id="ph1">`DemoMarqueeControl`</ph> in the designer.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Add more <ph id="ph1">`MarqueBorder`</ph> controls and dock them within their parent instances to create a nested effect.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Experiment with different settings for the <ph id="ph1">`UpdatePeriod`</ph> and the light-related properties.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Author your own implementations of <ph id="ph1">`IMarqueeWidget`</ph>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>You could, for example, create a flashing "neon sign" or an animated sign with multiple images.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Further customize the design-time experience.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>You could try shadowing more properties than <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>, and you could add new properties.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Add new designer verbs to simplify common tasks like docking child controls.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>License the <ph id="ph1">`MarqueeControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: License Components and Controls<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Control how your controls are serialized and how code is generated for them.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Dynamic Source Code Generation and Compilation<ept id="p1">](../../../../docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph></source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Design.ParentControlDesigner&gt;</ph></source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Design.DocumentDesigner&gt;</ph></source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph></source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerVerb&gt;</ph></source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph></source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph></source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Windows Forms Control That Takes Advantage of Design-Time Features<ept id="p1">](http://msdn.microsoft.com/library/8e0bad0e-56f3-43d2-bf63-a945c654d97c)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Extending Design-Time Support<ept id="p1">](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom Designers<ept id="p1">](http://msdn.microsoft.com/library/ca11988e-d38e-44d8-a05d-71362ae7844d)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Shape Library: A Sample Designer<ept id="p1">](http://windowsforms.net/articles/shapedesigner.aspx)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>