<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e936036a327622a61ac4fdc3276e235139a4037c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81a20e9fe15a52945978d2eb2c600364e11c42b9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a60aff5a4a16b29a0c8f43f3e6324568fb96e0b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Walkthrough: Hosting a Windows Forms Composite Control in WPF | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Hosting a Windows Forms Composite Control in WPF</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> provides a rich environment for creating applications             .</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, when you have a substantial investment in              <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> code, it can be more effective to reuse at least some of that code in your              <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application rather than to rewrite it from scratch.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The most common scenario is when you have existing              <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> controls.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In some cases, you might not even have access to the source code for these controls.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides a straightforward procedure for hosting such controls in a              <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, you can use              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> for most of your programming while hosting your specialized              <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This walkthrough steps you through an application that hosts a              <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> composite control to perform data entry in a              <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The composite control is packaged in a DLL.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This general procedure can be extended to more complex applications and controls.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This walkthrough is designed to be nearly identical in appearance and functionality to              <bpt id="p1">[</bpt>Walkthrough: Hosting a WPF Composite Control in Windows Forms<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-wpf-composite-control-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The primary difference is that the hosting scenario is reversed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The walkthrough is divided into two sections.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The first section briefly describes the implementation of the              <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> composite control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The second section discusses in detail how to host the composite control in a              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application, receive events from the control, and access some of the control's properties.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Tasks illustrated in this walkthrough include:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Implementing the Windows Forms composite control.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implementing the WPF host application.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For a complete code listing of the tasks illustrated in this walkthrough, see              <bpt id="p1">[</bpt>Hosting a Windows Forms Composite Control in WPF Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159999)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You need the following components to complete this walkthrough:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Implementing the Windows Forms Composite Control</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The                  <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> composite control used in this example is a simple data-entry form.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This form takes the user's name and address and then uses a custom event to return that information to the host.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following illustration shows the rendered control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Simple Windows Forms control<ept id="p1">](../../../../docs/framework/wpf/advanced/media/wfcontrol.gif "WFControl")</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows Forms composite control</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To start the project:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Launch                                  <ph id="ph1">[!INCLUDE[TLA#tla_visualstu](../../../../includes/tlasharptla-visualstu-md.md)]</ph>, and open the                                  <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the Window category, select the                                  <bpt id="p1">**</bpt>Windows Forms Control Library<ept id="p1">**</ept> template.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Name the new project                                  <ph id="ph1">`MyControls`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For the location, specify a conveniently named top-level folder, such as                                  <ph id="ph1">`WpfHostingWindowsFormsControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Later, you will put the host application in this folder.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default project contains a single control named                                  <ph id="ph1">`UserControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, rename                                  <ph id="ph1">`UserControl1`</ph> to                                  <ph id="ph2">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Your project should have references to the following system DLLs.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If any of these DLLs are not included by default, add them to the project.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>System</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System.Data</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System.Drawing</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>System.Windows.Forms</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>System.Xml</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adding Controls to the Form</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To add controls to the form:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Open                                  <ph id="ph1">`MyControl1`</ph> in the designer.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add five                          <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls and their corresponding                          <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls, sized and arranged as they are in the preceding illustration, on the form.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the example, the                          <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls are named:</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add two                          <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls labeled                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and                          <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the example, the button names are                          <ph id="ph1">`btnOK`</ph> and                          <ph id="ph2">`btnCancel`</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Implementing the Supporting Code</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Open the form in code view.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The control returns the collected data to its host by raising the custom                          <ph id="ph1">`OnButtonClick`</ph> event.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The data is contained in the event argument object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code shows the event and delegate declaration.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Add the following code to the                          <ph id="ph1">`MyControl1`</ph> class.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/MyControls/MyControl1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WpfHostingWindowsFormsControl#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/VisualBasic/MyControls/MyControl1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">`MyControlEventArgs`</ph> class contains the information to be returned to the host.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Add the following class to the form.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/MyControls/MyControl1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WpfHostingWindowsFormsControl#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/VisualBasic/MyControls/MyControl1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When the user clicks the                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> or                          <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> button, the                          <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handlers create a                          <ph id="ph2">`MyControlEventArgs`</ph> object that contains the data and raises the                          <ph id="ph3">`OnButtonClick`</ph> event.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The only difference between the two handlers is the event argument's                          <ph id="ph1">`IsOK`</ph> property.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This property enables the host to determine which button was clicked.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It is set to                          <ph id="ph1">`true`</ph> for the                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button, and                          <ph id="ph2">`false`</ph> for the                          <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following code shows the two button handlers.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Add the following code to the                          <ph id="ph1">`MyControl1`</ph> class.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/MyControls/MyControl1.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WpfHostingWindowsFormsControl#4<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/VisualBasic/MyControls/MyControl1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Giving the Assembly a Strong Name and Building the Assembly</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For                          this assembly to be referenced by a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application, it must have a strong name.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To create a strong name, create a key file with Sn.exe and add it to your project                         .</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Open a                                  <ph id="ph1">[!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)]</ph> command prompt.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To do so, click the                                  <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, and then select                                  <bpt id="p2">**</bpt>All Programs/Microsoft Visual Studio 2010/Visual Studio Tools/Visual Studio Command Prompt<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This launches a console window with customized environment variables.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>At the command prompt, use the                                  <ph id="ph1">`cd`</ph> command to go to your project folder.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Generate a key file named MyControls.snk by running the following command.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To include the key file in your project, right-click the project name in Solution Explorer and then click                                  <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In the Project Designer, click the                                  <bpt id="p1">**</bpt>Signing<ept id="p1">**</ept> tab, select the                                  <bpt id="p2">**</bpt>Sign the assembly<ept id="p2">**</ept> check box and then browse to your key file.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The build will produce a DLL named MyControls.dll.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Implementing the WPF Host Application</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> host application uses the                  <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> control to host                  <ph id="ph3">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The application handles the                  <ph id="ph1">`OnButtonClick`</ph> event to receive the data from the control.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It also has a collection of option buttons that enable you to change some of the control's properties from the                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following illustration shows the finished application.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A control embedded in a WPF page<ept id="p1">](../../../../docs/framework/wpf/advanced/media/avalonhost.gif "AvalonHost")</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The complete application, showing the control embedded in the WPF application</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To start the project:</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Open                                  <ph id="ph1">[!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)]</ph>, and select                                  <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the Window category, select the                                  <bpt id="p1">**</bpt>WPF Application<ept id="p1">**</ept> template                                 .</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Name the new project                                  <ph id="ph1">`WpfHost`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For the location, specify the same top-level folder that contains the MyControls project.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You also need to add references to the DLL that contains                          <ph id="ph1">`MyControl1`</ph> and other assemblies.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Right-click the project name in Solution Explorer and select                                  <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Click the                                  <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab, and browse to the folder that contains MyControls.dll.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For this walkthrough, this folder is MyControls\bin\Debug.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Select MyControls.dll, and then click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Add a reference to the                                  WindowsFormsIntegration                                  assembly, which is named WindowsFormsIntegration.dll.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Implementing the Basic Layout</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> of the host application is implemented in MainWindow.xaml.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This file contains                          <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> markup that defines the layout, and hosts the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The application is divided into three regions:</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The                                  <bpt id="p1">**</bpt>Control Properties<ept id="p1">**</ept> panel, which contains a collection of option buttons that you can use to modify various properties of the hosted control.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The                                  <bpt id="p1">**</bpt>Data from Control<ept id="p1">**</ept> panel, which contains several                                  <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements that display the data returned from the hosted control.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The hosted control itself.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The basic layout is shown in the following XAML.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The markup that is needed to host                          <ph id="ph1">`MyControl1`</ph> is omitted from this example, but will be discussed later.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Replace the XAML in MainWindow.xaml with the following.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you are using Visual Basic, change the class to                          <ph id="ph1">`x:Class="MainWindow"`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#100<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/WpfHost/Page1.xaml#100)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The first                          <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> element contains several sets of                          <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph> controls that enable you to modify various default properties of the hosted control.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>That is followed by a                          <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element, which hosts                          <ph id="ph2">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The final                          <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> element contains several                          <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements that display the data that is returned by the hosted control.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The ordering of the elements and the                          <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A&gt;</ph> and                          <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> attribute settings embed the hosted control into the window with no gaps or distortion.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Hosting the Control</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following edited version of the previous XAML focuses on the elements that are needed to host                                  <ph id="ph1">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#101<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/WpfHost/Page1.xaml#101)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#102<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/WpfHost/Page1.xaml#102)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">`xmlns`</ph> namespace mapping attribute creates a reference to the                                  <ph id="ph2">`MyControls`</ph> namespace that contains the hosted control.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This mapping enables you to represent                                  <ph id="ph1">`MyControl1`</ph> in                                  <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> as                                  <ph id="ph3">`&lt;mcl:MyControl1&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Two elements in the XAML handle the hosting:</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`WindowsFormsHost`</ph> represents the                                          <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element that enables you to host a                                          <ph id="ph3">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control in a                                          <ph id="ph4">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`mcl:MyControl1`</ph>, which represents                                          <ph id="ph2">`MyControl1`</ph>, is added to the                                          <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element's child collection.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>As a result, this                                          <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control is rendered as part of the                                          <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> window, and you can communicate with the control from the application.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Implementing the Code-Behind File</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The code-behind file, MainWindow.xaml.vb or MainWindow.xaml.cs, contains the procedural code that implements the functionality of the                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> discussed in the preceding section.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The primary tasks are:</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Attaching an event handler to                                  <ph id="ph1">`MyControl1`</ph>'s                                  <ph id="ph2">`OnButtonClick`</ph> event.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Modifying various properties of                                  <ph id="ph1">`MyControl1`</ph>, based on how the collection of option buttons are set.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Displaying the data collected by the control.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Initializing the Application</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The initialization code is contained in an event handler for the window's                                  <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event and attaches an event handler to the control's                                  <ph id="ph2">`OnButtonClick`</ph> event.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In MainWindow.xaml.vb or MainWindow.xaml.cs, add the following code to the                                  <ph id="ph1">`MainWindow`</ph> class.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#11<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/WpfHost/Page1.xaml.cs#11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WpfHostingWindowsFormsControl#11<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/VisualBasic/WpfHost/Page1.xaml.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Because the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> discussed previously added                                  <ph id="ph2">`MyControl1`</ph> to the                                  <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element's child element collection, you can cast the                                  <ph id="ph4">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element's                                  <ph id="ph5">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.Child%2A&gt;</ph> to get the reference to                                  <ph id="ph6">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>You can then use that reference to attach an event handler to                                  <ph id="ph1">`OnButtonClick`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In addition to providing a reference to the control itself,                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> exposes a number of the control's properties, which you can manipulate from the application.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The initialization code assigns those values to private global variables for later use in the application.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>So that you can easily access the types in the                                  <ph id="ph1">`MyControls`</ph> DLL, add the following                                  <ph id="ph2">`Imports`</ph> or                                  <ph id="ph3">`using`</ph> statement to the top of the file.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Handling the OnButtonClick Event</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MyControl1`</ph> raises the                                  <ph id="ph2">`OnButtonClick`</ph> event when the user clicks either of the control's buttons.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Add the following code to the                                  <ph id="ph1">`MainWindow`</ph> class.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#12<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/WpfHost/Page1.xaml.cs#12)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WpfHostingWindowsFormsControl#12<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/VisualBasic/WpfHost/Page1.xaml.vb#12)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The data in the text boxes is packed into the                                  <ph id="ph1">`MyControlEventArgs`</ph> object.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If the user clicks the                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button, the event handler extracts the data and displays it in the panel below                                  <ph id="ph1">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Modifying the Control’s Properties</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element exposes several of the hosted control's default properties.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>As a result, you can change the appearance of the control to match the style of your application more closely.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The sets of option buttons in the left panel enable the user to modify several color and font properties.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Each set of buttons has a handler for the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event, which detects the user's option button selections and changes the corresponding property on the control.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Add the following code to the                                  <ph id="ph1">`MainWindow`</ph> class.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfHostingWindowsFormsControl#13<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/CSharp/WpfHost/Page1.xaml.cs#13)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WpfHostingWindowsFormsControl#13<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfHostingWindowsFormsControl/VisualBasic/WpfHost/Page1.xaml.vb#13)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Add some text in the Windows Forms composite control and then click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The text appears in the labels.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Click the different radio buttons to see the effect on the control.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Designer<ept id="p1">](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a Windows Forms Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-control-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a WPF Composite Control in Windows Forms<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-wpf-composite-control-in-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>