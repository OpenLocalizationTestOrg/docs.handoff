<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fc2144059e266752beda92700e9ef027c00ace5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\transactions\transaction-management-escalation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24026aae8a38097c93782ccb56ebeffb55e7cf27</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2882e99e57dff7bd99c3421c623baaf72dcfa260</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Transaction Management Escalation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Transaction Management Escalation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows hosts a set of services and modules that together constitute a transaction manager.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Transaction management escalation describes the process of migrating a transaction from one of the transaction manager's components to another.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Transactions&gt;</ph> includes a transaction manager component that coordinates a transaction involving at most, a single durable resource or multiple volatile resources.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because the transaction manager uses only intra-application domain calls, it yields the best performance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Developers need not interact with the transaction manager directly.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Instead, a common infrastructure that defines interfaces, common behavior, and helper classes is provided by the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you want to provide the transaction to another object in another application domain (including across process and machine boundaries) on the same computer, the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure automatically escalates the transaction to be managed by the Microsoft Distributed Transaction Coordinator (MSDTC).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The escalation also occurs if you enlist another durable resource manager.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When escalated, the transaction remains managed in its elevated state until its completion.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Between the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> transaction and MSDTC transaction, there is an intermediary type of transaction that is made available through the Promotable Single Phase Enlistment (PSPE).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>PSPE is another important mechanism in <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> for performance optimization.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It allows a remote durable resource, located in a different application domain, process or computer, to participate in a <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> transaction without causing it to be escalated to an MSDTC transaction.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about PSPE, see <bpt id="p1">[</bpt>Enlisting Resources as Participants in a Transaction<ept id="p1">](../../../../docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>How Escalation is Initiated</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Transaction escalation reduces performance because the MSDTC resides in a separate process, and escalating a transaction to the MSDTC results in messages being sent across process.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To improve performance, you should delay or avoid escalation to MSDTC; thus, you need to know how and when the escalation is initiated.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As long as the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure handles volatile resources and at most one durable resource that supports single-phase notifications, the transaction remains in the ownership of the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> infrastructure.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The transaction manager avails itself only to those resources that live in the same application domain and for which logging (writing the transaction outcome to disk) is not required.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An escalation that results in the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure transferring the ownership of the transaction to MSDTC happens when:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>At least one durable resource that does not support single-phase notifications is enlisted in the transaction.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>At least two durable resources that support single-phase notifications are enlisted in the transaction.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, enlisting a single connection with <ph id="ph1">[!INCLUDE[sqprsqlong](../../../../includes/sqprsqlong-md.md)]</ph> does not cause a transaction to be promoted.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, whenever you open a second connection to a <ph id="ph1">[!INCLUDE[sqprsqlong](../../../../includes/sqprsqlong-md.md)]</ph> database causing the database to enlist, the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> infrastructure detects that it is the second durable resource in the transaction, and escalates it to an MSDTC transaction.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A request to "marshal" the transaction to a different application domain or different process is invoked.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, the serialization of the transaction object across an application domain boundary.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The transaction object is marshaled-by-value, meaning that any attempt to pass it across an application domain boundary (even in the same process) results in serialization of the transaction object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can pass the transaction objects by making a call on a remote method that takes a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> as a parameter or you can try to access a remote transactional-serviced component.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This serializes the transaction object and results in an escalation, as when a transaction is serialized across an application domain.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It is being distributed and the local transaction manager is no longer adequate.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible exceptions that can be thrown during escalation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Exception type</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An attempt to escalate a transaction with isolation level equal to <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The transaction manager is down.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The escalation fails and the application is aborted.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>