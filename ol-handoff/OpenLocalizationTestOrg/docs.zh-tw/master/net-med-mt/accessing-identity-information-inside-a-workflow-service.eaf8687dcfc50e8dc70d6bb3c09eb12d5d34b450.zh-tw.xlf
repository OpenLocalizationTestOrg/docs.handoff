<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="accessing-identity-information-inside-a-workflow-service.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5ae97a8" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11066160368523a6057f9e983c4f968a2fcc41e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\accessing-identity-information-inside-a-workflow-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7c932e9af4dcb981b910d38664353c7d7737b1b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcee3d87d11ec8d0484e8b83ee9525d42fb83f81</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Accessing Identity Information inside a Workflow Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Accessing Identity Information inside a Workflow Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To access identity information inside a workflow service, you must implement the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.IReceiveMessageCallback&gt;</ph> interface in a custom execution property.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.IReceiveMessageCallback.OnReceiveMessage%2A&gt;</ph> System.Activities.ExecutionProperties)?qualifyHint=False&amp;autoUpgrade=True method you can access the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext&gt;</ph> to access identity information.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic will walk you through implementing this execution property, as well as a custom activity that will surface this property to the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity at runtime.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The custom activity will implement the same behavior as a</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`System.ServiceModel.Activities.Sequence`</ph> activity, except that when a <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> is placed inside of it, the <ph id="ph3">&lt;xref:System.ServiceModel.Activities.IReceiveMessageCallback&gt;</ph> will be called and the identity information will be retrieved.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Implement IReceiveMessageCallback</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create an empty <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> solution.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Add a new console application called <ph id="ph1">`Service`</ph> to the solution.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add references to the following assemblies:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>System.Runtime.Serialization</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>System.ServiceModel</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>System.ServiceModel.Activities</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add a new class called <ph id="ph1">`AccessIdentityCallback`</ph> and implement <ph id="ph2">&lt;xref:System.ServiceModel.Activities.IReceiveMessageCallback&gt;</ph> as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This code uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> passed into the method to access identity information.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Implement a Native activity to add the IReceiveMessageCallback implementation to the NativeActivityContext</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add a new class derived from <ph id="ph1">&lt;xref:System.Activities.NativeActivity&gt;</ph> called <ph id="ph2">`AccessIdentityScope`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add local variables to keep track of child activities, variables, current activity index, and a <ph id="ph1">&lt;xref:System.Activities.CompletionCallback&gt;</ph> callback.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Implement the constructor</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`Activities`</ph> and <ph id="ph2">`Variables`</ph> properties.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.Activities.NativeActivity.Execute%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Implement the workflow service</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Open the existing <ph id="ph1">`Program`</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Define the following constants:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add a static method called <ph id="ph1">`GetWorkflowService`</ph> that creates the workflow service.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the existing <ph id="ph1">`Main`</ph> method, host the workflow service.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Implement a workflow client</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create a new console application project called <ph id="ph1">`Client`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add references to the following assemblies:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>System.Activities</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>System.ServiceModel</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>System.ServiceModel.Activities</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Open the generated Program.cs file and add a static method called <ph id="ph1">`GetClientWorkflow`</ph> to create the client workflow.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add the following hosting code to the <ph id="ph1">`Main()`</ph> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Here is a complete listing of the source code used in this topic.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Workflow Services<ept id="p1">](../../../../docs/framework/wcf/feature-details/workflow-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Accessing OperationContext<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/accessing-operationcontext.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Authoring Workflows, Activities, and Expressions Using Imperative Code<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/authoring-workflows-activities-and-expressions-using-imperative-code.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>