<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9f727ebeca99b0654e86411f2717eeb0a70aa1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\interop\how-to-create-com-wrappers.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7fc5a73572076b575b74b75f5b42b4c35e025eb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c579a77f6d3f334c893984ce700657e01793f44</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create COM Wrappers | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create COM Wrappers</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can create Component Object Model (COM) wrappers by using <ph id="ph1">[!INCLUDE[vsprvsext](../../../includes/vsprvsext-md.md)]</ph> features or the .NET Framework tools Tlbimp.exe and Regasm.exe.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Both methods generate two types of COM wrappers:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](../../../docs/framework/interop/runtime-callable-wrapper.md)</ept> from a type library to run a COM object in managed code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](../../../docs/framework/interop/com-callable-wrapper.md)</ept> with the required registry settings to run a managed object in a native application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vsprvslong](../../../includes/vsprvslong-md.md)]</ph>, you can add the COM wrapper as a reference to your project.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Wrapping COM Objects in a Managed Application</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To create a runtime callable wrapper using Visual Studio</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Open the project for your managed application.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the Add Reference dialog box, click the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab, select the component you want to use, and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, note that the COM component is added to the References folder in your project.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can now write code to access the COM object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can begin by declaring the object, such as with an <ph id="ph1">`Imports`</ph> statement for <ph id="ph2">[!INCLUDE[vbprvblong](../../../includes/vbprvblong-md.md)]</ph> or a <ph id="ph3">`Using`</ph> statement for <ph id="ph4">[!INCLUDE[csprcslong](../../../includes/csprcslong-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you want to program Microsoft Office components, first install the <bpt id="p1">[</bpt>Microsoft Office Primary Interop Assemblies<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=50479)</ept> (PIAs) from the Microsoft Download Center.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In step 4, select the latest version of the object library available for the Office product you want, such as the <bpt id="p1">**</bpt>Microsoft Word 11.0 Object Library<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To create a runtime callable wrapper using .NET Framework tools</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This tool creates an assembly that contains run-time metadata for the types defined in the original type library.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Wrapping Managed Objects in a Native Application</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To create a COM callable wrapper using Visual Studio</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create a Class Library project for the managed class that you want to run in native code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The class must have a default constructor.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Verify that you have a complete four-part version number for your assembly in the AssemblyInfo file.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This number is required for maintaining versioning in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information about version numbers, see <bpt id="p1">[</bpt>Assembly Versioning<ept id="p1">](../../../docs/framework/app-domains/assembly-versioning.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Compile<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Register for COM interop<ept id="p1">**</ept> check box.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you build the project, the assembly is automatically registered for COM interop.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you are building a native application in <ph id="ph1">[!INCLUDE[vsprvslong](../../../includes/vsprvslong-md.md)]</ph>, you can use the assembly by clicking <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To create a COM callable wrapper using .NET Framework tools</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">[</bpt>Regasm.exe (Assembly Registration Tool)<ept id="p1">](../../../docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept> tool.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This tool reads the assembly metadata and adds the necessary entries to the registry.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a result, COM clients can create .NET Framework classes transparently.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can use the assembly as if it were a native COM class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can run Regasm.exe on an assembly located in any directory, and then run the <bpt id="p1">[</bpt>Gacutil.exe (Global Assembly Cache Tool)<ept id="p1">](../../../docs/framework/tools/gacutil-exe-gac-tool.md)</ept> to move it to the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Moving the assembly does not invalidate location registry entries, because the global assembly cache is always examined if the assembly is not found elsewhere.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](../../../docs/framework/interop/runtime-callable-wrapper.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>COM Callable Wrapper<ept id="p1">](../../../docs/framework/interop/com-callable-wrapper.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>