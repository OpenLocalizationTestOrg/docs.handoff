<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc0bb1605bc3a38ff3c29e7ed504e245f1b07209</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\transactions\features-provided-by-system-transactions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04409e0dc9d3a8dbd3794b489605d21609ed548c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5166c282620c05bc39db996e21c9f6b5e85bddfa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Features Provided by System.Transactions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Features Provided by System.Transactions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes how you can use the features provided by the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace to write your own transactional application and resource manager.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Specifically, this section covers how to create and participate in a transaction (local or distributed) with one or multiple participants.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview of System.Transactions</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The infrastructure provided by the classes in the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace makes transactional programming simple and efficient by supporting transactions initiated in SQL Server, ADO.NET, Message Queuing (MSMQ), and the Microsoft Distributed Transaction Coordinator (MSDTC).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace provides both an explicit programming model based on the <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> class, as well as an implicit programming model using the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, in which transactions are automatically managed by the infrastructure.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information on how to create a transactional application using these two models, see <bpt id="p1">[</bpt>Writing a Transactional Application<ept id="p1">](../../../../docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace also provides types for you to implement a resource manager.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A resource manager manages durable or volatile data used in a transaction, and work in cooperation with the transaction manager to provide the application with a guarantee of atomicity and isolation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The transaction manager that is provided by the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure supports transactions involving multiple volatile resources or a single durable resource.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information on implementing a resource manager, see <bpt id="p1">[</bpt>Implementing a Resource Manager<ept id="p1">](../../../../docs/framework/data/transactions/implementing-a-resource-manager.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The transaction manager also transparently escalates local transactions to distributed transactions by coordinating with a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are two key ways that the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure provides enhanced performance.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Dynamic Escalation, which ensures that the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure only engages the MSDTC when a transaction spans across multiple distributed resources.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about dynamic escalation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>see <bpt id="p1">[</bpt>Transaction Management Escalation<ept id="p1">](../../../../docs/framework/data/transactions/transaction-management-escalation.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Later, if needed, the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure can still escalate the management of the transaction to the MSDTC.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This further reduces the chance of using the MSDTC.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Promotable Enlistments are covered in depth in the topic<bpt id="p1">[</bpt>Optimization using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](../../../../docs/framework/data/transactions/optimization-spc-and-promotable-spn.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace defines three levels of trust - AllowPartiallyTrustedCallers (APTCA), DistributedTransactionPermission(DTP) and full trust - that restrict access to the types of resources it exposes.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information on the various trust levels, see <bpt id="p1">[</bpt>Security Trust Levels in Accessing Resources<ept id="p1">](../../../../docs/framework/data/transactions/security-trust-levels-in-accessing-resources.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this section</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Writing A Transactional Application</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace provides two models for creating transactional applications.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing an Implicit Transaction using Transaction Scope<ept id="p1">](../../../../docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> describes how the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace supports creating implicit transactions using the <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing an Explicit Transaction using CommittableTransaction<ept id="p1">](../../../../docs/framework/data/transactions/implementing-an-explicit-transaction-using-committabletransaction.md)</ept> describes how the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace supports creating explicit transactions using the <ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For additional topics covering writing a transactional application, see <bpt id="p1">[</bpt>Writing a Transactional Application<ept id="p1">](../../../../docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Implementing A Resource Manager</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To implement a resource manager that can participate in a transaction, see <bpt id="p1">[</bpt>Implementing a Resource Manager<ept id="p1">](../../../../docs/framework/data/transactions/implementing-a-resource-manager.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This section covers the enlistment of a resource, committing a transaction, recovery after failure, and optimization best practices.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>