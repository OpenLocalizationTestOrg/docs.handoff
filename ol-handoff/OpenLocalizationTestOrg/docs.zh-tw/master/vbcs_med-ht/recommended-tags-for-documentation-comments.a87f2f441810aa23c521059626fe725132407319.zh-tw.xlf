<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87336393649aa8c984cf6e7af30bce8c98000160</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\xmldoc\recommended-tags-for-documentation-comments.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f2473383d4dcc6fc32cf3a08b21bddb0ce03d68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">675cfa290e792de08c1864266c0e4bf77998b9da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Recommended Tags for Documentation Comments (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Recommended Tags for Documentation Comments (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The C# compiler processes documentation comments in your code and formats them as XML in a file whose name you specify in the <bpt id="p1">**</bpt>/doc<ept id="p1">**</ept> command-line option.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To create the final documentation based on the compiler-generated file, you can create a custom tool, or use a tool such as <bpt id="p1">[</bpt>Sandcastle<ept id="p1">](http://shfb.codeplex.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Tags are processed on code constructs such as types and type members.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Documentation comments cannot be applied to a namespace.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The compiler will process any tag that is valid XML.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following tags provide generally used functionality in user documentation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Tags</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>c&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/code-inline.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>para&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/para.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>see&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/see.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>code&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/code.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>param&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/param.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>seealso&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/seealso.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>example&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/example.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>paramref&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/paramref.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/summary.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>exception&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/exception.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>permission&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/permission.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>typeparam&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/typeparam.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>include&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/include.md)</ept><ph id="ph2">*</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>remarks&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/remarks.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>typeparamref&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/typeparamref.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>list&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/list.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>returns&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/returns.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>value&gt;<ept id="p1">](../../../csharp/programming-guide/xmldoc/value.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(* denotes that the compiler verifies syntax.)</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you want angle brackets to appear in the text of a documentation comment, use <ph id="ph1">`&lt;`</ph> and <ph id="ph2">`&gt;`</ph>, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/doc (C# Compiler Options)<ept id="p1">](../../../csharp/language-reference/compiler-options/doc-compiler-option.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Documentation Comments<ept id="p1">](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>