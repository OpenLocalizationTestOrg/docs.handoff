<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="about.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c76d5e80cba6947eb5a91fb31fc3e511970d165</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\about.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b57eb6d057566703b734afc1a45401a818ab527f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fe3df51681d7e4682c8d24ec3409564f6e7f6a4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>About .NET Core</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn about .NET Core.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core has the following characteristics:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Cross-platform:<ept id="p1">**</ept> Runs on Windows, macOS and Linux <bpt id="p2">[</bpt>operating systems<ept id="p2">](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Consistent across architectures:<ept id="p1">**</ept> Runs your code with the same behavior on multiple architectures, including x64, x86, and ARM.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Command-line tools:<ept id="p1">**</ept>  Includes easy-to-use command-line tools that can be used for local development and in continuous-integration scenarios.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Flexible deployment:<ept id="p1">**</ept> Can be included in your app or installed side-by-side user- or machine-wide.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Can be used with <bpt id="p1">[</bpt>Docker containers<ept id="p1">](docker/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Compatible:<ept id="p1">**</ept> .NET Core is compatible with .NET Framework, Xamarin and Mono, via <bpt id="p2">[</bpt>.NET Standard<ept id="p2">](../standard/net-standard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open source:<ept id="p1">**</ept> The .NET Core platform is open source, using MIT and Apache 2 licenses.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>.NET Core is a <bpt id="p1">[</bpt>.NET Foundation<ept id="p1">](https://dotnetfoundation.org/)</ept> project.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Supported by Microsoft:<ept id="p1">**</ept> .NET Core is supported by Microsoft, per <bpt id="p2">[</bpt>.NET Core Support<ept id="p2">](https://www.microsoft.com/net/core/support/)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Languages</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>C#, Visual Basic, and F# languages can be used to write applications and libraries for .NET Core.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These languages are or can be integrated into your favorite text editors and IDEs, including <bpt id="p1">[</bpt>Visual Studio<ept id="p1">](https://visualstudio.microsoft.com/vs/)</ept>, <bpt id="p2">[</bpt>Visual Studio Code<ept id="p2">](https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp)</ept>, Sublime Text and Vim.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This integration is provided, in part, by the good folks from the <bpt id="p1">[</bpt>OmniSharp<ept id="p1">](https://www.omnisharp.net/)</ept> and <bpt id="p2">[</bpt>Ionide<ept id="p2">](http://ionide.io)</ept> projects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>APIs</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>.NET Core exposes APIs for many scenarios, a few of which follow:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Primitive types, such as <bpt id="p1">[</bpt>bool<ept id="p1">](../csharp/language-reference/keywords/bool.md)</ept> and <bpt id="p2">[</bpt>int<ept id="p2">](../csharp/language-reference/keywords/int.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Collections, such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Utility types, such as <ph id="ph1">&lt;xref:System.Net.Http.HttpClient?displayProperty=nameWithType&gt;</ph>, and <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Data types, such as <ph id="ph1">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph>, and <bpt id="p1">[</bpt>DbSet<ept id="p1">](https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>High performance types, such as <ph id="ph1">&lt;xref:System.Numerics.Vector?displayProperty=nameWithType&gt;</ph> and <bpt id="p1">[</bpt>Pipelines<ept id="p1">](https://devblogs.microsoft.com/dotnet/system-io-pipelines-high-performance-io-in-net/)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>.NET Core provides compatibility with .NET Framework and Mono APIs by implementing the <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](../standard/net-standard.md)</ept> specification.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Multiple frameworks have been built on top of .NET Core:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET Core<ept id="p1">](/aspnet/core/)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows 10 Universal Windows Platform (UWP)<ept id="p1">](https://developer.microsoft.com/windows)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tizen<ept id="p1">](https://developer.tizen.org/development/training/.net-application)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Composition</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>.NET Core is composed of the following parts:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Core runtime<ept id="p1">](https://github.com/dotnet/coreclr)</ept>, which provides a type system, assembly loading, a garbage collector, native interop and other basic services.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core framework libraries<ept id="p1">](https://github.com/dotnet/corefx)</ept> provide primitive data types, app composition types and fundamental utilities.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ASP.NET runtime<ept id="p1">](https://github.com/aspnet/home)</ept>, which provides a framework for building modern cloud based internet connected applications, such as web apps, IoT apps and mobile backends.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Core CLI tools<ept id="p1">](https://github.com/dotnet/cli)</ept> and language compilers (<bpt id="p2">[</bpt>Roslyn<ept id="p2">](https://github.com/dotnet/roslyn)</ept> and <bpt id="p3">[</bpt>F#<ept id="p3">](https://github.com/microsoft/visualfsharp)</ept>) that enable the .NET Core developer experience.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>dotnet tool<ept id="p1">](https://github.com/dotnet/core-setup)</ept>, which is used to launch .NET Core apps and CLI tools.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It selects the runtime and hosts the runtime, provides an assembly loading policy and launches apps and tools.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>These components are distributed in the following ways:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Runtime<ept id="p1">](https://www.microsoft.com/net/download/dotnet-core/2.1)</ept> -- includes the .NET Core runtime and framework libraries.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET Core Runtime<ept id="p1">](https://www.microsoft.com/net/download/dotnet-core/2.1)</ept> -- includes ASP.NET Core and .NET Core runtime and framework libraries.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core SDK<ept id="p1">](https://www.microsoft.com/net/download/dotnet-core/2.1)</ept> -- includes the .NET CLI Tools, ASP.NET Core runtime, and .NET Core runtime and framework.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open Source</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> is open source (<bpt id="p2">[</bpt>MIT license<ept id="p2">](https://github.com/dotnet/core/blob/master/LICENSE.TXT)</ept>) and was contributed to the <bpt id="p3">[</bpt>.NET Foundation<ept id="p3">](https://dotnetfoundation.org)</ept> by Microsoft in 2014.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It is now one of the most active .NET Foundation projects.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It can be freely adopted by individuals and companies, including for personal, academic or commercial purposes.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Multiple companies use .NET Core as part of apps, tools, new platforms and hosting services.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Some of these companies make significant contributions to .NET Core on GitHub and provide guidance on the product direction as part of the <bpt id="p1">[</bpt>.NET Foundation Technical Steering Group<ept id="p1">](https://dotnetfoundation.org/blog/tsg-welcome)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Designed for Adaptability</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>.NET Core has been built as a very similar but unique product relative to other .NET products.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It has been designed to enable broad adaptability to new platforms and workloads.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It has several OS and CPU ports available and may be ported to many more.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The product is broken into several pieces, enabling the various parts to be adapted to new platforms at different times.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The runtime and platform-specific foundational libraries must be ported as a unit.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Platform-agnostic libraries should work as-is on all platforms, by construction.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>There is a project bias to reducing platform-specific implementations to increase developer efficiency, preferring platform-neutral C# code whenever an algorithm or API can be implemented in-full or in-part that way.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>People commonly ask how .NET Core is implemented in order to support multiple operating systems.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>They typically ask if there are separate implementations or if <bpt id="p1">[</bpt>conditional compilation<ept id="p1">](https://en.wikipedia.org/wiki/Conditional_compilation)</ept> is used.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>It's both, with a strong bias towards conditional compilation.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can see in the chart below that the vast majority of <bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/corefx)</ept> is platform-neutral code that is shared across all platforms.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Platform-neutral code can be implemented as a single portable assembly that is used on all platforms.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CoreFX: Lines of Code per Platform</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Windows and Unix implementations are similar in size.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Windows has a larger implementation since CoreFX implements some Windows-only features, such as <bpt id="p1">[</bpt>Microsoft.Win32.Registry<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/Microsoft.Win32.Registry)</ept> but does not yet implement many Unix-only concepts.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You will also see that the majority of the Linux and macOS implementations are shared across a Unix implementation, while the Linux- and macOS-specific implementations are roughly similar in size.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>There are a mix of platform-specific and platform-neutral libraries in .NET Core.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can see the pattern in a few examples:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> is platform-specific.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It builds on top of OS subsystems, like the memory manager and thread scheduler.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IO<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/System.IO)</ept> and <bpt id="p2">[</bpt>System.Security.Cryptography.Algorithms<ept id="p2">](https://github.com/dotnet/corefx/tree/master/src/System.Security.Cryptography.Algorithms)</ept> are platform-specific, given that storage and cryptography APIs are different on each OS.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/System.Collections)</ept> and <bpt id="p2">[</bpt>System.Linq<ept id="p2">](https://github.com/dotnet/corefx/tree/master/src/System.Linq)</ept> are platform-neutral, given that they create and operate over data structures.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Comparisons to other .NET implementations</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It is perhaps easiest to understand the size and shape of .NET Core by comparing it to existing .NET implementations.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Comparison with .NET Framework</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>.NET was first announced by Microsoft in 2000 and then evolved from there.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The .NET Framework has been the primary .NET implementation produced by Microsoft during that nearly two decade period.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The major differences between .NET Core and the .NET Framework:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App-models<ept id="p1">**</ept> -- .NET Core does not support all the .NET Framework app-models.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In particular, it doesn't support ASP.NET Web Forms and ASP.NET MVC, but it supports ASP.NET Core MVC.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It was announced that <bpt id="p1">[</bpt>.NET Core 3 will support WPF and Windows Forms<ept id="p1">](https://devblogs.microsoft.com/dotnet/net-core-3-and-support-for-windows-desktop-applications/)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>APIs<ept id="p1">**</ept> -- .NET Core contains a large subset of .NET Framework Base Class Library, with a different factoring (assembly names are different; members exposed on types differ in key cases).</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>These differences require changes to port source to .NET Core in some cases (see <bpt id="p1">[</bpt>microsoft/dotnet-apiport<ept id="p1">](https://github.com/microsoft/dotnet-apiport)</ept>).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>.NET Core implements the <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](../standard/net-standard.md)</ept> API specification.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Subsystems<ept id="p1">**</ept> -- .NET Core implements a subset of the subsystems in the .NET Framework, with the goal of a simpler implementation and programming model.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, Code Access Security (CAS) is not supported, while reflection is supported.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms<ept id="p1">**</ept> -- The .NET Framework supports Windows and Windows Server while .NET Core also supports macOS and Linux.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open Source<ept id="p1">**</ept> -- .NET Core is open source, while a <bpt id="p2">[</bpt>read-only subset of the .NET Framework<ept id="p2">](https://github.com/microsoft/referencesource)</ept> is open source.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>While .NET Core is unique and has significant differences to the .NET Framework and other .NET implementations, it is straightforward to share code between these implementations, using either source or binary sharing techniques.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Comparison with Mono</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mono<ept id="p1">](https://www.mono-project.com/)</ept> is the original cross-platform and <bpt id="p2">[</bpt>open source<ept id="p2">](https://github.com/mono/mono)</ept> .NET implementation, first shipping in 2004.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It can be thought of as a community clone of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The Mono project team relied on the open <bpt id="p1">[</bpt>.NET standards<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> (notably ECMA 335) published by Microsoft in order to provide a compatible implementation.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The major differences between .NET Core and Mono:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App-models<ept id="p1">**</ept> -- Mono supports a subset of the .NET Framework app-models (for example, Windows Forms) and some additional ones (for example, <bpt id="p2">[</bpt>Xamarin.iOS<ept id="p2">](https://www.xamarin.com/platform)</ept>) through the Xamarin product.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>.NET Core doesn't support these.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>APIs<ept id="p1">**</ept> -- Mono supports a <bpt id="p2">[</bpt>large subset<ept id="p2">](http://docs.go-mono.com/?link=root%3a%2fclasslib)</ept> of the .NET Framework APIs, using the same assembly names and factoring.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms<ept id="p1">**</ept> -- Mono supports many platforms and CPUs.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open Source<ept id="p1">**</ept> -- Mono and .NET Core both use the MIT license and are .NET Foundation projects.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Focus<ept id="p1">**</ept> -- The primary focus of Mono in recent years is mobile platforms, while .NET Core is focused on cloud and desktop workloads.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>