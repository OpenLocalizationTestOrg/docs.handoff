<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df159b1ab3f7c16564ce493a585246c4c461a8f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\thread-safe\how-to-add-bounding-and-blocking.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a310b830bc04e8dbc6f0f0707f80c044167f27d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a23102a62ac285283d8f8e72afadcbe1daaec5c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Add Bounding and Blocking Functionality to a Collection | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Add Bounding and Blocking Functionality to a Collection</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to add bounding and blocking functionality to a custom collection class by implementing the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=fullName&gt;</ph> interface in the class, and then using a class instance as the internal storage mechanism for a <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about bounding and blocking, see <bpt id="p1">[</bpt>BlockingCollection Overview<ept id="p1">](../../../../docs/standard/collections/thread-safe/blockingcollection-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The custom collection class is a basic priority queue in which the priority levels are represented as an array of <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=fullName&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>No additional ordering is performed within each queue.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the client code, three tasks are started.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The first task just polls for keyboard strokes to enable cancellation at any point during execution.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The second task is the producer thread; it adds new items to the blocking collection and gives each item a priority based on a random value.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The third task removes items from the collection as they become available.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can adjust the behavior of the application by making one of the threads run faster than the other.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the producer runs faster, you will notice the bounding functionality as the blocking collection prevents items from being added if it already contains the number of items that is specified in the constructor.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the consumer runs faster, you will notice the blocking functionality as the consumer waits for a new item to be added.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CDS_BlockingCollection#06<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Misc/cds_blockingcollection/cs/prodcon.cs#06)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By default, the storage for a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601?displayProperty=fullName&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](../../../../docs/standard/collections/thread-safe/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>