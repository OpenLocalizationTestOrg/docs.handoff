<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerinfo4-getcodeinfo3-method.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afafb6323164912135311fd344ca8d6223715808</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerinfo4-getcodeinfo3-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b6597d955f8fffc75f1602c2b60dc8e65c9d13e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73bb8d14957e59601fa3019babb0db367b34d122</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerInfo4::GetCodeInfo3 Method | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerInfo4::GetCodeInfo3 Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the extents of native code associated with the JIT-recompiled version of the specified function.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] The ID of the function with which the native code is associated.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in] The identity of the JIT-recompiled function.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>[in] The size of the <ph id="ph1">`codeInfos`</ph> array.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the total number of <bpt id="p1">[</bpt>COR_PRF_CODE_INFO<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-code-info-structure.md)</ept> structures available.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[out] A caller-provided buffer.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>After the method returns, it contains an array of <ph id="ph1">`COR_PRF_CODE_INFO`</ph> structures, each of which describes a block of native code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetCodeInfo3`</ph> method is similar to <bpt id="p1">[</bpt>GetCodeInfo2<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcodeinfo2-method.md)</ept>, except that it will get the JIT-recompiled ID of the function that contains the specified IP address.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetCodeInfo3`</ph> can trigger a garbage collection, whereas <bpt id="p1">[</bpt>GetCodeInfo2<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcodeinfo2-method.md)</ept> will not.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>CORPROF_E_UNSUPPORTED_CALL_SEQUENCE<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/corprof-e-unsupported-call-sequence-hresult.md)</ept> HRESULT.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The extents are sorted in order of increasing Common Intermediate Language (CIL) offset.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After <ph id="ph1">`GetCodeInfo3`</ph> returns, you must verify that the <ph id="ph2">`codeInfos`</ph> buffer was large enough to contain all the <bpt id="p1">[</bpt>COR_PRF_CODE_INFO<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-code-info-structure.md)</ept> structures.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To do this, compare the value of <ph id="ph1">`cCodeInfos`</ph> with the value of the <ph id="ph2">`cchName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`cCodeInfos`</ph> divided by the size of a <bpt id="p1">[</bpt>COR_PRF_CODE_INFO<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-code-info-structure.md)</ept> structure is smaller than <ph id="ph2">`pcCodeInfos`</ph>, allocate a larger <ph id="ph3">`codeInfos`</ph> buffer, update <ph id="ph4">`cCodeInfos`</ph> with the new, larger size, and call <ph id="ph5">`GetCodeInfo3`</ph> again.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Alternatively, you can first call <ph id="ph1">`GetCodeInfo3`</ph> with a zero-length <ph id="ph2">`codeInfos`</ph> buffer to obtain the correct buffer size.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can then set the <ph id="ph1">`codeInfos`</ph> buffer size to the value returned in <ph id="ph2">`pcCodeInfos`</ph>, multiplied by the size of a <bpt id="p1">[</bpt>COR_PRF_CODE_INFO<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-code-info-structure.md)</ept> structure, and call <ph id="ph3">`GetCodeInfo3`</ph> again.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetCodeInfo2 Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcodeinfo2-method.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo4 Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>