<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c3e42ec8543d30336f8d8bb723f4f0efa7202cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\hosting\iclrtask-interface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23d34e1b141122b420d428bfe400ea3623dddbde</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d96f29f3224468aedee401b6dd7b68138a39820</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ICLRTask Interface | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICLRTask Interface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides methods that allow the host to make requests of the common language runtime (CLR), or to provide notification to the CLR about the associated task.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Abort Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-abort-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Requests that the CLR abort the task that the current <ph id="ph1">`ICLRTask`</ph> instance represents.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ExitTask Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-exittask-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Notifies the CLR that the task associated with the current <ph id="ph1">`ICLRTask`</ph> instance is ending, and attempts to shut the task down gracefully.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetMemStats Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-getmemstats-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets statistical information on the use of memory resources by the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LocksHeld Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-locksheld-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the number of locks currently held on the task.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NeedsPriorityScheduling Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-needspriorityscheduling-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the host should assign a high priority to rescheduling the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reset Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-reset-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Informs the CLR that the host has completed a task, and enables the CLR to reuse the current <ph id="ph1">`ICLRTask`</ph> instance to represent another task.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RudeAbort Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-rudeabort-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Causes the CLR to abort the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance immediately, without a guarantee that finalizers will be executed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetTaskIdentifier Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-settaskidentifier-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Sets a unique identifier for the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance, for use in debugging.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SwitchIn Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-switchin-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Notifies the CLR that the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance is in an operable state.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SwitchOut Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-switchout-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Notifies the CLR that the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance is no longer in an operable state.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>YieldTask Method<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-yieldtask-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Requests that the CLR make processor time available to other tasks.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The CLR makes no guarantee that the task will be put in a state where it can yield processing time.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`ICLRTask`</ph> is the representation of a task for the CLR.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>At any point during code execution, a task can be described either as running or waiting to run.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The host calls the <ph id="ph1">`ICLRTask::SwitchIn`</ph> method to notify the CLR that the task that the current <ph id="ph2">`ICLRTask`</ph> instance represents is now in an operable state.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>After a call to <ph id="ph1">`ICLRTask::SwitchIn`</ph>, the host can schedule the task on any operating system thread, except in cases where the runtime requires thread-affinity, as specified by calls to the <bpt id="p1">[</bpt>IHostTaskManager::BeginThreadAffinity<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-beginthreadaffinity-method.md)</ept> and <bpt id="p2">[</bpt>IHostTaskManager::EndThreadAffinity<ept id="p2">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-endthreadaffinity-method.md)</ept> methods.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Some time later, the operating system might decide to remove the task from the thread and place it in a non-running state.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, this might happen whenever the task blocks on synchronization primitives, or waits for I/O operations to complete.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The host calls <bpt id="p1">[</bpt>SwitchOut<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-switchout-method.md)</ept> to notify the CLR that the task represented by the current <ph id="ph1">`ICLRTask`</ph> instance is no longer in an operable state.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A task typically terminates at the end of code execution.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>At that time, the host calls <ph id="ph1">`ICLRTask::ExitTask`</ph> to destroy the associated <ph id="ph2">`ICLRTask`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, tasks can also be recycled by using a call to <ph id="ph1">`ICLRTask::Reset`</ph>, which allows the <ph id="ph2">`ICLRTask`</ph> instance to be used again.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This approach prevents the overhead of repeatedly creating and destroying instances.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> MSCorEE.h</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> Included as a resource in MSCorEE.dll</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICLRTaskManager Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IHostTask Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IHostTaskManager Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hosting Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ICLRTask2 Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask2-interface.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>