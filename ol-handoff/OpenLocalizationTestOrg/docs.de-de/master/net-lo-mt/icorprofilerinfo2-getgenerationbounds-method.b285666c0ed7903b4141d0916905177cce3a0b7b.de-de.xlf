<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerinfo2-getgenerationbounds-method.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d553890d7be321e6e224347e78d59d350457e060</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerinfo2-getgenerationbounds-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9e996489cb5b67afe379115c3c3b603790baa88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69f5c3f2df374b4bebc435b6e6cfd6f2b065ab5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerInfo2::GetGenerationBounds Method | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerInfo2::GetGenerationBounds Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the memory regions, which are segments of the heap, that make up the various garbage collection generations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] The number of elements allocated by the caller for the <ph id="ph1">`ranges`</ph> array.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[out] A pointer to an integer that specifies the total number of ranges, some or all of which will be returned in the <ph id="ph1">`ranges`</ph> array.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>[out] An array of <bpt id="p1">[</bpt>COR_PRF_GC_GENERATION_RANGE<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-gc-generation-range-structure.md)</ept> structures, each of which describes a range (that is, block) of memory within the generation that is undergoing garbage collection.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetGenerationBounds`</ph> method can be called from any profiler callback, provided that garbage collection is not in progress.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>That is, it can be called from any callback except those that occur between <bpt id="p1">[</bpt>ICorProfilerCallback2::GarbageCollectionStarted<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback2-garbagecollectionstarted-method.md)</ept> and <bpt id="p2">[</bpt>ICorProfilerCallback2::GarbageCollectionFinished<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback2-garbagecollectionfinished-method.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Most shifting of generations takes place during garbage collections.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Generations might grow between collections but generally do not move around.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Therefore, the most interesting places to call <ph id="ph1">`GetGenerationBounds`</ph> are in <ph id="ph2">`ICorProfilerCallback2::GarbageCollectionStarted`</ph> and <ph id="ph3">`ICorProfilerCallback2::GarbageCollectionFinished`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>During program startup, some objects are allocated by the common language runtime (CLR) itself, generally in generations 3 and 0.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Thus, by the time managed code starts executing, these generations will already contain objects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Generations 1 and 2 will normally be empty, except for dummy objects that are generated by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>(The size of dummy objects is 12 bytes in 32-bit implementations of the CLR; the size is larger in 64-bit implementations.) You might also see generation 2 ranges that are inside modules produced by the Native Image Generator (NGen.exe).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this case, the objects in generation 2 are <bpt id="p1">*</bpt>frozen objects<ept id="p1">*</ept>, which are allocated when NGen.exe runs rather than by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This function uses caller-allocated buffers.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo2 Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>