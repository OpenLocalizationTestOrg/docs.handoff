<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76f1f875d05eda430270d9133f1c232acc9d604a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\variables\how-to-access-members-of-an-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb06a1426cc9fb6cf9fe897096fbb1079f0b25d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46b853abcda9416048707618cd46b5dcf890cb7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Access Members of an Object (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Access Members of an Object (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you have an object variable that refers to an object, you often want to work with the members of that object, such as its methods, properties, fields, and events.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, once you have created a new <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> object, you might want to set its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property or call its <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Accessing Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You access an object's members through the variable that refers to it.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To access members of an object</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the member-access operator (<ph id="ph1">`.`</ph>) between the object variable name and the member name.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the member is <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept>, you do not need a variable to access it.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Accessing Members of an Object of Known Type</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you know the type of an object at compile time, you can use <bpt id="p1">*</bpt>early binding<ept id="p1">*</ept> for a variable that refers to it.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To access members of an object for which you know the type at compile time</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Declare the object variable to be of the type of the object you intend to assign to the variable.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With <ph id="ph1">`Option Strict On`</ph>, you can assign only <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> objects (or objects of a type derived from <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>) to <ph id="ph4">`extraForm`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you have defined a class or structure with a widening <ph id="ph1">`CType`</ph> conversion to <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>, you can also assign that class or structure to <ph id="ph3">`extraForm`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use the member-access operator (<ph id="ph1">`.`</ph>) between the object variable name and the member name.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can access all of the methods and properties specific to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, no matter what the <ph id="ph2">`Option Strict`</ph> setting is.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Accessing Members of an Object of Unknown Type</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you do not know the type of an object at compile time, you must use <bpt id="p1">*</bpt>late binding<ept id="p1">*</ept> for any variable that refers to it.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To access members of an object for which you do not know the type at compile time</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Declare the object variable to be of the <bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(Declaring a variable as <ph id="ph1">`Object`</ph> is the same as declaring it as <ph id="ph2">&lt;xref:System.Object?displayProperty=fullName&gt;</ph>.)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>With <ph id="ph1">`Option Strict On`</ph>, you can access only the members that are defined on the <ph id="ph2">&lt;xref:System.Object&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use the member-access operator (<ph id="ph1">`.`</ph>) between the object variable name and the member name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be able to access the members of any object you assign to the object variable, you must set <ph id="ph1">`Option Strict Off`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you do this, the compiler cannot guarantee that a given member is exposed by the object you assign to the variable.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the object does not expose a member you attempt to access, a <ph id="ph1">&lt;xref:System.MemberAccessException&gt;</ph> exception occurs.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Object&gt;</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.MemberAccessException&gt;</ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>