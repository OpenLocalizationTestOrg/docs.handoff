<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="query-expression-syntax-examples-projection.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">399b30122bcb0d1512fb78127945ecfdbe6719f2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\query-expression-syntax-examples-projection.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b93c20b69ef67e168d746d7a72d47b09eae479d4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48952d36c3da53cdbb6db9042e124475a0597a74</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Query Expression Syntax Examples: Projection | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Expression Syntax Examples: Projection</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The examples in this topic demonstrate how to use the <ph id="ph1">`Select`</ph> method and the <ph id="ph2">`From … From …`</ph> keywords to query the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832)</ept> using query expression syntax.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`From … From …`</ph> is the query based equivalent of the <ph id="ph2">`SelectMany`</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The AdventureWorks Sales model used in these examples is built from the Contact, Address, Product, SalesOrderHeader, and SalesOrderDetail tables in the AdventureWorks sample database.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The examples in this topic use the following <ph id="ph1">`using`</ph><ph id="ph2">/</ph><ph id="ph3">`Imports`</ph> statements:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Select</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Select%2A&gt;</ph> method to return all the rows from the <ph id="ph2">`Product`</ph> table and display the product names.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Linq.Enumerable.Select%2A&gt;</ph> to return a sequence of only product names.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Linq.Queryable.Select%2A&gt;</ph> method to project the <ph id="ph2">`Product.Name`</ph> and <ph id="ph3">`Product.ProductID`</ph> properties into a sequence of anonymous types.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>From …</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>From …</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(SelectMany)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example uses <ph id="ph1">`From … From …`</ph> (the equivalent of the <ph id="ph2">&lt;xref:System.Linq.Enumerable.SelectMany%2A&gt;</ph> method) to select all orders where <ph id="ph3">`TotalDue`</ph> is less than 500.00.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example uses <ph id="ph1">`From … From …`</ph> (the equivalent of the <ph id="ph2">&lt;xref:System.Linq.Enumerable.SelectMany%2A&gt;</ph> method) to select all orders where the order was made on October 1, 2002 or later.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">`From … From …`</ph> (the equivalent of the <ph id="ph2">&lt;xref:System.Linq.Enumerable.SelectMany%2A&gt;</ph> method) to select all orders where the order total is greater than 10000.00 and uses <ph id="ph3">`From`</ph> assignment to avoid requesting the total twice.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Queries in LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/queries-in-linq-to-entities.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>