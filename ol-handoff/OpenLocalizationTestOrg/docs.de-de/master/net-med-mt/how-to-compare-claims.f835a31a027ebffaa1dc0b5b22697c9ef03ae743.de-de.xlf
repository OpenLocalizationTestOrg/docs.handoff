<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-compare-claims.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">132a01db0bf4c118b964fac3ab0aa06e2a2ee1a7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-compare-claims.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78a55bf100cf8b4c44bb958bd101256349b07dd6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dee408a2f6559db24a1434003ba9222529e42e2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Compare Claims | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Compare Claims</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Identity Model infrastructure in <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> is used to perform authorization checking.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As such, a common task is to compare claims in the authorization context to the claims required to perform the requested action or access the requested resource.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes how to compare claims, including built-in and custom claim types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> the Identity Model infrastructure, see <bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Claim comparison involves comparing the three parts of a claim (type, right, and resource) against the same parts in another claim to see if they are equal.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>See the following example.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Both claims have a claim type of <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimTypes.Name%2A&gt;</ph>, a right of <ph id="ph2">&lt;xref:System.IdentityModel.Claims.Rights.PossessProperty%2A&gt;</ph>, and a resource of the string "someone".</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As all three parts of the claim are equal, the claims themselves are equal.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The built-in claim types are compared using the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Claim-specific comparison code is used where necessary.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, given the following two user principal name (UPN) claims:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>the comparison code in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, assuming <ph id="ph3">`example\someone`</ph> identifies the same domain user as "<ph id="ph4">someone@example.com</ph>".</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Custom claim types can also be compared using the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, in cases where the type returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.Resource%2A&gt;</ph> property of the claim is something other than a primitive type, the <ph id="ph2">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> returns <ph id="ph3">`true`</ph> only if the values returned by the <ph id="ph4">`Resource`</ph> properties are equal according to the <ph id="ph5">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In cases where this is not appropriate, the custom type returned by the <ph id="ph1">`Resource`</ph> property should override the <ph id="ph2">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> methods to perform whatever custom processing is necessary.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Comparing built-in claims</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Given two instances of the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> class, use the <ph id="ph2">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> to make the comparison, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Comparing custom claims with primitive resource types</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For custom claims with primitive resource types, comparison can be performed as for built-in claims, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For custom claims with structure or class based resource types, the resource type should override the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>First check whether the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, and if so, return <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Next call <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A&gt;</ph> and pass <ph id="ph2">`this`</ph> and <ph id="ph3">`obj`</ph> as parameters.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If it returns <ph id="ph1">`true`</ph>, then return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Next attempt to assign <ph id="ph1">`obj`</ph> to a local variable of the class type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If this fails, the reference is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In such cases, return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Perform the custom comparison necessary to correctly compare the current claim to the provided claim.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows a comparison of custom claims where the claim resource is a non-primitive type.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Custom Claim<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>