<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59f56f608fa06d7b8978fc5fee782a613e62b807</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\how-to-make-a-uielement-transparent-or-semi-transparent.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d829650264dc10c8b14ffcad7ed525b98dfafde1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf37afee4d7105ed1d672a7fbd5847e8949f9a5c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Make a UIElement Transparent or Semi-Transparent | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Make a UIElement Transparent or Semi-Transparent</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to make a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> transparent or semi-transparent.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To make an element transparent or semi-transparent, you set its <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A value of <ph id="ph1">`0.0`</ph> makes the element completely transparent, while a value of <ph id="ph2">`1.0`</ph> makes the element completely opaque.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A value of <ph id="ph1">`0.5`</ph> makes the element 50% opaque, and so on.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An element's <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> is set to <ph id="ph2">`1.0`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> of a button to <ph id="ph2">`0.25`</ph>, making it and its contents (in this case, the button's text) 25% opaque.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>brushsamples_snip#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_snip/CS/OpacityExample.xaml#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>brushsamples_procedural_snip#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_procedural_snip/CSharp/OpacityExample.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If an element's contents have their own <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> settings, those values are multiplied against the containing elements <ph id="ph2">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example sets a button's <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> to <ph id="ph2">`0.25`</ph>, and the <ph id="ph3">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> of an <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> control contained with in the button to <ph id="ph5">`0.5`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As a result, the image appears 12.5% opaque: 0.25 * 0.5 = 0.125.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>brushsamples_snip#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_snip/CS/OpacityExample.xaml#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>brushsamples_procedural_snip#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_procedural_snip/CSharp/OpacityExample.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Another way to control the opacity of an element is to set the opacity of the <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph> that paints the element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This approach enables you to selectively alter the opacity of portions of an element, and provides performance benefits over using the element's <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Media.Brush.Opacity%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> used to paint the button's <ph id="ph3">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> is set to <ph id="ph4">`0.25`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As a result, the brush's background is 25% opaque, but its contents (the button's text) remain 100% opaque.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>brushsamples_snip#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_snip/CS/OpacityExample.xaml#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>brushsamples_procedural_snip#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_procedural_snip/CSharp/OpacityExample.cs#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You may also control the opacity of individual colors within a brush.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information about colors and brushes, see <bpt id="p1">[</bpt>Painting with Solid Colors and Gradients Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For an example showing how to animate an element's opacity, see <bpt id="p1">[</bpt>Animate the Opacity of an Element or Brush<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/how-to-animate-the-opacity-of-an-element-or-brush.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>