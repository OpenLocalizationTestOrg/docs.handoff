<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">504d257429842afbb6e50b9d8fb2985b4a3660f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\more-secure-file-and-data-access-in-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f03d1e625895521a1dbfef1050c8752c4e870efb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4319a45781d14c062e8c4029bce6562677e70560</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>More Secure File and Data Access in Windows Forms | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>More Secure File and Data Access in Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> uses permissions to help protect resources and data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Where your application can read or write data depends on the permissions granted to the application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When your application runs in a partial trust environment, you might not have access to your data or you might have to change the way you access the data.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When you encounter a security restriction, you have two options: assert the permission (assuming it has been granted to your application), or use a version of the feature written to work in partial trust.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following sections discuss how to work with file, database, and registry access from applications that are running in a partial trust environment.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By default, tools that generate <ph id="ph1">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> deployments default these deployments to requesting Full Trust from the computers on which they run.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you decide you want the added security benefits of running in partial trust, you must change this default in either <ph id="ph1">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph> or one of the <ph id="ph2">[!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]</ph> tools (Mage.exe or MageUI.exe).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about Windows Forms security, and on how to determine the appropriate trust level for your application, see <bpt id="p1">[</bpt>Security in Windows Forms Overview<ept id="p1">](../../../docs/framework/winforms/security-in-windows-forms-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>File Access</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> class controls file and folder access in the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, the security system does not grant the <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> to partial trust environments such as the local intranet and Internet zones.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, an application that requires file access can still function in these environments if you modify the design of your application or use different methods to access files.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, the local intranet zone is granted the right to have same site access and same directory access, to connect back to the site of its origin, and to read from its installation directory.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By default, the Internet zone, is only granted the right to connect back to the site of its origin.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>User-Specified Files</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>One way to deal with not having file access permission is to prompt the user to provide specific file information by using the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This user interaction helps provide some assurance that the application cannot maliciously load private files or overwrite important files.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.SaveFileDialog.OpenFile%2A&gt;</ph> methods provide read and write file access by opening the file stream for the file that the user specified.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The methods also help protect the user's file by obscuring the file's path.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These permissions differ depending on whether your application is in the Internet zone or Intranet zone.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Internet zone applications can only use the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>, whereas Intranet applications have unrestricted file dialog permission.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.FileDialogPermission&gt;</ph> class specifies what type of file dialog box your application can use.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following table shows the value you must have to use each <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Class</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Required access value</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The specific permission is not requested until the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method is actually called.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Permission to display a file dialog box does not grant your application full access to all members of the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For the exact permissions that are required to call each method, see the reference topic for that method in the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> class library documentation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method to open a user-specified file into a <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The example requires <ph id="ph1">&lt;xref:System.Security.Permissions.FileDialogPermission&gt;</ph> and the associated <ph id="ph2">&lt;xref:System.Security.Permissions.FileDialogPermissionAttribute.Open%2A&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> to determine whether the save feature should be disabled.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example requires that your <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control named <ph id="ph3">`ButtonOpen`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control named <ph id="ph5">`RtfBoxMain`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The programming logic for the save feature is not shown in the example.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[csprcs](../../../includes/csprcs-md.md)]</ph>, ensure that you add code to enable the event handler.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>By using the code from the previous example, the following code shows how to enable the event handler.<ph id="ph1">`this.ButtonOpen.Click += newSystem.Windows.Forms.EventHandler(this.ButtonOpen_Click);`</ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Other Files</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sometimes you will need to read or write to files that the user does not specify, such as when you must persist application settings.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the local intranet and Internet zones, your application will not have permission to store data in a local file.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, your application will be able to store data in isolated storage.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Isolated storage is an abstract data compartment (not a specific storage location) that contains one or more isolated storage files, called stores, that contain the actual directory locations where data is stored.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>File access permissions like <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> are not required; instead, the <ph id="ph2">&lt;xref:System.Security.Permissions.IsolatedStoragePermission&gt;</ph> class controls the permissions for isolated storage.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>By default, applications that are running in the local intranet and Internet zones can store data using isolated storage; however, settings like disk quota can vary.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information about isolated storage, see <bpt id="p1">[</bpt>Isolated Storage<ept id="p1">](../../../docs/standard/io/isolated-storage.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example uses isolated storage to write data to a file located in a store.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The example requires <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> and the <ph id="ph2">&lt;xref:System.Security.Permissions.IsolatedStorageContainment&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The example demonstrates reading and writing certain property values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to a file in isolated storage.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Read`</ph> function would be called after the application starts and the <ph id="ph2">`Write`</ph> function would be called before the application ends.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The example requires that the <ph id="ph1">`Read`</ph> and <ph id="ph2">`Write`</ph> functions exist as members of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph>control named <ph id="ph5">`MainButton`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Database Access</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The permissions required to access a database vary based on the database provider; however, only applications that are running with the appropriate permissions can access a database through a data connection.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about the permissions that are required to access a database, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](../../../docs/framework/data/adonet/code-access-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you cannot directly access a database because you want your application to run in partial trust, you can use a Web service as an alternative means to access your data.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A Web service is a piece of software that can be programmatically accessed over a network.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>With Web services, applications can share data across code group zones.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>By default, applications in the local intranet and Internet zones are granted the right to access their sites of origin, which enables them to call a Web service hosted on the same server.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Web Services in ASP.NET AJAX<ept id="p1">](http://msdn.microsoft.com/en-us/8290e543-7eff-47a4-aace-681f3c07229b)</ept> or <bpt id="p2">[</bpt>Windows Communication Foundation<ept id="p2">](http://msdn.microsoft.com/library/ms735119.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Registry Access</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> class controls access to the operating system registry.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>By default, only applications that are running locally can access the registry.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> only grants an application the right to try registry access; it does not guarantee access will succeed, because the operating system still enforces security on the registry.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Because you cannot access the registry under partial trust, you may need to find other methods of storing your data.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When you store application settings, use isolated storage instead of the registry.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Isolated storage can also be used to store other application-specific files.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also store global application information about the server or site of origin, because by default an application is granted the right to access the site of its origin.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>More Secure Printing in Windows Forms<ept id="p1">](../../../docs/framework/winforms/more-secure-printing-in-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Additional Security Considerations in Windows Forms<ept id="p1">](../../../docs/framework/winforms/additional-security-considerations-in-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Security in Windows Forms Overview<ept id="p1">](../../../docs/framework/winforms/security-in-windows-forms-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Windows Forms Security<ept id="p1">](../../../docs/framework/winforms/windows-forms-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Mage.exe (Manifest Generation and Editing Tool)<ept id="p1">](../../../docs/framework/tools/mage-exe-manifest-generation-and-editing-tool.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>MageUI.exe (Manifest Generation and Editing Tool, Graphical Client)<ept id="p1">](../../../docs/framework/tools/mageui-exe-manifest-generation-and-editing-tool-graphical-client.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>