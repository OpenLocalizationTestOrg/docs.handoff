<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-custom-security-token-authenticator.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d33a65b7f655674ad3b95e848a075965615b2cc3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-create-a-custom-security-token-authenticator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7dca1df45906201639a8b52da3ac101852703488</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">490df7e55e7168ab4a3a9f603d9d46d17cdf7ad1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a Custom Security Token Authenticator | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Custom Security Token Authenticator</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to create a custom security token authenticator and how to integrate it with a custom security token manager.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A security token authenticator validates the content of a security token provided with an incoming message.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If the validation succeeds, the authenticator returns a collection of <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> instances that, when evaluated, returns a set of claims.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To use a custom security token authenticator in <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>, you must first create custom credentials and security token manager implementations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about creating custom credentials and a security token manager, see <bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information about credentials, security token manager, and provider and authenticator classes, see <bpt id="p1">[</bpt>Security Architecture<ept id="p1">](http://msdn.microsoft.com/en-us/16593476-d36a-408d-808c-ae6fd483e28f)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Procedures</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To create a custom security token authenticator</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Define a new class derived from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> depending on whether the custom authenticator can validate the incoming token type or not.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method needs to validate the token contents appropriately.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the token passes the validation step, it returns a collection of <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example uses a custom authorization policy implementation that will be created in the next procedure.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>C_CustomTokenAuthenticator#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>C_CustomTokenAuthenticator#1<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The previous code returns a collection of authorization policies in the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%28System.IdentityModel.Tokens.SecurityToken%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> does not provide a public implementation of this interface.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following procedure shows how to do so for your own requirements.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To create a custom authorization policy</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Define a new class implementing the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationComponent.Id%2A&gt;</ph> read-only property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One way to implement this property is to generate a globally unique identifier (GUID) in the class constructor and return it every time the value for this property is requested.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer%2A&gt;</ph> read-only property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This property needs to return an issuer of the claim sets that are obtained from the token.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This issuer should correspond to the issuer of the token or an authority that is responsible for validating the token contents.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example uses the issuer claim that passed to this class from the custom security token authenticator created in the previous procedure.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The custom security token authenticator uses the system-provided claim set (returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet.System%2A&gt;</ph> property) to represent the issuer of the username token.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This method populates an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> class (passed in as an argument) with claims that are based on the incoming security token content.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`true`</ph> when it is done with the evaluation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In cases when the implementation relies on the presence of other authorization policies that provide additional information to the evaluation context, this method can return <ph id="ph1">`false`</ph> if the required information is not present yet in the evaluation context.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In that case, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> will call the method again after evaluating all other authorization policies generated for the incoming message if at least one of those authorization policies modified the evaluation context.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomTokenAuthenticator#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CustomTokenAuthenticator#2<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept> describes how to create custom credentials and a custom security token manager.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To use the custom security token authenticator created here, an implementation of the security token manager is modified to return the custom authenticator from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The method returns an authenticator when an appropriate security token requirement is passed in.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To integrate a custom security token authenticator with a custom security token manager</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%2A&gt;</ph> method in your custom security token manager implementation.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add logic to the method to enable it to return your custom security token authenticator based on the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example returns a custom security token authenticator if the token requirements token type is a user name (represented by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.UserName%2A&gt;</ph> property) and the message direction for which the security token authenticator is being requested is input (represented by the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MessageDirection&gt;</ph> field).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomTokenAuthenticator#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CustomTokenAuthenticator#3<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt;</ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Creating Custom Client and Service Credentials<ept id="p1">](../../../../docs/framework/wcf/extending/walkthrough-creating-custom-client-and-service-credentials.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Custom Security Token Provider<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-security-token-provider.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Architecture<ept id="p1">](http://msdn.microsoft.com/en-us/16593476-d36a-408d-808c-ae6fd483e28f)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>