<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="managing-the-data-service-context-wcf-data-services.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f72b3dfd756e2706bf679675855eefbb25697b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\managing-the-data-service-context-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc0c9dc97dfb7a4ee1fae761b3c3142872404d83</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d1d94403df57f49e7324fa0da5df9fc3610378e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Managing the Data Service Context (WCF Data Services) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Managing the Data Service Context (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class encapsulates operations that are supported against a specified data service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although <ph id="ph1">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> services are stateless, the context is not.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Therefore, you can use the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class to maintain state on the client between interactions with the data service in order to support features such as change management.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This class also manages identities and tracks changes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Merge Options and Identity Resolution</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> is executed, the entities in the response feed are materialized into objects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Object Materialization<ept id="p1">](../../../../docs/framework/data/wcf/object-materialization-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The way in which entries in a response message are materialized into objects is performed based on identity resolution and depends on the merge option under which the query was executed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When multiple queries or load requests are executed in the scope of a single <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, the <ph id="ph2">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client only tracks a single instance of an object that has a specific key value.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This key, which is used to perform identity resolution, uniquely identifies an entity.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, the client only materializes an entry in the response feed into an object for entities that are not already being tracked by the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This means that changes to objects already in the cache are not overwritten.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This behavior is controlled by specifying a <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> value for queries and load operations.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This option is specified by setting the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.MergeOption%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The default merge option value is <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This only materializes objects for entities that are not already being tracked, which means that existing objects are not overwritten.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Another way to prevent changes to objects on the client from being overwritten by updates from the data service is to specify <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you specify <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph>, values of objects on the client are replaced by the latest values from the entries in the response feed, even if changes have already been made to these objects.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> merge option is used, the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> cannot send changes made on client objects to the data service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>With this option, changes are always overwritten with values from the data service.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Managing Concurrency</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> supports optimistic concurrency that enables the data service to detect update conflicts.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The data service provider can be configured in such a way that the data service checks for changes to entities by using a concurrency token.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This token includes one or more properties of an entity type that are validated by the data service to determine whether a resource has changed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Concurrency tokens, which are included in the eTag header of requests to and responses from the data service, are managed for you by the <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Updating the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/updating-the-data-service-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> tracks changes made to objects that have been reported manually by using <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.AddObject%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A&gt;</ph>, or by a <ph id="ph5">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> method is called, the client sends changes back to the data service.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> can fail when data changes in the client conflict with changes in the data service.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When this occurs, you must query for the entity resource again to receive the update data.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To overwrite changes in the data service, execute the query using the <ph id="ph1">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph> merge option.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> again, the changes preserved on the client are persisted to the data service, as long as other changes have not already been made to the resource in the data service.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Saving Changes</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Changes are tracked in the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance but not sent to the server immediately.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After you are finished with the required changes for a specified activity, call <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> to submit all the changes to the data service.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceResponse&gt;</ph> object is returned after the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> operation is complete.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceResponse&gt;</ph> object includes a sequence of <ph id="ph2">&lt;xref:System.Data.Services.Client.OperationResponse&gt;</ph> objects that, in turn, contain a sequence of <ph id="ph3">&lt;xref:System.Data.Services.Client.EntityDescriptor&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.Services.Client.LinkDescriptor&gt;</ph> instances that represent the changes persisted or attempted.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When an entity is created or modified in the data service, the <ph id="ph1">&lt;xref:System.Data.Services.Client.EntityDescriptor&gt;</ph> includes a reference to the updated entity, including any server-generated property values, such as the generated <ph id="ph2">`ProductID`</ph> value in the previous example.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The client library automatically updates the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> object to have these new values.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For successful insert and update operations, the state property of the <ph id="ph1">&lt;xref:System.Data.Services.Client.EntityDescriptor&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Services.Client.LinkDescriptor&gt;</ph> object associated with the operation is set to <ph id="ph3">&lt;xref:System.Data.Services.Client.EntityStates&gt;</ph> and the new values are merged by using <ph id="ph4">&lt;xref:System.Data.Services.Client.MergeOption&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When an insert, update, or delete operation fails in the data service, the entity state remains the same as it was before <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph> was called, and the <ph id="ph2">&lt;xref:System.Data.Services.Client.OperationResponse.Error%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Services.Client.OperationResponse&gt;</ph> is set to an <ph id="ph4">&lt;xref:System.Data.Services.Client.DataServiceRequestException&gt;</ph> that contains information about the error.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Updating the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/updating-the-data-service-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Setting the HTTP Method for Updates</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By default, the .NET Framework client library sends updates to existing entities as MERGE requests.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A MERGE request updates selected properties of the entity; however the client always includes all properties in the MERGE request, even properties that have not changed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> protocol also supports sending PUT requests to update entities.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In a PUT request, an existing entity is essentially replaced with a new instance of the entity with property values from the client.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To use PUT requests, set the <ph id="ph1">&lt;xref:System.Data.Services.Client.SaveChangesOptions&gt;</ph> flag on the <ph id="ph2">&lt;xref:System.Data.Services.Client.SaveChangesOptions&gt;</ph> enumeration when calling <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A PUT request will behave differently than a MERGE request when the client does not know about all properties of the entity.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This might occur when projecting an entity type into a new type on the client.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It might also occur when new properties have been added to the entity in the service data model and the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> is set to <ph id="ph3">`true`</ph> to ignore such client mapping errors.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In these cases, a PUT request will reset any properties that are unknown to the client to their default values.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>POST Tunneling</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>By default, the client library sends create, read, update, and delete requests to an <ph id="ph1">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> service by using the corresponding HTTP methods of POST, GET, PUT/MERGE/PATCH, and DELETE.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This upholds the basic principles of Representational State Transfer (REST).</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>However, not every Web server implementation supports the full set of HTTP methods.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In some cases, the supported methods might be restricted to just GET and POST.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This can happen when an intermediary, like a firewall, blocks requests with certain methods.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Because the GET and POST methods are most often supported, <ph id="ph1">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph> prescribes a way to execute any unsupported HTTP methods by using a POST request.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Known as <bpt id="p1">*</bpt>method tunneling<ept id="p1">*</ept> or <bpt id="p2">*</bpt>POST tunneling<ept id="p2">*</ept>, this enables a client to send a POST request with the actual method specified in the custom <ph id="ph1">`X-HTTP-Method`</ph> header.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To enable POST tunneling for requests, set the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.UsePostTunneling%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Data Services Client Library<ept id="p1">](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Updating the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/updating-the-data-service-wcf-data-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Operations<ept id="p1">](../../../../docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Batching Operations<ept id="p1">](../../../../docs/framework/data/wcf/batching-operations-wcf-data-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>