<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="required-arguments-and-overload-groups.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c285f2b96711f9007028758ed330d76e832bb4cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\required-arguments-and-overload-groups.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1da3ab0daee7a08f38d0d8da5ad13ff900ce3834</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12f67b4f4fea51c23a64dd752ab07dcff712915f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Required Arguments and Overload Groups | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Required Arguments and Overload Groups</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Activities can be configured so that certain arguments are required to be bound for the activity to be valid for execution.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RequiredArgument`</ph> attribute is used to indicate that certain arguments on an activity are required and the <ph id="ph2">`OverloadGroup`</ph> attribute is used to group categories of required arguments together.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By using the attributes, activity authors can provide simple or complex activity validation configurations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using Required Arguments</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To use the <ph id="ph1">`RequiredArgument`</ph> attribute in an activity, indicate the desired arguments using <ph id="ph2">&lt;xref:System.Activities.RequiredArgumentAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this example, an <ph id="ph1">`Add`</ph> activity is defined that has two required arguments.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In XAML, required arguments are also indicated by using <ph id="ph1">&lt;xref:System.Activities.RequiredArgumentAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this example the <ph id="ph1">`Add`</ph> activity is defined by using three arguments and uses an <ph id="ph2">&lt;xref:System.Activities.Statements.Assign%601&gt;</ph> activity to perform the add operation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the activity is used and either of the required arguments is not bound the following validation error is returned.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Value for a required activity argument 'Operand1' was not supplied.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>about checking for and handling validation errors and warnings, see <bpt id="p1">[</bpt>Invoking Activity Validation<ept id="p1">](../../../docs/framework/windows-workflow-foundation/invoking-activity-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using Overload Groups</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Overload groups provide a method for indicating which combinations of arguments are valid in an activity.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Arguments are grouped together by using <ph id="ph1">&lt;xref:System.Activities.OverloadGroupAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each group is given a name that is specified by the <ph id="ph1">&lt;xref:System.Activities.OverloadGroupAttribute&gt;</ph>, The activity is valid when only one set of arguments in an overload group are bound.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the following example, taken from the <bpt id="p1">[</bpt>OverloadGroups<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/overloadgroups.md)</ept> sample, a <ph id="ph1">`CreateLocation`</ph> class is defined.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The objective of this activity is to specify a location in the US.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To do this, the user of the activity can specify the location using one of three groups of arguments.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To specify the valid combinations of arguments, three overload groups are defined.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`G1`</ph> contains the <ph id="ph2">`Latitude`</ph> and <ph id="ph3">`Longitude`</ph> arguments.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`G2`</ph> contains <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, and <ph id="ph4">`State`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`G3`</ph> contains <ph id="ph2">`Street`</ph> and <ph id="ph3">`Zip`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Name`</ph> is also a required argument, but it is not part of an overload group.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For this activity to be valid, <ph id="ph1">`Name`</ph> would have to be bound together with all of the arguments from one and only one overload group.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the following example, taken from the <bpt id="p1">[</bpt>Database Access Activities<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/database-access-activities.md)</ept> sample, there are two overload groups: <ph id="ph1">`ConnectionString`</ph> and <ph id="ph2">`ConfigFileSectionName`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For this activity to be valid, either the <ph id="ph1">`ProviderName`</ph> and <ph id="ph2">`ConnectionString`</ph> arguments must be bound, or the <ph id="ph3">`ConfigName`</ph> argument, but not both.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When defining an overload group:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An overload group cannot be a subset or an equivalent set of another overload group.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>There is one exception to this rule.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If an overload group is a subset of another overload group, and the subset contains only arguments where <ph id="ph1">`RequiredArgument`</ph> is <ph id="ph2">`false`</ph>, then the overload group is valid.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Overload groups can overlap but it is an error if the intersection of the groups contains all the required arguments of one or both of the overload groups.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the previous example the <ph id="ph1">`G2`</ph> and <ph id="ph2">`G3`</ph> overload groups overlapped, but because the intersection did not contain all the arguments of one or both of the groups this was valid.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When binding arguments in an overload group:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An overload group is considered bound if all the <ph id="ph1">`RequiredArgument`</ph> arguments in the group are bound.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If a group has zero <ph id="ph1">`RequiredArgument`</ph> arguments and at least one argument bound, then the group is considered bound.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It is a validation error if no overload groups are bound unless one overload group has no <ph id="ph1">`RequiredArgument`</ph> arguments in it.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It is an error to have more than one overload group bound, that is, all required arguments in one overload group are bound and any argument in another overload group is also bound.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>