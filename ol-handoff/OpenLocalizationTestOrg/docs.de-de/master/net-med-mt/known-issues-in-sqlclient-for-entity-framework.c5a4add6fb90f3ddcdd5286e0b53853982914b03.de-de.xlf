<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">500149b7785e488054d80df619a2ccaa1c83e17e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\known-issues-in-sqlclient-for-entity-framework.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6b87363fdbd1711e6156293220f23bb8c72a1f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9b88f7edab36f68509d70dc9ab0b2ddb1eede9b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Known Issues in SqlClient for Entity Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Known Issues in SqlClient for Entity Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes known issues related to the .NET Framework Data Provider for SQL Server (SqlClient).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Trailing Spaces in String Functions</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> ignores trailing spaces in string values.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Therefore, passing trailing spaces in the string can lead to unpredictable results, even failures.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you have to have trailing spaces in your string, you should consider appending a white space character at the end, so that <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> does not trim the string.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the trailing spaces are not required, they should be trimmed before they are passed down the query pipeline.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>RIGHT Function</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If a non-<ph id="ph1">`null`</ph> value is passed as a first argument and 0 is passed as a second argument to <ph id="ph2">`RIGHT(nvarchar(max)`</ph>, 0<ph id="ph3">`)`</ph> or <ph id="ph4">`RIGHT(varchar(max)`</ph>, 0<ph id="ph5">`)`</ph>, a <ph id="ph6">`NULL`</ph> value will be returned instead of an <ph id="ph7">`empty`</ph> string.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CROSS and OUTER APPLY Operators</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CROSS and OUTER APPLY operators were introduced in <ph id="ph1">[!INCLUDE[ssVersion2005](../../../../../includes/ssversion2005-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In some cases the query pipeline might produce a Transact-SQL statement that contains CROSS APPLY and/or OUTER APPLY operators.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Because some backend providers, including versions of <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> earlier than <ph id="ph2">[!INCLUDE[ssVersion2005](../../../../../includes/ssversion2005-md.md)]</ph>, do not support these operators, such queries cannot be executed on these backend providers.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following are some typical scenarios that might lead to the presence of CROSS APPLY and/or OUTER APPLY operators in the output query:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A correlated subquery with paging.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`AnyElement`</ph> over a correlated sub-query, or over a collection produced by navigation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>LINQ queries that use grouping methods that accept an element selector.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A query in which a CROSS APPLY or an OUTER APPLY is explicitly specified</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A query that has a DEREF construct over a REF construct.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>SKIP Operator</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you are using <ph id="ph1">[!INCLUDE[ssVersion2000](../../../../../includes/ssversion2000-md.md)]</ph>, using SKIP with ORDER BY on non-key columns might return incorrect results.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>More than the specified number of rows might be skipped if the non-key column has duplicate data in it.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This is due to how SKIP is translated for <ph id="ph1">[!INCLUDE[ssVersion2000](../../../../../includes/ssversion2000-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, in the following query, more than five rows might be skipped if <ph id="ph1">`E.NonKeyColumn`</ph> has duplicate values:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Targeting the Correct SQL Server Version</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> targets the <ph id="ph2">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> query based on the SQL Server version that is specified in the <ph id="ph3">`ProviderManifestToken`</ph> attribute of the Schema element in the storage model (.ssdl) file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This version might differ from the version of the actual SQL Server you are connected to.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if you are using SQL Server 2005, but your <ph id="ph1">`ProviderManifestToken`</ph> attribute is set to 2008, the generated <ph id="ph2">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> query might not execute on the server.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, a query that uses the new date time types that were introduced in SQL Server 2008 will not execute on earlier versions of the SQL Server.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you are using SQL Server 2005, but your <ph id="ph1">`ProviderManifestToken`</ph> attribute is set to 2000, the generated <ph id="ph2">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> query might be less optimized, or you might get an exception that says that the query is not supported.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see the CROSS and OUTER APPLY Operators section, earlier in this topic.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Certain database behaviors depend on the compatibility level set to the database.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If your <ph id="ph1">`ProviderManifestToken`</ph> attribute is set to 2005 and your SQL Server version is 2005, but the compatibility level of a database is set to "80" (SQL Server 2000), the generated <ph id="ph2">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> will be targeting SQL Server 2005, but might not execute as expected due to the compatibility level setting.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, you might lose ordering information if a column name in the ORDER BY list matches a column name in the selector.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Nested Queries in Projection</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Nested queries in a projection clause might get translated into Cartesian product queries on the server.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>On some back-end servers, including SLQ Server, this can cause the TempDB table to to get quite large.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This can decrease server performance.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following is an example of  a nested query in a projection clause:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Server Generated GUID Identity Values</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> supports server-generated GUID type identity values, but the provider must support returning the server-generated identity value after a row was inserted.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Starting with <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2005, you can return the server-generated GUID type in a <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> database through the <bpt id="p1">[</bpt>OUTPUT clause<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=169400)</ept> .</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SqlClient for the Entity Framework<ept id="p1">](../../../../../docs/framework/data/adonet/ef/sqlclient-for-the-entity-framework.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Known Issues and Considerations in LINQ to Entities<ept id="p1">](../../../../../docs/framework/data/adonet/ef/language-reference/known-issues-and-considerations-in-linq-to-entities.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>