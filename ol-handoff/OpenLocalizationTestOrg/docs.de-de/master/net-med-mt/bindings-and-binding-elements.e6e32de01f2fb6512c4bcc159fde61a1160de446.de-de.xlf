<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bindings-and-binding-elements.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8b68d5e142fd58841627e5e5955a11e962252e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\bindings-and-binding-elements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c145b8d942a9f9331908ae8a73bccf05d5464b7a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30f0c76e5ec7b2ad50e8820b4cf38746dec85600</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Bindings and Binding Elements | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Bindings and Binding Elements</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Bindings are collections of special configuration elements, called <bpt id="p1">*</bpt>binding elements<ept id="p1">*</ept>, which are evaluated by the service runtime whenever a client or service endpoint is being constructed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The type and order of the binding elements within a binding determines the selection and stacking order of the protocol and transport channels in an endpoint's channel stack.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Bindings, especially the system-provided bindings, usually also have a number of configuration properties that reflect the most commonly modified properties of the encapsulated binding elements.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A binding must contain exactly one transport binding element.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each transport binding element implies a default message encoding binding element, which can be overridden by adding at most one message encoding binding element to the binding.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In addition to the transport and encoder binding elements, the binding may contain any number of protocol binding elements that together implement the functionality needed to service and send a SOAP message from one endpoint to another.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Using Bindings to Configure Services and Clients<ept id="p1">](../../../../docs/framework/wcf/using-bindings-to-configure-services-and-clients.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Extending Bindings and Binding Elements</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> includes system-provided bindings that cover a wide range of scenarios.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(For more, see <bpt id="p1">[</bpt>System-Provided Bindings<ept id="p1">](../../../../docs/framework/wcf/system-provided-bindings.md)</ept>.) There may be times, however, when you need to create and use a binding that is not included in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following scenarios require the creation of a new binding.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To use a new binding element (such as a new transport, encoding, or protocol binding element), you must create a new binding that includes that binding element.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, if you added a custom <ph id="ph1">`UdpTransportBindingElement`</ph> for UDP transport, you would need to create a new binding to make use of it.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For information about performing this behavior using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CustomBinding?displayProperty=fullName&gt;</ph> type, see <bpt id="p1">[</bpt>Custom Bindings<ept id="p1">](../../../../docs/framework/wcf/extending/custom-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To configure existing binding elements in a way that the system-provided bindings to not expose on public properties.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you must create a new binding to change the order in which signing and encryption operations are performed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For information about performing this behavior, see <bpt id="p1">[</bpt>How to: Customize a System-Provided Binding<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-customize-a-system-provided-binding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To establish corporate standard bindings that expose only specific configuration options.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, to create for your company a variant of the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> for your company in which security cannot be disabled, create a new binding that behaves like the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, but with security always on.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Creating User-Defined Bindings<ept id="p1">](../../../../docs/framework/wcf/extending/creating-user-defined-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To perform some customization of metadata, typically but not necessarily to configure or use some custom binding element.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information about providing metadata support to bindings and binding elements, see <bpt id="p1">[</bpt>Configuration and Metadata Support<ept id="p1">](../../../../docs/framework/wcf/extending/configuration-and-metadata-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Channels, Bindings, and Binding Elements</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Bindings and binding elements are the connection between the application programming model, which includes the attributes and behaviors, and the channel model, which includes the factories and listeners, message encoders, and transport and protocol implementations.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Typically, binding elements and bindings are implemented to enable channels to be used by the application layer.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The channel layer hands off or receives messages to and from the service layer and transports those messages between endpoints.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>On a client, the channel layer is a stack of channel factories that create channels to a network endpoint.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>On a service, the channel layer is a stack of channel listeners that accept channels received at a network endpoint.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>There are two general types of channels: protocol channels and transport channels.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Transport channels are responsible for the actual transmission of a message from one network endpoint to another.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Transport channels must have a default message encoder and should be able to use an alternate message encoder supplied through a message encoder binding element.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A message encoder is responsible for turning a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message?displayProperty=fullName&gt;</ph> into a wire representation and vice-versa.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Protocol channels are responsible for implementing SOAP-level protocols (for example, WS-Security or WS-ReliableMessaging).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The primary requirement for transport and protocol channels is that they implement the required channel interfaces.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To create a working channel layer they must have associated factories and listeners, and so on.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To use the channel implementations from <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> there needs to be an associated binding elements derived from <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> for each channel and there should be a related binding extension element for inclusion into configuration files that derives from <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, binding elements for message encoders, protocol, and transport channel implementations can be stacked to form a channel stack and the mechanism to line them up into an ordered set is the binding.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Bindings and binding elements connect the application programming model to the channel model.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use your channel implementations from code directly, but unless encoders, transports, and protocols are implemented as binding elements they cannot be used from the service layer programming model.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For details about developing channels and their binding elements, see <bpt id="p1">[</bpt>Extending the Channel Layer<ept id="p1">](../../../../docs/framework/wcf/extending/extending-the-channel-layer.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>