<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="configuring-wcf-services-in-code.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cee9c8e31d2d7c55069bf9acceda4e5536b91b1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\configuring-wcf-services-in-code.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c80dec04f6a4fa1578f5d081daf4664d4932541</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5000589dc33cc29f8d5813f682cd1791d47089d4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Configuring WCF Services in Code | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Configuring WCF Services in Code</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> allows developers to configure services using configuration files or code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Configuration files are useful when a service needs to be configured after being deployed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When using configuration files, an IT professional only needs to update the configuration file, no recompilation is required.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Configuration files, however, can be complex and difficult to maintain.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There is no support for debugging configuration files and configuration elements are referenced by names which makes authoring configuration files error-prone and difficult.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> also allows you to configure services in code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In earlier versions of <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> (4.0 and earlier) configuring services in code was easy in self-hosted scenarios, the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class allowed you to configure endpoints and behaviors prior to calling ServiceHost.Open.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In web hosted scenarios, however, you donâ€™t have direct access to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To configure a web hosted service you were required to create a <ph id="ph1">`System.ServiceModel.ServiceHostFactory`</ph> that created the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and performed any needed configuration.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Starting with .NET 4.5, <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> provides an easier way to configure both self-hosted and web hosted services in code.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Configure method</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Simply define a public static method called <ph id="ph1">`Configure`</ph> with the following signature in your service implementation class:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Configure method takes a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceConfiguration&gt;</ph> instance that enables the developer to add endpoints and behaviors.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method is called by <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> before the service host is opened.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When defined, any service configuration settings specified in an app.config or web.config file will be ignored.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to define the <ph id="ph1">`Configure`</ph> method and add a service endpoint, an endpoint behavior and service behaviors:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To enable a protocol such as https for a service, you can either explicitly add an endpoint that uses the protocol or you can automatically add endpoints by calling ServiceConfiguration.EnableProtocol(Binding) which adds an endpoint for each base address compatible with the protocol and each service contract defined.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use the ServiceConfiguration.EnableProtocol method:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The settings in the &lt;<ph id="ph1">`protocolMappings`</ph>&gt; section are only used if no application endpoints are added to the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceConfiguration&gt;</ph> programmatically.You can optionally load the service configuration from the default application configuration file by calling <ph id="ph3">&lt;xref:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration%2A&gt;</ph> and then change the settings.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceConfiguration&gt;</ph> class also allows you to load configuration from a centralized configuration.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to implement this:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">&lt;xref:System.ServiceModel.ServiceConfiguration.LoadFromConfiguration%2A&gt;</ph> ignores &lt;<ph id="ph2">`host`</ph>&gt; settings within the &lt;<ph id="ph3">`service`</ph>&gt; tag of &lt;<ph id="ph4">`system.serviceModel`</ph>&gt;.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Conceptually, &lt;<ph id="ph1">`host`</ph>&gt; is about host configuration, not service configuration, and it gets loaded before the Configure method executes.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Services Using Configuration Files<ept id="p1">](../../../docs/framework/wcf/configuring-services-using-configuration-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Client Behaviors<ept id="p1">](../../../docs/framework/wcf/configuring-client-behaviors.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../docs/framework/wcf/simplified-configuration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuration-Based Activation<ept id="p1">](../../../docs/framework/wcf/samples/configuration-based-activation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuration<ept id="p1">](../../../docs/framework/wcf/samples/configuration-sample.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuration-Based Activation in IIS and WAS<ept id="p1">](../../../docs/framework/wcf/feature-details/configuration-based-activation-in-iis-and-was.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuration and Metadata Support<ept id="p1">](../../../docs/framework/wcf/extending/configuration-and-metadata-support.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuration<ept id="p1">](../../../docs/framework/wcf/diagnostics/exceptions-reference/configuration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Specify a Service Binding in Configuration<ept id="p1">](../../../docs/framework/wcf/how-to-specify-a-service-binding-in-configuration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Service Endpoint in Configuration<ept id="p1">](../../../docs/framework/wcf/feature-details/how-to-create-a-service-endpoint-in-configuration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Publish Metadata for a Service Using a Configuration File<ept id="p1">](../../../docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Specify a Client Binding in Configuration<ept id="p1">](../../../docs/framework/wcf/how-to-specify-a-client-binding-in-configuration.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>