<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa5909928205080b31495dad2053b69236b3c179</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\exceptions\handling-com-interop-exceptions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f840336a484c2c278575c5f8545f827025da26e7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">022f0a649e98c0801e03c3a94cfe8dfc449d0f6f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Handling COM Interop Exceptions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Handling COM Interop Exceptions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Managed and unmanaged code can work together to handle exceptions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If a method throws an exception in managed code, the common language runtime can pass an HRESULT to a COM object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If a method fails in unmanaged code by returning a failure HRESULT, the runtime throws an exception that can be caught by managed code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The runtime automatically maps the HRESULT from COM interop to more specific exceptions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, E_ACCESSDENIED becomes <ph id="ph1">&lt;xref:System.UnauthorizedAccessException&gt;</ph>, E_OUTOFMEMORY becomes <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph>, and so on.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the HRESULT is a custom result or if it is unknown to the runtime, the runtime passes a generic <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> to the client.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ErrorCode<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>COMException<ept id="p2">**</ept> contains the HRESULT value.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Working with IErrorInfo</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When an error is passed from COM to managed code, the runtime populates the exception object with error information.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>COM objects that support IErrorInfo and return HRESULTS provide this information to managed code exceptions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, the runtime maps the Description from the COM error to the exception's <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the HRESULT provides no additional error information, the runtime fills many of the exception's properties with default values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If a method fails in unmanaged code, an exception can be passed to a managed code segment.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The topic <bpt id="p1">[</bpt>HRESULTS and Exceptions<ept id="p1">](../../../docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept> contains a table showing how HRESULTS map to runtime exception objects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exceptions<ept id="p1">](index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>