<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="known-issues-and-considerations-in-linq-to-entities.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">898823b8baaffa5af7a7475975287406c4f12a80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\known-issues-and-considerations-in-linq-to-entities.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4611226e637452c319ef2a7a6c4ffd86a4d8c45</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66fe71224fbe51edf3b210a2309c0fffa5a3b03b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Known Issues and Considerations in LINQ to Entities | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Known Issues and Considerations in LINQ to Entities</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section provides information about known issues with <ph id="ph1">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ Queries That cannot be Cached<ept id="p1">](#LINQQueriesThatAreNotCached)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Ordering Information Lost<ept id="p1">](#OrderingInfoLost)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unsigned Integers Not Supported<ept id="p1">](#UnsignedIntsUnsupported)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Conversion Errors<ept id="p1">](#TypeConversionErrors)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Referencing Non-Scalar Variables Not Supported<ept id="p1">](#RefNonScalarClosures)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nested Queries May Fail with SQL Server 2000<ept id="p1">](#NestedQueriesSQL2000)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Projecting to an Anonymous Type<ept id="p1">](#ProjectToAnonymousType)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>LINQ Queries That cannot be Cached</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Starting with .NET Framework 4.5, LINQ to Entities queries are automatically cached.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, LINQ to Entities queries that apply the <ph id="ph1">`Enumerable.Contains`</ph> operator to in-memory collections are not automatically cached.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Also parameterizing in-memory collections in compiled LINQ queries is not allowed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Ordering Information Lost</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Projecting columns into an anonymous type will cause ordering information to be lost in some queries that are executed against a <ph id="ph1">[!INCLUDE[ssVersion2005](../../../../../../includes/ssversion2005-md.md)]</ph> database set to a compatibility level of "80".</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This occurs when a column name in the order-by list matches a column name in the selector, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Unsigned Integers Not Supported</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifying an unsigned integer type in a <ph id="ph1">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> query is not supported because the <ph id="ph2">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph> does not support unsigned integers.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you specify an unsigned integer, an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception will be thrown during the query expression translation, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This example queries for an order with ID 48000.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Type Conversion Errors</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Visual Basic, when a property is mapped to a column of SQL Server bit type with a value of 1 using the <ph id="ph1">`CByte`</ph> function, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown with an "Arithmetic overflow error" message.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example queries the <ph id="ph1">`Product.MakeFlag`</ph> column in the AdventureWorks sample database and an exception is thrown when the query results are iterated over.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Referencing Non-Scalar Variables Not Supported</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Referencing a non-scalar variables, such as an entity, in a query is not supported.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When such a query executes, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown with a message that states "Unable to create a constant value of type <ph id="ph2">`EntityType`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Only primitive types ('such as Int32, String, and Guid') are supported in this context."</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Referencing a collection of scalar variables is supported.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Nested Queries May Fail with SQL Server 2000</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>With SQL Server 2000, LINQ to Entities queries may fail if they produce nested Transact-SQL queries that are three or more levels deep.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Projecting to an Anonymous Type</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you define your initial query path to include related objects by using the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601.Include%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> and then use LINQ to project the returned objects to an anonymous type, the objects specified in the include method are not included in the query results.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To get related objects, do not project returned types to an anonymous type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/linq-to-entities.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>