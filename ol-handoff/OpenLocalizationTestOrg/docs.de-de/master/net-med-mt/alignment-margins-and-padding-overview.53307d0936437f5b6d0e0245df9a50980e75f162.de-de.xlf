<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="alignment-margins-and-padding-overview.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e03ffd859eeb1d0ad744173e0610fc8e8f059363</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\alignment-margins-and-padding-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cbbe64ca22e376624620231371637ef5f803aca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb303a02dfa32da192bc3f731883f8db34867054</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Alignment, Margins, and Padding Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Alignment, Margins, and Padding Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> class exposes several properties that are used to precisely position child elements.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic discusses four of the most important properties: <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The effects of these properties are important to understand, because they provide the basis for controlling the position of elements in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Introduction to Element Positioning</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There are numerous ways to position elements using <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, achieving ideal layout goes beyond simply choosing the right <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Fine control of positioning requires an understanding of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following illustration shows a layout scenario that utilizes several positioning properties.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>WPF Positioning Properties Sample<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/layout-margins-padding-alignment-graphic1.PNG "</bpt>layout_margins_padding_alignment_graphic1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>At first glance, the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements in this illustration may appear to be placed randomly.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, their positions are actually precisely controlled by using a combination of margins, alignments, and padding.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example describes how to create the layout in the preceding illustration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Border&gt;</ph> element encapsulates a parent <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>, with a <ph id="ph3">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph> value of 15 device independent pixels.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This accounts for the narrow <ph id="ph1">&lt;xref:System.Windows.Media.Brushes.LightBlue%2A&gt;</ph> band that surrounds the child <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Child elements of the <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> are used to illustrate each of the various positioning properties that are detailed in this topic.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Three <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements are used to demonstrate both the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following diagram provides a close-up view of the various positioning properties that are used in the preceding sample.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Subsequent sections in this topic describe in greater detail how to use each positioning property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Positioning Properties with Screen Call&amp;#45;outs<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/layout-margins-padding-alignment-graphic2.PNG "</bpt>layout_margins_padding_alignment_graphic2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Understanding Alignment Properties</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> properties describe how a child element should be positioned within a parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>By using these properties together, you can position child elements precisely.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, child elements of a <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> can specify four different horizontal alignments: <ph id="ph2">&lt;xref:System.Windows.HorizontalAlignment&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.HorizontalAlignment&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.HorizontalAlignment&gt;</ph>, or to <ph id="ph5">&lt;xref:System.Windows.HorizontalAlignment&gt;</ph> to fill available space.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Similar values are available for vertical positioning.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Explicitly-set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> properties on an element take precedence over the <ph id="ph3">&lt;xref:System.Windows.HorizontalAlignment&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Attempting to set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> value of <ph id="ph4">`Stretch`</ph> results in the <ph id="ph5">`Stretch`</ph> request being ignored.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>HorizontalAlignment Property</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> property declares the horizontal alignment characteristics to apply to child elements.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table shows each of the possible values of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Child elements are aligned to the left of the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Child elements are aligned to the center of the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Child elements are aligned to the right of the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.HorizontalAlignment&gt;</ph> (Default)</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Child elements are stretched to fill the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Explicit <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> values take precedence.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each attribute value is shown, to better illustrate the various rendering behaviors.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The preceding code yields a layout similar to the following image.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The positioning effects of each <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> value are visible in the illustration.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>HorizontalAlignment Sample<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/layout-horizontal-alignment-graphic.PNG "</bpt>layout_horizontal_alignment_graphic<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>VerticalAlignment Property</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> property describes the vertical alignment characteristics to apply to child elements.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following table shows each of the possible values for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Member</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Child elements are aligned to the top of the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Child elements are aligned to the center of the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Child elements are aligned to the bottom of the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.VerticalAlignment&gt;</ph> (Default)</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Child elements are stretched to fill the parent element's allocated layout space.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Explicit <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> values take precedence.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Each attribute value is shown, to better illustrate the various rendering behaviors.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For purposes of this sample, a <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element with visible gridlines is used as the parent, to better illustrate the layout behavior of each property value.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The preceding code yields a layout similar to the following image.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The positioning effects of each <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> value are visible in the illustration.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>VerticalAlignment property sample<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/layout-vertical-alignment-graphic.PNG "</bpt>layout_vertical_alignment_graphic<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Understanding Margin Properties</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> property describes the distance between an element and its child or peers.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values can be uniform, by using syntax like <ph id="ph2">`Margin="20"`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>With this syntax, a uniform <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> of 20 device independent pixels would be applied to the element.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values can also take the form of four distinct values, each value describing a distinct margin to apply to the left, top, right, and bottom (in that order), like <ph id="ph2">`Margin="0,10,5,25"`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Proper use of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> property enables very fine control of an element's rendering position and the rendering position of its neighbor elements and children.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A non-zero margin applies space outside the element's <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply uniform margins around a group of <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements are spaced evenly with a ten-pixel margin buffer in each direction.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In many instances, a uniform margin is not appropriate.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In these cases, non-uniform spacing can be applied.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply non-uniform margin spacing to child elements.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Margins are described in this order: left, top, right, bottom.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Understanding the Padding Property</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Padding is similar to <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> in most respects.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Padding property is exposed on only on a few classes, primarily as a convenience: <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Control&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> are samples of classes that expose a Padding property.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph> property enlarges the effective size of a child element by the specified <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply <ph id="ph1">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph> to a parent <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Using Alignment, Margins, and Padding in an Application</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> provide the positioning control necessary to create a complex <ph id="ph5">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can use the effects of each property to change child-element positioning, enabling flexibility in creating dynamic applications and user experiences.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following example demonstrates each of the concepts that are detailed in this topic.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Building on the infrastructure found in the first sample in this topic, this example adds a <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element as a child of the <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph> in the first sample.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Border.Padding%2A&gt;</ph> is applied to the parent <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is used to partition space between three child <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements are again used to show the various effects of <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements are added to each <ph id="ph2">&lt;xref:System.Windows.Controls.ColumnDefinition&gt;</ph> to better define the various properties applied to the <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements in each column.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When compiled, the preceding application yields a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like the following illustration.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The effects of the various property values are evident in the spacing between elements, and significant property values for elements in each column are shown within <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Several positioning properties in one application<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/layout-margins-padding-aligment-graphic3.PNG "</bpt>layout_margins_padding_aligment_graphic3<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>What's Next</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Positioning properties defined by the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> class enable fine control of element placement within <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You now have several techniques you can use to better position elements using <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Additional resources are available that explain <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout in greater detail.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Panels Overview<ept id="p1">](../../../../docs/framework/wpf/controls/panels-overview.md)</ept> topic contains more detail about the various <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The topic <bpt id="p1">[</bpt>Walkthrough: My First WPF Desktop Application<ept id="p1">](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept> introduces advanced techniques that use layout elements to position components and bind their actions to data sources.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Panels Overview<ept id="p1">](../../../../docs/framework/wpf/controls/panels-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Layout<ept id="p1">](../../../../docs/framework/wpf/advanced/layout.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Layout Gallery Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160054)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>