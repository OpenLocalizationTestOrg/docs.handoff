<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da16de7b24cc63a5101d5aea852952b8ad4d3ffb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\ws-transaction-flow.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5b3db80df81664f0a11723306200ccf4acb459a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9586b1abe25eb7df308ae1f2d1cfa9b4d86404da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WS Transaction Flow | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WS Transaction Flow</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the use of a client-coordinated transaction and the client and server options for transaction flow using either the WS-Atomic Transaction or OleTransactions protocol.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This sample is based on the <bpt id="p1">[</bpt>Getting Started<ept id="p1">](../../../../docs/framework/wcf/samples/getting-started-sample.md)</ept> that implements a calculator service but the operations are attributed to demonstrate the use of the <ph id="ph1">`TransactionFlowAttribute`</ph> with the <bpt id="p2">**</bpt>TransactionFlowOption<ept id="p2">**</ept> enumeration to determine to what degree transaction flow is enabled.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Within the scope of the flowed transaction, a log of the requested operations is written to a database and persists until the client coordinated transaction has completed - if the client transaction does not complete, the Web service transaction ensures that the appropriate updates to the database are not committed.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The setup procedure and build instructions for this sample are located at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After initiating a connection to the service and a transaction, the client accesses several service operations.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The contract for the service is defined as follows with each of the operations demonstrating a different setting for the <ph id="ph1">`TransactionFlowOption`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This defines the operations in the order they are to be processed:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Add`</ph> operation request must include a flowed transaction.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Subtract`</ph> operation request may include a flowed transaction.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Multiply`</ph> operation request must not include a flowed transaction through the explicit NotAllowed setting.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Divide`</ph> operation request must not include a flowed transaction through the omission of a <ph id="ph2">`TransactionFlow`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To enable transaction flow, bindings with the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>transactionFlow&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/transactionflow.md)</ept> property enabled must be used in addition to the appropriate operation attributes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this sample, the service's configuration exposes a TCP endpoint and an HTTP endpoint in addition to a Metadata Exchange endpoint.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The TCP endpoint and the HTTP endpoint use the following bindings, both of which have the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>transactionFlow&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/transactionflow.md)</ept> property enabled.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The system-provided netTcpBinding allows specification of the transactionProtocol whereas the system-provided wsHttpBinding uses only the more interoperable WSAtomicTransactionOctober2004 protocol.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The OleTransactions protocol is only available for use by <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> clients.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For the class that implements the <ph id="ph1">`ICalculator`</ph> interface, all of the methods are attributed with <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This setting declares that all actions taken within the method occur within the scope of a transaction.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this case, the actions taken include recording to the log database.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the operation request includes a flowed transaction then the actions occur within the scope of the incoming transaction or a new transaction scope is automatically generated.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> property defines behavior local to the service method implementations and does not define the client's ability to or requirement for flowing a transaction.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>On the client, the service's <ph id="ph1">`TransactionFlowOption`</ph> settings on the operations are reflected in the client's generated definition of the <ph id="ph2">`ICalculator`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Also, the service's <ph id="ph1">`transactionFlow`</ph> property settings are reflected in the client's application configuration.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The client can select the transport and protocol by selecting the appropriate <ph id="ph1">`endpointConfigurationName`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The observed behavior of this sample is the same no matter which protocol or transport is chosen.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Having initiated the connection to the service, the client creates a new <ph id="ph1">`TransactionScope`</ph> around the calls to the service operations.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The calls to the operations are as follows:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Add`</ph> request flows the required transaction to the service and the service's actions occur within the scope of the client's transaction.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`Subtract`</ph> request also flows the allowed transaction to the service and again the service's actions occur within the scope of the client's transaction.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`Subtract`</ph> request is performed within a new transaction scope declared with the <ph id="ph2">`TransactionScopeOption.Suppress`</ph> option.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This suppresses the client's initial outer transaction and the request does not flow a transaction to the service.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This approach allows a client to explicitly opt-out of and protect against flowing a transaction to a service when that is not required.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The service's actions occur within the scope of a new and unconnected transaction.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Multiply`</ph> request does not flow a transaction to the service because the client's generated definition of the <ph id="ph2">`ICalculator`</ph> interface includes a <ph id="ph3">&lt;xref:System.ServiceModel.TransactionFlowAttribute&gt;</ph> set to <ph id="ph4">&lt;xref:System.ServiceModel.TransactionFlowOption&gt;</ph><ph id="ph5">`NotAllowed`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Divide`</ph> request does not flow a transaction to the service because again the client's generated definition of the <ph id="ph2">`ICalculator`</ph> interface does not include a <ph id="ph3">`TransactionFlowAttribute`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The service's actions again occur within the scope of another new and unconnected transaction.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you run the sample, the operation requests and responses are displayed in the client console window.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Press ENTER in the client window to shut down the client.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The logging of the service operation requests are displayed in the service's console window.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Press ENTER in the client window to shut down the client.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>After a successful execution, the client's transaction scope completes and all actions taken within that scope are committed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specifically, the noted 5 records are persisted in the service's database.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The first 2 of these have occurred within the scope of the client's transaction.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If an exception occurred anywhere within the client's <ph id="ph1">`TransactionScope`</ph> then the transaction cannot complete.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This causes the records logged within that scope to not be committed to the database.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This effect can be observed by repeating the sample run after commenting out the call to complete the outer <ph id="ph1">`TransactionScope`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>On such a run, only the last 3 actions (from the second <ph id="ph1">`Subtract`</ph>, the <ph id="ph2">`Multiply`</ph> and the <ph id="ph3">`Divide`</ph> requests) are logged because the client transaction did not flow to those.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To build the C# or Visual Basic .NET version of the solution, follow the instructions in <bpt id="p1">[</bpt>Building the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Ensure that you have installed SQL Server Express Edition or SQL Server, and that the connection string has been correctly set in the service’s application configuration file.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To run the sample without using a database, set the <ph id="ph1">`usingSql`</ph> value in the service’s application configuration file to <ph id="ph2">`false`</ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id="p1">[</bpt>Running the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For cross-machine configuration, enable the Distributed Transaction Coordinator using the instructions below, and use the WsatConfig.exe tool from the Windows SDK to enable WCF Transactions network support.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Configuring WS-Atomic Transaction Support<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=190370)</ept> for information on setting up WsatConfig.exe.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Whether you run the sample on the same computer or on different computers, you must configure the Microsoft Distributed Transaction Coordinator (MSDTC) to enable network transaction flow and use the WsatConfig.exe tool to enable <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> transactions network support.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To configure the Microsoft Distributed Transaction Coordinator (MSDTC) to support running the sample</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>On a service machine running Windows Server 2003 or Windows XP, configure MSDTC to allow incoming network transactions by following these instructions.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, navigate to <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>, then <bpt id="p3">**</bpt>Administrative Tools<ept id="p3">**</ept>, and then <bpt id="p4">**</bpt>Component Services<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Component Services<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Computers<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>My Computer<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>MSDTC<ept id="p1">**</ept> tab, click <bpt id="p2">**</bpt>Security Configuration<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Check <bpt id="p1">**</bpt>Network DTC Access<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Allow Inbound<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> to restart the MSDTC service.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to close the dialog box.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>On a service machine running Windows Server 2008 or Windows Vista, configure MSDTC to allow incoming network transactions by following these instructions.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, navigate to <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>, then <bpt id="p3">**</bpt>Administrative Tools<ept id="p3">**</ept>, and then <bpt id="p4">**</bpt>Component Services<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Component Services<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Computers<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Distributed Transaction Coordinator<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>DTC Coordinator<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Security<ept id="p1">**</ept> tab, check <bpt id="p2">**</bpt>Network DTC Access<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Allow Inbound<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> to restart the MSDTC service.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to close the dialog box.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>On the client machine, configure MSDTC to allow outgoing network transactions:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, navigate to <ph id="ph1">`Control Panel`</ph>, then <bpt id="p2">**</bpt>Administrative Tools<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Component Services<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>My Computer<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>MSDTC<ept id="p1">**</ept> tab, click <bpt id="p2">**</bpt>Security Configuration<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Check <bpt id="p1">**</bpt>Network DTC Access<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Allow Outbound<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept> to restart the MSDTC service.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to close the dialog box.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>