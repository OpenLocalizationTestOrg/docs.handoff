<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="instantiating-a-datetimeoffset-object.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56d1fe84e589fd0e576888881a7530e6e414de6d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\datetime\instantiating-a-datetimeoffset-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71e124bfc1452a80d9705d8557dbb8edaed2451f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e2eab7738b74000c17aefd809bbc9db66a1e90c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Instantiating a DateTimeOffset object | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Instantiating a DateTimeOffset object</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure offers a number of ways to create new <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Many of them correspond directly to the methods available for instantiating new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values, with enhancements that allow you to specify the date and time value's offset from Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In particular, you can instantiate a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value in the following ways:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By using a date and time literal.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By calling a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By implicitly converting a value to <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By parsing the string representation of a date and time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic provides greater detail and code examples that illustrate these methods of instantiating new <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Date and time literals</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For languages that support it, one of the most common ways to instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value is to provide the date and time as a hard-coded literal value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, the following Visual Basic code creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object whose value is January 1, 2008, at 10:00 AM.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> values can also be initialized using date and time literals when using languages that support <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> literals.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the following Visual Basic code creates a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>As the console output shows, the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value created in this way is assigned the offset of the local time zone.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This means that a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value assigned using a character literal does not identify a single point of time if the code is run on different computers.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>DateTimeOffset constructors</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> type defines six constructors.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Four of them correspond directly to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> constructors, with an additional parameter of type <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> that defines the date and time's offset from UTC.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These allow you to define a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value based on the value of its individual date and time components.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, the following code uses these four constructors to instantiate <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> objects with identical values of 7/1/2008 12:05 AM +01:00.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that, when the value of the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> object instantiated using a <ph id="ph2">&lt;xref:System.Globalization.PersianCalendar&gt;</ph> object as one of the arguments to its constructor is displayed to the console, it is expressed as a date in the Gregorian rather than the Persian calendar.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To output a date using the Persian calendar, see the example in the <ph id="ph1">&lt;xref:System.Globalization.PersianCalendar&gt;</ph> topic.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The other two constructors create a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> object from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The first of these has a single parameter, the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to convert to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The offset of the resulting <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value depends on the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the constructor's single parameter.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If its value is <ph id="ph1">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the offset is set equal to <ph id="ph2">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Otherwise, its offset is set equal to that of the local time zone.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of this constructor to instantiate <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> objects representing UTC and the local time zone:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Calling the overload of the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor that has a single <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> parameter is equivalent to performing an implicit conversion of a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value to a <ph id="ph4">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second constructor that creates a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> object from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value has two parameters: the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value to convert, and a <ph id="ph4">&lt;xref:System.TimeSpan&gt;</ph> value representing the date and time's offset from UTC.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This offset value must correspond to the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the constructor's first parameter or an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the first parameter is <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the value of the second parameter must be <ph id="ph3">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the first parameter is <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the value of the second parameter must be the offset of the local system's time zone.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the first parameter is <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the offset can be any valid value.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following code illustrates calls to this constructor to convert <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> to <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Implicit type conversion</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> type supports one implicit type conversion: from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value to a <ph id="ph3">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(An implicit type conversion is a conversion from one type to another that does not require an explicit cast (in C#) or conversion (in Visual Basic) and that does not lose information.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It makes code like the following possible.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The offset of the resulting <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value depends on the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If its value is <ph id="ph1">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the offset is set equal to <ph id="ph2">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If its value is either <ph id="ph1">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the offset is set equal to that of the local time zone.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Parsing the string representation of a date and time</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> type supports four methods that allow you to convert the string representation of a date and time into a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTimeOffset.Parse%2A&gt;</ph>, which tries to convert the string representation of a date and time to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value and throws an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTimeOffset.TryParse%2A&gt;</ph>, which tries to convert the string representation of a date and time to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value and returns <ph id="ph3">`false`</ph> if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTimeOffset.ParseExact%2A&gt;</ph>, which tries to convert the string representation of a date and time in a specified format to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The method throws an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTimeOffset.TryParseExact%2A&gt;</ph>, which tries to convert the string representation of a date and time in a specified format to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`false`</ph> if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example illustrates calls to each of these four string conversion methods to instantiate a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dates, times, and time zones<ept id="p1">](../../../docs/standard/datetime/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>