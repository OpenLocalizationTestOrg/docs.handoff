<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-outlined-text.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f7c49000bfc8d89f0406701949c8c1e5c6222cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\how-to-create-outlined-text.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f71e9edfc721983ba0dd8f72e5f6122f32c69fdc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d38159e0bd5bafa82a7d2e5f1efe17282925b99b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create Outlined Text | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create Outlined Text</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In most cases, when you are adding ornamentation to text strings in your <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> application, you are using text in terms of a collection of discrete characters, or glyphs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, you could create a linear gradient brush and apply it to the <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Foreground%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you display or edit the text box, the linear gradient brush is automatically applied to the current set of characters in the text string.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text displayed with a linear gradient brush<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext01.jpg "</bpt>OutlinedText01<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example of a linear gradient brush applied to a text box</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, you can also convert text into <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects, allowing you to create other types of visually rich text.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, you could create a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> object based on the outline of a text string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text outline using a linear gradient brush<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext02.jpg "</bpt>OutlinedText02<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example of a linear gradient brush applied to the outline geometry of text</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When text is converted to a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> object, it is no longer a collection of charactersâ€”you cannot modify the characters in the text string.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, you can affect the appearance of the converted text by modifying its stroke and fill properties.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The stroke refers to the outline of the converted text; the fill refers to the area inside the outline of the converted text.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following examples illustrate several ways of creating visual effects by modifying the stroke and fill of converted text.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text with different colors for fill and stroke<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext03.jpg "</bpt>OutlinedText03<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example of setting stroke and fill to different colors</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text with image brush applied to stroke<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext04.jpg "</bpt>OutlinedText04<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example of an image brush applied to the stroke</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It is also possible to modify the bounding box rectangle, or highlight, of the converted text.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example illustrates a way to creating visual effects by modifying the stroke and highlight of converted text.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text with image brush applied to stroke<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext05.jpg "</bpt>OutlinedText05<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example of an image brush applied to the stroke and highlight</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The key to converting text to a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> object is to use the <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Once you have created this object, you can use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.BuildGeometry%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText.BuildHighlightGeometry%2A&gt;</ph> methods to convert the text to <ph id="ph3">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first method returns the geometry of the formatted text; the second method returns the geometry of the formatted text's bounding box.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following code example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object and to retrieve the geometries of the formatted text and its bounding box.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In order to display the retrieved the <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects, you need to access the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> of the object that is displaying the converted text.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In these code examples, this is done by creating a custom control object that is derived from a class that supports user-defined rendering.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To display <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects in the custom control, provide an override for the <ph id="ph2">&lt;xref:System.Windows.UIElement.OnRender%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Your overridden method should use the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext.DrawGeometry%2A&gt;</ph> method to draw the <ph id="ph2">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Drawing Formatted Text<ept id="p1">](../../../../docs/framework/wpf/advanced/drawing-formatted-text.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>