<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f20ff5b5f4f9e2e11e464bd63f2d152db28a6823</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\imperative-code-based-validation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cce557c81b2351ed0e15b537ed8fce41fb8b9d6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82c2aa678e060ff7b9ec989cdb1c5cb892c78071</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Imperative Code-Based Validation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Imperative Code-Based Validation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Imperative code-based validation provides a simple way for an activity to provide validation about itself, and is available for activities that derive from <ph id="ph1">&lt;xref:System.Activities.CodeActivity&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.AsyncCodeActivity&gt;</ph>, and <ph id="ph3">&lt;xref:System.Activities.NativeActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Validation code that determines any validation errors or warnings is added to the activity.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using Code-Based Validation</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Code-based validation is supported by activities that derive from <ph id="ph1">&lt;xref:System.Activities.CodeActivity&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.AsyncCodeActivity&gt;</ph>, and <ph id="ph3">&lt;xref:System.Activities.NativeActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Validation code can be placed in the <ph id="ph1">&lt;xref:System.Activities.CodeActivity.CacheMetadata%2A&gt;</ph> override, and validation errors or warnings can be added to the metadata argument.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the following example, taken from the <bpt id="p1">[</bpt>Basic Validation<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/basic-validation.md)</ept> sample, if the <ph id="ph1">`Cost`</ph> is greater than the <ph id="ph2">`Price`</ph>, a validation error is added to the metadata.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`Cost`</ph> and <ph id="ph2">`Price`</ph> are not arguments to the activity, but are properties that are set at design time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>That is why their values can be validated in the <ph id="ph1">&lt;xref:System.Activities.CodeActivity.CacheMetadata%2A&gt;</ph> override.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of the data flowing through an argument cannot be validated at design time because the data does not flow until run time, but activity arguments can be validated to ensure that they are bound by using the <ph id="ph1">`RequiredArgument`</ph> attribute and overload groups.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example code sees the <ph id="ph1">`RequiredArgument`</ph> attribute for the <ph id="ph2">`Description`</ph> argument, and if it is not bound then a validation error is generated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Required arguments are covered in <bpt id="p1">[</bpt>Required Arguments and Overload Groups<ept id="p1">](../../../docs/framework/windows-workflow-foundation/required-arguments-and-overload-groups.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, a validation error is added to the metadata when <ph id="ph1">&lt;xref:System.Activities.CodeActivityMetadata.AddValidationError%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To add a validation warning, use the <ph id="ph1">&lt;xref:System.Activities.CodeActivityMetadata.AddValidationError%2A&gt;</ph> overload that takes a <ph id="ph2">&lt;xref:System.Activities.Validation.ValidationError&gt;</ph>, and specify that the <ph id="ph3">&lt;xref:System.Activities.Validation.ValidationError&gt;</ph> represents a warning by setting the <ph id="ph4">&lt;xref:System.Activities.Validation.ValidationError.IsWarning%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Validation occurs when a workflow is modified in the workflow designer and any validation errors or warnings are displayed in the workflow designer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Validation also occurs at run time when a workflow is invoked and if any validation errors occur, an <ph id="ph1">&lt;xref:System.Activities.InvalidWorkflowException&gt;</ph> is thrown by the default validation logic.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> invoking validation and accessing any validation warnings or errors, see <bpt id="p1">[</bpt>Invoking Activity Validation<ept id="p1">](../../../docs/framework/windows-workflow-foundation/invoking-activity-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Any exceptions that are thrown from <ph id="ph1">&lt;xref:System.Activities.CodeActivity.CacheMetadata%2A&gt;</ph> are not treated as validation errors.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These exceptions will escape from the call to <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> and must be handled by the caller.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Code-based validation is useful for validating the activity that contains the code, but it does not have visibility into the other activities in the workflow.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Declarative constraints validation provides the ability to validate the relationships between an activity and other activities in the workflow, and is covered in the <bpt id="p1">[</bpt>Declarative Constraints<ept id="p1">](../../../docs/framework/windows-workflow-foundation/declarative-constraints.md)</ept> topic.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>