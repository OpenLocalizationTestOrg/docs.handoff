<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f6b10fbcff8a64419796e4cbba38ea1ed8d8fb0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\manipulating-data.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">852e5b165e716842dfbb5be2f89c5a0834284254</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbc2c42baa36695cf0e74ea60200adb6c6d59504</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manipulating Data | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Manipulating Data</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Before the introduction of Multiple Active Result Sets (MARS), developers had to use either multiple connections or server-side cursors to solve certain scenarios.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In addition, when multiple connections were used in a transactional situation, bound connections (with <bpt id="p1">**</bpt>sp_getbindtoken<ept id="p1">**</ept> and <bpt id="p2">**</bpt>sp_bindsession<ept id="p2">**</ept>) were required.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following scenarios show how to use a MARS-enabled connection instead of multiple connections.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using Multiple Commands with MARS</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following Console application demonstrates how to use two <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> objects with two <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> objects and a single <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object with MARS enabled.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The example opens a single connection to the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As the reader is used, a second <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is opened, using data from the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> as input to the WHERE clause for the second reader.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example uses the sample <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database included with <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The connection string provided in the sample code assumes that the database is installed and available on the local computer.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Modify the connection string as necessary for your environment.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Reading and Updating Data with MARS</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>MARS allows a connection to be used for both read operations and data manipulation language (DML) operations with more than one pending operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This feature eliminates the need for an application to deal with connection-busy errors.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition, MARS can replace the user of server-side cursors, which generally consume more resources.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Finally, because multiple operations can operate on a single connection, they can share the same transaction context, eliminating the need to use <bpt id="p1">**</bpt>sp_getbindtoken<ept id="p1">**</ept> and <bpt id="p2">**</bpt>sp_bindsession<ept id="p2">**</ept> system stored procedures.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following Console application demonstrates how to use two <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> objects with three <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> objects and a single <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object with MARS enabled.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command object retrieves a list of vendors whose credit rating is 5.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command object uses the vendor ID provided from a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> to load the second <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> with all of the products for the particular vendor.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Each product record is visited by the second <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A calculation is performed to determine what the new <bpt id="p1">**</bpt>OnOrderQty<ept id="p1">**</ept> should be.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The third command object is then used to update the <bpt id="p1">**</bpt>ProductVendor<ept id="p1">**</ept> table with the new value.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This entire process takes place within a single transaction, which is rolled back at the end.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following example uses the sample <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database included with <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The connection string provided in the sample code assumes that the database is installed and available on the local computer.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modify the connection string as necessary for your environment.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Multiple Active Result Sets (MARS)<ept id="p1">](../../../../../docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>