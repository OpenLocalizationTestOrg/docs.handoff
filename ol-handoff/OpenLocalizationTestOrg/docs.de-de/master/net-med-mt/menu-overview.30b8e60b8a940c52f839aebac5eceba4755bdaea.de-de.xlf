<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e09405f4a20e31126af4a66b7906778f1cef365e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\menu-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ca8aaeaad0dcf29f0c6d8aed216092da89061b3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61e2bec457442b567add67027b7ad7b05bd64422</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Menu Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Menu Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> class enables you to organize elements associated with commands and event handlers in a hierarchical order.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> element contains a collection of <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Menu Control</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> control presents a list of items that specify commands or options for an application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Typically, clicking a <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> opens a submenu or causes an application to carry out a command.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creating Menus</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> to manipulate text in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> contains <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> objects that use the <ph id="ph3">&lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.MenuItem.IsCheckable%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt;</ph> properties and the <ph id="ph6">&lt;xref:System.Windows.Controls.MenuItem.Checked&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Controls.MenuItem.Unchecked&gt;</ph>, and <ph id="ph8">&lt;xref:System.Windows.Controls.MenuItem.Click&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuItemCommandsAndEvents#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>MenuItemCommandsAndEvents#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>MenuItemCommandsAndEvents#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>MenuItems with Keyboard Shortcuts</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Keyboard shortcuts are character combinations that can be entered with the keyboard to invoke <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> commands.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the shortcut for <bpt id="p1">**</bpt>Copy<ept id="p1">**</ept> is CTRL+C.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>There are two properties to use with keyboard shortcuts and menu items â€”<ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem.InputGestureText%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>InputGestureText</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem.InputGestureText%2A&gt;</ph> property to assign keyboard shortcut text to <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This only places the keyboard shortcut in the menu item.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It does not associate the command with the <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The application must handle the user's input to carry out the action.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuEvent#6<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Command</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;</ph> property to associate the <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Save<ept id="p2">**</ept> commands with <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Not only does the command property associate a command with a <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, but it also supplies the input gesture text to use as a shortcut.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuEvent#8<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> class also has a <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt;</ph> property, which specifies the element where the command occurs.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt;</ph> is not set, the element that has keyboard focus receives the command.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information about commands, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Menu Styling</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>With control styling, you can dramatically change the appearance and behavior of <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> controls without having to write a custom control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In addition to setting visual properties, you can also apply a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> to individual parts of a control, change the behavior of parts of the control through properties, or add additional parts or change the layout of a control.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate several ways to add a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first code example defines a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> called <ph id="ph2">`Simple`</ph> that shows how to use the current system settings in your style.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The code assigns the color of the <ph id="ph1">`MenuHighlightBrush`</ph> as the menu's background color and the <ph id="ph2">`MenuTextBrush`</ph> as the menu's foreground color.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Notice that you use resource keys to assign the brushes.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuStylesSnippet#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following sample uses <ph id="ph1">&lt;xref:System.Windows.Trigger&gt;</ph> elements that enable you to change the appearance of a <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> in response to events that occur on the <ph id="ph3">&lt;xref:System.Windows.Controls.Menu&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you move the mouse over the <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, the foreground color and the font characteristics of the menu items change.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuStylesSnippet#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Controls Gallery Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160053)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>