<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="selection.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e9a60221a5769d124bcc137d9401367a7713abb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\versions\selection.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f1c875b9f651a6b326390fdb52e3cc88a94b069</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93673c5ba9c6e3ff800c550e732eb1950f8aeea2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Select which .NET Core version to use</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn how .NET Core automatically finds and chooses runtime versions for your program.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Additionally, this article teaches you how to force a specific version.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Select the .NET Core version to use</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article explains the policies used by the .NET Core tools, SDK, and runtime for selecting versions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These policies provide a balance between running applications using the specified versions and enabling ease of upgrading both developer and end-user machines.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These policies perform the following actions:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Easy and efficient deployment of .NET Core, including security and reliability updates.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use the latest tools and commands independent of target runtime.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Version selection occurs:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you run an SDK command, <bpt id="p1">[</bpt>the SDK uses the latest installed version<ept id="p1">](#the-sdk-uses-the-latest-installed-version)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you build an assembly, <bpt id="p1">[</bpt>target framework monikers define build time APIs<ept id="p1">](#target-framework-monikers-define-build-time-apis)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you run a .NET Core application, <bpt id="p1">[</bpt>target framework dependent apps roll forward<ept id="p1">](#framework-dependent-apps-roll-forward)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When you publish a self-contained application, <bpt id="p1">[</bpt>self-contained deployments include the selected runtime<ept id="p1">](#self-contained-deployments-include-the-selected-runtime)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The rest of this document examines those four scenarios.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The SDK uses the latest installed version</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>SDK commands include <ph id="ph1">`dotnet new`</ph> and <ph id="ph2">`dotnet run`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The .NET Core CLI must choose an SDK version for every <ph id="ph1">`dotnet`</ph> command.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the latest SDK installed on the machine by default, even if:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The project targets an earlier version of the .NET Core runtime.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The latest version of the .NET Core SDK is a preview version.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can take advantage of the latest SDK features and improvements while targeting earlier .NET Core runtime versions.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can target multiple runtime versions of .NET Core on different projects, using the same SDK tools for all projects.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>On rare occasions, you may need to use an earlier version of the SDK.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You specify that version in a <bpt id="p1">[</bpt><bpt id="p2">*</bpt>global.json<ept id="p2">*</ept> file<ept id="p1">](../tools/global-json.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The "use latest" policy means you only use <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> to specify a .NET Core SDK version earlier than the latest installed version.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> can be placed anywhere in the file hierarchy.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The CLI searches upward from the project directory for the first <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> it finds.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You control which projects a given <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> applies to by its place in the file system.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The .NET CLI searches for a <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file iteratively navigating the path upward from the current working directory.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file found specifies the version used.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If that version is installed, that version is used.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the SDK specified in the <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> is not found, the .NET CLI rolls forward to the latest SDK installed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Roll-forward is the same as the default behavior, when no <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file is found.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example shows the <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> syntax:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The process for selecting an SDK version is:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet`</ph> searches for a <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file iteratively reverse-navigating the path upward from the current working directory.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet`</ph> uses the SDK specified in the first <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> found.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet`</ph> uses the latest installed SDK if no <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> is found.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can learn more about selecting an SDK version in the <bpt id="p1">[</bpt>Matching rules<ept id="p1">](../tools/global-json.md#matching-rules)</ept> section of the article on <bpt id="p2">*</bpt>global.json<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Target Framework Monikers define build time APIs</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You build your project against APIs defined in a <bpt id="p1">**</bpt>Target Framework Moniker<ept id="p1">**</ept> (TFM).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You specify the <bpt id="p1">[</bpt>target framework<ept id="p1">](../../standard/frameworks.md)</ept> in the project file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`TargetFramework`</ph> element in your project file as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You may build your project against multiple TFMs.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Setting multiple target frameworks is more common for libraries but can be done with applications as well.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You specify a <ph id="ph1">`TargetFrameworks`</ph> property (plural of <ph id="ph2">`TargetFramework`</ph>).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The target frameworks are semicolon-delimited as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A given SDK supports a fixed set of frameworks, capped to the target framework of the runtime it ships with.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, the .NET Core 2.0 SDK includes the .NET Core 2.0 runtime, which is an implementation of the <ph id="ph1">`netcoreapp2.0`</ph> target framework.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The .NET Core 2.0 SDK supports <ph id="ph1">`netcoreapp1.0`</ph>, <ph id="ph2">`netcoreapp1.1`</ph>, and <ph id="ph3">`netcoreapp2.0`</ph> but not <ph id="ph4">`netcoreapp2.1`</ph> (or higher).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You install the .NET Core 2.1 SDK to build for <ph id="ph1">`netcoreapp2.1`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>.NET Standard target frameworks are also capped to the target framework of the runtime the SDK ships with.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The .NET Core 2.0 SDK is capped to <ph id="ph1">`netstandard2.0`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Framework-dependent apps roll forward</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When you run an application from source with <bpt id="p1">[</bpt><ph id="ph1">`dotnet run`</ph><ept id="p1">](../tools/dotnet-run.md)</ept>, from a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>framework-dependent deployment<ept id="p3">**</ept><ept id="p2">](../deploying/index.md#framework-dependent-deployments-fdd)</ept> with <bpt id="p4">[</bpt><ph id="ph2">`dotnet myapp.dll`</ph><ept id="p4">](../tools/dotnet.md#description)</ept>, or from a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>framework-dependent executable<ept id="p6">**</ept><ept id="p5">](../deploying/index.md#framework-dependent-executables-fde)</ept> with <ph id="ph3">`myapp.exe`</ph>, the <ph id="ph4">`dotnet`</ph> executable is the <bpt id="p7">**</bpt>host<ept id="p7">**</ept> for the application.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The host chooses the latest patch version installed on the machine.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For example, if you specified <ph id="ph1">`netcoreapp2.0`</ph> in your project file, and <ph id="ph2">`2.0.4`</ph> is the latest .NET runtime installed, the <ph id="ph3">`2.0.4`</ph> runtime is used.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If no acceptable <ph id="ph1">`2.0.*`</ph> version is found, a new <ph id="ph2">`2.*`</ph> version is used.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, if you specified <ph id="ph1">`netcoreapp2.0`</ph> and only <ph id="ph2">`2.1.0`</ph> is installed, the application runs using the <ph id="ph3">`2.1.0`</ph> runtime.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This behavior is referred to as "minor version roll-forward."</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Lower versions also won't be considered.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When no acceptable runtime is installed, the application won't run.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A few usage examples demonstrate the behavior:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>2.0.4 is required.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>2.0.5 is the highest patch version installed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>2.0.5 is used.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>2.0.4 is required.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>No 2.0.* versions are installed.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1.1.1 is the highest runtime installed.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An error message is displayed.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>2.0.4 is required.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>2.0.0 is the highest version installed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An error message is displayed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>2.0.4 is required.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>No 2.0.* versions are installed.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>2.2.2 is the highest 2.x runtime version installed.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>2.2.2 is used.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>2.0.4 is required.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>No 2.x versions are installed.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>3.0.0 (not a currently available version) is installed.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An error message is displayed.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Minor version roll-forward has one side-effect that may affect end users.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Consider the following scenario:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>2.0.4 is required.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>No 2.0.* versions are installed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>2.2.2 is installed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>2.2.2 is used.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>2.0.5 is later installed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>2.0.5 will be used for subsequent application launches, not 2.2.2.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The latest patch of the required minor version is preferred over a higher minor version.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>It's possible that 2.0.5 and 2.2.2 behave differently, particularly for scenarios like serializing binary data.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Self-contained deployments include the selected runtime</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can publish an application as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>self-contained distribution<ept id="p2">**</ept><ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This approach bundles the .NET Core runtime and libraries with your application.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Self-contained deployments don't have a dependency on runtime environments.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Runtime version selection occurs at publishing time, not run time.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The publishing process selects the latest patch version of the given runtime family.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`dotnet publish`</ph> will select .NET Core 2.0.4 if it is the latest patch version in the .NET Core 2.0 runtime family.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The target framework (including the latest installed security patches) is packaged with the application.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It's an error if the minimum version specified for an application isn't satisfied.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet publish`</ph> binds to the latest runtime patch version (within a given major.minor version family).</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet publish`</ph> doesn't support the roll-forward semantics of <ph id="ph2">`dotnet run`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information about patches and self-contained deployments, see the article on <bpt id="p1">[</bpt>runtime patch selection<ept id="p1">](../deploying/runtime-patch-selection.md)</ept> in deploying .NET Core applications.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Self-contained deployments may require a specific patch version.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can override the minimum runtime patch version (to higher or lower versions) in the project file, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RuntimeFrameworkVersion`</ph> element  overrides the default version policy.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For self-contained deployments, the <ph id="ph1">`RuntimeFrameworkVersion`</ph> specifies the <bpt id="p1">*</bpt>exact<ept id="p1">*</ept> runtime framework version.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For framework-dependent applications, the <ph id="ph1">`RuntimeFrameworkVersion`</ph> specifies the <bpt id="p1">*</bpt>minimum<ept id="p1">*</ept> required runtime framework version.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>