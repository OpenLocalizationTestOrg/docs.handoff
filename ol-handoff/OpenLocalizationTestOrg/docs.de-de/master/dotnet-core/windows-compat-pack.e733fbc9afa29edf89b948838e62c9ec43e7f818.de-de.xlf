<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="windows-compat-pack.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4fd888e0fbce86ab317f18fd77374af5d3ca244</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\porting\windows-compat-pack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bd9635525d9c66748920d57a312e361b592938d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">827d14b76836937403f2ce172a29be6674a54914</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Use the Windows Compatibility Pack to port code to .NET Core</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn about the Windows Compatibility Pack and how can you use it to port existing .NET Framework code to .NET Core</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use the Windows Compatibility Pack to port code to .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Some of the most common issues found when porting existing code to .NET Core are dependencies on APIs and technologies that are only found in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Windows Compatibility Pack<ept id="p1">*</ept> provides many of these technologies, so it's much easier to build .NET Core applications and .NET Standard libraries.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This package is a logical <bpt id="p1">[</bpt>extension of .NET Standard 2.0<ept id="p1">](../whats-new/dotnet-core-2-0.md#api-changes-and-library-support)</ept> that significantly increases API set and existing code compiles with almost no modifications.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>But in order to keep the promise of .NET Standard ("it is the set of APIs that all .NET implementations provide"), this didn't include technologies that can't work across all platforms, such as registry, Windows Management Instrumentation (WMI), or reflection emit APIs.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Windows Compatibility Pack<ept id="p1">*</ept> sits on top of .NET Standard and provides access to technologies that are Windows only.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It's especially useful for customers that want to move to .NET Core but plan to stay on Windows as a first step.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In that scenario, not being able to use Windows-only technologies is only a migration hurdle with zero architectural benefits.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Package contents</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Windows Compatibility Pack<ept id="p1">*</ept> is provided via the NuGet Package <bpt id="p2">[</bpt>Microsoft.Windows.Compatibility<ept id="p2">](https://www.nuget.org/packages/Microsoft.Windows.Compatibility)</ept> and can be referenced from projects targeting .NET Core or .NET Standard.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It provides about 20,000 APIs, including Windows-only as well as cross-platform APIs from the following technology areas:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Code Pages</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CodeDom</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Configuration</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Directory Services</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Drawing</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ODBC</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Permissions</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Ports</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Windows Access Control Lists (ACL)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Windows Communication Foundation (WCF)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Windows Cryptography</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows EventLog</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows Performance Counters</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Windows Registry</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows Runtime Caching</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Windows Services</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>spec of the compatibility pack<ept id="p1">](https://github.com/dotnet/designs/blob/master/accepted/compat-pack/compat-pack.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Get started</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Before porting, make sure to take a look at the <bpt id="p1">[</bpt>Porting Process<ept id="p1">](index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When porting existing code to .NET Core or .NET Standard, install the NuGet package <bpt id="p1">[</bpt>Microsoft.Windows.Compatibility<ept id="p1">](https://www.nuget.org/packages/Microsoft.Windows.Compatibility)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you want to stay on Windows, you're all set.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you want to run the .NET Core application or .NET Standard library on Linux or macOS, use the <bpt id="p1">[</bpt>API Analyzer<ept id="p1">](https://devblogs.microsoft.com/dotnet/introducing-api-analyzer/)</ept> to find usage of APIs that won't work cross-platform.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Either remove the usages of those APIs, replace them with cross-platform alternatives, or guard them using a platform check, like:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For a demo, check out the <bpt id="p1">[</bpt>Channel 9 video of the Windows Compatibility Pack<ept id="p1">](https://channel9.msdn.com/Events/Connect/2017/T123)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>