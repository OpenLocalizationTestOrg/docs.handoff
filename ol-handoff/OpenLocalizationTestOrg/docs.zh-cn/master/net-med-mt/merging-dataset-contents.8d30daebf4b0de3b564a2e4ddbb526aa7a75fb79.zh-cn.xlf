<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e038bddbdde95ded639c2317c901c2424a4395c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\merging-dataset-contents.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcc9ed5589918f5facaee4dad14465c4c414c758</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fed386e840dcd574f70334dafafb3cb73d712866</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Merging DataSet Contents | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Merging DataSet Contents</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method to merge the contents of a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> array into an existing <ph id="ph5">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Several factors and options affect how new data is merged into an existing <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Primary Keys</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the table receiving new data and schema from a merge has a primary key, new rows from the incoming data are matched with existing rows that have the same <ph id="ph1">&lt;xref:System.Data.DataRowVersion&gt;</ph> primary key values as those in the incoming data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the columns from the incoming schema match those of the existing schema, the data in the existing rows is modified.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Columns that do not match the existing schema are either ignored or added based on the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>New rows with primary key values that do not match any existing rows are appended to the existing table.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If incoming or existing rows have a row state of <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>, their primary key values are matched using the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> primary key value of the <ph id="ph3">`Added`</ph> row because no <ph id="ph4">`Original`</ph> row version exists.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If an incoming table and an existing table contain a column with the same name but different data types, an exception is thrown and the <ph id="ph1">&lt;xref:System.Data.DataSet.MergeFailed&gt;</ph> event of the <ph id="ph2">`DataSet`</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If an incoming table and an existing table both have defined keys, but the primary keys are for different columns, an exception is thrown and the <ph id="ph1">`MergeFailed`</ph> event of the <ph id="ph2">`DataSet`</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the table receiving new data from a merge does not have a primary key, new rows from the incoming data cannot be matched to existing rows in the table and are instead appended to the existing table.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Table Names and Namespaces</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects can optionally be assigned a <ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> values are assigned, a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> can contain multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects with the same <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>During merge operations, both <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> are used to identify the target of a merge.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> has been assigned, only the <ph id="ph2">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> is used to identify the target of a merge.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This behavior changed in version 2.0 of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In version 1.1, namespaces were supported but were ignored during merge operations.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For this reason, a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that uses <ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property values will have different behaviors depending on which version of the .NET Framework you are running.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, suppose you have two <ph id="ph1">`DataSets`</ph> containing <ph id="ph2">`DataTables`</ph> with the same <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> property values but different <ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In version 1.1 of the .NET Framework, the different <ph id="ph1">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> names will be ignored when merging the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, starting with version 2.0, merging causes two new <ph id="ph1">`DataTables`</ph> to be created in the target <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The original <ph id="ph1">`DataTables`</ph> will be unaffected by the merge.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PreserveChanges</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you pass a <ph id="ph1">`DataSet`</ph>, <ph id="ph2">`DataTable`</ph>, or <ph id="ph3">`DataRow`</ph> array to the <ph id="ph4">`Merge`</ph> method, you can include optional parameters that specify whether or not to preserve changes in the existing <ph id="ph5">`DataSet`</ph>, and how to handle new schema elements found in the incoming data.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The first of these parameters after the incoming data is a Boolean flag, <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>, which specifies whether or not to preserve the changes in the existing <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`PreserveChanges`</ph> flag is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the <ph id="ph3">`Current`</ph> row version of the existing row.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`PreserveChanges`</ph> flag is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the <ph id="ph3">`Current`</ph> row version of the existing row.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`PreserveChanges`</ph> flag is not specified, it is set to <ph id="ph2">`false`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`PreserveChanges`</ph> is <ph id="ph2">`true`</ph>, the data from the existing row is maintained in the <ph id="ph3">&lt;xref:System.Data.DataRowVersion&gt;</ph> row version of the existing row, while the data from the <ph id="ph4">&lt;xref:System.Data.DataRowVersion&gt;</ph> row version of the existing row is overwritten with the data from the <ph id="ph5">`Original`</ph> row version of the incoming row.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of the existing row is set to <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following exceptions apply:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the existing row has a <ph id="ph1">`RowState`</ph> of <ph id="ph2">`Deleted`</ph>, this <ph id="ph3">`RowState`</ph> remains <ph id="ph4">`Deleted`</ph> and is not set to <ph id="ph5">`Modified`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this case, the data from the incoming row will still be stored in the <ph id="ph1">`Original`</ph> row version of the existing row, overwriting the <ph id="ph2">`Original`</ph> row version of the existing row (unless the incoming row has a <ph id="ph3">`RowState`</ph> of <ph id="ph4">`Added`</ph>).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the incoming row has a <ph id="ph1">`RowState`</ph> of <ph id="ph2">`Added`</ph>, the data from the <ph id="ph3">`Original`</ph> row version of the existing row will not be overwritten with data from the incoming row, because the incoming row does not have an <ph id="ph4">`Original`</ph> row version.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`PreserveChanges`</ph> is <ph id="ph2">`false`</ph>, both the <ph id="ph3">`Current`</ph> and <ph id="ph4">`Original`</ph> row versions in the existing row are overwritten with the data from the incoming row, and the <ph id="ph5">`RowState`</ph> of the existing row is set to the <ph id="ph6">`RowState`</ph> of the incoming row.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following exceptions apply:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the incoming row has a <ph id="ph1">`RowState`</ph> of <ph id="ph2">`Unchanged`</ph> and the existing row has a <ph id="ph3">`RowState`</ph> of <ph id="ph4">`Modified`</ph>, <ph id="ph5">`Deleted`</ph>, or <ph id="ph6">`Added`</ph>, the <ph id="ph7">`RowState`</ph> of the existing row is set to <ph id="ph8">`Modified`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the incoming row has a <ph id="ph1">`RowState`</ph> of <ph id="ph2">`Added`</ph>, and the existing row has a <ph id="ph3">`RowState`</ph> of <ph id="ph4">`Unchanged`</ph>, <ph id="ph5">`Modified`</ph>, or <ph id="ph6">`Deleted`</ph>, the <ph id="ph7">`RowState`</ph> of the existing row is set to <ph id="ph8">`Modified`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Also, the data from the <ph id="ph1">`Original`</ph> row version of the existing row is not overwritten with data from the incoming row, because the incoming row does not have an <ph id="ph2">`Original`</ph> row version.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>MissingSchemaAction</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can use the optional <ph id="ph1">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> parameter of the <ph id="ph2">`Merge`</ph> method to specify how <ph id="ph3">`Merge`</ph> will handle schema elements in the incoming data that are not part of the existing <ph id="ph4">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following table describes the options for <ph id="ph1">`MissingSchemaAction`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>MissingSchemaAction option</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Add the new schema information to the <ph id="ph1">`DataSet`</ph> and populate the new columns with the incoming values.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add the new schema and primary key information to the <ph id="ph1">`DataSet`</ph> and populate the new columns with the incoming values.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Throw an exception if mismatched schema information is encountered.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Ignore the new schema information.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Constraints</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">`Merge`</ph> method, constraints are not checked until all new data has been added to the existing <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Once the data has been added, constraints are enforced on the current values in the <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You must ensure that your code handles any exceptions that might be thrown due to constraint violations.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Consider a case where an existing row in a <ph id="ph1">`DataSet`</ph> is an <ph id="ph2">`Unchanged`</ph> row with a primary key value of 1.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>During a merge operation with a <ph id="ph1">`Modified`</ph> incoming row with an <ph id="ph2">`Original`</ph> primary key value of 2 and a <ph id="ph3">`Current`</ph> primary key value of 1, the existing row and the incoming row are not considered matching because the <ph id="ph4">`Original`</ph> primary key values differ.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>However, when the merge is completed and constraints are checked, an exception will be thrown because the <ph id="ph1">`Current`</ph> primary key values violate the unique constraint for the primary key column.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When rows are inserted into a database table containing an auto incrementing column such as an identity column, the identity column value returned by the insert may not match the value in the <ph id="ph1">`DataSet`</ph>, causing the returned rows to be appended instead of merged.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Retrieving Identity or Autonumber Values<ept id="p1">](../../../../../docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following code example merges two <ph id="ph1">`DataSet`</ph> objects with differents schemas into one <ph id="ph2">`DataSet`</ph> with the combined schemas of the two incoming <ph id="ph3">`DataSet`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks DataSet.Merge#1<ept id="p2">](../../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.Merge/CS/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DataWorks DataSet.Merge#1<ept id="p4">](../../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.Merge/VB/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following code example takes an existing <ph id="ph1">`DataSet`</ph> with updates and passes those updates to a <ph id="ph2">`DataAdapter`</ph> to be processed at the data source.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The results are then merged into the original <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>After rejecting changes that resulted in an error, the merged changes are committed with <ph id="ph1">`AcceptChanges`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks DataSet.MergeAcceptChanges#1<ept id="p2">](../../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.MergeAcceptChanges/CS/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DataWorks DataSet.MergeAcceptChanges#1<ept id="p4">](../../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.MergeAcceptChanges/VB/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks DataSet.MergeAcceptChanges#2<ept id="p2">](../../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.MergeAcceptChanges/CS/source.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DataWorks DataSet.MergeAcceptChanges#2<ept id="p4">](../../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.MergeAcceptChanges/VB/source.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Row States and Row Versions<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DataAdapters and DataReaders<ept id="p1">](../../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Retrieving and Modifying Data in ADO.NET<ept id="p1">](../../../../../docs/framework/data/adonet/retrieving-and-modifying-data.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Retrieving Identity or Autonumber Values<ept id="p1">](../../../../../docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>