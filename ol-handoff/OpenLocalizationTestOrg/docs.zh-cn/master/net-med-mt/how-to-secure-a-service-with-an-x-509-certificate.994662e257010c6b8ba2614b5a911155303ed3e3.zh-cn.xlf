<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-secure-a-service-with-an-x-509-certificate.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f96d531368916c6ef0faeca129794bf64a451c59</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-secure-a-service-with-an-x-509-certificate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07dca10b4ffa4d6b1f8c2db7f9e9d9243f1fe343</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07071b5c4eaaff511a1e719c05534d8757d64b3d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Secure a Service with an X.509 Certificate | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Secure a Service with an X.509 Certificate</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Securing a service with an X.509 certificate is a basic technique that most bindings in <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> use.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic walks through the steps of configuring a self-hosted service with an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A prerequisite is a valid certificate that can be used to authenticate the server.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The certificate must be issued to the server by a trusted certificate authority.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the certificate is not valid, any client trying to use the service will not trust the service, and consequently no connection will be made.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> using certificates, see <bpt id="p1">[</bpt>Working with Certificates<ept id="p1">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To configure a service with a certificate using code</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create the service contract and the implemented service.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Designing and Implementing Services<ept id="p1">](../../../../docs/framework/wcf/designing-and-implementing-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> class and set its security mode to <ph id="ph2">&lt;xref:System.ServiceModel.SecurityMode&gt;</ph>, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create two <ph id="ph1">&lt;xref:System.Type&gt;</ph> variables, one each for the contract type and the implemented contract, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class for the base address of the service.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`WSHttpBinding`</ph> uses the HTTP transport, the Uniform Resource Identifier (URI) must begin with that schema, or <ph id="ph2">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> will throw an exception when the service is opened.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class with the implemented contract type variable and the URI.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> to the service using the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Pass the contract, binding, and an endpoint address to the constructor, as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To retrieve metadata from the service, create a new <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior&gt;</ph> object and set the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential&gt;</ph> class to add the valid certificate to the service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The method can use one of several methods to find a certificate.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509FindType&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The enumeration specifies that the supplied value is the name of the entity that the certificate was issued to.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method to start the service listening.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you are creating a console application, call the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method to keep the service in the listening state.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate%2A&gt;</ph> method to configure a service with an X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following namespaces are required to compile the code:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with Certificates<ept id="p1">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>