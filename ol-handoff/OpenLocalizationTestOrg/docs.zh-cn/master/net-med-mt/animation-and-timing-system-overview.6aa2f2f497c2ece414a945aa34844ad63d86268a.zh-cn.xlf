<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de65eab474fd534f74328d9863ae9dc5308c527b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\animation-and-timing-system-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13cd33e23e4150de870035a1ff6199a58b6b011a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9efc3995f9ff470254b986ce711ca6c7bb516bc3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Animation and Timing System Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Animation and Timing System Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes how the timing system uses the animation, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>, and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> classes to animate properties.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To understand this topic, you should be able to use <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> animations to animate properties, as described in the <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It also helps to be familiar with dependency properties; for more information, see the <bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/dependency-properties-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Timelines and Clocks</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)</ept> described how a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> represents a segment of time, and an animation is a type of <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> that produces output values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By itself, a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>, doesn't do anything other than just describe a segment of time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It's the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> object that does the real work.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Likewise, animation doesn't actually animate properties: an animation class describes how output values should be calculated, but itâ€™s the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that was created for the animation that drives the animation output and applies it to properties.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> is a special type of object that maintains timing-related run-time state for the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It provides three bits of information that are essential to the animation and timing system: <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> determines its current time, progress, and state by using the timing behaviors described by its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>: <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph>, and so on.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> is created automatically for your timeline.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you animate by using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also create a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> explicitly by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt;</ph> method of your <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline.CreateClock%2A?displayProperty=fullName&gt;</ph> method creates a clock of the appropriate type for the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> on which it is called.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> contains child timelines, it creates <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects for them as well.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are arranged in trees that match the structure of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects tree from which they are created.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>There are different types of clocks for different types of timelines.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following table shows the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> types that correspond to some of the different <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> types.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Timeline type</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Clock type</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Clock purpose</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Animation (inherits from <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Generates output values for a dependency property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Processes a media file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Groups and controls its child <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Groups and controls its child <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can apply any <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> objects you create to compatible dependency properties by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> use can provide performance benefits.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Clocks and the Time Manager</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you animate objects in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, itâ€™s the time manager that manages the <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt;</ph> objects created for your timelines.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The time manager is the root of a tree of <ph id="ph1">&lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt;</ph> objects and controls the flow of time in that tree.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A time manager is automatically created for each <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application and is invisible to the application developer.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The time manager "ticks" many times per second; the actual number of ticks that occur each second varies depending on available system resources.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>During each one of these ticks, the time manager computes the state of all <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects in the timing tree.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following illustration shows the relationship between the time manager, and <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>, and an animated dependency property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Timing system components<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-clocks-1clock1prop.png "graphicsmm_clocks_1clock1prop")</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Animating a property</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When the time manager ticks, it updates the time of every <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> in the application.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> is an <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>, it uses the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph> from which it was created to calculate its current output value.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> supplies the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph> with the current local time, an input value, which is typically the base value of the property, and a default destination value.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you retrieve the value of an animated by property using the <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph> method or its CLR accessor, you get the output of its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Clock Groups</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The preceding section described how there are different types of <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects for different types of timelines.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following illustration shows the relationship between the time manager, a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockGroup&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>, and an animated dependency property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockGroup&gt;</ph> is created for timelines that group other timelines, such as the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> class, which groups animations and other timelines.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Timing system components<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-clocks-2clock1clockgroup2prop.png "graphicsmm_clocks_2clock1clockgroup2prop")</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A ClockGroup</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Composition</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It's possible to associate multiple clocks with a single property, in which case each clock uses the output value of the preceding clock as its base value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following illustration shows three <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> objects applied to the same property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Clock1 uses the base value of the animated property as its input and uses it to generate output.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Clock2 takes the output from Clock1 as its input and uses it to generate output.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Clock3 takes the output from Clock2 as its input and uses it to generate output.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When multiple clocks affect the same property simultaneously, they are said to be in a composition chain.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Timing system components<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-clocks-2clock1prop.png "graphicsmm_clocks_2clock1prop")</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A composition chain</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Note that although a relationship is created among the input and output of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> objects in the composition chain, their timing behaviors are not affected; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects (including <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> objects) have a hierarchical dependency on their parent <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To apply multiple clocks to the same property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> when applying a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, animation, or <ph id="ph4">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Ticks and Event Consolidation</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In addition to calculating output values, the time manager does other work every time it ticks: it determines the state of each clock and raises events as appropriate.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>While ticks occur frequently, it's possible for a lot of things to happen between ticks.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> might be stopped, started, and stopped again, in which case its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> value will have changed three times.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In theory, the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> event could be raised multiple times in a single tick; however, the timing engine consolidates events, so that the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> event can be raised at most once per tick.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This is true for all timing events: at most one event of each type is raised for a given <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> switches states and returns back to its original state between ticks (such as changing from <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> and back to <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph>), the associated event still occurs.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information about timing events, see the <bpt id="p1">[</bpt>Timing Events Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/timing-events-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Current Values and Base Values of Properties</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An animatable property can have two values: a base value and a current value.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When you set property using its CLR accessor or the <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> method, you set its base value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When a property is not animated, its base and current values are the same.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When you animate a property, the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> sets the property's <bpt id="p1">*</bpt>current<ept id="p1">*</ept> value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieving the property's value through its CLR accessor or the <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph> method returns the output of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can retrieve the property's base value by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Animation Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/animation-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Timing Events Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/timing-events-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Timing Behaviors Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>