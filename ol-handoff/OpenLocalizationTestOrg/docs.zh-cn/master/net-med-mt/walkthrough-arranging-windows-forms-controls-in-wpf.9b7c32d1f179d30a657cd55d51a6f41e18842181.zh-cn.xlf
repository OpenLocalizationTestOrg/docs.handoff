<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="walkthrough-arranging-windows-forms-controls-in-wpf.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f96c29117d5458924e20732d0847dc0ec0d1e594</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\walkthrough-arranging-windows-forms-controls-in-wpf.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2668b4c591b2921cdf80807854e4c17f4bf5f0a7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">599b3360616ea0c07674be852d9aaee58a440ed6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Arranging Windows Forms Controls in WPF | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Arranging Windows Forms Controls in WPF</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This walkthrough shows you how to use              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout features to arrange              <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls in a hybrid application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Tasks illustrated in this walkthrough include:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creating the project.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using default layout settings.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Sizing to content.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Using absolute positioning.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Specifying size explicitly.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Setting layout properties.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Understanding z-order limitations.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Docking.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Setting visibility.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Hosting a control that does not stretch.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Scaling.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Rotating.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Setting padding and margins.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Using dynamic layout containers.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For a complete code listing of the tasks illustrated in this walkthrough,              see              <bpt id="p1">[</bpt>Arranging Windows Forms Controls in WPF Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159971)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you are finished, you will have an understanding of              <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> layout features in              <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>-based applications.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You need the following components to complete this walkthrough:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To create and set up the project</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create a WPF Application project named                                  <ph id="ph1">`WpfLayoutHostingWf`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, add references to the following assemblies.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>WindowsFormsIntegration</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>System.Windows.Forms</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>System.Drawing</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Double-click MainWindow.xaml to open it in XAML view.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the                                  <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> element, add the following                                  <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> namespace mapping.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element set the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid.ShowGridLines%2A&gt;</ph> property to                                  <ph id="ph3">`true`</ph> and define five rows and three columns.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using Default Layout Settings</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>By default, the                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element handles the layout for the hosted                  <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To use default layout settings</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Button?displayProperty=fullName&gt;</ph> control appears in the                                  <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The hosted control is sized based on its content, and the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element is sized to accommodate the hosted control.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Sizing to Content</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element ensures that the hosted control is sized to display its content properly.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To size to content</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The two new button controls are sized to display the longer text string and larger font size properly, and the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> elements are resized to accommodate the hosted controls.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Using Absolute Positioning</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use absolute positioning to place the                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element anywhere in the user interface (UI).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To use absolute positioning</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element is placed 20 pixels from the top side of the grid cell and 20 pixels from the left.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifying Size Explicitly</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can specify the size of the                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element using the                  <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and                  <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To specify size explicitly</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#6<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element is set to a size of 50 pixels wide by 70 pixels high, which is smaller than the default layout settings.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The content of the                                  <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control is rearranged accordingly.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Setting Layout Properties</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Always set layout-related properties on the hosted control by using the properties of the                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Setting layout properties directly on the hosted control will yield unintended results.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Setting layout-related properties on the hosted control in                  <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> has no effect.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To see the effects of setting properties on the hosted control</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#7<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#7)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, double-click MainWindow.xaml.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>vb or MainWindow.xaml.cs to open it in the Code Editor.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Copy the following code into the                                  <ph id="ph1">`MainWindow`</ph> class definition.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#101<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml.cs#101)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#101<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml.vb#101)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Click the                                  <bpt id="p1">**</bpt>Click me<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">`button1_Click`</ph> event handler sets the                                  <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> and                                  <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> properties on the hosted control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This causes the hosted control to be repositioned within the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The host maintains the same screen area, but the hosted control is clipped.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Instead, the hosted control should always fill the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Understanding Z-Order Limitations</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>By default, visible                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> elements are always drawn on top of other                  <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements, and they are unaffected by z-order.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To enable z-ordering, set the                  <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.IsRedirected%2A&gt;</ph> property of the                  <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> to true and the                  <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost.CompositionMode%2A&gt;</ph> property to                  <ph id="ph4">&lt;xref:System.Windows.Interop.CompositionMode.Full&gt;</ph> or                  <ph id="ph5">&lt;xref:System.Windows.Interop.CompositionMode.OutputOnly&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To see the default z-order behavior</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#8<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#8)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element is painted over the label element.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To see the z-order behavior when IsRedirected is true</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Replace the previous z-order                                  example with the following XAML.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#8b<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml#8b)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The label element is painted over the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Docking</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element supports                  <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> docking.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Set the                  <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A&gt;</ph> attached property to dock the hosted control in a                  <ph id="ph2">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To dock a hosted control</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#9<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#9)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element is docked to the right side of the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Setting Visibility</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can make your                  <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control invisible or collapse it by setting the                  <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property on the                  <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>When a control is invisible, it is not displayed, but it occupies layout space.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When a control is collapsed, it is not displayed, nor does it occupy layout space.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To set the visibility of a hosted control</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#10<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#10)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In MainWindow.xaml.vb or MainWindow.xaml.cs, copy the following code into the class definition.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#102<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml.cs#102)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#102<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml.vb#102)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Click the                                  <bpt id="p1">**</bpt>Click to make invisible<ept id="p1">**</ept> button to make the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element invisible.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Click the                                  <bpt id="p1">**</bpt>Click to collapse<ept id="p1">**</ept> button to hide the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element from the layout entirely.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When the                                  <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> control is collapsed, the surrounding elements are rearranged to occupy its space.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Hosting a Control That Does Not Stretch</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Some                  <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls have a fixed size and do not stretch to fill available space in the layout.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, the                  <ph id="ph1">&lt;xref:System.Windows.Forms.MonthCalendar&gt;</ph> control displays a month in a fixed space.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To host a control that does not stretch</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#11<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#11)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element is centered in the grid row, but it is not stretched to fill the available space.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If the window is large enough, you may see two or more months displayed by the hosted                                  <ph id="ph1">&lt;xref:System.Windows.Forms.MonthCalendar&gt;</ph> control, but these are centered in the row.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout engine centers elements that cannot be sized to fill the available space.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Scaling</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Unlike <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements, most <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls are not continuously scalable.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element scales its hosted control when possible.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To enable full-fledged scaling, set the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.IsRedirected%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> to true and the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost.CompositionMode%2A&gt;</ph> property to                  <ph id="ph4">&lt;xref:System.Windows.Interop.CompositionMode.Full&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Interop.CompositionMode.OutputOnly&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To scale a hosted control by using the default behavior</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#12<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#12)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The hosted control and its surrounding elements are scaled by a factor of 0.5.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>However, the hosted control's font is not scaled.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To scale a hosted control by setting IsRedirected to true</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Replace the previous scaling example with the following XAML.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#12b<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml#12b)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The hosted control, its surrounding elements, and the hosted control's font are scaled by a factor of 0.5.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Rotating</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Unlike                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements,                  <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls do not support rotation.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>By default, the                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element does not rotate with other                  <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> elements when a rotation transformation is applied.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Any rotation value other than 180 degrees raises the                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>To enable rotating to any angle, set the                  <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.IsRedirected%2A&gt;</ph> property of the                  <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> to true and the                  <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost.CompositionMode%2A&gt;</ph> property to                  <ph id="ph4">&lt;xref:System.Windows.Interop.CompositionMode.Full&gt;</ph> or                  <ph id="ph5">&lt;xref:System.Windows.Interop.CompositionMode.OutputOnly&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To see the effect of rotation in a hybrid application</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#13<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#13)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The hosted control is not rotated, but its surrounding elements are rotated by an angle of 180 degrees.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>You may have to resize the window to see the elements.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To see the effect of rotation in a hybrid application when IsRedirected is true</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Replace the previous rotation example with the following XAML.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#13b<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml#13b)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The hosted control is rotated.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Note that the                                  <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform.Angle%2A&gt;</ph> property can be set to any value.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You may have to resize the window to see the elements.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Setting Padding and Margins</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Padding and margins in                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layout are similar to padding and margins in                  <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Simply set the                  <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Padding%2A&gt;</ph> and                  <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> properties on the                  <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>To set padding and margins for a hosted control</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#14<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#14)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#15<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#15)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The padding and margin settings are applied to the hosted                                  <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> controls in the same way they would be applied in                                  <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Using Dynamic Layout Containers</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> provides two dynamic layout containers,                  <ph id="ph2">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> and                  <ph id="ph3">&lt;xref:System.Windows.Forms.TableLayoutPanel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>You can also use these containers in                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> layouts.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To use a dynamic layout container</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Copy the following XAML into the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#16<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml#16)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>In MainWindow.xaml.vb or MainWindow.xaml.cs copy the following code into the class definition.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#103<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml.cs#103)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#103<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml.vb#103)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Add a call to the                                  <ph id="ph1">`InitializeFlowLayoutPanel`</ph> method in the constructor.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#104<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/CSharp/Window1.xaml.cs#104)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WpfLayoutHostingWfWithXaml#104<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WpfLayoutHostingWfWithXaml/VisualBasic/Window1.xaml.vb#104)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> element fills the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>, and                                  <ph id="ph3">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> arranges its child controls in the default                                  <ph id="ph4">&lt;xref:System.Windows.Forms.FlowLayoutPanel.FlowDirection%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Designer<ept id="p1">](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Layout Considerations for the WindowsFormsHost Element<ept id="p1">](../../../../docs/framework/wpf/advanced/layout-considerations-for-the-windowsformshost-element.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arranging Windows Forms Controls in WPF Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159971)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting a WPF Composite Control in Windows Forms<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-wpf-composite-control-in-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>