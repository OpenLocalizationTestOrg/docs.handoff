<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ui-automation-control-patterns-for-clients.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b2e7b61d5ceb05a8867c46c994c6fa9c3cf7277</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\ui-automation\ui-automation-control-patterns-for-clients.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41a6d4c21ce8b5f4a7ae791d08ece3cf920f1192</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1536644bad0a67aa504b42b5b7f2cf2a708b4bc1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>UI Automation Control Patterns for Clients | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>UI Automation Control Patterns for Clients</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This documentation is intended for .NET Framework developers who want to use the managed <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> classes defined in the <ph id="ph2">&lt;xref:System.Windows.Automation&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For the latest information about <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, see <bpt id="p1">[</bpt>Windows Automation API: UI Automation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=156746)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This overview introduces control patterns for UI Automation clients.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It includes information on how a UI Automation client can use control patterns to access information about the <ph id="ph1">[!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Control patterns provide a way to categorize and expose a control's functionality independent of the control type or the appearance of the control.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UI Automation clients can examine an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> to determine which control patterns are supported and be assured of the behavior of the control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For a complete list of control patterns, see <bpt id="p1">[</bpt>UI Automation Control Patterns Overview<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-control-patterns-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Getting Control Patterns</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Clients retrieve a control pattern from an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> by calling either <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Clients can use the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetSupportedPatterns%2A&gt;</ph> method or an individual <ph id="ph2">`IsPatternAvailable`</ph> property (for example, <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty&gt;</ph>) to determine if a pattern or group of patterns is supported on the <ph id="ph4">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, it is more efficient to attempt to get the control pattern and test for a <ph id="ph1">`null`</ph> reference than to check the supported properties and retrieve the control pattern since it results in fewer cross-process calls.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to get a <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> control pattern from an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Retrieving Properties on Control Patterns</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Clients can retrieve the property values on control patterns by calling either <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A?displayProperty=fullName&gt;</ph> and casting the object returned to an appropriate type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> properties, see <bpt id="p1">[</bpt>UI Automation Properties for Clients<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-properties-for-clients.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition to the <ph id="ph1">`GetPropertyValue`</ph> methods, property values can be retrieved through the <ph id="ph2">[!INCLUDE[TLA#tla_clr](../../../includes/tlasharptla-clr-md.md)]</ph> accessors to access the <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> properties on a pattern.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Controls with Variable Patterns</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Some control types support different patterns depending on their state or the manner in which the control is being used.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Examples of controls that can have variable patterns are list views (thumbnails, tiles, icons, list, details), <ph id="ph1">[!INCLUDE[TLA#tla_xl](../../../includes/tlasharptla-xl-md.md)]</ph> Charts (Pie, Line, Bar, Cell Value with a formula), <ph id="ph2">[!INCLUDE[TLA#tla_word](../../../includes/tlasharptla-word-md.md)]</ph>'s document area (Normal, Web Layout, Outline, Print Layout, Print Preview), and <ph id="ph3">[!INCLUDE[TLA#tla_wmp](../../../includes/tlasharptla-wmp-md.md)]</ph> skins.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Controls implementing custom control types can have any set of control patterns that are needed to represent their functionality.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Control Patterns<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-control-patterns.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Text Pattern<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-text-pattern.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Invoke a Control Using UI Automation<ept id="p1">](../../../docs/framework/ui-automation/invoke-a-control-using-ui-automation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get the Toggle State of a Check Box Using UI Automation<ept id="p1">](../../../docs/framework/ui-automation/get-the-toggle-state-of-a-check-box-using-ui-automation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Control Pattern Mapping for UI Automation Clients<ept id="p1">](../../../docs/framework/ui-automation/control-pattern-mapping-for-ui-automation-clients.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TextPattern Insert Text Sample<ept id="p1">](http://msdn.microsoft.com/en-us/67353f93-7ee2-42f2-ab76-5c078cf6ca16)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TextPattern Search and Selection Sample<ept id="p1">](http://msdn.microsoft.com/en-us/0a3bca57-8b72-489d-a57c-da85b7a22c7f)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>InvokePattern and ExpandCollapsePattern Menu Item Sample<ept id="p1">](http://msdn.microsoft.com/en-us/b7fa141c-e2d1-4da2-a27f-81a7d1172210)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>