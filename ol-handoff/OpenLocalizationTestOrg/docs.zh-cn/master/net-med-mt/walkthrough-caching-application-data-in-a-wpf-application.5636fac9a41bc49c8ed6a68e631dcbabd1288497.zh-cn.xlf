<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="walkthrough-caching-application-data-in-a-wpf-application.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f511f6c7bc98469a13620980d558a89239725993</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\walkthrough-caching-application-data-in-a-wpf-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">778c8a601d4d7777927906daf857f9c87d102c1a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8def9629df80ddc4b4282e8012af61993d0ea1da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Caching Application Data in a WPF Application | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Caching Application Data in a WPF Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Caching enables you to store data in memory for rapid access.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the data is accessed again, applications can get the data from the cache instead retrieving it from the original source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This can improve performance and scalability.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In addition, caching makes data available when the data source is temporarily unavailable.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> provides classes that enable you to use caching in <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These classes are located in the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace is new in the <ph id="ph2">[!INCLUDE[net_v40_short](../../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This namespace makes caching is available to all <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In previous versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph>, caching was available only in the <ph id="ph2">&lt;xref:System.Web&gt;</ph> namespace and therefore required a dependency on ASP.NET classes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This walkthrough shows you how to use the caching functionality that is available in the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> as part of a <ph id="ph2">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the walkthrough, you cache the contents of a text file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Tasks illustrated in this walkthrough include the following:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creating a WPF application project.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adding a reference to the <ph id="ph1">[!INCLUDE[net_v40_short](../../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializing a cache.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adding a cache entry that contains the contents of a text file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Providing an eviction policy for the cache entry.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Monitoring the path of the cached file and notifying the cache instance about changes to the monitored item.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In order to complete this walkthrough, you will need:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Microsoft <ph id="ph1">[!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A text file that contains a small amount of text.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(You will display the contents of the text file in a message box.) The code illustrated in the walkthrough assumes that you are working with the following file:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, you can use any text file and make small changes to the code in this walkthrough.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creating a WPF Application Project</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You will start by creating a WPF application project.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To create a WPF application</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Start <ph id="ph1">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>New Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box is displayed.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Installed Templates<ept id="p1">**</ept>, select the programming language you want to use (<bpt id="p2">**</bpt>Visual Basic<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept>).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>WPF Application<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you do not see the <bpt id="p1">**</bpt>WPF Application<ept id="p1">**</ept> template, make sure that you are targeting a version of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> that supports WPF.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, select <ph id="ph1">[!INCLUDE[net_v40_short](../../../../includes/net-v40-short-md.md)]</ph> from the list.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, enter a name for your project.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, you can enter <bpt id="p1">**</bpt>WPFCaching<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Create directory for solution<ept id="p1">**</ept> check box.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The WPF Designer opens in <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> view and displays the MainWindow.xaml file.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> creates the <bpt id="p1">**</bpt>My Project<ept id="p1">**</ept> folder, the Application.xaml file, and the MainWindow.xaml file.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Targeting the .NET Framework and Adding a Reference to the Caching Assemblies</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>By default, WPF applications target the <ph id="ph1">[!INCLUDE[net_client_v40_long](../../../../includes/net-client-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To use the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace in a WPF application, the application must target the <ph id="ph2">[!INCLUDE[net_v40_short](../../../../includes/net-v40-short-md.md)]</ph> (not the <ph id="ph3">[!INCLUDE[net_client_v40_long](../../../../includes/net-client-v40-long-md.md)]</ph>) and must include a reference to the namespace.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Therefore, the next step is to change the .NET Framework target and add a reference to the <ph id="ph1">&lt;xref:System.Runtime.Caching&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The procedure for changing the .NET Framework target is different in a Visual Basic project and in a Visual C# project.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To change the target .NET Framework in Visual Basic</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solutions Explorer<ept id="p1">**</ept>, right-click the project name, and then click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The properties window for the application is displayed.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Compile<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>At the bottom of the window, click <bpt id="p1">**</bpt>Advanced Compile Options…<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Advanced Compiler Settings<ept id="p1">**</ept> dialog box is displayed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Target framework (all configurations)<ept id="p1">**</ept> list, select <ph id="ph1">[!INCLUDE[net_v40_short](../../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>(Do not select <ph id="ph1">[!INCLUDE[net_client_v40_long](../../../../includes/net-client-v40-long-md.md)]</ph>.)</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Target Framework Change<ept id="p1">**</ept> dialog box is displayed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Target Framework Change<ept id="p1">**</ept> dialog box, click <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The project is closed and is then reopened.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Add a reference to the caching assembly by following these steps:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the name of the project and then click <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>.NET<ept id="p1">**</ept> tab, select <ph id="ph1">`System.Runtime.Caching`</ph>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To change the target .NET Framework in a Visual C# project</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project name and then click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The properties window for the application is displayed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Target framework<ept id="p1">**</ept> list, select <ph id="ph1">[!INCLUDE[net_v40_short](../../../../includes/net-v40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>(Do not select <bpt id="p1">**</bpt>.NET Framework 4 Client Profile<ept id="p1">**</ept>.)</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Add a reference to the caching assembly by following these steps:</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> folder and then click <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>.NET<ept id="p1">**</ept> tab, select <ph id="ph1">`System.Runtime.Caching`</ph>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Adding a Button to the WPF Window</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Next, you will add a button control and create an event handler for the button's <ph id="ph1">`Click`</ph> event.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Later you will add code to so when you click the button, the contents of the text file are cached and displayed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To add a button control</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, double-click the MainWindow.xaml file to open it.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, under <bpt id="p2">**</bpt>Common WPF Controls<ept id="p2">**</ept>, drag a <ph id="ph1">`Button`</ph> control to the <ph id="ph2">`MainWindow`</ph> window.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, set the <ph id="ph1">`Content`</ph> property of the <ph id="ph2">`Button`</ph> control to <bpt id="p2">**</bpt>Get Cache<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializing the Cache and Caching an Entry</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Next, you will add the code to perform the following tasks:</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Create an instance of the cache class—that is, you will instantiate a new <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specify that the cache uses a <ph id="ph1">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> object to monitor changes in the text file.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Read the text file and cache its contents as a cache entry.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Display the contents of the cached text file.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To create the cache object</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Double-click the button you just added in order to create an event handler in the MainWindow.xaml.cs or MainWindow.Xaml.vb file.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>At the top of the file (before the class declaration), add the following <ph id="ph1">`Imports`</ph> (Visual Basic) or <ph id="ph2">`using`</ph> (C#) statements:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In the event handler, add the following code to instantiate the cache object:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class is a built-in class that provides an in-memory object cache.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Add the following code to read the contents of a cache entry named <ph id="ph1">`filecontents`</ph>:</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Add the following code to check whether the cache entry named <ph id="ph1">`filecontents`</ph> exists:</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the specified cache entry does not exist, you must read the text file and add it as a cache entry to the cache.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`if/then`</ph> block, add the following code to create a new <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItemPolicy&gt;</ph> object that specifies that the cache entry expires after 10 seconds.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If no eviction or expiration information is provided, the default is <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph>, which means the cache entries never expire based only on an absolute time.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Instead, cache entries expire only when there is memory pressure.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>As a best practice, you should always explicitly provide either an absolute or a siding expiration.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Inside the <ph id="ph1">`if/then`</ph> block and following the code you added in the previous step, add the following code to create a collection for the file paths that you want to monitor, and to add the path of the text file to the collection:</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the text file you want to use is not <ph id="ph1">`c:\cache\cacheText.txt`</ph>, specify the path where the text file is that you want to use.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Following the code that you added in the previous step, add the following code to add a new <ph id="ph1">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> object to the collection of change monitors for the cache entry:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> object monitors the text file's path and notifies the cache if changes occur.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In this example, the cache entry will expire if the content of the file changes.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Following the code that you added in the previous step, add the following code to read the contents of the text file:</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The date and time timestamp is added so that you will be able to see when the cache entry expires.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Following the code that you added in the previous step, add the following code to insert the contents of the file into the cache object as a <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> instance:</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You specify information about how the cache entry should be evicted by passing the <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItemPolicy&gt;</ph> object that you created earlier as a parameter.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">`if/then`</ph> block, add the following code to display the cached file content in a message box:</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Build WPFCaching<ept id="p2">**</ept> to build your project.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Testing Caching in the WPF Application</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can now test the application.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To test caching in the WPF application</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to run the application.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MainWindow`</ph> window is displayed.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Get Cache<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The cached content from the text file is displayed in a message box.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Notice the timestamp on the file.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Close the message box and then click <bpt id="p1">**</bpt>Get Cache<ept id="p1">**</ept> again<bpt id="p2">**</bpt>.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The timestamp is unchanged.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This indicates the cached content is displayed.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Wait 10 seconds or more and then click <bpt id="p1">**</bpt>Get Cache<ept id="p1">**</ept> again.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This time a new timestamp is displayed.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This indicates that the policy let the cache entry expire and that new cached content is displayed.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In a text editor, open the text file that you created.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Do not make any changes yet.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Close the message box and then click <bpt id="p1">**</bpt>Get Cache<ept id="p1">**</ept> again<bpt id="p2">**</bpt>.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Notice the timestamp again.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Make a change to the text file and then save the file.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Close the message box and then click <bpt id="p1">**</bpt>Get Cache<ept id="p1">**</ept> again.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This message box contains the updated content from the text file and a new timestamp.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This indicates that the host-file change monitor evicted the cache entry immediately when you changed the file, even though the absolute timeout period had not expired.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>You can increase the eviction time to 20 seconds or more to allow more time for you to make a change in the file.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Code Example</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>After you have completed this walkthrough, the code for the project you created will resemble the following example.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Caching in .NET Framework Applications<ept id="p1">](../../../../docs/framework/performance/caching-in-net-framework-applications.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>