<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="modifying-data-with-a-dbdataadapter.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48a4be1ee785d7b091bd9fac8285bb239d474afe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\modifying-data-with-a-dbdataadapter.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30cef4e03f8fb9f745a42d21e30b01e6dcd84129</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c23a927858292c7a14fed7a3009ddfa199edfa12</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Modifying Data with a DbDataAdapter | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Modifying Data with a DbDataAdapter</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory.CreateDataAdapter%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> object gives you a <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object that is strongly typed to the underlying data provider specified at the time you create the factory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can then use a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to create commands to insert, update, and delete data from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to a data source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Retrieving Data with a DbDataAdapter</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to create a strongly typed <ph id="ph1">`DbDataAdapter`</ph> based on a provider name and connection string.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory.CreateConnection%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> to create a <ph id="ph3">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Next, the code uses the <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory.CreateCommand%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> to select data by setting its <ph id="ph3">`CommandText`</ph> and <ph id="ph4">`Connection`</ph> properties.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Finally, the code creates a <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Data.Common.DbProviderFactory.CreateDataAdapter%2A&gt;</ph> method and sets its <ph id="ph3">`SelectCommand`</ph> property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Fill`</ph> method of the <ph id="ph2">`DbDataAdapter`</ph> loads the data into a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks DbProviderFactories.DbDataAdapter#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbDataAdapter/CS/source.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>DataWorks DbProviderFactories.DbDataAdapter#1<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbDataAdapter/VB/source.vb#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Modifying Data with a DbDataAdapter</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to modify data in a <ph id="ph1">`DataTable`</ph> using a <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> by using a <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate the commands required for updating data at the data source.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> of the <ph id="ph2">`DbDataAdapter`</ph> is set to retrieve the CustomerID and CompanyName from the Customers table.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method is used to set the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method is used to set the <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph> property, and the <ph id="ph5">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method is used to set the <ph id="ph6">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The code adds a new row to the Customers table and updates the data source.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The code then locates the added row by searching on the CustomerID, which is the primary key defined for the Customers table.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It changes the CompanyName and updates the data source.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Finally, the code deletes the row.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks DbProviderFactories.DbDataAdapterModify#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbDataAdapterModify/CS/source.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>DataWorks DbProviderFactories.DbDataAdapterModify#1<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DbProviderFactories.DbDataAdapterModify/VB/source.vb#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Handling Parameters</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The .NET Framework data providers handle naming and specifying parameters and parameter placeholders differently.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This syntax is tailored to a specific data source, as described in the following table.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Data provider</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Parameter naming syntax</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Uses named parameters in the format <ph id="ph1">`@`</ph><bpt id="p1">*</bpt>parametername<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Uses named parameters in the format <ph id="ph1">`:`</ph><bpt id="p1">*</bpt>parmname<ept id="p1">*</ept> (or <bpt id="p2">*</bpt>parmname<ept id="p2">*</ept>).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Uses positional parameter markers indicated by a question mark (<ph id="ph1">`?`</ph>).</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Uses positional parameter markers indicated by a question mark (<ph id="ph1">`?`</ph>).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The factory model is not helpful for creating parameterized <ph id="ph1">`DbCommand`</ph> and <ph id="ph2">`DbDataAdapter`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You will need to branch in your code to create parameters that are tailored to your data provider.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Avoiding provider-specific parameters altogether by using string concatenation to construct direct SQL statements is not recommended for security reasons.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using string concatenation instead of parameters leaves your application vulnerable to SQL injection attacks.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DbProviderFactories<ept id="p1">](../../../../docs/framework/data/adonet/dbproviderfactories.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Obtaining a DbProviderFactory<ept id="p1">](../../../../docs/framework/data/adonet/obtaining-a-dbproviderfactory.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DbConnection, DbCommand and DbException<ept id="p1">](../../../../docs/framework/data/adonet/dbconnection-dbcommand-and-dbexception.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>