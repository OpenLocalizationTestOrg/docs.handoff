<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3902908b62bd543a5aef2b1366c3853e2fe6e04</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\linq-to-sql-queries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abec39d6268edd4492b52b1fa6a0f77e5096d43a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02e97dfdd2c652039fcf97ea3eee31d0219b01c3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Queries | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Queries</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You define <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> queries by using the same syntax as you would in <ph id="ph2">[!INCLUDE[vbteclinq](../../../../../../includes/vbteclinq-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The only difference is that the objects referenced in your queries are mapped to elements in a database.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Introduction to LINQ Queries (C#)<ept id="p1">](~/docs/csharp/programming-guide/concepts/linq/introduction-to-linq-queries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> translates the queries you write into equivalent SQL queries and sends them to the server for processing.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>More specifically, your application uses the <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> API to request query execution.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provider then transforms the query into SQL text and delegates execution to the ADO provider.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The ADO provider returns query results as a <ph id="ph1">`DataReader`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provider translates the ADO results to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> collection of user objects.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Most methods and operators on <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../../includes/dnprdnshort-md.md)]</ph> built-in types have direct translations to SQL.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Those that <ph id="ph1">[!INCLUDE[vbteclinq](../../../../../../includes/vbteclinq-md.md)]</ph> cannot translate generate run-time exceptions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SQL-CLR Type Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following table shows the similarities and differences between <ph id="ph1">[!INCLUDE[vbteclinq](../../../../../../includes/vbteclinq-md.md)]</ph> and <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> query items.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Item</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>LINQ Query</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> Query</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Return type of the local variable that holds the query (for queries that return sequences)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Generic <ph id="ph1">`IEnumerable`</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Generic <ph id="ph1">`IQueryable`</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Specifying the data source</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Uses the <ph id="ph1">`From`</ph> (<ph id="ph2">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph>) or <ph id="ph3">`from`</ph> (C#) clause</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Same</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Filtering</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Uses the <ph id="ph1">`Where`</ph><ph id="ph2">/</ph><ph id="ph3">`where`</ph> clause</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Same</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Grouping</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Uses the <ph id="ph1">`Groupâ€¦By`</ph><ph id="ph2">/</ph><ph id="ph3">`groupby`</ph> clause</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Same</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Selecting (Projecting)</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Uses the <ph id="ph1">`Select`</ph><ph id="ph2">/</ph><ph id="ph3">`select`</ph> clause</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Same</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deferred versus immediate execution</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Introduction to LINQ Queries (C#)<ept id="p1">](~/docs/csharp/programming-guide/concepts/linq/introduction-to-linq-queries.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Same</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Implementing joins</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Uses the <ph id="ph1">`Join`</ph><ph id="ph2">/</ph><ph id="ph3">`join`</ph> clause</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Can use the <ph id="ph1">`Join`</ph><ph id="ph2">/</ph><ph id="ph3">`join`</ph> clause, but more effectively uses the <ph id="ph4">&lt;xref:System.Data.Linq.Mapping.AssociationAttribute&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Querying Across Relationships<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/querying-across-relationships.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remote versus local execution</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Remote vs. Local Execution<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/remote-vs-local-execution.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Streaming versus cached querying</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Not applicable in a local memory scenario</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to LINQ Queries (C#)<ept id="p1">](~/docs/csharp/programming-guide/concepts/linq/introduction-to-linq-queries.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic LINQ Query Operations<ept id="p1">](~/docs/csharp/programming-guide/concepts/linq/basic-linq-query-operations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Relationships in LINQ Query Operations<ept id="p1">](~/docs/csharp/programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Query Concepts<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/query-concepts.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>