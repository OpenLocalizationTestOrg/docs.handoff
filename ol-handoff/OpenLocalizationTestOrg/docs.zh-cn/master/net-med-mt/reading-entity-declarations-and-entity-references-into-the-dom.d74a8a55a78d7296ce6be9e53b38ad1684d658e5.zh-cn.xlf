<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b0a574de89d2cf18db06596d84e2d7aa51bc215</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\reading-entity-declarations-and-entity-references-into-the-dom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ac915a5515889b41bb15bf5c4529db600206750</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">910004bef843e49e15931f915d595b46a314621c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reading Entity Declarations and Entity References into the DOM | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Reading Entity Declarations and Entity References into the DOM</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An entity is a declaration that states a name to be used in the XML in place of content or markup.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are two parts to entities.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>First, you must tie a name to the replacement content using an entity declaration.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An entity declaration is created by using the <ph id="ph1">`&lt;!ENTITY name "value"&gt;`</ph> syntax in a document type definition (DTD) or XML schema.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Secondly, the name defined in the entity declaration is subsequently used in the XML.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When used in the XML, it is called an entity reference.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, the following entity declaration declares an entity of the name <ph id="ph1">`publisher`</ph> being associated with the content of "Microsoft Press".</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example shows the use of this entity declaration in XML as an entity reference.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some parsers automatically expand entities when a document is loaded into memory.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Therefore, when the XML is being read into memory, entity declarations are remembered and saved.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the parser subsequently encounters <ph id="ph1">`&amp;;`</ph> characters, which identify a general entity reference, the parser looks up that name in an entity declaration table.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The reference, <ph id="ph1">`&amp;publisher;`</ph> is replaced by the content that it represents.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Using the following XML,</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>expanding the entity reference and replacing the <ph id="ph1">`&amp;publisher;`</ph> with the Microsoft Press content gives the following expanded XML.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Output<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>There are many kinds of entities.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following diagram shows the breakdown of entity types and terminology.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>flow chart of entity type hierarchy<ept id="p1">]</ept><bpt id="p2">(../../../../docs/standard/data/xml/media/entity-hierarchy.gif "</bpt>Entity_hierarchy<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default for the Microsoft .NET Framework implementation of the XML Document Object Model (DOM) is to preserve the entities references and not expand the entities when the XML is loaded.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The implication of this is that as a document is loaded in the DOM, an <bpt id="p1">**</bpt>XmlEntityReference<ept id="p1">**</ept> node containing the reference variable <ph id="ph1">`&amp;publisher;`</ph> is created, with child nodes representing the content in the entity declared in the DTD.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`&lt;!ENTITY publisher "Microsoft Press"&gt;`</ph> entity declaration, the following diagram shows the <bpt id="p1">**</bpt>XmlEntity<ept id="p1">**</ept> and <bpt id="p2">**</bpt>XmlText<ept id="p2">**</ept> nodes created from this declaration.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>nodes created from entity declaration<ept id="p1">]</ept><bpt id="p2">(../../../../docs/standard/data/xml/media/xml-entitydeclaration-node2.png "</bpt>xml_entitydeclaration_node2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The differences when entity references are expanded and when they are not makes a difference in what nodes are generated in the DOM tree, in memory.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The difference in the nodes that are generated is explained in the topics <bpt id="p1">[</bpt>Entity References are Preserved<ept id="p1">](../../../../docs/standard/data/xml/entity-references-are-preserved.md)</ept> and <bpt id="p2">[</bpt>Entity References are Expanded and Not Preserved<ept id="p2">](../../../../docs/standard/data/xml/entity-references-are-expanded-and-not-preserved.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>