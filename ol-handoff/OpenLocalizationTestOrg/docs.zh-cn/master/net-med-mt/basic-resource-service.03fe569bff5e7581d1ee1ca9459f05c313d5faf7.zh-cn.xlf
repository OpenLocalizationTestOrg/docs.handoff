<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a28100d9fbc0a8611ac13fe1ebe1e5612ee61a1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\basic-resource-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4788d2388a9b9d95ca67d67372fbb976cdc421f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e0aad30b96f079e17f82bb690d559455e4956df</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Basic Resource Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Basic Resource Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to implement a HTTP-based service using the <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> REST Programming model that exposes a collection of customers that supports the retrieve, add, delete and replace operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This sample consists of 2 components - a self-hosted <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> HTTP service (Service.cs) and a console application (program.cs) that creates the service and makes calls to it.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sample Details</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service exposes a collection of customers in a resource-oriented/REST manner.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In short, this involves having unique URIs for the collection of customers and every customer in the collection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The service supports sending an HTTP <ph id="ph1">`GET`</ph> at the collection URI to retrieve the entire collection and HTTP <ph id="ph2">`POST`</ph> at the collection URI to add a new customer to the collection.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Also at the URI for an individual customer, it supports HTTP <ph id="ph1">`GET`</ph> to get the customer details, HTTP <ph id="ph2">`PUT`</ph> to replace the details of the customer and HTTP <ph id="ph3">`DELETE`</ph> to remove the customer from the collection.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a new customer is added to the collection, the service assigns it a unique URI and stores the URI as part of the customer’s details.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Also, it communicates the URI to the client using the Location HTTP header of the response.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The App.config file configures the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service with a default <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpEndpoint&gt;</ph> that has the <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpEndpoint.HelpEnabled%2A&gt;</ph> property set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> creates an automatic HTML-based help page at <ph id="ph2">`http://localhost:8000/Customers/help`</ph> that provides information about how to construct HTTP requests to the service and how to access the service’s HTTP response – for instance, an example of how the customer details is represented in XML and JSON.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Exposing the customer collection (and more generally, any resource) in this manner allows the client to interact with it in a uniform way using URIs and HTTP <ph id="ph1">`GET`</ph>, <ph id="ph2">`PUT`</ph>, <ph id="ph3">`DELETE`</ph> and <ph id="ph4">`POST`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Program.cs demonstrates how such a client can be authored using <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that this is just one way to access a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> REST service.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It is also possible to access the service using other .NET Framework classes like the <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Other samples in the SDK (such as the <bpt id="p1">[</bpt>Basic HTTP Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-http-service.md)</ept> sample and the <bpt id="p2">[</bpt>Automatic Format Selection<ept id="p2">](../../../../docs/framework/wcf/samples/automatic-format-selection.md)</ept> sample) show how to use these classes to communicate with a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The sample consists a self-hosted service and a client that both run within a console application.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As the console application runs, the client makes requests to the service and writes the pertinent information from the responses to the console window.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Open the solution for the Basic Resource Service Sample.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When launching <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph>, you must run as an administrator for the sample to execute successfully.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Do this by right-clicking the <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> icon and selecting <bpt id="p1">**</bpt>Run as Administrator<ept id="p1">**</ept> from the context menu.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Press CTRL+SHIFT+B to build the solution and then press Ctrl+F5 to run the console application.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The console window appears and provides the URI of the running service and the URI of the HTML help page for the running service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>At any point in time you can view the HTML help page by typing the URI of the help page in a browser.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>As the sample runs, the client writes the status of the current activity.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Press any key to terminate the sample.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic HTTP Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-http-service.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic Format Selection<ept id="p1">](../../../../docs/framework/wcf/samples/automatic-format-selection.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>