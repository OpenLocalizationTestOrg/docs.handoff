<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">716dc5c03a20482ead74de3cfc5c3df860648d7a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilercallback6-getassemblyreferences-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">148300027a3da4c722e1cc230dfb4d0766d57193</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71b873d614f00b3fe3963731abb2159126fcd3c5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ICorProfilerCallback6::GetAssemblyReferences Method | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerCallback6::GetAssemblyReferences Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Notifies the profiler that an assembly is in a very early loading stage, when the common language runtime performs an assembly reference closure walk.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in] The path and name of the assembly whose metadata will be modified.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>[in] A pointer to the address of an <bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-interface.md)</ept> interface that specifies the assembly references to add.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Return values from this callback are ignored.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This callback is controlled by setting the <bpt id="p1">[</bpt>COR_PRF_HIGH_ADD_ASSEMBLY_REFERENCES<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-high-monitor-enumeration.md)</ept> event mask flag when calling the <bpt id="p2">[</bpt>ICorProfilerCallback5::SetEventMask2<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo5-seteventmask2-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the profiler registers for the <bpt id="p1">[</bpt>ICorProfilerCallback6::GetAssemblyReferences<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback6-getassemblyreferences-method.md)</ept> callback method, the runtime passes the path and name of the assembly to be loaded, along with a pointer to an <bpt id="p2">[</bpt>ICorProfilerAssemblyReferenceProvider<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-interface.md)</ept> interface object to that method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The profiler can then call the <bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider::AddAssemblyReference<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-addassemblyreference-method.md)</ept> method with a <ph id="ph1">`COR_PRF_ASSEMBLY_REFERENCE_INFO`</ph> object for each target assembly it plans to reference from the assembly specified in the <ph id="ph2">`GetAssemblyReferences`</ph> callback.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`GetAssemblyReferences`</ph> callback only if the profiler has to modify an assembly's metadata to add assembly references.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(But note that the actual modification of an assembly's metadata is done in the <bpt id="p1">[</bpt>ICorProfilerCallback::ModuleLoadFinished<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleloadfinished-method.md)</ept>callback method.) The profiler should implement the <ph id="ph1">`GetAssemblyReferences`</ph> callback method to inform the common language runtime (CLR) that assembly references will be added when the module has been loaded.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This helps ensure that assembly sharing decisions made by the CLR during this early stage remain valid although the profiler plans to modify the metadata assembly references later.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This can avoid some instances in which profiler metadata modifications cause an <ph id="ph1">`SECURITY_E_INCOMPATIBLE_SHARE`</ph> error.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The profiler uses the <bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-interface.md)</ept> object provided by this method to add assembly references to the CLR assembly reference closure walker.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-interface.md)</ept> object should be used only from within this callback.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Calls to the <bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider::AddAssemblyReference<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-addassemblyreference-method.md)</ept> method from this callback don't result in modified metadata, but only in a modified assembly reference closure walk.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The profiler will still have to use an <bpt id="p1">[</bpt>IMetaDataAssemblyEmit<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-interface.md)</ept> object to explicitly add assembly references from within the <bpt id="p2">[</bpt>ICorProfilerCallback::ModuleLoadFinished<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleloadfinished-method.md)</ept> callback for the referencing assembly, even if it implements the <ph id="ph1">`GetAssemblyReferences`</ph> callback.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The profiler should be prepared to receive duplicate calls to this callback for the same assembly, and should respond identically for each such duplicate call (by making the same set of <bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider::AddAssemblyReference<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-addassemblyreference-method.md)</ept> calls).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerCallback6 Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback6-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ModuleLoadFinished Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleloadfinished-method.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_PRF_ASSEMBLY_REFERENCE_INFO Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-assembly-reference-info-structure.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerAssemblyReferenceProvider Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerassemblyreferenceprovider-interface.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>