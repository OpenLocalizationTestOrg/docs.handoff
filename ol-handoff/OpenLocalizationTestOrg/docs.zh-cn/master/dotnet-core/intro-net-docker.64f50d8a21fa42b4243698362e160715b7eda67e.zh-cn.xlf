<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="intro-net-docker.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">725d8301a27f1109c85a89945f0fb8403e255ab4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\docker\intro-net-docker.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc8ae432b6cdf5ccd2fab83568ca81c0a7c3000f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ccbccd9c7ce80852916d74b5262bc145ad06802</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Introduction to Docker</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>This article provides an introduction and overview to Docker in the context of a .NET Core application.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Introduction to .NET and Docker</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core can easily run in a Docker container.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Containers provide a lightweight way to isolate your application from the rest of the host system, sharing just the kernel, and using resources given to your application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you're unfamiliar with Docker, it's highly recommended that you read through Docker's <bpt id="p1">[</bpt>overview documentation<ept id="p1">](https://docs.docker.com/engine/docker-overview/)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about how to install Docker, see the download page for <bpt id="p1">[</bpt>Docker Desktop: Community Edition<ept id="p1">](https://www.docker.com/products/docker-desktop)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Docker basics</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There are a few concepts you should be familiar with.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Docker client has a command line interface program you use to manage images and containers.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As previously stated, you should take the time to read through the <bpt id="p1">[</bpt>Docker overview<ept id="p1">](https://docs.docker.com/engine/docker-overview/)</ept> documentation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Images</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An image is an ordered collection of filesystem changes that form the basis of a container.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The image doesn't have a state and is read-only.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Much the time an image is based on another image, but with some customization.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, when you create an new image for your application, you would base it on an existing image that already contains the .NET Core runtime.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Because containers are created from images, images have a set of run parameters (such as a starting executable) that run when the container starts.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Containers</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A container is a runnable instance of an image.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As you build your image, you deploy your application and dependencies.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Then, multiple containers can be instantiated, each isolated from one another.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each container instance has its own filesystem, memory, and network interface.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Registries</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Container registries are a collection of image repositories.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can base your images on a registry image.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can create containers directly from an image in a registry.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>relationship between Docker containers, images, and registries<ept id="p1">](../../standard/microservices-architecture/container-docker-introduction/docker-containers-images-registries.md)</ept> is an important concept when <bpt id="p2">[</bpt>architecting and building containerized applications or microservices<ept id="p2">](../../standard/microservices-architecture/architect-microservice-container-applications/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This approach greatly shortens the time between development and deployment.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Docker has a public registry hosted at the <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](https://hub.docker.com/)</ept> that you can use.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core related images<ept id="p1">](https://hub.docker.com/_/microsoft-dotnet-core/)</ept> are listed at the Docker Hub.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Microsoft Container Registry (MCR) is the official source of Microsoft-provided container images.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The MCR is built on Azure CDN to provide globally-replicated images.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>However, the MCR does not have a public-facing website and the primary way to learn about Microsoft-provided container images is through the <bpt id="p1">[</bpt>Microsoft Docker Hub pages<ept id="p1">](https://hub.docker.com/_/microsoft-dotnet-core/)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Dockerfile</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept> is a file that defines a set of instructions that creates an image.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each instruction in the <bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept> creates a layer in the image.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For the most part, when you rebuild the image only the layers that have changed are rebuilt.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept> can be distributed to others and allows them to recreate to create a new image in the same manner you created it.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>While this allows you to distribute the <bpt id="p1">*</bpt>instructions<ept id="p1">*</ept> on how to create the image, the main way to distribute your image is to publish it to a registry.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>.NET Core images</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Official .NET Core Docker images are published to the Microsoft Container Registry (MCR) and are discoverable at the <bpt id="p1">[</bpt>Microsoft .NET Core Docker Hub repository<ept id="p1">](https://hub.docker.com/_/microsoft-dotnet-core/)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each repository contains images for different combinations of the .NET (SDK or Runtime) and OS that you can use.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Microsoft provides images that are tailored for specific scenarios.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">[</bpt>ASP.NET Core repository<ept id="p1">](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/)</ept> provides images that are built for running ASP.NET Core apps in production.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Azure services</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Various Azure services support containers.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You create a Docker image for your application and deploy it to one of the following services:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Kubernetes Service (AKS)<ept id="p1">](https://azure.microsoft.com/services/kubernetes-service/)</ept><ph id="ph1">\</ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Scale and orchestrate Linux containers using Kubernetes.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure App Service<ept id="p1">](https://azure.microsoft.com/services/app-service/containers/)</ept><ph id="ph1">\</ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Deploy web apps or APIs using Linux containers in a PaaS environment.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Batch<ept id="p1">](https://azure.microsoft.com/services/batch/)</ept><ph id="ph1">\</ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Run repetitive compute jobs using containers.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Service Fabric<ept id="p1">](https://azure.microsoft.com/services/service-fabric/)</ept><ph id="ph1">\</ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Lift, shift, and modernize .NET applications to microservices using Windows Server containers</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Container Registry<ept id="p1">](https://azure.microsoft.com/services/container-registry/)</ept><ph id="ph1">\</ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Store and manage container images across all types of Azure deployments.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Next steps</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Learn how to containerize a .NET Core application.<ept id="p1">](build-docker-netcore-container.md)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Try the Learn ASP.NET Core Microservice tutorial.<ept id="p1">](https://dotnet.microsoft.com/learn/web/aspnet-microservice-tutorial/intro)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>