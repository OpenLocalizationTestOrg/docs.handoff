<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bde4df1c9e84e103c75b0ccc32d7e970b7708b53</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-migrate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c6db5fb31713308b0cea3c15e6c0e7667f1dfa4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67922611c3c9662b00e043f147f209fd9e159a3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-migrate command - .NET Core CLI | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-migrate command migrates a project and all of its dependencies.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-migrate, CLI, CLI command, .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-migrate</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-migrate`</ph> - Migrates a Preview 2 .NET Core project to a .NET Core SDK 1.0 project.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command migrates a valid Preview 2 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>-based project to a valid .NET Core SDK 1.0 <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> project.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the command migrates the root project and any project references that the root project contains.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This behavior is disabled using the <ph id="ph1">`--skip-project-references`</ph> option at runtime.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Migration is performed on the following:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single project by specifying the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> file to migrate.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All of the directories specified in the <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file by passing in a path to the <bpt id="p2">*</bpt>global.json<ept id="p2">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>solution.sln<ept id="p1">*</ept> file, where it migrates the projects referenced in the solution.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On all sub-directories of the given directory recursively.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command keeps the migrated <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> file inside a <ph id="ph2">`backup`</ph> directory, which it creates if the directory doesn't exist.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This behavior is overriden using the <ph id="ph1">`--skip-backup`</ph> option.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>By default, the migration operation outputs the state of the migration process to standard output (STDOUT).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`--report-file &lt;REPORT_FILE&gt;`</ph> option, the output is saved to the file specify.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command only supports valid Preview 2 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>-based projects.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This means that you cannot use it to migrate DNX or Preview 1 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>-based projects directly to MSBuild/csproj projects.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You first need to manually migrate the project to a Preview 2 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>-based project and then use the <ph id="ph1">`dotnet migrate`</ph> command to migrate the project.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The path to one of the following:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>a <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> file to migrate.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>a <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file, it will migrate the folders specified in <bpt id="p2">*</bpt>global.json<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>a <bpt id="p1">*</bpt>solution.sln<ept id="p1">*</ept> file, it will migrate the projects referenced in the solution.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>a directory to migrate, it will recursively search for <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> files to migrate.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Defaults to current directory if nothing is specified.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Options</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Template csproj file to use for migration.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>By default, the same template as the one dropped by <ph id="ph1">`dotnet new console`</ph> is used.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The version of the sdk package that's referenced in the migrated app.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is the version of the SDK in <ph id="ph1">`dotnet new`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The path to the xproj file to use.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Required when there is more than one xproj in a project directory.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Skip migrating project references.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By default, project references are migrated recursively.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Output migration report to a file in addition to the console.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Output migration report file as JSON rather than user messages.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Skip moving <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, <bpt id="p2">*</bpt>global.json<ept id="p2">*</ept>, and <bpt id="p3">*</bpt><ph id="ph1">\*</ph>.xproj<ept id="p3">*</ept> to a <ph id="ph2">`backup`</ph> directory after successful migration.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Migrate a project in the current directory and all of its project-to-project dependencies:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Migrate all projects that <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file includes:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Migrate only the current project and no project-to-project (P2P) dependencies.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Also, use a specific SDK version:</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>