<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acd9321772fb75c84abc8f6c67ee8c13bd035add</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\windows-forms\virtual-mode-in-the-datarepeater-control-visual-studio.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fab8fb5619cbe8209ad212ed796abe32c90059d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8be59b1ea5f1e247dbaeb9efad462c7e95d65383</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Virtual Mode in the DataRepeater Control (Visual Studio) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Virtual Mode in the DataRepeater Control (Visual Studio)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you want to display large quantities of tabular data in a <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control, you can improve performance by setting the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.VirtualMode%2A&gt;</ph> property to <ph id="ph3">`True`</ph> and explicitly managing the control's interaction with its data source.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control provides several events that you can handle to interact with your data source and display the data as needed at run time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>How Virtual Mode Works</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The most common scenario for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control is to bind the child controls of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemTemplate%2A&gt;</ph> to a data source at design time and allow the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to pass data back and forth as needed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you use virtual mode, the controls are not bound to a data source, and data is passed back and forth to the underlying data source at run time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.VirtualMode%2A&gt;</ph> property is set to <ph id="ph2">`True`</ph>, you create the user interface by adding controls from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> instead of adding bound controls from the <bpt id="p2">**</bpt>Data Sources<ept id="p2">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Events are raised on a control-by-control basis, and you must add code to handle the display of data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a new <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeaterItem&gt;</ph> is scrolled into view, the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValueNeeded&gt;</ph> event is raised one time for each control and you must supply the values for each control in the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValueNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If data in one of the controls is changed by the user, the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValuePushed&gt;</ph> event is raised and you must validate the data and save it to your data source.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the user adds a new item, the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.NewItemNeeded&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use this event's handler to create a new record in your data source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To prevent unintended changes, you must also monitor the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event for each control and call <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.CancelEdit%2A&gt;</ph> if the user presses the ESC key.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If your data source changes, you can refresh the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control by calling the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.BeginResetItemTemplate%2A&gt;</ph> and <ph id="ph3">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.EndResetItemTemplate%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Both methods must be called in order.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Finally, you must implement event handlers for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemsRemoved&gt;</ph> event, which occurs when an item is deleted, and optionally for the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.UserDeletingItems&gt;</ph> and <ph id="ph3">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.UserDeletedItems&gt;</ph> events, which occur whenever a user deletes an item by pressing the DELETE key.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Implementing Virtual Mode</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Following are the steps that are required to implement virtual mode.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To implement virtual mode</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Drag a <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control from the <bpt id="p1">**</bpt>Visual Basic PowerPacks<ept id="p1">**</ept> tab in the <bpt id="p2">**</bpt>Toolbox<ept id="p2">**</ept> to a form or container control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Drag controls from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> onto the item template region (the upper region) of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You will need one control for each field in your data source that you want to display.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValueNeeded&gt;</ph> event to provide values for each control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This event is raised when a new <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeaterItem&gt;</ph> is scrolled into view.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The code will resemble the following example, which is for a data source named <ph id="ph1">`Employees`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbPowerPacksDataRepeaterVirtualMode#1<ept id="p2">](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/virtual-mode-in-the-datarepeater-control-visual-studio_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VbPowerPacksDataRepeaterVirtualMode#1<ept id="p4">](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/virtual-mode-in-the-datarepeater-control-visual-studio_1.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValuePushed&gt;</ph> event to store the data.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This event is raised when the user commits changes to a child control of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeaterItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The code will resemble the following example, which is for a data source named <ph id="ph1">`Employees`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbPowerPacksDataRepeaterVirtualMode#2<ept id="p2">](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/virtual-mode-in-the-datarepeater-control-visual-studio_2.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VbPowerPacksDataRepeaterVirtualMode#2<ept id="p4">](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/virtual-mode-in-the-datarepeater-control-visual-studio_2.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Implement a handler for each child control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event and monitor the ESC key.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.CancelEdit%2A&gt;</ph> method to prevent the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValuePushed&gt;</ph> event from being raised.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The code will resemble the following example.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbPowerPacksDataRepeaterVirtualMode#3<ept id="p2">](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/virtual-mode-in-the-datarepeater-control-visual-studio_3.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VbPowerPacksDataRepeaterVirtualMode#3<ept id="p4">](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/virtual-mode-in-the-datarepeater-control-visual-studio_3.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.NewItemNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This event is raised when the user adds a new item to the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The code will resemble the following example, which is for a data source named <ph id="ph1">`Employees`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbPowerPacksDataRepeaterVirtualMode#4<ept id="p2">](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/virtual-mode-in-the-datarepeater-control-visual-studio_4.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VbPowerPacksDataRepeaterVirtualMode#4<ept id="p4">](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/virtual-mode-in-the-datarepeater-control-visual-studio_4.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemsRemoved&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This event occurs when a user deletes an existing item.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The code will resemble the following example, which is for a data source named <ph id="ph1">`Employees`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbPowerPacksDataRepeaterVirtualMode#5<ept id="p2">](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/virtual-mode-in-the-datarepeater-control-visual-studio_5.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VbPowerPacksDataRepeaterVirtualMode#5<ept id="p4">](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/virtual-mode-in-the-datarepeater-control-visual-studio_5.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For control-level validation, optionally implement handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> events of the child controls.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The code will resemble the following example.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbPowerPacksDataRepeaterVirtualMode#6<ept id="p2">](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/virtual-mode-in-the-datarepeater-control-visual-studio_6.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VbPowerPacksDataRepeaterVirtualMode#6<ept id="p4">](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/virtual-mode-in-the-datarepeater-control-visual-studio_6.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValuePushed&gt;</ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.NewItemNeeded&gt;</ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.PowerPacks.DataRepeater.ItemValueNeeded&gt;</ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Introduction to the DataRepeater Control<ept id="p1">](../../../visual-basic/developing-apps/windows-forms/introduction-to-the-datarepeater-control-visual-studio.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>