<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76b44b33b33aa59b2d47aed56486371bf7150dbe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\compiler-messages\cs0246.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">011856fd33ab34875d8dab1f262332008b52ee3d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6701c7b0f66376065b8d8d39efdb87d5ce0d82a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Error CS0246 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Error CS0246</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The type or namespace name 'type/namespace' could not be found (are you missing a using directive or an assembly reference?)</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A type or namespace that is used in the program was not found.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You might have forgotten to reference (<bpt id="p1">[</bpt>/reference<ept id="p1">](../../../csharp/language-reference/compiler-options/reference-compiler-option.md)</ept>) the assembly that contains the type, or you might not have added the required <bpt id="p2">[</bpt>using directive<ept id="p2">](../../../csharp/language-reference/keywords/using-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Or, there might be an issue with the assembly you are trying to reference.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following situations cause compiler error CS0246.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Did you misspell the name of the type or namespace?</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without the correct name, the compiler cannot find the definition for the type or namespace.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This often occurs because the casing used in the name of the type is not correct.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Dataset ds;`</ph> generates CS0246 because the s in Dataset must be capitalized.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the error is for a namespace name, did you add a reference (<bpt id="p1">[</bpt>/reference<ept id="p1">](../../../csharp/language-reference/compiler-options/reference-compiler-option.md)</ept>) to the assembly that contains the namespace?</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, your code might contain the directive <ph id="ph1">`using Accessibility`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, if your project does not reference the assembly Accessibility.dll, error CS0246 is reported.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Managing references in a project<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/managing-references-in-a-project)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the error is for a type name, did you include the proper <bpt id="p1">[</bpt>using<ept id="p1">](../../../csharp/language-reference/keywords/using.md)</ept> directive, or, alternatively, fully qualify the name of the type?</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Consider the following declaration: <ph id="ph1">`DataSet ds`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To use the <ph id="ph1">`DataSet`</ph> type, you need two things.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>First, you need a reference to the assembly that contains the definition for the <ph id="ph1">`DataSet`</ph> type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Second, you need a <ph id="ph1">`using`</ph> directive for the namespace where <ph id="ph2">`DataSet`</ph> is located.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, because <ph id="ph1">`DataSet`</ph> is located in the <bpt id="p1">**</bpt>System.Data<ept id="p1">**</ept> namespace, you need the following directive at the beginning of your code: <ph id="ph2">`using System.Data`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`using`</ph> directive is not required.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, if you omit the directive, you must fully qualify the <ph id="ph1">`DataSet`</ph> type when referring to it.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Full qualification means that you specify both the namespace and the type each time you refer to the type in your code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you omit the <ph id="ph1">`using`</ph> directive in the previous example, you must write <ph id="ph2">`System.Data.DataSet ds`</ph> to declare <ph id="ph3">`ds`</ph> instead of <ph id="ph4">`DataSet ds`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Did you use a variable or some other language element where a type was expected?</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, in an <bpt id="p1">**</bpt>is<ept id="p1">**</ept> statement, if you use a <ph id="ph1">`Type`</ph> object instead of an actual type, you get error CS0246.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Did you use a <bpt id="p1">*</bpt>using alias directive<ept id="p1">*</ept> without fully qualifying the type name?</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`using`</ph> alias directive does not use the <ph id="ph2">`using`</ph> directives in the source code file to resolve types.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example generates CS0246 because the type <ph id="ph1">`List&lt;int&gt;`</ph> is not fully qualified.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`using`</ph> directive for <ph id="ph2">`System.Collections.Generic`</ph> does not prevent the error.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you get this error in code that was previously working, first look for missing or unresolved references in Solution Explorer.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Do you need to re-install a <bpt id="p1">[</bpt>NuGet<ept id="p1">](https://www.nuget.org/)</ept>package?</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For information about how the build system searches for references, see <bpt id="p1">[</bpt>Resolving file references in team build<ept id="p1">](http://blogs.msdn.com/b/manishagarwal/archive/2005/09/28/474769.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If all references seem to be correct, look in your source control history to see what has changed in your .csproj file and/or your local source file.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you haven’t successfully accessed the reference yet, use the Object Browser to inspect the assembly that is supposed to contain this namespace and verify that the namespace is present.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you verify with Object Browser that the assembly contains the namespace, try removing the "using" directive for the namespace and see what else breaks.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The root problem may be with some other type in another assembly.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following example generates CS0246 because a necessary <ph id="ph1">`using`</ph> directive is missing.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following example causes CS0246 because an object of type <ph id="ph1">`Type`</ph> was used where an actual type was expected.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>