<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7648b9bb5d54b58dc13371e1308f038289df8e56</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\nullable-types\how-to-safely-cast-from-bool-to-bool.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7575beeda6c783efa8982ba02325a4ef21fb2dfd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecec58052070a793a4e17d27dd6c3faad7a83d4e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Safely Cast from bool? to bool (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Safely Cast from bool? to bool (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`bool?`</ph> nullable type can contain three different values: <ph id="ph2">`true`</ph>, <ph id="ph3">`false`</ph>, and <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Therefore, the <ph id="ph1">`bool?`</ph> type cannot be used in conditionals such as with <ph id="ph2">`if`</ph>, <ph id="ph3">`for`</ph>, or <ph id="ph4">`while`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, the following code causes a compiler error.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is not allowed because it is unclear what <ph id="ph1">`null`</ph> means in the context of a conditional.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To use a <ph id="ph1">`bool?`</ph> in a conditional statement, first check its <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property to ensure that its value is not <ph id="ph3">`null`</ph>, and then cast it to <ph id="ph4">`bool`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>bool<ept id="p1">](../../../csharp/language-reference/keywords/bool.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you perform the cast on a <ph id="ph1">`bool?`</ph> with a value of <ph id="ph2">`null`</ph>, a <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown in the conditional test.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example shows one way to safely cast from <ph id="ph1">`bool?`</ph> to <ph id="ph2">`bool`</ph>:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Literal Keywords<ept id="p1">](../../../csharp/language-reference/keywords/literal-keywords.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nullable Types<ept id="p1">](../../../csharp/programming-guide/nullable-types/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>?? Operator<ept id="p1">](../../../csharp/language-reference/operators/null-conditional-operator.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>