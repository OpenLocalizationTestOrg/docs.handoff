<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4a0eca529b7c66cca527cfef3078a2c5bd24555</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\implicit-numeric-conversions-table.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c2c0bb24345eb869835458c540edd17bc1d135c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4520e5fa40d0fa55bbbe6b99aa4750866d5fdbf4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implicit Numeric Conversions Table (C# Reference) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implicit Numeric Conversions Table (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows the predefined implicit numeric conversions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Implicit conversions might occur in many situations, including method invoking and assignment statements.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>From</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sbyte<ept id="p1">](../../../csharp/language-reference/keywords/sbyte.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`short`</ph>, <ph id="ph2">`int`</ph>, <ph id="ph3">`long`</ph>, <ph id="ph4">`float`</ph>, <ph id="ph5">`double`</ph>, or <ph id="ph6">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>byte<ept id="p1">](../../../csharp/language-reference/keywords/byte.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`short`</ph>, <ph id="ph2">`ushort`</ph>, <ph id="ph3">`int`</ph>, <ph id="ph4">`uint`</ph>, <ph id="ph5">`long`</ph>, <ph id="ph6">`ulong`</ph>, <ph id="ph7">`float`</ph>, <ph id="ph8">`double`</ph>, or <ph id="ph9">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>short<ept id="p1">](../../../csharp/language-reference/keywords/short.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`int`</ph>, <ph id="ph2">`long`</ph>, <ph id="ph3">`float`</ph>, <ph id="ph4">`double`</ph>, or <ph id="ph5">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ushort<ept id="p1">](../../../csharp/language-reference/keywords/ushort.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`int`</ph>, <ph id="ph2">`uint`</ph>, <ph id="ph3">`long`</ph>, <ph id="ph4">`ulong`</ph>, <ph id="ph5">`float`</ph>, <ph id="ph6">`double`</ph>, or <ph id="ph7">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>int<ept id="p1">](../../../csharp/language-reference/keywords/int.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`long`</ph>, <ph id="ph2">`float`</ph>, <ph id="ph3">`double`</ph>, or <ph id="ph4">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uint<ept id="p1">](../../../csharp/language-reference/keywords/uint.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`long`</ph>, <ph id="ph2">`ulong`</ph>, <ph id="ph3">`float`</ph>, <ph id="ph4">`double`</ph>, or <ph id="ph5">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>long<ept id="p1">](../../../csharp/language-reference/keywords/long.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`float`</ph>, <ph id="ph2">`double`</ph>, or <ph id="ph3">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>char<ept id="p1">](../../../csharp/language-reference/keywords/char.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ushort`</ph>, <ph id="ph2">`int`</ph>, <ph id="ph3">`uint`</ph>, <ph id="ph4">`long`</ph>, <ph id="ph5">`ulong`</ph>, <ph id="ph6">`float`</ph>, <ph id="ph7">`double`</ph>, or <ph id="ph8">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>float<ept id="p1">](../../../csharp/language-reference/keywords/float.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ulong<ept id="p1">](../../../csharp/language-reference/keywords/ulong.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`float`</ph>, <ph id="ph2">`double`</ph>, or <ph id="ph3">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Precision but not magnitude might be lost in the conversions from <ph id="ph1">`int`</ph>, <ph id="ph2">`uint`</ph>,  <ph id="ph3">`long`</ph>, or <ph id="ph4">`ulong`</ph> to <ph id="ph5">`float`</ph> and from <ph id="ph6">`long`</ph> or <ph id="ph7">`ulong`</ph> to <ph id="ph8">`double`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There are no implicit conversions to the <ph id="ph1">`char`</ph> type.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are no implicit conversions between floating-point types and the <ph id="ph1">`decimal`</ph> type.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A constant expression of type <ph id="ph1">`int`</ph> can be converted to <ph id="ph2">`sbyte`</ph>, <ph id="ph3">`byte`</ph>, <ph id="ph4">`short`</ph>, <ph id="ph5">`ushort`</ph>, <ph id="ph6">`uint`</ph>, or <ph id="ph7">`ulong`</ph>, provided the value of the constant expression is within the range of the destination type.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>C# Language Specification</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Integral Types Table<ept id="p1">](../../../csharp/language-reference/keywords/integral-types-table.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Built-In Types Table<ept id="p1">](../../../csharp/language-reference/keywords/built-in-types-table.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Explicit Numeric Conversions Table<ept id="p1">](../../../csharp/language-reference/keywords/explicit-numeric-conversions-table.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Casting and Type Conversions<ept id="p1">](../../../csharp/programming-guide/types/casting-and-type-conversions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>