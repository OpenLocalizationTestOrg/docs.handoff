<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9dcf0802b1d9a1d6b63d108289cbc814b73e8c48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\when-to-use-generic-collections.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7676d57b92614d0ccb5d748004d8a47fcd4cc4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad154d1962de3f379ce3bfd53f75ff2210c3937e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using generic collections is generally recommended, because you gain the immediate benefit of type safety without having to derive from a base collection type and implement type-specific members.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Generic collection types also generally perform better than the corresponding nongeneric collection types (and better than types that are derived from nongeneric base collection types) when the collection elements are value types, because with generics there is no need to box the elements.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For programs that target the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph> or later, you should use the generic collection classes in the <ph id="ph2">&lt;xref:System.Collections.Concurrent&gt;</ph> namespace when multiple threads might be adding or removing items from the collection concurrently.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following generic types correspond to existing collection types:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is the generic class that corresponds to <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> are the generic classes that correspond to <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> is the generic class that corresponds to <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> can be used as a base class, but unlike <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>, it is not abstract.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This makes it much easier to use.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is the generic class that corresponds to <ph id="ph2">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is not abstract, and has a constructor that makes it easy to expose an existing <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> as a read-only collection.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic classes correspond to the respective nongeneric classes with the same names.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Additional Types</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Several generic collection types do not have nongeneric counterparts.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>They include the following:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is a general-purpose linked list that provides O(1) insertion and removal operations.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> is a sorted dictionary with O(log <ph id="ph2">`n`</ph>) insertion and retrieval operations, which makes it a useful alternative to <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is a hybrid between a list and a dictionary, which provides a way to store objects that contain their own keys.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> implements a collection class with bounding and blocking functionality.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> provides fast insertion and removal of unordered elements.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>LINQ to Objects</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The LINQ to Objects feature enables you to use LINQ queries to access in-memory objects as long as the object type implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data; are typically more concise and readable than standard <ph id="ph1">`foreach`</ph> loops; and provide filtering, ordering and grouping capabilities.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to Objects<ept id="p1">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept> and <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Additional Functionality</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Some of the generic types have functionality that is not found in the nongeneric collection types.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class, which corresponds to the nongeneric <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class, has a number of methods that accept generic delegates, such as the <ph id="ph3">&lt;xref:System.Predicate%601&gt;</ph> delegate that allows you to specify methods for searching the list, the <ph id="ph4">&lt;xref:System.Action%601&gt;</ph> delegate that represents methods that act on each element of the list, and the <ph id="ph5">&lt;xref:System.Converter%602&gt;</ph> delegate that lets you define conversions between types.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class allows you to specify your own <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface implementations for sorting and searching the list.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> classes also have this capability.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In addition, these classes let you specify comparers when the collection is created.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In similar fashion, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> classes let you specify your own equality comparers.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collections and Data Structures<ept id="p1">](../../../docs/standard/collections/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Commonly Used Collection Types<ept id="p1">](../../../docs/standard/collections/commonly-used-collection-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Generics<ept id="p1">](../../../docs/standard/generics/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>