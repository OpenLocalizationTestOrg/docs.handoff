<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-the-wcf-syndication-object-model-maps-to-atom-and-rss.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c9e242365d694c907951c7f5069be091aa70078</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-the-wcf-syndication-object-model-maps-to-atom-and-rss.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47bfc6cd89e27d454af103b29bfb419ac9aefcdd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d0b51186a2ac9361b7ebcb638bc08b3d7c60934</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How the WCF Syndication Object Model Maps to Atom and RSS | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How the WCF Syndication Object Model Maps to Atom and RSS</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When developing a <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> syndication service, you create feeds and items using the following classes:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> can be serialized into any syndication format for which a formatter is defined.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> ships with two formatters: <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.Rss20FeedFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The object model around <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> is aligned more closely with the Atom 1.0 specification than the RSS 2.0 specification.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This is because Atom 1.0 is a more substantial specification that defines elements that are ambiguous or omitted from the RSS 2.0 specification.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Because of this, many items in the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> syndication object model have no direct representation in the RSS 2.0 specification.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When serializing <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> objects into RSS 2.0, <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> allows you to serialize Atom-specific data elements as namespace-qualified extension elements that conform to the Atom specification.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can control this with a parameter passed to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Rss20FeedFormatter&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code samples in this topic use one of two methods defined here to do the actual serialization.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SerializeFeed`</ph> serializes a syndication feed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SerializeItem`</ph> serializes a syndication item.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>SyndicationFeed</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SyndicationItem</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>SyndicationPerson</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> class is serialized to RSS 2.0 if only one <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> exists in the <ph id="ph3">`Authors`</ph> or <ph id="ph4">`Contributors`</ph> collections, respectively.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> class is serialized to RSS 2.0 if more than one <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> exists in the <ph id="ph3">`Authors`</ph> or <ph id="ph4">`Contributors`</ph> collections, respectively.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>SyndicationLink</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>SyndicationCategory</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>TextSyndicationContent</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class to Atom 1.0 and RSS 2.0 when <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> is created with HTML content.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class with HTML content is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class with HTML content is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class to Atom 1.0 and RSS 2.0 when <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> is created with plain text content.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class with plain text content is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class with plain text content is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class to Atom 1.0 and RSS 2.0 when <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> is created with XHTML content.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class with XHTML content is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.TextSyndicationContent&gt;</ph> class with XHTML content is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>UrlSyndicationContent</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.UrlSyndicationContent&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.UrlSyndicationContent&gt;</ph> class is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.UrlSyndicationContent&gt;</ph> class with XHTML content is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>XmlSyndicationContent</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following code example shows how to serialize the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.XmlSyndicationContent&gt;</ph> class to Atom 1.0 and RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.XmlSyndicationContent&gt;</ph> class is serialized to Atom 1.0.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.XmlSyndicationContent&gt;</ph> class with XHTML content is serialized to RSS 2.0.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Syndication Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-syndication-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Architecture of Syndication<ept id="p1">](../../../../docs/framework/wcf/feature-details/architecture-of-syndication.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Basic RSS Feed<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-basic-rss-feed.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Basic Atom Feed<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-basic-atom-feed.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Expose a Feed as Both Atom and RSS<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-expose-a-feed-as-both-atom-and-rss.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>