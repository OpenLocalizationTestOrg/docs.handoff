<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ed26c9f0a8c3f14395c21d3c8e70139cf300057</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\how-to-determine-which-modifier-key-was-pressed.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93f38b1033dc7918db3a323f45d6d1515869ea3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81ca9d551ac4bf3072ebaaae822081e7c81f6960</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Determine Which Modifier Key Was Pressed | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Determine Which Modifier Key Was Pressed</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you create an application that accepts the user's keystrokes, you may also want to monitor for modifier keys such as the SHIFT, ALT, and CTRL keys.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When a modifier key is pressed in combination with other keys, or with mouse clicks, your application can respond appropriately.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, if the letter S is pressed, this may simply cause an "s" to appear on the screen, but if the keys CTRL+S are pressed, the current document may be saved.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> received by the event handler specifies which modifier keys are pressed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Alternatively, the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> specifies the character that was pressed as well as any modifier keys combined with a bitwise OR.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, if you are handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event or a mouse event, the event handler does not receive this information.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this case, you must use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In either case, you must perform a bitwise AND of the appropriate <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> value and the value you are testing.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> enumeration offers variations of each modifier key, so it is important that you perform the bitwise AND with the correct value.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, the SHIFT key is represented by <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Keys&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Keys&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Keys&gt;</ph> The correct value to test SHIFT as a modifier key is <ph id="ph5">&lt;xref:System.Windows.Forms.Keys&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Similarly, to test for CTLR and ALT as modifiers you should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Keys&gt;</ph> values, respectively.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Visual Basic programmers can also access key information through the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Devices.Computer.Keyboard%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To determine which modifier key was pressed</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use the bitwise <ph id="ph1">`AND`</ph> operator with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;</ph> property and a value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Keys&gt;</ph> enumeration to determine whether a particular modifier key is pressed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code example shows how to determine whether the SHIFT key is pressed within a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.DetermineModifierKey#5<ept id="p2">](../../../samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DetermineModifierKey/cpp/form1.cpp#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>System.Windows.Forms.DetermineModifierKey#5<ept id="p4">](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DetermineModifierKey/CS/form1.cs#5)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Windows.Forms.DetermineModifierKey#5<ept id="p6">](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DetermineModifierKey/VB/form1.vb#5)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Keyboard Input in a Windows Forms Application<ept id="p1">](../../../docs/framework/winforms/keyboard-input-in-a-windows-forms-application.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Determine If CapsLock is On in Visual Basic<ept id="p1">](http://msdn.microsoft.com/en-us/91e60f5c-dd61-4222-ba5f-39af803afd8c)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>