<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39e19cdd90ef3ef0e53352aaf3e7c69e4b75bba3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\namespace-support-in-the-dom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27b5979587a74c112ffcf11fe2381671efbd2950</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">216629b74e29fc714324e4b24cec3d84bc2715b0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Namespace Support in the DOM | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Namespace Support in the DOM</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The XML Document Object Model (DOM) is completely namespace-aware.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Only namespace-aware XML documents are supported.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The World Wide Web Consortium (W3C) specifies that DOM applications that implement Level 1 can be non-namespace-aware, and DOM Level 2 features are namespace-aware.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, all features in the XML DOM are namespace-aware, regardless if the method is from the Level 1 or Level 2 DOM Recommendation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, in a non-namespace-aware setting, calling <ph id="ph1">`setAttribute("A:b", "123")`</ph>, as specified in the DOM Level 1 Recommendation, does not result in an attribute with a prefix of <ph id="ph2">`A`</ph> and a local name of <ph id="ph3">`b`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It would result in an attribute with the value <ph id="ph1">`A:b`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In a namespace-aware environment, the call to the DOM Level 2 <ph id="ph1">`setAttribute("A:b", "123")`</ph> results in an attribute with a prefix of <ph id="ph2">`A`</ph> and a local name of <ph id="ph3">`b`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is how the Microsoft .NET Framework DOM works.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, for all methods that take a name parameter, these methods also take a prefix to qualify the name.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The name parameter, such as the <ph id="ph1">`A:b`</ph> in the <bpt id="p1">**</bpt>setAttribute<ept id="p1">**</ept> DOM Level 1 method, is parsed as follows:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If there are no colon (:) characters, then the local name is set to the <ph id="ph1">`name`</ph> parameter, and the prefix and NamespaceURI are empty strings.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If a colon is found, then the name is split into two parts based on the position of the first colon character.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The prefix is set to the string found before the colon, and local name is set to the string found after the colon.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For methods that do not take a NamespaceURI value, the NamespaceURI is not resolved and remains set to empty string.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Otherwise, the NamespaceURI is set to the string passed to the method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the prefix is undefined, then the <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> method and <bpt id="p2">**</bpt>InnerXml<ept id="p2">**</ept> and <bpt id="p3">**</bpt>OuterXml<ept id="p3">**</ept> properties fail.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>