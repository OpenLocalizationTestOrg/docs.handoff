<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="walkthrough-creating-your-first-touch-application.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0166cd9c669ef2340eb86cc526c479c0239873c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\walkthrough-creating-your-first-touch-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d29036f9faa8a2132215e60d651c27d6a9704dd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df1ed324d2959e03e20cef3c0f4c7c107c84938d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Creating Your First Touch Application | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating Your First Touch Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> enables applications to respond to touch.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, you can interact with an application by using one or more fingers on a touch-sensitive device, such as a touchscreen This walkthrough creates an application that enables the user to move, resize, or rotate a single object by using touch.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You need the following components to complete this walkthrough:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_ext](../../../../includes/vs-dev10-ext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows 7.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A device that accepts touch input, such as a touchscreen, that supports Windows Touch.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Additionally, you should have a basic understanding of how to create an application in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, especially how to subscribe to and handle an event.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: My First WPF Desktop Application<ept id="p1">](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creating the Application</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To create the application</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a new WPF Application project in Visual Basic or Visual C# named <ph id="ph1">`BasicManipulation`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a New WPF Application Project<ept id="p1">](http://msdn.microsoft.com/en-us/1f6aea7a-33e1-4d3f-8555-1daa42e95d82)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Replace the contents of MainWindow.xaml with the following XAML.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This markup creates a simple application that contains a red <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> is set to true so that it will receive manipulation events.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The application subscribes to the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These events contain the logic to move the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> when the user manipulates it.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>BasicManipulation#UI<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you are using Visual Basic, in the first line of MainWindow.xaml, replace <ph id="ph1">`x:Class="BasicManipulation.MainWindow"`</ph> with <ph id="ph2">`x:Class="MainWindow"`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`MainWindow`</ph> class, add the following <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph> event occurs when <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> detects that touch input begins to manipulate an object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The code specifies that the position of the manipulation should be relative to the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>BasicManipulation#ManipulationStarting<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>BasicManipulation#ManipulationStarting<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`MainWindow`</ph> class, add the following <ph id="ph2">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event occurs when the touch input changes position and can occur multiple times during a manipulation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The event can also occur after a finger is raised.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if the user drags a finger across a screen, the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event occurs multiple times as the finger moves.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When the user raises a finger from the screen, the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event keeps occurring to simulate inertia.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The code applies the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> to move it as the user moves the touch input.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It also checks whether the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> is outside the bounds of the <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> when the event occurs during inertia.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If so, the application calls the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A?displayProperty=fullName&gt;</ph> method to end the manipulation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>BasicManipulation#ManipulationDelta<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>BasicManipulation#ManipulationDelta<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`MainWindow`</ph> class, add the following <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</ph> event occurs when the user raises all fingers from the screen.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The code sets the initial velocity and deceleration for the movement, expansion, and rotation of the rectangle.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>BasicManipulation#ManipulationInertiaStarting<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>BasicManipulation#ManipulationInertiaStarting<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Build and run the project.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You should see a red square appear in the window.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Testing the Application</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To test the application, try the following manipulations.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that you can do more than one of the following at the same time.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To move the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, put a finger on the <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and move the finger across the screen.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To resize the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, put two fingers on the <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and move the fingers closer together or farther apart from each other.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To rotate the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, put two fingers on the <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and rotate the fingers around each other.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To cause inertia, quickly raise your fingers from the screen as you perform the previous manipulations.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> will continue to move, resize, or rotate for a few seconds before it stops.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>