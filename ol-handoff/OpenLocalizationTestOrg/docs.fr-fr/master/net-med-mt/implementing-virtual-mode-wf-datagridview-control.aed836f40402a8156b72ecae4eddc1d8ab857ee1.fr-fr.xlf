<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="implementing-virtual-mode-wf-datagridview-control.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9891bf3d38d0928e4ae19f312d6a84481c429807</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\implementing-virtual-mode-wf-datagridview-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67afca87cdf50705439861bd635d7a7047e4004c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9625af3239de8a6bdf5b9e562d367d9be5a8afa7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you want to display very large quantities of tabular data in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, you can set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property to <ph id="ph3">`true`</ph> and explicitly manage the control's interaction with its data store.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This lets you fine-tune the performance of the control in this situation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control provides several events that you can handle to interact with a custom data store.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This walkthrough guides you through the process of implementing these event handlers.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The code example in this topic uses a very simple data source for illustration purposes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In a production setting, you will typically load only the rows you need to display into a cache, and handle <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> events to interact with and update the cache.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Virtual Mode with Just-In-Time Data Loading in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-jit-data-loading-in-the-datagrid.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To copy the code in this topic as a single listing, see <bpt id="p1">[</bpt>How to: Implement Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating the Form</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To implement virtual mode</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and contains a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following code contains some basic initialization.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It declares some variables that will be used in later steps, provides a <ph id="ph1">`Main`</ph> method, and provides a simple form layout in the class constructor.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Implement a handler for your form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event that initializes the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and populates the data store with sample values.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event that retrieves the requested cell value from the data store or the <ph id="ph2">`Customer`</ph> object currently in edit.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This event occurs whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control needs to paint a cell.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event that stores an edited cell value in the <ph id="ph2">`Customer`</ph> object representing the edited row.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This event occurs whenever the user commits a cell value change.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.NewRowNeeded&gt;</ph> event that creates a new <ph id="ph2">`Customer`</ph> object representing a newly created row.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This event occurs whenever the user enters the row for new records.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidated&gt;</ph> event that saves new or modified rows to the data store.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This event occurs whenever the user changes the current row.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDirtyStateNeeded&gt;</ph> event that indicates whether the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> event will occur when the user signals row reversion by pressing ESC twice in edit mode or once outside of edit mode.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> occurs upon row reversion when any cells in the current row have been modified unless the <ph id="ph2">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=fullName&gt;</ph> property is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowDirtyStateNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This event is useful when the commit scope is determined at run time.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> event that discards the values of the <ph id="ph2">`Customer`</ph> object representing the current row.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This event occurs when the user signals row reversion by pressing ESC twice in edit mode or once outside of edit mode.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This event does not occur if no cells in the current row have been modified or if the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=fullName&gt;</ph> property has been set to <ph id="ph2">`false`</ph> in a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowDirtyStateNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletingRow&gt;</ph> event that deletes an existing <ph id="ph2">`Customer`</ph> object from the data store or discards an unsaved <ph id="ph3">`Customer`</ph> object representing a newly created row.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This event occurs whenever the user deletes a row by clicking a row header and pressing the DELETE key.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Implement a simple <ph id="ph1">`Customers`</ph> class to represent the data items used by this code example.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Testing the Application</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can now test the form to make sure it behaves as expected.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To test the form</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compile and run the application.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You will see a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control populated with three customer records.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can modify the values of multiple cells in a row and press ESC twice in edit mode and once outside of edit mode to revert the entire row to its original values.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you modify, add, or delete rows in the control, <ph id="ph1">`Customer`</ph> objects in the data store are modified, added, or deleted as well.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This application gives you a basic understanding of the events you must handle to implement virtual mode in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can improve this basic application in a number of ways:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Implement a data store that caches values from an external database.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The cache should retrieve and discard values as necessary so that it only contains what is necessary for display while consuming a small amount of memory on the client computer.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Fine-tune the performance of the data store depending on your requirements.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, you might want to compensate for slow network connections rather than client-computer memory limitations by using a larger cache size and minimizing the number of database queries.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information about caching values from an external database, see <bpt id="p1">[</bpt>How to: Implement Virtual Mode with Just-In-Time Data Loading in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/virtual-mode-with-just-in-time-data-loading-in-the-datagrid.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.NewRowNeeded&gt;</ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidated&gt;</ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowDirtyStateNeeded&gt;</ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserDeletingRow&gt;</ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performance Tuning in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/performance-tuning-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing Virtual Mode with Just-In-Time Data Loading in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-jit-data-loading-in-the-datagrid.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Implement Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>