<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c58230c89567e197078eb8e5b8fa2161acbc7fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-compress-and-extract-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a64263205ab6be7438fe8fe54a4e1f9a97360025</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9195ea9566866a2f454f3bf463b27ddc99f98266</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Compress and Extract Files | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Compress and Extract Files</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression&gt;</ph> namespace contains the following types for compressing and decompressing files and streams.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can also use these types to read and modify the contents of a compressed file:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following examples show some of the functions you can perform when working with compressed files.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This example shows how to create and extract a compressed file that has a .zip file name extension by using the <ph id="ph1">&lt;xref:System.IO.Compression.ZipFile&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It compresses the contents of a folder into a new .zip file and then extracts that content to a new folder.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To use the <ph id="ph1">&lt;xref:System.IO.Compression.ZipFile&gt;</ph> class, you must reference the <ph id="ph2">`System.IO.Compression.FileSystem`</ph> assembly in your project.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.IO.Compression.ZipFile#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.IO.Compression.ZipFile#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The next example shows how to iterate through the contents of an existing .zip file and extract files that have a .txt extension.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It uses the <ph id="ph1">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> class to access an existing .zip file, and the <ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> class to inspect the individual entries in the compressed file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It uses an extension method (<ph id="ph1">&lt;xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%2A&gt;</ph>) for the <ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The extension method is available in the <ph id="ph1">&lt;xref:System.IO.Compression.ZipFileExtensions?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To use the <ph id="ph1">&lt;xref:System.IO.Compression.ZipFileExtensions&gt;</ph> class, you must reference the <ph id="ph2">`System.IO.Compression.FileSystem`</ph> assembly in your project.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.IO.Compression.ZipArchive#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.IO.Compression.ZipArchive#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The next example uses the <ph id="ph1">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> class to access an existing .zip file, and adds a new file to the compressed file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The new file gets compressed when you add it to the existing .zip file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.IO.Compression.ZipArchiveMode#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.IO.Compression.ZipArchiveMode#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> classes to compress and decompress data.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>They use the same compression algorithm.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Compressed <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> objects that are written to a file that has an extension of .gz can be decompressed by using many common tools in addition to the methods provided by <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to compress and decompress a directory of files by using the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>IO.Compression.GZip1#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>IO.Compression.GZip1#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>File and Stream I-O<ept id="p1">](../../../docs/standard/io/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>