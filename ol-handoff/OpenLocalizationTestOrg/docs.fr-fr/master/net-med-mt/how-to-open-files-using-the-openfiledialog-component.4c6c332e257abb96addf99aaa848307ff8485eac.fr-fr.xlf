<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-open-files-using-the-openfiledialog-component.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c221d982107b514262080ed23c421fcccb2a2785</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\how-to-open-files-using-the-openfiledialog-component.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4585db6159b0a1c6aab3a8ebf7e8877077fa9eea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd35ce8178fe7dca3fafa86c415c8277a8fa4495</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Open Files Using the OpenFileDialog Component | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Open Files Using the OpenFileDialog Component</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component allows users to browse the folders of their computer or any computer on the network and select one or more files to open.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The dialog box returns the path and name of the file the user selected in the dialog box.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Once the user has selected the file to be opened, there are two approaches to the mechanism of opening the file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you prefer to work with file streams, you can create an instance of the <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Alternately, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method to open the selected file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The first example below involves a <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> permission check (as described in the "Security Note" below), but gives you access to the filename.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use this technique from the Local Machine, Intranet, and Internet zones.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The second method also does a <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> permission check, but is better suited for applications in the Intranet or Internet zones.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To open a file as a stream using the OpenFileDialog component</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Display the <bpt id="p1">**</bpt>Open File<ept id="p1">**</ept> dialog box and call a method to open the file selected by the user.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>One approach is to use the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> method to display the Open File dialog box, and use an instance of the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> class to open the file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The example below uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler to open an instance of the <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When a file is chosen and the user clicks <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, the file selected in the dialog box opens.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this case, the contents are displayed in a message box, just to show that the file stream has been read.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.FileName%2A&gt;</ph> property, your assembly requires a privilege level granted by the <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security Basics<ept id="p1">](../../../../docs/framework/misc/code-access-security-basics.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The example assumes your form has a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph> and <ph id="ph2">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>) Place the following code in the form's constructor to register the event handler.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information about reading from file streams, see <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To open a file as a file using the OpenFileDialog component</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> method to display the dialog box and the <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method to open the file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component's <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method returns the bytes that compose the file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These bytes give you a stream to read from.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the example below, an <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component is instantiated with a "cursor" filter on it, allowing the user to choose only files with the file name extension<ph id="ph2">`.cur`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If a<ph id="ph1">`.cur`</ph> file is chosen, the form's cursor is set to the selected cursor.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To call the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method, your assembly requires a privilege level granted by the <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security Basics<ept id="p1">](../../../../docs/framework/misc/code-access-security-basics.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The example assumes your form has a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph> and <ph id="ph2">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>) Place the following code in the form's constructor to register the event handler.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OpenFileDialog Component<ept id="p1">](../../../../docs/framework/winforms/controls/openfiledialog-component-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>