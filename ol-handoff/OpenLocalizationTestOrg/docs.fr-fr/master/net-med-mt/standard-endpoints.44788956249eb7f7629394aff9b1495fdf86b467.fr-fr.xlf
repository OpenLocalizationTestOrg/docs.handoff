<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-401ea83" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e044d782b492b7b24fa8695de3728c6d0a61efe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\standard-endpoints.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">367832784b7be7230840e4e22836f33afca7248c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72652f50da1e709e09320f771bb2b4e0686ef348</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Standard Endpoints | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Standard Endpoints</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Endpoints are defined by specifying an address, a binding, and a contract.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Other parameters that may be set on an endpoint include behavior configuration, headers, and listen URIs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For certain types of endpoints these values do not change.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, metadata exchange endpoints always use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IMetadataExchange&gt;</ph> contract.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Other endpoints, such as <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpEndpoint&gt;</ph> always require a specified endpoint behavior.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The usability of an endpoint can be improved by having endpoints with default values for commonly used endpoint properties.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Standard endpoints enable a developer to define an endpoint that has default values or where one or more endpointâ€™s properties does not change.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>These endpoints allow you to use such an endpoint without having to specify information of a static nature.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Standard endpoints can be used for infrastructure and application endpoints.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Infrastructure Endpoints</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A service may expose endpoints with some of the properties not explicitly implemented by the service author.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, the metadata exchange endpoint exposes the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IMetadataExchange&gt;</ph> contract but as a service author you do not implement that interface, it is implemented by WCF.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Such infrastructure endpoints have default values for one or more endpoint properties, some of which may be unalterable.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Contract%2A&gt;</ph> property of the metadata exchange endpoint must be <ph id="ph2">&lt;xref:System.ServiceModel.Description.IMetadataExchange&gt;</ph>, while other properties like binding can be supplied by the developer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Infrastructure endpoints are identified by setting the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Application Endpoints</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Application developers can define their own standard endpoints which specify default values for the address, binding, or contract.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You define a standard endpoint by deriving a class from <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and setting the appropriate endpoint properties.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can provide default values for properties that can be changed.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Some other properties will have static values that cannot change.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement a standard endpoint.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To use a user-defined custom endpoint in a configuration file you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.StandardEndpointElement&gt;</ph>, derive a class from <ph id="ph2">&lt;xref:System.ServiceModel.Configuration.StandardEndpointCollectionElement%602&gt;</ph>, and register the new standard endpoint in the extensions section in app.config or machine.config.  The <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.StandardEndpointElement&gt;</ph> provides configuration support for the standard endpoint, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.StandardEndpointCollectionElement%602&gt;</ph> provides the backing type for the collection that appears under the &lt;<ph id="ph2">`standardEndpoints`</ph>&gt; section in the configuration for the standard endpoint.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement this class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example shows how to register a standard endpoint in the extensions section.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Configuring a Standard Endpoint</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Standard endpoints can be added in code or in configuration.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To add a standard endpoint in code simply instantiate the appropriate standard endpoint type and add it to the service host as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To add a standard endpoint in configuration, add an &lt;<ph id="ph1">`endpoint`</ph>&gt; element to the &lt;<ph id="ph2">`service`</ph>&gt; element and any needed configuration settings in the &lt;<ph id="ph3">`standardEndpoints`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph>, one of the standard endpoints that ships with <ph id="ph2">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type of standard endpoint is specified using the kind attribute in the &lt;<ph id="ph1">`endpoint`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The endpoint is configured within the &lt;<ph id="ph1">`standardEndpoints`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the example above, a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> endpoint is added and configured.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;<ph id="ph1">`udpDiscoveryEndpoint`</ph>&gt; element contains a &lt;<ph id="ph2">`standardEndpoint`</ph>&gt; that sets the <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.MulticastAddress%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Standard Endpoints Shipped with the .NET Framework</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following table lists the standard endpoints shipped with <ph id="ph1">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A standard endpoint that is used to expose service metadata.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A standard endpoint that is used by services to send announcement messages.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A standard endpoint that is used by services to send discovery messages.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A standard endpoint that is pre-configured for discovery operations over a UDP multicast binding.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A standard endpoint that is used by services to send announcement messages over a UDP binding.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A standard endpoint that uses WS-Discovery to find the endpoint address dynamically at runtime.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A standard endpoint for metadata exchange.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A standard endpoint with a <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> binding that automatically adds the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> behavior</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A standard endpoint with a <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> binding that automatically adds the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A standard endpoint with a <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> binding.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A standard endpoint that enables you to call control operations on workflow instances.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A standard endpoint that supports workflow creation and bookmark resumption.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>