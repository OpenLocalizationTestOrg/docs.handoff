<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95226b61742fb9d9eba231d5e0fb601f9402dcef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\application-settings-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf387cd328bf14c943bace2eb5637b734317c76a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa7ec3ad26db973d64031f08419fe81673628c7b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Application Settings Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Application Settings Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses how to create and store settings data on behalf of your application and your users.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Application Settings feature of Windows Forms makes it easy to create, store, and maintain custom application and user preferences on the client computer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With Windows Forms application settings, you can store not only application data such as database connection strings, but also user-specific data, such as user application preferences.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using Visual Studio or custom managed code, you can create new settings, read them from and write them to disk, bind them to properties on your forms, and validate settings data prior to loading and saving.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Application settings enables developers to save state in their application using very little custom code, and is a replacement for dynamic properties in previous versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Application settings contains many improvements over dynamic properties, which are read-only, late-bound, and require more custom programming.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The dynamic property classes have been retained in <ph id="ph1">[!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]</ph>, but they are just shell classes that thinly wrap the application settings classes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>What Are Application Settings?</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Your Windows Forms applications will often require data that is critical to running the application, but which you do not want to include directly in the application's code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If your application uses a Web Service or a database server, you may want to store this information in a separate file, so that you can change it in the future without re-compiling.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Similarly, your applications may require storing data that is specific to the current user.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Most applications, for example, have user preferences that customize the application's appearance and behavior.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Application settings addresses both needs by providing an easy way to store both application-scoped and user-scoped settings on the client computer.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Using Visual Studio or a code editor, you define a setting for a given property by specifying its name, data type, and scope (application or user).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can even place related settings into named groups for easier use and readability.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Once defined, these settings are persisted and read back into memory automatically at run time.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A pluggable architecture enables the persistence mechanism to be changed, but by default, the local file system is used.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Application settings works by persisting data as XML to different configuration (.config) files, corresponding to whether the setting is application-scoped or user-scoped.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In most cases, the application-scoped settings are read-only; because they are program information, you will typically not need to overwrite them.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By contrast, user-scoped settings can be read and written safely at run time, even if your application runs under partial trust.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about partial trust, see <bpt id="p1">[</bpt>Security in Windows Forms Overview<ept id="p1">](../../../../docs/framework/winforms/security-in-windows-forms-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Settings are stored as XML fragments in configuration files.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Application-scoped settings are represented by the <ph id="ph1">`&lt;application.Settings&gt;`</ph> element, and generally are placed in <bpt id="p1">*</bpt>app<ept id="p1">*</ept>.exe.config, where <bpt id="p2">*</bpt>app<ept id="p2">*</ept> is the name of your main executable file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>User-scoped settings are represented by the <ph id="ph1">`&lt;userSettings&gt;`</ph> element and are placed in <bpt id="p1">*</bpt>user<ept id="p1">*</ept>.config, where <bpt id="p2">*</bpt>user<ept id="p2">*</ept> is the user name of the person currently running the application.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You must deploy the <bpt id="p1">*</bpt>app<ept id="p1">*</ept>.exe.config file with your application; the settings architecture will create the <bpt id="p2">*</bpt>user<ept id="p2">*</ept>.config files on demand the first time the application saves settings for that user.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also define a <ph id="ph1">`&lt;userSettings&gt;`</ph> block within <bpt id="p1">*</bpt>app<ept id="p1">*</ept>.exe.config to provide default values for user-scoped settings.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Custom controls can also save their own settings by implementing the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings&gt;</ph> interface, which exposes the <ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Windows Forms <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control implements this interface to save the position of toolbars and toolbar items between application sessions.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information about custom controls and application settings, see <bpt id="p1">[</bpt>Application Settings for Custom Controls<ept id="p1">](../../../../docs/framework/winforms/advanced/application-settings-for-custom-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Limitations of Application Settings</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You cannot use application settings in an unmanaged application that hosts the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Settings will not work in such environments as Visual Studio add-ins, C++ for Microsoft Office, control hosting in Internet Explorer, or Microsoft Outlook add-ins and projects.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You currently cannot bind to some properties in Windows Forms.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The most notable example is the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph> property, as binding to this property would cause unpredictable behavior at run time.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can usually work around these issues by saving and loading these settings programmatically.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Application settings has no built-in facility for encrypting information automatically.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You should never store security-related information, such as database passwords, in clear text.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you want to store such sensitive information, you as the application developer are responsible for making sure it is secure.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you want to store connection strings, we recommend that you use Windows Integrated Security and not resort to hard-coding passwords into the URL.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](../../../../docs/framework/data/adonet/code-access-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Getting Started with Application Settings</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you use Visual Studio, you can define settings within the Windows Forms Designer using the <bpt id="p1">**</bpt>(ApplicationSettings)<ept id="p1">**</ept> property in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you define settings this way, Visual Studio automatically creates a custom managed wrapper class which associates each setting with a class property.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Visual Studio also takes care of binding the setting to a property on a form or control so that the control's settings are restored automatically when its form is displayed, and saved automatically when the form is closed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you want more detailed control over your settings, you can define your own custom applications settings wrapper class.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is accomplished by deriving a class from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, adding a property that corresponds to each setting, and applying special attributes to these properties.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For details about creating wrapper classes, see <bpt id="p1">[</bpt>Application Settings Architecture<ept id="p1">](../../../../docs/framework/winforms/advanced/application-settings-architecture.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class to bind settings programmatically to properties on forms and controls.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Validate Application Settings<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-validate-application-settings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Managing Application Settings (.NET)<ept id="p1">](http://msdn.microsoft.com/library/35254321-ad14-47d9-b8c6-39ab3203c5d9)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How To: Read Settings at Run Time With C#<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-read-settings-at-run-time-with-csharp.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using Application Settings and User Settings<ept id="p1">](../../../../docs/framework/winforms/advanced/using-application-settings-and-user-settings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Settings Architecture<ept id="p1">](../../../../docs/framework/winforms/advanced/application-settings-architecture.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Settings for Custom Controls<ept id="p1">](../../../../docs/framework/winforms/advanced/application-settings-for-custom-controls.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>