<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="loading-deferred-content-wcf-data-services.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9942a1d83d32e30df32c0ba31e1a7a7566c54bd3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\loading-deferred-content-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b40272a56fbdb7404e41cab1b12c12309dc50593</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b52d4bec28ae9d3efe8a6cafd33704a078e5c68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Loading Deferred Content (WCF Data Services) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Loading Deferred Content (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> limits the amount of data that a query returns.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you can explicitly load additional data, including related entities, paged response data, and binary data streams, from the data service when it is needed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes how to load such deferred content into your application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Related Entities</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you execute a query, only entities in the addressed entity set are returned.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, when a query against the Northwind data service returns <ph id="ph1">`Customers`</ph> entities, by default the related <ph id="ph2">`Orders`</ph> entities are not returned, even though there is a relationship between <ph id="ph3">`Customers`</ph> and <ph id="ph4">`Orders`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Also, when paging is enabled in the data service, you must explicitly load subsequent data pages from the service.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are two ways to load related entities:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Eager loading<ept id="p1">**</ept>: You can use the <ph id="ph1">`$expand`</ph> query option to request that the query return entities that are related by an association to the entity set that the query requested.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.Expand%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> to add the <ph id="ph3">`$expand`</ph> option to the query that is sent to the data service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can request multiple related entity sets by separating them by a comma, as in the following example.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All entities requested by the query are returned in a single response.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example returns <ph id="ph1">`Order_Details`</ph> and <ph id="ph2">`Customers`</ph> together with the <ph id="ph3">`Orders`</ph> entity set:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> limits to 12 the number of entity sets that can be included in a single query by using the <ph id="ph2">`$expand`</ph> query option.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Explicit loading<ept id="p1">**</ept>: You can call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance to explicitly load related entities.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each call to the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A&gt;</ph> method creates a separate request to the data service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example explicitly loads <ph id="ph1">`Order_Details`</ph> for an <ph id="ph2">`Orders`</ph> entity:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you consider which option to use, realize that there is a tradeoff between the number of requests to the data service and the amount of data that is returned in a single response.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use eager loading when your application requires associated objects and you want to avoid the added latency of additional requests to explicitly retrieve them.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, if there are cases when the application only needs the data for specific related entity instances, you should consider explicitly loading those entities by calling the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Load Related Entities<ept id="p1">](../../../../docs/framework/data/wcf/how-to-load-related-entities-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Paged Content</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When paging is enabled in the data service, the number of entries in the feed that the data service returns is limited by the configuration of the data service.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Page limits can be set separately for each entity set.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When paging is enabled, the final entry in the feed contains a link to the next page of data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This link is contained in a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQueryContinuation%601&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You obtain the URI to the next page of data by calling the <ph id="ph1">&lt;xref:System.Data.Services.Client.QueryOperationResponse%601.GetContinuation%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.QueryOperationResponse%601&gt;</ph> returned when the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> is executed.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The returned <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQueryContinuation%601&gt;</ph> object is then used to load the next page of results.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You must enumerate the query result before you call the <ph id="ph1">&lt;xref:System.Data.Services.Client.QueryOperationResponse%601.GetContinuation%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Consider using a <ph id="ph1">`do…while`</ph> loop to first enumerate the query result and then check for a <ph id="ph2">`non-null`</ph> next link value.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Services.Client.QueryOperationResponse%601.GetContinuation%2A&gt;</ph> method returns <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> in Visual Basic), there are no additional result pages for the original query.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example shows a <ph id="ph1">`do…while`</ph> loop that loads paged customer data from the Northwind sample data service.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When a query requests that related entities are returned in a single response together with the requested entity set, paging limits may affect nested feeds that are included inline with the response.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, when a paging limit is set in the Northwind sample data service for the <ph id="ph1">`Customers`</ph> entity set, an independent paging limit can also be set for the related <ph id="ph2">`Orders`</ph> entity set, as in the following example from the Northwind.svc.cs file that defines the Northwind sample data service.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In this case, you must implement paging for both the top-level <ph id="ph1">`Customers`</ph> and the nested <ph id="ph2">`Orders`</ph> entity feeds.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following example shows the <ph id="ph1">`while`</ph> loop used to load pages of <ph id="ph2">`Orders`</ph> entities related to a selected <ph id="ph3">`Customers`</ph> entity.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Load Paged Results<ept id="p1">](../../../../docs/framework/data/wcf/how-to-load-paged-results-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Binary Data Streams</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> enables you to access binary large object (BLOB) data as a data stream.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Streaming defers the loading of binary data until it is needed, and the client can more efficiently process this data.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In order to take advantage of this functionality, the data service must implement the <ph id="ph1">&lt;xref:System.Data.Services.Providers.IDataServiceStreamProvider&gt;</ph> provider.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Streaming Provider<ept id="p1">](../../../../docs/framework/data/wcf/streaming-provider-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When streaming is enabled, entity types are returned without the related binary data.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In this case, you must use the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class to access the data stream for the binary data from the service.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Similarly, use the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A&gt;</ph> method to add or change binary data for an entity as a stream.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Binary Data<ept id="p1">](../../../../docs/framework/data/wcf/working-with-binary-data-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Data Services Client Library<ept id="p1">](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Querying the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/querying-the-data-service-wcf-data-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>