<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="the-ink-object-model-windows-forms-and-com-versus-wpf.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7a7bbf45c4c532505edcedaa2ead2235d63c361</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\the-ink-object-model-windows-forms-and-com-versus-wpf.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1068ece1ea986ddc90affa51bc33e1ce73478a95</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3530eea4e0ef9788e59c819853492dc23cd8083f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>The Ink Object Model: Windows Forms and COM versus WPF | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The Ink Object Model: Windows Forms and COM versus WPF</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are essentially three platforms that support digital ink: the Tablet PC Windows Forms platform, the Tablet PC COM platform, and the <ph id="ph1">[!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)]</ph> platform.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Windows Forms and COM platforms share a similar object model, but the object model for the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> platform is substantially different.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic discusses the differences at a high-level so that developers that have worked with one object model can better understand the other.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Enabling Ink in an Application</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>All three platforms ship objects and controls that enable an application to receive input from a tablet pen.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Windows Forms and COM platforms ship with <bpt id="p1">[</bpt>Microsoft.Ink.InkPicture<ept id="p1">](https://msdn.microsoft.com/library/aa514604.aspx)</ept>, <bpt id="p2">[</bpt>Microsoft.Ink.InkEdit<ept id="p2">](https://msdn.microsoft.com/library/ms835842.aspx)</ept>, <bpt id="p3">[</bpt>Microsoft.Ink.InkOverlay<ept id="p3">](https://msdn.microsoft.com/library/ms833057.aspx)</ept> and <bpt id="p4">[</bpt>Microsoft.Ink.InkCollector<ept id="p4">](https://msdn.microsoft.com/library/ms836493.aspx)</ept> classes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Ink.InkPicture<ept id="p1">](https://msdn.microsoft.com/library/aa514604.aspx)</ept> and <bpt id="p2">[</bpt>Microsoft.Ink.InkEdit<ept id="p2">](https://msdn.microsoft.com/library/ms835842.aspx)</ept> are controls that you can add to an application to collect ink.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Microsoft.Ink.InkOverlay<ept id="p1">](https://msdn.microsoft.com/library/ms833057.aspx)</ept> and <bpt id="p2">[</bpt>Microsoft.Ink.InkCollector<ept id="p2">](https://msdn.microsoft.com/library/ms836493.aspx)</ept> can be attached to an existing window to ink-enable windows and custom controls.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The WPF platform includes the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can add an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to your application and begin collecting ink immediately.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>, the user can copy, select, and resize ink.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can add other controls to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>, and the user can handwrite over those controls, too.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can create an ink-enabled custom control by adding an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> to it and collecting its stylus points.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists where to learn more about enabling ink in an application:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To do this…</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>On the WPF Platform…</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>On the Windows Forms/COM Platforms…</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Add an ink-enabled control to an application</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Getting Started with Ink<ept id="p1">](../../../../docs/framework/wpf/advanced/getting-started-with-ink.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Auto Claims Form Sample<ept id="p1">](http://msdn.microsoft.com/bec4333a-62ca-4254-a39b-04bc2c556992)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Enable ink on a custom control</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Creating an Ink Input Control<ept id="p1">](../../../../docs/framework/wpf/advanced/creating-an-ink-input-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Ink Clipboard Sample<ept id="p1">](http://msdn.microsoft.com/a0c42f1c-543d-44f8-83d9-fe810de410ff)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Ink Data</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>On the Windows Forms and COM platforms, <bpt id="p1">[</bpt>Microsoft.Ink.InkCollector<ept id="p1">](https://msdn.microsoft.com/library/ms836493.aspx)</ept>, <bpt id="p2">[</bpt>Microsoft.Ink.InkOverlay<ept id="p2">](https://msdn.microsoft.com/library/ms833057.aspx)</ept>, <bpt id="p3">[</bpt>Microsoft.Ink.InkEdit<ept id="p3">](https://msdn.microsoft.com/library/ms835842.aspx)</ept>, and <bpt id="p4">[</bpt>Microsoft.Ink.InkPicture<ept id="p4">](https://msdn.microsoft.com/library/aa514604.aspx)</ept> each expose a <bpt id="p5">[</bpt>Microsoft.Ink.Ink<ept id="p5">](https://msdn.microsoft.com/library/aa515768.aspx?displayProperty=fullName)</ept> object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Microsoft.Ink.Ink<ept id="p1">](https://msdn.microsoft.com/library/aa515768.aspx)</ept> object contains the data for one or more <bpt id="p2">[</bpt>Microsoft.Ink.Stroke<ept id="p2">](https://msdn.microsoft.com/library/ms827842.aspx?displayProperty=fullName)</ept> objects and exposes common methods and properties to manage and manipulate those strokes.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Microsoft.Ink.Ink<ept id="p1">](https://msdn.microsoft.com/library/aa515768.aspx)</ept> object manages the lifetime of the strokes it contains; the <bpt id="p2">[</bpt>Microsoft.Ink.Ink<ept id="p2">](https://msdn.microsoft.com/library/aa515768.aspx)</ept> object creates and deletes the strokes that it owns.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">[</bpt>Microsoft.Ink.Stroke<ept id="p1">](https://msdn.microsoft.com/library/ms827842.aspx)</ept> has an identifier that is unique within its parent <bpt id="p2">[</bpt>Microsoft.Ink.Ink<ept id="p2">](https://msdn.microsoft.com/library/aa515768.aspx)</ept> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>On the WPF platform, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke?displayProperty=fullName&gt;</ph> class owns and manages its own lifetime.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A group of <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects can be collected together in a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>, which provides methods for common ink data management operations such as hit testing, erasing, transforming, and serializing the ink.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> can belong to zero, one, or more <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> objects at any give time.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Instead of having a <bpt id="p1">[</bpt>Microsoft.Ink.Ink<ept id="p1">](https://msdn.microsoft.com/library/aa515768.aspx?displayProperty=fullName)</ept> object, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> contain a <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following pair of illustrations compares the ink data object models.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>On the Windows Forms and COM platforms, the <bpt id="p1">[</bpt>Microsoft.Ink.Ink<ept id="p1">](https://msdn.microsoft.com/library/aa515768.aspx?displayProperty=fullName)</ept> object constrains the lifetime of the <bpt id="p2">[</bpt>Microsoft.Ink.Stroke<ept id="p2">](https://msdn.microsoft.com/library/ms827842.aspx?displayProperty=fullName)</ept> objects, and the stylus packets belong to the individual strokes.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Two or more strokes can reference the same <bpt id="p1">[</bpt>Microsoft.Ink.DrawingAttributes<ept id="p1">](https://msdn.microsoft.com/library/ms837931.aspx?displayProperty=fullName)</ept> object, as shown in the following illustration.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram of the Ink Object Model for COM&amp;#47;Winforms.<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/ink-inkownsstrokes.png "</bpt>Ink_InkOwnsStrokes<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>On the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, each <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke?displayProperty=fullName&gt;</ph> is a common language runtime object that exists as long as something has a reference to it.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> references a <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes?displayProperty=fullName&gt;</ph> object, which are also common language runtime objects.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram of the Ink Object Model for WPF.<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/ink-wpfinkobjectmodel.png "</bpt>Ink_WPFInkObjectModel<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following table compares how to accomplish some common tasks on the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> platform and the Windows Forms and COM platforms.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Task</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Windows Presentation Foundation</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Windows Forms and COM</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Save Ink</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Ink.Ink.Save<ept id="p1">](https://technet.microsoft.com/library/security/microsoft.ink.ink.save(v=vs.90))</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Load Ink</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Ink.Ink.Load<ept id="p1">](https://msdn.microsoft.com/library/microsoft.ink.ink.load(v=vs.90).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Hit test</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Ink.Ink.HitTest<ept id="p1">](https://msdn.microsoft.com/library/aa515934.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Copy Ink</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Ink.Ink.ClipboardCopy<ept id="p1">](https://msdn.microsoft.com/library/microsoft.ink.ink.clipboardcopy(v=vs.100).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Paste Ink</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.Ink.Ink.ClipboardPaste<ept id="p1">](https://msdn.microsoft.com/library/microsoft.ink.ink.clipboardpaste(v=vs.100).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Access custom properties on a collection of strokes</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> (the properties are stored internally and accessed via <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection.RemovePropertyData%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Ink.StrokeCollection.ContainsPropertyData%2A&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>Microsoft.Ink.Ink.ExtendedProperties<ept id="p1">](https://msdn.microsoft.com/library/microsoft.ink.ink.extendedproperties(v=vs.100).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Sharing ink between platforms</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Although the platforms have different object models for the ink data, sharing the data between the platforms is very easy.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following examples save ink from a Windows Forms application and load the ink into a Windows Presentation Foundation application.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWinforms<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#usingwinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWinforms<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#usingwinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#SaveWinforms<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#savewinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#SaveWinforms<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#savewinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWPF<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#usingwpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWPF<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#usingwpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#LoadWPF<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#loadwpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#LoadWPF<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#loadwpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following examples save ink from a Windows Presentation Foundation application and load the ink into a Windows Forms application.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWPF<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#usingwpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWPF<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#usingwpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#SaveWPF<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#savewpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#SaveWPF<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#savewpf)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWinforms<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#usingwinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#UsingWinforms<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#usingwinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WinFormWPFInk#LoadWinforms<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WinformWPFInk/CSharp/Program.cs#loadwinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-</ph><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WinFormWPFInk#LoadWinforms<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WinformWPFInk/VisualBasic/Module1.vb#loadwinforms)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Events from the Tablet Pen</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Microsoft.Ink.InkOverlay<ept id="p1">](https://msdn.microsoft.com/library/ms833057.aspx)</ept>, <bpt id="p2">[</bpt>Microsoft.Ink.InkCollector<ept id="p2">](https://msdn.microsoft.com/library/ms836493.aspx)</ept>, and <bpt id="p3">[</bpt>Microsoft.Ink.InkPicture<ept id="p3">](https://msdn.microsoft.com/library/aa514604.aspx)</ept> on the Windows Forms and COM platforms receive events when the user inputs pen data.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Microsoft.Ink.InkOverlay<ept id="p1">](https://msdn.microsoft.com/library/ms833057.aspx)</ept> or <bpt id="p2">[</bpt>Microsoft.Ink.InkCollector<ept id="p2">](https://msdn.microsoft.com/library/ms836493.aspx)</ept> is attached to a window or a control, and can subscribe to the events raised by the tablet input data.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The thread on which these events occurs depends on whether the events are raised with a pen, a mouse, or programmatically.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information about threading in relation to these events, see <bpt id="p1">[</bpt>General Threading Considerations<ept id="p1">](http://msdn.microsoft.com/cf35724f-5f80-4b3e-992a-a9d5ea99aae9)</ept> and <bpt id="p2">[</bpt>Threads on Which an Event Can Fire<ept id="p2">](http://msdn.microsoft.com/d1a5ab9b-d474-4ed7-9aa8-b5bdb771934f)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>On the Windows Presentation Foundation platform, the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> class has events for pen input.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This means that every control exposes the full set of stylus events.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The stylus events have tunneling/bubbling event pairs and always occur on the application thread.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following diagram shows compares the object models for the classes that raise stylus events.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The Windows Presentation Foundation object model shows only the bubbling events, not the tunneling event counterparts.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram of the Stylus events in WPF vs Winforms.<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/ink-stylusevents.png "</bpt>Ink_StylusEvents<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Pen Data</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>All three platforms provide you with ways to intercept and manipulate the data that comes in from a tablet pen.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>On the Windows Forms and COM Platforms, this is achieved by creating a <bpt id="p1">[</bpt>Microsoft.StylusInput.RealTimeStylus<ept id="p1">](https://msdn.microsoft.com/library/microsoft.stylusinput.realtimestylus(v=vs.100).aspx)</ept>, attaching a window or control to it, and creating a class that implements the <bpt id="p2">[</bpt>Microsoft.StylusInput.IStylusSyncPlugin<ept id="p2">](https://msdn.microsoft.com/library/microsoft.stylusinput.istylussyncplugin(v=vs.100).aspx)</ept> or <bpt id="p3">[</bpt>Microsoft.StylusInput.IStylusAsyncPlugin<ept id="p3">](https://msdn.microsoft.com/library/microsoft.stylusinput.istylusasyncplugin(v=vs.100).aspx)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The custom plug-in is then added to the plug-in collection of the <bpt id="p1">[</bpt>Microsoft.StylusInput.RealTimeStylus<ept id="p1">](https://msdn.microsoft.com/library/microsoft.stylusinput.realtimestylus(v=vs.100).aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information about this object model, see <bpt id="p1">[</bpt>Architecture of the StylusInput APIs<ept id="p1">](http://msdn.microsoft.com/88bab0ab-df9f-4813-9a9f-9a137813f0b4)</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>On the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> platform, the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> class exposes a collection of plug-ins, similar in design to the <bpt id="p1">[</bpt>Microsoft.StylusInput.RealTimeStylus<ept id="p1">](https://msdn.microsoft.com/library/microsoft.stylusinput.realtimestylus(v=vs.100).aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To intercept pen data, create a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> and add the object to the <ph id="ph2">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection of the <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For more information about this interaction, see <bpt id="p1">[</bpt>Intercepting Input from the Stylus<ept id="p1">](../../../../docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>On all platforms, a thread pool receives the ink data via stylus events and sends it to the application thread.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For more information about threading on the COM and Windows Platforms, see <bpt id="p1">[</bpt>Threading Considerations for the StylusInput APIs<ept id="p1">](http://msdn.microsoft.com/5d98768a-c60b-4bb0-8640-9bf38254d41f)</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about threading on the Windows Presentation Software, see <bpt id="p1">[</bpt>The Ink Threading Model<ept id="p1">](../../../../docs/framework/wpf/advanced/the-ink-threading-model.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following illustration compares the object models for the classes that receive pen data on the pen thread pool.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram of the StylusPlugin model WPF vs Winforms.<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/ink-stylusplugins.png "</bpt>Ink_StylusPlugins<ept id="p2">")</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>