<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="getxmlnamespace-operator.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6f977ab8c0b7dfb2dee936436ef4ec8530ba8f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\getxmlnamespace-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac9fab3385dfe347370190a11e53d1374b8ff503</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c492c00ddeefa0803904ab730ab579c64b53a6b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>GetXmlNamespace Operator (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>GetXmlNamespace Operator (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object that corresponds to the specified XML namespace prefix.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The string that identifies the XML namespace prefix.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If supplied, this string must be a valid XML identifier.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Names of Declared XML Elements and Attributes<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If no prefix is specified, the default namespace is returned.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If no default namespace is specified, the empty namespace is returned.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object that corresponds to the XML namespace prefix.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetXmlNamespace`</ph> operator gets the <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object that corresponds to the XML namespace prefix <ph id="ph3">`xmlNamespacePrefix`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use XML namespace prefixes directly in XML literals and XML axis properties.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, you must use the <ph id="ph1">`GetXmlNamespace`</ph> operator to convert a namespace prefix to an <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object before you can use it in your code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can append an unqualified element name to an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object to get a fully qualified <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> object, which many <ph id="ph3">[!INCLUDE[sqltecxlinq](../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> methods require.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example imports <ph id="ph1">`ns`</ph> as an XML namespace prefix.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It then uses the prefix of the namespace to create an XML literal and access the first child node that has the qualified name <ph id="ph1">`ns:phone`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It then passes that child node to the <ph id="ph1">`ShowName`</ph> subroutine, which constructs a qualified name by using the <ph id="ph2">`GetXmlNamespace`</ph> operator.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ShowName`</ph> subroutine then passes the qualified name to the <ph id="ph2">&lt;xref:System.Xml.Linq.XNode.Ancestors%2A&gt;</ph> method to get the parent <ph id="ph3">`ns:contact`</ph> node.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">`TestGetXmlNamespace.RunSample()`</ph>, it displays a message box that contains the following text:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Accessing XML in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/accessing-xml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>