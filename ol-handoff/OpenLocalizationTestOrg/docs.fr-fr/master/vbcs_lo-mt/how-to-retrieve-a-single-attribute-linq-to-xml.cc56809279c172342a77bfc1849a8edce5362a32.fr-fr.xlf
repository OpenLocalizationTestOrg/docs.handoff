<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b4242e051c6171c51c6ace12798e54ae7374e02</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-retrieve-a-single-attribute-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0082ed2fa595da58f32250ff337552a4d0f2ac58</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c57dccfd336fc2100f710f7d4af8bdf9a971b8f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Retrieve a Single Attribute (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Retrieve a Single Attribute (LINQ to XML) (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic explains how to retrieve a single attribute of an element, given the attribute name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is useful for writing query expressions where you want to find an element that has a particular attribute.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class returns the <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> with the specified name.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This example finds all the descendants in the tree named <ph id="ph1">`Phone`</ph>, and then finds the attribute named <ph id="ph2">`type`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you want to retrieve the value of the attribute, you can cast it, just as you do for with <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides explicit cast operators for the <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> class to <ph id="ph3">`string`</ph>, <ph id="ph4">`bool`</ph>, <ph id="ph5">`bool?`</ph>, <ph id="ph6">`int`</ph>, <ph id="ph7">`int?`</ph>, <ph id="ph8">`uint`</ph>, <ph id="ph9">`uint?`</ph>, <ph id="ph10">`long`</ph>, <ph id="ph11">`long?`</ph>, <ph id="ph12">`ulong`</ph>, <ph id="ph13">`ulong?`</ph>, <ph id="ph14">`float`</ph>, <ph id="ph15">`float?`</ph>, <ph id="ph16">`double`</ph>, <ph id="ph17">`double?`</ph>, <ph id="ph18">`decimal`</ph>, <ph id="ph19">`decimal?`</ph>, <ph id="ph20">`DateTime`</ph>, <ph id="ph21">`DateTime?`</ph>, <ph id="ph22">`TimeSpan`</ph>, <ph id="ph23">`TimeSpan?`</ph>, <ph id="ph24">`GUID`</ph>, and <ph id="ph25">`GUID?`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following example shows the same code for an attribute that is in a namespace.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML Axes (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>