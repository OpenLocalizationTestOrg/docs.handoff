<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="dotnet-svcutil-guide.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1361c30e6b529d68dc93a65c645d31ca6c8e564</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\additional-tools\dotnet-svcutil-guide.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad6a9b2732c298aae09c6d5353645f0b7e7a5082</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03dd7aedbef461d8c08639c2762d85b4a38a239c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>WCF svcutil tool overview</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>An overview of the Microsoft WCF dotnet-svcutil tool that adds functionality for .NET Core and ASP.NET Core projects, similar to the WCF svcutil tool for .NET Framework projects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WCF dotnet-svcutil tool for .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Windows Communication Foundation (WCF) <bpt id="p1">**</bpt>dotnet-svcutil<ept id="p1">**</ept> tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that access the web service operations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Similar to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Service Model Metadata - svcutil<ept id="p2">**</ept><ept id="p1">](../../framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool for .NET Framework projects, the <bpt id="p3">**</bpt>dotnet-svcutil<ept id="p3">**</ept> is a command-line tool for generating a web service reference compatible with .NET Core and .NET Standard projects.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>dotnet-svcutil<ept id="p1">**</ept> tool is an alternative option to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>WCF Web Service Reference<ept id="p3">**</ept><ept id="p2">](wcf-web-service-reference-guide.md)</ept> Visual Studio connected service provider that first shipped with Visual Studio 2017 v15.5.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>dotnet-svcutil<ept id="p1">**</ept> tool as a .NET Core CLI tool, is available cross-platform on Linux, macOS, and Windows.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You should only reference services from a trusted source.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Adding references from an untrusted source may compromise security.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 2.x<ept id="p1">](#tab/dotnetsvcutil2x)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 2.1 SDK<ept id="p1">](https://dotnet.microsoft.com/download)</ept> or later versions</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Your favorite code editor</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 1.x<ept id="p1">](#tab/dotnetsvcutil1x)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 1.0.4 SDK<ept id="p1">](https://dotnet.microsoft.com/download)</ept> or later versions</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Your favorite code editor</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Getting started</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example walks you through the steps required to add a web service reference to a .NET Core web project and invoke the service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You'll create a .NET Core web application named <bpt id="p1">_</bpt>HelloSvcutil<ept id="p1">_</ept> and add a reference to a web service that implements the following contract:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For this example, let's assume the web service will be hosted at the following address: <ph id="ph1">`http://contoso.com/SayHello.svc`</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>From a Windows, macOS, or Linux command window perform the following steps:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a directory named <bpt id="p1">_</bpt>HelloSvcutil<ept id="p1">_</ept> for your project and make it your current directory, as in the following example:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create a new C# web project in that directory using the <bpt id="p1">[</bpt><ph id="ph1">`dotnet new`</ph><ept id="p1">](../tools/dotnet-new.md)</ept> command as follows:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Install the <bpt id="p1">[</bpt><ph id="ph1">`dotnet-svcutil`</ph> NuGet package<ept id="p1">](https://nuget.org/packages/dotnet-svcutil)</ept> as a CLI tool:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 2.x<ept id="p1">](#tab/dotnetsvcutil2x)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 1.x<ept id="p1">](#tab/dotnetsvcutil1x)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`HelloSvcutil.csproj`</ph> project file in your editor, edit the <ph id="ph2">`Project`</ph> element, and add the <bpt id="p1">[</bpt><ph id="ph3">`dotnet-svcutil`</ph> NuGet package<ept id="p1">](https://nuget.org/packages/dotnet-svcutil)</ept> as a CLI tool reference, using the following code:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Then restore the <bpt id="p1">_</bpt>dotnet-svcutil<ept id="p1">_</ept> package using the <bpt id="p2">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p2">](../tools/dotnet-restore.md)</ept> command as follows:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">_</bpt>dotnet-svcutil<ept id="p1">_</ept> command to generate the web service reference file as follows:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 2.x<ept id="p1">](#tab/dotnetsvcutil2x)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 1.x<ept id="p1">](#tab/dotnetsvcutil1x)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The generated file is saved as <bpt id="p1">_</bpt>HelloSvcutil/ServiceReference/Reference.cs<ept id="p1">_</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">_</bpt>dotnet-svcutil<ept id="p1">_</ept> tool also adds to the project the appropriate WCF packages required by the proxy code as package references.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Using the Service Reference</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Restore the WCF packages using the <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](../tools/dotnet-restore.md)</ept> command as follows:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Find the name of the client class and operation you want to use.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Reference.cs`</ph> will contain a class that inherits from <ph id="ph2">`System.ServiceModel.ClientBase`</ph>, with methods that can be used to call operations on the service.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In this example, you want to call the <bpt id="p1">_</bpt>SayHello<ept id="p1">_</ept> service's <bpt id="p2">_</bpt>Hello<ept id="p2">_</ept> operation.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ServiceReference.SayHelloClient`</ph> is the name of the client class, and has a method called <ph id="ph2">`HelloAsync`</ph> that can be used to call the operation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`Startup.cs`</ph> file in your editor, and add a using statement for the service reference namespace at the top:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Edit the <ph id="ph1">`Configure`</ph> method to invoke the web service.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You do this by creating an instance of the class that inherits from <ph id="ph1">`ClientBase`</ph> and calling the method on the client object:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Run the application using the <bpt id="p1">[</bpt><ph id="ph1">`dotnet run`</ph><ept id="p1">](../tools/dotnet-run.md)</ept> command as follows:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Navigate to the URL listed in the console (for example, <ph id="ph1">`http://localhost:5000`</ph>) in your web browser.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You should see the following output: "Hello dotnet-svcutil!"</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For a detailed description of the <ph id="ph1">`dotnet-svcutil`</ph> tool parameters, invoke the tool passing the help parameter as follows:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 2.x<ept id="p1">](#tab/dotnetsvcutil2x)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil 1.x<ept id="p1">](#tab/dotnetsvcutil1x)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Feedback &amp; questions</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you have any questions or feedback, <bpt id="p1">[</bpt>open an issue on GitHub<ept id="p1">](https://github.com/dotnet/wcf/issues/new)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also review any existing questions or issues <bpt id="p1">[</bpt>at the WCF repo on GitHub<ept id="p1">](https://github.com/dotnet/wcf/issues?utf8=%E2%9C%93&amp;q=is:issue%20label:tooling)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Release notes</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>Release notes<ept id="p1">](https://github.com/dotnet/wcf/blob/master/release-notes/dotnet-svcutil-notes.md)</ept> for updated release information, including known issues.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Information</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet-svcutil NuGet Package<ept id="p1">](https://nuget.org/packages/dotnet-svcutil)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>