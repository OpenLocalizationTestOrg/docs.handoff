<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="dotnet-core-2-0.md" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d0f6a9faaec4d4438452054624751a40c96c8e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\whats-new\dotnet-core-2-0.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ce6ed0c14fab1dccb7e8cc7db3f7fa45e41f0b3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a556fcb8c990fc102e5eb4aba414623b6031af65</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>What's new in .NET Core 2.0</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn about the new features found in .NET Core.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>What's new in .NET Core 2.0</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 includes enhancements and new features in the following areas:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tooling<ept id="p1">](#tooling)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Language support<ept id="p1">](#language-support)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Platform improvements<ept id="p1">](#platform-improvements)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>API changes<ept id="p1">](#api-changes-and-library-support)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio integration<ept id="p1">](#visual-studio-integration)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Documentation improvements<ept id="p1">](#documentation-improvements)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Tooling</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>dotnet restore runs implicitly</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In previous versions of .NET Core, you had to run the <bpt id="p1">[</bpt>dotnet restore<ept id="p1">](../tools/dotnet-restore.md)</ept> command to download dependencies immediately after you created a new project with the <bpt id="p2">[</bpt>dotnet new<ept id="p2">](../tools/dotnet-new.md)</ept> command, as well as whenever you added a new dependency to your project.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also disable the automatic invocation of <ph id="ph1">`dotnet restore`</ph> by passing the <ph id="ph2">`--no-restore`</ph> switch to the <ph id="ph3">`new`</ph>, <ph id="ph4">`run`</ph>, <ph id="ph5">`build`</ph>, <ph id="ph6">`publish`</ph>, <ph id="ph7">`pack`</ph>, and <ph id="ph8">`test`</ph> commands.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Retargeting to .NET Core 2.0</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the .NET Core 2.0 SDK is installed, projects that target .NET Core 1.x can be retargeted to .NET Core 2.0.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To retarget to .NET Core 2.0, edit your project file by changing the value of the <ph id="ph1">`&lt;TargetFramework&gt;`</ph> element (or the <ph id="ph2">`&lt;TargetFrameworks&gt;`</ph> element if you have more than one target in your project file) from 1.x to 2.0:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also retarget .NET Standard libraries to .NET Standard 2.0 the same way:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about migrating your project to .NET Core 2.0, see <bpt id="p1">[</bpt>Migrating from ASP.NET Core 1.x to ASP.NET Core 2.0<ept id="p1">](/aspnet/core/migration/1x-to-2x/index)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Language support</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition to supporting C# and F#, .NET Core 2.0 also supports Visual Basic.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Visual Basic</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>With version 2.0, .NET Core now supports Visual Basic 2017.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use Visual Basic to create the following project types:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>.NET Core console apps</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>.NET Core class libraries</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>.NET Standard class libraries</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>.NET Core unit test projects</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>.NET Core xUnit test projects</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, to create a Visual Basic "Hello World" application, do the following steps from the command line:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Open a console window, create a directory for your project, and make it the current directory.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Enter the command <ph id="ph1">`dotnet new console -lang vb`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command creates a project file with a <ph id="ph1">`.vbproj`</ph> file extension, along with a Visual Basic source code file named <bpt id="p1">*</bpt>Program.vb<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This file contains the source code to write the string "Hello World!"</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>to the console window.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Enter the command <ph id="ph1">`dotnet run`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Core CLI<ept id="p1">](../tools/index.md)</ept> automatically compiles and executes the application, which displays the message "Hello World!"</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>in the console window.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Support for C# 7.1</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 supports C# 7.1, which adds a number of new features, including:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Main`</ph> method, the application entry point, can be marked with the <bpt id="p1">[</bpt>async<ept id="p1">](../../csharp/language-reference/keywords/async.md)</ept> keyword.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Inferred tuple names.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Default expressions.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Platform improvements</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 includes a number of features that make it easier to install .NET Core and to use it on supported operating systems.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>.NET Core for Linux is a single implementation</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 offers a single Linux implementation that works on multiple Linux distributions.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>.NET Core 1.x required that you download a distribution-specific Linux implementation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can also develop apps that target Linux as a single operating system.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>.NET Core 1.x required that you target each Linux distribution separately.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Support for the Apple cryptographic libraries</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>.NET Core 1.x on macOS required the OpenSSL toolkit's cryptographic library.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 uses the Apple cryptographic libraries and doesn't require OpenSSL, so you no longer need to install it.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>API changes and library support</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Support for .NET Standard 2.0</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The .NET Standard defines a versioned set of APIs that must be available on .NET implementations that comply with that version of the standard.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The .NET Standard is targeted at library developers.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It aims to guarantee the functionality that is available to a library that targets a version of the .NET Standard on each .NET implementation.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>.NET Core 1.x supports the .NET Standard version 1.6; .NET Core 2.0 supports the latest version, .NET Standard 2.0.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](../../standard/net-standard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>.NET Standard 2.0 includes over 20,000 more APIs than were available in the .NET Standard 1.6.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Much of this expanded surface area results from incorporating APIs that are common to the .NET Framework and Xamarin into .NET Standard.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>.NET Standard 2.0 class libraries can also reference .NET Framework class libraries, provided that they call APIs that are present in the .NET Standard 2.0.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>No recompilation of the .NET Framework libraries is required.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For a list of the APIs that have been added to the .NET Standard since its last version, the .NET Standard 1.6, see <bpt id="p1">[</bpt>.NET Standard 2.0 vs. 1.6<ept id="p1">](https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_diff.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Expanded surface area</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The total number of APIs available on .NET Core 2.0 has more than doubled in comparison with .NET Core 1.1.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>And with the <bpt id="p1">[</bpt>Windows Compatibility Pack<ept id="p1">](../porting/windows-compat-pack.md)</ept> porting from .NET Framework has also become much simpler.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Support for .NET Framework libraries</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>.NET Core code can reference existing .NET Framework libraries, including existing NuGet packages.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Note that the libraries must use APIs that are found in .NET Standard.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Visual Studio integration</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 version 15.3 and in some cases Visual Studio for Mac offer a number of significant enhancements for .NET Core developers.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Retargeting .NET Core apps and .NET Standard libraries</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the .NET Core 2.0 SDK is installed, you can retarget .NET Core 1.x projects to .NET Core 2.0 and .NET Standard 1.x libraries to .NET Standard 2.0.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To retarget your project in Visual Studio, you open the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab of the project's properties dialog and change the <bpt id="p2">**</bpt>Target framework<ept id="p2">**</ept> value to <bpt id="p3">**</bpt>.NET Core 2.0<ept id="p3">**</ept> or <bpt id="p4">**</bpt>.NET Standard 2.0<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can also change it by right-clicking on the project and selecting the <bpt id="p1">**</bpt>Edit <ph id="ph1">\*</ph>.csproj file<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Tooling<ept id="p1">](#tooling)</ept> section earlier in this topic.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Live Unit Testing support for .NET Core</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Whenever you modify your code, Live Unit Testing automatically runs any affected unit tests in the background and displays the results and code coverage live in the Visual Studio environment.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 now supports Live Unit Testing.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Previously, Live Unit Testing was available only for .NET Framework applications.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Live Unit Testing with Visual Studio 2017<ept id="p1">](/visualstudio/test/live-unit-testing)</ept> and the <bpt id="p2">[</bpt>Live Unit Testing FAQ<ept id="p2">](/visualstudio/test/live-unit-testing-faq)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Better support for multiple target frameworks</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you're building a project for multiple target frameworks, you can now select the target platform from the top-level menu.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In the following figure, a project named SCD1 targets 64-bit macOS X 10.11 (<ph id="ph1">`osx.10.11-x64`</ph>) and 64-bit Windows 10/Windows Server 2016 (<ph id="ph2">`win10-x64`</ph>).</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can select the target framework before selecting the project button, in this case to run a debug build.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Screenshot showing target framework selection when building a project.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Side-by-side support for .NET Core SDKs</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can now install the .NET Core SDK independently of Visual Studio.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This makes it possible for a single version of Visual Studio to build projects that target different versions of .NET Core.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Previously, Visual Studio and the .NET Core SDK were tightly coupled; a particular version of the SDK accompanied a particular version of Visual Studio.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Documentation improvements</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>.NET Application Architecture</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Application Architecture<ept id="p1">](https://www.microsoft.com/net/learn/architecture)</ept> gives you access to a set of e-books that provide guidance, best practices, and sample applications when using .NET to build:</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microservices and Docker containers<ept id="p1">](../../standard/microservices-architecture/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Web applications with ASP.NET<ept id="p1">](../../standard/modern-web-apps-azure-architecture/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mobile applications with Xamarin<ept id="p1">](/xamarin/xamarin-forms/enterprise-application-patterns/index)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Applications that are deployed to the Cloud with Azure<ept id="p1">](/azure/architecture/reference-architectures/index)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>What's new in ASP.NET Core 2.0<ept id="p1">](/aspnet/core/aspnetcore-2.0)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>