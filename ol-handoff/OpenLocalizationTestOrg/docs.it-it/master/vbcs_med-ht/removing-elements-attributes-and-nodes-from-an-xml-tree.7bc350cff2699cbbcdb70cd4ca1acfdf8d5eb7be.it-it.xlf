<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">527ebac9156a0b08cbc6b7fcae9192be8a7d71ee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\concepts\linq\removing-elements-attributes-and-nodes-from-an-xml-tree.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0147efbaeaaac4369a3e4a9a2224283c3c50ca43</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4326f98da81dc8a78749c96b350fcd5ecf2e3087</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Removing Elements, Attributes, and Nodes from an XML Tree (C#) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Removing Elements, Attributes, and Nodes from an XML Tree (C#)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can modify an XML tree, removing elements, attributes, and other types of nodes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Removing a single element or a single attribute from an XML document is straightforward.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, when removing collections of elements or attributes, you should first materialize a collection into a list, and then delete the elements or attributes from the list.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The best approach is to use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> extension method, which will do this for you.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The main reason for doing this is that most of the collections you retrieve from an XML tree are yielded using deferred execution.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If you do not first materialize them into a list, or if you do not use the extension methods, it is possible to encounter a certain class of bugs.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mixed Declarative Code/Imperative Code Bugs (LINQ to XML) (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/mixed-declarative-code-imperative-code-bugs-linq-to-xml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following methods remove nodes and attributes from an XML tree.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAttribute.Remove<ept id="p1">](https://msdn.microsoft.com/library/system.xml.linq.xattribute.remove\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Removes an <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> from its parent.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XContainer.RemoveNodes<ept id="p1">](https://msdn.microsoft.com/library/system.xml.linq.xcontainer.removenodes\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Removes the child nodes from an <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Removes content and attributes from an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Removes the attributes of an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for value, then removes the attribute.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for value, then removes the child element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Removes an <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph> from its parent.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Removes every attribute or element in the source collection from its parent element.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This example demonstrates three approaches to removing elements.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>First, it removes a single element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Second, it retrieves a collection of elements, materializes them using the <ph id="ph1">&lt;xref:System.Linq.Enumerable.ToList%2A?displayProperty=fullName&gt;</ph> operator, and removes the collection.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Finally, it retrieves a collection of elements and removes them using the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> extension method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information on the <ph id="ph1">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph> operator, see <bpt id="p1">[</bpt>Converting Data Types (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/converting-data-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Code</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Comments</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Notice that the first grandchild element has been removed from <ph id="ph1">`Child1`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>All grandchildren elements have been removed from <ph id="ph1">`Child2`</ph> and from <ph id="ph2">`Child3`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Modifying XML Trees (LINQ to XML) (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>