<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71c16d3f1b93647154bdead4a85d1117b5f6c463</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\xml-axis\extension-indexer-property.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5233fdd483ec23369646476efa34050732f042f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d65777fc0bc93ed5a1f7ce75e33e04c9715d7398</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Extension Indexer Property (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Extension Indexer Property (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides access to individual elements in a collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Definition</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A queryable collection.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>That is, a collection that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>(</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Denotes the start of the indexer property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An integer expression that specifies the zero-based position of an element of the collection.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Denotes the end of the indexer property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The object from the specified location in the collection, or <ph id="ph1">`Nothing`</ph> if the index is out of range.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use the extension indexer property to access individual elements in a collection.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This indexer property is typically used on the output of XML axis properties.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XML child and XML descendent axis properties return collections of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects or an attribute value.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler converts extension indexer properties to calls to the<ph id="ph2">`ElementAtOrDefault`</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Unlike an array indexer, the<ph id="ph1">`ElementAtOrDefault`</ph> method returns <ph id="ph2">`Nothing`</ph> if the index is out of range.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This behavior is useful when you cannot easily determine the number of elements in a collection.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This indexer property is like an extension property for collections that implement <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph>: it is used only if the collection does not have an indexer or a default property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To access the value of the first element in a collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects, you can use the XML <ph id="ph3">`Value`</ph> property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Value Property<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the extension indexer to access the second child node in a collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The collection is accessed by using the child axis property, which gets all child elements named <ph id="ph1">`phone`</ph> in the <ph id="ph2">`contact`</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#24<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/extension-indexer-property_1.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This code displays the following text:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Axis Properties<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating XML in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Value Property<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>