<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e4cb643116a0fcbfa408dda5571a04cb93cc65e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\variables\how-to-create-a-variable-that-does-not-change-in-value.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94bde705d937ce299043552c3ae1346a1cbd49fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93a480fc4150411890cfcae9a3cac99778efff49</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create a Variable that Does Not Change in Value (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Variable that Does Not Change in Value (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The notion of a variable that does not change its value might appear to be contradictory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>But there are situations when a constant is not feasible and it is useful to have a variable with a fixed value.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In such a case you can define a member variable with the <bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../../visual-basic/language-reference/modifiers/readonly.md)</ept> keyword.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">[</bpt>Const Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/const-statement.md)</ept> to declare and assign a constant value in the following circumstances:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Const`</ph> statement does not accept the data type you want to use</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You do not know the value at compile time</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You are unable to compute the constant value at compile time</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To create a variable that does not change in value</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>At module level, declare a member variable with the <bpt id="p1">[</bpt>Dim Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept>, and include the <bpt id="p2">[</bpt>ReadOnly<ept id="p2">](../../../../visual-basic/language-reference/modifiers/readonly.md)</ept> keyword.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`ReadOnly`</ph> only on a member variable.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This means you must define the variable at module level, outside of any procedure.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you can compute the value in a single statement at compile time, use an initialization clause in the <ph id="ph1">`Dim`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Follow the <bpt id="p1">[</bpt>As<ept id="p1">](../../../../visual-basic/language-reference/statements/as-clause.md)</ept> clause with an equal sign (<ph id="ph1">`=`</ph>), followed by an expression.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Be sure the compiler can evaluate this expression to a constant value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can assign a value to a <ph id="ph1">`ReadOnly`</ph> variable only once.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Once you do so, no code can ever change its value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you do not know the value at compile time, or cannot compute it at compile time in a single statement, you can still assign it at run time in a constructor.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To do this, you must declare the <ph id="ph1">`ReadOnly`</ph> variable at class or structure level.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the constructor for that class or structure, compute the variable's fixed value, and assign it to the variable before returning from the constructor.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WriteOnly<ept id="p1">](../../../../visual-basic/language-reference/modifiers/writeonly.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Const Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/const-statement.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>