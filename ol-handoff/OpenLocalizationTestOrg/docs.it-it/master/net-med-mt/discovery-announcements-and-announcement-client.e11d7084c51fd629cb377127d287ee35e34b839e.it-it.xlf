<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="discovery-announcements-and-announcement-client.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eed16ec00a0434389a9204925f644ab2b29e2490</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\discovery-announcements-and-announcement-client.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bccd5c1e2b7d21e4a4277408d4daf2be30a97f0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc60f02ca12ee75d4fd09d82a966722515306ca7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Discovery Announcements and Announcement Client | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Discovery Announcements and Announcement Client</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> discovery feature enables components to announce their availability.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If configured to do so, a service sends Hello and Bye announcements.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Clients or other components can listen for such announcement messages and act on them.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This provides an alternative method for clients to be aware of services.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Announcement functionality has several uses, for example, if the services enter and leave a network frequently, announcements may be a better alternative than searching for services.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With this approach, the network traffic is reduced and the client can learn about the presence or departure of the service as soon as announcements are received.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Discovery Announcements</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a service configured for announcements joins a network and becomes discoverable, it sends a Hello message announcing its availability to listening clients.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The message contains discovery related information about the service, such as its contract, endpoint address and associated scopes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can specify where the announcement message is sent with the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementEndpoint&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the announcement endpoint is a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpAnnouncementEndpoint&gt;</ph> then the Hello and Bye are multicast appropriately, or if the announcement endpoint is unicast, the messages are sent directly to the specified endpoint.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Announcements are sent when the service host opens and closes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If these calls do not finish properly the announcement message may not be sent out. For example if the service faults, then the Bye announcement message is not sent.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can customize the announcement functionality, allowing you to send announcements whenever you choose.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph> defines the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.AnnouncementEndpoint&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.UdpAnnouncementEndpoint&gt;</ph> as standard endpoints to allow services and clients to easily send Hello and Bye announcements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Announcements on the Service</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To configure the service to send announcements, add a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> with an announcement endpoint.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example shows how to programmatically add this behavior to the service host.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">`UdpAnnouncementEndpoint`</ph>, which implies that the announcements are multicast to a location specified by that standard endpoint.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The behavior can be configured in the configuration file as well, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The preceding examples configure a service to automatically send announcement messages.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can also send announcement messages explicitly by using the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementClient&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Announcements on the Client</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A client application must host an announcement service to respond to the Hello and Bye messages and subscribe to the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementService.OnlineAnnouncementReceived&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.AnnouncementService.OfflineAnnouncementReceived&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example shows how to do this.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When a Hello or Bye message is received, you can access the endpoint discovery metadata through <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementEventArgs&gt;</ph> as shown in the following example.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>