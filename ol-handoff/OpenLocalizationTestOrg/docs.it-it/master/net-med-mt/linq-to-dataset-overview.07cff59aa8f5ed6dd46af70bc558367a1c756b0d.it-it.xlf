<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ade8af147c8693b95daf5e9dcee34b0387157cdd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\linq-to-dataset-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c607ec3c29c149ed306bbb1d8c2f6521645706b9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2614fd330a5abf885ba98f1130ebb42fd993fc8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ to DataSet Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ to DataSet Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is one of the more widely used components of <ph id="ph2">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It is a key element of the disconnected programming model that <ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> is based on, and it enables you to explicitly cache data from different data sources.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For the presentation tier, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is tightly integrated with GUI controls for data-binding.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the middle-tier, it provides a cache that preserves the relational shape of data, and includes fast simple query and hierarchy navigation services.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A common technique used to lower the number of requests on a database is to use the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> for caching in the middle-tier.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, consider a data-driven <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Often, a significant portion of the application data does not change frequently and is common across sessions or users.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This data can be kept in memory on the Web server, which reduces the number of requests against the database and speeds up the userâ€™s interactions.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Another useful aspect of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is that it allows an application to bring subsets of data from one or more data source into the application space.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The application can then manipulate the data in-memory, while retaining its relational shape.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Despite its prominence, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> has limited query capabilities.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method can be used for filtering and sorting, and the <ph id="ph2">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRow%2A&gt;</ph> methods can be used for hierarchy navigation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For anything more complex, however, the developer must write a custom query.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This can result in applications that perform poorly and are difficult to maintain.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> makes it easier and faster to query over data cached in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These queries are expressed in the programming language itself, rather than as string literals embedded in the application code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This means that developers do not have to learn a separate query language.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Additionally, <ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> enables <ph id="ph2">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> developers to work more productively, because the <ph id="ph3">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> IDE provides compile-time syntax checking, static typing, and IntelliSense support for <ph id="ph4">[!INCLUDE[vbteclinq](../../../../includes/vbteclinq-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> can also be used to query over data that has been consolidated from one or more data sources.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This enables many scenarios that require flexibility in how data is represented and handled.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In particular, generic reporting, analysis, and business intelligence applications require this method of manipulation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Querying DataSets Using LINQ to DataSet</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Before you can begin querying a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object using <ph id="ph2">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph>, you must populate the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There are several ways to load data into a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, such as using the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> class or <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](../../../../docs/framework/data/adonet/sql/linq/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>After the data has been loaded into a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object, you can begin to query it.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Formulating queries using <ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> is similar to using <ph id="ph2">[!INCLUDE[vbteclinqext](../../../../includes/vbteclinqext-md.md)]</ph> against other <ph id="ph3">[!INCLUDE[vbteclinq](../../../../includes/vbteclinq-md.md)]</ph>-enabled data sources.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbteclinq](../../../../includes/vbteclinq-md.md)]</ph> queries can be performed against single tables in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or against more than one table by using the <ph id="ph3">&lt;xref:System.Linq.Enumerable.Join%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Linq.Enumerable.GroupJoin%2A&gt;</ph> standard query operators.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbteclinq](../../../../includes/vbteclinq-md.md)]</ph> queries are supported against both typed and untyped <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the schema of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is known at application design time, a typed <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> is recommended.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the tables and rows have typed members for each of the columns, which makes queries simpler and more readable.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In addition to the standard query operators implemented in System.Core.dll, <ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> adds several <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>-specific extensions that make it easier to query over a set of <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>-specific extensions include operators for comparing sequences of rows, as well as methods that provide access to the column values of a <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>N-tier Applications and LINQ to DataSet</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>N-tier data applications are data-centric applications that are separated into multiple logical layers (or tiers).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A typical N-tier application includes a presentation tier, a middle tier, and a data tier.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Separating application components into separate tiers increases the maintainability and scalability of the application.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about N-tier data applications, see <bpt id="p1">[</bpt>Work with datasets in n-tier applications<ept id="p1">](http://msdn.microsoft.com/library/f6ae2ee0-ea5f-4a79-8f4b-e21c115afb20)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In N-tier applications, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is often used in the middle-tier to cache information for a Web application.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph> querying functionality is implemented through extension methods and extends the existing ADO.NET 2.0 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Querying DataSets<ept id="p1">](../../../../docs/framework/data/adonet/querying-datasets-linq-to-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ (Language-Integrated Query)<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](../../../../docs/framework/data/adonet/sql/linq/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>