<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b49449b392b5e61258405ec533ab44ba03858dfa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\deriving-dataset-relational-structure-from-xml-schema-xsd.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">595eb41a7680083ffcda4664dc0e5cfb0f7c7e76</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04ffc6fdf55656e2af740044b1294d48b5278515</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Deriving DataSet Relational Structure from XML Schema (XSD) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Deriving DataSet Relational Structure from XML Schema (XSD)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section provides an overview of how the relational schema of a <ph id="ph1">`DataSet`</ph> is built from an XML Schema definition language (XSD) schema document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In general, for each <ph id="ph1">`complexType`</ph> child element of a schema element, a table is generated in the <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The table structure is determined by the definition of the complex type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Tables are created in the <ph id="ph1">`DataSet`</ph> for top-level elements in the schema.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, a table is only created for a top-level <ph id="ph1">`complexType`</ph> element when the <ph id="ph2">`complexType`</ph> element is nested inside another <ph id="ph3">`complexType`</ph> element, in which case the nested <ph id="ph4">`complexType`</ph> element is mapped to a <ph id="ph5">`DataTable`</ph> within the <ph id="ph6">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information about the XSD, see the World Wide Web Consortium (W3C) XML Schema Part 0: Primer Recommendation, the XML Schema Part 1: Structures Recommendation, and the XML Schema Part 2: Datatypes Recommendation, located at <bpt id="p1">[</bpt>http://www.w3.org/<ept id="p1">](http://www.w3.org/TR/)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example demonstrates an XML Schema where <ph id="ph1">`customers`</ph> is the child element of the <ph id="ph2">`MyDataSet`</ph> element, which is a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> element.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the preceding example, the element <ph id="ph1">`customers`</ph> is a complex type element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, the complex type definition is parsed, and the mapping process creates the following table.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The data type of each column in the table is derived from the XML Schema type of the corresponding element or attribute specified.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the element <ph id="ph1">`customers`</ph> is of a simple XML Schema data type such as <bpt id="p1">**</bpt>integer<ept id="p1">**</ept>, no table is generated.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Tables are only created for the top-level elements that are complex types.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the following XML Schema, the <bpt id="p1">**</bpt>Schema<ept id="p1">**</ept> element has two element children, <ph id="ph1">`InStateCustomers`</ph> and <ph id="ph2">`OutOfStateCustomers`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Both the <ph id="ph1">`InStateCustomers`</ph> and the <ph id="ph2">`OutOfStateCustomers`</ph> child elements are complex type elements (<ph id="ph3">`customerType`</ph>).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Therefore, the mapping process generates the following two identical tables in the <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mapping XML Schema (XSD) Constraints to DataSet Constraints<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/mapping-xml-schema-xsd-constraints-to-dataset-constraints.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Describes the XML Schema elements used to create unique and foreign key constraints in a <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generating DataSet Relations from XML Schema (XSD)<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/generating-dataset-relations-from-xml-schema-xsd.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Describes the XML Schema elements used to create relations between table columns in a <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Schema Constraints and Relationships<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/xml-schema-constraints-and-relationships.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Describes how relations are created implicitly when using XML Schema elements to create constraints in a <ph id="ph1">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using XML in a DataSet<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Describes how to load and persist the relational structure and data in a <ph id="ph1">`DataSet`</ph> as XML data.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>