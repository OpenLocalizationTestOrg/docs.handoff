<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11e5d48dd1a27da7e81c9f70a496104fea7c6eff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\ui-automation\textpattern-and-embedded-objects-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e3bd2dae1d6367f7ab9a7c796729ad6b26ad5a3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d1f5dd257c490ce3f9a184db598f7d60dd32183</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TextPattern and Embedded Objects Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TextPattern and Embedded Objects Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This documentation is intended for .NET Framework developers who want to use the managed <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> classes defined in the <ph id="ph2">&lt;xref:System.Windows.Automation&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For the latest information about <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, see <bpt id="p1">[</bpt>Windows Automation API: UI Automation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=156746)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This overview describes how <ph id="ph1">[!INCLUDE[TLA#tla_uiautomation](../../../includes/tlasharptla-uiautomation-md.md)]</ph> exposes embedded objects, or child elements, within a text document or container.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> an embedded object is any element that has non-textual boundaries; for example, an image, hyperlink, table, or document type such as an <ph id="ph2">[!INCLUDE[TLA#tla_xl](../../../includes/tlasharptla-xl-md.md)]</ph> spreadsheet or <ph id="ph3">[!INCLUDE[TLA#tla_winmedia](../../../includes/tlasharptla-winmedia-md.md)]</ph> file.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This differs from the standard definition, where an element is created in one application and embedded, or linked, within another.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Whether the object can be edited within its original application is irrelevant in the context of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Embedded Objects and the UI Automation Tree</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Embedded objects are treated as individual elements within the control view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> tree.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>They are exposed as children of the text container so that they can be accessed through the same model as other controls in <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Embedded Table with Image in a Text Container<ept id="p1">](../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-example1.png "UIA_TextPattern_Embedded_Objects_Overview_Example1")</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example of a Text Container with Table, Image, and Hyperlink Embedded Objects</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Content view for the preceding example<ept id="p1">](../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-example2.PNG "UIA_TextPattern_Embedded_Objects_Overview_Example2")</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example of the Content View for a Portion of the Preceding Text Container</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Expose Embedded Objects Using TextPattern and TextPatternRange</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Used in conjunction, the <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> control pattern class and the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;</ph> class expose methods and properties that facilitate navigation and querying of embedded objects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This can be accomplished by calling <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</ph> to obtain an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> for each embedded object and then calling <ph id="ph3">&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;</ph> to obtain a text range for each element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is done recursively until all textual content has been retrieved.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">](../../../docs/framework/ui-automation/media/uia-textpattern-embeddedobjecttextranges.png "UIA_TextPattern_EmbeddedObjectTextRanges")</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example of a text stream with embedded objects and their range spans</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;</ph> method to execute successfully.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</ph> endpoint superfluous.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> boundaries: for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> boundary.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The range is moved forward or backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</ph> by the requested number of <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> boundaries.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</ph> endpoint by one requested <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> boundary.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">](../../../docs/framework/ui-automation/media/uia-textpattern-moveandexpand-examples.png "UIA_TextPattern_MoveAndExpand_Examples")</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Common Scenarios</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following sections present examples of the most common scenarios that involve embedded objects.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Legend for the examples shown:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>{ = <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>} = <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Hyperlink</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 1 - A text range that contains an embedded text hyperlink<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>{The URL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text}.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Method called</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns the string "The URL http://www.microsoft.com is embedded in text".</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns the innermost <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that encloses the text range; in this case, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that represents the text provider itself.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing the hyperlink control.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;</ph> where <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> is the object returned by the previous <ph id="ph3">`GetChildren`</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns the range that represents "http://www.microsoft.com".</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 2 - A text range that partially spans an embedded text hyperlink<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The URL http://{[www]} is embedded in text.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Method called</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns the string "www".</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns the innermost <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that encloses the text range; in this case, the hyperlink control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> since the text range doesn't span the entire URL string.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 3 - A text range that partially spans the content of a text container. The text container has an embedded text hyperlink that is not part of the text range.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>{The URL} <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Method called</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns the string "The URL".</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns the innermost <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that encloses the text range; in this case, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that represents the text provider itself.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;</ph> with parameters of (TextUnit.Word, 1).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Moves the text range span to "http" since the text of the hyperlink is comprised of individual words.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In this case, the hyperlink is not treated as a single object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The URL {[http]} is embedded in text.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Image</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 1 - A text range that contains an embedded image<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>{The image <bpt id="p1">![</bpt>Embedded Image Example<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample.PNG "</bpt>UIA_TextPattern_Embedded_Objects_Overview_ImageExample<ept id="p2">")</ept> is embedded in text}.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Method called</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns the string "The is embedded in text".</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Any ALT text associated with the image cannot be expected to be included in the text stream.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns the innermost <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that encloses the text range; in this case, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that represents the text provider itself.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing the image control.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;</ph> where <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> is the object returned by the previous <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns the degenerate range that represents "<bpt id="p1">![</bpt>Embedded Image Example<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample.PNG "</bpt>UIA_TextPattern_Embedded_Objects_Overview_ImageExample<ept id="p2">")</ept>".</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 2 - A text range that partially spans the content of a text container. The text container has an embedded image that is not part of the text range.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>{The image} <bpt id="p1">![</bpt>Embedded Image Example<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample.PNG "</bpt>UIA_TextPattern_Embedded_Objects_Overview_ImageExample<ept id="p2">")</ept> is embedded in text.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Method called</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns the string "The image".</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the innermost <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that encloses the text range; in this case, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that represents the text provider itself.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;</ph> with parameters of (TextUnit.Word, 1).</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Moves the text range span to "is ".</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Because only text-based embedded objects are considered part of the text stream, the image in this example does not affect Move or its return value (1 in this case).</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Table</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Table used for examples</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Cell with Image</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Cell with Text</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Embedded Image Example<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample.PNG "</bpt>UIA_TextPattern_Embedded_Objects_Overview_ImageExample<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>X</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Embedded Image Example 2<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample2.PNG "</bpt>UIA_TextPattern_Embedded_Objects_Overview_ImageExample2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Y</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Embedded Image Example 3<ept id="p1">](../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample3.PNG "UIA_TextPattern_Embedded_Objects_Overview_ImageExample3")</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Image for Z</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Z</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 1 - Get the text container from the content of a cell.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Method Called</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.GridPattern.GetItem%2A&gt;</ph> with parameters (0,0)</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing the content of the table cell; in this case, the element is a text control.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;</ph> where <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> is the object returned by the previous <ph id="ph3">`GetItem`</ph> method.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns the range that spans the image <bpt id="p1">![</bpt>Embedded Image Example<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/ui-automation/media/uia-textpattern-embedded-objects-overview-imageexample.PNG "</bpt>UIA_TextPattern_Embedded_Objects_Overview_ImageExample<ept id="p2">")</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement%2A&gt;</ph> for the object returned by the previous <ph id="ph2">`RangeFromChild`</ph> method.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing the table cell; in this case, the element is a text control that supports TableItemPattern.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement%2A&gt;</ph> for the object returned by the previous <ph id="ph2">`GetEnclosingElement`</ph> method.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing the table.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement%2A&gt;</ph> for the object returned by the previous <ph id="ph2">`GetEnclosingElement`</ph> method.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that represents the text provider itself.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Example 2 - Get the text content of a cell.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Method Called</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.GridPattern.GetItem%2A&gt;</ph> with parameters of (1,1).</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing the content of the table cell; in this case, the element is a text control.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;</ph> where <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> is the object returned by the previous <ph id="ph3">`GetItem`</ph> method.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Returns "Y".</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;</ph></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider&gt;</ph></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Access Embedded Objects Using UI Automation<ept id="p1">](../../../docs/framework/ui-automation/access-embedded-objects-using-ui-automation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Expose the Content of a Table Using UI Automation<ept id="p1">](../../../docs/framework/ui-automation/expose-the-content-of-a-table-using-ui-automation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Traverse Text Using UI Automation<ept id="p1">](../../../docs/framework/ui-automation/traverse-text-using-ui-automation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TextPattern Search and Selection Sample<ept id="p1">](http://msdn.microsoft.com/en-us/0a3bca57-8b72-489d-a57c-da85b7a22c7f)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>