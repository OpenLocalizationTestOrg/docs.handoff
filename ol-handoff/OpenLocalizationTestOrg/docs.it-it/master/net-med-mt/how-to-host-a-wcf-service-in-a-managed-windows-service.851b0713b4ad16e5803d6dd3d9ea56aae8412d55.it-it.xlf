<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-host-a-wcf-service-in-a-managed-windows-service.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be1844f8d43a9c04425de39e512691711b7454c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-host-a-wcf-service-in-a-managed-windows-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c10a487be22b174333fa04655fdfafe870393f90</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dda3b1bd924a8f2107fdb7f8d37f3e447b51c0e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Host a WCF Service in a Managed Windows Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Host a WCF Service in a Managed Windows Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic outlines the basic steps required to create a <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service that is hosted by a Windows Service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The scenario is enabled by the managed Windows service hosting option that is a long-running <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service hosted outside of Internet Information Services (IIS) in a secure environment that is not message activated.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The lifetime of the service is controlled instead by the operating system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This hosting option is available in all versions of Windows.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows services can be managed with the Microsoft.ManagementConsole.SnapIn in Microsoft Management Console (MMC) and can be configured to start up automatically when the system boots up.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This hosting option consists of registering the application domain (AppDomain) that hosts a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service as a managed Windows service so that the process lifetime of the service is controlled by the Service Control Manager (SCM) for Windows services.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The service code includes a service implementation of the service contract, a Windows Service class, and an installer class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The service implementation class, <ph id="ph1">`CalculatorService`</ph>, is a <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CalculatorWindowsService`</ph> is a Windows service.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To qualify as a Windows service, the class inherits from <ph id="ph1">`ServiceBase`</ph> and implements the <ph id="ph2">`OnStart`</ph> and <ph id="ph3">`OnStop`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`OnStart`</ph>, a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> is created for the <ph id="ph3">`CalculatorService`</ph> type and opened.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`OnStop`</ph>, the service is stopped and disposed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The host is also responsible for providing a base address to the service host, which has been configured in application settings.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The installer class, which inherits from <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph>, allows the program to be installed as a Windows service by the Installutil.exe tool.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Construct the service and provide the hosting code</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create a new Visual Studio Console Application project called "Service".</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Rename Program.cs to Service.cs.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Change the namespace to Microsoft.ServiceModel.Samples.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add references to the following assemblies.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>System.ServiceModel.dll</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>System.ServiceProcess.dll</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>System.Configuration.Install.dll</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add the following using statements to Service.cs.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Define the <ph id="ph1">`ICalculator`</ph> service contract as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Implement the service contract in a class called <ph id="ph1">`CalculatorService`</ph> as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a new class called <ph id="ph1">`CalculatorWindowsService`</ph> that inherits from the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add a local variable called <ph id="ph1">`serviceHost`</ph> to reference the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Define the <ph id="ph1">`Main`</ph> method that calls <ph id="ph2">`ServiceBase.Run(new CalculatorWindowsService)`</ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%28System.String%5B%5D%29&gt;</ph> method by creating and opening a new <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method closing the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Create a new class called <ph id="ph1">`ProjectInstaller`</ph> that inherits from <ph id="ph2">&lt;xref:System.Configuration.Install.Installer&gt;</ph> and that is marked with the <ph id="ph3">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This allows the Windows service to be installed by the Installutil.exe tool.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`Service`</ph> class that was generated when you created the project.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add an application configuration file to the project.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Replace the contents of the file with the following configuration XML.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Right click the App.config file in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Copy to Output Directory<ept id="p1">**</ept> select <bpt id="p2">**</bpt>Copy if Newer<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example explicitly specifies endpoints in the configuration file.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you do not add any endpoints to the service, the runtime adds default endpoints for you.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In this example, because the service has a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior&gt;</ph> set to <ph id="ph2">`true`</ph>, your service also has publishing metadata enabled.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph>default endpoints, bindings, and behaviors, see <bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../../docs/framework/wcf/simplified-configuration.md)</ept> and <bpt id="p2">[</bpt>Simplified Configuration for WCF Services<ept id="p2">](../../../../docs/framework/wcf/samples/simplified-configuration-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Install and run the service</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Build the solution to create the <ph id="ph1">`Service.exe`</ph> executable.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> command prompt and navigate to the project directory.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`installutil bin\service.exe`</ph> at the command prompt to install the Windows service.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you do not use the <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> command prompt, make sure that the <ph id="ph2">`%WinDir%\Microsoft.NET\Framework\v4.0.&lt;current version&gt;`</ph> directory is in the system path.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`services.msc`</ph> at the command prompt to access the Service Control Manager (SCM).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Windows service should appear in Services as "WCFWindowsServiceSample".</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service can only respond to clients if the Windows service is running.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To start the service, right-click it in the SCM and select "Start", or type <bpt id="p1">**</bpt>net start WCFWindowsServiceSample<ept id="p1">**</ept> at the command prompt.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you make changes to the service, you must first stop it and uninstall it.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To stop the service, right-click the service in the SCM and select "Stop", or <bpt id="p1">**</bpt>type net stop WCFWindowsServiceSample<ept id="p1">**</ept> at the command prompt.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Note that if you stop the Windows service and then run a client, an <ph id="ph1">&lt;xref:System.ServiceModel.EndpointNotFoundException&gt;</ph> exception occurs when a client attempts to access the service.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To uninstall the Windows service type <bpt id="p1">**</bpt>installutil /u bin\service.exe<ept id="p1">**</ept> at the command prompt.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following is a complete listing of the code used by this topic.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Like the "Self-Hosting" option, the Windows service hosting environment requires that some hosting code be written as part of the application.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The service is implemented as a console application and contains its own hosting code.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In other hosting environments, such as Windows Process Activation Service (WAS) hosting in Internet Information Services (IIS), it is not necessary for developers to write hosting code.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../../docs/framework/wcf/simplified-configuration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hosting in a Managed Application<ept id="p1">](../../../../docs/framework/wcf/feature-details/hosting-in-a-managed-application.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hosting Services<ept id="p1">](../../../../docs/framework/wcf/hosting-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Server App Fabric Hosting Features<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201276)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>