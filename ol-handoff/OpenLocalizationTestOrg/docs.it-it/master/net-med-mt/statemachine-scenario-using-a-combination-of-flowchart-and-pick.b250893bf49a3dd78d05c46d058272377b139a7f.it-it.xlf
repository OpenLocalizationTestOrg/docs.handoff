<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">737931370f489eefbe2169e471e656b718d1212a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\statemachine-scenario-using-a-combination-of-flowchart-and-pick.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d32594abc32a83776c1923c91b9977f385466050</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77ac77cb1bc1999a3736845046730084c978f8b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>StateMachine Scenario Using a Combination of FlowChart and Pick | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>StateMachine Scenario Using a Combination of FlowChart and Pick</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to implement a simple stopwatch scenario using a combination of the <ph id="ph1">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It uses Receive and Send within the Pick activity to listen for stopwatch events.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to (download page) to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Sample Details</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table lists the projects in this sample.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Project Name</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>StopWatchService</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This project contains the implementation of a state machine for the stopwatch sample using a combination of the <ph id="ph1">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity has 3 <ph id="ph2">&lt;xref:System.Activities.Statements.PickBranch&gt;</ph> statements within the <ph id="ph3">&lt;xref:System.Activities.Statements.Pick.Branches%2A&gt;</ph> property that listen for <ph id="ph4">`GetStart`</ph>, <ph id="ph5">`GetStop`</ph> and <ph id="ph6">`GetOff`</ph> events.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Based on the incoming event, the triggers for one of the branches activate and the corresponding <ph id="ph1">&lt;xref:System.Activities.Statements.PickBranch.Action%2A&gt;</ph> is triggered.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Activities.Statements.PickBranch.Action%2A&gt;</ph> property, there is a <ph id="ph2">&lt;xref:System.Activities.Statements.Switch%601&gt;</ph> statement that evaluates whether the transition is a legitimate transition and if it is, the <ph id="ph3">`currentState`</ph> property is updated to the transitioning state and sent to the client.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> activity at the end of the <ph id="ph2">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> evaluates the <ph id="ph3">`currentState`</ph> property to determine whether the state is terminal.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If it is, the workflow ends; otherwise control loops back to the start of the <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity where the workflow waits for more stopwatch events.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>StopWatchClient</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is a simple sequential workflow console application that sends various stopwatch events with simple Send or Receive activity combinations.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open StateMachineWithPick.sln solution file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To build the solution, press CTRL+SHIFT+B.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Start the StopWatchService.exe from <ph id="ph1">[!INCLUDE[fileExplorer](../../../../includes/fileexplorer-md.md)]</ph> as an administrator by right clicking the .exe file and selecting <bpt id="p1">**</bpt>Run as administrator<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Navigate to the StateMachineWithPick\CS\StopWatchService\bin\Debug folder.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Right-click the StopWatchService.exe file and select <bpt id="p1">**</bpt>Run as administrator<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Start the StopWatchClient client application from within <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, select the <bpt id="p2">**</bpt>StopWatchClient<ept id="p2">**</ept> project and right-click <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To run the solution, press CTRL+F5.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Switch back to the console window for the StopWatchService.exe to view the state transitions.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>