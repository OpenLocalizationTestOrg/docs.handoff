<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1f68fe6294d8c828aa654a89dd2986080a5f4fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\suspended-instance-management.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e50b22a85d96c0ed2559d9573593b204c9fc6d89</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">162e462836d080ecf38121f63e62ef6a3b6eed6d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Suspended Instance Management | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Suspended Instance Management</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to manage workflow instances that have been suspended.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The default action for <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> is <ph id="ph2">`AbandonAndSuspend`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This means that by default, unhandled exceptions thrown from a workflow instance hosted in the <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> will cause the instance to be disposed from memory (abandoned) and the durable/persisted version of the instance to be marked as suspended.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A suspended workflow instance will not be able to run until it has been unsuspended.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The sample shows how a command-line utility can be implemented to query for suspended instances, and how to give the user the option to resume or terminate the instance.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this sample, a workflow service intentionally throws an exception, causing it to become suspended.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The command-line utility can then be used to query for the instance and subsequently resume or terminate the instance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Demonstrates</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> with <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Activities.WorkflowControlEndpoint&gt;</ph> in <ph id="ph4">[!INCLUDE[wf](../../../../includes/wf-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Discussion</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The command-line utility implemented in this sample is specific to the SQL instance store implementation that ships in <ph id="ph1">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you have a custom implementation of the instance store, then you can adapt this utility by replacing the <ph id="ph1">`WorkflowInstanceCommand`</ph> implementations in the sample with implementations that are specific to your instance store.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The provided implementation runs SQL commands against the SQL instance store directly to list suspended instances, and it relies on a <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowControlEndpoint&gt;</ph> added to the <ph id="ph2">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> in order to resume or terminate the instances.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This sample requires that the following Windows components are enabled:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Microsoft Message Queues (MSMQ) Server</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>SQL Server Express</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Set up the SQL Server database.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>From a <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph> command prompt, run "setup.cmd" from the SuspendedInstanceManagement sample directory, which does the following:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creates a persistence database using SQL Server Express.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the persistence database already exists, then it is dropped and re-created</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Sets up the database for persistence.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds IIS APPPOOL\DefaultAppPool and NT AUTHORITY\Network Service to the InstanceStoreUsers role that was defined when setting up the database for persistence.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Set up the service queue.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, right-click the <bpt id="p1">**</bpt>SampleWorkflowApp<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as Startup Project<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Compile and run the SampleWorkflowApp by pressing <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This will create the required queue.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept> to stop the SampleWorkflowApp.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Open the Computer Management console by running Compmgmt.msc from a command prompt.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Service and Applications<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Message Queuing<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Private Queues<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Right click the <bpt id="p1">**</bpt>ReceiveTx<ept id="p1">**</ept> queue and select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Security<ept id="p1">**</ept> tab and allow <bpt id="p2">**</bpt>Everyone<ept id="p2">**</ept> to have permissions to <bpt id="p3">**</bpt>Receive Message<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Peek Message<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Send Message<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now, run the sample.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, run the SampleWorkflowApp project again without debugging by pressing <bpt id="p1">**</bpt>Ctrl+F5<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Two endpoint addresses will be printed in the console window: one for the application endpoint and then other from the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowControlEndpoint&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A workflow instance is then created, and tracking records for that instance will appear in the console window.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The workflow instance will throw an exception causing the instance to be suspended and aborted.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command-line utility can then be used to take further action on any of these instances.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The syntax for command line arguments is as follows::</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The supported commands are: <ph id="ph1">`Query`</ph>, <ph id="ph2">`Resume`</ph>, and <ph id="ph3">`Terminate`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The InstanceId switch is only required for <ph id="ph1">`Resume`</ph> and <ph id="ph2">`Terminate`</ph> operations.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To cleanup (Optional)</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Open the Computer Management console by running Compmgmt.msc from a <ph id="ph1">`vs2010`</ph> command prompt.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Service and Applications<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Message Queuing<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Private Queues<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>ReceiveTx<ept id="p1">**</ept> queue.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To remove the persistence database, run cleanup.cmd.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>