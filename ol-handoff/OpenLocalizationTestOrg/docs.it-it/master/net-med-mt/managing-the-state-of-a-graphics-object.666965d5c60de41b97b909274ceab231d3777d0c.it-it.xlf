<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c447bf4210a06182d2194f6b4dc0780edb9e067</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\managing-the-state-of-a-graphics-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">823f2ac594a781fea66f97afe8a9e8c3602849b4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b133e5989303f51f6a9389624f33cce6e730454</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Managing the State of a Graphics Object | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Managing the State of a Graphics Object</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> class is at the heart of <ph id="ph2">[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To draw anything, you obtain a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object, set its properties, and call its methods <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph>, and the like).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The first argument passed to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method is a <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Graphics State</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object does more than provide drawing methods, such as <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object also maintains graphics state, which can be divided into the following categories:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Quality settings</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Transformations</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Clipping region</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Quality Settings</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object has several properties that influence the quality of the items that are drawn.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, you can set the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> property to specify the type of antialiasing (if any) applied to text.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Other properties that influence quality are <ph id="ph1">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Graphics.CompositingMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Graphics.CompositingQuality%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.InterpolationMode%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example draws two ellipses, one with the smoothing mode set to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.SmoothingMode&gt;</ph> and one with the smoothing mode set to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.SmoothingMode&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Transformations</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object maintains two transformations (world and page) that are applied to all items drawn by that <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Any affine transformation can be stored in the world transformation.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Affine transformations include scaling, rotating, reflecting, skewing, and translating.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The page transformation can be used for scaling and for changing units (for example, pixels to inches).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Coordinate Systems and Transformations<ept id="p1">](../../../../docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example sets the world and page transformations of a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The world transformation is set to a 30-degree rotation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The page transformation is set so that the coordinates passed to the second <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawEllipse%2A&gt;</ph> will be treated as millimeters instead of pixels.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The code makes two identical calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawEllipse%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The world transformation is applied to the first <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawEllipse%2A&gt;</ph> call, and both transformations (world and page) are applied to the second <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawEllipse%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following illustration shows the two ellipses.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Note that the 30-degree rotation is about the origin of the coordinate system (upper-left corner of the client area), not about the centers of the ellipses.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Also note that the pen width of 1 means 1 pixel for the first ellipse and 1 millimeter for the second ellipse.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Ovals<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/advanced/media/csgraphicsascon1.png "</bpt>csgraphicsascon1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Clipping Region</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object maintains a clipping region that applies to all items drawn by that <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can set the clipping region by calling the <ph id="ph1">&lt;xref:System.Drawing.Graphics.SetClip%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following example creates a plus-shaped region by forming the union of two rectangles.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>That region is designated as the clipping region of a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Then the code draws two lines that are restricted to the interior of the clipping region.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following illustration shows the clipped lines.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Limited Clip Region<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/advanced/media/graphicsascon2.png "</bpt>graphicsascon2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Graphics and Drawing in Windows Forms<ept id="p1">](../../../../docs/framework/winforms/advanced/graphics-and-drawing-in-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Nested Graphics Containers<ept id="p1">](../../../../docs/framework/winforms/advanced/using-nested-graphics-containers.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>