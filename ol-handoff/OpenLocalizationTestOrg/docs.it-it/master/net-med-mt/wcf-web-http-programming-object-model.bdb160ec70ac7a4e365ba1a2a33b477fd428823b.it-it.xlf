<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c70fc124e9cbbb01c71328a943734371db4b23b4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\wcf-web-http-programming-object-model.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10df5c0bf2ec7709fa8249a7fcdfdc1e7105c976</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a464efa4ed8d399cfab6057eae5200abd8de136</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WCF Web HTTP Programming Object Model | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WCF Web HTTP Programming Object Model</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The WCF WEB HTTP  Programming Model allows developers to expose <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> Web services through basic HTTP requests without requiring SOAP.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The WCF WEB HTTP  Programming Model is built on top of the existing <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> extensibility model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It defines the following classes:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Programming Model:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Channels and Dispatcher Infrastructure:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Utility Classes and Extensibility Points:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>AspNetCacheProfileAttribute</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.AspNetCacheProfileAttribute&gt;</ph>, when applied to a service operation, indicates the ASP.NET output cache profile in the configuration file that should be used by to cache responses from the operation in the ASP .NET Output Cache.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This property takes only one parameter, the cache profile name that specifies the cache settings in the configuration file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>WebGetAttribute</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> attribute is used to mark a service operation as one that responds to HTTP GET requests.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It is a passive operation behavior (the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> methods do nothing) that adds metadata to the operation description.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Applying the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> has no effect unless a behavior that looks for this metadata in the operation description (specifically, the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>) is added to the service's behavior collection.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> attribute takes the optional parameters shown in the following table.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Controls whether to wrap requests and responses sent to and received from the service operation the attribute is applied to.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Controls how request messages are formatted.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Controls how response messages are formatted.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Specifies the URI template that controls what HTTP requests get mapped to the service operation the attribute is applied to.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>WebHttpBinding</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> class incorporates support for XML, JSON, and raw binary data using the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.WebMessageEncodingBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It is composed of an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.HttpsTransportBindingElement&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.HttpTransportBindingElement&gt;</ph> and a <ph id="ph3">&lt;xref:System.ServiceModel.WebHttpSecurity&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> is designed to be used in conjunction with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>WebInvokeAttribute</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> attribute is similar to the <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph>, but it is used to mark a service operation as one that responds to HTTP requests other than GET.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is a passive operation behavior (the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> methods do nothing) that adds metadata to the operation description.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Applying the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> has no effect unless a behavior that looks for this metadata in the operation description (specifically, the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>) is added to the service's behavior collection.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> attribute takes the optional parameters shown in the following table.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Controls whether to wrap requests and responses sent to and received from the service operation the attribute is applied to.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies the HTTP method the service operation is mapped to.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Controls how request messages are formatted.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Controls how response messages are formatted.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Specifies the URI template that controls what GET requests get mapped to the service operation the attribute is applied to.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>UriTemplate</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> class allows you to define a set of structurally similar URIs.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Templates are composed of two parts, a path and a query.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A path consists of a series of segments delimited by a slash (/).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [<ph id="ph1">\*</ph>], which matches "the rest of the path"), which must appear at the end of the path.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The query expression can be omitted entirely.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If present, it specifies an unordered series of name/value pairs.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={<bpt id="p1">*</bpt>value<ept id="p1">*</ept>}).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Unpaired values are not permitted.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> is used internally by the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> WEB HTTP  Programming Model to map specific URIs or groups of URIs to service operations.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>UriTemplateTable</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> class represents an associative set of <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> objects bound to an object of the developer's choosing.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It lets you match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> is used internally by the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> WEB HTTP  Programming Model to map specific URIs or groups of URIs to service operations.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>WebServiceHost</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> extends the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> to make it easier to host a non-SOAP Web-style service.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When creating a default HTTP endpoint, the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> also ensures that all endpoints that use <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> have the required <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> attached.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Finally, <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>WebServiceHostFactory</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory&gt;</ph> class is used to dynamically create a <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> when a service is hosted under Internet Information Services (IIS) or Windows Process Activation Service (WAS).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Unlike a self-hosted service where the hosting application instantiates the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>, services hosted under IIS or WAS use this class to create the <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> method is called when a incoming request for the service is received.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>WebHttpBehavior</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> class supplies the necessary formatters, operation selectors, and so on, required for Web-style service support at the Service Model layer.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This is implemented as an endpoint behavior (used in conjunction with the <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>) and allows formatters and operation selectors to be specified for each endpoint, which enables the same service implementation to expose both SOAP and POX endpoints.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Extending WebHttpBehavior</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> is extensible by using a number of virtual methods: <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector%28System.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Developers can derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> and override these methods to customize the default behavior.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> is an example of extending <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> enables <ph id="ph2">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> endpoints to receive HTTP requests from a browser-based ASP.NET AJAX client.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>AJAX Service Using HTTP POST<ept id="p1">](../../../../docs/framework/wcf/samples/ajax-service-using-http-post.md)</ept> is an example of using this extensibility point.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph>, <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> are not supported within <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> attributes.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>WebHttpDispatchOperationSelector</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&gt;</ph> class uses <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> and <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> classes to dispatch calls to service operations.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> WEB HTTP Programming Model does not use SOAP-based messages and therefore does not support the WS-* protocols.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can however, expose the same contract by two different endpoint: one using SOAP and the other not using SOAP.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>How to: Expose a Contract to SOAP and Web Clients<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-expose-a-contract-to-soap-and-web-clients.md)</ept> for an example.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Security</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> WEB HTTP  Programming Model does not support the WS-* protocols the only way to secure a Web service built on the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> WEB HTTP  Programming Model is to expose your service using SSL.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> setting up SSL with <ph id="ph2">[!INCLUDE[iisver](../../../../includes/iisver-md.md)]</ph> see <bpt id="p1">[</bpt>How to implement SSL in IIS<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=131613)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&gt;</ph></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Web HTTP Programming Model Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>