<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f2c2e6a987f7a68597e2941db82d8c5751a4274</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\sqlclient-support-for-high-availability-disaster-recovery.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f20f1801886b76d4b8a95e9b620a77a18d298085</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e50135446711c52744e8861516eb15bc9e856b0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>SqlClient Support for High Availability, Disaster Recovery | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>SqlClient Support for High Availability, Disaster Recovery</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses SqlClient support (added in <ph id="ph1">[!INCLUDE[net_v45](../../../../../includes/net-v45-md.md)]</ph>) for high-availability, disaster recovery -- AlwaysOn Availability Groups.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>AlwaysOn Availability Groups feature was added to <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about AlwaysOn Availability Groups, see <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> Books Online.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can now specify the availability group listener of a (high-availability, disaster-recovery) availability group (AG) or <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance in the connection property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If a SqlClient application is connected to an AlwaysOn database that fails over, the original connection is broken and the application must open a new connection to continue work after the failover.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If you are not connecting to an availability group listener or <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance, and if multiple IP addresses are associated with a hostname, SqlClient will iterate sequentially through all IP addresses associated with DNS entry.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This can be time consuming if the first IP address returned by DNS server is not bound to any network interface card (NIC).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When connecting to an availability group listener or <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance, SqlClient attempts to establish connections to all IP addresses in parallel and if a connection attempt succeeds, the driver will discard any pending connection attempts.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Increasing connection timeout and implementing connection retry logic will increase the probability that an application will connect to an availability group.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Also, because a connection can fail because of a failover, you should implement connection retry logic, retrying a failed connection until it reconnects.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following connection properties were added to SqlClient in <ph id="ph1">[!INCLUDE[net_v45](../../../../../includes/net-v45-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can programmatically modify these connection string keywords with:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Connecting With MultiSubnetFailover</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Always specify <ph id="ph1">`MultiSubnetFailover=True`</ph> when connecting to a <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 availability group listener or <ph id="ph3">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MultiSubnetFailover`</ph> enables faster failover for all Availability Groups and or Failover Cluster Instance in <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 and will significantly reduce failover time for single and multi-subnet AlwaysOn topologies.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>During a multi-subnet failover, the client will attempt connections in parallel.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>During a subnet failover, will aggressively retry the TCP connection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MultiSubnetFailover`</ph> connection property indicates that the application is being deployed in an availability group or <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance and that SqlClient will try to connect to the database on the primary <ph id="ph3">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> instance by trying to connect to all the IP addresses.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`MultiSubnetFailover=True`</ph> is specified for a connection, the client retries TCP connection attempts faster than the operating systemâ€™s default TCP retransmit intervals.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This enables faster reconnection after failover of either an AlwaysOn Availability Group or an AlwaysOn Failover Cluster Instance, and is applicable to both single- and multi-subnet Availability Groups and Failover Cluster Instances.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about connection string keywords in SqlClient, see <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifying <ph id="ph1">`MultiSubnetFailover=True`</ph> when connecting to something other than a availability group listener or <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance may result in a negative performance impact, and is not supported.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the following guidelines to connect to a server in an availability group or <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> 2012 Failover Cluster Instance:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`MultiSubnetFailover`</ph> connection property when connecting to a single subnet or multi-subnet; it will improve performance for both.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To connect to an availability group, specify the availability group listener of the availability group as the server in your connection string.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Connecting to a <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> instance configured with more than 64 IP addresses will cause a connection failure.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Behavior of an application that uses the <ph id="ph1">`MultiSubnetFailover`</ph> connection property is not affected based on the type of authentication: <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> Authentication, Kerberos Authentication, or Windows Authentication.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Increase the value of <ph id="ph1">`Connect Timeout`</ph> to accommodate for failover time and reduce application connection retry attempts.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Distributed transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If read-only routing is not in effect, connecting to a secondary replica location will fail in the following situations:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the secondary replica location is not configured to accept connections.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If an application uses <ph id="ph1">`ApplicationIntent=ReadWrite`</ph> (discussed below) and the secondary replica location is configured for read-only access.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> is not supported on read-only secondary replicas.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A connection will fail if a primary replica is configured to reject read-only workloads and the connection string contains <ph id="ph1">`ApplicationIntent=ReadOnly`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Upgrading to Use Multi-Subnet Clusters from Database Mirroring</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A connection error (<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>) will occur if the <ph id="ph2">`MultiSubnetFailover`</ph> and <ph id="ph3">`Failover Partner`</ph> connection keywords are present in the connection string, or if <ph id="ph4">`MultiSubnetFailover=True`</ph> and a protocol other than TCP is used.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An error (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>) will also occur if <ph id="ph2">`MultiSubnetFailover`</ph> is used and the <ph id="ph3">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> returns a failover partner response indicating it is part of a database mirroring pair.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you upgrade a SqlClient application that currently uses database mirroring to a multi-subnet scenario, you should remove the <ph id="ph1">`Failover Partner`</ph> connection property and replace it with <ph id="ph2">`MultiSubnetFailover`</ph> set to <ph id="ph3">`True`</ph> and replace the server name in the connection string with an availability group listener.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If a connection string uses <ph id="ph1">`Failover Partner`</ph> and <ph id="ph2">`MultiSubnetFailover=True`</ph>, the driver will generate an error.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if a connection string uses <ph id="ph1">`Failover Partner`</ph> and <ph id="ph2">`MultiSubnetFailover=False`</ph> (or <ph id="ph3">`ApplicationIntent=ReadWrite`</ph>), the application will use database mirroring.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The driver will return an error if database mirroring is used on the primary database in the AG, and if <ph id="ph1">`MultiSubnetFailover=True`</ph> is used in the connection string that connects to a primary database instead of to an availability group listener.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specifying Application Intent</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`ApplicationIntent=ReadOnly`</ph>, the client requests a read workload when connecting to an AlwaysOn enabled database.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The server will enforce the intent at connection time and during a USE database statement but only to an Always On enabled database.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ApplicationIntent`</ph> keyword does not work with legacy, read-only databases.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A database can allow or disallow read workloads on the targeted AlwaysOn database.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(This is done with the <ph id="ph1">`ALLOW_CONNECTIONS`</ph> clause of the <ph id="ph2">`PRIMARY_ROLE`</ph> and <ph id="ph3">`SECONDARY_ROLE`</ph><ph id="ph4">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> statements.)</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ApplicationIntent`</ph> keyword is used to enable read-only routing.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Read-Only Routing</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Read-only routing is a feature that can ensure the availability of a read only replica of a database.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To enable read-only routing:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You must connect to an Always On Availability Group availability group listener.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ApplicationIntent`</ph> connection string keyword must be set to <ph id="ph2">`ReadOnly`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Availability Group must be configured by the database administrator to enable read-only routing.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It is possible that multiple connections using read-only routing will not all connect to the same read-only replica.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Changes in database synchronization or changes in the server's routing configuration can result in client connections to different read-only replicas.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To ensure that all read-only requests connect to the same read-only replica, do not pass an availability group listener to the <ph id="ph1">`Data Source`</ph> connection string keyword.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Instead, specify the name of the read-only instance.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Read-only routing may take longer than connecting to the primary because read only routing first connects to the primary and then looks for the best available readable secondary.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Because of this, you should increase your login timeout.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SQL Server Features and ADO.NET<ept id="p1">](../../../../../docs/framework/data/adonet/sql/sql-server-features-and-adonet.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>