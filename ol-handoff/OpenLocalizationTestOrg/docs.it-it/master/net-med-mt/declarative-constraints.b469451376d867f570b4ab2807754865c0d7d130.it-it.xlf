<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f22c8d854af4d734b746a5b0a9a0ed5fddcdbf9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\declarative-constraints.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">368fe848f541b1d2ed0037feb80295a8559348d8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc2cf9f360f4f3999c69ccdffc98ffa5e6171abe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Declarative Constraints | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Declarative Constraints</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declarative constraints provide a powerful method of validation for an activity and its relationships with other activities.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Constraints are configured for an activity during the authoring process, but additional constraints can also be specified by the workflow host.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of using declarative constraints to provide activity validation.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using Declarative Constraints</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A constraint is an activity that contains validation logic.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This constraint activity can be authored in code or in XAML.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After a constraint activity is created, activity authors add this constraint to the <ph id="ph1">&lt;xref:System.Activities.Activity.Constraints%2A&gt;</ph> property of the activity to validate, or they use the constraint to provide additional validation by using the <ph id="ph2">&lt;xref:System.Activities.Validation.ValidationSettings.AdditionalConstraints%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Activities.Validation.ValidationSettings&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The validation logic can consist of simple validations such as validating an activityâ€™s metadata, but it can also perform validation that takes into account the relationship of the current activity to its parent, children, and sibling activities.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Constraints are authored by using the <ph id="ph1">&lt;xref:System.Activities.Validation.Constraint%601&gt;</ph> activity, and several additional validation activities are provided to assist with the creation of validation errors and warnings and to provide information about related activities in the workflow.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>AssertValidation and AddValidationError</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Validation.AssertValidation&gt;</ph> activity evaluates the expression referenced by its <ph id="ph2">&lt;xref:System.Activities.Validation.AssertValidation.Assertion%2A&gt;</ph> property, and if the expression evaluates to <ph id="ph3">`false`</ph>, a validation error or warning is added to the <ph id="ph4">&lt;xref:System.Activities.Validation.ValidationResults&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Validation.AssertValidation.Message%2A&gt;</ph> property describes the validation error and the <ph id="ph2">&lt;xref:System.Activities.Validation.AssertValidation.IsWarning%2A&gt;</ph> property indicates whether the validation failure is an error or a warning.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default value for <ph id="ph1">&lt;xref:System.Activities.Validation.AssertValidation.IsWarning%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the following example, a constraint is declared that returns a validation warning if the <ph id="ph1">&lt;xref:System.Activities.Activity.DisplayName%2A&gt;</ph> of the activity being validated is two characters or less in length.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The generic type parameter used for <ph id="ph1">&lt;xref:System.Activities.Validation.Constraint%601&gt;</ph> specifies the type of activity that is validated by the constraint.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This constraint uses <ph id="ph1">&lt;xref:System.Activities.Activity&gt;</ph> as the generic type and can be used to validate all types of activities.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To specify this constraint for an activity, it is added to the <ph id="ph1">&lt;xref:System.Activities.Activity.Constraints%2A&gt;</ph> of the activity, as shown in the following example code.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The host could also specify this constraint for activities in a workflow by using <ph id="ph1">&lt;xref:System.Activities.Validation.ValidationSettings.AdditionalConstraints%2A&gt;</ph>, which is covered in the next section.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Validation.AddValidationError&gt;</ph> activity is used to generate a validation error or warning without requiring the evaluation of an expression.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Its properties are similar to <ph id="ph1">&lt;xref:System.Activities.Validation.AssertValidation&gt;</ph> and it can be used in conjunction with flow control activities of a constraint such as the <ph id="ph2">&lt;xref:System.Activities.Statements.If&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Workflow Relationship Activities</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Several validation activities are available that provide information about the other activities in the workflow in relation to the activity being validated.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.Validation.GetParentChain&gt;</ph> returns a collection of activities that contains all of the activities between the current activity and the root activity.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.Validation.GetChildSubtree&gt;</ph> provides a collection of activities that contains the child activities in a recursive pattern, and <ph id="ph2">&lt;xref:System.Activities.Validation.GetWorkflowTree&gt;</ph> gets all the activities in the workflow.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the following example from the <bpt id="p1">[</bpt>Activity Relationships Validation<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/activity-relationships-validation.md)</ept> sample, a <ph id="ph1">`CreateState`</ph> activity is defined.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CreateState`</ph> activity must be contained within a <ph id="ph2">`CreateCountry`</ph> activity, and the <ph id="ph3">`GetParent`</ph> method returns a constraint that enforces this requirement.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetParent`</ph> uses the <ph id="ph2">&lt;xref:System.Activities.Validation.GetParentChain&gt;</ph> activity in conjunction with a <ph id="ph3">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> activity to inspect the parent activities of the <ph id="ph4">`CreateState`</ph> activity to determine if the requirement is met.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph> the Windows Workflow Foundation <bpt id="p1">[</bpt>Validation<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/validation.md)</ept> samples.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Additional Constraints</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Workflow host authors can specify additional validation constraints for activities in a workflow by creating constraints and adding them to the <ph id="ph1">&lt;xref:System.Activities.Validation.ValidationSettings.AdditionalConstraints%2A&gt;</ph> dictionary of a <ph id="ph2">&lt;xref:System.Activities.Validation.ValidationSettings&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Each item in <ph id="ph1">&lt;xref:System.Activities.Validation.ValidationSettings.AdditionalConstraints%2A&gt;</ph> contains the type of activity for which the constraints apply and a list of the additional constraints for that type of activity.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When validation is invoked for the workflow, each activity of the specified type, including derived classes, evaluates the constraints.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`ActivityDisplayNameIsNotSetWarning`</ph> constraint from the previous section is applied to all activities in a workflow.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.Validation.ValidationSettings.OnlyUseAdditionalConstraints%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Activities.Validation.ValidationSettings&gt;</ph> is <ph id="ph3">`true`</ph>, then only the specified additional constraints are evaluated when validation is invoked by calling <ph id="ph4">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This can be useful for inspecting workflows for specific validation configurations.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Note however that when the workflow is invoked, the validation logic configured in the workflow is evaluated and must pass for the workflow to successfully begin.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> invoking validation, see <bpt id="p1">[</bpt>Invoking Activity Validation<ept id="p1">](../../../docs/framework/windows-workflow-foundation/invoking-activity-validation.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>