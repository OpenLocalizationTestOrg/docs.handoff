<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1bca0f049c083484cc56ba29057132f0f3c87ee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\custom-timespan-format-strings.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64ff9dd064cc7313bd475d9b0eb5853fe3b08359</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f48dfee7b923e2d659552c8cf13a549a31692df6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom TimeSpan Format Strings | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Custom TimeSpan Format Strings</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> format string defines the string representation of a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value that results from a formatting operation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A custom format string consists of one or more custom <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> format specifiers along with any number of literal characters.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Any string that is not a <bpt id="p1">[</bpt>standard TimeSpan format string<ept id="p1">](../../../docs/standard/base-types/standard-timespan-format-strings.md)</ept> is interpreted as a custom <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> format string.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The custom <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> format specifiers do not include placeholder separator symbols, such as the symbols that separate days from hours, hours from minutes, or seconds from fractional seconds.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Instead, these symbols must be included in the custom format string as string literals.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`"dd\.hh\:mm"`</ph> defines a period (.) as the separator between days and hours, and a colon (:) as the separator between hours and minutes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Custom<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> format specifiers also do not include a sign symbol that enables you to differentiate between negative and positive time intervals.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To include a sign symbol, you have to construct a format string by using conditional logic.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Other Characters<ept id="p1">](#Other)</ept> section includes an example.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The string representations of <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> values are produced by calls to the overloads of the <ph id="ph2">&lt;xref:System.TimeSpan.ToString%2A?displayProperty=fullName&gt;</ph> method, and by methods that support composite formatting, such as <ph id="ph3">&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](../../../docs/standard/base-types/formatting-types.md)</ept> and <bpt id="p2">[</bpt>Composite Formatting<ept id="p2">](../../../docs/standard/base-types/composite-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of custom format strings in formatting operations.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customformatexample1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customformatexample1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Custom <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> format strings are also used by the <ph id="ph2">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> methods to define the required format of input strings for parsing operations.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(Parsing converts the string representation of a value to that value.) The following example illustrates the use of standard format strings in parsing operations.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#2<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customparseexample1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#2<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customparseexample1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="table"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> The following table describes the custom date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>"d", "%d"</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The number of whole days in the time interval.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "d" Custom Format Specifier<ept id="p1">](#dSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`%d`</ph> --&gt; "6"</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`d\.hh\:mm`</ph> --&gt; "6.14:32"</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>"dd"-"dddddddd"</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The number of whole days in the time interval, padded with leading zeros as needed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "dd"-"dddddddd" Custom Format Specifiers<ept id="p1">](#ddSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ddd`</ph> --&gt; "006"</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dd\.hh\:mm`</ph> --&gt; "06.14:32"</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>"h", "%h"</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The number of whole hours in the time interval that are not counted as part of days.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Single-digit hours do not have a leading zero.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "h" Custom Format Specifier<ept id="p1">](#hSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`%h`</ph> --&gt; "14"</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hh\:mm`</ph> --&gt; "14:32"</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>"hh"</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The number of whole hours in the time interval that are not counted as part of days.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Single-digit hours have a leading zero.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "hh" Custom Format Specifier<ept id="p1">](#hhSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hh`</ph> --&gt; "14"</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hh`</ph> --&gt; 08</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"m", "%m"</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The number of whole minutes in the time interval that are not included as part of hours or days.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Single-digit minutes do not have a leading zero.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "m" Custom Format Specifier<ept id="p1">](#mSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`%m`</ph> --&gt; "8"</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`h\:m`</ph> --&gt; "14:8"</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>"mm"</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The number of whole minutes in the time interval that are not included as part of hours or days.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Single-digit minutes have a leading zero.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "mm" Custom Format Specifier<ept id="p1">](#mmSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`mm`</ph> --&gt; "08"</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`d\.hh\:mm\:ss`</ph> --&gt; 6.08:05:17</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>"s", "%s"</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The number of whole seconds in the time interval that are not included as part of hours, days, or minutes.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Single-digit seconds do not have a leading zero.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "s" Custom Format Specifier<ept id="p1">](#sSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.FromSeconds(12.965)`</ph>:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`%s`</ph> --&gt; 12</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`s\.fff`</ph> --&gt; 12.965</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>"ss"</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The number of whole seconds in the time interval that are not included as part of hours, days, or minutes.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Single-digit seconds have a leading zero.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "ss" Custom Format Specifier<ept id="p1">](#ssSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.FromSeconds(6.965)`</ph>:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss`</ph> --&gt; 06</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.fff`</ph> --&gt; 06.965</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>"f", "%f"</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The tenths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "f" Custom Format Specifier<ept id="p1">](#fSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.FromSeconds(6.895)`</ph>:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`f`</ph> --&gt; 8</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.f`</ph> --&gt; 06.8</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>"ff"</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The hundredths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>More information:<bpt id="p1">[</bpt>The "ff" Custom Format Specifier<ept id="p1">](#ffSpecifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.FromSeconds(6.895)`</ph>:</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ff`</ph> --&gt; 89</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.ff`</ph> --&gt; 06.89</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>"fff"</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The milliseconds in a time interval.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "fff" Custom Format Specifier<ept id="p1">](#f3Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.FromSeconds(6.895)`</ph>:</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`fff`</ph> --&gt; 895</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.fff`</ph> --&gt; 06.895</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>"ffff"</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The ten-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "ffff" Custom Format Specifier<ept id="p1">](#f4Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:6.8954321")`</ph>:</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ffff`</ph> --&gt; 8954</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.ffff`</ph> --&gt; 06.8954</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>"fffff"</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The hundred-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "fffff" Custom Format Specifier<ept id="p1">](#f5Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:6.8954321")`</ph>:</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`fffff`</ph> --&gt; 89543</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.fffff`</ph> --&gt; 06.89543</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>"ffffff"</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The millionths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "ffffff" Custom Format Specifier<ept id="p1">](#f6Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:6.8954321")`</ph>:</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ffffff`</ph> --&gt; 895432</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.ffffff`</ph> --&gt; 06.895432</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>"fffffff"</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The ten-millionths of a second (or the fractional ticks) in a time interval.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "fffffff" Custom Format Specifier<ept id="p1">](#f7Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:6.8954321")`</ph>:</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`fffffff`</ph> --&gt; 8954321</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.fffffff`</ph> --&gt; 06.8954321</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>"F", "%F"</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The tenths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Nothing is displayed if the digit is zero.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "F" Custom Format Specifier<ept id="p1">](#F_Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.32")`</ph>:</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`%F`</ph>: 3</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.091")`</ph>:</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.F`</ph>: 03.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>"FF"</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The hundredths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Any fractional trailing zeros or two zero digits are not included.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "FF" Custom Format Specifier<ept id="p1">](#FF_Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.329")`</ph>:</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FF`</ph>: 32</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.101")`</ph>:</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.FF`</ph>: 03.1</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>"FFF"</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The milliseconds in a time interval.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Any fractional trailing zeros are not included.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>More information:</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.3291")`</ph>:</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FFF`</ph>: 329</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.1009")`</ph>:</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.FFF`</ph>: 03.1</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>"FFFF"</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The ten-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Any fractional trailing zeros are not included.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "FFFF" Custom Format Specifier<ept id="p1">](#F4_Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.32917")`</ph>:</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FFFFF`</ph>: 3291</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.10009")`</ph>:</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.FFFF`</ph>: 03.1</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>"FFFFF"</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The hundred-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Any fractional trailing zeros are not included.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "FFFFF" Custom Format Specifier<ept id="p1">](#F5_Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.329179")`</ph>:</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FFFFF`</ph>: 32917</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.100009")`</ph>:</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.FFFFF`</ph>: 03.1</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>"FFFFFF"</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The millionths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Any fractional trailing zeros are not displayed.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "FFFFFF" Custom Format Specifier<ept id="p1">](#F6_Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.3291791")`</ph>:</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FFFFFF`</ph>: 329179</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.1000009")`</ph>:</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.FFFFFF`</ph>: 03.1</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>"FFFFFFF"</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The ten-millions of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Any fractional trailing zeros or seven zeros are not displayed.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>The "FFFFFFF" Custom Format Specifier<ept id="p1">](#F7_Specifier)</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("00:00:06.3291791")`</ph>:</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FFFFFF`</ph>: 3291791</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TimeSpan.Parse("0:0:3.1900000")`</ph>:</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ss\.FFFFFF`</ph>: 03.19</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>'string<ept id="p1">*</ept>'</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Literal string delimiter.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>More information: <bpt id="p1">[</bpt>Other Characters<ept id="p1">](#Other)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hh':'mm':'ss`</ph> --&gt; "14:32:17"</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The escape character.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>More information:<bpt id="p1">[</bpt>Other Characters<ept id="p1">](#Other)</ept>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hh\:mm\:ss`</ph> --&gt; "14:32:17"</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Any other character</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Any other unescaped character is interpreted as a custom format specifier.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>More Information: <bpt id="p1">[</bpt>Other Characters<ept id="p1">](#Other)</ept>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`hh\:mm\:ss`</ph> --&gt; "14:32:17"</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The "d" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The "d" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Days%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole days in the time interval.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>It outputs the full number of days in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value, even if the value has more than one digit.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Days%2A?displayProperty=fullName&gt;</ph> property is zero, the specifier outputs "0".</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>If the "d" custom format specifier is used alone, specify "%d" so that it is not misinterpreted as a standard format string.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#3<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "d" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#4<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The "dd"-"dddddddd" Custom Format Specifiers</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The "dd", "ddd", "dddd", "ddddd", "dddddd", "ddddddd", and "dddddddd" custom format specifiers output the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Days%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole days in the time interval.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The output string includes a minimum number of digits specified by the number of "d" characters in the format specifier, and it is padded with leading zeros as needed.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If the digits in the number of days exceed the number of "d" characters in the format specifier, the full number of days is output in the result string.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The following example uses these format specifiers to display the string representation of two <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The value of the days component of the first time interval is zero; the value of the days component of the second is 365.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#5<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#5<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The "h" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The "h" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Hours%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole hours in the time interval that is not counted as part of its day component.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>It returns a one-digit string value if the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Hours%2A?displayProperty=fullName&gt;</ph> property is 0 through 9, and it returns a two-digit string value if the value of the <ph id="ph2">&lt;xref:System.TimeSpan.Hours%2A?displayProperty=fullName&gt;</ph> property ranges from 10 to 23.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If the "h" custom format specifier is used alone, specify "%h" so that it is not misinterpreted as a standard format string.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#6<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Ordinarily, in a parsing operation, an input string that includes only a single number is interpreted as the number of days.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>You can use the "%h" custom format specifier instead to interpret the numeric string as the number of hours.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#8<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#8)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#8<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "h" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#7<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#7)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#7<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The "hh" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The "hh" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Hours%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole hours in the time interval that is not counted as part of its day component.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>For values from 0 through 9, the output string includes a leading zero.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Ordinarily, in a parsing operation, an input string that includes only a single number is interpreted as the number of days.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>You can use the "hh" custom format specifier instead to interpret the numeric string as the number of hours.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#9<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#9)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#9<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#9)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "hh" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#10<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#10)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#10<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The "m" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The "m" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Minutes%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole minutes in the time interval that is not counted as part of its day component.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>It returns a one-digit string value if the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Minutes%2A?displayProperty=fullName&gt;</ph> property is 0 through 9, and it returns a two-digit string value if the value of the <ph id="ph2">&lt;xref:System.TimeSpan.Minutes%2A?displayProperty=fullName&gt;</ph> property ranges from 10 to 59.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>If the "m" custom format specifier is used alone, specify "%m" so that it is not misinterpreted as a standard format string.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#6<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Ordinarily, in a parsing operation, an input string that includes only a single number is interpreted as the number of days.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You can use the "%m" custom format specifier instead to interpret the numeric string as the number of minutes.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#11<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#11<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "m" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#12<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#12)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#12<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#12)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The "mm" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The "mm" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Minutes%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole minutes in the time interval that is not included as part of its hours or days component.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For values from 0 through 9, the output string includes a leading zero.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Ordinarily, in a parsing operation, an input string that includes only a single number is interpreted as the number of days.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>You can use the "mm" custom format specifier instead to interpret the numeric string as the number of minutes.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#13<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#13)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#13<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#13)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "mm" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#14<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#14)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#14<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#14)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The "s" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The "s" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Seconds%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole seconds in the time interval that is not included as part of its hours, days, or minutes component.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>It returns a one-digit string value if the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Seconds%2A?displayProperty=fullName&gt;</ph> property is 0 through 9, and it returns a two-digit string value if the value of the <ph id="ph2">&lt;xref:System.TimeSpan.Seconds%2A?displayProperty=fullName&gt;</ph> property ranges from 10 to 59.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the "s" custom format specifier is used alone, specify "%s" so that it is not misinterpreted as a standard format string.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#15<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#15)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#15<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#15)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Ordinarily, in a parsing operation, an input string that includes only a single number is interpreted as the number of days.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>You can use the "%s" custom format specifier instead to interpret the numeric string as the number of seconds.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#17<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#17)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#17<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#17)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "s" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#16<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#16)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#16<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#16)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The "ss" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The "ss" custom format specifier outputs the value of the <ph id="ph1">&lt;xref:System.TimeSpan.Seconds%2A?displayProperty=fullName&gt;</ph> property, which represents the number of whole seconds in the time interval that is not included as part of its hours, days, or minutes component.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For values from 0 through 9, the output string includes a leading zero.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Ordinarily, in a parsing operation, an input string that includes only a single number is interpreted as the number of days.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>You can use the "ss" custom format specifier instead to interpret the numeric string as the number of seconds.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#18<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#18)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#18<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#18)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the "ss" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#19<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/customexamples1.cs#19)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#19<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/customexamples1.vb#19)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The"f" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The "f" custom format specifier outputs the tenths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly one fractional digit.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If the "f" custom format specifier is used alone, specify "%f" so that it is not misinterpreted as a standard format string.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The following example uses the "f" custom format specifier to display the tenths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>"f" is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The "ff" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The "ff" custom format specifier outputs the hundredths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly two fractional digits.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The following example uses the "ff" custom format specifier to display the hundredths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>"ff" is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The "fff" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The "fff" custom format specifier (with three "f" characters) outputs the milliseconds in a time interval.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly three fractional digits.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The following example uses the "fff" custom format specifier to display the milliseconds in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>"fff" is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The "ffff" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The "ffff" custom format specifier (with four "f" characters) outputs the ten-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly four fractional digits.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The following example uses the "ffff" custom format specifier to display the ten-thousandths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>"ffff" is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The "fffff" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The "fffff" custom format specifier (with five "f" characters) outputs the hundred-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly five fractional digits.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The following example uses the "fffff" custom format specifier to display the hundred-thousandths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>"fffff" is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The "ffffff" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The "ffffff" custom format specifier (with six "f" characters) outputs the millionths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly six fractional digits.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The following example uses the "ffffff" custom format specifier to display the millionths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>It is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The "fffffff" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The "fffffff" custom format specifier (with seven "f" characters) outputs the ten-millionths of a second (or the fractional number of ticks) in a time interval.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the input string must contain exactly seven fractional digits.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The following example uses the "fffffff" custom format specifier to display the fractional number of ticks in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>It is used first as the only format specifier, and then combined with the "s" specifier in a custom format string.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/fspecifiers1.cs#20)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#20<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/fspecifiers1.vb#20)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The "F" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The "F" custom format specifier outputs the tenths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>If the value of the time interval's tenths of a second is zero, it is not included in the result string.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the tenths of a second digit is optional.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>If the "F" custom format specifier is used alone, specify "%F" so that it is not misinterpreted as a standard format string.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The following example uses the "F" custom format specifier to display the tenths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>It also uses this custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#21<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#21)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#21<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#21)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The "FF" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The "FF" custom format specifier outputs the hundredths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>If there are any trailing fractional zeros, they are not included in the result string.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the tenths and hundredths of a second digit is optional.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The following example uses the "FF" custom format specifier to display the hundredths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>It also uses this custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#22<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#22)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#22<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#22)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The "FFF" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The "FFF" custom format specifier (with three "F" characters) outputs the milliseconds in a time interval.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>If there are any trailing fractional zeros, they are not included in the result string.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the tenths, hundredths, and thousandths of a second digit is optional.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The following example uses the "FFF" custom format specifier to display the thousandths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>It also uses this custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#23<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#23)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#23<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#23)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The "FFFF" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The "FFFF" custom format specifier (with four "F" characters) outputs the ten-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>If there are any trailing fractional zeros, they are not included in the result string.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the tenths, hundredths, thousandths, and ten-thousandths of a second digit is optional.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The following example uses the "FFFF" custom format specifier to display the ten-thousandths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>It also uses the "FFFF" custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#24<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#24)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#24<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#24)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The "FFFFF" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The "FFFFF" custom format specifier (with five "F" characters) outputs the hundred-thousandths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>If there are any trailing fractional zeros, they are not included in the result string.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the tenths, hundredths, thousandths, ten-thousandths, and hundred-thousandths of a second digit is optional.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The following example uses the "FFFFF" custom format specifier to display the hundred-thousandths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>It also uses the "FFFFF" custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#25<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#25)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#25<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#25)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The "FFFFFF" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The "FFFFFF" custom format specifier (with six "F" characters) outputs the millionths of a second in a time interval.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>In a formatting operation, any remaining fractional digits are truncated.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>If there are any trailing fractional zeros, they are not included in the result string.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the tenths, hundredths, thousandths, ten-thousandths, hundred-thousandths, and millionths of a second digit is optional.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The following example uses the "FFFFFF" custom format specifier to display the millionths of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>It also uses this custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#26<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#26)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#26<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#26)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The "FFFFFFF" Custom Format Specifier</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The "FFFFFFF" custom format specifier (with seven "F" characters) outputs the ten-millionths of a second (or the fractional number of ticks) in a time interval.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>If there are any trailing fractional zeros, they are not included in the result string.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>In a parsing operation that calls the <ph id="ph1">&lt;xref:System.TimeSpan.ParseExact%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.TryParseExact%2A?displayProperty=fullName&gt;</ph> method, the presence of the seven fractional digits in the input string is optional.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The following example uses the "FFFFFFF" custom format specifier to display the fractional parts of a second in a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>It also uses this custom format specifier in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#27<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/f_specifiers1.cs#27)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#27<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/f_specifiers1.vb#27)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Other Characters</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Any other unescaped character in a format string, including a white-space character, is interpreted as a custom format specifier.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>In most cases, the presence of any other unescaped character results in a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>There are two ways to include a literal character in a format string:</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Enclose it in single quotation marks (the literal string delimiter).</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Precede it with a backslash ("<ph id="ph1">\\</ph>"), which is interpreted as an escape character.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>This means that, in C#, the format string must either be <ph id="ph1">@-quoted</ph>, or the literal character must be preceded by an additional backslash.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>In some cases, you may have to use conditional logic to include an escaped literal in a format string.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The following example uses conditional logic to include a sign symbol for negative time intervals.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#29<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/negativevalues1.cs#29)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#29<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/negativevalues1.vb#29)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>.NET does not define a grammar for separators in time intervals.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This means that the separators between days and hours, hours and minutes, minutes and seconds, and seconds and fractions of a second must all be treated as character literals in a format string.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The following example uses both the escape character and the single quote to define a custom format string that includes the word "minutes" in the output string.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.TimeSpan.Custom#28<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.timespan.custom/cs/literal1.cs#28)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Conceptual.TimeSpan.Custom#28<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.timespan.custom/vb/literal1.vb#28)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to table<ept id="p1">](#table)</ept></source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting Types<ept id="p1">](../../../docs/standard/base-types/formatting-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Standard TimeSpan Format Strings<ept id="p1">](../../../docs/standard/base-types/standard-timespan-format-strings.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>