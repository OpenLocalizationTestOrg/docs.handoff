<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="compute-the-sum-of-values-in-a-numeric-sequence.md" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bac7878f52b4cd1f39c3884bb0ea68bb435c365</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\compute-the-sum-of-values-in-a-numeric-sequence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af6c3f66a1c7346a55f8ef6185ea80bb3b6c9dab</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd518de3f112c6ff5930b609ea072560e11bce9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Compute the Sum of Values in a Numeric Sequence | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compute the Sum of Values in a Numeric Sequence</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Sum%2A&gt;</ph> operator to compute the sum of numeric values in a sequence.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Note the following characteristics of the <ph id="ph1">`Sum`</ph> operator in <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Standard Query Operator aggregate operator <ph id="ph1">`Sum`</ph> evaluates to zero for an empty sequence or a sequence that contains only nulls.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, the semantics of SQL are left unchanged.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For this reason, <ph id="ph1">`Sum`</ph> evaluates to null instead of to zero for an empty sequence or for a sequence that contains only nulls.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SQL limitations on intermediate results apply to aggregates in <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Sum of 32-bit integer quantities is not computed by using 64-bit results, and overflow can occur for the <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> translation of <ph id="ph2">`Sum`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This possibility exists even if the Standard Query Operator implementation does not cause an overflow for the corresponding in-memory sequence.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example finds the total freight of all orders in the <ph id="ph1">`Order`</ph> table.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you run this query against the Northwind sample database, the output is: <ph id="ph1">`64942.6900`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example finds the total number of units on order for all products.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you run this query against the Northwind sample database, the output is: <ph id="ph1">`780`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note that you must cast <ph id="ph1">`short`</ph> types (for example, <ph id="ph2">`UnitsOnOrder`</ph>) because <ph id="ph3">`Sum`</ph> has no overload for short types.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Aggregate Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/aggregate-queries.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Downloading Sample Databases<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/downloading-sample-databases.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>