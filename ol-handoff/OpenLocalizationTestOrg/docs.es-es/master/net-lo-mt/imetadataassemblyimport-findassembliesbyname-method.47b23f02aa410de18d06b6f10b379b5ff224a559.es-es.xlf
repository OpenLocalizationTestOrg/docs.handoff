<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="imetadataassemblyimport-findassembliesbyname-method.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5ae97a8" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfdfd33958c6bda433868d03bcd6687fdd7e7590</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\metadata\imetadataassemblyimport-findassembliesbyname-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95a8929af0e7ac7ae0b1287c2d5147c81d7dfb20</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e70deaabc39125028462139d977bb621015fb0ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>IMetaDataAssemblyImport::FindAssembliesByName Method | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IMetaDataAssemblyImport::FindAssembliesByName Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets an array of assemblies with the specified <ph id="ph1">`szAssemblyName`</ph> parameter, using the standard rules employed by the common language runtime (CLR) for resolving references.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] The root directory in which to search for the given assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If this value is set to <ph id="ph1">`null`</ph>, <ph id="ph2">`FindAssembliesByName`</ph> will look only in the global assembly cache for the assembly.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>[in] A list of semicolon-delimited subdirectories (for example, "bin;bin2"), under the root directory, in which to search for the assembly.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These directories are probed in addition to those specified in the default probing rules.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[in] The name of the assembly to find.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The format of this string is defined in the class reference page for <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>[in] An array of type &lt;</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IUnknown`</ph>&gt; in which to put the <ph id="ph2">`IMetadataAssemblyImport`</ph> interface pointers.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[out] The maximum number of interface pointers that can be placed in <ph id="ph1">`ppIUnk`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>[out] The number of interface pointers returned.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>That is, the number of interface pointers actually placed in <ph id="ph1">`ppIUnk`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>HRESULT</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FindAssembliesByName`</ph> returned successfully.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>There are no assemblies.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Given an assembly name, the <ph id="ph1">`FindAssembliesByName`</ph> method finds the assembly by following the standard rules for resolving assembly references.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](../../../../docs/framework/deployment/how-the-runtime-locates-assemblies.md)</ept>.) <ph id="ph1">`FindAssembliesByName`</ph> allows the caller to configure various aspects of the assembly resolver context, such as application base and private search path.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FindAssembliesByName`</ph> method requires the CLR to be initialized in the process in order to invoke the assembly resolution logic.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Therefore, you must call <bpt id="p1">[</bpt>CoInitializeEE<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/coinitializeee-function.md)</ept> (passing COINITEE_DEFAULT) before calling <ph id="ph1">`FindAssembliesByName`</ph>, and then follow with a call to <bpt id="p2">[</bpt>CoUninitializeCor<ept id="p2">](../../../../docs/framework/unmanaged-api/hosting/couninitializecor-function.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FindAssembliesByName`</ph> returns an <bpt id="p1">[</bpt>IMetaDataImport<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept> pointer to the file containing the assembly manifest for the assembly name that is passed in.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the given assembly name is not fully specified (for example, if it does not include a version), multiple assemblies might be returned.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FindAssembliesByName`</ph> is commonly used by a compiler that attempts to find a referenced assembly at compile time.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> Cor.h</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> Used as a resource in MsCorEE.dll</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](../../../../docs/framework/deployment/how-the-runtime-locates-assemblies.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IMetaDataAssemblyImport Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>