<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0e0a21c9ac45f6c22d8aa35395e2bd26d874451</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\programming-wcf-security.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6549d38426781b52d68940ebf6ff8a26f3b4e219</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57af13831739d8e1353c656c786bc53f34eb3331</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Programming WCF Security | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Programming WCF Security</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes the fundamental programming tasks used to create a secure <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic covers only authentication, confidentiality, and integrity, collectively known as <bpt id="p1">*</bpt>transfer security<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic does not cover authorization (the control of access to resources or services); for information on authorization, see <bpt id="p1">[</bpt>Authorization<ept id="p1">](../../../../docs/framework/wcf/feature-details/authorization-in-wcf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For a valuable introduction to security concepts, especially in regard to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see the set of patterns and practices tutorials on MSDN at <bpt id="p1">[</bpt>Scenarios, Patterns, and Implementation Guidance for Web Services Enhancements (WSE) 3.0<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=88250)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Programming <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security is based on three steps setting the following: the security mode, a client credential type, and the credential values.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can perform these steps either through code or configuration.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Setting the Security Mode</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following explains the general steps for programming with the security mode in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Select one of the predefined bindings appropriate to your application requirements.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For a list of the binding choices, see <bpt id="p1">[</bpt>System-Provided Bindings<ept id="p1">](../../../../docs/framework/wcf/system-provided-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, nearly every binding has security enabled.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The one exception is the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> class (using configuration, the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>basicHttpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/basichttpbinding.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The binding you select determines the transport.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> uses HTTP as the transport; <ph id="ph2">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> uses TCP.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Select one of the security modes for the binding.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that the binding you select determines the available mode choices.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> does not allow transport security (it is not an option).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Similarly, neither the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding&gt;</ph> nor the <ph id="ph2">&lt;xref:System.ServiceModel.NetNamedPipeBinding&gt;</ph> allows message security.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You have three choices:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Transport security depends on the mechanism that the binding you have selected uses.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, if you are using <ph id="ph1">`WSHttpBinding`</ph> then the security mechanism is Secure Sockets Layer (SSL) (also the mechanism for the HTTPS protocol).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Generally speaking, the main advantage of transport security is that it delivers good throughput no matter which transport you are using.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, it does have two limitations: The first is that the transport mechanism dictates the credential type used to authenticate a user.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is a drawback only if a service needs to interoperate with other services that demand different types of credentials.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second is that, because the security is not applied at the message level, security is implemented in a hop-by-hop manner rather than end-to-end.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This latter limitation is an issue only if the message path between client and service includes intermediaries.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> which transport to use, see <bpt id="p1">[</bpt>Choosing a Transport<ept id="p1">](../../../../docs/framework/wcf/feature-details/choosing-a-transport.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> using transport security, see <bpt id="p1">[</bpt>Transport Security Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/transport-security-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Message security means that every message includes the necessary headers and data to keep the message secure.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because the composition of the headers varies, you can include any number of credentials.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This becomes a factor if you are interoperating with other services that demand a specific credential type that a transport mechanism can't supply, or if the message must be used with more than one service, where each service demands a different credential type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Message Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/message-security-in-wcf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This choice uses the transport layer to secure the message transfer, while every message includes the rich credentials other services need.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This combines the performance advantage of transport security with the rich credentials advantage of message security.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is available with the following bindings: <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.WSFederationHttpBinding&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.NetPeerTcpBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you decide to use transport security for HTTP (in other words, HTTPS), you must also configure the host with an SSL certificate and enable SSL on a port.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>HTTP Transport Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/http-transport-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you are using the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> and do not need to establish a secure session, set the <ph id="ph2">&lt;xref:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A secure session occurs when a client and service create a channel using a symmetric key (both client and server use the same key for the length of a conversation, until the dialog is closed).</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Setting the Client Credential Type</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select a client credential type as appropriate.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Selecting a Credential Type<ept id="p1">](../../../../docs/framework/wcf/feature-details/selecting-a-credential-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following client credential types are available:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Depending on how you set the mode, you must set the credential type.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if you have selected the <ph id="ph1">`wsHttpBinding`</ph>, and have set the mode to "Message," then you can also set the <ph id="ph2">`clientCredentialType`</ph> attribute of the Message element to one of the following values: <ph id="ph3">`None`</ph>, <ph id="ph4">`Windows`</ph>, <ph id="ph5">`UserName`</ph>, <ph id="ph6">`Certificate`</ph>, and <ph id="ph7">`IssuedToken`</ph>, as shown in the following configuration example.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Or in code:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_WsHttpService#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_wshttpservice/cs/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_WsHttpService#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_wshttpservice/vb/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Setting Service Credential Values</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Once you select a client credential type, you must set the actual credentials for the service and client to use.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>On the service, credentials are set using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceCredentials&gt;</ph> class and returned by the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The binding in use implies the service credential type, the security mode chosen, and the type of the client credential.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following code sets a certificate for a service credential.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_tcpService#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpservice/cs/source.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_tcpService#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpservice/vb/source.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Setting Client Credential Values</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>On the client, set client credential values using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> class and returned by the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code sets a certificate as a credential on a client using the TCP protocol.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_TcpClient#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_TcpClient#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpclient/vb/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic WCF Programming<ept id="p1">](../../../../docs/framework/wcf/basic-wcf-programming.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Common Security Scenarios<ept id="p1">](../../../../docs/framework/wcf/feature-details/common-security-scenarios.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>