<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-convert-between-dotnet-streams-and-winrt-streams.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-d192b3d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4c862ac897954e03ad9585036fc159421800b3f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-convert-between-dotnet-streams-and-winrt-streams.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be847ece9d547d99418a073023a34ac69323fed0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0012a742177cdb9b660b9a21ff713b21c7a5a18f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Convert Between .NET Framework Streams and Windows Runtime Streams | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Convert Between .NET Framework Streams and Windows Runtime Streams</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework for Windows Store apps is a subset of the full .NET Framework.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because of security and other requirements for Windows Store apps, you cannot use the full set of .NET Framework APIs to open and read files.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET for Windows Store apps overview<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/br230302.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, you may want to use .NET Framework APIs for other stream manipulation operations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To manipulate these streams, you may find it necessary to convert between a .NET Framework stream type such as <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>, and a Windows Runtime stream such as <bpt id="p1">[</bpt>IInputStream<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.iinputstream.aspx)</ept>, <bpt id="p2">[</bpt>IOutputStream<ept id="p2">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.ioutputstream.aspx)</ept>, or <bpt id="p3">[</bpt>IRandomAccessStream<ept id="p3">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions&gt;--&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions`</ph> class contains methods that make these conversions easy.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, there are underlying differences between streams in the .NET Framework and the Windows Runtime that will affect the results of using these methods.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The details are described in the following sections.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Converting from a Windows Runtime stream to a .NET Framework stream</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can convert from a Windows Runtime stream to a .NET Framework stream by using one of the following <ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions&gt;--&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions`</ph> methods:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsStream`</ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Converts a random-access stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps subset.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite`</ph> Converts an output stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps subset.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead`</ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Converts an input stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps subset.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Windows Runtime offers stream types that support reading only, writing only or reading and writing, and these capabilities are maintained when you convert a Windows Runtime stream to a .NET Framework stream.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Furthermore, if you convert a Windows Runtime stream to a .NET Framework stream and back, you get the original Windows Runtime instance back.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Itâ€™s best practice to use the conversion method that matches the capabilities of the Windows Runtime stream you would like to convert.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, since <bpt id="p1">[</bpt>IRandomAccessStream<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx)</ept> is readable and writeable (it implements both <bpt id="p2">[</bpt>IOutputStream<ept id="p2">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.ioutputstream.aspx)</ept> and <bpt id="p3">[</bpt>IInputStream<ept id="p3">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.iinputstream.aspx)</ept>), you can use any of the conversion methods and the capabilities of the original stream are maintained.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, using <ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead`</ph> to convert an <bpt id="p1">[</bpt>IRandomAccessStream<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx)</ept> will not limit the converted .NET Framework stream to being readable only; it will also be writable.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To convert from a Windows Runtime random-access stream to a .NET Framework stream</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsStream`</ph> method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code example shows how to prompt the user to select a file, open it with Windows Runtime APIs, and then convert it to a .NET Framework stream, which is read and output to a text block.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this scenario, you would typically manipulate the stream with .NET Framework APIs before outputting the results.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To run this example, you must create a Windows Store XAML app that contains a text block named <ph id="ph1">`TextBlock1`</ph> and a button named  <ph id="ph2">`Button1`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The button click event must be associated with the <ph id="ph1">`button1_Click`</ph> method shown in the example.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Converting from a .NET Framework stream to a Windows Runtime stream</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can convert from a .NET Framework stream to a Windows Runtime stream by using one of the following <ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions&gt;--&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions`</ph> methods:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsInputStream`</ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Converts a managed stream in the .NET for Windows Store apps subset to an input stream in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A&gt;  --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsOutputStream`</ph> Converts a managed stream in the .NET for Windows Store apps subset to an output stream in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AsRandomAccessStream<ept id="p1">](../../../docs/standard/cross-platform/windowsruntimestreamextensions-asrandomaccessstream-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Converts a managed stream in the .NET for Windows Store apps subset to a random-access stream that can be used for reading or writing in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you convert a .NET Framework stream to a Windows Runtime stream, the capabilities of the converted stream will depend on the original stream.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, if the original stream supports both reading and writing, and you call <ph id="ph1">&lt;!--zz &lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A&gt; --&gt;</ph> <ph id="ph2">`System.IO.WindowsRuntimeStreamExtensions.AsInputStream`</ph> to convert the stream, the returned type will be an <ph id="ph3">`IRandomAccessStream`</ph>, which  implements  <ph id="ph4">`IInputStream`</ph> and <ph id="ph5">`IOutputStream`</ph>, and supports reading and writing</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>.NET Framework streams do not support cloning, even after conversion.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This means that if you convert a .NET Framework stream to a Windows Runtime stream and call <bpt id="p1">[</bpt>GetInputStreamAt<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.inmemoryrandomaccessstream.getinputstreamat.aspx)</ept> or <bpt id="p2">[</bpt>GetOutputStreamAt<ept id="p2">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.irandomaccessstream.getoutputstreamat.aspx)</ept>, which call <bpt id="p3">[</bpt>CloneStream<ept id="p3">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.randomaccessstreamoverstream.clonestream.aspx)</ept> or call <bpt id="p4">[</bpt>CloneStream<ept id="p4">](http://msdn.microsoft.com/library/windows/apps/windows.storage.streams.randomaccessstreamoverstream.clonestream.aspx)</ept> directly, an exception will occur.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To convert from a .NET Framework stream to a Windows Runtime random-access stream</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>AsRandomAccessStream<ept id="p1">](../../../docs/standard/cross-platform/windowsruntimestreamextensions-asrandomaccessstream-method.md)</ept> method, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Ensure that the .NET Framework stream you are using supports seeking, or copy it to a stream that does.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt;</ph> property to determine this.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To run this example, you must create a Windows Store XAML app that targets the .NET Framework 4.5.1 and contains a text block named <ph id="ph1">`TextBlock2`</ph> and a button named <ph id="ph2">`Button2`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The button click event must be associated with the <ph id="ph1">`button2_Click`</ph> method shown in this example.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Quickstart: Reading and writing a file (Windows)<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/hh464978.aspx)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET for Windows Store apps overview<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/br230302.aspx)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET for Windows Store apps â€“ supported APIs<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/br230232.aspx)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>