<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">844cb0e87aae79b6ea08d3b89028906a30705266</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\walkthrough-creating-a-professionally-styled-toolstrip-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">173e32fe9c376aeff4c6b38034c7a65ab96b6b05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66b80cecb1349cb508689d0627435cd5b8a2e700</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating a Professionally Styled ToolStrip Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating a Professionally Styled ToolStrip Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can give your application’s <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls a professional appearance and behavior by writing your own class derived from the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripProfessionalRenderer&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This walkthrough demonstrates how to use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls to create a composite control that resembles the <bpt id="p1">**</bpt>Navigation Pane<ept id="p1">**</ept> provided by Microsoft® Outlook®.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following tasks are illustrated in this walkthrough:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creating a Windows Control Library project.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Designing the StackView Control.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Renderer.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you are finished, you will have a reusable custom client control with the professional appearance of a Microsoft Office® XP control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To copy the code in this topic as a single listing, see <bpt id="p1">[</bpt>How to: Create a Professionally Styled ToolStrip Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-create-a-professionally-styled-toolstrip-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To change your settings, choose <bpt id="p1">**</bpt>Import and Export Settings<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Tools<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Customizing Development Settings in Visual Studio<ept id="p1">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In order to complete this walkthrough, you will need:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sufficient permissions to be able to create and run Windows Forms application projects on the computer where <ph id="ph1">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> is installed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating a Windows Control Library Project</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The first step is to create the control library project.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To create the control library project</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create a new Windows Control Library project named <ph id="ph1">`StackViewLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, delete the project's default control by deleting the source file named "UserControl1.cs" or "UserControl1.vb", depending on your language of choice.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NIB:How to: Remove, Delete, and Exclude Items<ept id="p1">](http://msdn.microsoft.com/en-us/6dffdc86-29c8-4eff-bcd8-e3a0dd9e9a73)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add a new <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> item to the <bpt id="p1">**</bpt>StackViewLibrary<ept id="p1">**</ept> project.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Give the new source file a base name of <ph id="ph1">`StackView`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Designing the StackView Control</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StackView`</ph> control is a composite control with one child <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information about composite controls, see <bpt id="p1">[</bpt>Varieties of Custom Controls<ept id="p1">](../../../../docs/framework/winforms/controls/varieties-of-custom-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To design the StackView control</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, drag a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control to the design surface.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control's properties according to the following table.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CanOverflow</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Dock</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Font</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>GripStyle</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>LayoutStyle</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Padding</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>RenderMode</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the Windows Forms Designer, click the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control's <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> button and add a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> to the <ph id="ph3">`stackStrip`</ph> control.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> control's properties according to the following table.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CheckOnClick</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>true</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CheckState</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>DisplayStyle</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>ImageAlign</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ImageScaling</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>ImageTransparentColor</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Margin</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Padding</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mail<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>TextAlign</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Repeat step 7 for three more <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Name the controls <ph id="ph1">`calendarStackButton`</ph>, <ph id="ph2">`contactsStackButton`</ph>, and <ph id="ph3">`tasksStackButton`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Set the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property to <bpt id="p1">**</bpt>Calendar<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Contacts<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Tasks<ept id="p3">**</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Handling Events</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Two events are important to make the <ph id="ph1">`StackView`</ph> control behave correctly.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl.Load&gt;</ph> event to position the control correctly.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event for each <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> to give the <ph id="ph3">`StackView`</ph> control state behavior similar to the <ph id="ph4">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To handle events</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In the Windows Forms Designer, select the <ph id="ph1">`StackView`</ph> control.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>Events<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Double-click the Load event to generate the <ph id="ph1">`StackView_Load`</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`StackView_Load`</ph> event handler, copy and paste the following code.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.ToolStrip.StackView#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/CS/StackView.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.ToolStrip.StackView#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/VB/StackView.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the Windows Forms Designer, select the <ph id="ph1">`mailStackButton`</ph> control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>Events<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Double-click the Click event.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The Windows Forms Designer generates the <ph id="ph1">`mailStackButton_Click`</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Rename the <ph id="ph1">`mailStackButton_Click`</ph> event handler to <ph id="ph2">`stackButton_Click`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Rename an Identifier (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/en-us/e5a5edf8-3dba-4119-81f4-fc2aba180e0c)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Insert the following code into the <ph id="ph1">`stackButton_Click`</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.ToolStrip.StackView#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/CS/StackView.cs#4)</ept><ept id="p1">]</ept>   <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.ToolStrip.StackView#4<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/VB/StackView.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the Windows Forms Designer, select the <ph id="ph1">`calendarStackButton`</ph> control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, set the Click event to the <ph id="ph1">`stackButton_Click`</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Repeat steps 10 and 11 for the <ph id="ph1">`contactsStackButton`</ph> and <ph id="ph2">`tasksStackButton`</ph> controls.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Defining Icons</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`StackView`</ph> button has an associated icon.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For convenience, each icon is represented as a Base64-encoded string, which is deserialized before a <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> is created from it.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In a production environment, you store bitmap data as a resource, and your icons appear in the Windows Forms Designer.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add Background Images to Windows Forms<ept id="p1">](http://msdn.microsoft.com/en-us/7a509ba2-055c-4ae6-b88a-54625c6d9aff)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To define icons</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In the Code Editor, insert the following code into the <ph id="ph1">`StackView`</ph> class definition.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This code initializes the bitmaps for the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> icons.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.ToolStrip.StackView#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/CS/StackView.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.ToolStrip.StackView#2<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/VB/StackView.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Add a call to the <ph id="ph1">`InitializeImages`</ph> method in the <ph id="ph2">`StackView`</ph> class constructor.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.ToolStrip.StackView#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/CS/StackView.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.ToolStrip.StackView#5<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/VB/StackView.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Renderer</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can customize most elements of the <ph id="ph1">`StackView`</ph> control my implementing a class that derives from the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripRenderer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In this procedure, you will implement a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripProfessionalRenderer&gt;</ph> class that customizes the grip and draws gradient backgrounds for the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To implement a custom renderer</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Insert the following code into the <ph id="ph1">`StackView`</ph> control definition.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This is the definition for the <ph id="ph1">`StackRenderer`</ph> class, which overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripRenderer.RenderGrip&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripRenderer.RenderToolStripBorder&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripRenderer.RenderButtonBackground&gt;</ph> methods to produce a custom appearance.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.ToolStrip.StackView#10<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/CS/StackView.cs#10)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.ToolStrip.StackView#10<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/VB/StackView.vb#10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`StackView`</ph> control's constructor, create a new instance of the <ph id="ph2">`StackRenderer`</ph> class and assign this instance to the <ph id="ph3">`stackStrip`</ph> control's <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip.Renderer%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Windows.Forms.ToolStrip.StackView#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/CS/StackView.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Windows.Forms.ToolStrip.StackView#5<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.StackView/VB/StackView.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Testing the StackView Control</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StackView`</ph> control derives from the <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Therefore, you can test the control with the <bpt id="p1">**</bpt>UserControl Test Container<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Test the Run-Time Behavior of a UserControl<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-test-the-run-time-behavior-of-a-usercontrol.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To test the StackView control</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Press F5 to build the project and start the <bpt id="p1">**</bpt>UserControl Test Container<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Move the pointer over the buttons of the <ph id="ph1">`StackView`</ph> control, and then click a button to see the appearance of its selected state.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>In this walkthrough, you have created a reusable custom client control with the professional appearance of an Office XP control.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> family of controls for many other purposes:</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Create shortcut menus for your controls with <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ContextMenu Component Overview<ept id="p1">](../../../../docs/framework/winforms/controls/contextmenu-component-overview-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Create a form with an automatically populated standard menu.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Providing Standard Menu Items to a Form<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-providing-standard-menu-items-to-a-form.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Create a multiple document interface (MDI) form with docking <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create an MDI Form with Menu Merging and ToolStrip Controls<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-create-an-mdi-form-with-menu-merging-and-toolstrip-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ToolStrip Control<ept id="p1">](../../../../docs/framework/winforms/controls/toolstrip-control-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Provide Standard Menu Items to a Form<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-provide-standard-menu-items-to-a-form.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>