<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f196c0bb35b25fb323c74ccdf32df7019854f59</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\rules-for-inferring-schema-node-types-and-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ca7c13e496a7f1230ce04abb1fad490519d5766</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1350ca6f6108994e686b9eea54b1f94e0cf8285a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Rules for Inferring Schema Node Types and Structure | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Rules for Inferring Schema Node Types and Structure</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes how the schema inference process translates the node types in an XML document to an XML Schema definition language (XSD) structure.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Element Inference Rules</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This section describes the inference rules for element declarations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are eight structures of element declarations that will be inferred:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Element of simple type</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Empty element</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Empty element with attributes</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Element with attributes and simple content</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Element with a sequence of child elements</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Element with a sequence of child elements and attributes</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Element with a sequence of choices of child elements</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Element with a sequence of choices of child elements and attributes</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>All <ph id="ph1">`complexType`</ph> declarations are inferred as anonymous types.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The only global element inferred is the root element; all other elements are local.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Simple Typed Element</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The bolded element shows the schema inferred for the simple type element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Empty Element</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The bolded element shows the schema inferred for the empty element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Empty Element with Attributes</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The bolded elements show the schema inferred for the empty element with attributes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Element with Attributes and Simple Content</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The bolded elements show the schema inferred for an element with attributes and simple content.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Element with a Sequence of Child Elements</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The bolded elements show the schema inferred for an element with a sequence of child elements.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Even if an element has only one child element, it is still treated as a sequence.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Element with a Sequence of Child Elements and Attributes</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The bolded elements show the schema inferred for an element with a sequence of child elements and attributes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Even if an element has only one child element, it is still treated as a sequence.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Element with a Sequence and Choices of Child Elements</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The bolded elements show the schema inferred for an element with a sequence and choice of child elements.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`maxOccurs`</ph> attribute of the <ph id="ph2">`xs:choice`</ph> element is set to <ph id="ph3">`"unbounded"`</ph> in the inferred schema.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Element with a Sequence and Choice of Child Elements and Attributes</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following table shows the XML input to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A&gt;</ph> method, and the XML schema generated.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The bolded elements show the schema inferred for an element with a sequence and choice of child elements and attributes.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`maxOccurs`</ph> attribute of the <ph id="ph2">`xs:choice`</ph> element is set to <ph id="ph3">`"unbounded"`</ph> in the inferred schema.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Schema</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Attribute Processing</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Whenever a new attribute is encountered within a node, it is added to the inferred definition of the node with <ph id="ph1">`use="required"`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The next time the same node is found in the instance, the inference process will compare attributes of the current instance with the ones already inferred.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If some of the already inferred ones are missing in the instance, <ph id="ph1">`use="optional"`</ph> is added to the attribute definition.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>New attributes are added to existing declarations with <ph id="ph1">`use="optional"`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Occurrence Constraints</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>During the schema inference process, the <ph id="ph1">`minOccurs`</ph> and <ph id="ph2">`maxOccurs`</ph> attributes are generated, for inferred components of a schema, with the values <ph id="ph3">`"0"`</ph> or <ph id="ph4">`"1"`</ph> and <ph id="ph5">`"1"`</ph> or <ph id="ph6">`"unbounded"`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The values <ph id="ph1">`"1"`</ph> and <ph id="ph2">`"unbounded"`</ph> are used only when the values <ph id="ph3">`"0"`</ph> and <ph id="ph4">`"1"`</ph> cannot validate the XML document (for example, if <ph id="ph5">`MinOccurs="0"`</ph> does not accurately describe an element, <ph id="ph6">`minOccurs="1"`</ph> is used).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Mixed Content</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If an element contains mixed content (for example text interspersed with elements), the <ph id="ph1">`mixed="true"`</ph> attribute is generated for the inferred complex type definition.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Other Node Type Inference Rules</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following table describes the inference rules for processing instruction, comment, entity reference, CDATA, document type, and namespace nodes.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Node Type</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Translation</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Processing instruction</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Ignored.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Ignored.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Entity reference</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInference&gt;</ph> class does not handle entity references.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If an XML document contains entity references, you need to use a reader that expands the entities.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, you can pass an <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.EntityHandling%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Xml.EntityHandling&gt;</ph> as a parameter.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If entity references are encountered and the reader does not expand entities, an exception is throw.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Any <ph id="ph1">`&lt;![CDATA[ … ]]`</ph> sections in an XML document will be inferred as <ph id="ph2">`xs:string`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Document type</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Ignored.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Ignored.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For more information about the schema inference process, see <bpt id="p1">[</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Schema Object Model (SOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Inferring an XML Schema<ept id="p1">](../../../../docs/standard/data/xml/inferring-an-xml-schema.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Inferring Schemas from XML Documents<ept id="p1">](../../../../docs/standard/data/xml/inferring-schemas-from-xml-documents.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Rules for Inferring Simple Types<ept id="p1">](../../../../docs/standard/data/xml/rules-for-inferring-simple-types.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>