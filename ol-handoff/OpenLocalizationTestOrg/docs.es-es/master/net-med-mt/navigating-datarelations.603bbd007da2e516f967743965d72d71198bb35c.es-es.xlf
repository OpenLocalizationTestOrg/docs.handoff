<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebc488c096f3072456af432593aadab2a5a93531</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\navigating-datarelations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af9c41c72780c64664c93139e75e717dad722183</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86f9aa106ddef304c3a12f9eea41b92f361ac72a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Navigating DataRelations | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Navigating DataRelations</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>One of the primary functions of a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> is to allow navigation from one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to another within a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This allows you to retrieve all the related <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects in one <bpt id="p1">**</bpt>DataTable<ept id="p1">**</ept> when given a single <bpt id="p2">**</bpt>DataRow<ept id="p2">**</ept> from a related <bpt id="p3">**</bpt>DataTable<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, after establishing a <bpt id="p1">**</bpt>DataRelation<ept id="p1">**</ept> between a table of customers and a table of orders, you can retrieve all the order rows for a particular customer row using <bpt id="p2">**</bpt>GetChildRows<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following code example creates a <bpt id="p1">**</bpt>DataRelation<ept id="p1">**</ept> between the <bpt id="p2">**</bpt>Customers<ept id="p2">**</ept> table and the <bpt id="p3">**</bpt>Orders<ept id="p3">**</ept> table of a <bpt id="p4">**</bpt>DataSet<ept id="p4">**</ept> and returns all the orders for each customer.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks Data.DataTableRelation#1<ept id="p2">](../../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks Data.DataTableRelation/CS/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DataWorks Data.DataTableRelation#1<ept id="p4">](../../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks Data.DataTableRelation/VB/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The next example builds on the preceding example, relating four tables together and navigating those relationships.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As in the previous example, <bpt id="p1">**</bpt>CustomerID<ept id="p1">**</ept> relates the <bpt id="p2">**</bpt>Customers<ept id="p2">**</ept> table to the <bpt id="p3">**</bpt>Orders<ept id="p3">**</ept> table.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For each customer in the <bpt id="p1">**</bpt>Customers<ept id="p1">**</ept> table, all the child rows in the <bpt id="p2">**</bpt>Orders<ept id="p2">**</ept> table are determined, in order to return the number of orders a particular customer has and their <bpt id="p3">**</bpt>OrderID<ept id="p3">**</ept> values.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The expanded example also returns the values from the <bpt id="p1">**</bpt>OrderDetails<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Products<ept id="p2">**</ept> tables.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Orders<ept id="p1">**</ept> table is related to the <bpt id="p2">**</bpt>OrderDetails<ept id="p2">**</ept> table using <bpt id="p3">**</bpt>OrderID<ept id="p3">**</ept> to determine, for each customer order, what products and quantities were ordered.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>OrderDetails<ept id="p1">**</ept> table only contains the <bpt id="p2">**</bpt>ProductID<ept id="p2">**</ept> of an ordered product, <bpt id="p3">**</bpt>OrderDetails<ept id="p3">**</ept> is related to <bpt id="p4">**</bpt>Products<ept id="p4">**</ept> using <bpt id="p5">**</bpt>ProductID<ept id="p5">**</ept> in order to return the <bpt id="p6">**</bpt>ProductName<ept id="p6">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this relation, the <bpt id="p1">**</bpt>Products<ept id="p1">**</ept> table is the parent and the <bpt id="p2">**</bpt>Order Details<ept id="p2">**</ept> table is the child.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As a result, when iterating through the <bpt id="p1">**</bpt>OrderDetails<ept id="p1">**</ept> table, <bpt id="p2">**</bpt>GetParentRow<ept id="p2">**</ept> is called to retrieve the related <bpt id="p3">**</bpt>ProductName<ept id="p3">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Notice that when the <bpt id="p1">**</bpt>DataRelation<ept id="p1">**</ept> is created for the <bpt id="p2">**</bpt>Customers<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Orders<ept id="p3">**</ept> tables, no value is specified for the <bpt id="p4">**</bpt>createConstraints<ept id="p4">**</ept> flag (the default is <bpt id="p5">**</bpt>true<ept id="p5">**</ept>).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This assumes that all the rows in the <bpt id="p1">**</bpt>Orders<ept id="p1">**</ept> table have a <bpt id="p2">**</bpt>CustomerID<ept id="p2">**</ept> value that exists in the parent <bpt id="p3">**</bpt>Customers<ept id="p3">**</ept> table.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If a <bpt id="p1">**</bpt>CustomerID<ept id="p1">**</ept> exists in the <bpt id="p2">**</bpt>Orders<ept id="p2">**</ept> table that does not exist in the <bpt id="p3">**</bpt>Customers<ept id="p3">**</ept> table, a <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> causes an exception to be thrown.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the child column might contain values that the parent column does not contain, set the <bpt id="p1">**</bpt>createConstraints<ept id="p1">**</ept> flag to <bpt id="p2">**</bpt>false<ept id="p2">**</ept> when adding the <bpt id="p3">**</bpt>DataRelation<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the example, the <bpt id="p1">**</bpt>createConstraints<ept id="p1">**</ept> flag is set to <bpt id="p2">**</bpt>false<ept id="p2">**</ept> for the <bpt id="p3">**</bpt>DataRelation<ept id="p3">**</ept> between the <bpt id="p4">**</bpt>Orders<ept id="p4">**</ept> table and the <bpt id="p5">**</bpt>OrderDetails<ept id="p5">**</ept> table.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This enables the application to return all the records from the <bpt id="p1">**</bpt>OrderDetails<ept id="p1">**</ept> table and only a subset of records from the <bpt id="p2">**</bpt>Orders<ept id="p2">**</ept> table without generating a run-time exception.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The expanded sample generates output in the following format.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code example is an expanded sample where the values from the <bpt id="p1">**</bpt>OrderDetails<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Products<ept id="p2">**</ept> tables are returned, with only a subset of the records in the <bpt id="p3">**</bpt>Orders<ept id="p3">**</ept> table being returned.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks Data.DataTableNavigation#1<ept id="p2">](../../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks Data.DataTableNavigation/CS/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DataWorks Data.DataTableNavigation#1<ept id="p4">](../../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks Data.DataTableNavigation/VB/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>