<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="binding-sources-overview.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">013db91d34fa6a3b2a6b53d9a57697b7df8a18f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\data\binding-sources-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ea0f0cd3d3be2f52ff38830b62cc87b1e2063d0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">309069b25aa9b020c1c4ac09470d0903618ba807</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Binding Sources Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Binding Sources Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In data binding, the binding source object refers to the object you obtain data from.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic discusses the types of objects you can use as the binding source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Binding Source Types</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> data binding supports the following binding source types:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Binding Source</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> objects</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can bind to public properties, sub-properties, as well as indexers, of any <ph id="ph1">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The binding engine uses <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> reflection to get the values of the properties.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Alternatively, objects that implement <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> or have a registered <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> also work with the binding engine.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information about how to implement a class that can serve as a binding source, see <bpt id="p1">[</bpt>Implementing a Class for the Binding Source<ept id="p1">](#classes)</ept> later in this topic.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>dynamic objects</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can bind to available properties and indexers of an object that implements the <ph id="ph1">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you can access the member in code, you can bind to it.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, if a dynamic object enables you to access a member in code via <ph id="ph1">`someObjet.AProperty`</ph>, you can bind to it by setting the binding path to <ph id="ph2">`AProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_adonet](../../../../includes/tlasharptla-adonet-md.md)]</ph> objects</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can bind to <ph id="ph1">[!INCLUDE[TLA2#tla_adonet](../../../../includes/tla2sharptla-adonet-md.md)]</ph> objects, such as <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_adonet](../../../../includes/tla2sharptla-adonet-md.md)]</ph> <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> implements the <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, which provides change notifications that the binding engine listens for.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph> objects</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can bind to and run <ph id="ph1">`XPath`</ph> queries on an <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xml.XmlElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A convenient way to access <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> data that is the binding source in markup is to use an <ph id="ph2">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Bind to XML Data Using an XMLDataProvider and XPath Queries<ept id="p1">](../../../../docs/framework/wpf/data/how-to-bind-to-xml-data-using-an-xmldataprovider-and-xpath-queries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can also bind to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, or bind to the results of queries run on objects of these types by using LINQ to XML.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A convenient way to use LINQ to XML to access XML data that is the binding source in markup is to use an <ph id="ph1">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](../../../../docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> objects</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can bind to dependency propertiesof any <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>Bind the Properties of Two Controls<ept id="p1">](../../../../docs/framework/wpf/data/how-to-bind-the-properties-of-two-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Implementing a Class for the Binding Source</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can create your own binding sources.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This section discusses the things you need to know if you are implementing a class to serve as a binding source.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Providing Change Notifications</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you are using either <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode&gt;</ph> binding (because you want your <ph id="ph3">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> to update when the binding source properties change dynamically), you must implement a suitable property changed notification mechanism.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The recommended mechanism is for the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> or dynamic class to implement the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implement Property Change Notification<ept id="p1">](../../../../docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you create a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> object that does not implement <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>, then you must arrange for your own notification system to make sure that the data used in a binding stays current.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can provide change notifications by supporting the <ph id="ph1">`PropertyChanged`</ph> pattern for each property that you want change notifications for.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To support this pattern, you define a <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept>Changed event for each property, where <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> is the name of the property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You raise the event every time the property changes.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If your binding source implements one of these notification mechanisms, target updates happen automatically.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If for any reason your binding source does not provide the proper property changed notifications, you have the option to use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression.UpdateTarget%2A&gt;</ph> method to update the target property explicitly.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Other Characteristics</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following list provides other important points to note:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you want to create the object in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>, the class must have a default constructor.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In some <ph id="ph1">[!INCLUDE[TLA2#tla_net](../../../../includes/tla2sharptla-net-md.md)]</ph> languages, such as <ph id="ph2">[!INCLUDE[TLA#tla_cshrp](../../../../includes/tlasharptla-cshrp-md.md)]</ph>, the default constructor might be created for you.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The properties you use as binding source properties for a binding must be public properties of your class.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Explicitly defined interface properties cannot be accessed for binding purposes, nor can protected, private, internal, or virtual properties that have no base implementation.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You cannot bind to public fields.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The type of the property declared in your class is the type that is passed to the binding.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, the type ultimately used by the binding depends on the type of the binding target property, not of the binding source property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If there is a difference in type, you might want to write a converter to handle how your custom property is initially passed to the binding.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Using Entire Objects as a Binding Source</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can use an entire object as a binding source.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can specify a binding source by using the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property, and then provide a blank binding declaration: <ph id="ph3">`{Binding}`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Scenarios in which this is useful include binding to objects that are of type string, binding to objects with multiple properties you are interested in, or binding to collection objects.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For an example of binding to an entire collection object, see <bpt id="p1">[</bpt>Use the Master-Detail Pattern with Hierarchical Data<ept id="p1">](../../../../docs/framework/wpf/data/how-to-use-the-master-detail-pattern-with-hierarchical-data.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Note that you may need to apply custom logic so that the data is meaningful to your bound target property.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The custom logic may be in the form of a custom converter (if default type conversion does not exist) or a <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information about converters, see the Data Conversion section of <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information about data templates, see <bpt id="p1">[</bpt>Data Templating Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-templating-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Using Collection Objects as a Binding Source</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Often, the object you want to use as the binding source is a collection of custom objects.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Each object serves as the source for one instance of a repeated binding.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, you might have a <ph id="ph1">`CustomerOrders`</ph> collection that consists of <ph id="ph2">`CustomerOrder`</ph> objects, where your application iterates over the collection to determine how many orders exist and the data contained in each.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can enumerate over any collection that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>However, to set up dynamic bindings so that insertions or deletions in the collection update the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> automatically, the collection must implement the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This interface exposes an event that must be raised whenever the underlying collection changes.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class is a built-in implementation of a data collection that exposes the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The individual data objects within the collection must satisfy the requirements described in the preceding sections.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>Create and Bind to an ObservableCollection<ept id="p1">](../../../../docs/framework/wpf/data/how-to-create-and-bind-to-an-observablecollection.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Before implementing your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> or one of the existing collection classes, such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, among many others.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>WPF never binds directly to a collection.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you specify a collection as a binding source, WPF actually binds to the collection's default view.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For information about default views, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you have an advanced scenario and you want to implement your own collection, consider using the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> provides a non-generic collection of objects that can be individually accessed by index, which can improve performance.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Permission Requirements in Data Binding</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When data binding, you must consider the trust level of the application.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following table summarizes what property types can be bound to in an application that is executing in either full trust or partial trust:</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Property type</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>(all access modifiers)</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Dynamic object property</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Dynamic object property</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CLR property</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>CLR property</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Dependency property</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Dependency property</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Trust level<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Full trust<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Partial trust<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Full trust<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Partial trust<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Full trust<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Partial trust<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Public class</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Non-public class</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>No</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This table describes the following important points about permission requirements in data binding:</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> properties, data binding works as long as the binding engine is able to access the binding source property using reflection.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Otherwise, the binding engine issues a warning that the property cannot be found and uses the fallback value or the default value, if it is available.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can bind to properties on dynamic objects that are defined at compile time or run time.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can always bind to dependency properties.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The permission requirement for <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> binding is similar.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In a partial-trust sandbox, <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> fails when it does not have permissions to access the specified data.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Objects with an anonymous type are internal.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can bind to properties of anonymous types only when running in full trust.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For more information about anonymous types, see <bpt id="p1">[</bpt>Anonymous Types (C# Programming Guide)<ept id="p1">](~/docs/csharp/programming-guide/classes-and-structs/anonymous-types.md)</ept> or <bpt id="p2">[</bpt>Anonymous Types (Visual Basic)<ept id="p2">](~/docs/visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept> (Visual Basic).</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For more information about partial-trust security, see <bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](../../../../docs/framework/wpf/wpf-partial-trust-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Specify the Binding Source<ept id="p1">](../../../../docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Data Binding with LINQ to XML Overview<ept id="p1">](/visualstudio/designers/wpf-data-binding-with-linq-to-xml-overview)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-data-binding.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>