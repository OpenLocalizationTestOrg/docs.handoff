<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-federated-client.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9572e18fa30da60cac8b131a64578da93adfe2d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-create-a-federated-client.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae2e91e5c9ad5242f4b0463e2c9df3e5df9fcc1c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e845c3d1752e5801b8e80d0cf7aeb1e9611ccf65</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a Federated Client | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Federated Client</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>, creating a client for a <bpt id="p1">*</bpt>federated service<ept id="p1">*</ept> consists of three main steps:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Configure a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>wsFederationHttpBinding&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/wsfederationhttpbinding.md)</ept> or similar custom binding.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> creating an appropriate binding, see <bpt id="p1">[</bpt>How to: Create a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-wsfederationhttpbinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Alternatively, run the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> against the metadata endpoint of the federated service to generate a configuration file for communicating with the federated service and one or more security token services.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Set the properties of the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph> that controls various aspects of a client's interaction with a security token service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Set the properties of the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential&gt;</ph>, which allows certificates needed to communicate securely with given endpoints, such as security token services.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> might be thrown when a client uses impersonated credentials, the <ph id="ph2">&lt;xref:System.ServiceModel.WSFederationHttpBinding&gt;</ph> binding or a custom-issued token, and asymmetric keys.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Asymmetric keys are used with the <ph id="ph1">&lt;xref:System.ServiceModel.WSFederationHttpBinding&gt;</ph> binding and custom-issued tokens when the <ph id="ph2">&lt;xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A&gt;</ph> properties, respectively, are set to <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> is thrown when the client attempts to send a message and a user profile doesnâ€™t exist for the identity that the client is impersonating.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To mitigate this issue, log on to the client computer or call <ph id="ph1">`LoadUserProfile`</ph> before sending the message.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic provides detailed information about these procedures.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> creating an appropriate binding, see <bpt id="p1">[</bpt>How to: Create a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-wsfederationhttpbinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> how a federated service works, see <bpt id="p1">[</bpt>Federation<ept id="p1">](../../../../docs/framework/wcf/feature-details/federation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To generate and examine the configuration for a federated service</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> with the address of the metadata URL of the service as a command-line parameter.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Open the generated configuration file in an appropriate editor.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Examine the attributes and content of any generated <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>issuer&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/issuer.md)</ept> and <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>issuerMetadata&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/issuermetadata.md)</ept> elements.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These are located within the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>security&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/security-of-wsfederationhttpbinding.md)</ept> elements for the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>wsFederationHttpBinding&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/wsfederationhttpbinding.md)</ept> or custom bindings elements.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Ensure that the addresses contain the expected domain names or other address information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is important to check this information because the client authenticates to these addresses and may disclose information such as user name/password pairs.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the address is not the expected address, this could result in information disclosure to an unintended recipient.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Examine any additional <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>issuedTokenParameters&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/issuedtokenparameters.md)</ept> elements inside the commented out &lt;<ph id="ph2">`alternativeIssuedTokenParameters`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When using the Svcutil.exe tool to generate configuration for a federated service, if the federated service or any intermediate security token services do not specify an issuer address, but rather specify a metadata address for a security token service that exposes multiple endpoints, the resulting configuration file refers to the first endpoint.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Additional endpoints are in the configuration file as commented-out &lt;<ph id="ph1">`alternativeIssuedTokenParameters`</ph>&gt; elements.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Determine whether one of these &lt;<ph id="ph1">`issuedTokenParameters`</ph>&gt; is preferable to the one already present in the configuration.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, the client may prefer to authenticate to a security token service using a Windows <ph id="ph1">[!INCLUDE[infocard](../../../../includes/infocard-md.md)]</ph> token rather than a user name/password pair.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Where multiple security token services must be traversed before communicating with the service, it is possible for an intermediate security token service to direct the client to an incorrect security token service.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Therefore, ensure that the endpoint for the security token service in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>issuedTokenParameters&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/issuedtokenparameters.md)</ept> is the expected security token service and not an unknown security token service.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To configure an IssuedTokenClientCredential in code</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Access the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph> through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials.IssuedToken%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> class (returned by the <ph id="ph4">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class, or through the <ph id="ph6">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> class), as shown in the following example code.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#9<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#9)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#9<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#9)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If token caching is not required, set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens%2A&gt;</ph> property controls whether such tokens from a security token service are cached.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If this property is set to <ph id="ph1">`false`</ph>, the client requests a new token from the security token service whenever it must re-authenticate itself to the federated service, regardless of whether a previous token is still valid.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the client reuses an existing token whenever it must re-authenticate itself to the federated service (as long as the token has not expired).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If a time limit is required on cached tokens, set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime%2A&gt;</ph> property to a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The property specifies how long a token can be cached.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After the specified time span has elapsed, the token is removed from the client cache.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By default, tokens are cached indefinitely.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following example sets the time span to 10 minutes.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#15<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#15)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#15<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#15)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage%2A&gt;</ph> to a percentage.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default is 60 (percent).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The property specifies a percentage of the token's validity period.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, if the issued token is valid for 10 hours and <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage%2A&gt;</ph> is set to 80, then the token is renewed after eight hours.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following example sets the value to 80 percent.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#16<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#16)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#16<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#16)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The renewal interval determined by the token validity period and the <ph id="ph1">`IssuedTokenRenewalThresholdPercentage`</ph> value is overridden by the <ph id="ph2">`MaxIssuedTokenCachingTime`</ph> value in cases where the caching time is shorter than the renewal threshold time.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, if the product of <ph id="ph1">`IssuedTokenRenewalThresholdPercentage`</ph> and the token's duration is eight hours, and the <ph id="ph2">`MaxIssuedTokenCachingTime`</ph> value is 10 minutes, the client contacts the security token service for an updated token every 10 minutes.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If a key entropy mode other than <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityKeyEntropyMode&gt;</ph> is needed on a binding that does not use message security or transport security with message credentials (for example.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>the binding does not have a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>), set the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode%2A&gt;</ph> property to an appropriate value.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>entropy<ept id="p1">*</ept> mode determines whether symmetric keys can be controlled using the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This default is <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityKeyEntropyMode&gt;</ph>, where both the client and the token issuer provide data that is combined to produce the actual key.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Other values are <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityKeyEntropyMode&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Security.SecurityKeyEntropyMode&gt;</ph>, which means the entire key is specified by the client or the server, respectively.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following example sets the property to use only the server data for the key.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#17<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#17)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#17<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#17)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> is present in a security token service or service binding, the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode%2A&gt;</ph> set on <ph id="ph3">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph> is overridden by the <ph id="ph4">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode%2A&gt;</ph> property of the <ph id="ph5">`SecurityBindingElement`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Configure any issuer-specific endpoint behaviors by adding them to the collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#14<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#14)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#14<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#14)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To configure the IssuedTokenClientCredential in configuration</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Create an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>issuedToken&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/issuedtoken.md)</ept> element as a child of the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>issuedToken&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/issuedtoken.md)</ept> element in an endpoint behavior.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If token caching is not required, set the <ph id="ph1">`cacheIssuedTokens`</ph> attribute (of the &lt;<ph id="ph2">`issuedToken`</ph>&gt; element) to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a time limit is required on cached tokens, set the <ph id="ph1">`maxIssuedTokenCachingTime`</ph> attribute on the &lt;<ph id="ph2">`issuedToken`</ph>&gt; element to an appropriate value.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If a value other than the default is preferred, set the <ph id="ph1">`issuedTokenRenewalThresholdPercentage`</ph> attribute on the &lt;<ph id="ph2">`issuedToken`</ph>&gt; element to an appropriate value, for example:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If a key entropy mode other than <ph id="ph1">`CombinedEntropy`</ph> is on a binding that does not use message security or transport security with message credentials (for example, the binding does not have a <ph id="ph2">`SecurityBindingElement`</ph>), set the <ph id="ph3">`defaultKeyEntropyMode`</ph> attribute on the <ph id="ph4">`&lt;issuedToken&gt;`</ph> element to a either <ph id="ph5">`ServerEntropy`</ph> or <ph id="ph6">`ClientEntropy`</ph> as required.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Configure any issuer-specific custom endpoint behavior by creating an &lt;<ph id="ph1">`issuerChannelBehaviors`</ph>&gt; element as a child of the &lt;<ph id="ph2">`issuedToken`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For each behavior, create an &lt;<ph id="ph1">`add`</ph>&gt; element as a child of the &lt;<ph id="ph2">`issuerChannelBehaviors`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specify the issuer address of the behavior by setting the <ph id="ph1">`issuerAddress`</ph> attribute on the &lt;<ph id="ph2">`add`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specify the behavior itself by setting the <ph id="ph1">`behaviorConfiguration`</ph> attribute on the &lt;<ph id="ph2">`add`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To configure an X509CertificateRecipientClientCredential in code</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Access the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential&gt;</ph> through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class or the <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#18<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#18<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ph> instance is available for the certificate for a given endpoint, use the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601.Add%2A&gt;</ph> method of the collection returned by the <ph id="ph3">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#19<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#19)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#19<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#19)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ph> instance is not available, use the <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential&gt;</ph> class as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CreateSTS#20<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_CreateSTS#20<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To configure an X509CertificateRecipientClientCredential in configuration</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>scopedCertificates&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/scopedcertificates-element.md)</ept> element as a child of the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>serviceCertificate&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/servicecertificate-of-clientcredentials-element.md)</ept> element that is itself a child of the <bpt id="p3">[</bpt><ph id="ph3">\&lt;</ph>clientCredentials&gt;<ept id="p3">](../../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md)</ept> element in an endpoint behavior.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Create an <ph id="ph1">`&lt;add&gt;`</ph> element as a child of the <ph id="ph2">`&lt;scopedCertificates&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specify values for the <ph id="ph1">`storeLocation`</ph>, <ph id="ph2">`storeName`</ph>, <ph id="ph3">`x509FindType`</ph>, and <ph id="ph4">`findValue`</ph> attributes to refer to the appropriate certificate.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`targetUri`</ph> attribute to a value that provides the address of the endpoint that the certificate is to be used for, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following code sample configures an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph> class in code.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_FederatedClient#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_federatedclient/cs/source.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>c_FederatedClient#2<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_federatedclient/vb/source.vb#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To prevent possible information disclosure, clients that are running the Svcutil.exe tool to process metadata from federated endpoints should ensure that the resulting security token service addresses are what they expect.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is especially important when a security token service exposes multiple endpoints, because the Svcutil.exe tool generates the resulting configuration file to use the first such endpoint, which may not be the one the client should be using.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>LocalIssuer Required</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If clients are expected to always use a local issuer, note the following: the default output of Svcutil.exe results in the local issuer not being used if the second-to-last security token service in the chain specifies an issuer address or issuer metadata address.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> setting the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph> class, see <bpt id="p1">[</bpt>How to: Configure a Local Issuer<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-a-local-issuer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Scoped Certificates</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If service certificates must be specified for communicating with any of the security token services, typically because certificate negotiation is not being used, they can be specified using the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate%2A&gt;</ph> method takes a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> and an <ph id="ph3">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ph> as parameters.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The specified certificate is used when communicating with endpoints at the specified URI.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate%2A&gt;</ph> method to add a certificate to the collection returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The client idea of certificates that are scoped to a given URI applies only to applications that are making outbound calls to services that expose endpoints at those URIs.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It does not apply to certificates that are used to sign issued tokens, such as those configured on the server in the collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates%2A&gt;</ph>of the <ph id="ph2">&lt;xref:System.ServiceModel.Security.IssuedTokenServiceCredential&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>How to: Configure Credentials on a Federation Service<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-credentials-on-a-federation-service.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Federation Sample<ept id="p1">](../../../../docs/framework/wcf/samples/federation-sample.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Disable Secure Sessions on a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-disable-secure-sessions-on-a-wsfederationhttpbinding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a WSFederationHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-create-a-wsfederationhttpbinding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Configure Credentials on a Federation Service<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-credentials-on-a-federation-service.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Configure a Local Issuer<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-a-local-issuer.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Considerations with Metadata<ept id="p1">](../../../../docs/framework/wcf/feature-details/security-considerations-with-metadata.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Secure Metadata Endpoints<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-secure-metadata-endpoints.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>