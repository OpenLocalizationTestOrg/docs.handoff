<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35a87a83230b39a3e5658d3cfef11dc6dfa9a908</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\wcf-web-http-error-handling.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6a9051846fd82f7a3c996c5bce70bf6878dea9b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fd195bcd5fdd0e8d7216037cd8ea938faf48cff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WCF Web HTTP Error Handling | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WCF Web HTTP Error Handling</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> Web HTTP error handling enables you to return errors from <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> Web HTTP services that specify an HTTP status code and return error details using the same format as the operation (for example, XML or JSON).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>WCF Web HTTP Error Handling</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebFaultException&gt;</ph> class defines a constructor that allows you to specify an HTTP status code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This status code is then returned to the client.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A generic version of the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebFaultException&gt;</ph> class, <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebFaultException%601&gt;</ph> enables you to return a user-defined type that contains information about the error that occurred.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This custom object is serialized using the format specified by the operation and returned to the client.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example shows how to return an HTTP status code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example shows how to return an HTTP status code and extra information in a user-defined type.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MyErrorDetail`</ph> is a user-defined type that contains extra information about the error that occurred.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The preceding code returns an HTTP response with the forbidden status code and a body that contains an instance of the <ph id="ph1">`MyErrorDetails`</ph> object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The format of the <ph id="ph1">`MyErrorDetails`</ph> object is determined by:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`ResponseFormat`</ph> parameter of the <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> attribute specified on the service operation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref:System.ServiceModel.Web.OutgoingWebResponseContext.Format%2A&gt;</ph> property by accessing the <ph id="ph2">&lt;xref:System.ServiceModel.Web.OutgoingWebResponseContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> how these values affect the formatting of the operation, see <bpt id="p1">[</bpt>WCF Web HTTP Formatting<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebFaultException&gt;</ph> is a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException&gt;</ph> and therefore can be used as the fault exception programming model for services that expose SOAP endpoints as well as web HTTP endpoints.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Web HTTP Programming Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Web HTTP Formatting<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-web-http-formatting.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Defining and Specifying Faults<ept id="p1">](../../../../docs/framework/wcf/defining-and-specifying-faults.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Handling Exceptions and Faults<ept id="p1">](../../../../docs/framework/wcf/extending/handling-exceptions-and-faults.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sending and Receiving Faults<ept id="p1">](../../../../docs/framework/wcf/sending-and-receiving-faults.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>