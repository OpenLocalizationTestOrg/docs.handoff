<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64c62627a999d6674923cefb715acbeb9549bf67</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\interop-with-aspnet-web-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c22836ef91e13a387c68a4987475e8cea714c8e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d437e7a0b43126d63c266237ef20efa2eb11a2f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Interoperability with ASP.NET Web Services | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Interoperability with ASP.NET Web Services</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Interoperability between <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services and <ph id="ph2">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> Web services can be achieved by ensuring that services implemented using both technologies conform to the WS-I Basic Profile 1.1 specification.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services that conform to WS-I Basic Profile 1.1 are interoperable with <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> clients by using <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> system-provided binding, <ph id="ph4">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">[!INCLUDE[vstecasplong](../../../../includes/vstecasplong-md.md)]</ph> option of adding the <ph id="ph2">&lt;xref:System.Web.Services.WebService&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph> attributes to an interface rather than to a class, and writing a class to implement the interface, as shown in the following sample code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using this option is preferred, because the interface with the <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph> attribute constitutes a contract for the operations performed by the service that can be reused with various classes that might implement that same contract in different ways.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Avoid using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute&gt;</ph> attribute to have messages routed to methods based on the fully-qualified name of the body element of the SOAP message rather than the <ph id="ph2">`SOAPAction`</ph> HTTP header.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses the <ph id="ph2">`SOAPAction`</ph> HTTP header for routing messages.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The XML into which <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a type by default is semantically identical to the XML into which the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> serializes a type, provided the namespace for the XML is explicitly defined.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When defining a data type for use with <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph>Web services in anticipation of adopting <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, do the following:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Define the type using .NET Framework classes rather than XML Schema.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add only the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> to the class, using the latter to explicitly define the namespace for the type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Do not add additional attributes from the <ph id="ph1">&lt;xref:System.Xml.Serialization&gt;</ph> namespace to control how the .NET Framework class is to be translated into XML.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By adopting this approach, you should be able to later make the .NET classes into data contracts with the addition of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> without significantly altering the XML into which the classes are serialized for transmission.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The types used in messages by <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services can be processed as data contracts by <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications, yielding, among other benefits, better performance in <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Avoid using the authentication options provided by Internet Information Services (IIS).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> clients do not support them.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If a service must be secured, use the options provided by <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, because these options are robust and are based on standard protocols.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Performance impact caused by loading the ServiceModel HttpModule</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 3.0, the WCF <ph id="ph1">`HttpModule`</ph> was installed in the root Web.config file such that every ASP.NET application was WCF enabled.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This might affect performance, so you can remove <ph id="ph1">`ServiceModel`</ph> for the Web.config file as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Configure WCF Service to Interoperate with ASP.NET Web Service Clients<ept id="p1">](../../../../docs/framework/wcf/feature-details/config-wcf-service-with-aspnet-web-service.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>