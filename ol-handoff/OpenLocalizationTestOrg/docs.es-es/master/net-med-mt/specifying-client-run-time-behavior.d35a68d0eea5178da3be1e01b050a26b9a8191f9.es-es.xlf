<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="specifying-client-run-time-behavior.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fedd9ee2e082a0758776aef26f9154e91bb2817</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\specifying-client-run-time-behavior.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4a3a3a0f1c241c92661a5a2c84dec332243e497</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43761b1ed7bc9a1c67935a38e6dbd6e67fb0eea8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Specifying Client Run-Time Behavior | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Specifying Client Run-Time Behavior</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> clients, like <ph id="ph2">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> services, can be configured to modify the run-time behavior to suit the client application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Three attributes are available for specifying client run-time behavior.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Duplex client callback objects can use the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> attributes to modify their run-time behavior.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The other attribute, <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior&gt;</ph>, can be used to separate the logical destination from the immediate network destination.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In addition, duplex client callback types can use some of the service-side behaviors.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Specifying Service Run-Time Behavior<ept id="p1">](../../../docs/framework/wcf/specifying-service-run-time-behavior.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Using the CallbackBehaviorAttribute</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can configure or extend the execution behavior of a callback contract implementation in a client application by using the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This attribute performs a similar function for the callback class as the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> class, with the exception of instancing behavior and transaction settings.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> class must be applied to the class that implements the callback contract.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If applied to a nonduplex contract implementation, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown at run time.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> class on a callback object that uses the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object to determine the thread to marshal to, the <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to enforce message validation, and the <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property to return exceptions as <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to the service for debugging purposes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CallbackBehaviorAttribute#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/callbackbehaviorattribute/cs/client.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>CallbackBehaviorAttribute#3<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/callbackbehaviorattribute/vb/client.vb#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Using CallbackDebugBehavior to Enable the Flow of Managed Exception Information</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can enable the flow of managed exception information in a client callback object back to the service for debugging purposes by setting the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph> either programmatically or from an application configuration file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that  unauthorized services could use.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In addition, although the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> properties can also be set programmatically, it can be easy to forget to disable <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> when deploying.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Because of the security issues involved, it is strongly recommended that:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You use an application configuration file to set the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You do so only in controlled debugging scenarios.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following code example shows a client configuration file that instructs <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> to return managed exception information from a client callback object in SOAP messages.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>SCA.CallbackContract#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.exe.config#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using the ClientViaBehavior Behavior</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior&gt;</ph> behavior to specify the Uniform Resource Identifier for which the transport channel should be created.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use this behavior when the immediate network destination is not the intended processor of the message.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This enables multiple-hop conversations when the calling application does not necessarily know the ultimate destination or when the destination <ph id="ph1">`Via`</ph> header is not an address.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Specifying Service Run-Time Behavior<ept id="p1">](../../../docs/framework/wcf/specifying-service-run-time-behavior.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>