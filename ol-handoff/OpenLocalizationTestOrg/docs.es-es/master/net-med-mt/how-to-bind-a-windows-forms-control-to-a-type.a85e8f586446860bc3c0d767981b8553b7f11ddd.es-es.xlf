<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-bind-a-windows-forms-control-to-a-type.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f96228d44658a91fd016a0c13d48ffde50eab227</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\how-to-bind-a-windows-forms-control-to-a-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37a16a483933396c31124ad6553faa45f737aa3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56b92061675a65a289dcef15e08ab6ae7f4cabf6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Bind a Windows Forms Control to a Type | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Bind a Windows Forms Control to a Type</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you are building controls that interact with data, you will sometimes find it necessary to bind a control to a type, rather than an object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This situation arises especially at design time, when data may not be available, but your data-bound controls still need to display information from a type's public interface.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, you may bind a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to an object exposed by a Web service and want the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to label its columns at design time with the member names of a custom type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can easily bind a control to a type with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to bind a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a custom type by using a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you run the example, you'll notice the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> has labeled columns that reflect the properties of a <ph id="ph2">`Customer`</ph> object, before the control is populated with data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The example has an Add Customer button to add data to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you click the button, a new <ph id="ph1">`Customer`</ph> object is added to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In a real-world scenario, the data might be obtained by a call to a Web service or other data source.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example requires:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>References to the System and System.Windows.Forms assemblies.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For information about building this example from the command line for <ph id="ph1">[!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)]</ph> or <ph id="ph2">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>, see <bpt id="p1">[</bpt>Building from the Command Line<ept id="p1">](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id="p2">[</bpt>Command-line Building With csc.exe<ept id="p2">](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also build this example in <ph id="ph1">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> by pasting the code into a new project.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/Bb129228\(v=vs.110\))</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BindingSource Component<ept id="p1">](../../../../docs/framework/winforms/controls/bindingsource-component.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>