<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="performance-considerations-for-direct3d9-and-wpf-interoperability.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c7150a025df529a9e0e8f61c47f2d357ce75425</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\performance-considerations-for-direct3d9-and-wpf-interoperability.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ca77099ec2eda1c6454500f4e08eebc1ce8e219</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">919de6d75dd1b784a6f0899a853b29824ee3656d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Performance Considerations for Direct3D9 and WPF Interoperability | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Performance Considerations for Direct3D9 and WPF Interoperability</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can host Direct3D9 content by using the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Hosting Direct3D9 content can affect the performance of your application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes best practices to optimize performance when hosting Direct3D9 content in a Windows Presentation Foundation (WPF) application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These best practices include how to use <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> and best practices when you are using Windows Vista, Windows XP, and multi-monitor displays.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For code examples that demonstrate these best practices, see <bpt id="p1">[</bpt>WPF and Direct3D9 Interoperation<ept id="p1">](../../../../docs/framework/wpf/advanced/wpf-and-direct3d9-interoperation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use D3DImage Sparingly</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Direct3D9 content hosted in a <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> instance does not render as fast as in a pure Direct3D application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Copying the surface and flushing the command buffer can be costly operations.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As the number of <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> instances increases, more flushing occurs, and performance degrades.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Therefore, you should use <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> sparingly.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Best Practices on Windows Vista</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For best performance on Windows Vista with a display that is configured to use the Windows Display Driver Model (WDDM), create your Direct3D9 surface on an <ph id="ph1">`IDirect3DDevice9Ex`</ph> device.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This enables surface sharing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The video card must support the <ph id="ph1">`D3DDEVCAPS2_CAN_STRETCHRECT_FROM_TEXTURES`</ph> and <ph id="ph2">`D3DCAPS2_CANSHARERESOURCE`</ph> driver capabilities on Windows Vista.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Any other settings cause the surface to be copied through software, which reduces performance significantly.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If Windows Vista has a display that is configured to use the Windows XP Display Driver Model (XDDM), the surface is always copied through software, regardless of settings.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>With the proper settings and video card, you will see better performance on Windows Vista when you use the WDDM because surface copies are performed in hardware.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Best Practices on Windows XP</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For best performance on Windows XP, which uses the Windows XP Display Driver Model (XDDM), create a lockable surface that behaves correctly when the <ph id="ph1">`IDirect3DSurface9::GetDC`</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Internally, the <ph id="ph1">`BitBlt`</ph> method transfers the surface across devices in hardware.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetDC`</ph> method always works on XRGB surfaces.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, if the client computer is running Windows XP with SP3 or SP2, and if the client also has the hotfix for the layered-window feature, this method only works on ARGB surfaces.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The video card must support the <ph id="ph1">`D3DDEVCAPS2_CAN_STRETCHRECT_FROM_TEXTURES`</ph> driver capability.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A 16-bit desktop display depth can significantly reduce performance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A 32-bit desktop is recommended.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you are developing for Windows Vista and Windows XP, test the performance on Windows XP.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Running out of video memory on Windows XP is a concern.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In addition, <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> on Windows XP uses more video memory and bandwidth than Windows Vista WDDM, due to a necessary extra video memory copy.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Therefore, you can expect performance to be worse on Windows XP than on Windows Vista for the same video hardware.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>XDDM is available on both Windows XP and Windows Vista; however, WDDM is available only on Windows Vista.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>General Best Practices</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you create the device, use the <ph id="ph1">`D3DCREATE_MULTITHREADED`</ph> creation flag.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This reduces performance, but the WPF rendering system calls methods on this device from another thread.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Be sure to follow the locking protocol correctly, so that no two threads access the device at the same time.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If your rendering is performed on a WPF managed thread, it is strongly recommended that you create the device with the <ph id="ph1">`D3DCREATE_FPU_PRESERVE`</ph> creation flag.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Without this setting, the D3D rendering can reduce the accuracy of WPF double-precision operations and introduce rendering issues.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Tiling a <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> is fast, unless you tile a non-pow2 surface without hardware support, or if you tile a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> that contains a <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Best Practices for Multi-Monitor Displays</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you are using a computer that has multiple monitors, you should follow the previously described best practices.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>There are also some additional performance considerations for a multi-monitor configuration.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When you create the back buffer, it is created on a specific device and adapter, but WPF may display the front buffer on any adapter.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Copying across adapters to update the front buffer can be very expensive.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>On Windows Vista that is configured to use the WDDM with multiple video cards and with an <ph id="ph1">`IDirect3DDevice9Ex`</ph> device, if the front buffer is on a different adapter but still the same video card, there is no performance penalty.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, on Windows XP and the XDDM with multiple video cards, there is a significant performance penalty when the front buffer is displayed on a different adapter than the back buffer.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF and Direct3D9 Interoperation<ept id="p1">](../../../../docs/framework/wpf/advanced/wpf-and-direct3d9-interoperation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Performance Summary</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following table shows performance of the front buffer update as a function of operating system, pixel format, and surface lockability.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The front buffer and back buffer are assumed to be on the same adapter.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Depending on the adapter configuration, hardware updates are generally much faster than software updates.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Surface pixel format</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Windows Vista, WDDM and 9Ex</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Other Windows Vista configurations</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows XP SP3 or SP2 w/ hotfix</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Windows XP SP2</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>D3DFMT_X8R8G8B8 (not lockable)</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>D3DFMT_X8R8G8B8 (lockable)</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>D3DFMT_A8R8G8B8 (not lockable)</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>D3DFMT_A8R8G8B8 (lockable)</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hardware Update<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Software Update</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF and Direct3D9 Interoperation<ept id="p1">](../../../../docs/framework/wpf/advanced/wpf-and-direct3d9-interoperation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Creating Direct3D9 Content for Hosting in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-creating-direct3d9-content-for-hosting-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>