<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5121420314a51e87dd2d5c441740bc3dc061708</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\xml-intellisense.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01b6ed66db0e3d23ad56cc8db4088f225f281a0a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7132609652328e84688e2181af5386f077043a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XML IntelliSense in Visual Basic | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XML IntelliSense in Visual Basic</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Visual Basic Code Editor includes IntelliSense features for XML that provide word completion for elements defined in an XML schema.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you include an XML Schema Definition (XSD) file in your project and import the target namespace of the schema by using the <ph id="ph1">`Imports`</ph> statement, the Code Editor will include elements from the XSD schema in the IntelliSense list of valid member variables for <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following illustration shows the IntelliSense members list for an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>XML IntelliSense in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/media/xml_intellisense.png "XML_Intellisense")</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XML IntelliSense</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Enabling XML IntelliSense in Visual Basic</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To enable XML IntelliSense in Visual Basic, you must include an XSD schema file in your Visual Basic project.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You must also import the target namespace for the XSD schema into your code file by using the <ph id="ph1">`Imports`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add the target namespace to the project-level namespace list by using the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> page of the Visual Basic Project Designer.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Enable XML IntelliSense in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-enable-xml-intellisense.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept> and <bpt id="p2">[</bpt>References Page, Project Designer (Visual Basic)<ept id="p2">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note that by default you cannot see XSD schema files in Visual Basic projects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You may have to click the <bpt id="p1">**</bpt>Show All Files<ept id="p1">**</ept> button to select an XSD file to include in your project.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Generating a Schema File (Schema Inference)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can create an XSD schema for an existing XML file by inferring the XSD schema by using Visual Studio XML tools.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Starting in SP1, you can use the XML to Schema Wizard to create an XML Schema set that is inferred from one or more XML documents and include it your project.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use any combination of XML documents in the form of text files, XML from HTTP Internet addresses, or XML that is typed or pasted into the XML to Schema Wizard.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To access the XML to Schema Wizard, click <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu and add an <bpt id="p3">**</bpt>XML to Schema<ept id="p3">**</ept> template from either the <bpt id="p4">**</bpt>Data<ept id="p4">**</ept> or <bpt id="p5">**</bpt>Common Items<ept id="p5">**</ept> template group.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>After you have included all the XML document sources to infer the XML Schema set from, click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the inferred schema set.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML to Schema Wizard<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/xml-to-schema-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also use the Visual Studio XML Editor to infer an XSD schema set from an XML file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create an XML schema set by using the XML Editor, open an XML file in the Visual Studio XML Designer and then click <bpt id="p1">**</bpt>Create Schema<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>XML<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After you create the XSD schema set, you can save the created schema set to one or more XSD files and include them in your project.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see<bpt id="p1">[</bpt>How to: Enable XML IntelliSense in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-enable-xml-intellisense.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that different XSD schema sets might be inferred from multiple XML documents that are intended to have the same schema.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This can occur when particular elements and attributes are found in one XML file and not in another, or when elements are included in different order, for example.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You should review inferred XSD schema sets for completeness and accuracy when you use XSD schema inference.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Member List</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After you type a period (.) to delimit an instance of an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object (or an instance of <ph id="ph3">`IEnumerable(Of XElement)`</ph> or <ph id="ph4">`IEnumerable(Of XDocument)`</ph>), Visual Basic IntelliSense displays a list of possible object members.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The initial list includes three options that represent XML axis properties, as described in the following list.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Select this option to show a list of possible child elements.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Element Literal<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept> and the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Select this option to show a list of possible attributes.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Axis Properties<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept>.This option is available only for objects of type <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>…<ph id="ph1">\&lt;</ph><ph id="ph2"> &gt;</ph><ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Select this option to show a list of possible descendant elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Access XML Descendant Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-access-xml-descendant-elements.md)</ept> and the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Select or begin typing any of the XML options from the list.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The member list will then display potential members from the XML schema that are specific to the selected option.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you have XML namespaces imported that are associated with a specific XML namespace prefix, a list of potential XML namespace prefixes is included in the member list.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, consider the following XSD schema.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Valid XML for the XSD schema would resemble the following.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you include this XSD schema file in a project and import the target namespace from the XSD schema into your code file or project, Visual Basic IntelliSense displays members from the schema as you type your Visual Basic code.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the target namespace for the XSD schema is imported as the default namespace and you type the following, IntelliSense displays a list of possible child elements for the <ph id="ph1">`PurchaseOrder`</ph> XML element.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The list consists of the Address, Comment, and Items elements.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Certainty Levels for IntelliSense List Items</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Determining the XSD type to use for IntelliSense is not exact.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>As a result, XML IntelliSense will often show an expanded list of possible members.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To aid you in selecting an item from the IntelliSense member list, items are displayed with an indication of the level of certainty that XML IntelliSense has for a particular member.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Sometimes XML IntelliSense can identify a specific type from the XSD schema.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In these cases, it will display possible child elements, attributes, or descendant elements for that XSD type with a high degree of certainty.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>These items are identified with a check mark.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>However, sometimes XML IntelliSense is not able to identify a specific type from the XSD schema.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In these cases, it will display an expanded list of possible child elements, attributes, or descendant elements from the XSD schema for the project with a low degree of certainty.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These items are identified with a question mark.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Enable XML IntelliSense in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-enable-xml-intellisense.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML to Schema Wizard<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/xml-to-schema-wizard.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Element Literal<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Attribute Axis Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Descendant Axis Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-descendant-axis-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>References Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>