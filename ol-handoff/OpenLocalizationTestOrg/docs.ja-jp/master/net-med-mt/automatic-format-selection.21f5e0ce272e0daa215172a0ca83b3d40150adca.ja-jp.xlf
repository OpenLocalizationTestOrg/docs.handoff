<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71637cb934ba8d8e389d4bf79ff1dd10fd9430b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\automatic-format-selection.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e58750af819544a4eecb4625f8752b30731702d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3423db09f06fd25bd0a68aed4c6a00fe424f663</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automatic Format Selection | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Automatic Format Selection</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to enable automatic format selection (XML or JSON) with the <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> REST programming model, as well as how to explicitly set the format in the operation code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sample Details</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The sample consists of a service along with client code that makes requests to the service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The service supports a single HTTP <ph id="ph1">`GET`</ph> operation (<ph id="ph2">`EchoWithGet`</ph>) and a single HTTP <ph id="ph3">`POST`</ph> operation (<ph id="ph4">`EchoWithPost`</ph>).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Both operations expect a string and then return the string in the response.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">`GET`</ph> operation, the string is provided in a URI query-string parameter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">`POST`</ph> operation, the string is provided in the body of the request, serialized in XML.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The service is able to return responses in either XML or JSON, utilizing the new automatic format selection and imperative format selection features in <ph id="ph1">[!INCLUDE[netfx40_long](../../../../includes/netfx40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the sample, automatic format selection is enabled using the App.config file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the default Web HTTP endpoint, the <ph id="ph1">`automaticFormatSelectionEnabled`</ph> attribute has been given a value of <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>With automatic format selection enabled, the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> infrastructure selects the most appropriate response format (XML or JSON) given the HTTP Accept or Content-Type headers of the request.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The developer is not required to provide any additional code or configuration other than setting the <ph id="ph1">`automaticFormatSelectionEnabled`</ph> attribute to <ph id="ph2">`true`</ph> to use this new feature.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the client code in Program.cs, requests are sent to both the <ph id="ph1">`GET`</ph> and <ph id="ph2">`POST`</ph> operations of the service with the HTTP Accept header specified as either "application/xml" or "application/json" and the service returns a response in that respective format.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Also in the <ph id="ph1">`GET`</ph> operation, imperative format selection is used.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GET`</ph> operation checks for an optional <ph id="ph2">`format`</ph> query-string parameter and if present, sets the response format on the <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebOperationContext.OutgoingResponse%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Imperatively setting the response format in this way overrides the automatic format selection done by the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> infrastructure.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The sample consists of a self-hosted service and a client that runs within a console application.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As the console application runs, the client makes requests to the service and writes the pertinent information from the responses to the console window.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Open the solution for the Automatic Format Selection Sample.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When launching <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph>, you must run as an administrator for the sample to execute successfully.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Do this by right-clicking the <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph> icon and select <bpt id="p1">**</bpt>Run as Administrator<ept id="p1">**</ept> from the context menu.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Press CTRL+SHIFT+B to build the solution and then press Ctrl+F5 to run the console application AutomaticFormatSelection project.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The console window appears and provides the URI of the running service and the URI of the HTML help page for the running service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>As the sample runs, the client sends requests to the service and writes the responses to the console window.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Notice the different formats of the responses in XML and JSON.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Press any key to terminate the sample.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>