<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efc09e6648e438fdccfd59b211186a55a9d8512b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\intercepting-input-from-the-stylus.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2845153e88fd9e202491ed13db574c40214174c9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee7937d982b5c153d2719f78c2c3e0e4244f26c1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Intercepting Input from the Stylus | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Intercepting Input from the Stylus</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns&gt;</ph> architecture provides a mechanism for implementing low-level control over <ph id="ph2">&lt;xref:System.Windows.Input.Stylus&gt;</ph> input and the creation of digital ink <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> class provides a mechanism for you to implement custom behavior and apply it to the stream of data coming from the stylus device for the optimal performance.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic contains the following subsections:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Architecture<ept id="p1">](#Architecture)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing Stylus Plug-ins<ept id="p1">](#ImplementingStylusPlugins)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Adding Your Plug-in to an InkCanvas<ept id="p1">](#AddingYourPluginToAnInkCanvas)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Conclusion<ept id="p1">](#Conclusion)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Architecture</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> is the evolution of the <bpt id="p1">[</bpt>StylusInput<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=50753&amp;clcid=0x409)</ept> APIs, described in <bpt id="p2">[</bpt>Accessing and Manipulating Pen Input<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=50752&amp;clcid=0x409)</ept>, in the <bpt id="p3">[</bpt>Microsoft Windows XP Tablet PC Edition Software Development Kit 1.7<ept id="p3">](http://go.microsoft.com/fwlink/?linkid=11782&amp;clcid=0x409)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property that is a <ph id="ph3">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can add a <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> to an element's <ph id="ph2">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property to manipulate <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as it is generated.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data consists of all the properties supported by the system digitizer, including the <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint.Y%2A&gt;</ph> point data, as well as <ph id="ph4">&lt;xref:System.Windows.Input.StylusPoint.PressureFactor%2A&gt;</ph> data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> objects are inserted directly into the stream of data coming from the <ph id="ph2">&lt;xref:System.Windows.Input.Stylus&gt;</ph> device when you add the <ph id="ph3">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> to the <ph id="ph4">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The order in which plug-ins are added to the <ph id="ph1">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection dictates the order in which they will receive <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, if you add a filter plug-in that restricts input to a particular region, and then add a plug-in that recognizes gestures as they are written, the plug-in that recognizes gestures will receive filtered <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Implementing Stylus Plug-ins</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To implement a plug-in, derive a class from <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This class is applied o the stream of data as it comes in from the <ph id="ph1">&lt;xref:System.Windows.Input.Stylus&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this class you can modify the values of the <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> throws or causes an exception, the application will close.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You should thoroughly test controls that consume a <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> and only use a control if you are certain the <ph id="ph2">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> will not throw an exception.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a plug-in that restricts the stylus input by modifying the <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint.Y%2A&gt;</ph> values in the <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as it comes in from the <ph id="ph4">&lt;xref:System.Windows.Input.Stylus&gt;</ph> device.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>AdvancedInkTopicsSamples#19<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#19)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>AdvancedInkTopicsSamples#19<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#19)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>AdvancedInkTopicsSamples#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/DynamicRenderer.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>AdvancedInkTopicsSamples#3<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/AdvancedInkTopicsSamples/VisualBasic/DynamicRenderer.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Adding Your Plug-in to an InkCanvas</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The easiest way to use your custom plug-in is to implement a class that derives from InkCanvas and add it to the <ph id="ph1">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> that filters the ink.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>AdvancedInkTopicsSamples#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you add a <ph id="ph1">`FilterInkCanvas`</ph> to your application and run it, you will notice that the ink isn't restricted to a region until after the user completes a stroke.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is because the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> property, which is a <ph id="ph3">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> and is already a member of the <ph id="ph4">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The custom <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> you added to the <ph id="ph2">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection receives the <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data after <ph id="ph4">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> receives data.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data will not be filtered until after the user lifts the pen to end a stroke.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To filter the ink as the user draws it, you must insert the <ph id="ph1">`FilterPlugin`</ph> before the <ph id="ph2">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following C# code demonstrates a custom <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> that filters the ink as it is drawn.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>AdvancedInkTopicsSamples#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/AdvancedInkTopicsSamples/CSharp/Window1.xaml.cs#5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By deriving your own <ph id="ph1">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> classes and inserting them into <ph id="ph2">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph> collections, you can greatly enhance the behavior of your digital ink.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You have access to the <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data as it is generated, giving you the opportunity to customize the <ph id="ph2">&lt;xref:System.Windows.Input.Stylus&gt;</ph> input.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because you have such low-level access to the <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> data, you can implement ink collection and rendering with optimal performance for your application.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Advanced Ink Handling<ept id="p1">](../../../../docs/framework/wpf/advanced/advanced-ink-handling.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Accessing and Manipulating Pen Input<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=50752&amp;clcid=0x409)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>