<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-use-tracesource-and-filters-with-trace-listeners.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0346ef5a3bd40ab5f12fef0ee537152637756756</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\debug-trace-profile\how-to-use-tracesource-and-filters-with-trace-listeners.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ddf3249085e4f77d44de2535c37f1f632a029fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9384f90a84ec538539cebf5a8c2f7932e4dc0f66</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Use TraceSource and Filters with Trace Listeners | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use TraceSource and Filters with Trace Listeners</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>One of the new features in the .NET Framework version 2.0 is an enhanced tracing system.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The basic premise is unchanged: tracing messages are sent through switches to listeners, which report the data to an associated output medium.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A primary difference for version 2.0 is that traces can be initiated through instances of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> is intended to function as an enhanced tracing system and can be used in place of the static methods of the older <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph> tracing classes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The familiar <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> classes still exist, but the recommended practice is to use the <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class for tracing.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic describes the use of a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> coupled with an application configuration file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It is possible, although not recommended, to trace using a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> without the use of a configuration file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information on tracing without a configuration file, see <bpt id="p1">[</bpt>How to: Create and Initialize Trace Sources<ept id="p1">](../../../docs/framework/debug-trace-profile/how-to-create-and-initialize-trace-sources.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To create and initialize your trace source</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The first step to instrumenting an application with tracing is to create a trace source.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In large projects with various components, you can create a separate trace source for each component.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the application name for the trace source name.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This will make it easier to keep the different traces separate.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code creates a new trace source (<ph id="ph1">`mySource)`</ph> and calls a method (<ph id="ph2">`Activity1`</ph>) that traces events.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The trace messages are written by the default trace listener.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create and initialize trace listeners and filters</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The code in the first procedure does not programmatically identify any trace listeners or filters.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The code alone results in the trace messages being written to the default trace listener.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To configure specific trace listeners and their associated filters, edit the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this file, you can add or remove a listener, set the properties and filter for a listener, or remove listeners.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following configuration file example shows how to initialize a console trace listener and a text writer trace listener for the trace source that is created in the preceding procedure.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In addition to configuring the trace listeners, the configuration file creates filters for both of the listeners and creates a source switch for the trace source.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Two techniques are shown for adding trace listeners: adding the listener directly to the trace source and adding a listener to the shared listeners collection and then adding it by name to the trace source.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The filters identified for the two listeners are initialized with different source levels.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This results in some messages being written by only one of the two listeners.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To change the level at which a listener writes a trace message</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The configuration file initializes the settings for the trace source at the time the application is initialized.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To change those settings you must change the configuration file and restart the application or programmatically refresh the application using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Refresh%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The application can dynamically change the properties set by the configuration file to override any settings specified by the user.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, you might want to assure that critical messages are always sent to a text file, regardless of the current configuration settings.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create and Initialize Trace Sources<ept id="p1">](../../../docs/framework/debug-trace-profile/how-to-create-and-initialize-trace-sources.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Trace Listeners<ept id="p1">](../../../docs/framework/debug-trace-profile/trace-listeners.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>