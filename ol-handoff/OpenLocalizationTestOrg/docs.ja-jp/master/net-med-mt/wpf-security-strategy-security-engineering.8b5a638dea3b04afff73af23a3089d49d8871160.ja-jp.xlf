<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c66ff415dc4e2e8bf8675a57f9a70919eb2f387</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\wpf-security-strategy-security-engineering.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d6ed9fe290cf92871386b551ae7f87478cbd27f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88d22610ed185f0f764f77fb48ba87ae72799107</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WPF Security Strategy - Security Engineering | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WPF Security Strategy - Security Engineering</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Trustworthy Computing is a Microsoft initiative for ensuring the production of secure code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A key element of the Trustworthy Computing initiative is the <ph id="ph1">[!INCLUDE[TLA#tla_sdl](../../../includes/tlasharptla-sdl-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_sdl](../../../includes/tla2sharptla-sdl-md.md)]</ph> is an engineering practice that is used in conjunction with standard engineering processes to facilitate the delivery of secure code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_sdl](../../../includes/tla2sharptla-sdl-md.md)]</ph> consists of ten phases that combine best practices with formalization, measurability, and additional structure, including:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Security design analysis</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Tool-based quality checks</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Penetration testing</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Final security review</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Post release product security management</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>WPF Specifics</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> engineering team both applies and extends the <ph id="ph2">[!INCLUDE[TLA2#tla_sdl](../../../includes/tla2sharptla-sdl-md.md)]</ph>, the combination of which includes the following key aspects:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Threat Modeling<ept id="p1">](#threat_modeling)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Analysis and Editing Tools<ept id="p1">](#tools)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Testing Techniques<ept id="p1">](#techniques)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Critical Code Management<ept id="p1">](#critical_code)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Threat Modeling</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Threat modeling is a core component of the <ph id="ph1">[!INCLUDE[TLA2#tla_sdl](../../../includes/tla2sharptla-sdl-md.md)]</ph>, and is used to profile a system to determine potential security vulnerabilities.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Once the vulnerabilities are identified, threat modeling also ensures that appropriate mitigations are in place.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>At a high level, threat modeling involves the following key steps by using a grocery store as an example:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Identifying Assets<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A grocery store's assets might include employees, a safe, cash registers, and inventory.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Enumerating Entry Points<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A grocery store's entry points might include the front and back doors, windows, the loading dock, and air conditioning units.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Investigating Attacks against Assets using Entry Points<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>One possible attack could target a grocery store's <bpt id="p1">*</bpt>safe<ept id="p1">*</ept> asset through the <bpt id="p2">*</bpt>air conditioning<ept id="p2">*</ept> entry point; the air conditioning unit could be unscrewed to allow the safe to be pulled up through it and out of the store.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Threat modeling is applied throughout <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> and includes the following:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>How the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../includes/tla2sharptla-xaml-md.md)]</ph> parser reads files, maps text to corresponding object model classes, and creates the actual code.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>How a window handle (hWnd) is created, sends messages, and is used for rendering the contents of a window.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>How data binding obtains resources and interacts with the system.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These threat models are important for identifying security design requirements and threat mitigations during the development process.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Source Analysis and Editing Tools</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In addition to the manual security code review elements of the <ph id="ph1">[!INCLUDE[TLA2#tla_sdl](../../../includes/tla2sharptla-sdl-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> team uses several tools for source analysis and associated edits to decrease security vulnerabilities.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A wide range of source tools are used, and include the following:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FXCop<ept id="p1">**</ept>: Finds common security issues in managed code ranging from inheritance rules to code access security usage to how to safely interoperate with unmanaged code.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>FXCop<ept id="p1">](http://www.gotdotnet.com/team/fxcop/)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Prefix/Prefast<ept id="p1">**</ept>: Finds security vulnerabilities and common security issues in unmanaged code such as buffer overruns, format string issues, and error checking.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Banned APIs<ept id="p1">**</ept>: Searches source code to identify accidental usage of functions that are well-known for causing security issues, such as <ph id="ph1">`strcpy`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Once identified, these functions are replaced with alternatives that are more security.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Testing Techniques</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> uses a variety of security testing techniques that include:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Whitebox Testing<ept id="p1">**</ept>: Testers view source code, and then build exploit tests</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Blackbox Testing<ept id="p1">**</ept>: Testers try to find security exploits by examining the API and features, and then try to attack the product.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Regressing Security Issues from other Products<ept id="p1">**</ept>: Where relevant, security issues from related products are tested.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, appropriate variants of approximately sixty security issues for <ph id="ph1">[!INCLUDE[TLA2#tla_ie](../../../includes/tla2sharptla-ie-md.md)]</ph> have been identified and tried for their applicability to <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tools-Based Penetration Testing through File Fuzzing<ept id="p1">**</ept>: File fuzzing is the exploitation of a file reader's input range through a variety of inputs.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>One example in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> where this technique is used is to check for failure in image decoding code.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Critical Code Management</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](../../../includes/tlasharptla-xbapsharpplural-md.md)]</ph>, <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> builds a security sandbox by using <ph id="ph3">[!INCLUDE[TLA2#tla_winfx](../../../includes/tla2sharptla-winfx-md.md)]</ph> support for marking and tracking security-critical code that elevates privileges (see <bpt id="p1">**</bpt>Security-Critical Methodology<ept id="p1">**</ept> in <bpt id="p2">[</bpt>WPF Security Strategy - Platform Security<ept id="p2">](../../../docs/framework/wpf/wpf-security-strategy-platform-security.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Given the high security quality requirements on security critical code, such code receives an additional level of source management control and security audit.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Approximately 5% to 10% of <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> consists of security-critical code, which is reviewed by a dedicated reviewing team.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The source code and check-in process is managed by tracking security critical code and mapping each critical entity (i.e. a method that contains critical code) to its sign off state.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The sign off state includes the names of one or more reviewers.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Each daily build of <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> compares the critical code to that in previous builds to check for unapproved changes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If an engineer modifies critical code without approval from the reviewing team, it is identified and fixed immediately.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This process enables the application and maintenance of an especially high level of scrutiny over <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> sandbox code.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security<ept id="p1">](../../../docs/framework/wpf/security-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](../../../docs/framework/wpf/wpf-partial-trust-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Security Strategy - Platform Security<ept id="p1">](../../../docs/framework/wpf/wpf-security-strategy-platform-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Trustworthy Computing<ept id="p1">](http://www.microsoft.com/mscorp/twc/default.mspx)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Application Threat Modeling<ept id="p1">](http://msdn.microsoft.com/security/securecode/threatmodeling/acetm/)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Guidelines: .NET Framework 2.0<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag2/html/PAGGuidelines0003.asp)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>