<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3fe8fa9e056a7693095ce032c8fb1efee9af45e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ado-net-architecture.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8cde8e202973094a508cef780c7850b7e2ed5a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57736039af08cf87d72c2472440c7b66b922b5e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ADO.NET Architecture | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ADO.NET Architecture</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Data processing has traditionally relied primarily on a connection-based, two-tier model.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As data processing increasingly uses multi-tier architectures, programmers are switching to a disconnected approach to provide better scalability for their applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>ADO.NET Components</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The two main components of <ph id="ph1">[!INCLUDE[ado_orcas_long](../../../../includes/ado-orcas-long-md.md)]</ph> for accessing and manipulating data are the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> data providers and the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>.NET Framework Data Providers</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Providers are components that have been explicitly designed for data manipulation and fast, forward-only, read-only access to data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Connection`</ph> object provides connectivity to a data source.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Command`</ph> object enables access to database commands to return data, modify data, run stored procedures, and send or retrieve parameter information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataReader`</ph> provides a high-performance stream of data from the data source.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Finally, the <ph id="ph1">`DataAdapter`</ph> provides the bridge between the <ph id="ph2">`DataSet`</ph> object and the data source.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataAdapter`</ph> uses <ph id="ph2">`Command`</ph> objects to execute SQL commands at the data source to both load the <ph id="ph3">`DataSet`</ph> with data and reconcile changes that were made to the data in the <ph id="ph4">`DataSet`</ph> back to the data source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Data Providers<ept id="p1">](../../../../docs/framework/data/adonet/data-providers.md)</ept> and <bpt id="p2">[</bpt>Retrieving and Modifying Data in ADO.NET<ept id="p2">](../../../../docs/framework/data/adonet/retrieving-and-modifying-data.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The DataSet</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The ADO.NET <ph id="ph1">`DataSet`</ph> is explicitly designed for data access independent of any data source.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As a result, it can be used with multiple and differing data sources, used with XML data, or used to manage data local to the application.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> contains a collection of one or more <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects consisting of rows and columns of data, and also primary key, foreign key, constraint, and relation information about the data in the <ph id="ph3">`DataTable`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the relationship between a <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> data provider and a <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ADO.Net graphic<ept id="p1">](../../../../docs/framework/data/adonet/media/ado-1-bpuedev11.png "ado_1_bpuedev11")</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>ADO.NET architecture</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Choosing a DataReader or a DataSet</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you decide whether your application should use a <ph id="ph1">`DataReader`</ph> (see <bpt id="p1">[</bpt>Retrieving Data Using a DataReader<ept id="p1">](../../../../docs/framework/data/adonet/retrieving-data-using-a-datareader.md)</ept>) or a <ph id="ph2">`DataSet`</ph> (see <bpt id="p2">[</bpt>DataSets, DataTables, and DataViews<ept id="p2">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>), consider the type of functionality that your application requires.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use a <ph id="ph1">`DataSet`</ph> to do the following:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Cache data locally in your application so that you can manipulate it.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you only need to read the results of a query, the <ph id="ph1">`DataReader`</ph> is the better choice.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Remote data between tiers or from an XML Web service.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Interact with data dynamically such as binding to a Windows Forms control or combining and relating data from multiple sources.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Perform extensive processing on data without requiring an open connection to the data source, which frees the connection to be used by other clients.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you do not require the functionality provided by the <ph id="ph1">`DataSet`</ph>, you can improve the performance of your application by using the <ph id="ph2">`DataReader`</ph> to return your data in a forward-only, read-only manner.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">`DataAdapter`</ph> uses the <ph id="ph2">`DataReader`</ph> to fill the contents of a <ph id="ph3">`DataSet`</ph> (see <bpt id="p1">[</bpt>Populating a DataSet from a DataAdapter<ept id="p1">](../../../../docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>), by using the <ph id="ph4">`DataReader`</ph>, you can boost performance because you will save memory that would be consumed by the <ph id="ph5">`DataSet`</ph>, and avoid the processing that is required to create and fill the contents of the <ph id="ph6">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>LINQ to DataSet</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>LINQ to DataSet provides query capabilities and compile-time type checking over data cached in a DataSet object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It allows you to write queries in one of the .NET Framework development language, such as C# or Visual Basic.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to DataSet<ept id="p1">](../../../../docs/framework/data/adonet/linq-to-dataset.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>LINQ to SQL</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>LINQ to SQL supports queries against an object model that is mapped to the data structures of a relational database without using an intermediate conceptual model.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Each table is represented by a separate class, tightly coupling the object model to the relational database schema.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>LINQ to SQL translates language-integrated queries in the object model into Transact-SQL and sends them to the database for execution.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When the database returns the results, LINQ to SQL translates the results back into objects.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](../../../../docs/framework/data/adonet/sql/linq/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>ADO.NET Entity Framework</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The ADO.NET Entity Framework is designed to enable developers to create data access applications by programming against a conceptual application model instead of programming directly against a relational storage schema.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The goal is to decrease the amount of code and maintenance required for data-oriented applications.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ADO.NET Entity Framework<ept id="p1">](../../../../docs/framework/data/adonet/ef/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>WCF Data Services</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> is used to deploy data services on the Web or an intranet.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The data is structured as entities and relationships according to the specifications of the Entity Data Model.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Data deployed on this model is addressable by standard HTTP protocol.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WCF Data Services 4.5<ept id="p1">](../../../../docs/framework/data/wcf/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>XML and ADO.NET</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> leverages the power of XML to provide disconnected access to data.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> was designed hand-in-hand with the XML classes in the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph>; both are components of a single architecture.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> and the XML classes in the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> converge in the <ph id="ph3">`DataSet`</ph> object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> can be populated with data from an XML source, whether it is a file or an XML stream.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> can be written as World-Wide Web Consortium (W3C) compliant XML that includes its schema as XML schema definition language (XSD) schema, regardless of the source of the data in the <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because of the native serialization format of the <ph id="ph1">`DataSet`</ph> is XML, it is an excellent medium for moving data between tiers, making the <ph id="ph2">`DataSet`</ph> an optimal choice for remoting data and schema context to and from an XML Web service.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Documents and Data<ept id="p1">](../../../../docs/standard/data/xml/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Overview<ept id="p1">](../../../../docs/framework/data/adonet/ado-net-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>