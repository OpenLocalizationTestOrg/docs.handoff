<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b82dfbb4df8d6629e0cbdd20f8a2e7a0e6ae0615</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\network-programming\socket-performance-enhancements-in-version-3-5.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee65807976d3caa7f8d2c43bcade8800755abe22</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2d00d5b4eaa1ad9698baae8cf44c1e163a714ea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Socket Performance Enhancements in Version 3.5 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Socket Performance Enhancements in Version 3.5</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=fullName&gt;</ph> class has been enhanced in Version 3.5 for use by applications that use asynchronous network I/O to achieve the highest performance.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A series of new classes have been added as part of a set of enhancements to the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class that provide an alternative asynchronous pattern that can be used by specialized high-performance socket applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These enhancements were specifically designed for network server applications that require high performance.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An application can use the enhanced asynchronous pattern exclusively, or only in targeted hot areas of their application (when receiving large amounts of data, for example).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Class Enhancements</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The main feature of these enhancements is the avoidance of the repeated allocation and synchronization of objects during high-volume asynchronous socket I/O.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Begin/End design pattern currently implemented by the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class for asynchronous socket I/O requires a <ph id="ph2">&lt;xref:System.IAsyncResult?displayProperty=fullName&gt;</ph> object be allocated for each asynchronous socket operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the new <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class enhancements, asynchronous socket operations are described by reusable <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=fullName&gt;</ph> class objects allocated and maintained by the application.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>High-performance socket applications know best the amount of overlapped socket operations that must be sustained.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The application can create as many of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> objects that it needs.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, if a server application needs to have 15 socket accept operations outstanding at all times to support incoming client connection rates, it can allocate 15 reusable <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> objects in advance for that purpose.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The pattern for performing an asynchronous socket operation with this class consists of the following steps:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Allocate a new <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> context object, or get a free one from an application pool.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Set properties on the context object to the operation about to be performed (the callback delegate method and data buffer, for example).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call the appropriate socket method (xxxAsync) to initiate the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the asynchronous socket method (xxxAsync) returns true in the callback, query the context properties for completion status.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the asynchronous socket method (xxxAsync) returns false in the callback, the operation completed synchronously.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The context properties may be queried for the operation result.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Reuse the context for another operation, put it back in the pool, or discard it.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The lifetime of the new asynchronous socket operation context object is determined by references in the application code and asynchronous I/O references.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is not necessary for the application to retain a reference to an asynchronous socket operation context object after it is submitted as a parameter to one of the asynchronous socket operation methods.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It will remain referenced until the completion callback returns.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However it is advantageous for the application to retain the reference to the context object so that it can be reused for a future asynchronous socket operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Network Programming Samples<ept id="p1">](../../../docs/framework/network-programming/network-programming-samples.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Socket Performance Technology Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=179570)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>