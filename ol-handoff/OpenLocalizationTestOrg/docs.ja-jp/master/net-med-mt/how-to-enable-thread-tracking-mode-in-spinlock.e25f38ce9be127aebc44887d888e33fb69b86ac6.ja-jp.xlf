<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-enable-thread-tracking-mode-in-spinlock.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca2141af3313a4412133f684b94d07e9535ce83e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\threading\how-to-enable-thread-tracking-mode-in-spinlock.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bce9410a4589f9f8aea0ef88f0e10d25c5f6267</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6fd652e596795355902e15e6800f1acc0428f71</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Enable Thread-Tracking Mode in SpinLock | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Enable Thread-Tracking Mode in SpinLock</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Threading.SpinLock?displayProperty=fullName&gt;</ph> is a low-level mutual exclusion lock that you can use for scenarios that have very short wait times.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Threading.SpinLock&gt;</ph> is not re-entrant.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>After a thread enters the lock, it must exit the lock correctly before it can enter again.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Typically, any attempt to re-enter the lock would cause deadlock, and deadlocks can be very difficult to debug.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>As an aid to development, <ph id="ph1">&lt;xref:System.Threading.SpinLock?displayProperty=fullName&gt;</ph> supports a thread-tracking mode that causes an exception to be thrown when a thread attempts to re-enter a lock that it already holds.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This lets you more easily locate the point at which the lock was not exited correctly.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can turn on thread-tracking mode by using the <ph id="ph1">&lt;xref:System.Threading.SpinLock&gt;</ph> constructor that takes a Boolean input parameter, and passing in an argument of <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After you complete the development and testing phases, turn off thread-tracking mode for better performance.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example demonstrates thread-tracking mode.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The lines that correctly exit the lock are commented out to simulate a coding error that causes one of the following results:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the <ph id="ph1">&lt;xref:System.Threading.SpinLock&gt;</ph> was created by using an argument of <ph id="ph2">`true`</ph> (<ph id="ph3">`True`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Deadlock if the <ph id="ph1">&lt;xref:System.Threading.SpinLock&gt;</ph> was created by using an argument of <ph id="ph2">`false`</ph> (<ph id="ph3">`False`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CDS_SpinLock#01<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_Misc/cds_spinlock/cs/spinlockdemo.cs#01)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>CDS_SpinLock#01<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_Misc/cds_spinlock/vb/spinlock_threadtracking.vb#01)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SpinLock<ept id="p1">](../../../docs/standard/threading/spinlock.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>