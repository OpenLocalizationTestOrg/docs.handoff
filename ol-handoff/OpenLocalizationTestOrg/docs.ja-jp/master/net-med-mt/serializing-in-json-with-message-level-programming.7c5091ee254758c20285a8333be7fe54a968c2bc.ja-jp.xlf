<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">919e3194e8247012c44ccd4d5e08a16eaea86674</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\serializing-in-json-with-message-level-programming.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf177f70b61fb495a1bfa410c16d2dd6d160fe6e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32dca865dd8c06aec39a2e5d144bc08aa965f61f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serializing in Json with Message Level Programming | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Serializing in Json with Message Level Programming</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WCF supports serializing data in JSON format.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes how to tell WCF to serialize your types using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typed Message Programming</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> is used when the <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or the <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> is applied to a service operation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Both of these attributes allow you to specify the <ph id="ph1">`RequestFormat`</ph> and <ph id="ph2">`ResponseFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To use JSON for requests and responses set both of these to <ph id="ph1">`WebMessageFormat.Json`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In order to use JSON you must use the <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> which automatically configures the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about WCF serialization, see: <bpt id="p1">[</bpt>Serialization and Deserialization<ept id="p1">](../../../../docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>, <bpt id="p2">[</bpt>Serialization in Windows Communication Foundation<ept id="p2">](http://msdn.microsoft.com/magazine/cc163569.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about JSON and WCF see <bpt id="p1">[</bpt>An Introduction to RESTfull Services with WCF<ept id="p1">](http://msdn.microsoft.com/magazine/dd315413.aspx)</ept>, <bpt id="p2">[</bpt>Creating JSON-enabled WCF Services in .NET 3.5<ept id="p2">](http://www.pluralsight-training.net/community/blogs/fritz/archive/2008/01/31/50121.aspx)</ept>, and <bpt id="p3">[</bpt>Overview of REST in WCF<ept id="p3">](http://msdn.microsoft.com/netframework/dd547388)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using JSON requires use of <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> which do not support SOAP communication.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Services that communicate with the <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> do not support exposing service metadata so you will not be able to use Visual Studioâ€™s Add Service Reference functionality or the svcutil command-line tool to generate a client-side proxy.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information how you can programmatically call services that use <ph id="ph1">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>, see <bpt id="p1">[</bpt>How to Consume REST Services with WCF<ept id="p1">](http://blogs.msdn.com/b/pedram/archive/2008/04/21/how-to-consume-rest-services-with-wcf.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Untyped Message Programming</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When working directly with untyped Message objects, you must explicitly set the properties on the untyped message to serialize it as JSON.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to do this.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AJAX Integration and JSON Support<ept id="p1">](../../../../docs/framework/wcf/feature-details/ajax-integration-and-json-support.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Stand-Alone JSON Serialization<ept id="p1">](../../../../docs/framework/wcf/feature-details/stand-alone-json-serialization.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>JSON Serialization<ept id="p1">](../../../../docs/framework/wcf/samples/json-serialization.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>