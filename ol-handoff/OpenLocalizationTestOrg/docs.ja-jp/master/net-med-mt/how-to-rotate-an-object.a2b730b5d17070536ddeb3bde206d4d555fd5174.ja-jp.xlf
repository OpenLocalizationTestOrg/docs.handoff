<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-rotate-an-object.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfa7fe1bd01f997851d786033688ec4a48daf129</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\how-to-rotate-an-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">984ea4e0d3c0f90acdd9933511ccd6a175bc60d6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e8a764b1841c0536d2324c3bae9536ee79ecb31</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Rotate an Object | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Rotate an Object</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to rotate an object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The example first creates a              <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> and then specifies its              <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform.Angle%2A&gt;</ph> in degrees.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example rotates a              <ph id="ph1">&lt;xref:System.Windows.Shapes.Polyline&gt;</ph> object 45 degrees about its upper-left corner.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The                      <ph id="ph1">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and                      <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> properties of the                      <ph id="ph3">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> specify the point about which the object is rotated.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This center point is expressed in the coordinate space of the element that is transformed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, the rotation is applied to (0,0), which is the upper-left corner of the object to transform.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The next example rotates a                      <ph id="ph1">&lt;xref:System.Windows.Shapes.Polyline&gt;</ph> object clockwise 45 degrees about the point (25,50).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following illustration shows the results of applying a                      <ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph> to the two objects.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>45 degree rotations with different center points<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/wcpsdk-graphicsmm-rotatetransform45degrees.gif "</bpt>wcpsdk_graphicsmm_rotatetransform45degrees<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Two objects that rotate 45 degrees from different rotational centers</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The                      <ph id="ph1">&lt;xref:System.Windows.Shapes.Polyline&gt;</ph> in the previous examples is a                      <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you apply a                      <ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph> to the                      <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> property of a                      <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>, you can use the                      <ph id="ph4">&lt;xref:System.Windows.UIElement.RenderTransformOrigin%2A&gt;</ph> property to specify an origin for every                      <ph id="ph5">&lt;xref:System.Windows.Media.Transform&gt;</ph> that you apply to the element.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the                      <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransformOrigin%2A&gt;</ph> property uses relative coordinates, you can apply a transformation to the center of the element even if you do not know its size.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information and for an example, see                      <bpt id="p1">[</bpt>Specify the Origin of a Transform by Using Relative Values<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/how-to-specify-the-origin-of-a-transform-by-using-relative-values.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For the complete sample, see                      <bpt id="p1">[</bpt>2-D Transforms Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Transforms Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/transforms-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/transformations-how-to-topics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>