<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="entity-sql-quick-reference.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0143a08cdff63c37b4155c39e22cdbcd06521c02</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\entity-sql-quick-reference.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ab0b0cfcc5b2890de5e70c7f2b1cb1275503d27</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2df1cd60bcfbfaeb4e5b03f16e639cbcefd85447</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Entity SQL Quick Reference | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Entity SQL Quick Reference</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides a quick reference to <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> queries.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The queries in this topic are based on the AdventureWorks Sales model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Literals</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>String</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There are Unicode and non-Unicode character string literals.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Unicode strings are prepended with N. For example, <ph id="ph1">`N'hello'`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following is an example of a Non-Unicode string literal:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>hello</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DateTime</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In DateTime literals, both date and time parts are mandatory.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are no default values.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>12/25/2006 1:01:00 AM</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Integer</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Integer literals can be of type Int32 (123), UInt32 (123U), Int64 (123L), and UInt64 (123UL).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Other</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Other literals supported by <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> are Guid, Binary, Float/Double, Decimal, and <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Null literals in <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> are considered to be compatible with every other type in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Type Constructors</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>ROW</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ROW<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md)</ept> constructs an anonymous, structurally-typed (record) value as in: <ph id="ph1">`ROW(1 AS myNumber, ‘Name’ AS myName).`</ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>ProductID</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Adjustable Race</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>879</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>All-Purpose Bike Stand</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>712</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>AWC Logo Cap</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>MULTISET</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MULTISET<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md)</ept> constructs collections, such as:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MULTISET(1,2,2,3)`</ph> <ph id="ph2">`--same as`</ph><ph id="ph3">-</ph><ph id="ph4">`{1,2,2,3}.`</ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ProductID</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ProductNumber</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>…</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>842</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Touring-Panniers, Large</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>PA-T100</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>…</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Object</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Named Type Constructor<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md)</ept> constructs (named) user-defined objects, such as <ph id="ph1">`person("abc", 12)`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>SalesOrderDetailID</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CarrierTrackingNumber</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>OrderQty</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>ProductID</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>4911-403C-98</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>776</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>4911-403C-98</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>777</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>References</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>REF</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>REF<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md)</ept> creates a reference to an entity type instance.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For example, the following query returns references to each Order entity in the Orders entity set:</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The following example uses the property extraction operator (.) to access a property of an entity.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When the property extraction operator is used, the reference is automatically dereferenced.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Adjustable Race</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>All-Purpose Bike Stand</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>AWC Logo Cap</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>DEREF</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DEREF<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md)</ept> dereferences a reference value and produces the result of that dereference.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, the following query produces the Order entities for each Order in the Orders entity set: <ph id="ph1">`SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`</ph>..</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Adjustable Race</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>All-Purpose Bike Stand</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>AWC Logo Cap</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>CREATEREF AND KEY</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CREATEREF<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md)</ept> creates a reference passing a key.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>KEY<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md)</ept> extracts the key portion of an expression with type reference.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>ProductID</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>980</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>365</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>771</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Functions</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Canonical</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The namespace for <bpt id="p1">[</bpt>canonical functions<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md)</ept> is Edm, as in <ph id="ph1">`Edm.Length("string")`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You do not have to specify the namespace unless another namespace is imported that contains a function with the same name as a canonical function.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If two namespaces have the same function, the user should specific the full name.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>NameLen</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>6</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>6</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>5</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Microsoft Provider-Specific</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft provider-specific functions<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)</ept> are in the <ph id="ph1">`SqlServer`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>EmailLen</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>27</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>27</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>26</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>USING<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md)</ept> specifies namespaces used in a query expression.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>aa</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Paging</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Paging can be expressed by declaring a <bpt id="p1">[</bpt>SKIP<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md)</ept> and <bpt id="p2">[</bpt>LIMIT<ept id="p2">](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)</ept> sub-clauses to the <bpt id="p3">[</bpt>ORDER BY<ept id="p3">](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept> clause.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>ID</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>10</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Adina</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>11</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Agcaoili</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>12</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Aguilar</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Grouping</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GROUPING BY<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md)</ept> specifies groups into which objects returned by a query (<bpt id="p2">[</bpt>SELECT<ept id="p2">](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept>) expression are to be placed.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>name</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>LL Mountain Seat Assembly</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>ML Mountain Seat Assembly</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>HL Mountain Seat Assembly</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Navigation</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The relationship navigation operator allows you to navigate over the relationship from one entity (from end) to another (to end).</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NAVIGATE<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md)</ept> takes the relationship type qualified as <ph id="ph1">\&lt;</ph>namespace&gt;.<ph id="ph2">\&lt;</ph>relationship type name&gt;.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Navigate returns Ref<ph id="ph1">\&lt;</ph>T&gt; if the cardinality of the to end is 1.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>If the cardinality of the to end is n, the Collection&lt;Ref<ph id="ph1">\&lt;</ph>T&gt;&gt; will be returned.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>AddressID</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>SELECT VALUE AND SELECT</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>SELECT VALUE</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> provides the SELECT VALUE clause to skip the implicit row construction.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Only one item can be specified in a SELECT VALUE clause.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: <ph id="ph1">`SELECT VALUE a`</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Adjustable Race</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>All-Purpose Bike Stand</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>AWC Logo Cap</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>SELECT</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> also provides the row constructor to construct arbitrary rows.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>SELECT takes one or more elements in the projection and results in a data record with fields, for example: <ph id="ph1">`SELECT a, b, c`</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>SELECT p.Name, p.ProductID FROM AdventureWorksEntities.Product as p Output:</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>ProductID</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Adjustable Race</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>All-Purpose Bike Stand</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>879</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>AWC Logo Cap</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>712</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>...</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>CASE EXPRESSION</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>case expression<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md)</ept> evaluates a set of Boolean expressions to determine the result.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Example:</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Output:</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>TRUE</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Reference<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Overview<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>