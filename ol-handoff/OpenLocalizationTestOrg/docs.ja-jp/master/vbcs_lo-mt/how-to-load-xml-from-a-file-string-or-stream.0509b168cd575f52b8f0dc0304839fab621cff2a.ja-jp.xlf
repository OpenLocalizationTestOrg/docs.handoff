<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe0643beacd29fba5cf7e78f617bc3ae0733f0ba</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\how-to-load-xml-from-a-file-string-or-stream.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28b1416d5d058738d073ad553048178b6df5c48d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06c35d3fdc0bb8dd4cbd02f40f86f5d643e1a758</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Load XML from a File, String, or Stream (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Load XML from a File, String, or Stream (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can create <bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept> and populate them with the contents from an external source such as a file, a string, or a stream by using several methods.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These methods are shown in the following examples.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To load XML from a file</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To populate an XML literal such as an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object from a file, use the <ph id="ph3">`Load`</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This method can take a file path, text stream, or XML stream as input.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%28System.String%29&gt;</ph> method to populate an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object with XML from a text file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#43<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-load-xml-from-a-file-string-or-stream_1.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To load XML from a string</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To populate an XML literal such as an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object from a string, you can use the <ph id="ph3">`Parse`</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method to populate an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object with XML from a string.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#47<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-load-xml-from-a-file-string-or-stream_2.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To load XML from a stream</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To populate an XML literal such as an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object from a stream, you can use the <ph id="ph3">`Load`</ph> method or the <ph id="ph4">&lt;xref:System.Xml.Linq.XNode.ReadFrom%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.ReadFrom%2A&gt;</ph> method to populate an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object with XML from an XML stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#46<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-load-xml-from-a-file-string-or-stream_3.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XNode.ReadFrom%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulating XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>