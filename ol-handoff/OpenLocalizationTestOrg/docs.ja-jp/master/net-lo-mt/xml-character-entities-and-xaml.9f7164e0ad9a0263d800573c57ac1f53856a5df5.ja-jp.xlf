<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa802d5eb1952d3db612fc13c44d53b68dc45bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\xml-character-entities-and-xaml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d64e7a8f08e934350fb5697334bf2600020fed04</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a4dd62295fb221568c463cf7412d601f4d7ee29</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>title: "XML Character Entities and XAML | Microsoft Docs" ms.custom: "" ms.date: "03/30/2017" ms.prod: ".net-framework" ms.reviewer: "" ms.suite: "" ms.technology:</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>"dotnet-wpf" ms.tgt_pltfrm: "" ms.topic: "article" f1_keywords:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>"&amp;"</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>"&amp;amp"</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>"&amp;gt"</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>"&amp;lt" helpviewer_keywords:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>"XAML [XAML Services], special characters"</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>"ampersand (&amp;) [XAML Services]"</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>"special characters [XAML Services]"</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>"apostrophe (') [XAML Services]"</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>"greater-than (&gt;) character [XAML Services]"</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>"XAML [XAML Services], quotation mark (")"</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>"XAML [XAML Services], apostrophe (')"</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>"&amp; (ampersand) [XAML Services]"</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>"XAML [XAML Services], &amp; (ampersand)"</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>"XAML [XAML Services], escape sequence"</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>"quotation mark (") [XAML Services]"</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>"less-than (&lt;) character [XAML Services]" ms.assetid: 6896d0ce-74f7-420a-9ab4-de9bbf390e8d caps.latest.revision: 23 author: "wadepickett" ms.author: "wpickett" manager: "wpickett"</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>XML Character Entities and XAML</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>XAML uses character entities defined in XML for special characters.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This topic describes some specific character entities and general considerations for other XML concepts in XAML.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Character Entities and Escaping Issues That Are Unique to XAML</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>XAML markup typically uses the same character entities and escape sequences that are defined in XML.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The main exception is that braces ({ and }) have significance in XAML because these characters inform a XAML processor that a character sequence enclosed by braces must be interpreted as a markup extension.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](../../../docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, you can still display the braces as literal characters by using an escape sequence that is particular to XAML instead of XML.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see {} Escape Sequence - Markup Extension.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Note that a backslash (<ph id="ph1">\\</ph>) does not require an escape sequence when it is handled as a string.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>XML Character Entities</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>As mentioned previously, most character entities and escape sequences that are typically used to write XAML markup are defined by XML.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This topic does not provide the complete list of these entities; a detailed reference for the entities can be found in external documentation, such as in XML specifications.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, for convenience, this topic lists some of the specific XML character entities that are typically used in XAML markup.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Character</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Notes</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>&amp; (ampersand)</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Must be used both for attribute values and for content of an element.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&gt; (greater-than character)</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Must be used for an attribute value, but &gt; is acceptable as the content of an element as long as &lt; does not precede it.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&lt; (less-than character)</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Must be used for an attribute value, but <ph id="ph1">\&lt;</ph> is acceptable as the content of an element as long as &gt; does not follow it.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>" (straight quotation mark)</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Must be used for an attribute value, but a straight quotation mark (") is acceptable as the content of an element.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note that attribute values may be enclosed either by a single straight quotation mark (') or by a straight quotation mark ("); whichever character appears first defines the attribute value enclosure, and the alternative quote can then be used as a literal within the value.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>' (single straight quotation mark)</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Must be used for an attribute value, but a single straight quotation mark (') is acceptable as the content of an element.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that attribute values may be enclosed either by a single straight quotation mark (') or by a straight quotation mark ("); whichever character appears first defines the attribute value enclosure, and the alternative quote can then be used as a literal within the value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>(numeric character mappings)</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;#</ph><bpt id="p1">*</bpt>[integer]<ept id="p1">*</ept>; or &amp;#x<bpt id="p2">*</bpt>[hex]<ept id="p2">*</ept>;</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>XAML supports numeric character mappings into the encoding that is active.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>(nonbreaking space)</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>160; (assuming UTF-8 encoding)</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For flow document elements, or elements that take text such as the WPF <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, nonbreaking spaces are not normalized out of the markup, even for <ph id="ph2">`xml:space="default"`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>Whitespace Processing in XAML<ept id="p1">](../../../docs/framework/xaml-services/whitespace-processing-in-xaml.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>XML Comment Format</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>XAML uses the XML comment format: the start of the comment is <ph id="ph1">`&lt;!--`</ph>, the end of comment is <ph id="ph2">`--&gt;,`</ph> and the sequence <ph id="ph3">`--`</ph> must not occur within the comment.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>XML Processing Instructions</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>XAML handles XML processing instructions according to XML specifications, which state that the instructions must be passed through.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>XAML processing in .NET Framework XAML Services  does not use any processing instructions.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Other existing frameworks that use XAML also do not use processing instructions from XAML.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](../../../docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Markup Extensions and WPF XAML<ept id="p1">](../../../docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XamlName Grammar<ept id="p1">](../../../docs/framework/xaml-services/xamlname-grammar.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Whitespace Processing in XAML<ept id="p1">](../../../docs/framework/xaml-services/whitespace-processing-in-xaml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>