<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ecccb03bc28da51a580b790b5ba8dd594bb7f18</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\getting-started\library-with-visual-studio.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53cf372ab0b4c01ba9b8775566204f00363a22c9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6c41984e80d734cd936163029c9b51faa803cd2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Building a class library with C# and .NET Core in Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to build a class library written in C# using Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET Core, .NET Standard class library, Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Building a class library with C# and .NET Core in Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>class library<ept id="p1">*</ept> defines types and methods that are called by an application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A class library developed using .NET Core supports the .NET Standard Library, which allows your library to be called by any .NET platform that supports that version of the .NET Standard Library.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you finish your class library, you can decide whether you want to distribute it as a third-party component or whether you want to include it as a bundled component with one or more applications.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For a list of the .NET Standard versions and the platforms they support, see <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../../standard/library.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this topic, you'll create a simple utility library that contains a single string-handling method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You'll implement it as an <bpt id="p1">[</bpt>extension method<ept id="p1">](../../csharp/programming-guide/classes-and-structs/extension-methods.md)</ept> so that you can call it as if it were a member of the <ph id="ph1">@System.String</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating a class library solution</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Start by creating a solution for your class library project and its related projects.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A Visual Studio Solution just serves as a container for one or more projects.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To create the solution:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On the Visual Studio menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, expand the <bpt id="p2">**</bpt>Other Project Types<ept id="p2">**</ept> node, and select <bpt id="p3">**</bpt>Visual Studio Solutions<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name the solution "ClassLibraryProjects" and select the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>New project dialog</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creating the class library project</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create your class library project:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click on the <bpt id="p2">**</bpt>ClassLibraryProjects<ept id="p2">**</ept> solution file and from the context menu, select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>New Project<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> dialog, select the <bpt id="p2">**</bpt>.NET Core<ept id="p2">**</ept> node followed by the <bpt id="p3">**</bpt>Class Library (.NET Core)<ept id="p3">**</ept> project template.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, enter "StringLibrary" as the name of the project.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the class library project.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add New Project dialog</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Visual Studio application window showing the default class library template code</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Replace the code in the code window with the following code and save the file:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!CODE-csharp</bpt><bpt id="p2">[</bpt>ClassLib#1<ept id="p2">](../../../samples/snippets/csharp/getting_started/with_visual_studio_2017/classlib.cs#1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The class library, <ph id="ph1">`UtilityLibraries.StringLibrary`</ph>, contains a method named <ph id="ph2">`StartsWithUpper`</ph>, which returns a <ph id="ph3">@System.Boolean</ph> value that indicates whether the current string instance begins with an uppercase character.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Unicode standard distinguishes uppercase characters from lowercase characters.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In .NET Core, the <bpt id="p1">[</bpt><ph id="ph1">`Char.IsUpper`</ph><ept id="p1">](xref:System.Char.IsUpper(System.Char))</ept> method returns <ph id="ph2">`true`</ph> if a character is uppercase.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>On the menu bar, select <bpt id="p1">**</bpt>Build<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The project should compile without error.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Output pane showing that the build succeeded</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next step</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You've successfully built the library.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because you haven't called any of its methods, you don't know whether it works as expected.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The next step in developing your library is to test it by using a <bpt id="p1">[</bpt>C# Unit Test Project<ept id="p1">](testing-library-with-visual-studio.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>