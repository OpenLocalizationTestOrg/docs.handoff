<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3ed6572d0c8f64f89f77527aa21df454b30982c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\getting-started\debugging-with-visual-studio.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb1ed1cabf2aabe10be1555558dbf0133f0043fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b96098fd62f7e533fbbd95ea5583857fba30114</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Debugging your C# Hello World application with Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to debug a Hello World app written in C# with Visual Studio 2017.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET Core, .NET Core console application, .NET Core debugging</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Debugging your C# Hello World application with Visual Studio 2017</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>So far, you've followed the steps in <bpt id="p1">[</bpt>Building a C# Hello World Application with .NET Core in Visual Studio 2017<ept id="p1">](.\with-visual-studio.md)</ept> to create and run a simple console application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Once you've written and compiled your application, you can begin testing it.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Visual Studio includes a comprehensive set of debugging tools that you can use when testing and troubleshooting your application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Debugging in Debug mode</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Debug<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Release<ept id="p2">*</ept> are two of Visual Studio's default build configurations.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The current build configuration is shown on the toolbar.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following toolbar image shows that Visual Studio is configured to compile your application in <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> mode.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Visual Studio toolbar</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You should always begin by testing your program in Debug mode.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Debug mode turns off most compiler optimizations and provides richer information during the build process.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Setting a breakpoint</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Run your program in Debug mode and try a few debugging features:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>breakpoint<ept id="p1">*</ept> temporarily interrupts the execution of the application <bpt id="p2">*</bpt>before<ept id="p2">*</ept> the line with the breakpoint is executed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Set a breakpoint on the line that reads <ph id="ph1">`Console.WriteLine("\nHello, {0}, on {1:d} at {1:t}", name, date);`</ph> by clicking in the left margin of the code window on that line or by choosing the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph2"> &gt; </ph><bpt id="p2">**</bpt>Toggle Breakpoint<ept id="p2">**</ept> menu item with the line selected.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As the following figure shows, Visual Studio indicates the line on which the breakpoint is set by highlighting it and displaying a red circle in its left margin.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Visual Studio Program window with breakpoint set</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Run the program in Debug mode by selecting the <bpt id="p1">**</bpt>HelloWorld<ept id="p1">**</ept> button with the green arrow on the toolbar, pressing F5, or choosing <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Start Debugging<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Enter a string in the console window when the program prompts for a name and press Enter.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Program execution stops when it reaches the breakpoint and before the <ph id="ph1">`Console.WriteLine`</ph> method executes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> window displays the values of variables that are used around the current line.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Locals<ept id="p1">**</ept> window displays the values of variables that are defined in the currently executing method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Visual Studio application window</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can change the value of the variables to see how it affects your program.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept> is not visible, display it by choosing the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Windows<ept id="p3">**</ept><ph id="ph2"> &gt; </ph><bpt id="p4">**</bpt>Immediate<ept id="p4">**</ept> menu item.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept> lets you interact with the application you're debugging.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can interactively change the values of variables.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Enter <ph id="ph1">`name = "Gracie"`</ph> in the <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept> and press the Enter key.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Enter <ph id="ph1">`date = new DateTime(2016,11,01,11,59,00)`</ph> in the <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept> and press the Enter key.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept> displays the value of the string variable and the properties of the <ph id="ph1">@System.DateTime</ph> value.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In addition, the value of the variables is updated in the <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Locals<ept id="p2">**</ept> windows.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Autos window and Immediate Window</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Continue program execution by selecting the <bpt id="p1">**</bpt>Continue<ept id="p1">**</ept> button in the toolbar or by selecting the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Continue<ept id="p3">**</ept> menu item.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The values displayed in the console window correspond to the changes you made in the <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Console window showing the typed value Jack at the What is your name? prompt followed by Hello Gracie on 11/1/2016 at 11:59am</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Press any key to exit the application and end Debug mode.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Setting a conditional breakpoint</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Your program displays the string that the user enters.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>What happens if the user doesn't enter anything?</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can test this with a useful debugging feature, the <bpt id="p1">*</bpt>conditional breakpoint<ept id="p1">*</ept>, which breaks program execution when one or more conditions are met.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To set a conditional breakpoint and test what happens when the user fails to enter a string, do the following:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Right-click on the red dot that represents the breakpoint.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>On the context menu, select <bpt id="p1">**</bpt>Conditions<ept id="p1">**</ept> to open the <bpt id="p2">**</bpt>Breakpoint Settings<ept id="p2">**</ept> dialog.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Check the box for <bpt id="p1">**</bpt>Conditions<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Breakpoint settings panel</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>Conditional Expression<ept id="p1">**</ept> replace "e.g. x == 5" with the following:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You're testing for a code condition.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also specify a <bpt id="p1">*</bpt>hit count<ept id="p1">*</ept>, which interrupts program execution before a statement is executed a specified number of times, or a <bpt id="p2">*</bpt>filter condition<ept id="p2">*</ept>, which interrupts program execution based on such attributes as a thread identifier, process name, or thread name.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button to close the dialog.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Run the program in Debug mode.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the console window, press the Enter key when prompted to enter your name.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Because the condition we specified has been satisfied, <ph id="ph1">`name`</ph> is either <ph id="ph2">`null`</ph> or <bpt id="p1">[</bpt><ph id="ph3">`String.Empty`</ph><ept id="p1">](xref:System.String.Empty)</ept>, program execution stops when it reaches the breakpoint and before the <ph id="ph4">`Console.WriteLine`</ph> method executes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Locals<ept id="p1">**</ept> window, which shows the values of variables that are local to the currently executing method, which is the <ph id="ph1">`Main`</ph> method in your program.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Observe that the value of the <ph id="ph1">`name`</ph> variable is <ph id="ph2">`""`</ph>, or <bpt id="p1">[</bpt><ph id="ph3">`String.Empty`</ph><ept id="p1">](xref:System.String.Empty)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Confirm the value is an empty string by entering the following statement in the <bpt id="p1">**</bpt>Immediate Window<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The result is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Immediate Window returning a value of true after the statement is executed</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Continue<ept id="p1">**</ept> button on the toolbar to continue program execution.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Press any key to close the console window and exit Debug mode.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Clear the breakpoint by clicking on the dot in the left margin of the code window or by choosing the <bpt id="p1">**</bpt>Debug &gt; Toggle Breakpoint<ept id="p1">**</ept> menu item with the row selected.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Stepping through a program</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Visual Studio also allows you to step line by line through a program and monitor its execution.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Ordinarily, you'd set a breakpoint and use this feature to follow program flow though a small part of your program code.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Since your program is small, you can step through the entire program by doing the following:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Into<ept id="p2">**</ept> or press the F11 key.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Visual Studio highlights and displays an arrow beside the next line of execution.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Visual Studio window</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>At this point, the <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> window shows that your program has defined only one variable, <ph id="ph1">`args`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Because you haven't passed any command-line arguments to the program, its value is an empty string array.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In addition, Visual Studio has opened a blank console window.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Into<ept id="p2">**</ept> or press the F11 key.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Visual Studio now highlights the next line of execution.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>As the figure shows, it has taken less than one millisecond to execute the code between the last statement and this one.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`args`</ph> remains the only declared variable, and the console window remains blank.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Visual Studio window</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Into<ept id="p2">**</ept> or press the F11 key.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Visual Studio highlights the statement that includes the <ph id="ph1">`name`</ph> variable assignment.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> window shows that <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph>, and the console window displays the string "What is your name?".</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Respond to the prompt by entering a string in the console window and pressing Enter.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The console is unresponsive, and the string you enter isn't displayed in the console window, but the <bpt id="p1">[</bpt><ph id="ph1">`Console.ReadLine`</ph><ept id="p1">](xref:System.Console.ReadLine)</ept> method will nevertheless capture your input.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Into<ept id="p2">**</ept> or press the F11 key.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Visual Studio highlights the statement that includes the <ph id="ph1">`date`</ph> variable assignment.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> window shows the <bpt id="p2">[</bpt><ph id="ph1">`DateTime.Now`</ph><ept id="p2">](xref:System.DateTime.Now)</ept> property value and the value returned by the call to the <bpt id="p3">[</bpt><ph id="ph2">`Console.ReadLine`</ph><ept id="p3">](xref:System.Console.ReadLine)</ept> method.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The console window also displays the string entered when the console prompted for input.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Into<ept id="p2">**</ept> or press the F11 key.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> window shows the value of the <ph id="ph1">`date`</ph> variable after the assignment from the <bpt id="p2">[</bpt><ph id="ph2">`DateTime.Now`</ph><ept id="p2">](xref:System.DateTime.Now)</ept> property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The console window is unchanged.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Into<ept id="p2">**</ept> or press the F11 key.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Visual Studio calls the <bpt id="p1">[</bpt><ph id="ph1">`Console.WriteLine`</ph><ept id="p1">](xref:System.Console.WriteLine(System.String,System.Object,System.Object))</ept> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The values of the <ph id="ph1">`date`</ph> and <ph id="ph2">`name`</ph> variables appear in the <bpt id="p1">**</bpt>Autos<ept id="p1">**</ept> window, and the console window displays the formatted string.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Step Out<ept id="p2">**</ept> or press Shift and the F11 key.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This stops step-by-step execution.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The console window displays a message and waits for you to press a key.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Press any key to close the console window and exit Debug mode.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Building a Release version</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Once you've tested the Debug build of your application, you should also compile and test the Release version.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The Release version incorporates compiler optimizations that can sometimes negatively affect the behavior of an application.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For example, compiler optimizations that are designed to improve performance can create race conditions in asynchronous or multithreaded applications.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To build and test the Release version of your console application, change the build configuration on the toolbar from <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Release<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Image</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you press F5 or choose <bpt id="p1">**</bpt>Build Solution<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> menu, Visual Studio compiles the Release version of your console application.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can test it as you did the Debug version of the application.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Once you've finished debugging your application, the next step is to publish a deployable version of your application.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For information on how to do this, see <bpt id="p1">[</bpt>Publishing the C# Hello World application with Visual Studio 2017<ept id="p1">](./publishing-with-visual-studio.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>