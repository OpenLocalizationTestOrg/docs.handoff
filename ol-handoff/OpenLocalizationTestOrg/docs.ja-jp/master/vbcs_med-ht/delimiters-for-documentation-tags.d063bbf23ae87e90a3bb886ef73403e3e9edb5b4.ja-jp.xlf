<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba3b38a8bce9f5b49ef863acfae04bc2a39c052a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\xmldoc\delimiters-for-documentation-tags.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">862ca4699fc5fee29d9e2b5ac8f3ce4d3347fc1c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08faeb985d59eaf952c72487222e66e8fd7ebe96</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Delimiters for Documentation Tags (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Delimiters for Documentation Tags (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The use of XML doc comments requires delimiters, which indicate to the compiler where a documentation comment begins and ends.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use the following kinds of delimiters with the XML documentation tags:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Single-line delimiter.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is the form that is shown in documentation examples and used by the Visual C# project templates.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If there is a white space character following the delimiter, that character is not included in the XML output.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Visual Studio IDE has a feature called Smart Comment Editing that automatically inserts the <ph id="ph1">\&lt;</ph>summary&gt; and <ph id="ph2">\&lt;</ph>/summary&gt; tags and moves your cursor within these tags after you type the <ph id="ph3">`///`</ph> delimiter in the Code Editor.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Access this feature from the <bpt id="p1">[</bpt>Options, Text Editor, C#, Formatting<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/options-text-editor-csharp-formatting)</ept> in your project property pages.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Multiline delimiters.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are some formatting rules to follow when you use the <ph id="ph1">`/** */`</ph> delimiters.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the line that contains the <ph id="ph1">`/**`</ph> delimiter, if the remainder of the line is white space, the line is not processed for comments.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the first character after the <ph id="ph1">`/**`</ph> delimiter is white space, that white space character is ignored and the rest of the line is processed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Otherwise, the entire text of the line after the <ph id="ph1">`/**`</ph> delimiter is processed as part of the comment.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On the line that contains the <ph id="ph1">`*/`</ph> delimiter, if there is only white space up to the <ph id="ph2">`*/`</ph> delimiter, that line is ignored.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Otherwise, the text on the line up to the <ph id="ph1">`*/`</ph> delimiter is processed as part of the comment, subject to the pattern-matching rules described in the following bullet.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For the lines after the one that begins with the <ph id="ph1">`/**`</ph> delimiter, the compiler looks for a common pattern at the beginning of each line.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The pattern can consist of optional white space and an asterisk (<ph id="ph1">`*`</ph>), followed by more optional white space.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the compiler finds a common pattern at the beginning of each line that does not begin with the <ph id="ph1">`/**`</ph> delimiter or the <ph id="ph2">`*/`</ph> delimiter, it ignores that pattern for each line.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following examples illustrate these rules.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The only part of the following comment that will be processed is the line that begins with <ph id="ph1">`&lt;summary&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The three tag formats produce the same comments.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The compiler identifies a common pattern of " * " at the beginning of the second and third lines.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The pattern is not included in the output.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The compiler finds no common pattern in the following comment because the second character on the third line is not an asterisk.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Therefore, all text on the second and third lines is processed as part of the comment.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The compiler finds no pattern in the following comment for two reasons.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>First, the number of spaces before the asterisk is not consistent.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Second, the fifth line begins with a tab, which does not match spaces.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Therefore, all text from lines two through five is processed as part of the comment.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Documentation Comments<ept id="p1">](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/doc (C# Compiler Options)<ept id="p1">](../../../csharp/language-reference/compiler-options/doc-compiler-option.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Documentation Comments<ept id="p1">](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>