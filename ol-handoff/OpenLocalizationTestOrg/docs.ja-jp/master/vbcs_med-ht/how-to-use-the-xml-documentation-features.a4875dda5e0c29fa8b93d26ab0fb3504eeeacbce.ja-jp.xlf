<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4e74e2da4a5f8ba0a9964a5eff4f2a492b8981f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\xmldoc\how-to-use-the-xml-documentation-features.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0484c63f9afbb95dbd12a3581b1158b32e4f33f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05e6cb563b9e56657fd35038564834728d9ad160</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Use the XML Documentation Features (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use the XML Documentation Features (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following sample provides a basic overview of a type that has been documented.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideDocComments#15<ept id="p2">](../../../csharp/programming-guide/xmldoc/codesnippet/CSharp/how-to-use-the-xml-documentation-features_1.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>// This .xml file was generated with the previous code sample.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>?xml version="1.0"?&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>doc&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>assembly&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>name&gt;xmlsample<ph id="ph2">\&lt;</ph>/name&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/assembly&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>members&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="T:SomeClass"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Class level summary documentation goes here.<ph id="ph1">\&lt;</ph>/summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>remarks&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Longer comments can be associated with a type or member<ept id="p1">**</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>through the remarks tag<ph id="ph1">\&lt;</ph>/remarks&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="F:SomeClass.m_Name"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Store for the name property<ph id="ph1">\&lt;</ph>/summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="M:SomeClass.#ctor"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;The class constructor.<ph id="ph2">\&lt;</ph>/summary&gt;<ept id="p1">**</ept><ph id="ph3"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="M:SomeClass.SomeMethod(System.String)"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Description for SomeMethod.<ph id="ph1">\&lt;</ph>/summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>param name="s"&gt; Parameter description for s goes here<ph id="ph2">\&lt;</ph>/param&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>seealso cref="T:System.String"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>You can use the cref attribute on any tag to reference a type or member<ept id="p1">**</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>and the compiler will check that the reference exists. <ph id="ph1">\&lt;</ph>/seealso&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="M:SomeClass.SomeOtherMethod"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Some other method. <ph id="ph1">\&lt;</ph>/summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>returns&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Return results are described through the returns tag.<ph id="ph1">\&lt;</ph>/returns&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>seealso cref="M:SomeClass.SomeMethod(System.String)"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Notice the use of the cref attribute to reference a specific method <ph id="ph1">\&lt;</ph>/seealso&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="M:SomeClass.Main(System.String[])"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>The entry point for the application.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>param name="args"&gt; A list of command line arguments<ph id="ph2">\&lt;</ph>/param&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>member name="P:SomeClass.Name"&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>Name property <ph id="ph1">\&lt;</ph>/summary&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>value&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>A value tag is used to describe the property value<ph id="ph1">\&lt;</ph>/value&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/member&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt><ph id="ph1">\&lt;</ph>/members&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>/doc&gt;<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To compile the example, type the following command line:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This will create the XML file XMLsample.xml, which you can view in your browser or by using the TYPE command.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>XML documentation starts with ///.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you create a new project, the wizards put some starter /// lines in for you.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The processing of these comments has some restrictions:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The documentation must be well-formed XML.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the XML is not well-formed, a warning is generated and the documentation file will contain a comment that says that an error was encountered.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Developers are free to create their own set of tags.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>There is a recommended set of tags (see the Further Reading section).</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Some of the recommended tags have special meanings:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>param&gt; tag is used to describe parameters.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If used, the compiler will verify that the parameter exists and that all parameters are described in the documentation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the verification failed, the compiler issues a warning.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`cref`</ph> attribute can be attached to any tag to provide a reference to a code element.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The compiler will verify that this code element exists.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the verification failed, the compiler issues a warning.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The compiler respects any <ph id="ph1">`using`</ph> statements when it looks for a type described in the <ph id="ph2">`cref`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>summary&gt; tag is used by IntelliSense inside Visual Studio to display additional information about a type or member.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The XML file does not provide full information about the type and members (for example, it does not contain any type information).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To get full information about a type or member, the documentation file must be used together with reflection on the actual type or member.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/doc (C# Compiler Options)<ept id="p1">](../../../csharp/language-reference/compiler-options/doc-compiler-option.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Documentation Comments<ept id="p1">](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>